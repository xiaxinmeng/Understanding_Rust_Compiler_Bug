{"url": "https://api.github.com/repos/rust-lang/rust/issues/14844", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/14844/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/14844/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/14844/events", "html_url": "https://github.com/rust-lang/rust/issues/14844", "id": 35577076, "node_id": "MDU6SXNzdWUzNTU3NzA3Ng==", "number": 14844, "title": "suggest binding site when issuing \"try using a local type parameter instead\" err msg", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 693665463, "node_id": "MDU6TGFiZWw2OTM2NjU0NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-diagnostics", "name": "WG-diagnostics", "color": "c2e0c6", "default": false, "description": "Working group: diagnostics"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-06-12T11:53:41Z", "updated_at": "2018-03-10T13:31:08Z", "closed_at": "2018-03-10T13:31:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "UPDATE: [Mentoring instructions below.](https://github.com/rust-lang/rust/issues/14844#issuecomment-331316573)\r\n\r\n--\r\n\r\nHere is some code:\r\n\r\n``` rust\r\npub trait Bar { fn m(&self); }\r\n\r\npub fn foo<T>() {\r\n    struct S<T>;\r\n    impl Bar for S<T> {\r\n        fn m(&self) { println!(\"Hello World\"); }\r\n    }\r\n    let s = S::<T>;\r\n    s.m();\r\n}\r\n\r\npub fn main() {\r\n    foo::<int>();\r\n}\r\n```\r\n\r\nHere is a transcript of a compilation attempt:\r\n\r\n```\r\n% rustc /tmp/bar.rs\r\nerror: can't use type parameters from outer function in the substitution of `foo::S<T>`; try using a local type parameter instead\r\n/tmp/bar.rs:9:7: 9:10 error: type `foo::S<T>` does not implement any method in scope named `m`\r\n/tmp/bar.rs:9     s.m();\r\n                    ^~~\r\nerror: can't use type parameters from outer function in the substitution of `foo::S<T>`; try using a local type parameter instead\r\nerror: can't use type parameters from outer function in the substitution of `fn(&foo::S<T>)`; try using a local type parameter instead\r\nerror: can't use type parameters from outer function in the substitution of `fn(&foo::S<T>)`; try using a local type parameter instead\r\nerror: can't use type parameters from outer function in the substitution of `foo::S<T>`; try using a local type parameter instead\r\nerror: can't use type parameters from outer function in the substitution of `foo::S<T>`; try using a local type parameter instead\r\nerror: can't use type parameters from outer function in the substitution of `foo::S<T>`; try using a local type parameter instead\r\nerror: can't use type parameters from outer function in the substitution of `foo::S<T>`; try using a local type parameter instead\r\nerror: can't use type parameters from outer function in the substitution of `foo::S<T>`; try using a local type parameter instead\r\nerror: can't use type parameters from outer function in the substitution of `foo::S<T>`; try using a local type parameter instead\r\nerror: aborting due to 11 previous errors\r\n% \r\n```\r\n\r\nFirst off, maybe we should be aborting the compilation a little sooner rather than emitting so many seemingly redundant error messages.\r\n\r\nSecond, I was scratching my head for a little while because I was saying to myself \"`T` _is_ a local type parameter\".  Of course, it is not local _enough_; one needs to change the `impl Bar for S<T>` to `impl<T> Bar for S<T>`.\r\n\r\nSo, I think it would be good if the error message suggested this; e.g.:\r\n\r\n> error: can't use type parameters from outer function in the substitution of `foo::S<T>`; try adding a local type parameter to the `impl`\r\n\r\nor\r\n\r\n> error: can't use type parameters from outer function in the substitution of `foo::S<T>`; try using a local type parameter like `impl<T> Bar for ...`\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/14844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/14844/timeline", "performed_via_github_app": null, "state_reason": "completed"}