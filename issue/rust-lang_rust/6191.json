{"url": "https://api.github.com/repos/rust-lang/rust/issues/6191", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/6191/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/6191/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/6191/events", "html_url": "https://github.com/rust-lang/rust/issues/6191", "id": 13899321, "node_id": "MDU6SXNzdWUxMzg5OTMyMQ==", "number": 6191, "title": "rustc should not infinite-loop on nested data type", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-05-02T16:33:01Z", "updated_at": "2013-07-17T22:39:35Z", "closed_at": "2013-07-17T22:39:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Some languages support \"nested data types\" (aka non-uniform, aka non-regular).  What this basically means are recursive structures `S<A>` where the recursive references to S within its definition do not take the form `S<A>`, but instead take the form `S<T<A>>` for some non-trivial type constructor T.\n\nSo, as an example:\n\n```\nenum Seq<A> {\nNil,\nCons{hd: A, tl:~Seq<(A,A)>}\n}\n\nimpl<A> Seq<A> {\nfn len(&self) -> int {\nmatch self {\n&Nil => 0,\n&Cons{ hd: x, tl: ref s } => 1 + 2 * s.len()\n}\n}\n}\n\nfn main() {\nio::println(fmt!(\"Hello World\"));\n}\n```\n\nBut right now rustc seems to infinite loop on the above.  I need to investigate more.\n", "closed_by": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/6191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/6191/timeline", "performed_via_github_app": null, "state_reason": "completed"}