{"url": "https://api.github.com/repos/rust-lang/rust/issues/39283", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39283/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39283/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39283/events", "html_url": "https://github.com/rust-lang/rust/issues/39283", "id": 202976897, "node_id": "MDU6SXNzdWUyMDI5NzY4OTc=", "number": 39283, "title": "Tracking issue for removing temporary lifetime extension by borrow hint", "user": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-01-25T00:03:45Z", "updated_at": "2017-06-03T15:40:42Z", "closed_at": "2017-06-03T15:40:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "UPDATE: [Mentoring instructions for removing the various bits of dead code found below.](https://github.com/rust-lang/rust/issues/39283#issuecomment-304305780)\r\n\r\n------\r\n\r\nThis is the **summary issue** for the removal of temporary lifetime extension by borrow hint.\r\n\r\n### What is this issue about\r\n\r\nOne issue that languages with deterministic destruction have to face is the lifetime of expression temporaries. To avoid confusion, temporaries have to be destroyed in some definite time, and temporaries living for too short or too long a time can cause subtle errors. The Rust rules for that - nikomatsakis/rust-memory-model#17 - are somewhat complicated.\r\n\r\nThe implementation used to follow the rules, but it also contained a leftover from the old days of Rust - issue #36082:\r\n\r\nNormally, temporaries in Rust live until the containing arena, which in simple cases is the containing statement. For example, in this code the `RefCell` borrows only live to the end of their containing statements, so this code does not panic:\r\n```Rust\r\nuse std::cell::RefCell;\r\n\r\nfn main() {\r\n    let r = 0;\r\n    let s = 0;\r\n    let x = RefCell::new((&r,s));\r\n\r\n    let val = x.borrow().0;\r\n    println!(\"{}\", val);\r\n\r\n    x.borrow_mut().1 += 1;\r\n}\r\n```\r\n\r\nHowever, due to said leftover, adding an `&_` or `&mut _` type hint would make the borrow live until the end of the containing *block*, which means this code would keep a long borrow and panic due to a double borrow:\r\n```Rust\r\nuse std::cell::RefCell;\r\n\r\nfn main() {\r\n    let r = 0;\r\n    let s = 0;\r\n    let x = RefCell::new((&r,s));\r\n\r\n    let val: &_ = x.borrow().0; //~ WARN this temporary used to live longer\r\n    println!(\"{}\", val);\r\n\r\n    x.borrow_mut().1 += 1;\r\n}\r\n```\r\n\r\nThis \"feature\" is an oversight from the old days of Rust, and therefore it is removed starting from Rust 1.16.\r\n\r\nHowever, some code might be relying on the changed temporary lifetimes, and in some cases might not even compile without it:\r\n```Rust\r\nuse std::cell::RefCell;\r\n\r\nfn main() {\r\n    let mut r = 0;\r\n    let s = 0;\r\n    let x = RefCell::new((&mut r,s)); //~ WARN this temporary used to live longer\r\n\r\n    let val: &_ = x.borrow().0;\r\n    println!(\"{}\", val);\r\n}\r\n```\r\n\r\n### How to fix this warning/error\r\n\r\nUse an explicit variable with an explicit lifetime instead of the temporary:\r\n```Rust\r\nuse std::cell::RefCell;\r\n\r\nfn main() {\r\n    let r = 0;\r\n    let s = 0;\r\n    let x = RefCell::new((&r,s));\r\n\r\n    {\r\n        let b = x.borrow();\r\n        let val: &_ = b.0;\r\n        println!(\"{}\", val);\r\n    }\r\n\r\n    x.borrow_mut().1 += 1;\r\n}\r\n```\r\n\r\nand\r\n```Rust\r\nuse std::cell::RefCell;\r\n\r\nfn main() {\r\n    let mut r = 0;\r\n    let s = 0;\r\n    let x = RefCell::new((&mut r,s));\r\n\r\n    let b = x.borrow();\r\n    let val: &_ = b.0;\r\n    println!(\"{}\", val);\r\n}\r\n```\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39283/timeline", "performed_via_github_app": null, "state_reason": "completed"}