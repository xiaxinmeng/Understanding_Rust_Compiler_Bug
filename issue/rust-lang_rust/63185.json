{"url": "https://api.github.com/repos/rust-lang/rust/issues/63185", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63185/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63185/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63185/events", "html_url": "https://github.com/rust-lang/rust/issues/63185", "id": 475443989, "node_id": "MDU6SXNzdWU0NzU0NDM5ODk=", "number": 63185, "title": "spurious error \"cannot borrow `*x` as mutable more than once at a time\"", "user": {"login": "benw", "id": 12386, "node_id": "MDQ6VXNlcjEyMzg2", "avatar_url": "https://avatars.githubusercontent.com/u/12386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benw", "html_url": "https://github.com/benw", "followers_url": "https://api.github.com/users/benw/followers", "following_url": "https://api.github.com/users/benw/following{/other_user}", "gists_url": "https://api.github.com/users/benw/gists{/gist_id}", "starred_url": "https://api.github.com/users/benw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benw/subscriptions", "organizations_url": "https://api.github.com/users/benw/orgs", "repos_url": "https://api.github.com/users/benw/repos", "events_url": "https://api.github.com/users/benw/events{/privacy}", "received_events_url": "https://api.github.com/users/benw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 1146616045, "node_id": "MDU6TGFiZWwxMTQ2NjE2MDQ1", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-polonius", "name": "NLL-polonius", "color": "f799ea", "default": false, "description": "Issues related for using Polonius in the borrow checker"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-01T02:55:16Z", "updated_at": "2020-04-13T21:52:20Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "```rust\r\npub enum Foo<'a> {\r\n    A(&'a mut u8),\r\n    B(&'a mut Option<u8>),\r\n}\r\n\r\npub fn foo(x: &mut Option<u8>) -> Foo {\r\n    match *x {\r\n        Some(ref mut y) if *y == 0 => Foo::A(y),\r\n        ref mut z => Foo::B(z),\r\n    }\r\n}\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=9aa85d24c70ca1f05a41441093351901))\r\n\r\n```\r\nwarning[E0499]: cannot borrow `*x` as mutable more than once at a time\r\n  --> src/lib.rs:10:9\r\n   |\r\n7  | pub fn foo(x: &mut Option<u8>) -> Foo {\r\n   |               - let's call the lifetime of this reference `'1`\r\n8  |     match *x {\r\n9  |         Some(ref mut y) if *y == 0 => Foo::A(y),\r\n   |              ---------                --------- returning this value requires that `x.0` is borrowed for `'1`\r\n   |              |\r\n   |              first mutable borrow occurs here\r\n10 |         ref mut z => Foo::B(z),\r\n   |         ^^^^^^^^^ second mutable borrow occurs here\r\n   |\r\n   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\r\n   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\r\n```\r\n\r\nI fail to see any potential undefined behaviour in this code.\r\n\r\nRemoving the match arm guard allows this to compile.\r\n\r\nAlso weird that the error mentions `x.0` when `x` is not a tuple.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63185/timeline", "performed_via_github_app": null, "state_reason": null}