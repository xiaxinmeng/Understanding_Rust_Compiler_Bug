{"url": "https://api.github.com/repos/rust-lang/rust/issues/73904", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73904/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73904/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73904/events", "html_url": "https://github.com/rust-lang/rust/issues/73904", "id": 648513801, "node_id": "MDU6SXNzdWU2NDg1MTM4MDE=", "number": 73904, "title": "`#![deny(unsafe_op_in_unsafe_fn)]` in libstd", "user": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234876, "node_id": "MDU6TGFiZWwyMzQ4NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-hard", "name": "E-hard", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Hard / a lot"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}, {"id": 2024288103, "node_id": "MDU6TGFiZWwyMDI0Mjg4MTAz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-unsafe-block-in-unsafe-fn", "name": "F-unsafe-block-in-unsafe-fn", "color": "f9c0cc", "default": false, "description": "RFC #2585"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 35, "created_at": "2020-06-30T21:41:01Z", "updated_at": "2021-06-02T21:31:49Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The goal of this effort is to `#![deny(unsafe_op_in_unsafe_fn)]` in all of `libstd`, as proposed in rust-lang/compiler-team#317. This means enclosing unsafe operations in unsafe functions inside unsafe blocks, and documenting them as much as possible.\r\nHowever, as `libstd` contains more than 100,000 lines (!!!) and 600 unsafe functions, this should be done step by step, and by multiple people. This issue is meant as a way of tracking and synchronizing progress.\r\n\r\ncc @nikomatsakis @RalfJung \r\n\r\n### Mentoring instructions (or rather, suggested workflow)\r\n\r\nPlease first leave a comment here stating that you want to work on file `xxx.rs` or module `xxx`, to make sure that this implements `Sync`.\r\n\r\nYou'll first want to add a `#![deny(unsafe_op_in_unsafe_fn)]` attribute in the scope you'll be working on.\r\nThen, add `unsafe` blocks around unsafe operations in unsafe functions. These unsafe operations can be found either by searching for `unsafe fn`s, or by running `./x.py check src/libstd` and looking at the errors.\r\nWhen adding an unsafe block, try to explain why it is safe in a safety comment before the unsafe block. This should look like:\r\n```rust\r\n// SAFETY: explain why `unsf` is safe here...\r\nunsafe {\r\n    unsf();\r\n}\r\n```\r\n\r\nExample PRs: #72709 (for `liballoc`) and #73622 (for `libcore`)\r\n\r\n## TODO list\r\n\r\n- [x] `alloc.rs` (@poliorcetics, #74333)\r\n- [x] `fs.rs` (@eltonlaw, #73909)\r\n- [x] `panicking.rs` (@poliorcetics, #74200)\r\n- [x] `path.rs` (@hellow554, #73963)\r\n- [x] ~~`primitive_docs.rs`~~\r\n- [x] `process.rs` (@hellow554, #73955)\r\n- [ ] `sys_common/` (@LeSeulArtichaut, #73928)\r\n- [x] `net/tcp.rs` (@ryr3, #73962)\r\n- [ ] `io/` (@ryr3)\r\n- [x] `ffi/c_str.rs` (@poliorcetics, #74062)\r\n- [x] ~~`sync/mpsc`~~ (@poliorcetics, #74278)\r\n- [x] `thread/` (@poliorcetics, #74225)\r\n- [ ] `sys/`\r\n  - [x] `sys/cloudabi` (@chansuke, #75115)\r\n  - [x] `sys/hermit` (@maekawatoshiki, #74979)\r\n  - [x] `sys/sgx` (@Caduser2020, #77346)\r\n  - [ ] `sys/unix` (@euclio)\r\n  - [x] `sys/unsupported` (@m-ou-se, #77722)\r\n  - [ ] `sys/vxworks`\r\n  - [x] `sys/wasm` (@chansuke, #74477)\r\n  - [x] `sys/wasi` (@Amjad50, #75971)\r\n  - [ ] `sys/windows` (@carbotaniuman, #76676)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73904/reactions", "total_count": 4, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 4, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73904/timeline", "performed_via_github_app": null, "state_reason": null}