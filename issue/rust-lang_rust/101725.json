{"url": "https://api.github.com/repos/rust-lang/rust/issues/101725", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/101725/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/101725/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/101725/events", "html_url": "https://github.com/rust-lang/rust/issues/101725", "id": 1370078983, "node_id": "I_kwDOAAsO6M5Rqb8H", "number": 101725, "title": "ICE on 1.63 stable", "user": {"login": "guidomb", "id": 390645, "node_id": "MDQ6VXNlcjM5MDY0NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/390645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guidomb", "html_url": "https://github.com/guidomb", "followers_url": "https://api.github.com/users/guidomb/followers", "following_url": "https://api.github.com/users/guidomb/following{/other_user}", "gists_url": "https://api.github.com/users/guidomb/gists{/gist_id}", "starred_url": "https://api.github.com/users/guidomb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guidomb/subscriptions", "organizations_url": "https://api.github.com/users/guidomb/orgs", "repos_url": "https://api.github.com/users/guidomb/repos", "events_url": "https://api.github.com/users/guidomb/events{/privacy}", "received_events_url": "https://api.github.com/users/guidomb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-09-12T15:14:11Z", "updated_at": "2023-05-01T10:23:58Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nThe code I'm working at the moment is closed source, so I can't share the repo but the function being pointed as the one failing the fingerprint check is an implementation of function defined in trait that I owned over a type I don't (from a 3rd party dependency). The problematic function as pointed out by the stacktrace bellow is `parse_object_id` in file `lib.rs` line 707.\r\n\r\n```Rust\r\ntrait FieldExt {\r\n    fn parse_object_id(&self) -> OperationResult<Uuid>;\r\n    fn into_create_mutation(\r\n        self,\r\n        mutation_resolver: Rc<ObjectResolver>,\r\n    ) -> OperationResult<Mutation>;\r\n}\r\n\r\nimpl FieldExt for Field<'static, String> {\r\n    fn parse_object_id(&self) -> OperationResult<Uuid> {\r\n        for (arg_name, arg_type) in &self.arguments {\r\n            if !arg_name.eq(\"id\") {\r\n                continue;\r\n            }\r\n            if let Value::String(id) = arg_type {\r\n                return Uuid::parse_str(id).map_err(|_| {\r\n                    OperationError::Translation(TranslationError::QueryTranslation(\r\n                        QueryTranslationError::InvalidIDValue(self.name.to_owned(), id.to_owned()),\r\n                    ))\r\n                });\r\n            }\r\n        }\r\n\r\n        // We haven't found an argument id: UUID!\r\n        Err(OperationError::Translation(\r\n            TranslationError::QueryTranslation(QueryTranslationError::MissingIDArgument(\r\n                self.name.to_owned(),\r\n            )),\r\n        ))\r\n    }\r\n\r\n    fn into_create_mutation(\r\n        self,\r\n        mutation_resolver: Rc<ObjectResolver>,\r\n    ) -> OperationResult<Mutation> {\r\n        let input = into_input_object(self.arguments, &self.name, mutation_resolver.type_name())?;\r\n        let mutation = CreateObjectMutation {\r\n            selector: Rc::from(self.name),\r\n            object_resolver: mutation_resolver,\r\n            selection_set: self.selection_set.items,\r\n            input,\r\n        };\r\n        Ok(Mutation::CreateObject(mutation))\r\n    }\r\n}\r\n```\r\n\r\n`OperationResult` is defined as:\r\n\r\n```rust\r\npub type OperationResult<T> = Result<T, OperationError>;\r\n```\r\n\r\nand the type `Field` is from the [graphql-parser](https://github.com/graphql-rust/graphql-parser) crate defined [here](https://docs.rs/graphql-parser/latest/graphql_parser/query/struct.Field.html).\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.63.0 (4b91a6ea7 2022-08-08)\r\nbinary: rustc\r\ncommit-hash: 4b91a6ea7258a947e59c6522cd5898e7c0a6a88f\r\ncommit-date: 2022-08-08\r\nhost: x86_64-apple-darwin\r\nrelease: 1.63.0\r\nLLVM version: 14.0.5\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: encountered incremental compilation error with evaluate_obligation(16fc490c12343ae9-13c3ae70d12ea196)\r\n  |\r\n  = help: This is a known issue with the compiler. Run `cargo clean -p bifrost` or `cargo clean` to allow your project to compile\r\n  = note: Please follow the instructions below to create a bug report with the provided information\r\n  = note: See <https://github.com/rust-lang/rust/issues/84970> for more information\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Found unstable fingerprints for evaluate_obligation(16fc490c12343ae9-13c3ae70d12ea196): Ok(EvaluatedToOk)', compiler/rustc_query_system/src/query/plumbing.rs:628:9\r\nstack backtrace:\r\n   0: _rust_begin_unwind\r\n   1: core::panicking::panic_fmt\r\n   2: rustc_query_system::query::plumbing::incremental_verify_ich_cold\r\n   3: rustc_query_system::query::plumbing::incremental_verify_ich::<rustc_query_impl::plumbing::QueryCtxt, rustc_middle::infer::canonical::Canonical<rustc_middle::ty::ParamEnvAnd<rustc_middle::ty::Predicate>>, core::result::Result<rustc_middle::traits::select::EvaluationResult, rustc_middle::traits::select::OverflowError>>\r\n   4: rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory::<rustc_query_impl::plumbing::QueryCtxt, rustc_middle::infer::canonical::Canonical<rustc_middle::ty::ParamEnvAnd<rustc_middle::ty::Predicate>>, core::result::Result<rustc_middle::traits::select::EvaluationResult, rustc_middle::traits::select::OverflowError>>\r\n   5: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::evaluate_obligation, rustc_query_impl::plumbing::QueryCtxt>\r\n   6: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::evaluate_obligation\r\n   7: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt>::evaluate_obligation\r\n   8: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt>::evaluate_obligation_no_overflow\r\n   9: <rustc_trait_selection::traits::fulfill::FulfillProcessor>::process_trait_obligation\r\n  10: <rustc_trait_selection::traits::fulfill::FulfillProcessor as rustc_data_structures::obligation_forest::ObligationProcessor>::process_obligation\r\n  11: <rustc_data_structures::obligation_forest::ObligationForest<rustc_trait_selection::traits::fulfill::PendingPredicateObligation>>::process_obligations::<rustc_trait_selection::traits::fulfill::FulfillProcessor, rustc_data_structures::obligation_forest::Outcome<rustc_trait_selection::traits::fulfill::PendingPredicateObligation, rustc_infer::traits::FulfillmentErrorCode>>\r\n  12: <rustc_trait_selection::traits::fulfill::FulfillmentContext as rustc_infer::traits::engine::TraitEngine>::select_where_possible\r\n  13: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  14: <rustc_typeck::check::fn_ctxt::FnCtxt>::confirm_builtin_call\r\n  15: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n  16: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  17: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  18: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_match\r\n  19: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  20: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  21: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  22: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  23: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  24: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  25: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  26: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  27: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  28: rustc_typeck::check::check::check_fn\r\n  29: <rustc_infer::infer::InferCtxtBuilder>::enter::<&rustc_middle::ty::context::TypeckResults, <rustc_typeck::check::inherited::InheritedBuilder>::enter<rustc_typeck::check::typeck_with_fallback<rustc_typeck::check::typeck::{closure#0}>::{closure#1}, &rustc_middle::ty::context::TypeckResults>::{closure#0}>\r\n  30: rustc_typeck::check::typeck\r\n  31: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>\r\n  32: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>>\r\n  33: rustc_query_system::query::plumbing::force_query::<rustc_query_impl::queries::typeck, rustc_query_impl::plumbing::QueryCtxt>\r\n  34: rustc_query_impl::query_callbacks::typeck::force_from_dep_node\r\n  35: <rustc_middle::ty::context::TyCtxt as rustc_query_system::dep_graph::DepContext>::try_force_from_dep_node\r\n  36: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl::plumbing::QueryCtxt>\r\n  37: rustc_query_system::query::plumbing::ensure_must_run::<rustc_query_impl::plumbing::QueryCtxt, rustc_span::def_id::LocalDefId, rustc_span::def_id::LocalDefId>\r\n  38: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::typeck, rustc_query_impl::plumbing::QueryCtxt>\r\n  39: <rustc_middle::hir::map::Map>::par_body_owners::<rustc_typeck::check::typeck_item_bodies::{closure#0}>\r\n  40: rustc_typeck::check::typeck_item_bodies\r\n  41: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), ()>\r\n  42: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), ()>>\r\n  43: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::typeck_item_bodies, rustc_query_impl::plumbing::QueryCtxt>\r\n  44: <rustc_session::session::Session>::time::<(), rustc_typeck::check_crate::{closure#7}>\r\n  45: rustc_typeck::check_crate\r\n  46: rustc_interface::passes::analysis\r\n  47: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n  48: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorGuaranteed>>>\r\n  49: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  50: <rustc_interface::passes::QueryContext>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}::{closure#3}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n  51: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorGuaranteed>>\r\n  52: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  53: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.63.0 (4b91a6ea7 2022-08-08) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: --crate-type lib -C embed-bitcode=no -C split-debuginfo=unpacked -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [evaluate_obligation] evaluating trait selection obligation `(alloc::string::String, graphql_parser::common::Value<'static, alloc::string::String>): core::marker::Sized`\r\n#1 [typeck] type-checking `<impl at src/lib.rs:707:1: 743:2>::parse_object_id`\r\n#2 [typeck_item_bodies] type-checking all item bodies\r\n#3 [analysis] running analysis passes on this crate\r\nend of query stack\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/101725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/101725/timeline", "performed_via_github_app": null, "state_reason": null}