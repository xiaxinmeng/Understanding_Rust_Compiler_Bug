{"url": "https://api.github.com/repos/rust-lang/rust/issues/47647", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47647/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47647/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47647/events", "html_url": "https://github.com/rust-lang/rust/issues/47647", "id": 290315885, "node_id": "MDU6SXNzdWUyOTAzMTU4ODU=", "number": 47647, "title": "Suggestion inconsistency when reporting unresolved import from crates.io", "user": {"login": "BurntPizza", "id": 4973668, "node_id": "MDQ6VXNlcjQ5NzM2Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/4973668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BurntPizza", "html_url": "https://github.com/BurntPizza", "followers_url": "https://api.github.com/users/BurntPizza/followers", "following_url": "https://api.github.com/users/BurntPizza/following{/other_user}", "gists_url": "https://api.github.com/users/BurntPizza/gists{/gist_id}", "starred_url": "https://api.github.com/users/BurntPizza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BurntPizza/subscriptions", "organizations_url": "https://api.github.com/users/BurntPizza/orgs", "repos_url": "https://api.github.com/users/BurntPizza/repos", "events_url": "https://api.github.com/users/BurntPizza/events{/privacy}", "received_events_url": "https://api.github.com/users/BurntPizza/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-21T23:19:26Z", "updated_at": "2020-04-20T22:45:44Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n$ cat src/lib.rs \r\nextern crate ordermap;\r\nuse ordermap::Orderset;\r\n\r\n$ cat Cargo.toml \r\n[package]\r\nname = \"err\"\r\nversion = \"0.1.0\"\r\n\r\n[dependencies]\r\nordermap = { version = \"*\", path = \"ordermap\" }\r\n\r\n$ cat ordermap/src/lib.rs \r\npub struct OrderSet;\r\n\r\n$ cargo build 2>&1 | grep -B1 'Did'\r\n5 | use ordermap::Orderset;\r\n  |     ^^^^^^^^^^^^^^^^^^ no `Orderset` in the root. Did you mean to use `OrderSet`?\r\n```\r\n\r\nEverything looks good so far. But if we change the dependency to point to crates.io: `ordermap = \"*\"` then the error message gets weird:\r\n```\r\n$ cargo build 2>&1 | grep -B1 'Did'\r\n5 | use ordermap::Orderset;\r\n  |     ^^^^^^^^^^^^^^^^^^ no `Orderset` in the root. Did you mean to use `orderset`?\r\n```\r\nNote the capitalization (or lack thereof). There is no item or module called 'orderset' in `ordermap`'s root. When I came across this I was importing `Ordermap` and it did the same thing which was very confusing as the lowercase is also the crate name. I thought at first that coincidence was somehow responsible, but you can see the counter-example above with `OrderSet`.  \r\nWhat's even more strange is that the inline error reporting in emacs via flycheck shows it correctly!\r\nThis is magical as the bug is also present in the json output, which is what flycheck consumes:\r\n```\r\ncargo build --message-format json 2>&1 | sed 's/\\\"/&\\n/g' | grep 'Did'\r\nno `Orderset` in the root. Did you mean to use `orderset`?\"\r\n```\r\n\r\n> unresolved import `ordermap::Orderset` (no `Orderset` in the root. Did you mean to use `OrderSet`?) [E0432]\r\n\r\nSome other cases:\r\nIf the import is all lowercase, it works properly:\r\n```\r\n$ cat src/lib.rs \r\nextern crate ordermap;\r\nuse ordermap::orderset;\r\n\r\n$ cargo build 2>&1 | grep -B1 'Did'\r\n2 | use ordermap::orderset;\r\n  |     ^^^^^^^^^^^^^^^^^^ no `orderset` in the root. Did you mean to use `OrderSet`?\r\n```\r\n\r\nBut if the import is all lowercase but missing the first letter, it doesn't:\r\n```\r\n$ cat src/lib.rs                   \r\nextern crate ordermap;\r\nuse ordermap::rderset;\r\n\r\n $ cargo build 2>&1 | grep -B1 'Did'\r\n2 | use ordermap::rderset;\r\n  |     ^^^^^^^^^^^^^^^^^ no `rderset` in the root. Did you mean to use `orderset`?\r\n```\r\nFlycheck doesn't magically correct this one, but the local path import does.\r\n\r\n\r\nInfo:\r\n```\r\n$ rustup -V\r\nrustup 1.9.0 (57fc3c087 2018-01-04)\r\n\r\n$ rustc -V\r\nrustc 1.23.0 (766bd11c8 2018-01-01)\r\n\r\n$ cargo -V\r\ncargo 0.24.0 (45043115c 2017-12-05)\r\n```\r\n\r\n> M-x emacs-version\r\n> GNU Emacs 25.3.1 (x86_64-pc-linux-gnu, GTK+ Version 3.22.26) of 2017-12-04\r\n\r\n> M-x flycheck-version\r\n> Flycheck version: 32snapshot (package: 20171214.1215)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47647/timeline", "performed_via_github_app": null, "state_reason": null}