{"url": "https://api.github.com/repos/rust-lang/rust/issues/102899", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102899/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102899/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102899/events", "html_url": "https://github.com/rust-lang/rust/issues/102899", "id": 1403653720, "node_id": "I_kwDOAAsO6M5Tqg5Y", "number": 102899, "title": "ICE with generic associated types + higher ranked trait bounds", "user": {"login": "kawogi", "id": 17281419, "node_id": "MDQ6VXNlcjE3MjgxNDE5", "avatar_url": "https://avatars.githubusercontent.com/u/17281419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kawogi", "html_url": "https://github.com/kawogi", "followers_url": "https://api.github.com/users/kawogi/followers", "following_url": "https://api.github.com/users/kawogi/following{/other_user}", "gists_url": "https://api.github.com/users/kawogi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kawogi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kawogi/subscriptions", "organizations_url": "https://api.github.com/users/kawogi/orgs", "repos_url": "https://api.github.com/users/kawogi/repos", "events_url": "https://api.github.com/users/kawogi/events{/privacy}", "received_events_url": "https://api.github.com/users/kawogi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-10-10T20:06:21Z", "updated_at": "2022-10-17T19:46:00Z", "closed_at": "2022-10-17T19:46:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Got this while trying to implement a GAT and higher ranked trait bounds. The code is likely flawed because I was in the middle of a refactoring.\r\n\r\n### Code\r\n\r\n```Rust\r\npub trait BufferTrait<'buffer> {\r\n    type Subset<'channel>\r\n    where\r\n        'buffer: 'channel;\r\n\r\n    fn for_each_subset<F>(&self, f: F)\r\n    where\r\n        F: for<'channel> Fn(Self::Subset<'channel>);\r\n}\r\n\r\npub struct SomeBuffer<'buffer> {\r\n    samples: &'buffer [()],\r\n}\r\n\r\nimpl<'buffer> BufferTrait<'buffer> for SomeBuffer<'buffer> {\r\n    type Subset<'subset> = Subset<'subset> where 'buffer: 'subset;\r\n\r\n    fn for_each_subset<F>(&self, _f: F)\r\n    where\r\n        F: for<'subset> Fn(Subset<'subset>),\r\n    {\r\n        todo!()\r\n    }\r\n}\r\n\r\npub struct Subset<'subset> {\r\n    buffer: &'subset [()],\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.66.0-nightly (81f391930 2022-10-09)\r\nbinary: rustc\r\ncommit-hash: 81f391930301afbc121b7c468138069daa354bf8\r\ncommit-date: 2022-10-09\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.66.0-nightly\r\nLLVM version: 15.0.2\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\r\n\r\nerror: internal compiler error: failed region resolution while normalizing ParamEnv { caller_bounds: [Binder(ProjectionPredicate(ProjectionTy { substs: [F, (<SomeBuffer<'buffer> as BufferTrait<'buffer>>::Subset<'channel>,)], item_def_id: DefId(2:3645 ~ core[2f45]::ops::function::FnOnce::Output) }, Term::Ty(())), [Region(BrNamed(DefId(0:9 ~ raw_sample[811b]::BufferTrait::for_each_subset::'channel), 'channel))]), Binder(TraitPredicate(<F as std::ops::Fn<(<SomeBuffer<'buffer> as BufferTrait<'buffer>>::Subset<'channel>,)>>, polarity:Positive), [Region(BrNamed(DefId(0:9 ~ raw_sample[811b]::BufferTrait::for_each_subset::'channel), 'channel))]), Binder(TraitPredicate(<F as std::ops::FnMut<(<SomeBuffer<'buffer> as BufferTrait<'buffer>>::Subset<'channel>,)>>, polarity:Positive), [Region(BrNamed(DefId(0:9 ~ raw_sample[811b]::BufferTrait::for_each_subset::'channel), 'channel))]), Binder(TraitPredicate(<F as std::ops::FnOnce<(<SomeBuffer<'buffer> as BufferTrait<'buffer>>::Subset<'channel>,)>>, polarity:Positive), [Region(BrNamed(DefId(0:9 ~ raw_sample[811b]::BufferTrait::for_each_subset::'channel), 'channel))]), Binder(TraitPredicate(<F as std::marker::Sized>, polarity:Positive), [])], reveal: UserFacing, constness: NotConst }: [ConcreteFailure(RelateRegionParamBound(src/main.rs:22:5: 24:45 (#0)), RePlaceholder(Placeholder { universe: U1, name: BrNamed(DefId(0:9 ~ raw_sample[811b]::BufferTrait::for_each_subset::'channel), 'channel) }), ReEarlyBound(0, 'buffer)), ConcreteFailure(RelateRegionParamBound(src/main.rs:22:5: 24:45 (#0)), RePlaceholder(Placeholder { universe: U2, name: BrNamed(DefId(0:9 ~ raw_sample[811b]::BufferTrait::for_each_subset::'channel), 'channel) }), ReEarlyBound(0, 'buffer)), ConcreteFailure(RelateRegionParamBound(src/main.rs:22:5: 24:45 (#0)), RePlaceholder(Placeholder { universe: U3, name: BrNamed(DefId(0:9 ~ raw_sample[811b]::BufferTrait::for_each_subset::'channel), 'channel) }), ReEarlyBound(0, 'buffer)), ConcreteFailure(RelateRegionParamBound(src/main.rs:22:5: 24:45 (#0)), RePlaceholder(Placeholder { universe: U4, name: BrNamed(DefId(0:9 ~ raw_sample[811b]::BufferTrait::for_each_subset::'channel), 'channel) }), ReEarlyBound(0, 'buffer))]\r\n  --> src/main.rs:22:5\r\n   |\r\n22 | /     fn for_each_subset<F>(&self, _f: F)\r\n23 | |     where\r\n24 | |         F: for<'subset> Fn(Subset<'subset>),\r\n   | |____________________________________________^\r\n   |\r\n   = note: delayed at compiler/rustc_trait_selection/src/traits/mod.rs:257:18\r\n```\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1537:13\r\nstack backtrace:\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner>::flush_delayed::<alloc::vec::Vec<rustc_errors::diagnostic::Diagnostic>, &str>\r\n   3: <rustc_errors::Handler>::flush_delayed\r\n   4: <rustc_interface::passes::QueryContext>::enter::<<rustc_interface::queries::Queries>::ongoing_codegen::{closure#0}::{closure#0}, core::result::Result<alloc::boxed::Box<dyn core::any::Any>, rustc_errors::ErrorGuaranteed>>\r\n   5: <rustc_interface::queries::Queries>::ongoing_codegen\r\n   6: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorGuaranteed>>\r\n   7: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n   8: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>\r\n   9: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.66.0-nightly (81f391930 2022-10-09) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED]\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102899/timeline", "performed_via_github_app": null, "state_reason": "completed"}