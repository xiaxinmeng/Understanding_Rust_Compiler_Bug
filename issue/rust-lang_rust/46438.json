{"url": "https://api.github.com/repos/rust-lang/rust/issues/46438", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46438/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46438/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46438/events", "html_url": "https://github.com/rust-lang/rust/issues/46438", "id": 278628988, "node_id": "MDU6SXNzdWUyNzg2Mjg5ODg=", "number": 46438, "title": "`ty` macro arguments can be used as traits in impls", "user": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235777, "node_id": "MDU6TGFiZWwyMzU3Nzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-grammar", "name": "A-grammar", "color": "f7e101", "default": false, "description": "Area: The grammar of Rust"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 178802147, "node_id": "MDU6TGFiZWwxNzg4MDIxNDc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-needs-decision", "name": "I-needs-decision", "color": "e11d21", "default": false, "description": "Issues in need of decision."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-01T23:41:04Z", "updated_at": "2018-04-15T22:04:03Z", "closed_at": "2018-04-15T22:04:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```rust\r\nmacro_rules! m {\r\n    ($my_type: ty) => {\r\n        impl $my_type for u8 {} // Hmmm.\r\n\r\n        // Not OK, this trick can't be used in any other position.\r\n        // trait Z: $my_type {}\r\n    }\r\n}\r\n\r\ntrait Tr {}\r\nm!(Tr); // OK\r\n\r\nfn main() {}\r\n```\r\n\r\nThis is a side effect of how impls are parsed - the trait in `impl Trait for Type` is first parsed as a type, and then reinterpreted as a type if it has appropriate syntactic form (trait syntax is a subset of type syntax).\r\n(Same trick was used for `pub(path)` visibilities for some time, but then abandoned in favor of `pub(in path)`.)\r\n\r\nThe reinterpretation trick in impl parsing can hardly be avoided, but this specific issue can be fixed because reinterpretation can be avoided if we see a `ty` fragment after `impl`.\r\n\r\nThe question is whether we should fix it or not - the issue seems benign even if it's probably unintended, an error is immediately reported if `ty` doesn't fit into the trait syntax.\r\nThis trick is also similar to other cases like limited use of `expr` fragment in range patterns (https://github.com/rust-lang/rust/pull/42886), which are intended.\r\nI would also be surprised if this was not exploited in practice.", "closed_by": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46438/timeline", "performed_via_github_app": null, "state_reason": "completed"}