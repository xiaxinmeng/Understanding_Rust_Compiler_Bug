{"url": "https://api.github.com/repos/rust-lang/rust/issues/51445", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51445/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51445/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51445/events", "html_url": "https://github.com/rust-lang/rust/issues/51445", "id": 330820503, "node_id": "MDU6SXNzdWUzMzA4MjA1MDM=", "number": 51445, "title": "Implementations conflict when using associated type across crates", "user": {"login": "bvinc", "id": 165166, "node_id": "MDQ6VXNlcjE2NTE2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/165166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bvinc", "html_url": "https://github.com/bvinc", "followers_url": "https://api.github.com/users/bvinc/followers", "following_url": "https://api.github.com/users/bvinc/following{/other_user}", "gists_url": "https://api.github.com/users/bvinc/gists{/gist_id}", "starred_url": "https://api.github.com/users/bvinc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bvinc/subscriptions", "organizations_url": "https://api.github.com/users/bvinc/orgs", "repos_url": "https://api.github.com/users/bvinc/repos", "events_url": "https://api.github.com/users/bvinc/events{/privacy}", "received_events_url": "https://api.github.com/users/bvinc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-08T22:27:52Z", "updated_at": "2022-06-28T02:29:39Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "crate bar:\r\n```rust\r\npub struct Bar;\r\npub struct BarNext;\r\n\r\npub trait SomeTrait {\r\n        type Next;\r\n}\r\n\r\nimpl SomeTrait for Bar {\r\n        type Next = BarNext;\r\n}\r\n```\r\n\r\ncrate foo:\r\n```rust\r\nextern crate bar;\r\n\r\nstruct Foo;\r\n\r\nstruct Baz;\r\nstruct BazNext;\r\n\r\npub trait MyTrait<T> {\r\n}\r\n\r\nimpl MyTrait<BazNext> for Foo {\r\n}\r\n\r\n// Why does this conflict with the previous impl?  It should resolve to the type BarNext\r\nimpl MyTrait<<::bar::Bar as ::bar::SomeTrait>::Next> for Foo {\r\n}\r\n\r\n// Using the type BarNext directly does not conflict with the first impl\r\n// impl MyTrait<::bar::BarNext> for Foo {\r\n// }\r\n\r\nfn main() {\r\n    println!(\"Hello, world!\");\r\n}\r\n```\r\n\r\nOutput:\r\n```\r\nerror[E0119]: conflicting implementations of trait `MyTrait<BazNext>` for type `Foo`:\r\n  --> src/main.rs:15:1\r\n   |\r\n11 | impl MyTrait<BazNext> for Foo {\r\n   | ----------------------------- first implementation here\r\n...\r\n15 | impl MyTrait<<::bar::Bar as ::bar::SomeTrait>::Next> for Foo {\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `Foo`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0119`.\r\nerror: Could not compile `foo`.\r\n```\r\n\r\nI can only reproduce this issue when using the `<Bar as SomeTrait>::Next` syntax, and only when Bar is in an external crate.  Reproduced in current stable and nightly.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51445/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51445/timeline", "performed_via_github_app": null, "state_reason": null}