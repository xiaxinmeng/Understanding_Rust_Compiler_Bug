{"url": "https://api.github.com/repos/rust-lang/rust/issues/32720", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/32720/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/32720/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/32720/events", "html_url": "https://github.com/rust-lang/rust/issues/32720", "id": 145594549, "node_id": "MDU6SXNzdWUxNDU1OTQ1NDk=", "number": 32720, "title": "Incorrect Add trait in book", "user": {"login": "jyasskin", "id": 83420, "node_id": "MDQ6VXNlcjgzNDIw", "avatar_url": "https://avatars.githubusercontent.com/u/83420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyasskin", "html_url": "https://github.com/jyasskin", "followers_url": "https://api.github.com/users/jyasskin/followers", "following_url": "https://api.github.com/users/jyasskin/following{/other_user}", "gists_url": "https://api.github.com/users/jyasskin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyasskin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyasskin/subscriptions", "organizations_url": "https://api.github.com/users/jyasskin/orgs", "repos_url": "https://api.github.com/users/jyasskin/repos", "events_url": "https://api.github.com/users/jyasskin/events{/privacy}", "received_events_url": "https://api.github.com/users/jyasskin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-04T06:20:53Z", "updated_at": "2016-04-04T18:23:04Z", "closed_at": "2016-04-04T18:23:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/rust-lang/rust/blob/master/src/doc/book/operators-and-overloading.md defines `Point`'s  `Add` trait as:\n\n``` rust\nimpl Add for Point {\n    type Output = Point;\n\n    fn add(self, other: Point) -> Point {\n        Point { x: self.x + other.x, y: self.y + other.y }\n    }\n}\n```\n\nand then gives the example of using it as:\n\n``` rust\n    let p1 = Point { x: 1, y: 0 };\n    let p2 = Point { x: 2, y: 3 };\n\n    let p3 = p1 + p2;\n```\n\nThis works, but it consumes both input points, contrary to the way most people expect `+` to work. that is, `let p4 = p1 + p2` fails to compile.\n\nI'd suggest making `Point` copyable by additionally deriving `Clone` and `Copy`, but you could also show the `&`-based trait implementation.\n\nI noticed this because of https://plus.google.com/+MattAustern/posts/eLJDWZFcd3J.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/32720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/32720/timeline", "performed_via_github_app": null, "state_reason": "completed"}