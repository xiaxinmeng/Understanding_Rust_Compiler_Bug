{"url": "https://api.github.com/repos/rust-lang/rust/issues/74267", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74267/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74267/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74267/events", "html_url": "https://github.com/rust-lang/rust/issues/74267", "id": 655393657, "node_id": "MDU6SXNzdWU2NTUzOTM2NTc=", "number": 74267, "title": "MaybeUninit::assume_init optimizes poorly", "user": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-07-12T12:44:36Z", "updated_at": "2021-08-30T14:43:32Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "In #74254 we observed that returning expr.assume_init() from a function unexpectedly inhibits the return value from being constructed in place up front.\r\n\r\nhttps://rust.godbolt.org/z/hr77qM\r\n\r\n```rust\r\n#![allow(deprecated)]\r\n\r\nuse std::mem::{self, MaybeUninit};\r\nuse std::ptr;\r\n\r\ntype T = String;\r\nconst N: usize = 2;\r\n\r\n// fast\r\npub fn a() -> [T; N] {\r\n    Default::default()\r\n}\r\n\r\n// fast\r\npub fn b() -> [T; N] {\r\n    unsafe {\r\n        // ignore the UB for now\r\n        let mut array: [T; N] = mem::uninitialized();\r\n        for slot in &mut array {\r\n            ptr::write(slot, T::default());\r\n        }\r\n        array\r\n    }\r\n}\r\n\r\n// slow\r\npub fn c() -> [T; N] {\r\n    let mut array: MaybeUninit<[T; N]> = MaybeUninit::uninit();\r\n    unsafe {\r\n        // ignore the UB for now\r\n        // ordinarily would cast to &mut [MaybeUninit<T>; N]\r\n        // but here we try to minimize difference from `b`\r\n        let slots = &mut *array.as_mut_ptr();\r\n        for slot in slots {\r\n            ptr::write(slot, T::default());\r\n        }\r\n        array.assume_init()\r\n    }\r\n}\r\n```\r\n\r\nNotice that in the slow function the return value is constructed exactly the same as in both of the fast functions (6 instructions) except in the wrong place, then relocated from \\[rsp-48\\] to \\[rdi\\] :cry: (12 instructions).\r\n\r\n```asm\r\nexample::a:\r\n        mov     rax, rdi\r\n        mov     qword ptr [rdi], 1\r\n        vxorps  xmm0, xmm0, xmm0\r\n        vmovups xmmword ptr [rdi + 8], xmm0\r\n        mov     qword ptr [rdi + 24], 1\r\n        vmovups xmmword ptr [rdi + 32], xmm0\r\n        ret\r\n\r\nexample::b:\r\n        mov     rax, rdi\r\n        mov     qword ptr [rdi], 1\r\n        vxorps  xmm0, xmm0, xmm0\r\n        vmovups xmmword ptr [rdi + 8], xmm0\r\n        mov     qword ptr [rdi + 24], 1\r\n        vmovups xmmword ptr [rdi + 32], xmm0\r\n        ret\r\n\r\nexample::c:\r\n        sub     rsp, 48\r\n        mov     rax, rdi\r\n        mov     qword ptr [rsp], 1\r\n        vxorps  xmm0, xmm0, xmm0\r\n        vmovups xmmword ptr [rsp + 8], xmm0\r\n        mov     qword ptr [rsp + 24], 1\r\n        vmovups xmmword ptr [rsp + 32], xmm0\r\n        mov     rcx, qword ptr [rsp]\r\n        mov     qword ptr [rdi], rcx\r\n        vmovups xmm0, xmmword ptr [rsp + 8]\r\n        vmovups xmmword ptr [rdi + 8], xmm0\r\n        mov     rcx, qword ptr [rsp + 24]\r\n        mov     qword ptr [rdi + 24], rcx\r\n        mov     rcx, qword ptr [rsp + 16]\r\n        mov     qword ptr [rdi + 16], rcx\r\n        mov     rcx, qword ptr [rsp + 24]\r\n        mov     qword ptr [rdi + 24], rcx\r\n        vmovups xmm0, xmmword ptr [rsp + 32]\r\n        vmovups xmmword ptr [rdi + 32], xmm0\r\n        add     rsp, 48\r\n        ret\r\n```", "closed_by": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74267/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74267/timeline", "performed_via_github_app": null, "state_reason": null}