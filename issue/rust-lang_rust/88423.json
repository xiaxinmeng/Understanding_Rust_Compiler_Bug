{"url": "https://api.github.com/repos/rust-lang/rust/issues/88423", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88423/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88423/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88423/events", "html_url": "https://github.com/rust-lang/rust/issues/88423", "id": 981828267, "node_id": "MDU6SXNzdWU5ODE4MjgyNjc=", "number": 88423, "title": "Match does not understand lifetimes of enum variants", "user": {"login": "jamesmunns", "id": 2097964, "node_id": "MDQ6VXNlcjIwOTc5NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2097964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesmunns", "html_url": "https://github.com/jamesmunns", "followers_url": "https://api.github.com/users/jamesmunns/followers", "following_url": "https://api.github.com/users/jamesmunns/following{/other_user}", "gists_url": "https://api.github.com/users/jamesmunns/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesmunns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesmunns/subscriptions", "organizations_url": "https://api.github.com/users/jamesmunns/orgs", "repos_url": "https://api.github.com/users/jamesmunns/repos", "events_url": "https://api.github.com/users/jamesmunns/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesmunns/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-08-28T12:54:57Z", "updated_at": "2023-04-14T22:07:09Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::borrow::Cow;\r\n\r\nenum Example<'a> {\r\n    TotallyOwned{ foo: u32, bar: u32 },\r\n    MaybeBorrowed(Cow<'a, [u8]>),\r\n}\r\n\r\nimpl<'a> Example<'a> {\r\n    fn to_owned(self) -> Example<'static> {\r\n        match self {\r\n            Example::MaybeBorrowed(p) => Example::MaybeBorrowed(Cow::Owned(p.into_owned())),\r\n            \r\n            // Doesn't work! Lifetime Errors!\r\n            // a @ Example::TotallyOwned { .. } => a,\r\n            \r\n            // Does work, but verbose!\r\n            Example::TotallyOwned { foo, bar } => Example::TotallyOwned { foo, bar }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI expected the match arm `a @ Example::TotallyOwned { .. } => a` to work, as this variant is completely owned.\r\n\r\nInstead, I needed to completely destruct the enum variant, and create a new one, to \"make Rust understand\" I was creating a fully owned enum instance.\r\n\r\nI can understand *why* this error exists: namely if I am returning a rebound instance of the original enum, it still is bound to the `'a` lifetime, however in the case of the `TotallyOwned` variant, this lifetime is \"meaningless\", which (someday?) rustc may be able to see.\r\n\r\nSince this is more of an \"improvement request\" kind of issue, let me know if there is a better place to open this, or if this is the sort of thing that would require an RFC.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\nThis presents in the current stable (1.54.0), as well as the current nightly (2021-08-27), though is likely true for all versions\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88423/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88423/timeline", "performed_via_github_app": null, "state_reason": null}