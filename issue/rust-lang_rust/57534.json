{"url": "https://api.github.com/repos/rust-lang/rust/issues/57534", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57534/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57534/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57534/events", "html_url": "https://github.com/rust-lang/rust/issues/57534", "id": 398486959, "node_id": "MDU6SXNzdWUzOTg0ODY5NTk=", "number": 57534, "title": "OSX: use after free in `thread_local` when a TLS location isn't initialized until destruction of another TLS location", "user": {"login": "mtak-", "id": 6643140, "node_id": "MDQ6VXNlcjY2NDMxNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6643140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtak-", "html_url": "https://github.com/mtak-", "followers_url": "https://api.github.com/users/mtak-/followers", "following_url": "https://api.github.com/users/mtak-/following{/other_user}", "gists_url": "https://api.github.com/users/mtak-/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtak-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtak-/subscriptions", "organizations_url": "https://api.github.com/users/mtak-/orgs", "repos_url": "https://api.github.com/users/mtak-/repos", "events_url": "https://api.github.com/users/mtak-/events{/privacy}", "received_events_url": "https://api.github.com/users/mtak-/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123111, "node_id": "MDU6TGFiZWwxMjMxMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-macos", "name": "O-macos", "color": "6e6ec0", "default": false, "description": "Operating system: macOS"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 632886930, "node_id": "MDU6TGFiZWw2MzI4ODY5MzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-thread-locals", "name": "A-thread-locals", "color": "f7e101", "default": false, "description": "Area: Thread local storage (TLS)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-01-11T23:20:09Z", "updated_at": "2019-01-20T20:11:07Z", "closed_at": "2019-01-20T13:46:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Moved from https://github.com/Amanieu/parking_lot/issues/114 because the issue is not specific to `parking_lot`.\r\n\r\nRepro:\r\n- toolchain: rustc 1.33.0-nightly (c2d381d39 2019-01-10)\r\n- OSX 10.14\r\n- `RUSTFLAGS=\"-Z sanitizer=address\" cargo run`\r\n\r\n```rust\r\nuse std::thread;\r\n\r\nstruct A;\r\n\r\nimpl Drop for A {\r\n    fn drop(&mut self) {\r\n        THREAD_STRING.with(|s| {\r\n            println!(\"{:?}\", s);\r\n        })\r\n    }\r\n}\r\n\r\nthread_local! {\r\n    static THREAD_STRING: String = String::from(\"hello there\");\r\n}\r\n\r\nthread_local! {\r\n    static THREAD_A: A = A;\r\n}\r\n\r\nfn main() {\r\n    thread::spawn(|| {\r\n        THREAD_A.with(|_| {});\r\n    })\r\n    .join()\r\n    .unwrap();\r\n}\r\n```\r\n\r\nIf thread is changed to access `THREAD_STRING` before exiting, then the ASAN error goes away.\r\n\r\n<details>\r\n  <summary>Address Sanitizer Log</summary>\r\n  <p>\r\n\r\n```\r\n==39852==ERROR: AddressSanitizer: heap-use-after-free on address 0x610000008089 at pc 0x00010c736a3f bp 0x70000fd46790 sp 0x70000fd45f40\r\nREAD of size 1 at 0x610000008089 thread T1\r\n    #0 0x10c736a3e in __asan_memcpy (lib__rustc__clang_rt.asan_osx_dynamic.dylib:x86_64+0x56a3e)\r\n    #1 0x10c66c6a6 in core::ptr::read::h3b49a10a9618a90a ptr.rs:575\r\n    #2 0x10c66c0b2 in core::ptr::swap_nonoverlapping_one::he9532edd02cf97c7 ptr.rs:359\r\n    #3 0x10c670d4c in core::mem::swap::hdf87706b2f446181 mem.rs:653\r\n    #4 0x10c6716ed in core::mem::replace::h9ad7bc2c5ad8c60d mem.rs:711\r\n    #5 0x10c665af2 in _$LT$core..cell..Cell$LT$T$GT$$GT$::replace::h5e8fd793dd71bad7 cell.rs:432\r\n    #6 0x10c6658f4 in _$LT$core..cell..Cell$LT$T$GT$$GT$::set::hbc93a146608ff6a2 cell.rs:389\r\n    #7 0x10c6596a6 in std::thread::local::fast::destroy_value::h7198d56987ed7071 local.rs:397\r\n    #8 0x7fff7cc45d7e in tlv_finalize (libdyld.dylib:x86_64+0x16d7e)\r\n    #9 0x7fff7ce386ae in _pthread_tsd_cleanup (libsystem_pthread.dylib:x86_64+0x36ae)\r\n    #10 0x7fff7ce3b6b0 in _pthread_exit (libsystem_pthread.dylib:x86_64+0x66b0)\r\n    #11 0x7fff7ce38347 in _pthread_body (libsystem_pthread.dylib:x86_64+0x3347)\r\n    #12 0x7fff7ce3b2a6 in _pthread_start (libsystem_pthread.dylib:x86_64+0x62a6)\r\n    #13 0x7fff7ce37424 in thread_start (libsystem_pthread.dylib:x86_64+0x2424)\r\n\r\n0x610000008089 is located 73 bytes inside of 192-byte region [0x610000008040,0x610000008100)\r\nfreed by thread T1 here:\r\n    #0 0x10c73967d in wrap_free (lib__rustc__clang_rt.asan_osx_dynamic.dylib:x86_64+0x5967d)\r\n    #1 0x7fff7ce386ae in _pthread_tsd_cleanup (libsystem_pthread.dylib:x86_64+0x36ae)\r\n    #2 0x7fff7ce3b6b0 in _pthread_exit (libsystem_pthread.dylib:x86_64+0x66b0)\r\n    #3 0x7fff7ce38347 in _pthread_body (libsystem_pthread.dylib:x86_64+0x3347)\r\n    #4 0x7fff7ce3b2a6 in _pthread_start (libsystem_pthread.dylib:x86_64+0x62a6)\r\n    #5 0x7fff7ce37424 in thread_start (libsystem_pthread.dylib:x86_64+0x2424)\r\n\r\npreviously allocated by thread T1 here:\r\n    #0 0x10c7394c3 in wrap_malloc (lib__rustc__clang_rt.asan_osx_dynamic.dylib:x86_64+0x594c3)\r\n    #1 0x7fff7cc32611 in tlv_allocate_and_initialize_for_key (libdyld.dylib:x86_64+0x3611)\r\n    #2 0x7fff7cc32440 in tlv_get_addr (libdyld.dylib:x86_64+0x3440)\r\n    #3 0x10c67aa3d in std::sys_common::thread_info::set::h515643561df38c4d local.rs:296\r\n    #4 0x10c64c6e9 in std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::he15d93b7c71cc10d mod.rs:466\r\n    #5 0x10c64d3c0 in _$LT$F$u20$as$u20$alloc..boxed..FnBox$LT$A$GT$$GT$::call_box::h77b2d26d5e0b55f2 boxed.rs:734\r\n    #6 0x10c67df6b in std::sys::unix::thread::Thread::new::thread_start::h0b558311a1802cc0 thread.rs:14\r\n    #7 0x7fff7ce3833c in _pthread_body (libsystem_pthread.dylib:x86_64+0x333c)\r\n    #8 0x7fff7ce3b2a6 in _pthread_start (libsystem_pthread.dylib:x86_64+0x62a6)\r\n    #9 0x7fff7ce37424 in thread_start (libsystem_pthread.dylib:x86_64+0x2424)\r\n\r\nThread T1 created by T0 here:\r\n    #0 0x10c73143d in wrap_pthread_create (lib__rustc__clang_rt.asan_osx_dynamic.dylib:x86_64+0x5143d)\r\n    #1 0x10c67dc3c in std::sys::unix::thread::Thread::new::hcbffd486872edde6 thread.rs:69\r\n    #2 0x10c64b494 in std::thread::Builder::spawn_unchecked::h3923920731000341 mod.rs:488\r\n    #3 0x10c64cd0f in std::thread::Builder::spawn::h7e37ea2a6d1dc69b mod.rs:382\r\n    #4 0x10c64a58c in std::thread::spawn::h77287ca628b2c83b mod.rs:610\r\n    #5 0x10c65458c in parking_lot_test::main::h36e62a83a5d578be main.rs:22\r\n    #6 0x10c64db4d in std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h38b6bb7d7da5478f rt.rs:64\r\n    #7 0x10c67be17 in std::panicking::try::do_call::hbeca4642433c0ede panicking.rs:297\r\n    #8 0x10c67e55e in __rust_maybe_catch_panic lib.rs:92\r\n    #9 0x10c67c7ec in std::rt::lang_start_internal::h8e4e8fac3cfbbe81 rt.rs:48\r\n    #10 0x10c64dabe in std::rt::lang_start::h9a9dc7a97c4ea753 rt.rs:64\r\n    #11 0x10c6546c1 in main (parking_lot_test:x86_64+0x10000e6c1)\r\n    #12 0x7fff7cc46084 in start (libdyld.dylib:x86_64+0x17084)\r\n\r\nSUMMARY: AddressSanitizer: heap-use-after-free (lib__rustc__clang_rt.asan_osx_dynamic.dylib:x86_64+0x56a3e) in __asan_memcpy\r\nShadow bytes around the buggy address:\r\n  0x1c2000000fc0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x1c2000000fd0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x1c2000000fe0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x1c2000000ff0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x1c2000001000: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd\r\n=>0x1c2000001010: fd[fd]fd fd fd fd fd fd fd fd fd fd fd fd fd fd\r\n  0x1c2000001020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x1c2000001030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x1c2000001040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x1c2000001050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x1c2000001060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\nShadow byte legend (one shadow byte represents 8 application bytes):\r\n  Addressable:           00\r\n  Partially addressable: 01 02 03 04 05 06 07\r\n  Heap left redzone:       fa\r\n  Freed heap region:       fd\r\n  Stack left redzone:      f1\r\n  Stack mid redzone:       f2\r\n  Stack right redzone:     f3\r\n  Stack after return:      f5\r\n  Stack use after scope:   f8\r\n  Global redzone:          f9\r\n  Global init order:       f6\r\n  Poisoned by user:        f7\r\n  Container overflow:      fc\r\n  Array cookie:            ac\r\n  Intra object redzone:    bb\r\n  ASan internal:           fe\r\n  Left alloca redzone:     ca\r\n  Right alloca redzone:    cb\r\n  Shadow gap:              cc\r\n==39852==ABORTING\r\nIllegal instruction: 4\r\n```\r\n\r\n</p></details>", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57534/timeline", "performed_via_github_app": null, "state_reason": "completed"}