{"url": "https://api.github.com/repos/rust-lang/rust/issues/98449", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98449/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98449/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98449/events", "html_url": "https://github.com/rust-lang/rust/issues/98449", "id": 1283517092, "node_id": "I_kwDOAAsO6M5MgOqk", "number": 98449, "title": "Private `#[no_mangle]` symbols are exported from a `cdylib`", "user": {"login": "nxtn-staged", "id": 79820545, "node_id": "MDQ6VXNlcjc5ODIwNTQ1", "avatar_url": "https://avatars.githubusercontent.com/u/79820545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nxtn-staged", "html_url": "https://github.com/nxtn-staged", "followers_url": "https://api.github.com/users/nxtn-staged/followers", "following_url": "https://api.github.com/users/nxtn-staged/following{/other_user}", "gists_url": "https://api.github.com/users/nxtn-staged/gists{/gist_id}", "starred_url": "https://api.github.com/users/nxtn-staged/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nxtn-staged/subscriptions", "organizations_url": "https://api.github.com/users/nxtn-staged/orgs", "repos_url": "https://api.github.com/users/nxtn-staged/repos", "events_url": "https://api.github.com/users/nxtn-staged/events{/privacy}", "received_events_url": "https://api.github.com/users/nxtn-staged/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-06-24T09:38:39Z", "updated_at": "2023-04-09T02:55:32Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "In C++ (MSVC) un-mangling and exporting are controlled via `extern \"C\"` and `__declspec(dllexport)` respectively.\r\n\r\n```cpp\r\nextern \"C\" {\r\n    namespace to_export {\r\n        __declspec(dllexport) int64_t foo() {\r\n            int64_t bar();\r\n            return bar();\r\n        }\r\n    }\r\n    namespace not_to_export {\r\n        int32_t bar() {\r\n            return 42;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```\r\n    00000000 characteristics\r\n    FFFFFFFF time date stamp\r\n        0.00 version\r\n           1 ordinal base\r\n           1 number of functions\r\n           1 number of names\r\n\r\n    ordinal hint RVA      name\r\n\r\n          1    0 00001000 foo = foo\r\n```\r\n\r\nIn Rust, however, all `#[no_mangle]` functions are exported from the final `cdylib`.\r\n\r\n```rust\r\npub mod to_export {\r\n    #[no_mangle]\r\n    pub unsafe extern \"system\" fn foo() -> i64 {\r\n        extern \"system\" {\r\n            fn bar() -> i64;\r\n        }\r\n        bar()\r\n    }\r\n}\r\nmod not_to_export {\r\n    #[no_mangle]\r\n    extern \"system\" fn bar() -> i32 {\r\n        42\r\n    }\r\n}\r\n```\r\n\r\n```\r\n    00000000 characteristics\r\n    FFFFFFFF time date stamp\r\n        0.00 version\r\n           1 ordinal base\r\n           2 number of functions\r\n           2 number of names\r\n\r\n    ordinal hint RVA      name\r\n\r\n          1    0 00001000 bar = bar\r\n          2    1 00001010 foo = foo\r\n```\r\n\r\nIt seems that it is not possible to define an un-mangled and un-exported symbol in Rust.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98449/timeline", "performed_via_github_app": null, "state_reason": null}