{"url": "https://api.github.com/repos/rust-lang/rust/issues/44950", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44950/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44950/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44950/events", "html_url": "https://github.com/rust-lang/rust/issues/44950", "id": 261870915, "node_id": "MDU6SXNzdWUyNjE4NzA5MTU=", "number": 44950, "title": "It's often not possible to implement ToOwned for user composite types", "user": {"login": "uzytkownik", "id": 5706, "node_id": "MDQ6VXNlcjU3MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/5706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uzytkownik", "html_url": "https://github.com/uzytkownik", "followers_url": "https://api.github.com/users/uzytkownik/followers", "following_url": "https://api.github.com/users/uzytkownik/following{/other_user}", "gists_url": "https://api.github.com/users/uzytkownik/gists{/gist_id}", "starred_url": "https://api.github.com/users/uzytkownik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uzytkownik/subscriptions", "organizations_url": "https://api.github.com/users/uzytkownik/orgs", "repos_url": "https://api.github.com/users/uzytkownik/repos", "events_url": "https://api.github.com/users/uzytkownik/events{/privacy}", "received_events_url": "https://api.github.com/users/uzytkownik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-30T20:43:56Z", "updated_at": "2017-10-02T10:07:11Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "`&str` and `&[u8]` seems to work by internal magic but it is hard to implement `ToOwned` for user composite types. Consider:\r\n\r\n```rust\r\n\r\nstruct Foo<'a> {\r\n    foo: &'a str,\r\n    bar: &'a str,\r\n    foobar: &'a str\r\n}\r\n\r\nstruct FooBuf {\r\n    foo: String,\r\n    bar: String,\r\n    foobar: String\r\n}\r\n```\r\n\r\nIt is not possible to mark that `FooBuf` is an owned version of `Foo` as it would require implementing `Borrow` for `FooBuf`. However it is not possible to implement `fn borrow(&FooBuf) -> &Foo` as we don't have anywhere we can store `Foo`. Built-in types workaround it by handling `&str` and similar types separately from `&T` and packing the actual structure there.\r\n\r\n(I know too little about type system to create any RFR which would fix it)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44950/reactions", "total_count": 7, "+1": 7, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44950/timeline", "performed_via_github_app": null, "state_reason": null}