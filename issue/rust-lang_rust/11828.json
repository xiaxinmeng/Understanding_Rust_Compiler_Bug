{"url": "https://api.github.com/repos/rust-lang/rust/issues/11828", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/11828/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/11828/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/11828/events", "html_url": "https://github.com/rust-lang/rust/issues/11828", "id": 26326102, "node_id": "MDU6SXNzdWUyNjMyNjEwMg==", "number": 11828, "title": "Refactor the standard library into a crate of crates", "user": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-01-27T00:09:25Z", "updated_at": "2014-05-07T05:57:36Z", "closed_at": "2014-05-07T05:57:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It is very desirable for std to be maximally portable to a variety of enviroments, and I am slightly worried that if we don't focus on making it well-factored now, before 1.0, that portability will be hampered later.\n\nSub-dividing std into crates to isolate platform-dependent parts will establish clear dependencies within the library. We can preserve std's interface by reexporting.\n\nI can imagine at least the following subdivision:\n- libc\n- win - the parts of std::libc that are actually the windows api\n- prim - the primitive types\n- path\n- os\n- comm\n- task\n- rt\n- std\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/11828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/11828/timeline", "performed_via_github_app": null, "state_reason": "completed"}