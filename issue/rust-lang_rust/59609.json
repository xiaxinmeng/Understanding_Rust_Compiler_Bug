{"url": "https://api.github.com/repos/rust-lang/rust/issues/59609", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/59609/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/59609/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/59609/events", "html_url": "https://github.com/rust-lang/rust/issues/59609", "id": 427817999, "node_id": "MDU6SXNzdWU0Mjc4MTc5OTk=", "number": 59609, "title": "ICE: 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:588:9", "user": {"login": "0xmad", "id": 14254374, "node_id": "MDQ6VXNlcjE0MjU0Mzc0", "avatar_url": "https://avatars.githubusercontent.com/u/14254374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0xmad", "html_url": "https://github.com/0xmad", "followers_url": "https://api.github.com/users/0xmad/followers", "following_url": "https://api.github.com/users/0xmad/following{/other_user}", "gists_url": "https://api.github.com/users/0xmad/gists{/gist_id}", "starred_url": "https://api.github.com/users/0xmad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0xmad/subscriptions", "organizations_url": "https://api.github.com/users/0xmad/orgs", "repos_url": "https://api.github.com/users/0xmad/repos", "events_url": "https://api.github.com/users/0xmad/events{/privacy}", "received_events_url": "https://api.github.com/users/0xmad/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-01T17:10:07Z", "updated_at": "2019-04-01T18:19:20Z", "closed_at": "2019-04-01T18:19:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\n\r\nTry to run this code:\r\n```\r\nfn main() {\r\n    pretty_env_logger::init();\r\n\r\n    let address = ([127, 0, 0, 1], 3000).into();\r\n    let pool = Arc::new(Database::get_pool());\r\n    let root_node = Arc::new(RootNode::new(Query, Mutation));\r\n    let ctx = Arc::new(Context { pool: pool.clone() });\r\n\r\n    let service = move || {\r\n        let root_node = root_node.clone();\r\n        let ctx = ctx.clone();\r\n\r\n        service_fn(\r\n            move |req| -> Box<Future<Item = Response<Body>, Error = _> + Send> {\r\n                let root_node = root_node.clone();\r\n                let ctx = ctx.clone();\r\n                match (req.method(), req.uri().path()) {\r\n                    (&Method::GET, \"/\") => Box::new(juniper_hyper::graphiql(\"/graphql\")),\r\n                    (&Method::GET, \"/graphql\") => {\r\n                        Box::new(juniper_hyper::graphql(root_node, ctx, req))\r\n                    }\r\n                    (&Method::POST, \"/graphql\") => {\r\n                        Box::new(juniper_hyper::graphql(root_node, ctx, req))\r\n                    }\r\n                    _ => {\r\n                        let mut response = Response::new(Body::empty());\r\n                        *response.status_mut() = StatusCode::NOT_FOUND;\r\n                        Box::new(future::ok(response))\r\n                    }\r\n                }\r\n            },\r\n        )\r\n    };\r\n\r\n    let server = Server::bind(&address)\r\n        .serve(service)\r\n        .map_err(|e| eprintln!(\"server error: {}\", e));\r\n    println!(\"Listening on http://{}\", address);\r\n\r\n    rt::run(server);\r\n}\r\n```\r\nAnd get this ICE:\r\n```\r\nerror: internal compiler error: src/librustc_mir/borrow_check/nll/universal_regions.rs:744: cannot convert `ReScope(Node(238))` to a region vid\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:588:9\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n   1: std::sys_common::backtrace::_print\r\n   2: std::panicking::default_hook::{{closure}}\r\n   3: std::panicking::default_hook\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::util::bug::opt_span_bug_fmt\r\n  13: rustc::util::bug::bug_fmt\r\n  14: rustc_mir::borrow_check::nll::universal_regions::UniversalRegionIndices::to_region_vid::{{closure}}\r\n  15: rustc_mir::borrow_check::nll::universal_regions::UniversalRegionIndices::to_region_vid\r\n  16: rustc_mir::borrow_check::nll::type_check::constraint_conversion::ConstraintConversion::convert_all\r\n  17: rustc_mir::borrow_check::nll::type_check::TypeChecker::prove_predicate\r\n  18: rustc_mir::borrow_check::nll::type_check::TypeChecker::check_stmt\r\n  19: rustc_mir::borrow_check::nll::type_check::TypeChecker::typeck_mir\r\n  20: rustc_mir::borrow_check::nll::type_check::type_check\r\n  21: rustc_mir::borrow_check::nll::compute_regions\r\n  22: rustc_mir::borrow_check::do_mir_borrowck\r\n  23: rustc::ty::context::GlobalCtxt::enter_local\r\n  24: rustc_mir::borrow_check::mir_borrowck\r\n  25: rustc::ty::query::__query_compute::mir_borrowck\r\n  26: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::mir_borrowck<'tcx>>::compute\r\n  27: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  28: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_with\r\n  29: rustc_mir::borrow_check::nll::type_check::TypeChecker::check_stmt\r\n  30: rustc_mir::borrow_check::nll::type_check::TypeChecker::typeck_mir\r\n  31: rustc_mir::borrow_check::nll::type_check::type_check\r\n  32: rustc_mir::borrow_check::nll::compute_regions\r\n  33: rustc_mir::borrow_check::do_mir_borrowck\r\n  34: rustc::ty::context::GlobalCtxt::enter_local\r\n  35: rustc_mir::borrow_check::mir_borrowck\r\n  36: rustc::ty::query::__query_compute::mir_borrowck\r\n  37: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::mir_borrowck<'tcx>>::compute\r\n  38: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  39: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_with\r\n  40: rustc_mir::borrow_check::nll::type_check::TypeChecker::check_stmt\r\n  41: rustc_mir::borrow_check::nll::type_check::TypeChecker::typeck_mir\r\n  42: rustc_mir::borrow_check::nll::type_check::type_check\r\n  43: rustc_mir::borrow_check::nll::compute_regions\r\n  44: rustc_mir::borrow_check::do_mir_borrowck\r\n  45: rustc::ty::context::GlobalCtxt::enter_local\r\n  46: rustc_mir::borrow_check::mir_borrowck\r\n  47: rustc::ty::query::__query_compute::mir_borrowck\r\n  48: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::mir_borrowck<'tcx>>::compute\r\n  49: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  50: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_with\r\n  51: rustc::ty::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::par_body_owners\r\n  52: rustc::util::common::time\r\n  53: <std::thread::local::LocalKey<T>>::with\r\n  54: rustc::ty::context::TyCtxt::create_and_enter\r\n  55: rustc_driver::driver::compile_input\r\n  56: rustc_driver::run_compiler_with_pool\r\n  57: <scoped_tls::ScopedKey<T>>::set\r\n  58: rustc_driver::run_compiler\r\n  59: <scoped_tls::ScopedKey<T>>::set\r\nquery stack during panic:\r\n#0 [mir_borrowck] processing `main::{{closure}}::{{closure}}`\r\n#1 [mir_borrowck] processing `main::{{closure}}`\r\n#2 [mir_borrowck] processing `main`\r\nend of query stack\r\nerror: aborting due to previous error\r\n```\r\n\r\nSeems the problem is here:\r\n```\r\n(&Method::GET, \"/graphql\") => {\r\n    Box::new(juniper_hyper::graphql(root_node, ctx, req))\r\n}\r\n(&Method::POST, \"/graphql\") => {\r\n    Box::new(juniper_hyper::graphql(root_node, ctx, req))\r\n}\r\n```\r\n\r\n## Meta\r\n```\r\nrustc 1.33.0 (2aa4c46cf 2019-02-28)\r\nbinary: rustc\r\ncommit-hash: 2aa4c46cfdd726e97360c2734835aa3515e8c858\r\ncommit-date: 2019-02-28\r\nhost: x86_64-apple-darwin\r\nrelease: 1.33.0\r\nLLVM version: 8.0\r\n```\r\n\r\nThanks", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/59609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/59609/timeline", "performed_via_github_app": null, "state_reason": "completed"}