{"url": "https://api.github.com/repos/rust-lang/rust/issues/91639", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91639/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91639/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91639/events", "html_url": "https://github.com/rust-lang/rust/issues/91639", "id": 1073720440, "node_id": "I_kwDOAAsO6M4__6x4", "number": 91639, "title": "Tracking Issue for enabling `elided_lifetimes_in_paths` lints", "user": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 289259951, "node_id": "MDU6TGFiZWwyODkyNTk5NTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-help-wanted", "name": "E-help-wanted", "color": "02E10C", "default": false, "description": "Call for participation: Help is requested to fix this issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 3537211959, "node_id": "LA_kwDOAAsO6M7S1ZI3", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-impl-incomplete", "name": "S-tracking-impl-incomplete", "color": "4682b4", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 30, "created_at": "2021-12-07T20:13:12Z", "updated_at": "2023-02-01T21:44:09Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This issue tracks getting the currently-allow-by-default `elided_lifetimes_in_paths` lint <https://doc.rust-lang.org/rustc/lints/listing/allowed-by-default.html#elided-lifetimes-in-paths> into a place where it can be enabled by default.\r\n\r\n(This was formerly in the in-band lifetimes tracking issue, #44524, but is being split out because it doesn't actually depend on *in-band* specifically now that `'_` is stable.)\r\n\r\nThere seems to be general agreement amongst lang that lifetimes that participate in elision should be visible.  That means things like\r\n```diff\r\n-fn foo<T>(x: &T) -> Foo<T>\r\n+fn foo<T>(x: &T) -> Foo<'_, T>\r\n```\r\nand\r\n```diff\r\n-fn foo<T>(x: Foo<T>, y: Bar<T>) -> &T\r\n+fn foo<T>(x: Foo<'_, T>, y: Bar<T>) -> &T\r\n```\r\n\r\nHowever, there's less agreement whether they're needed in other places.  For example, whether it's valuable to require showing the lifetime in \r\n```diff\r\n impl fmt::Debug for StrWrap {\r\n-    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\r\n+    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {\r\n         fmt.write_str(self.0)\r\n     }\r\n }\r\n```\r\nA comment against needing that kind of `'_`: https://github.com/rust-lang/rust/issues/44524#issuecomment-414062464\r\nAnd one saying it's helpful to show it: https://github.com/rust-lang/rust/issues/44524#issuecomment-414663773\r\n\r\n(If anyone remembers where lang discussed this and has notes about it, please post or edit this comment!)\r\n\r\nPerhaps one way to make progress is to start splitting up the lint to isolate the different cases?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91639/timeline", "performed_via_github_app": null, "state_reason": null}