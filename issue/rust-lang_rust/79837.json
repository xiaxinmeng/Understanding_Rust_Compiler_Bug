{"url": "https://api.github.com/repos/rust-lang/rust/issues/79837", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79837/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79837/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79837/events", "html_url": "https://github.com/rust-lang/rust/issues/79837", "id": 759789528, "node_id": "MDU6SXNzdWU3NTk3ODk1Mjg=", "number": 79837, "title": "asm!() truncates $'s in AT&T syntax with local label", "user": {"login": "carado", "id": 407034, "node_id": "MDQ6VXNlcjQwNzAzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/407034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carado", "html_url": "https://github.com/carado", "followers_url": "https://api.github.com/users/carado/followers", "following_url": "https://api.github.com/users/carado/following{/other_user}", "gists_url": "https://api.github.com/users/carado/gists{/gist_id}", "starred_url": "https://api.github.com/users/carado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carado/subscriptions", "organizations_url": "https://api.github.com/users/carado/orgs", "repos_url": "https://api.github.com/users/carado/repos", "events_url": "https://api.github.com/users/carado/events{/privacy}", "received_events_url": "https://api.github.com/users/carado/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 91598611, "node_id": "MDU6TGFiZWw5MTU5ODYxMQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inline-assembly", "name": "A-inline-assembly", "color": "f7e101", "default": false, "description": "Area: inline asm!(..)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2046313052, "node_id": "MDU6TGFiZWwyMDQ2MzEzMDUy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-asm", "name": "F-asm", "color": "f9c0cc", "default": false, "description": "`#![feature(asm)]` (not `llvm_asm`)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-12-08T21:18:57Z", "updated_at": "2020-12-10T00:16:26Z", "closed_at": "2020-12-09T22:45:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to run the asm!() instruction `mov [rsp], 3f` (move the forward local label `3` into the memory pointed to by register rsp).\r\nMy general template is:\r\n```rust\r\n#![feature(asm)]\r\n\r\nfn main() {\r\n  unsafe {\r\n    asm!(\r\n      \".intel_syntax\", // can be changed to .att_syntax for cases below\r\n      \"mov [rsp], 3f\",\r\n      \"3:\",\r\n    );\r\n  }\r\n}\r\n```\r\n\r\n(as well as\r\n```c\r\nint main() {\r\n  __asm__ volatile (\r\n    \".intel_syntax\\n\"\r\n    \"mov [rsp], 3f\\n\"\r\n    \"3:\"\r\n  );\r\n}\r\n```\r\nfor testing in clang C)\r\n\r\nHere are the results I get for various instructions under both syntaxes (Intel and AT&T) and in both languages:\r\n1. `mov [rsp], 3f` (Intel, C & Rust) \u2192 \"invalid operand for instruction\"\r\n2. `mov [rax], 3f` (Intel, C & Rust) \u2192 \"invalid operand for instruction\"\r\n3. `movabsq 3f, [%rsp]` (AT&T, C & Rust) \u2192 \"invalid operand for instruction\"\r\n4. `movabsq 3f, [%rax]` (AT&T, C & Rust) \u2192 compiles (shouldn't; `3f` should be `$3f`)\r\n5. `movabsq $3f, [%rsp]` (AT&T, C) \u2192 compiles\r\n6. `movabsq $3f, [%rsp]` (AT&T, Rust) \u2192 \"invalid operand for instruction\" (this is the weird one!)\r\n7. `movabsq $3f, [%rax]` (AT&T, C & Rust) \u2192 compiles\r\n8. `movabsq $$$$$$3f, [%rsp]` (AT&T, C) \u2192 \"invalid token in expression\"\r\n9. `movabsq $$$$$$3f, [%rsp]` (AT&T, Rust)\u2192 \"invalid operand for instruction\"\r\n10. `movabsq $$$$$$3f, [%rax]` (AT&T, C) \u2192 \"invalid token in expression\"\r\n11. `movabsq $$$$$$3f, [%rax]` (AT&T, Rust) \u2192 compiles (??)\r\n\r\n1 and 2 are unfortunate quirks of LLVM assembly, I guess; and so must be 4. The weird part is the inconsistencies between C and Rust, which leads me to think that Rust is just removing all `$`'s from asm!(). Indeed, if you remove all `$`'s, Rust becomes fully consistent with clang C:\r\n* cases 6 and 9 is being treated like case 3 and fail\r\n* cases 7 and 11 are being treated like case 4 and weirdly compile (as per an apparent LLMV quirk)\r\n\r\nThus, unless cases 1 and 2 are my own fault for not knowing how to do the operation in question in Intel LLVM assembly (definitely a possiblity!), I'm out of options to do the operation I originally wanted.\r\nSorry for the long post, I wanted to be as clear as possible about why I think there is some amount of bug in rust that makes some operations impossible (save for, say, working out instruction offsets manually, or assembling some machine code separately).\r\n\r\n(of possible note: https://github.com/rust-lang/rust/issues/74558 mentions the workaround of not using local labels 0 and 1, but as you can see those don't seem to work here)\r\n\r\n(the #llvm IRC mentioned using `lea` in place of `mov` but I can't get that working either)\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0-nightly (0f6f2d681 2020-12-06)\r\nbinary: rustc\r\ncommit-hash: 0f6f2d681b39c5f95459cd09cb936b6ceb27cd82\r\ncommit-date: 2020-12-06\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.50.0-nightly\r\n```", "closed_by": {"login": "carado", "id": 407034, "node_id": "MDQ6VXNlcjQwNzAzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/407034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carado", "html_url": "https://github.com/carado", "followers_url": "https://api.github.com/users/carado/followers", "following_url": "https://api.github.com/users/carado/following{/other_user}", "gists_url": "https://api.github.com/users/carado/gists{/gist_id}", "starred_url": "https://api.github.com/users/carado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carado/subscriptions", "organizations_url": "https://api.github.com/users/carado/orgs", "repos_url": "https://api.github.com/users/carado/repos", "events_url": "https://api.github.com/users/carado/events{/privacy}", "received_events_url": "https://api.github.com/users/carado/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79837/timeline", "performed_via_github_app": null, "state_reason": "completed"}