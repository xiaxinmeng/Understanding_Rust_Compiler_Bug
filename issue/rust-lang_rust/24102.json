{"url": "https://api.github.com/repos/rust-lang/rust/issues/24102", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/24102/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/24102/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/24102/events", "html_url": "https://github.com/rust-lang/rust/issues/24102", "id": 66513410, "node_id": "MDU6SXNzdWU2NjUxMzQxMA==", "number": 24102, "title": "Public function is allowed to return private struct, results in cc linking error", "user": {"login": "daboross", "id": 1152146, "node_id": "MDQ6VXNlcjExNTIxNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1152146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daboross", "html_url": "https://github.com/daboross", "followers_url": "https://api.github.com/users/daboross/followers", "following_url": "https://api.github.com/users/daboross/following{/other_user}", "gists_url": "https://api.github.com/users/daboross/gists{/gist_id}", "starred_url": "https://api.github.com/users/daboross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daboross/subscriptions", "organizations_url": "https://api.github.com/users/daboross/orgs", "repos_url": "https://api.github.com/users/daboross/repos", "events_url": "https://api.github.com/users/daboross/events{/privacy}", "received_events_url": "https://api.github.com/users/daboross/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-06T03:08:32Z", "updated_at": "2015-04-07T00:14:31Z", "closed_at": "2015-04-06T16:30:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This error can be shown with two rust files compiled directly via `rustc` (or cargo, but just using rustc is simpler for showing the error).\n\n`cratea.rs`:\n\n``` rust\n#![crate_name = \"cratea\"]\n#![crate_type = \"lib\"]\n\npub mod pub_dispatch {\n    use dispatch;\n\n    pub fn create_dispatch() -> dispatch::Dispatch {\n        return dispatch::Dispatch;\n    }\n}\n\nmod dispatch {\n    pub struct Dispatch;\n\n    impl Dispatch {\n        pub fn dispatch(self) {\n        }\n    }\n}\n```\n\n`crateb.rs`:\n\n``` rust\n#![crate_name = \"crateb\"]\nextern crate cratea;\n\nfn main() {\n    let dispatch = cratea::pub_dispatch::create_dispatch();\n\n    dispatch.dispatch();\n}\n```\n\nOutput from compiling:\n\n``` text\n$ rustc cratea.rs\ncratea.rs:16:9: 17:10 warning: method is never used: `dispatch`, #[warn(dead_code)] on by default\ncratea.rs:16         pub fn dispatch(self) {\ncratea.rs:17         }\n$ rustc -L crate=./ crateb.rs\nerror: linking with `cc` failed: exit code: 1\nnote: \"cc\" \"-Wl,--as-needed\" \"-m64\" \"-L\" \"/usr/local/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-o\" \"crateb\" \"crateb.o\" \"-Wl,--whole-archive\" \"-lmorestack\" \"-Wl,--no-whole-archive\" \"-Wl,--gc-sections\" \"-pie\" \"-nodefaultlibs\" \"/tmp/tmp.8n2IVQ5qlk/libcratea.rlib\" \"/usr/local/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-4e7c5e5c.rlib\" \"/usr/local/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcollections-4e7c5e5c.rlib\" \"/usr/local/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunicode-4e7c5e5c.rlib\" \"/usr/local/lib/rustlib/x86_64-unknown-linux-gnu/lib/librand-4e7c5e5c.rlib\" \"/usr/local/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-4e7c5e5c.rlib\" \"/usr/local/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-4e7c5e5c.rlib\" \"/usr/local/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-4e7c5e5c.rlib\" \"-L\" \"./\" \"-L\" \"/usr/local/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-L\" \"/tmp/tmp.8n2IVQ5qlk/.rust/lib/x86_64-unknown-linux-gnu\" \"-L\" \"/tmp/tmp.8n2IVQ5qlk/lib/x86_64-unknown-linux-gnu\" \"-Wl,--whole-archive\" \"-Wl,-Bstatic\" \"-Wl,--no-whole-archive\" \"-Wl,-Bdynamic\" \"-ldl\" \"-lpthread\" \"-lrt\" \"-lgcc_s\" \"-lpthread\" \"-lc\" \"-lm\" \"-lcompiler-rt\"\nnote: crateb.o: In function `main::h69a169139aab5413faa':\ncrateb.0.rs:(.text._ZN4main20h69a169139aab5413faaE+0x2c): undefined reference to `dispatch::Dispatch::dispatch::ha28d1bdf4c2d8d39uaa'\ncollect2: error: ld returned 1 exit status\n\nerror: aborting due to previous error\n```\n\nHappens in `rustc 1.0.0-beta (9854143cb 2015-04-02) (built 2015-04-02)` and `rustc 1.0.0-nightly (083b8a404 2015-04-05) (built 2015-04-05)`.\n\nI would expect this to fail when compiling `cratea`, but instead `cratea` compiles fine, but then any crate using it will fail compiling.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/24102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/24102/timeline", "performed_via_github_app": null, "state_reason": "completed"}