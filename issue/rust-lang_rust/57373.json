{"url": "https://api.github.com/repos/rust-lang/rust/issues/57373", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57373/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57373/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57373/events", "html_url": "https://github.com/rust-lang/rust/issues/57373", "id": 396244495, "node_id": "MDU6SXNzdWUzOTYyNDQ0OTU=", "number": 57373, "title": "Recursive type with infinite size leads to internal compiler error (try_mark_green() - Forcing the DepNode should have set its color)", "user": {"login": "BafDyce", "id": 9869387, "node_id": "MDQ6VXNlcjk4NjkzODc=", "avatar_url": "https://avatars.githubusercontent.com/u/9869387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BafDyce", "html_url": "https://github.com/BafDyce", "followers_url": "https://api.github.com/users/BafDyce/followers", "following_url": "https://api.github.com/users/BafDyce/following{/other_user}", "gists_url": "https://api.github.com/users/BafDyce/gists{/gist_id}", "starred_url": "https://api.github.com/users/BafDyce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BafDyce/subscriptions", "organizations_url": "https://api.github.com/users/BafDyce/orgs", "repos_url": "https://api.github.com/users/BafDyce/repos", "events_url": "https://api.github.com/users/BafDyce/events{/privacy}", "received_events_url": "https://api.github.com/users/BafDyce/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2019-01-06T10:01:20Z", "updated_at": "2019-12-08T22:09:14Z", "closed_at": "2019-12-08T22:09:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "A (rather complex) enum-based data structure (code below) lead to the following compiler panic:\r\n\r\n```\r\n$ RUST_BACKTRACE=1 cargo run\r\n   Compiling nested-enums v0.1.0 (file:///home/programmer/programming/rustc-bugs/nested-enums)\r\nerror: internal compiler error: src/librustc/dep_graph/graph.rs:634: try_mark_green() - Forcing the DepNode should have set its color\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:590:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:39\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:70\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:58\r\n             at src/libstd/panicking.rs:200\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:215\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:482\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::util::bug::opt_span_bug_fmt\r\n  13: rustc::util::bug::bug_fmt\r\n  14: rustc::dep_graph::graph::DepGraph::try_mark_green\r\n  15: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_mark_green_and_read\r\n  16: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_with\r\n  17: rustc::ty::AdtDef::sized_constraint\r\n  18: rustc::ty::AdtDef::sized_constraint_for_ty\r\n  19: rustc::ty::AdtDef::sized_constraint_for_ty\r\n  20: <core::iter::FlatMap<I, U, F> as core::iter::iterator::Iterator>::next\r\n  21: <smallvec::SmallVec<A> as core::iter::traits::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  22: <T as rustc::ty::context::InternIteratorElement<T, R>>::intern_with\r\n  23: rustc::ty::adt_sized_constraint\r\n  24: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::adt_sized_constraint<'tcx>>::compute\r\n  25: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  26: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  27: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  28: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query\r\n  29: rustc::ty::query::plumbing::force_from_dep_node\r\n  30: rustc::dep_graph::graph::DepGraph::try_mark_green\r\n  31: rustc::dep_graph::graph::DepGraph::try_mark_green\r\n  32: rustc::dep_graph::graph::DepGraph::try_mark_green\r\n  33: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_mark_green_and_read\r\n  34: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_with\r\n  35: rustc::traits::query::evaluate_obligation::<impl rustc::infer::InferCtxt<'cx, 'gcx, 'tcx>>::evaluate_obligation\r\n  36: rustc::traits::query::evaluate_obligation::<impl rustc::infer::InferCtxt<'cx, 'gcx, 'tcx>>::evaluate_obligation_no_overflow\r\n  37: <rustc_data_structures::obligation_forest::ObligationForest<O>>::process_obligations\r\n  38: <rustc::traits::fulfill::FulfillmentContext<'tcx> as rustc::traits::engine::TraitEngine<'tcx>>::select_where_possible\r\n  39: <rustc::traits::fulfill::FulfillmentContext<'tcx> as rustc::traits::engine::TraitEngine<'tcx>>::select_all_or_error\r\n  40: rustc_typeck::check::FnCtxt::select_all_obligations_or_error\r\n  41: rustc::ty::context::GlobalCtxt::enter_local\r\n  42: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  43: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::check_item_well_formed<'tcx>>::compute\r\n  44: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  45: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  46: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  47: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_with\r\n  48: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::ensure_query\r\n  49: <rustc_typeck::check::wfcheck::CheckTypeWellFormedVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'v>>::visit_item\r\n  50: rustc::hir::Crate::visit_all_item_likes\r\n  51: rustc::util::common::time\r\n  52: rustc_typeck::check_crate\r\n  53: <std::thread::local::LocalKey<T>>::with\r\n  54: rustc::ty::context::TyCtxt::create_and_enter\r\n  55: rustc_driver::driver::compile_input\r\n  56: rustc_driver::run_compiler_with_pool\r\n  57: <scoped_tls::ScopedKey<T>>::set\r\n  58: rustc_driver::run_compiler\r\n  59: <scoped_tls::ScopedKey<T>>::set\r\n  60: syntax::with_globals\r\n  61: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:92\r\n  62: <F as alloc::boxed::FnBox<A>>::call_box\r\n  63: std::sys::unix::thread::Thread::new::thread_start\r\n             at /rustc/b2b7a063af39455d7362524da3123c34c3f4842e/src/liballoc/boxed.rs:734\r\n             at src/libstd/sys_common/thread.rs:14\r\n             at src/libstd/sys/unix/thread.rs:81\r\n  64: start_thread\r\n  65: clone\r\nquery stack during panic:\r\n#0 [adt_sized_constraint] processing `DieRollAction`\r\n#1 [check_item_well_formed] processing `Action`\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.33.0-nightly (b2b7a063a 2019-01-01) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `nested-enums`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nInstead, I would have expected the following error message: \r\n\r\n```\r\nerror[E0072]: recursive type `Outer` has infinite size\r\n```\r\n\r\nThis is the code:\r\n\r\n```rust\r\n#[derive(Debug)]\r\npub enum Action {\r\n    Unknown(Option<Vec<String>>),\r\n    AreaSelection(usize, Box<Action>),\r\n    CardGive(usize, usize, Option<Vec<usize>>),\r\n    CardPlayed(usize),\r\n    CardSell(Option<Vec<usize>>, usize, usize, Option<usize>, usize),\r\n    CardTake(usize, Option<Vec<usize>>),\r\n    // THE BUG EXISTS IN THIS ENUM-VARIANT (see definition below)\r\n    DieRoll(DieRollAction),\r\n    HouseBuild(usize, Option<usize>),\r\n    HouseDestruct,\r\n    HouseReplace(usize),\r\n    IgnoreRandomEvent(usize),\r\n    IncreaseCardBudget(usize),\r\n    Interrupt,\r\n    InterruptSelf,\r\n    InvestigatePersonalities(Option<Vec<usize>>),\r\n    Kill(usize, bool, usize, bool),\r\n    Loan(usize, usize),\r\n    LoanPayback(usize),\r\n    MinionMove(usize, usize, usize),\r\n    MinionPlace(usize, bool),\r\n    MinionSwap((usize, usize), (usize, usize)),\r\n    MoneyGive(usize),\r\n    MoneyTake(usize, usize),\r\n    None,\r\n    PersonalityExchange(Option<usize>, Option<usize>),\r\n    RandomEvent,\r\n    SwapHand((usize, Option<Vec<usize>>), (usize, Option<Vec<usize>>)),\r\n    Text(Vec<Action>),\r\n    TroublePlace(usize),\r\n    TroubleRemove(usize),\r\n    TurnStart(usize, bool),\r\n    TurnEnd(usize, Vec<usize>),\r\n}\r\n\r\n#[derive(Debug)]\r\npub enum DieRollAction {\r\n    DieRollRequest(u64, usize),\r\n    DieRollResult(u64, Vec<usize>),\r\n    Specification(usize, usize),\r\n    // Here we create a recursive data structure without indirection\r\n    DieRollExec(u64, (usize, Action)),\r\n}\r\n\r\nfn main() {\r\n    let oo = Action::TurnStart(0, true);\r\n    println!(\"{:#?}\", oo);\r\n}\r\n\r\n```\r\n\r\n**Important Note:** For submitting this bug report, I tried to sanitize the data structure (less variants, simplified names, etc.), however doing any changes (even if just renaming `Action` to something like `Outer`) removed the bug and resulted in the \"infinite size\" error, as expected.", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57373/timeline", "performed_via_github_app": null, "state_reason": "completed"}