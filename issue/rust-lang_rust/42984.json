{"url": "https://api.github.com/repos/rust-lang/rust/issues/42984", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42984/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42984/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42984/events", "html_url": "https://github.com/rust-lang/rust/issues/42984", "id": 239784555, "node_id": "MDU6SXNzdWUyMzk3ODQ1NTU=", "number": 42984, "title": "Expressing variant lifetimes with trait objects is tricky", "user": {"login": "aidanhs", "id": 1050652, "node_id": "MDQ6VXNlcjEwNTA2NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1050652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidanhs", "html_url": "https://github.com/aidanhs", "followers_url": "https://api.github.com/users/aidanhs/followers", "following_url": "https://api.github.com/users/aidanhs/following{/other_user}", "gists_url": "https://api.github.com/users/aidanhs/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidanhs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidanhs/subscriptions", "organizations_url": "https://api.github.com/users/aidanhs/orgs", "repos_url": "https://api.github.com/users/aidanhs/repos", "events_url": "https://api.github.com/users/aidanhs/events{/privacy}", "received_events_url": "https://api.github.com/users/aidanhs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-30T13:48:58Z", "updated_at": "2017-06-30T14:03:34Z", "closed_at": "2017-06-30T14:03:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://is.gd/xCZ1UF\r\n```\r\nuse std::io::{Cursor, Read, Write};\r\n\r\ntrait Ser<W> {\r\n    fn serialize<'a, 'b>(&'a self, writer: &'b mut W);\r\n}\r\n\r\nfn main() {\r\n    let mut buffer = vec![0u8];\r\n    let frameworks: Vec<&Ser<Cursor<&mut [u8]>>> = vec![];\r\n\r\n    for framework in frameworks {\r\n        let mut write_cursor = Cursor::new(buffer.as_mut_slice());\r\n        framework.serialize(&mut write_cursor);\r\n    }\r\n}\r\n```\r\nThis does not compile with:\r\n```\r\nrustc 1.20.0-nightly (3bfc18a96 2017-06-29)\r\nerror[E0499]: cannot borrow `buffer` as mutable more than once at a time\r\n  --> <anon>:12:44\r\n   |\r\n12 |         let mut write_cursor = Cursor::new(buffer.as_mut_slice());\r\n   |                                            ^^^^^^\r\n   |                                            |\r\n   |                                            second mutable borrow occurs here\r\n   |                                            first mutable borrow occurs here\r\n...\r\n15 | }\r\n   | - first borrow ends here\r\n\r\nerror: aborting due to previous error(s)\r\n```\r\n\r\nBut changing it to a struct with an impl works - https://is.gd/2OM3ud\r\n\r\nIs there a way to express this? I've been fighting with it for a little while, so if there is I suspect there could be some diagnostic improvements.", "closed_by": {"login": "aidanhs", "id": 1050652, "node_id": "MDQ6VXNlcjEwNTA2NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1050652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidanhs", "html_url": "https://github.com/aidanhs", "followers_url": "https://api.github.com/users/aidanhs/followers", "following_url": "https://api.github.com/users/aidanhs/following{/other_user}", "gists_url": "https://api.github.com/users/aidanhs/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidanhs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidanhs/subscriptions", "organizations_url": "https://api.github.com/users/aidanhs/orgs", "repos_url": "https://api.github.com/users/aidanhs/repos", "events_url": "https://api.github.com/users/aidanhs/events{/privacy}", "received_events_url": "https://api.github.com/users/aidanhs/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42984/timeline", "performed_via_github_app": null, "state_reason": "completed"}