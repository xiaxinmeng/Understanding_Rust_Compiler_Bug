{"url": "https://api.github.com/repos/rust-lang/rust/issues/87015", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87015/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87015/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87015/events", "html_url": "https://github.com/rust-lang/rust/issues/87015", "id": 941118286, "node_id": "MDU6SXNzdWU5NDExMTgyODY=", "number": 87015, "title": "Improve error messages for HashSet with non-Hash type", "user": {"login": "nirvdrum", "id": 12584, "node_id": "MDQ6VXNlcjEyNTg0", "avatar_url": "https://avatars.githubusercontent.com/u/12584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nirvdrum", "html_url": "https://github.com/nirvdrum", "followers_url": "https://api.github.com/users/nirvdrum/followers", "following_url": "https://api.github.com/users/nirvdrum/following{/other_user}", "gists_url": "https://api.github.com/users/nirvdrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/nirvdrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nirvdrum/subscriptions", "organizations_url": "https://api.github.com/users/nirvdrum/orgs", "repos_url": "https://api.github.com/users/nirvdrum/repos", "events_url": "https://api.github.com/users/nirvdrum/events{/privacy}", "received_events_url": "https://api.github.com/users/nirvdrum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-07-09T23:23:31Z", "updated_at": "2021-09-10T14:53:53Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI ran into a situation with confusing error messages constructing a `HashSet` with a type that doesn't inherit `Hash`.\r\n\r\nI tried this code:\r\n\r\n```rust\r\nlet mut live_in = HashSet::<Temp>::new();\r\nlive_in.extend(value.uses.iter())`\r\n```\r\n\r\nI expected to see this happen:\r\n\r\nThe values from `value.uses` to be inserted into the set `live_in`. Or, an error message letting me know what's wrong.\r\n\r\nInstead, this happened:\r\n\r\nI saw the following error:\r\n\r\n```\r\nerror[E0599]: no method named `extend` found for struct `std::collections::HashSet<temp::Temp>` in the current scope\r\n  --> src/liveness.rs:88:17\r\n   |\r\n88 |         live_in.extend(value.uses.iter());\r\n   |                 ^^^^^^ method not found in `std::collections::HashSet<temp::Temp>`\r\n```\r\n\r\nThis error message isn't terribly helpful. It was especially confusing because I had called `extend` on other sets without incident. After searching for a while to figure out what was going wrong, I decided to just try manually inserting the values:\r\n\r\n```rust\r\nfor temp in &value.uses {\r\n    live_in.insert(*temp);\r\n}\r\n```\r\n\r\nThis time, I received a considerably more helpful error message:\r\n\r\n```\r\nerror[E0599]: the method `insert` exists for struct `std::collections::HashSet<temp::Temp>`, but its trait bounds were not satisfied\r\n  --> src/liveness.rs:89:21\r\n   |\r\n89 |             live_in.insert(*temp);\r\n   |                     ^^^^^^ method cannot be called on `std::collections::HashSet<temp::Temp>` due to unsatisfied trait bounds\r\n   | \r\n  ::: src/temp.rs:14:1\r\n   |\r\n14 | pub struct Temp {\r\n   | --------------- doesn't satisfy `temp::Temp: Hash`\r\n   |\r\n   = note: the following trait bounds were not satisfied:\r\n           `temp::Temp: Hash`\r\n```\r\n\r\nUltimately, the problem was I neglected to implement `Hash` for my `Temp` type. That's obviously a straightforward user error, but also one that I think is reasonably common. The reason I'm filing an issue is I think the error messages could be improved here to help out users better. I suppose what's most surprising to me is that the following line didn't error:\r\n\r\n```rust\r\nlet mut live_in = HashSet::<Temp>::new();\r\n```\r\n\r\nI would have expected the bounds check to happen as the type was being constructed, rather than delaying it until an operation on the value. There's likely some reason to allow construction of `HashSet` with a non-`Hash` type, but the interaction leads to errors that I think are a bit removed from the source.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.53.0 (53cb7b09b 2021-06-17)\r\nbinary: rustc\r\ncommit-hash: 53cb7b09b00cbea8754ffb78e7e3cb521cb8af4b\r\ncommit-date: 2021-06-17\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.53.0\r\nLLVM version: 12.0.1\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87015/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87015/timeline", "performed_via_github_app": null, "state_reason": null}