{"url": "https://api.github.com/repos/rust-lang/rust/issues/100114", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/100114/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/100114/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/100114/events", "html_url": "https://github.com/rust-lang/rust/issues/100114", "id": 1327542925, "node_id": "I_kwDOAAsO6M5PILKN", "number": 100114, "title": "`no warnings or errors encountered even though delayed_good_path_bugs issued` when constructing a `const` never type with warnings disabled", "user": {"login": "rMazeiks", "id": 11248241, "node_id": "MDQ6VXNlcjExMjQ4MjQx", "avatar_url": "https://avatars.githubusercontent.com/u/11248241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rMazeiks", "html_url": "https://github.com/rMazeiks", "followers_url": "https://api.github.com/users/rMazeiks/followers", "following_url": "https://api.github.com/users/rMazeiks/following{/other_user}", "gists_url": "https://api.github.com/users/rMazeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/rMazeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rMazeiks/subscriptions", "organizations_url": "https://api.github.com/users/rMazeiks/orgs", "repos_url": "https://api.github.com/users/rMazeiks/repos", "events_url": "https://api.github.com/users/rMazeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/rMazeiks/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-08-03T17:01:32Z", "updated_at": "2022-10-07T23:59:20Z", "closed_at": "2022-10-07T23:59:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was working on some perfectly reasonable and definitely not cursed Rust code when Cargo suddenly started crashing for some reason.\n\n### Code\n\n[Playground link](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=18d868f2895c570c6e7d167b73d0fe42)\n\n```Rust\n#![allow(warnings)]\n#![feature(never_type)]\n#![allow(const_err)]\n\nuse std::mem::MaybeUninit;\n\nconst fn never() -> ! {\n    unsafe { MaybeUninit::uninit().assume_init() }\n}\n\nconst NEVER: ! = never();\n\nfn main() {}\n\n```\n\n\n### Meta\nThis happens on nightly\n\n`cargo +nightly --version`:\n```\ncargo 1.64.0-nightly (85b500cca 2022-07-24)\n```\n\n### Error output\n\n```\nerror: internal compiler error: no warnings or errors encountered even though `delayed_good_path_bugs` issued\n```\n\n<!--\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\n-->\n<details><summary><strong>Backtrace</strong></summary>\n<p>\n\n```\nerror: internal compiler error: no warnings or errors encountered even though `delayed_good_path_bugs` issued\n\nerror: internal compiler error: trimmed_def_paths constructed\n  |\n  = note: delayed at    0: <rustc_errors::Handler>::delay_good_path_bug::<&str>\n             1: rustc_middle::ty::print::pretty::trimmed_def_paths\n             2: <rustc_middle::dep_graph::dep_node::DepKind as rustc_query_system::dep_graph::DepKind>::with_deps::<<rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task_impl<rustc_middle::ty::context::TyCtxt, (), std::collections::hash::map::HashMap<rustc_span::def_id::DefId, rustc_span::symbol::Symbol, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>>::{closure#0}, std::collections::hash::map::HashMap<rustc_span::def_id::DefId, rustc_span::symbol::Symbol, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>>\n             3: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), std::collections::hash::map::HashMap<rustc_span::def_id::DefId, rustc_span::symbol::Symbol, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>>\n             4: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::ArenaCache<(), std::collections::hash::map::HashMap<rustc_span::def_id::DefId, rustc_span::symbol::Symbol, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>>>\n             5: rustc_query_system::query::plumbing::force_query::<rustc_query_impl::queries::trimmed_def_paths, rustc_query_impl::plumbing::QueryCtxt>\n             6: rustc_query_impl::query_callbacks::trimmed_def_paths::force_from_dep_node\n             7: <rustc_middle::ty::context::TyCtxt as rustc_query_system::dep_graph::DepContext>::try_force_from_dep_node\n             8: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl::plumbing::QueryCtxt>\n             9: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl::plumbing::QueryCtxt>\n            10: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl::plumbing::QueryCtxt>\n            11: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl::plumbing::QueryCtxt>\n            12: rustc_query_system::query::plumbing::ensure_must_run::<rustc_query_impl::plumbing::QueryCtxt, rustc_span::def_id::LocalDefId, ()>\n            13: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::lint_mod, rustc_query_impl::plumbing::QueryCtxt>\n            14: <rustc_middle::hir::map::Map>::for_each_module::<rustc_lint::late::check_crate<rustc_lint::BuiltinCombinedLateLintPass, rustc_interface::passes::analysis::{closure#5}::{closure#1}::{closure#2}::{closure#0}::{closure#0}>::{closure#1}::{closure#0}::{closure#0}>\n            15: <rustc_session::session::Session>::time::<(), rustc_lint::late::check_crate<rustc_lint::BuiltinCombinedLateLintPass, rustc_interface::passes::analysis::{closure#5}::{closure#1}::{closure#2}::{closure#0}::{closure#0}>::{closure#1}::{closure#0}>\n            16: <rustc_session::session::Session>::time::<(), rustc_interface::passes::analysis::{closure#5}::{closure#1}::{closure#2}::{closure#0}>\n            17: <core::panic::unwind_safe::AssertUnwindSafe<rustc_interface::passes::analysis::{closure#5}::{closure#1}> as core::ops::function::FnOnce<()>>::call_once\n            18: <rustc_session::session::Session>::time::<(), rustc_interface::passes::analysis::{closure#5}>\n            19: rustc_interface::passes::analysis\n            20: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), core::result::Result<(), rustc_errors::ErrorGuaranteed>>\n            21: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorGuaranteed>>>\n            22: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\n            23: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorGuaranteed>>\n            24: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\n            25: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>\n            26: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\n            27: std::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\n            28: <<std::thread::Builder>::spawn_unchecked_<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>::{closure#1} as core::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n            29: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\n                       at /rustc/4493a0f4724c0bae1436242d76cccc9c0a287b80/library/alloc/src/boxed.rs:1935:9\n            30: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\n                       at /rustc/4493a0f4724c0bae1436242d76cccc9c0a287b80/library/alloc/src/boxed.rs:1935:9\n            31: std::sys::unix::thread::Thread::new::thread_start\n                       at /rustc/4493a0f4724c0bae1436242d76cccc9c0a287b80/library/std/src/sys/unix/thread.rs:108:17\n            32: start_thread\n                       at /build/glibc-SzIz7B/glibc-2.31/nptl/pthread_create.c:477:8\n            33: clone\n                       at /build/glibc-SzIz7B/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95\n          \n\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1426:13\nstack backtrace:\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\n   2: <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop\n   3: core::ptr::drop_in_place::<rustc_session::parse::ParseSess>\n   4: <alloc::rc::Rc<rustc_session::session::Session> as core::ops::drop::Drop>::drop\n   5: core::ptr::drop_in_place::<rustc_interface::interface::Compiler>\n   6: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\n   7: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>\n   8: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\n\nnote: rustc 1.64.0-nightly (4493a0f47 2022-08-02) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C incremental\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\nerror: could not compile `rust_playground`; 1 warning emitted\n```\n\n</p>\n</details>\n\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"compiler-errors\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/100114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/100114/timeline", "performed_via_github_app": null, "state_reason": "completed"}