{"url": "https://api.github.com/repos/rust-lang/rust/issues/79251", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79251/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79251/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79251/events", "html_url": "https://github.com/rust-lang/rust/issues/79251", "id": 747880972, "node_id": "MDU6SXNzdWU3NDc4ODA5NzI=", "number": 79251, "title": "ICE when using const_evaluatable_checked", "user": {"login": "simon-auch", "id": 12716644, "node_id": "MDQ6VXNlcjEyNzE2NjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/12716644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simon-auch", "html_url": "https://github.com/simon-auch", "followers_url": "https://api.github.com/users/simon-auch/followers", "following_url": "https://api.github.com/users/simon-auch/following{/other_user}", "gists_url": "https://api.github.com/users/simon-auch/gists{/gist_id}", "starred_url": "https://api.github.com/users/simon-auch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simon-auch/subscriptions", "organizations_url": "https://api.github.com/users/simon-auch/orgs", "repos_url": "https://api.github.com/users/simon-auch/repos", "events_url": "https://api.github.com/users/simon-auch/events{/privacy}", "received_events_url": "https://api.github.com/users/simon-auch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-11-21T00:35:32Z", "updated_at": "2021-08-19T23:12:29Z", "closed_at": "2021-08-19T23:12:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nI'm creating this issue mainly because it seems to be a different one than the ones listed in https://github.com/rust-lang/rust/issues/76560\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(const_generics)]\r\n#![feature(const_evaluatable_checked)]\r\n\r\n#[derive(Debug)]\r\nstruct Node<K, const D: usize>\r\nwhere\r\n    SmallVec<K, { D * 2 }>: ,\r\n{\r\n    keys: SmallVec<K, { D * 2 }>,\r\n}\r\n\r\nimpl<K, const D: usize> Node<K, D>\r\nwhere\r\n    SmallVec<K, { D * 2 }>: ,\r\n{\r\n    fn new() -> Self {\r\n        panic!()\r\n    }\r\n\r\n    #[inline(never)]\r\n    fn split(&mut self, i: usize, k: K, right: bool) -> Node<K, D> {\r\n        let mut node = Node::new();\r\n        node.keys.push(k);\r\n        node\r\n    }\r\n}\r\n\r\n#[derive(Debug)]\r\nstruct SmallVec<T, const D: usize> {\r\n    data: [T; D],\r\n}\r\nimpl<T, const D: usize> SmallVec<T, D> {\r\n    fn new() -> Self {\r\n        panic!()\r\n    }\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0-nightly (fe982319a 2020-11-19)\r\nbinary: rustc\r\ncommit-hash: fe982319aa0aa5bbfc2795791a753832292bd2ba\r\ncommit-date: 2020-11-19\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.50.0-nightly\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nwarning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/lib.rs:1:12\r\n  |\r\n1 | #![feature(const_generics)]\r\n  |            ^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\r\n  = help: consider using `min_const_generics` instead, which is more stable and complete\r\n\r\nwarning: the feature `const_evaluatable_checked` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/lib.rs:2:12\r\n  |\r\n2 | #![feature(const_evaluatable_checked)]\r\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\r\n\r\nerror: internal compiler error: compiler/rustc_middle/src/ich/impls_ty.rs:167:9: ty::TyKind::hash_stable() - can't hash a TyVid _#0t.\r\n\r\nthread 'rustc' panicked at 'Box<Any>', compiler/rustc_errors/src/lib.rs:958:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (fe982319a 2020-11-19) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [evaluate_obligation] evaluating trait selection obligation `std::pin::Pin<SmallVec<^1, { D * 2 }>>: std::ops::Deref`\r\n#1 [method_autoderef_steps] computing autoderef types for `Canonical { max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Const(U0) }], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [ConstEvaluatable(WithOptConstParam { did: DefId(0:6 ~ btree_join[f727]::{impl#0}::{constant#0}), const_param_did: None }, [K, Const { ty: usize, val: Param(D/#1) }]), TraitPredicate(<K as std::marker::Sized>), OutlivesPredicate(SmallVec<K, { D * 2 }>, ReLateBound(DebruijnIndex(0), BrAnon(0))), OutlivesPredicate(K, ReLateBound(DebruijnIndex(0), BrAnon(0)))], reveal: UserFacing }, value: std::pin::Pin<SmallVec<^1, { D * 2 }>> } }`\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   Compiling btree_join v0.1.0 (/home/simon/git_repositories/rust_test/btree_ice_mfe)\r\nwarning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/lib.rs:1:12\r\n  |\r\n1 | #![feature(const_generics)]\r\n  |            ^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\r\n  = help: consider using `min_const_generics` instead, which is more stable and complete\r\n\r\nwarning: the feature `const_evaluatable_checked` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/lib.rs:2:12\r\n  |\r\n2 | #![feature(const_evaluatable_checked)]\r\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\r\n\r\nerror: internal compiler error: compiler/rustc_middle/src/ich/impls_ty.rs:167:9: ty::TyKind::hash_stable() - can't hash a TyVid _#0t.\r\n\r\nthread 'rustc' panicked at 'Box<Any>', compiler/rustc_errors/src/lib.rs:958:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: rustc_errors::HandlerInner::bug\r\n   2: rustc_errors::Handler::bug\r\n   3: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n   4: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n   5: rustc_middle::ty::context::tls::with_opt\r\n   6: rustc_middle::util::bug::opt_span_bug_fmt\r\n   7: rustc_middle::util::bug::bug_fmt\r\n   8: rustc_middle::ich::impls_ty::<impl rustc_data_structures::stable_hasher::HashStable<rustc_middle::ich::hcx::StableHashingContext> for rustc_middle::ty::sty::TyVid>::hash_stable\r\n   9: rustc_middle::ty::sty::_DERIVE_rustc_data_structures_stable_hasher_HashStable_rustc_middle_ich_StableHashingContext_ctx_FOR_InferTy::<impl rustc_data_structures::stable_hasher::HashStable<rustc_middle::ich::hcx::StableHashingContext> for rustc_middle::ty::sty::InferTy>::hash_stable\r\n  10: std::thread::local::LocalKey<T>::with\r\n  11: <T as rustc_query_system::dep_graph::dep_node::DepNodeParams<Ctxt>>::to_fingerprint\r\n  12: rustc_query_system::query::plumbing::get_query_impl\r\n  13: rustc_middle::ty::relate::super_relate_consts\r\n  14: <rustc_infer::infer::combine::Generalizer as rustc_middle::ty::relate::TypeRelation>::consts\r\n  15: <rustc_middle::ty::subst::GenericArg as rustc_middle::ty::relate::Relate>::relate\r\n  16: <core::result::Result<T,E> as rustc_middle::ty::context::InternIteratorElement<T,R>>::intern_with\r\n  17: <rustc_infer::infer::combine::Generalizer as rustc_middle::ty::relate::TypeRelation>::relate_item_substs\r\n  18: rustc_middle::ty::relate::super_relate_tys\r\n  19: <rustc_infer::infer::combine::Generalizer as rustc_middle::ty::relate::TypeRelation>::tys\r\n  20: rustc_infer::infer::combine::CombineFields::instantiate\r\n  21: <rustc_infer::infer::equate::Equate as rustc_middle::ty::relate::TypeRelation>::tys\r\n  22: <rustc_middle::ty::subst::GenericArg as rustc_middle::ty::relate::Relate>::relate\r\n  23: <core::result::Result<T,E> as rustc_middle::ty::context::InternIteratorElement<T,R>>::intern_with\r\n  24: rustc_middle::ty::relate::super_relate_tys\r\n  25: rustc_infer::infer::combine::<impl rustc_infer::infer::InferCtxt>::super_combine_tys\r\n  26: <rustc_infer::infer::equate::Equate as rustc_middle::ty::relate::TypeRelation>::tys\r\n  27: <rustc_middle::ty::subst::GenericArg as rustc_middle::ty::relate::Relate>::relate\r\n  28: <core::result::Result<T,E> as rustc_middle::ty::context::InternIteratorElement<T,R>>::intern_with\r\n  29: <rustc_middle::ty::sty::TraitRef as rustc_middle::ty::relate::Relate>::relate\r\n  30: rustc_infer::infer::InferCtxt::commit_if_ok\r\n  31: rustc_trait_selection::traits::select::SelectionContext::match_impl\r\n  32: rustc_infer::infer::InferCtxt::probe\r\n  33: rustc_middle::ty::trait_def::<impl rustc_middle::ty::context::TyCtxt>::for_each_relevant_impl\r\n  34: rustc_trait_selection::traits::select::candidate_assembly::<impl rustc_trait_selection::traits::select::SelectionContext>::assemble_candidates_from_impls\r\n  35: rustc_trait_selection::traits::select::candidate_assembly::<impl rustc_trait_selection::traits::select::SelectionContext>::assemble_candidates\r\n  36: rustc_trait_selection::traits::select::candidate_assembly::<impl rustc_trait_selection::traits::select::SelectionContext>::candidate_from_obligation_no_cache\r\n  37: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  38: rustc_query_system::dep_graph::graph::DepGraph<K>::with_anon_task\r\n  39: rustc_trait_selection::traits::select::candidate_assembly::<impl rustc_trait_selection::traits::select::SelectionContext>::candidate_from_obligation\r\n  40: rustc_trait_selection::traits::select::SelectionContext::evaluate_stack\r\n  41: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  42: rustc_query_system::dep_graph::graph::DepGraph<K>::with_anon_task\r\n  43: rustc_trait_selection::traits::select::SelectionContext::evaluate_trait_predicate_recursively\r\n  44: rustc_trait_selection::traits::select::SelectionContext::evaluate_predicate_recursively::{{closure}}\r\n  45: rustc_trait_selection::traits::select::SelectionContext::evaluate_predicate_recursively\r\n  46: rustc_infer::infer::InferCtxt::probe\r\n  47: rustc_trait_selection::traits::select::SelectionContext::evaluate_root_obligation\r\n  48: rustc_infer::infer::InferCtxtBuilder::enter_with_canonical\r\n  49: rustc_traits::evaluate_obligation::evaluate_obligation\r\n  50: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::evaluate_obligation>::compute\r\n  51: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  52: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  53: rustc_data_structures::stack::ensure_sufficient_stack\r\n  54: rustc_query_system::query::plumbing::get_query_impl\r\n  55: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt>::evaluate_obligation\r\n  56: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt>::evaluate_obligation_no_overflow\r\n  57: <rustc_trait_selection::autoderef::Autoderef as core::iter::traits::iterator::Iterator>::next\r\n  58: <alloc::vec::Vec<T> as alloc::vec::SpecFromIter<T,I>>::from_iter\r\n  59: rustc_infer::infer::InferCtxtBuilder::enter_with_canonical\r\n  60: rustc_typeck::check::method::probe::method_autoderef_steps\r\n  61: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::method_autoderef_steps>::compute\r\n  62: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  63: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  64: rustc_data_structures::stack::ensure_sufficient_stack\r\n  65: rustc_query_system::query::plumbing::get_query_impl\r\n  66: rustc_typeck::check::method::probe::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::probe_for_name\r\n  67: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::report_extended_method_error::{{closure}}\r\n  68: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  69: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  70: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  71: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  72: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  73: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  74: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  75: rustc_typeck::check::check::check_fn\r\n  76: rustc_infer::infer::InferCtxtBuilder::enter\r\n  77: rustc_typeck::check::typeck\r\n  78: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck>::compute\r\n  79: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  80: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  81: rustc_data_structures::stack::ensure_sufficient_stack\r\n  82: rustc_query_system::query::plumbing::get_query_impl\r\n  83: rustc_query_system::query::plumbing::ensure_query_impl\r\n  84: rustc_typeck::check::typeck_item_bodies\r\n  85: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck_item_bodies>::compute\r\n  86: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  87: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  88: rustc_data_structures::stack::ensure_sufficient_stack\r\n  89: rustc_query_system::query::plumbing::get_query_impl\r\n  90: rustc_typeck::check_crate\r\n  91: rustc_interface::passes::analysis\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (fe982319a 2020-11-19) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [evaluate_obligation] evaluating trait selection obligation `std::pin::Pin<SmallVec<^1, { D * 2 }>>: std::ops::Deref`\r\n#1 [method_autoderef_steps] computing autoderef types for `Canonical { max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Const(U0) }], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [ConstEvaluatable(WithOptConstParam { did: DefId(0:6 ~ btree_join[ecb8]::{impl#0}::{constant#0}), const_param_did: None }, [K, Const { ty: usize, val: Param(D/#1) }]), TraitPredicate(<K as std::marker::Sized>), OutlivesPredicate(SmallVec<K, { D * 2 }>, ReLateBound(DebruijnIndex(0), BrAnon(0))), OutlivesPredicate(K, ReLateBound(DebruijnIndex(0), BrAnon(0)))], reveal: UserFacing }, value: std::pin::Pin<SmallVec<^1, { D * 2 }>> } }`\r\n#2 [typeck] type-checking `Node::<K, D>::split`\r\n#3 [typeck_item_bodies] type-checking all item bodies\r\n#4 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error; 2 warnings emitted\r\n\r\nerror: could not compile `btree_join`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79251/timeline", "performed_via_github_app": null, "state_reason": "completed"}