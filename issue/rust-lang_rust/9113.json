{"url": "https://api.github.com/repos/rust-lang/rust/issues/9113", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/9113/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/9113/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/9113/events", "html_url": "https://github.com/rust-lang/rust/issues/9113", "id": 19298728, "node_id": "MDU6SXNzdWUxOTI5ODcyOA==", "number": 9113, "title": "The lifetime of the borrowed value is too long", "user": {"login": "zeux", "id": 1106629, "node_id": "MDQ6VXNlcjExMDY2Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1106629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zeux", "html_url": "https://github.com/zeux", "followers_url": "https://api.github.com/users/zeux/followers", "following_url": "https://api.github.com/users/zeux/following{/other_user}", "gists_url": "https://api.github.com/users/zeux/gists{/gist_id}", "starred_url": "https://api.github.com/users/zeux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zeux/subscriptions", "organizations_url": "https://api.github.com/users/zeux/orgs", "repos_url": "https://api.github.com/users/zeux/repos", "events_url": "https://api.github.com/users/zeux/events{/privacy}", "received_events_url": "https://api.github.com/users/zeux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2013-09-11T04:12:43Z", "updated_at": "2014-11-11T17:40:19Z", "closed_at": "2014-04-15T14:07:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure of the correct bug title here, it's based on my limited understanding of the problem :)\n\nI'm trying to write a DB wrapper with a cache. Here's a code sample with two variants of read() function, the DB is using a hash map as well for exposition.\n\n```\nuse std::hashmap::HashMap;\n\n#[deriving(Clone)]\nstruct Data {\n    data: ~[u8]\n}\n\nstruct DB {\n    cache: HashMap<int, Data>,\n    db: HashMap<int, Data>\n}\n\nimpl DB {\n    pub fn read1<'a>(&'a mut self, key: int) -> Option<&'a Data> {\n        match self.cache.find(&key) {\n            Some(data) => return Some(data),\n            None => ()\n        };\n\n        match self.db.find(&key) {\n            Some(data) => {\n                let result: &Data = self.cache.find_or_insert(key, data.clone());\n\n                Some(result)\n            },\n            None => None\n        }\n    }\n\n    pub fn read2<'a>(&'a mut self, key: int) -> Option<&'a Data> {\n        match self.cache.find(&key) {\n            Some(data) => return Some(data),\n            None => {\n                match self.db.find(&key) {\n                    Some(data) => {\n                        let result: &Data = self.cache.find_or_insert(key, data.clone());\n\n                        Some(result)\n                    },\n                    None => None\n                }\n            }\n        }\n    }\n}\n\nfn main() {\n}\n```\n\nBoth read1() and read2() fail to compile with the following error:\n\n```\ndb.rs:22:36: 22:46 error: cannot borrow `(*self).cache` as mutable because it is also borrowed as immutable\ndb.rs:22                 let result: &Data = self.cache.find_or_insert(key, data.clone());\n                                             ^~~~~~~~~~\ndb.rs:15:14: 15:24 note: second borrow of `(*self).cache` occurs here\ndb.rs:15         match self.cache.find(&key) {\n                       ^~~~~~~~~~\n```\n\nPossibly a duplicate of #6393 (although read1 looked like it could solve the problem but did not).\n", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/9113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/9113/timeline", "performed_via_github_app": null, "state_reason": "completed"}