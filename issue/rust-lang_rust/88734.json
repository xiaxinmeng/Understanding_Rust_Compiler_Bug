{"url": "https://api.github.com/repos/rust-lang/rust/issues/88734", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88734/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88734/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88734/events", "html_url": "https://github.com/rust-lang/rust/issues/88734", "id": 990405455, "node_id": "MDU6SXNzdWU5OTA0MDU0NTU=", "number": 88734, "title": "f32::MAX_EXP and f64::MAX_EXP are documented incorrectly, and other associated constant woes", "user": {"login": "orlp", "id": 202547, "node_id": "MDQ6VXNlcjIwMjU0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/202547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orlp", "html_url": "https://github.com/orlp", "followers_url": "https://api.github.com/users/orlp/followers", "following_url": "https://api.github.com/users/orlp/following{/other_user}", "gists_url": "https://api.github.com/users/orlp/gists{/gist_id}", "starred_url": "https://api.github.com/users/orlp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orlp/subscriptions", "organizations_url": "https://api.github.com/users/orlp/orgs", "repos_url": "https://api.github.com/users/orlp/repos", "events_url": "https://api.github.com/users/orlp/events{/privacy}", "received_events_url": "https://api.github.com/users/orlp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 2139259423, "node_id": "MDU6TGFiZWwyMTM5MjU5NDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-floating-point", "name": "A-floating-point", "color": "f7e101", "default": false, "description": "Area: Floating point numbers and arithmetic"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-09-07T22:37:33Z", "updated_at": "2021-09-09T09:36:47Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`f32::MAX_EXP` and `f64::MAX_EXP` are documented as\r\n\r\n> Maximum possible power of 2 exponent.\r\n\r\nThis is straight up not true. They are respectively defined as `128` and `1024`, which is actually one *above* the maximum possible exponent of `f32` and `f64`. The doc comment needs to be changed.\r\n\r\n---\r\n\r\nIn general I feel the set of associated constants for the floating point types are questionable, and should be a candidate for deprecation and replacement by a better set of constants. It is painfully obvious that the constants were copied from C's `<float.h>`, with little regard of whether these constants are useful or well-named.\r\n\r\nI have no qualms with `MIN`, `MAX`, `NAN`, `INFINITY`, and `NEG_INFINITY` at all. They are sane and useful. However, the following set of constants are carbon copied from [`<float.h>`](https://en.cppreference.com/w/c/types/limits#Limits_of_floating_point_types):\r\n\r\n    FLT_RADIX       = 2                => f32::RADIX\r\n    FLT_MIN         = 1.175494e-38     => f32::MIN_POSITIVE\r\n    FLT_EPSILON     = 1.192093e-07     => f32::EPSILON\r\n    FLT_DIG         = 6                => f32::DIGITS\r\n    FLT_MANT_DIG    = 24               => f32::MANTISSA_DIGITS\r\n    FLT_MIN_EXP     = -125             => f32::MIN_EXP\r\n    FLT_MIN_10_EXP  = -37              => f32::MIN_10_EXP\r\n    FLT_MAX_EXP     = 128              => f32::MAX_EXP\r\n    FLT_MAX_10_EXP  = 38               => f32::MAX_10_EXP\r\n\r\nGoing over them one by one (`f64` is entirely analogous):\r\n\r\n- `f32::RADIX` is just plain useless. It's always 2, Rust has no support for non-binary floating point.\r\n- `f32::MIN_POSITIVE` is badly named, because it's actually the smallest positive *normal* number. This is a useful constant, but the name is unacceptable in my opinion.\r\n- `f32::EPSILON` is somewhat badly named (`MACHINE_EPSILON` would be better), and slightly deceptive. However this is not necessarily the fault of the constant, but due to people misunderstanding what machine epsilon means. Should my [RFC for `next_up`/`next_down`](https://github.com/rust-lang/rfcs/pull/3173) get merged, this would make this constant unnecessary. Especially if we make a [`ulp`](https://en.wikipedia.org/wiki/Unit_in_the_last_place) method in the future.\r\n- `f32::DIGITS` is \"the approximate number of significant digits in base 10\". I don't know when you'd ever need this constant, or what 'approximate' here means at all. The constant is also deceptive, because one might interpret this as an upper bound on the number of digits needed to represent a `f32`.\r\n- `f32::MANTISSA_DIGITS` includes the implied 1. Thus it is off by one from the constant you almost always want when explicitly working with a mantissa in code: the number of *bits* that the mantissa is wide.\r\n- `f32::MIN_EXP`... I think the doc comment speaks for itself: \"One greater than the minimum possible normal power of 2 exponent.\". Not only is it off by one, it also ignores denormal floats.\r\n- `f32::MAX_EXP`, see start of this issue.\r\n- `f32::MIN_10_EXP`, also ignores denormal floats.\r\n- `f32::MAX_10_EXP`, sanely defined but also fairly useless since you can compute `f32::MAX.log10().floor()` if\r\nyou really wanted to know this.\r\n\r\nI honestly believe the best way forward is to deprecate all of the above constants and replace them with a couple fundamental, sane and conservative constants. For example for `f32`:\r\n```rust\r\nconst EXPONENT_BIAS: i32 = 127;\r\nconst EXPONENT_WIDTH: i32 = 8;\r\nconst MANTISSA_WIDTH: i32 = 23;\r\nconst MIN_POS_NORMAL: f32 = f32::from_bits(1 << f32::MANTISSA_WIDTH);\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88734/reactions", "total_count": 12, "+1": 8, "-1": 0, "laugh": 0, "hooray": 2, "confused": 0, "heart": 2, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88734/timeline", "performed_via_github_app": null, "state_reason": null}