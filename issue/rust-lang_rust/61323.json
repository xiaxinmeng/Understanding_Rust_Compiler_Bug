{"url": "https://api.github.com/repos/rust-lang/rust/issues/61323", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61323/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61323/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61323/events", "html_url": "https://github.com/rust-lang/rust/issues/61323", "id": 449900849, "node_id": "MDU6SXNzdWU0NDk5MDA4NDk=", "number": 61323, "title": "Creating a recursive type with infinite size leads to ICE", "user": {"login": "ackxolotl", "id": 39318299, "node_id": "MDQ6VXNlcjM5MzE4Mjk5", "avatar_url": "https://avatars.githubusercontent.com/u/39318299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ackxolotl", "html_url": "https://github.com/ackxolotl", "followers_url": "https://api.github.com/users/ackxolotl/followers", "following_url": "https://api.github.com/users/ackxolotl/following{/other_user}", "gists_url": "https://api.github.com/users/ackxolotl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ackxolotl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ackxolotl/subscriptions", "organizations_url": "https://api.github.com/users/ackxolotl/orgs", "repos_url": "https://api.github.com/users/ackxolotl/repos", "events_url": "https://api.github.com/users/ackxolotl/events{/privacy}", "received_events_url": "https://api.github.com/users/ackxolotl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2019-05-29T16:17:15Z", "updated_at": "2019-12-30T15:38:41Z", "closed_at": "2019-12-06T18:17:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Creating a recursive type with infinite size by removing a `Box` leads to an internal compiler error. Might be the same issue as #57373.\r\n\r\nTo reproduce this bug, run `cargo build` on this code:\r\n\r\n```rust\r\nenum A {\r\n    B(C),\r\n}\r\n\r\nstruct C {\r\n    a: Box<A>,\r\n}\r\n\r\nfn main() {\r\n\r\n}\r\n```\r\n\r\nReplace `Box<A>` by `A` and run `cargo build` again:\r\n\r\n```rust\r\nenum A {\r\n    B(C),\r\n}\r\n\r\nstruct C {\r\n    a: A,\r\n}\r\n\r\nfn main() {\r\n\r\n}\r\n```\r\n\r\nI expected to see this happen:\r\n\r\n```\r\nerror[E0072]: recursive type `A` has infinite size\r\n --> src/main.rs:1:1\r\n  |\r\n1 | enum A {\r\n  | ^^^^^^ recursive type has infinite size\r\n2 |     B(C),\r\n  |       - recursive without indirection\r\n  |\r\n  = help: insert indirection (e.g., a `Box`, `Rc`, or `&`) at some point to make `A` representable\r\n\r\nerror[E0072]: recursive type `C` has infinite size\r\n --> src/main.rs:5:1\r\n  |\r\n5 | struct C {\r\n  | ^^^^^^^^ recursive type has infinite size\r\n6 |     a: A,\r\n  |     ---- recursive without indirection\r\n  |\r\n  = help: insert indirection (e.g., a `Box`, `Rc`, or `&`) at some point to make `C` representable\r\n\r\nerror: aborting due to 2 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0072`.\r\nerror: Could not compile `hello_world`.\r\n```\r\n\r\nInstead, this happened:\r\n\r\n```\r\nerror: internal compiler error: src/librustc/dep_graph/graph.rs:722: try_mark_previous_green() - Forcing the DepNode should have set its color\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:635:9\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:39\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n             at src/libstd/panicking.rs:197\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:211\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:478\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::util::bug::opt_span_bug_fmt\r\n  13: rustc::util::bug::bug_fmt\r\n  14: rustc::dep_graph::graph::DepGraph::try_mark_previous_green\r\n  15: rustc::dep_graph::graph::DepGraph::try_mark_green\r\n  16: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  17: rustc::ty::AdtDef::sized_constraint_for_ty\r\n  18: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next\r\n  19: <smallvec::SmallVec<A> as core::iter::traits::collect::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  20: <T as rustc::ty::context::InternIteratorElement<T,R>>::intern_with\r\n  21: rustc::ty::adt_sized_constraint\r\n  22: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::adt_sized_constraint>::compute\r\n  23: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  24: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::force_query\r\n  25: rustc::ty::query::plumbing::force_from_dep_node\r\n  26: rustc::dep_graph::graph::DepGraph::try_mark_previous_green\r\n  27: rustc::dep_graph::graph::DepGraph::try_mark_previous_green\r\n  28: rustc::dep_graph::graph::DepGraph::try_mark_previous_green\r\n  29: rustc::dep_graph::graph::DepGraph::try_mark_previous_green\r\n  30: rustc::dep_graph::graph::DepGraph::try_mark_green\r\n  31: rustc::dep_graph::graph::DepGraph::try_mark_green_and_read\r\n  32: <rustc_typeck::check::wfcheck::CheckTypeWellFormedVisitor as rustc::hir::itemlikevisit::ParItemLikeVisitor>::visit_item\r\n  33: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:87\r\n  34: rustc_data_structures::sync::par_for_each_in\r\n  35: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:87\r\n  36: rustc::hir::Crate::par_visit_all_item_likes\r\n  37: rustc::util::common::time\r\n  38: rustc_typeck::check_crate\r\n  39: rustc_interface::passes::analysis\r\n  40: rustc::ty::query::__query_compute::analysis\r\n  41: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::analysis>::compute\r\n  42: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  43: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  44: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  45: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  46: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  47: std::thread::local::LocalKey<T>::with\r\n  48: scoped_tls::ScopedKey<T>::set\r\n  49: syntax::with_globals\r\nquery stack during panic:\r\n#0 [adt_sized_constraint] processing `A`\r\n#1 [adt_sized_constraint] processing `C`\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.35.0 (3c235d560 2019-05-20) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `hello_world`.\r\n```\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`: \r\n```\r\nrustc 1.35.0 (3c235d560 2019-05-20)\r\nbinary: rustc\r\ncommit-hash: 3c235d5600393dfe6c36eeed34042efad8d4f26e\r\ncommit-date: 2019-05-20\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.35.0\r\nLLVM version: 8.0\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61323/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61323/timeline", "performed_via_github_app": null, "state_reason": "completed"}