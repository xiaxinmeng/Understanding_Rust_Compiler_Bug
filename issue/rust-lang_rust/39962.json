{"url": "https://api.github.com/repos/rust-lang/rust/issues/39962", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39962/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39962/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39962/events", "html_url": "https://github.com/rust-lang/rust/issues/39962", "id": 208744742, "node_id": "MDU6SXNzdWUyMDg3NDQ3NDI=", "number": 39962, "title": "making a temporary tuple for pattern matching tries to move borrowed content", "user": {"login": "oconnor663", "id": 860932, "node_id": "MDQ6VXNlcjg2MDkzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/860932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oconnor663", "html_url": "https://github.com/oconnor663", "followers_url": "https://api.github.com/users/oconnor663/followers", "following_url": "https://api.github.com/users/oconnor663/following{/other_user}", "gists_url": "https://api.github.com/users/oconnor663/gists{/gist_id}", "starred_url": "https://api.github.com/users/oconnor663/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oconnor663/subscriptions", "organizations_url": "https://api.github.com/users/oconnor663/orgs", "repos_url": "https://api.github.com/users/oconnor663/repos", "events_url": "https://api.github.com/users/oconnor663/events{/privacy}", "received_events_url": "https://api.github.com/users/oconnor663/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-19T20:42:42Z", "updated_at": "2020-06-11T18:05:23Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[playground link](https://is.gd/Bunuc0)\r\n\r\nThis works, even though it looks like it's moving out of shared pointers, because of the `ref` keyword:\r\n\r\n```rust\r\nfn works(foo_opt1: &Option<Foo>, foo_opt2: &Option<Foo>) {\r\n    if let Some(ref foo1) = *foo_opt1 {\r\n        if let Some(ref foo2) = *foo_opt2 {\r\n            println!(\"this works\")\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nHowever this very similar code does not work:\r\n\r\n```rust\r\nfn doesnt_work(foo_opt1: &Option<Foo>, foo_opt2: &Option<Foo>) {\r\n    if let (Some(ref foo1), Some(ref foo2)) = (*foo_opt1, *foo_opt2) {\r\n        println!(\"this does not compile!\");\r\n    }\r\n}\r\n```\r\n\r\nWe get this error:\r\n\r\n```\r\n\r\n   |\r\n13 |     if let (Some(ref foo1), Some(ref foo2)) = (*foo_opt1, *foo_opt2) {\r\n   |                                                ^^^^^^^^^ cannot move out of borrowed content\r\n```\r\n\r\nIt looks like the temporary tuple created on the right is a moving operation that can't be \"undone\" by the `ref` keyword. Could the compiler be smarter about this, or would that be unsound somehow?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39962/timeline", "performed_via_github_app": null, "state_reason": null}