{"url": "https://api.github.com/repos/rust-lang/rust/issues/77794", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77794/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77794/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77794/events", "html_url": "https://github.com/rust-lang/rust/issues/77794", "id": 718639374, "node_id": "MDU6SXNzdWU3MTg2MzkzNzQ=", "number": 77794, "title": "Rust on windows x64 doesn't support the following assembly", "user": {"login": "lygstate", "id": 121040, "node_id": "MDQ6VXNlcjEyMTA0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/121040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lygstate", "html_url": "https://github.com/lygstate", "followers_url": "https://api.github.com/users/lygstate/followers", "following_url": "https://api.github.com/users/lygstate/following{/other_user}", "gists_url": "https://api.github.com/users/lygstate/gists{/gist_id}", "starred_url": "https://api.github.com/users/lygstate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lygstate/subscriptions", "organizations_url": "https://api.github.com/users/lygstate/orgs", "repos_url": "https://api.github.com/users/lygstate/repos", "events_url": "https://api.github.com/users/lygstate/events{/privacy}", "received_events_url": "https://api.github.com/users/lygstate/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 123109, "node_id": "MDU6TGFiZWwxMjMxMDk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows", "name": "O-windows", "color": "6e6ec0", "default": false, "description": "Operating system: Windows"}, {"id": 91598611, "node_id": "MDU6TGFiZWw5MTU5ODYxMQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inline-assembly", "name": "A-inline-assembly", "color": "f7e101", "default": false, "description": "Area: inline asm!(..)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-10-10T15:08:33Z", "updated_at": "2020-10-10T18:41:13Z", "closed_at": "2020-10-10T18:36:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n\r\nerror: expected absolute expression\r\n   |\r\nnote: instantiated into assembly here\r\n  --> <inline asm>:27:7\r\n   |\r\n27 | .type longjmp,@function\r\n   |       ^\r\n\r\n```\r\n\r\nlongjmp.s\r\n```asm\r\n/* Copyright 2011-2012 Nicholas J. Kain, licensed under standard MIT license */\r\n.global _longjmp\r\n.global longjmp\r\n.type _longjmp,@function\r\n.type longjmp,@function\r\n_longjmp:\r\nlongjmp:\r\n\tmov %rsi,%rax           /* val will be longjmp return */\r\n\ttest %rax,%rax\r\n\tjnz 1f\r\n\tinc %rax                /* if val==0, val=1 per longjmp semantics */\r\n1:\r\n\tmov (%rdi),%rbx         /* rdi is the jmp_buf, restore regs from it */\r\n\tmov 8(%rdi),%rbp\r\n\tmov 16(%rdi),%r12\r\n\tmov 24(%rdi),%r13\r\n\tmov 32(%rdi),%r14\r\n\tmov 40(%rdi),%r15\r\n\tmov 48(%rdi),%rdx       /* this ends up being the stack pointer */\r\n\tmov %rdx,%rsp\r\n\tmov 56(%rdi),%rdx       /* this is the instruction pointer */\r\n\tjmp *%rdx               /* goto saved address without altering rsp */\r\n```\r\n\r\nsetjmp.s\r\n```asm\r\n/* Copyright 2011-2012 Nicholas J. Kain, licensed under standard MIT license */\r\n.global __setjmp\r\n.global _setjmp\r\n.global setjmp\r\n.type __setjmp,@function\r\n.type _setjmp,@function\r\n.type setjmp,@function\r\n__setjmp:\r\n_setjmp:\r\nsetjmp:\r\n\tmov %rbx,(%rdi)         /* rdi is jmp_buf, move registers onto it */\r\n\tmov %rbp,8(%rdi)\r\n\tmov %r12,16(%rdi)\r\n\tmov %r13,24(%rdi)\r\n\tmov %r14,32(%rdi)\r\n\tmov %r15,40(%rdi)\r\n\tlea 8(%rsp),%rdx        /* this is our rsp WITHOUT current ret addr */\r\n\tmov %rdx,48(%rdi)\r\n\tmov (%rsp),%rdx         /* save return addr ptr for new rip */\r\n\tmov %rdx,56(%rdi)\r\n\txor %rax,%rax           /* always return 0 */\r\n\tret\r\n\r\n```\r\n\r\nrust code\r\n```rust\r\n//! setjmp implementation for Redox, following http://pubs.opengroup.org/onlinepubs/7908799/xsh/setjmp.h.html\r\n\r\nmacro_rules! platform_specific {\r\n    ($($arch:expr,$ext:expr;)+) => {\r\n        $(\r\n            #[cfg(target_arch = $arch)]\r\n            #[cfg(not(target_os = \"windows\"))]\r\n            global_asm!(include_str!(concat!(\"impl/\", $arch, \"/setjmp.\", $ext)));\r\n            #[cfg(target_arch = $arch)]\r\n            #[cfg(not(target_os = \"windows\"))]\r\n            global_asm!(include_str!(concat!(\"impl/\", $arch, \"/longjmp.\", $ext)));\r\n        )+\r\n    }\r\n}\r\n\r\nplatform_specific! {\r\n    \"aarch64\",\"s\";\r\n    \"arm\",\"s\";\r\n    \"i386\",\"s\";\r\n    \"m68k\",\"s\";\r\n    \"microblaze\",\"s\";\r\n    \"mips\",\"S\";\r\n    \"mips64\",\"S\";\r\n    \"mipsn32\",\"S\";\r\n    \"or1k\",\"s\";\r\n    \"powerpc\",\"S\";\r\n    \"powerpc64\",\"s\";\r\n    \"s390x\",\"s\";\r\n    \"sh\",\"S\";\r\n    \"x32\",\"s\";\r\n    \"x86_64\",\"s\";\r\n}\r\n\r\n```", "closed_by": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77794/timeline", "performed_via_github_app": null, "state_reason": "completed"}