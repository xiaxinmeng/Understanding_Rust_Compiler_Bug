{"url": "https://api.github.com/repos/rust-lang/rust/issues/102855", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102855/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102855/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102855/events", "html_url": "https://github.com/rust-lang/rust/issues/102855", "id": 1402348588, "node_id": "I_kwDOAAsO6M5TliQs", "number": 102855, "title": "Unresolved import (E0432) when use'ing name that shadows a star-imported one", "user": {"login": "Xion", "id": 413673, "node_id": "MDQ6VXNlcjQxMzY3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/413673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xion", "html_url": "https://github.com/Xion", "followers_url": "https://api.github.com/users/Xion/followers", "following_url": "https://api.github.com/users/Xion/following{/other_user}", "gists_url": "https://api.github.com/users/Xion/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xion/subscriptions", "organizations_url": "https://api.github.com/users/Xion/orgs", "repos_url": "https://api.github.com/users/Xion/repos", "events_url": "https://api.github.com/users/Xion/events{/privacy}", "received_events_url": "https://api.github.com/users/Xion/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-10-09T17:52:59Z", "updated_at": "2022-10-10T16:15:54Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Let's say we have the following layout of files (simplified example with (hopefully) irrelevant details omitted):\r\n\r\n## common/animation/plugins.rs\r\n\r\n```rust\r\nuse bevy::prelude::*;\r\n\r\n// shadows bevy::prelude::AnimationPlugin\r\npub struct AnimationPlugin;\r\n```\r\n\r\n## common/animation/mod.rs\r\n\r\n```rust\r\nmod animation;\r\n\r\npub use self::plugins::*;\r\n```\r\n\r\n## app.rs\r\n\r\n```rust\r\nuse crate::common::animation::AnimationPlugin;\r\n```\r\n\r\nThis results in the following error:\r\n\r\n```\r\nerror[E0432]: unresolved import `crate::common::animation::AnimationPlugin`\r\n  --> src/app.rs:11:5\r\n   |\r\n11 | use crate::common::animation::AnimationPlugin;\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nFor more information about this error, try `rustc --explain E0432`.\r\n\r\n```\r\n\r\nAt best, this is a confusing diagnostic message. The import isn't unresolved, though it might be ambiguous as to which `AnimationPlugin` we are referring to here. The message should highlight this fact, making it more clear what the possible solutions are (e.g. replacing `use bevy::prelude::*;` with more selective imports).\r\n\r\nHowever, I'm not entirely sure if this is even the correct behavior. At any point inside `common::animation::plugins`, it is perfectly unambiguous which `AnimationPlugin` we are referring to; the custom one shadows the one defined in `bevy::prelude`. But for some reason, this doesn't carry over through a simple re-export in `common::animation` root module.\r\n\r\nI'm reluctant to flag this as a compiler bug because I don't claim to fully understand the expected language rules here, but hopefully someone from the Rust team can determine if this is intended. But even if it's correct for the compiler to reject this code, the resulting error message could definitely be more clear.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102855/timeline", "performed_via_github_app": null, "state_reason": null}