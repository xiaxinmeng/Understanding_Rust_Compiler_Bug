{"url": "https://api.github.com/repos/rust-lang/rust/issues/88398", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88398/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88398/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88398/events", "html_url": "https://github.com/rust-lang/rust/issues/88398", "id": 981412120, "node_id": "MDU6SXNzdWU5ODE0MTIxMjA=", "number": 88398, "title": "Potentially confusing error message on trait bounds mismatch", "user": {"login": "incidental-complexity", "id": 4366461, "node_id": "MDQ6VXNlcjQzNjY0NjE=", "avatar_url": "https://avatars.githubusercontent.com/u/4366461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/incidental-complexity", "html_url": "https://github.com/incidental-complexity", "followers_url": "https://api.github.com/users/incidental-complexity/followers", "following_url": "https://api.github.com/users/incidental-complexity/following{/other_user}", "gists_url": "https://api.github.com/users/incidental-complexity/gists{/gist_id}", "starred_url": "https://api.github.com/users/incidental-complexity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/incidental-complexity/subscriptions", "organizations_url": "https://api.github.com/users/incidental-complexity/orgs", "repos_url": "https://api.github.com/users/incidental-complexity/repos", "events_url": "https://api.github.com/users/incidental-complexity/events{/privacy}", "received_events_url": "https://api.github.com/users/incidental-complexity/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-08-27T16:34:17Z", "updated_at": "2021-08-27T16:34:17Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I feel like certain errors involving trait bounds lack the basic problem statement in the error.  In the below, there isn't even a mention that \"`T: Foo` is not satisfied\", which would go a long way.  But on first glance here, I look at this thing trying to implement `Foo` and am told I need to implement `AsRef<str>`.  This is especially problematic if the blanket impl for `AsRef<str>` isn't right there in front of me, but buried in some other crate/lib.  I've spent countless hours chasing these sorts of errors down in the past.\r\n\r\nGiven the following code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=b10937d52da38cb7a49aa827cce1baae\r\n\r\n```rust\r\ntrait Foo{}\r\n\r\nimpl <T: AsRef<str>> Foo for T{}\r\n\r\nfn foo<T: Foo>(input: T){}\r\n\r\npub fn main() {\r\n    foo(())\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0277]: the trait bound `(): AsRef<str>` is not satisfied\r\n --> src/main.rs:8:9\r\n  |\r\n5 | fn foo<T: Foo>(input: T){}\r\n  |           --- required by this bound in `foo`\r\n...\r\n8 |     foo(())\r\n  |         ^^ the trait `AsRef<str>` is not implemented for `()`\r\n  |\r\nnote: required because of the requirements on the impl of `Foo` for `()`\r\n --> src/main.rs:3:22\r\n  |\r\n3 | impl <T: AsRef<str>> Foo for T{}\r\n  |                      ^^^     ^\r\n```\r\n\r\nIdeally the output should look like: (I'm making this up.  You all would have a better idea of what 'good' looks like)\r\n\r\n```\r\nerror[E0277]: the trait bound `(): AsRef<str>` is not satisfied\r\n --> src/main.rs:8:9\r\n  |\r\n5 | fn foo<T: Foo>(input: T){}\r\n  |           --- required by this bound in `foo`\r\n...\r\n8 |     foo(())\r\n  |         ^^ the trait `AsRef<str>` is not implemented for `()`\r\n  |\r\nnote: required because of the requirements on the impl of `Foo` for `()`\r\n --> src/main.rs:3:22\r\n  |\r\n3 | impl <T: AsRef<str>> Foo for T{}\r\n  |                      ^^^     ^\r\nnote: T does not implement `Foo`, and `AsRef<str>` is the only way it can.  \r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88398/timeline", "performed_via_github_app": null, "state_reason": null}