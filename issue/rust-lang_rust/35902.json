{"url": "https://api.github.com/repos/rust-lang/rust/issues/35902", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/35902/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/35902/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/35902/events", "html_url": "https://github.com/rust-lang/rust/issues/35902", "id": 172535692, "node_id": "MDU6SXNzdWUxNzI1MzU2OTI=", "number": 35902, "title": "incr. comp.: Increase partition granularity via special-casing non-inlined functions", "user": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-08-22T19:36:49Z", "updated_at": "2019-06-14T09:11:16Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "If we put every function into its own codegen unit, we would minimize the amount of functions being re-translated even though they have not changed. The main reason we don't do this, is because it would completely prevent inlining, which in turn has too detrimental an effect on runtime performance.\n\nHowever, for many functions we could probably predict very well that they would never get inlined by LLVM anyway, because they are marked with `#[inline(never)]` or they are just too big. This category of functions could be put into their own codegen unit without negative effects on runtime performance.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/35902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/35902/timeline", "performed_via_github_app": null, "state_reason": null}