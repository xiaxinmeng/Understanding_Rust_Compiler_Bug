{"url": "https://api.github.com/repos/rust-lang/rust/issues/59342", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/59342/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/59342/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/59342/events", "html_url": "https://github.com/rust-lang/rust/issues/59342", "id": 423820061, "node_id": "MDU6SXNzdWU0MjM4MjAwNjE=", "number": 59342, "title": "Existential types for traits without generic type parameters make rustc panic", "user": {"login": "a-rodin", "id": 1885277, "node_id": "MDQ6VXNlcjE4ODUyNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/1885277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a-rodin", "html_url": "https://github.com/a-rodin", "followers_url": "https://api.github.com/users/a-rodin/followers", "following_url": "https://api.github.com/users/a-rodin/following{/other_user}", "gists_url": "https://api.github.com/users/a-rodin/gists{/gist_id}", "starred_url": "https://api.github.com/users/a-rodin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a-rodin/subscriptions", "organizations_url": "https://api.github.com/users/a-rodin/orgs", "repos_url": "https://api.github.com/users/a-rodin/repos", "events_url": "https://api.github.com/users/a-rodin/events{/privacy}", "received_events_url": "https://api.github.com/users/a-rodin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-21T16:20:17Z", "updated_at": "2019-11-26T01:54:51Z", "closed_at": "2019-11-26T01:54:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\n#![feature(existential_type)]\r\n\r\ntrait Meow {\r\n    type MeowType;\r\n    fn meow(self) -> Self::MeowType;\r\n}\r\n\r\nimpl<T, I> Meow for I\r\n    where I: Iterator<Item = T>\r\n{\r\n    existential type MeowType: Iterator<Item = T>;\r\n    fn meow(self) -> Self::MeowType {\r\n        self\r\n    }\r\n}\r\n\r\nfn main() {\r\n}\r\n```\r\n\r\nI expected to be able to compile this code and to use it like this:\r\n\r\n```rust\r\nlet result: Vec<i32> = vec![1, 2, 3].into_iter().meow().collect();\r\n```\r\n\r\nInstead, `rustc` crashes (see backtrace in the end of the issue).\r\n\r\nHowever, the code compiles fine when I add generic type parameter to `Meow` trait definition:\r\n\r\n```rust\r\n#![feature(existential_type)]\r\n\r\ntrait Meow<T> {\r\n    type MeowType;\r\n    fn meow(self) -> Self::MeowType;\r\n}\r\n\r\nimpl<T, I> Meow<T> for I\r\n    where I: Iterator<Item = T>\r\n{\r\n    existential type MeowType: Iterator<Item = T>;\r\n    fn meow(self) -> Self::MeowType {\r\n        self\r\n    }\r\n}\r\n\r\n\r\nfn main() {\r\n}\r\n```\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.35.0-nightly (82e2f3ec2 2019-03-20)\r\nbinary: rustc\r\ncommit-hash: 82e2f3ec25a316c7536c33a6b6704366b14cbf2a\r\ncommit-date: 2019-03-20\r\nhost: x86_64-apple-darwin\r\nrelease: 1.35.0-nightly\r\nLLVM version: 8.0\r\n```\r\n\r\nBacktrace:\r\n```\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', src/libcore/option.rs:345:21\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n   1: std::sys_common::backtrace::_print\r\n   2: std::panicking::default_hook::{{closure}}\r\n   3: std::panicking::default_hook\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n   6: std::panicking::continue_panic_fmt\r\n   7: rust_begin_unwind\r\n   8: core::panicking::panic_fmt\r\n   9: core::panicking::panic\r\n  10: rustc_typeck::check::writeback::WritebackCx::visit_opaque_types\r\n  11: rustc_typeck::check::writeback::<impl rustc_typeck::check::FnCtxt>::resolve_type_vars_in_body\r\n  12: rustc::ty::context::GlobalCtxt::enter_local\r\n  13: rustc_typeck::check::typeck_tables_of\r\n  14: rustc::ty::query::__query_compute::typeck_tables_of\r\n  15: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_tables_of>::compute\r\n  16: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  17: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  18: rustc_typeck::collect::find_existential_constraints::ConstraintLocator::check\r\n  19: rustc::hir::intravisit::Visitor::visit_nested_impl_item\r\n  20: rustc::hir::intravisit::walk_item\r\n  21: rustc_typeck::collect::find_existential_constraints\r\n  22: rustc_typeck::collect::type_of\r\n  23: rustc::ty::query::__query_compute::type_of\r\n  24: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::type_of>::compute\r\n  25: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  26: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  27: <rustc_typeck::collect::CollectItemTypesVisitor as rustc::hir::intravisit::Visitor>::visit_impl_item\r\n  28: rustc::hir::map::Map::visit_item_likes_in_module\r\n  29: rustc_typeck::collect::collect_mod_item_types\r\n  30: rustc::ty::query::__query_compute::collect_mod_item_types\r\n  31: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::collect_mod_item_types>::compute\r\n  32: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  33: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  34: rustc_typeck::check_crate::{{closure}}::{{closure}}\r\n  35: rustc::util::common::time\r\n  36: rustc_typeck::check_crate\r\n  37: rustc_interface::passes::analysis\r\n  38: rustc::ty::query::__query_compute::analysis\r\n  39: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::analysis>::compute\r\n  40: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  41: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  42: rustc::ty::context::tls::enter_global\r\n  43: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  44: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  45: rustc_interface::passes::BoxedGlobalCtxt::enter\r\n  46: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  47: std::thread::local::LocalKey<T>::with\r\n  48: scoped_tls::ScopedKey<T>::set\r\n  49: syntax::with_globals\r\nquery stack during panic:\r\n#0 [typeck_tables_of] processing `<I as Meow>::meow`\r\n#1 [type_of] processing `<I as Meow>::MeowType`\r\n#2 [collect_mod_item_types] collecting item types in top-level module\r\n#3 [analysis] running analysis passes on this crate\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.35.0-nightly (82e2f3ec2 2019-03-20) running on x86_64-apple-darwin\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/59342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/59342/timeline", "performed_via_github_app": null, "state_reason": "completed"}