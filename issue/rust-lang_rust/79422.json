{"url": "https://api.github.com/repos/rust-lang/rust/issues/79422", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79422/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79422/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79422/events", "html_url": "https://github.com/rust-lang/rust/issues/79422", "id": 751096668, "node_id": "MDU6SXNzdWU3NTEwOTY2Njg=", "number": 79422, "title": "`generic_associated_types` fails on dyn dyn", "user": {"login": "hrls", "id": 3259009, "node_id": "MDQ6VXNlcjMyNTkwMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3259009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hrls", "html_url": "https://github.com/hrls", "followers_url": "https://api.github.com/users/hrls/followers", "following_url": "https://api.github.com/users/hrls/following{/other_user}", "gists_url": "https://api.github.com/users/hrls/gists{/gist_id}", "starred_url": "https://api.github.com/users/hrls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hrls/subscriptions", "organizations_url": "https://api.github.com/users/hrls/orgs", "repos_url": "https://api.github.com/users/hrls/repos", "events_url": "https://api.github.com/users/hrls/events{/privacy}", "received_events_url": "https://api.github.com/users/hrls/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 125141240, "node_id": "MDU6TGFiZWwxMjUxNDEyNDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-dst", "name": "A-dst", "color": "f7e101", "default": false, "description": "Area: Dynamically Sized Types"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-11-25T20:22:58Z", "updated_at": "2021-02-05T14:52:57Z", "closed_at": "2021-02-05T14:52:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\n#![feature(generic_associated_types)]\r\n#![allow(incomplete_features)]\r\n\r\ntrait RefCont<'a, T> {\r\n    fn t(&'a self) -> &'a T;\r\n}\r\n\r\nimpl<'a, T> RefCont<'a, T> for &'a T {\r\n    fn t(&'a self) -> &'a T {\r\n        self\r\n    }\r\n}\r\n\r\nimpl<'a, T> RefCont<'a, T> for Box<T> {\r\n    fn t(&'a self) -> &'a T {\r\n        self.as_ref()\r\n    }\r\n}\r\n\r\ntrait MapLike<K, V> {\r\n    type VRefCont<'a>: RefCont<'a, V>;\r\n    fn get<'a>(&'a self, key: &K) -> Option<Self::VRefCont<'a>>;\r\n}\r\n\r\nimpl<K: Ord, V: 'static> MapLike<K, V> for std::collections::BTreeMap<K, V> {\r\n    type VRefCont<'a> = &'a V;\r\n    fn get<'a>(&'a self, key: &K) -> Option<&'a V> {\r\n        std::collections::BTreeMap::get(self, key)\r\n    }\r\n}\r\n\r\nstruct Source;\r\n\r\nimpl<K, V: Default> MapLike<K, V> for Source {\r\n    type VRefCont<'a> = Box<V>;\r\n    fn get<'a>(&self, _: &K) -> Option<Box<V>> {\r\n        Some(Box::new(V::default()))\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let m = Box::new(std::collections::BTreeMap::<u8, u8>::new())\r\n        as Box<dyn MapLike<u8, u8, VRefCont = dyn RefCont<'_, u8>>>;\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0-nightly (fe982319a 2020-11-19)\r\nbinary: rustc\r\ncommit-hash: fe982319aa0aa5bbfc2795791a753832292bd2ba\r\ncommit-date: 2020-11-19\r\nhost: x86_64-apple-darwin\r\nrelease: 1.50.0-nightly\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling ttt v0.1.0 (/Users/hrls/tmp/ttt)\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/subst.rs:476:25: Region parameter out of range when substituting in region 'a (index=3)\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/fe982319aa0aa5bbfc2795791a753832292bd2ba/compiler/rustc_errors/src/lib.rs:904:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (fe982319a 2020-11-19) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [object_safety_violations] determine object safety of trait `MapLike`\r\n#1 [typeck] type-checking `main`\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `ttt`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/subst.rs:476:25: Region parameter out of range when substituting in region 'a (index=3)\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/fe982319aa0aa5bbfc2795791a753832292bd2ba/compiler/rustc_errors/src/lib.rs:904:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: rustc_errors::HandlerInner::span_bug\r\n   2: rustc_errors::Handler::span_bug\r\n   3: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n   4: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n   5: rustc_middle::ty::context::tls::with_opt\r\n   6: rustc_middle::util::bug::opt_span_bug_fmt\r\n   7: rustc_middle::util::bug::span_bug_fmt\r\n   8: <rustc_middle::ty::subst::SubstFolder as rustc_middle::ty::fold::TypeFolder>::fold_region\r\n   9: <smallvec::SmallVec<A> as core::iter::traits::collect::Extend<<A as smallvec::Array>::Item>>::extend\r\n  10: rustc_middle::ty::fold::TypeFoldable::fold_with\r\n  11: rustc_middle::ty::structural_impls::<impl rustc_middle::ty::fold::TypeFoldable for &rustc_middle::ty::TyS>::super_fold_with\r\n  12: rustc_middle::ty::fold::TypeFoldable::fold_with\r\n  13: rustc_middle::ty::fold::TypeFoldable::fold_with\r\n  14: rustc_middle::ty::Predicate::subst_supertrait\r\n  15: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold\r\n  16: <smallvec::SmallVec<A> as core::iter::traits::collect::Extend<<A as smallvec::Array>::Item>>::extend\r\n  17: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once\r\n  18: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next\r\n  19: <smallvec::SmallVec<A> as core::iter::traits::collect::Extend<<A as smallvec::Array>::Item>>::extend\r\n  20: rustc_middle::arena::Arena::alloc_from_iter\r\n  21: rustc_trait_selection::traits::object_safety::object_safety_violations\r\n  22: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  23: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  24: rustc_data_structures::stack::ensure_sufficient_stack\r\n  25: rustc_query_system::query::plumbing::get_query_impl\r\n  26: rustc_middle::ty::<impl rustc_middle::ty::context::TyCtxt>::is_object_safe\r\n  27: rustc_trait_selection::traits::fulfill::FulfillProcessor::progress_changed_obligations\r\n  28: <rustc_trait_selection::traits::fulfill::FulfillmentContext as rustc_infer::traits::engine::TraitEngine>::select_where_possible\r\n  29: rustc_typeck::check::fn_ctxt::_impl::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::resolve_vars_with_obligations\r\n  30: rustc_typeck::check::fn_ctxt::_impl::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::structurally_resolved_type\r\n  31: rustc_typeck::check::callee::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n  32: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  33: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  34: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  35: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  36: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_coercable_to_type\r\n  37: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_decl_local\r\n  38: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  39: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  40: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  41: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  42: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  43: rustc_typeck::check::check::check_fn\r\n  44: rustc_infer::infer::InferCtxtBuilder::enter\r\n  45: rustc_typeck::check::typeck\r\n  46: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck>::compute\r\n  47: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  48: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  49: rustc_data_structures::stack::ensure_sufficient_stack\r\n  50: rustc_query_system::query::plumbing::get_query_impl\r\n  51: rustc_query_system::query::plumbing::ensure_query_impl\r\n  52: rustc_typeck::check::typeck_item_bodies\r\n  53: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck_item_bodies>::compute\r\n  54: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  55: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  56: rustc_data_structures::stack::ensure_sufficient_stack\r\n  57: rustc_query_system::query::plumbing::get_query_impl\r\n  58: rustc_typeck::check_crate\r\n  59: rustc_interface::passes::analysis\r\n  60: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  61: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  62: rustc_query_system::dep_graph::graph::DepGraph<K>::with_eval_always_task\r\n  63: rustc_data_structures::stack::ensure_sufficient_stack\r\n  64: rustc_query_system::query::plumbing::get_query_impl\r\n  65: rustc_interface::passes::QueryContext::enter\r\n  66: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  67: rustc_span::with_source_map\r\n  68: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (fe982319a 2020-11-19) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [object_safety_violations] determine object safety of trait `MapLike`\r\n#1 [typeck] type-checking `main`\r\n#2 [typeck_item_bodies] type-checking all item bodies\r\n#3 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `ttt`\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79422/timeline", "performed_via_github_app": null, "state_reason": "completed"}