{"url": "https://api.github.com/repos/rust-lang/rust/issues/112560", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112560/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112560/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112560/events", "html_url": "https://github.com/rust-lang/rust/issues/112560", "id": 1753010034, "node_id": "I_kwDOAAsO6M5ofM9y", "number": 112560, "title": "Associated const equality conflicts with associated type equality", "user": {"login": "mversic", "id": 45123125, "node_id": "MDQ6VXNlcjQ1MTIzMTI1", "avatar_url": "https://avatars.githubusercontent.com/u/45123125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mversic", "html_url": "https://github.com/mversic", "followers_url": "https://api.github.com/users/mversic/followers", "following_url": "https://api.github.com/users/mversic/following{/other_user}", "gists_url": "https://api.github.com/users/mversic/gists{/gist_id}", "starred_url": "https://api.github.com/users/mversic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mversic/subscriptions", "organizations_url": "https://api.github.com/users/mversic/orgs", "repos_url": "https://api.github.com/users/mversic/repos", "events_url": "https://api.github.com/users/mversic/events{/privacy}", "received_events_url": "https://api.github.com/users/mversic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 4580535990, "node_id": "LA_kwDOAAsO6M8AAAABEQVutg", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-associated_const_equality", "name": "F-associated_const_equality", "color": "f9c0cc", "default": false, "description": "`#![feature(associated_const_equality)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-06-12T15:26:15Z", "updated_at": "2023-06-13T15:45:49Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code and it compiled:\r\n```rust\r\ntrait Trait2 {}\r\n\r\ntrait Trait1 {\r\n    const A: u32;\r\n    type A;\r\n}\r\n\r\nimpl<T: Trait1<A = u32>, const N: usize> Trait2 for [T; N] {}\r\n\r\nfn main() {}\r\n```\r\nThen I tried this code and it didn't compile:\r\n\r\n```rust\r\n#![feature(associated_const_equality)]\r\n\r\ntrait Trait2 {}\r\n\r\ntrait Trait1 {\r\n    const A: u32;\r\n    type A;\r\n}\r\n\r\nimpl<T: Trait1<A = 12>, const N: usize> Trait2 for [T; N] {}\r\n\r\nfn main() {}\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.72.0-nightly (37998ab50 2023-06-11)\r\nbinary: rustc\r\ncommit-hash: 37998ab508d5d9fa0d465d7b535dc673087dda8f\r\ncommit-date: 2023-06-11\r\nhost: aarch64-apple-darwin\r\nrelease: 1.72.0-nightly\r\nLLVM version: 16.0.5\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nerror: expected associated type bound, found constant\r\n  --> src/main.rs:10:16\r\n   |\r\n10 | impl<T: Trait1<A = 12>, const N: usize> Trait2 for [T; N] {}\r\n   |                ^^^^^^\r\n   |\r\nnote: associated type defined here\r\n  --> src/main.rs:5:5\r\n   |\r\n5  |     type A;\r\n   |     ^^^^^^\r\n\r\nerror: could not compile `proba2` (bin \"proba2\") due to previous error\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n### Explanation\r\n\r\nRust allows for associated const parameter and associated type parameter to have the same name. So, I expected there would be some way to disambiguate which one I'm referring to when setting the equality constraint but haven't found a way to do so.\r\n\r\nThis problem is related to [Associated Const Equality](https://github.com/rust-lang/rust/issues/92827)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112560/timeline", "performed_via_github_app": null, "state_reason": null}