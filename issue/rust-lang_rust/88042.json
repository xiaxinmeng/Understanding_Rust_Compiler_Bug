{"url": "https://api.github.com/repos/rust-lang/rust/issues/88042", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88042/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88042/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88042/events", "html_url": "https://github.com/rust-lang/rust/issues/88042", "id": 971032589, "node_id": "MDU6SXNzdWU5NzEwMzI1ODk=", "number": 88042, "title": "ICE OutputTypeParameterMismatch", "user": {"login": "HellButcher", "id": 11277174, "node_id": "MDQ6VXNlcjExMjc3MTc0", "avatar_url": "https://avatars.githubusercontent.com/u/11277174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HellButcher", "html_url": "https://github.com/HellButcher", "followers_url": "https://api.github.com/users/HellButcher/followers", "following_url": "https://api.github.com/users/HellButcher/following{/other_user}", "gists_url": "https://api.github.com/users/HellButcher/gists{/gist_id}", "starred_url": "https://api.github.com/users/HellButcher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HellButcher/subscriptions", "organizations_url": "https://api.github.com/users/HellButcher/orgs", "repos_url": "https://api.github.com/users/HellButcher/repos", "events_url": "https://api.github.com/users/HellButcher/events{/privacy}", "received_events_url": "https://api.github.com/users/HellButcher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-08-15T02:13:39Z", "updated_at": "2021-08-15T20:14:37Z", "closed_at": "2021-08-15T20:14:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\nuse std::{cell::{Ref, RefCell}, marker::PhantomData};\r\n\r\ntrait Query<'a> {\r\n  type Fetch: for<'b> Fetch<'a, 'b>;\r\n}\r\ntrait Fetch<'a,'b>{\r\n  type Item: 'b;\r\n  fn borrow(source: &'a A) -> Self;\r\n  fn get(&'b self, index: usize) -> Self::Item;\r\n}\r\n\r\nstruct A(RefCell<Vec<u32>>);\r\nstruct ARef<'a>(Ref<'a, Vec<u32>>);\r\n\r\nimpl<'a,'b> Fetch<'a,'b> for ARef<'a> {\r\n  type Item = &'b u32;\r\n  fn borrow(source: &'a A) -> Self {\r\n    ARef(source.0.borrow())\r\n  }\r\n  fn get(&'b self, index: usize) -> Self::Item {\r\n    &self.0[index]\r\n  }\r\n}\r\n\r\nimpl<'a> Query<'a> for &'_ u32 {\r\n  type Fetch = ARef<'a>;\r\n}\r\n\r\nstruct Qry<Q>(PhantomData<Q>);\r\n\r\nimpl<'a, Q> Qry<Q>\r\n  where Q: Query<'a>\r\n{\r\n  fn new() -> Self { Self(PhantomData) }\r\n  fn with_fn<F,R>(&self, source: &'a A, index: usize, f: F) -> R\r\n    where for<'b> F: FnOnce(<Q::Fetch as Fetch<'a, 'b>>::Item) -> R\r\n  {\r\n    let b = Q::Fetch::borrow(source);\r\n    let item = b.get(index);\r\n    f(item)\r\n  }\r\n}\r\n\r\npub fn test() {\r\n  let a = A(RefCell::new(vec![1,2,3]));\r\n  let qry = Qry::<&u32>::new();\r\n  assert_eq!(9, qry.with_fn(&a, 2, |v| *v * 3));\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.54.0 (a178d0322 2021-07-26)\r\nbinary: rustc\r\ncommit-hash: a178d0322ce20e33eac124758e837cbd80a6f633\r\ncommit-date: 2021-07-26\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.54.0\r\nLLVM version: 12.0.1\r\n\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_trait_selection/src/traits/codegen.rs:78:17: Encountered error `OutputTypeParameterMismatch(Binder(<[closure@crates/ice/src/lib.rs:47:36: 47:46] as std::ops::FnOnce<(<ARef as Fetch<'_, '_>>::Item,)>>, [Region(BrAnon(0))]), Binder(<[closure@crates/ice/src/lib.rs:47:36: 47:46] as std::ops::FnOnce<(&u32,)>>, []), Sorts(ExpectedFound { expected: &u32, found: <ARef as Fetch<'_, '_>>::Item }))` selecting `Binder(<[closure@crates/ice/src/lib.rs:47:36: 47:46] as std::ops::FnOnce<(&u32,)>>, [])` during codegen\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1007:9\r\nstack backtrace:\r\n[...]\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.54.0 (a178d0322 2021-07-26) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [codegen_fulfill_obligation] checking if `std::ops::FnOnce` fulfills its obligations\r\n#1 [resolve_instance] resolving instance `<[closure@crates/ice/src/lib.rs:48:36: 48:46] as std::ops::FnOnce<(&u32,)>>::call_once`\r\n#2 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: aborting due to previous error\r\n```\r\n\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1007:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: std::panic::panic_any\r\n   2: rustc_errors::HandlerInner::bug\r\n   3: rustc_errors::Handler::bug\r\n   4: rustc_middle::ty::context::tls::with_opt\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: rustc_infer::infer::InferCtxtBuilder::enter\r\n   8: rustc_trait_selection::traits::codegen::codegen_fulfill_obligation\r\n   9: rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::codegen_fulfill_obligation>::compute\r\n  10: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  11: rustc_data_structures::stack::ensure_sufficient_stack\r\n  12: rustc_query_system::query::plumbing::get_query_impl\r\n  13: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::codegen_fulfill_obligation\r\n  14: rustc_ty_utils::instance::inner_resolve_instance\r\n  15: rustc_ty_utils::instance::resolve_instance\r\n  16: rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::resolve_instance>::compute\r\n  17: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  18: rustc_data_structures::stack::ensure_sufficient_stack\r\n  19: rustc_query_system::query::plumbing::get_query_impl\r\n  20: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::resolve_instance\r\n  21: rustc_middle::ty::instance::Instance::resolve_opt_const_arg\r\n  22: rustc_middle::ty::instance::Instance::resolve\r\n  23: <rustc_mir::monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor>::visit_terminator\r\n  24: rustc_mir::monomorphize::collector::collect_neighbours\r\n  25: rustc_mir::monomorphize::collector::collect_items_rec\r\n  26: rustc_mir::monomorphize::collector::collect_items_rec\r\n  27: rustc_mir::monomorphize::collector::collect_items_rec\r\n  28: rustc_mir::monomorphize::collector::collect_items_rec\r\n  29: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  30: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  31: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  32: rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::collect_and_partition_mono_items>::compute\r\n  33: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  34: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  35: rustc_data_structures::stack::ensure_sufficient_stack\r\n  36: rustc_query_system::query::plumbing::force_query_with_job\r\n  37: rustc_query_system::query::plumbing::get_query_impl\r\n  38: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::collect_and_partition_mono_items\r\n  39: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  40: rustc_interface::passes::QueryContext::enter\r\n  41: rustc_interface::queries::Queries::ongoing_codegen\r\n  42: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  43: rustc_span::with_source_map\r\n  44: rustc_interface::interface::create_compiler_and_run\r\n  45: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88042/timeline", "performed_via_github_app": null, "state_reason": "completed"}