{"url": "https://api.github.com/repos/rust-lang/rust/issues/82796", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82796/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82796/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82796/events", "html_url": "https://github.com/rust-lang/rust/issues/82796", "id": 822959364, "node_id": "MDU6SXNzdWU4MjI5NTkzNjQ=", "number": 82796, "title": "async fn should not require temporary variable to be `Send` if it won't be accessed across await", "user": {"login": "BusyJay", "id": 1701473, "node_id": "MDQ6VXNlcjE3MDE0NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1701473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BusyJay", "html_url": "https://github.com/BusyJay", "followers_url": "https://api.github.com/users/BusyJay/followers", "following_url": "https://api.github.com/users/BusyJay/following{/other_user}", "gists_url": "https://api.github.com/users/BusyJay/gists{/gist_id}", "starred_url": "https://api.github.com/users/BusyJay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BusyJay/subscriptions", "organizations_url": "https://api.github.com/users/BusyJay/orgs", "repos_url": "https://api.github.com/users/BusyJay/repos", "events_url": "https://api.github.com/users/BusyJay/events{/privacy}", "received_events_url": "https://api.github.com/users/BusyJay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-03-05T10:33:10Z", "updated_at": "2021-03-05T11:38:57Z", "closed_at": "2021-03-05T11:38:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::future::*;\r\nuse std::pin::Pin;\r\nuse std::task::*;\r\n\r\nstruct SendFuture {\r\n    ptr: *mut (),\r\n}\r\nunsafe impl Send for SendFuture {}\r\nimpl Future for SendFuture {\r\n    type Output = ();\r\n    fn poll(self: Pin<&mut Self>, ctx: &mut Context) -> Poll<()> {\r\n        Poll::Ready(())\r\n    }\r\n}\r\n\r\nstruct UnSendPromise {\r\n     ptr: *mut (),\r\n}\r\n\r\nfn consume(_s: UnSendPromise) {\r\n    unimplemented!()\r\n}\r\n\r\nfn pair() -> (SendFuture, UnSendPromise) {\r\n    unimplemented!()\r\n}\r\n\r\nasync fn temporary_variable_unsend() {\r\n    let (f, p) = pair();\r\n    consume(p);\r\n    f.await\r\n}\r\n\r\nfn test_temporary_variable_unsend() {\r\n    let c = async move {\r\n        temporary_variable_unsend().await\r\n    };\r\n    std::thread::spawn(move || {\r\n        drop(c)\r\n    });\r\n}\r\n```\r\n\r\nI expected to see this happen:\r\n\r\nIt compiles.\r\n\r\nThe async fn `temporary_variable_unsend` consumes the temporary variable `p` directly. Hence it doesn't matter if its type `UnSendPromise` is not `Send` as it will never be accessed after await.\r\n\r\nInstead, this happened:\r\n\r\nIt fails to compile.\r\n```\r\nerror: future cannot be sent between threads safely\r\n   --> src/lib.rs:38:5\r\n    |\r\n38  |     std::thread::spawn(move || {\r\n    |     ^^^^^^^^^^^^^^^^^^ future created by async block is not `Send`\r\n    |\r\n    = help: within `[closure@src/lib.rs:38:24: 40:6]`, the trait `Send` is not implemented for `*mut ()`\r\nnote: future is not `Send` as this value is used across an await\r\n   --> src/lib.rs:31:5\r\n    |\r\n29  |     let (f, p) = pair();\r\n    |             - has type `UnSendPromise` which is not `Send`\r\n30  |     consume(p);\r\n31  |     f.await\r\n    |     ^^^^^^^ await occurs here, with `p` maybe used later\r\n32  | }\r\n    | - `p` is later dropped here\r\n```\r\n\r\nAfter changing `temporary_variable_unsend` to following code, it compiles.\r\n```\r\nfn temporary_variable_unsend() -> impl Future<Output=()> {\r\n    let (f, p) = pair();\r\n    consume(p);\r\n    f\r\n}\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0 (cb75ad5db 2021-02-10)\r\nbinary: rustc\r\ncommit-hash: cb75ad5db02783e8b0222fee363c5f63f7e2cf5b\r\ncommit-date: 2021-02-10\r\nhost: aarch64-apple-darwin\r\nrelease: 1.50.0\r\n```\r\n", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82796/timeline", "performed_via_github_app": null, "state_reason": "completed"}