{"url": "https://api.github.com/repos/rust-lang/rust/issues/56288", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56288/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56288/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56288/events", "html_url": "https://github.com/rust-lang/rust/issues/56288", "id": 384896571, "node_id": "MDU6SXNzdWUzODQ4OTY1NzE=", "number": 56288, "title": "problems with trait objects with a trait projection value that contains Self", "user": {"login": "ExpHP", "id": 1411280, "node_id": "MDQ6VXNlcjE0MTEyODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1411280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExpHP", "html_url": "https://github.com/ExpHP", "followers_url": "https://api.github.com/users/ExpHP/followers", "following_url": "https://api.github.com/users/ExpHP/following{/other_user}", "gists_url": "https://api.github.com/users/ExpHP/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExpHP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExpHP/subscriptions", "organizations_url": "https://api.github.com/users/ExpHP/orgs", "repos_url": "https://api.github.com/users/ExpHP/repos", "events_url": "https://api.github.com/users/ExpHP/events{/privacy}", "received_events_url": "https://api.github.com/users/ExpHP/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252628, "node_id": "MDU6TGFiZWwyNjIyNTI2Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-beta", "name": "regression-from-stable-to-beta", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to beta."}], "state": "closed", "locked": false, "assignee": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2018-11-27T17:05:57Z", "updated_at": "2018-12-18T22:35:04Z", "closed_at": "2018-12-18T22:35:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Title Edited. Original title was: ICE: Encountered a freshend type with id 0 but our counter is only at 0\r\n\r\nOnly on nightly. Minimized for your pleasure:\r\n\r\n```rust\r\n// NOTE: uncommenting Input changes the error message\r\n// pub struct Input {}\r\n\r\npub trait BuildAlgorithmStateFn{\r\n    fn build(&self) -> Box<dyn AlgorithmStateFn<Output=()>>;\r\n}\r\n\r\npub trait AlgorithmStateFn\r\n    : FnMut() -> <Self as AlgorithmStateFn>::Output\r\n{\r\n    type Output;\r\n}\r\n```\r\n\r\n### Error/Backtrace if `Input` is commented out\r\n\r\n<details>\r\n\r\n```\r\nerror: internal compiler error: src/librustc/infer/freshen.rs:165: Encountered a freshend type with id 0 but our counter is only at 0\r\n\r\nthread 'main' panicked at 'Box<Any>', src/librustc_errors/lib.rs:600:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n             at src/libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:480\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::util::bug::opt_span_bug_fmt\r\n  13: rustc::util::bug::bug_fmt\r\n  14: <rustc::infer::freshen::TypeFreshener<'a, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  15: <smallvec::SmallVec<A> as core::iter::traits::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  16: rustc::ty::fold::TypeFoldable::fold_with\r\n  17: rustc::traits::select::SelectionContext::select\r\n  18: rustc::infer::InferCtxt::commit_if_ok\r\n  19: rustc::traits::project::opt_normalize_projection_type\r\n  20: rustc::traits::project::normalize_projection_type\r\n  21: <rustc::traits::project::AssociatedTypeNormalizer<'a, 'b, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  22: <smallvec::SmallVec<A> as core::iter::traits::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  23: rustc::ty::fold::TypeFoldable::fold_with\r\n  24: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable<'tcx> for &'tcx rustc::ty::TyS<'tcx>>::super_fold_with\r\n  25: <rustc::traits::project::AssociatedTypeNormalizer<'a, 'b, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  26: <smallvec::SmallVec<A> as core::iter::traits::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  27: rustc::ty::fold::TypeFoldable::fold_with\r\n  28: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable<'tcx> for &'tcx rustc::ty::TyS<'tcx>>::super_fold_with\r\n  29: <rustc::traits::project::AssociatedTypeNormalizer<'a, 'b, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  30: <smallvec::SmallVec<A> as core::iter::traits::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  31: rustc::ty::fold::TypeFoldable::fold_with\r\n  32: rustc::traits::project::normalize\r\n  33: rustc::infer::InferCtxt::partially_normalize_associated_types_in\r\n  34: rustc::ty::context::tls::with_related_context\r\n  35: rustc::infer::InferCtxtBuilder::enter\r\n  36: rustc_typeck::check::wfcheck::check_associated_item\r\n  37: rustc_typeck::check::wfcheck::check_trait_item\r\n  38: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::check_trait_item_well_formed<'tcx>>::compute\r\n  39: rustc::ty::context::tls::with_context\r\n  40: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  41: rustc::ty::context::tls::with_related_context\r\n  42: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  43: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  44: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::ensure_query\r\n  45: rustc::session::Session::track_errors\r\n  46: rustc_typeck::check_crate\r\n  47: rustc::ty::context::tls::enter_context\r\n  48: <std::thread::local::LocalKey<T>>::with\r\n  49: rustc::ty::context::TyCtxt::create_and_enter\r\n  50: rustc_driver::driver::compile_input\r\n  51: rustc_driver::run_compiler_with_pool\r\n  52: <scoped_tls::ScopedKey<T>>::set\r\n  53: rustc_driver::run_compiler\r\n  54: syntax::with_globals\r\n  55: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  56: rustc_driver::run\r\n  57: rustc_driver::main\r\n  58: std::rt::lang_start::{{closure}}\r\n  59: std::panicking::try::do_call\r\n             at src/libstd/rt.rs:59\r\n             at src/libstd/panicking.rs:310\r\n  60: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  61: std::rt::lang_start_internal\r\n             at src/libstd/panicking.rs:289\r\n             at src/libstd/panic.rs:398\r\n             at src/libstd/rt.rs:58\r\n  62: main\r\n  63: __libc_start_main\r\n  64: <unknown>\r\nquery stack during panic:\r\n#0 [check_trait_item_well_formed] processing `BuildAlgorithmStateFn::build`\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.32.0-nightly (6bfb46e4a 2018-11-26) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `rsp2-minimize`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</details>\r\n\r\n### Error/Backtrace if `Input` is present\r\n\r\n\r\n<details>\r\n\r\n```\r\nerror: internal compiler error: src/librustc_typeck/variance/constraints.rs:344: unexpected type encountered in variance inference: FreshTy(0)\r\n\r\nthread 'main' panicked at 'Box<Any>', src/librustc_errors/lib.rs:600:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n             at src/libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:480\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::util::bug::opt_span_bug_fmt\r\n  13: rustc::util::bug::bug_fmt\r\n  14: rustc_typeck::variance::constraints::ConstraintContext::add_constraints_from_ty\r\n  15: rustc_typeck::variance::constraints::ConstraintContext::add_constraints_from_invariant_substs\r\n  16: rustc_typeck::variance::constraints::ConstraintContext::add_constraints_from_ty\r\n  17: rustc_typeck::variance::constraints::ConstraintContext::add_constraints_from_ty\r\n  18: rustc_typeck::variance::constraints::ConstraintContext::add_constraints_from_ty\r\n  19: rustc_typeck::variance::constraints::ConstraintContext::visit_node_helper\r\n  20: rustc::hir::Crate::visit_all_item_likes\r\n  21: rustc_typeck::variance::constraints::add_constraints_from_crate\r\n  22: rustc_typeck::variance::crate_variances\r\n  23: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::crate_variances<'tcx>>::compute\r\n  24: rustc::ty::context::tls::with_context\r\n  25: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  26: rustc::ty::context::tls::with_related_context\r\n  27: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  28: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  29: rustc_typeck::variance::variances_of\r\n  30: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::variances_of<'tcx>>::compute\r\n  31: rustc::ty::context::tls::with_context\r\n  32: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  33: rustc::ty::context::tls::with_related_context\r\n  34: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  35: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  36: rustc_typeck::check::wfcheck::check_variances_for_type_defn\r\n  37: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  38: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::check_item_well_formed<'tcx>>::compute\r\n  39: rustc::ty::context::tls::with_context\r\n  40: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  41: rustc::ty::context::tls::with_related_context\r\n  42: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  43: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  44: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::ensure_query\r\n  45: rustc::session::Session::track_errors\r\n  46: rustc_typeck::check_crate\r\n  47: rustc::ty::context::tls::enter_context\r\n  48: <std::thread::local::LocalKey<T>>::with\r\n  49: rustc::ty::context::TyCtxt::create_and_enter\r\n  50: rustc_driver::driver::compile_input\r\n  51: rustc_driver::run_compiler_with_pool\r\n  52: <scoped_tls::ScopedKey<T>>::set\r\n  53: rustc_driver::run_compiler\r\n  54: syntax::with_globals\r\n  55: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  56: rustc_driver::run\r\n  57: rustc_driver::main\r\n  58: std::rt::lang_start::{{closure}}\r\n  59: std::panicking::try::do_call\r\n             at src/libstd/rt.rs:59\r\n             at src/libstd/panicking.rs:310\r\n  60: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  61: std::rt::lang_start_internal\r\n             at src/libstd/panicking.rs:289\r\n             at src/libstd/panic.rs:398\r\n             at src/libstd/rt.rs:58\r\n  62: main\r\n  63: __libc_start_main\r\n  64: <unknown>\r\nquery stack during panic:\r\n#0 [crate_variances] computing the variances for items in this crate\r\n#1 [variances_of] processing `Input`\r\n#2 [check_item_well_formed] processing `Input`\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.32.0-nightly (6bfb46e4a 2018-11-26) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `rsp2-minimize`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</details>\r\n\r\n### \"Correct\" output on `beta`\r\n\r\nAt least, \"correct\" as in \"not an ICE\"...\r\n\r\n```\r\n$ RUST_BACKTRACE=1 cargo +beta build\r\n   Compiling objekt v0.1.1                                                                                                                                   \r\n   Compiling rsp2-minimize v0.1.0 (/home/lampam/rsp2.3)                                                                                                      \r\nerror[E0191]: the value of the associated type `Output` (from the trait `std::ops::FnOnce`) must be specified                                                \r\n  --> src/lib.rs:11:28                                                                                                                                       \r\n   |                                                                                                                                                         \r\n11 |     fn build(&self) -> Box<dyn AlgorithmStateFn<Output=()>>;                                                                                            \r\n   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing associated type `Output` value                                                       \r\n                                                                                                                                                             \r\nerror: aborting due to previous error \r\n```\r\n\r\n### Additional notes:\r\n\r\nIt is not related to the name clash of the associated types, because the following modified snippet:\r\n\r\n```rust\r\npub struct Input {}\r\n\r\npub trait BuildAlgorithmStateFn{\r\n    fn build(&self) -> Box<dyn AlgorithmStateFn<Output2=(),Output=()>>;\r\n}\r\n\r\npub trait AlgorithmStateFn\r\n    : FnMut() -> <Self as AlgorithmStateFn>::Output2\r\n{\r\n    type Output2;\r\n}\r\n```\r\n...also produces the same ICE on `nightly` (but compiles on `beta`).", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56288/timeline", "performed_via_github_app": null, "state_reason": "completed"}