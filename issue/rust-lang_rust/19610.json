{"url": "https://api.github.com/repos/rust-lang/rust/issues/19610", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/19610/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/19610/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/19610/events", "html_url": "https://github.com/rust-lang/rust/issues/19610", "id": 51206004, "node_id": "MDU6SXNzdWU1MTIwNjAwNA==", "number": 19610, "title": "Task panic should default to aborting process", "user": {"login": "MichaelGG", "id": 429031, "node_id": "MDQ6VXNlcjQyOTAzMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/429031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MichaelGG", "html_url": "https://github.com/MichaelGG", "followers_url": "https://api.github.com/users/MichaelGG/followers", "following_url": "https://api.github.com/users/MichaelGG/following{/other_user}", "gists_url": "https://api.github.com/users/MichaelGG/gists{/gist_id}", "starred_url": "https://api.github.com/users/MichaelGG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MichaelGG/subscriptions", "organizations_url": "https://api.github.com/users/MichaelGG/orgs", "repos_url": "https://api.github.com/users/MichaelGG/repos", "events_url": "https://api.github.com/users/MichaelGG/events{/privacy}", "received_events_url": "https://api.github.com/users/MichaelGG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-12-07T03:38:00Z", "updated_at": "2014-12-08T05:41:01Z", "closed_at": "2014-12-07T09:11:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that currently (nightly 2014-12-05), the default behaviour for a panicking task is to kill the task but leave the process unharmed. That's  undesireable by default, and should only happen on an opt-in manner when spawning, or a global handler. Otherwise it's too easy to have a critical task die and the process continues incorrectly. FWIW the CLR swallowed background exceptions in the first release but changed that behavior in V2.\n\nRepro example:\n\n``` rust\nfn main() {\n   spawn(proc() { \n        panic!(\"worker is dead\"); \n    });\n    println!(\"{}\", std::io::stdio::stdin().read_line());\n}\n```\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/19610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/19610/timeline", "performed_via_github_app": null, "state_reason": "completed"}