{"url": "https://api.github.com/repos/rust-lang/rust/issues/62952", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62952/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62952/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62952/events", "html_url": "https://github.com/rust-lang/rust/issues/62952", "id": 472483967, "node_id": "MDU6SXNzdWU0NzI0ODM5Njc=", "number": 62952, "title": "Copy trait defeats generator optimization", "user": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 679846574, "node_id": "MDU6TGFiZWw2Nzk4NDY1NzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-generators", "name": "A-generators", "color": "f7e101", "default": false, "description": "Area: Generators"}, {"id": 1049491442, "node_id": "MDU6TGFiZWwxMDQ5NDkxNDQy", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-heavy", "name": "I-heavy", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to binary size of generated code."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-24T19:54:56Z", "updated_at": "2019-07-30T01:30:36Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following example ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=8ce85f410c979987157e2a0518f065d2)):\r\n\r\n```rust\r\n#![feature(generators, generator_trait)]\r\n\r\nuse std::ops::Generator;\r\n\r\n#[derive(Clone)]\r\nstruct Foo([u8; 1024]);\r\n\r\nfn overlap_foo() -> impl Generator<Yield = (), Return = ()>{\r\n    static || {\r\n        let x = Foo([0u8; 1024]);\r\n        yield;\r\n        drop(x);\r\n        let y = Foo([0u8; 1024]);\r\n        yield;\r\n        drop(y);\r\n    }\r\n}\r\n\r\n#[derive(Clone, Copy)]\r\nstruct Bar([u8; 1024]);\r\n\r\nfn overlap_bar() -> impl Generator<Yield = (), Return = ()>{\r\n    static || {\r\n        let x = Bar([0u8; 1024]);\r\n        yield;\r\n        drop(x);\r\n        let y = Bar([0u8; 1024]);\r\n        yield;\r\n        drop(y);\r\n    }\r\n}\r\n\r\nfn main() {\r\n    dbg!(std::mem::size_of_val(&overlap_foo()));\r\n    dbg!(std::mem::size_of_val(&overlap_bar()));\r\n}\r\n```\r\n\r\nOutputs:\r\n\r\n```\r\n[gen-explicit-drop.rs:34] std::mem::size_of_val(&overlap_foo()) = 1028                                                                                                                                                                                                                                                       \r\n[gen-explicit-drop.rs:35] std::mem::size_of_val(&overlap_bar()) = 2052  \r\n```\r\n\r\nThe only difference between Foo and Bar is that Foo is Copy. This defeats the generator optimization implemented in #61922 which considers any local that has been _moved_ from as a candidate for overlap.\r\n\r\nTechnically, this is semantically consistent with the existing overlap behavior for generators. But making a type `Copy` and getting worse performance is a footgun that we should fix.\r\n\r\nThis can be fixed with a pass that turns unnecessary copies into moves in MIR.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62952/timeline", "performed_via_github_app": null, "state_reason": null}