{"url": "https://api.github.com/repos/rust-lang/rust/issues/48838", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48838/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48838/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48838/events", "html_url": "https://github.com/rust-lang/rust/issues/48838", "id": 303361209, "node_id": "MDU6SXNzdWUzMDMzNjEyMDk=", "number": 48838, "title": "assign a Closure in Enum", "user": {"login": "ulinlong", "id": 27770857, "node_id": "MDQ6VXNlcjI3NzcwODU3", "avatar_url": "https://avatars.githubusercontent.com/u/27770857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulinlong", "html_url": "https://github.com/ulinlong", "followers_url": "https://api.github.com/users/ulinlong/followers", "following_url": "https://api.github.com/users/ulinlong/following{/other_user}", "gists_url": "https://api.github.com/users/ulinlong/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulinlong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulinlong/subscriptions", "organizations_url": "https://api.github.com/users/ulinlong/orgs", "repos_url": "https://api.github.com/users/ulinlong/repos", "events_url": "https://api.github.com/users/ulinlong/events{/privacy}", "received_events_url": "https://api.github.com/users/ulinlong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-08T05:28:07Z", "updated_at": "2018-05-21T01:23:30Z", "closed_at": "2018-05-21T01:23:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Compiler say it's a bug :note: the compiler unexpectedly panicked. this is a bug.\r\n\r\nI tried this code:\r\n```\r\nfn main() {\r\n    \r\n    let x:i32 = 0;\r\n\r\n    let square = Functions::Square;\r\n\r\n    println!(\"x square is {}\", square(x));\r\n\r\n}\r\n\r\nenum Functions{\r\n    Square = |x:i32|{x*x},\r\n}\r\n```\r\n\r\n## Meta\r\n```\r\n Compiling advanced_function v0.1.0 (file:///C:/Users/tt/IdeaProjects/advanced_function)\r\nerror: internal compiler error: src\\librustc_typeck\\check\\mod.rs:820: can't type-check body of DefId(0/0:4 ~ advanced_function[1c36]::Functions[0])\r\n  --> src\\main.rs:13:1\r\n   |\r\n13 | / enum Functions{\r\n14 | |     Square = |x:i32|{x*x},\r\n15 | | }\r\n   | |_^\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.24.1 (d3ae9a9e0 2018-02-27) running on x86_64-pc-windows-msvc\r\n\r\nnote: run with `RUST_BACKTRACE=1` for a backtrace\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src\\librustc_errors\\lib.rs:451:9\r\nstack backtrace:\r\n   0: <std::sync::condvar::WaitTimeoutResult as core::fmt::Debug>::fmt\r\n   1: <std::time::SystemTimeError as core::fmt::Display>::fmt\r\n   2: std::panicking::Location::column\r\n   3: std::panicking::Location::column\r\n   4: std::panicking::rust_panic_with_hook\r\n   5: <rustc_typeck::check::method::probe::ProbeScope as core::fmt::Debug>::fmt\r\n   6: <rustc_typeck::constrained_type_params::Parameter as core::fmt::Debug>::fmt\r\n   7: <rustc::hir::Arm as rustc_typeck::check::coercion::AsCoercionSite>::as_coercion_site\r\n   8: <rustc_typeck::check::upvar::InferBorrowKindVisitor<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::nested_visit_map\r\n   9: <rustc_typeck::check::op::Op as core::fmt::Debug>::fmt\r\n  10: <rustc_typeck::check::CheckItemTypesVisitor<'a, 'tcx> as rustc::hir::itemlikevisit::ItemLikeVisitor<'tcx>>::visit_item\r\n  11: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::ensure\r\n  12: rustc::dep_graph::graph::DepGraph::in_ignore\r\n  13: rustc::util::ppaux::<impl core::fmt::Debug for rustc::ty::Predicate<'tcx>>::fmt\r\n  14: <rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx> as rustc::ty::layout::HasTyCtxt<'gcx>>::tcx\r\n  15: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::ensure\r\n  16: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::try_get\r\n  17: rustc::ty::maps::TyCtxtAt::typeck_tables_of\r\n  18: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_tables_of\r\n  19: <rustc_typeck::check::CheckItemTypesVisitor<'a, 'tcx> as rustc::hir::itemlikevisit::ItemLikeVisitor<'tcx>>::visit_item\r\n  20: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::ensure\r\n  21: rustc::dep_graph::graph::DepGraph::in_ignore\r\n  22: rustc::util::ppaux::<impl core::fmt::Debug for rustc::ty::Predicate<'tcx>>::fmt\r\n  23: <rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx> as rustc::ty::layout::HasTyCtxt<'gcx>>::tcx\r\n  24: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::ensure\r\n  25: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::try_get\r\n  26: rustc::ty::maps::TyCtxtAt::typeck_tables_of\r\n  27: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_tables_of\r\n  28: rustc_mir::interpret::const_eval::const_eval_provider\r\n  29: rustc::ty::maps::<impl rustc::ty::maps::queries::const_eval<'tcx>>::ensure\r\n  30: rustc::dep_graph::graph::DepGraph::in_ignore\r\n  31: rustc::util::ppaux::<impl core::fmt::Debug for rustc::ty::Predicate<'tcx>>::fmt\r\n  32: <rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx> as rustc::ty::layout::HasTyCtxt<'gcx>>::tcx\r\n  33: rustc::ty::maps::<impl rustc::ty::maps::queries::const_eval<'tcx>>::ensure\r\n  34: rustc::ty::maps::<impl rustc::ty::maps::queries::const_eval<'tcx>>::try_get\r\n  35: rustc::ty::maps::TyCtxtAt::const_eval\r\n  36: <rustc_typeck::collect::CollectItemTypesVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_item\r\n  37: <unknown>\r\n  38: rustc_typeck::check_crate\r\n  39: rustc_driver::profile::dump\r\n  40: rustc_driver::profile::dump\r\n  41: <rustc_driver::Compilation as core::fmt::Debug>::fmt\r\n  42: rustc_driver::driver::compile_input\r\n  43: rustc_driver::run_compiler\r\n  44: rustc_driver::profile::dump\r\n  45: _rust_maybe_catch_panic\r\n  46: <rustc_driver::pretty::UserIdentifiedItem as core::fmt::Debug>::fmt\r\n  47: <std::sync::condvar::Condvar as core::fmt::Debug>::fmt\r\n  48: std::sys::windows::thread::Thread::new\r\n  49: BaseThreadInitThunk\r\n\r\nerror: Could not compile `advanced_function`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\nProcess finished with exit code 101\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48838/timeline", "performed_via_github_app": null, "state_reason": "completed"}