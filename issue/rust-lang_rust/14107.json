{"url": "https://api.github.com/repos/rust-lang/rust/issues/14107", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/14107/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/14107/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/14107/events", "html_url": "https://github.com/rust-lang/rust/issues/14107", "id": 33256652, "node_id": "MDU6SXNzdWUzMzI1NjY1Mg==", "number": 14107, "title": "String searching is slow", "user": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-11T07:10:51Z", "updated_at": "2015-02-01T18:13:27Z", "closed_at": "2014-05-16T23:26:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The current implement of functions like `StrSlice.contains` are naive string searches, not using a more intelligent algorithm like Boyer-Moore (with a comment referring one to https://github.com/mozilla/rust/pull/1932).\n\nUnfortunately that means we're trounced when performing operations like that. e.g.\n\n``` rust\n// contains_string.rs\nextern crate test;\n\nfn main() {\n    let haystack = std::io::stdin().read_to_str().unwrap();\n\n    let needle = \"Anything whatsoever related to the Rust programming language: an open-source systems programming language from Mozilla, emphasizing safety, concurrency, and speed.\";\n\n    println!(\"{} {}\", haystack.len(), needle.len());\n    for _ in range(0, 1000) {\n        test::black_box(haystack.contains(needle))\n    }\n}\n```\n\n``` c\n// contains_string.c\n#include<string.h>\n#include<stdio.h>\n#include<unistd.h>\n#include<stdlib.h>\n\n// 16MB\n#define N (1 << 24)\n\nint main() {\n    char * haystack = calloc(N, 1);\n\n    read(0, haystack, N - 1);\n\n    const char * needle = \"Anything whatsoever related to the Rust programming language: an open-source systems programming language from Mozilla, emphasizing safety, concurrency, and speed.\";\n\n    printf(\"%d %d\", strlen(haystack), strlen(needle));\n    int count = 0;\n    for (int i = 0; i < 1000; i ++) {\n        haystack[N - 1] = 0;\n        count += strstr(haystack, needle) == NULL;\n    }\n\n    return count;\n}\n```\n\n``` python\n// contains_string.py\nimport sys\n\nhaystack = sys.stdin.read()\nneedle = \"Anything whatsoever related to the Rust programming language: an open-source systems programming language from Mozilla, emphasizing safety, concurrency, and speed.\"\n\nprint(len(haystack), len(needle))\nfor _ in range(0, 1000):\n    needle in haystack\n```\n\n```\n$ wget http://www.gutenberg.org/cache/epub/1342/pg1342.txt # pride and prejudice (700 kb)\n[...snip...]\n$ rustc -O contains_string.rs\n\n$ gcc -O contains_string.c -o contains_string_c -std=gnu11\n\n$ time ./contains_string < pg1342.txt \n717569 163\n\nreal    0m1.041s\nuser    0m1.036s\nsys     0m0.000s\n\n$ time ./contains_string_c < pg1342.txt \n717569 163\nreal    0m0.064s\nuser    0m0.056s\nsys     0m0.004s\n\n$ time python ./contains_string.py < pg1342.txt \n(717569, 163)\n\nreal    0m0.155s\nuser    0m0.152s\nsys     0m0.000s\n```\n### General notes:\n- glibc's `strstr`: [strstr.c](https://github.com/lattera/glibc/blob/master/string/strstr.c) and [str-two-way.h](https://github.com/lattera/glibc/blob/master/string/str-two-way.h)\n- A cursory search found [this article](http://volnitsky.com/project/str_search/) which might be interesting to experiment with.\n- [This](https://github.com/RaphaelJ/fast_strstr/) came up on [reddit (discussion)](http://www.reddit.com/r/programming/comments/257u0n/a_fast_and_simple_substring_search_algorithm/)\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/14107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/14107/timeline", "performed_via_github_app": null, "state_reason": "completed"}