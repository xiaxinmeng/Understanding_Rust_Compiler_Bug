{"url": "https://api.github.com/repos/rust-lang/rust/issues/93611", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93611/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93611/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93611/events", "html_url": "https://github.com/rust-lang/rust/issues/93611", "id": 1122850242, "node_id": "I_kwDOAAsO6M5C7VXC", "number": 93611, "title": "mutually exclusive match arms with `if` cases are not recognized to be covering", "user": {"login": "drahnr", "id": 667047, "node_id": "MDQ6VXNlcjY2NzA0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/667047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drahnr", "html_url": "https://github.com/drahnr", "followers_url": "https://api.github.com/users/drahnr/followers", "following_url": "https://api.github.com/users/drahnr/following{/other_user}", "gists_url": "https://api.github.com/users/drahnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/drahnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drahnr/subscriptions", "organizations_url": "https://api.github.com/users/drahnr/orgs", "repos_url": "https://api.github.com/users/drahnr/repos", "events_url": "https://api.github.com/users/drahnr/events{/privacy}", "received_events_url": "https://api.github.com/users/drahnr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-02-03T09:33:08Z", "updated_at": "2023-04-05T17:29:49Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n\r\nenum Foo {\r\n    A(bool),\r\n    B,\r\n    C,\r\n}\r\n\r\n\r\nfn main() {\r\n\r\n    let a = Foo::A(false);\r\n    match a {\r\n        Foo::A(x) if x => {},\r\n        Foo::A(x) if !x => {},\r\n        Foo::B => {},\r\n        Foo::C => {},\r\n    }\r\n}\r\n```\r\n\r\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=b70f6933b22baa139e9ad679a7559935\r\n\r\nI expected to see this happen: Compilation without an error\r\n\r\nInstead, this happened: Rustc wants a catch-all for `Foo::A(_)`, which is not required since the other match arms are covering.\r\n\r\n```\r\nCompiling playground v0.0.1 (/playground)\r\nerror[[E0004]](https://doc.rust-lang.org/stable/error-index.html#E0004): non-exhaustive patterns: `A(_)` not covered\r\n  [--> src/main.rs:12:11\r\n](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=b70f6933b22baa139e9ad679a7559935#)   |\r\n2  | / enum Foo {\r\n3  | |     A(bool),\r\n   | |     - not covered\r\n4  | |     B,\r\n5  | |     C,\r\n6  | | }\r\n   | |_- `Foo` defined here\r\n...\r\n12 |       match a {\r\n   |             ^ pattern `A(_)` not covered\r\n   |\r\n   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\r\n   = note: the matched value is of type `Foo`\r\n\r\nFor more information about this error, try `rustc --explain E0004`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\n### Meta\r\n\r\n\r\n`rustc --version --verbose`:\r\n```\r\n1.58.1\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93611/timeline", "performed_via_github_app": null, "state_reason": null}