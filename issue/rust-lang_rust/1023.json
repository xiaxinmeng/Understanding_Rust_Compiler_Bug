{"url": "https://api.github.com/repos/rust-lang/rust/issues/1023", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/1023/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/1023/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/1023/events", "html_url": "https://github.com/rust-lang/rust/issues/1023", "id": 1875255, "node_id": "MDU6SXNzdWUxODc1MjU1", "number": 1023, "title": "Implicit return double-frees in some situations", "user": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-10-11T14:30:10Z", "updated_at": "2011-10-11T16:04:20Z", "closed_at": "2011-10-11T16:04:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The function below (in trans.rs) works fine as long as the last clause contains `ret bcx;`. If this is changed to simply `bcx`, the compiler dies on a double free when compiling the standard lib. The form of the other clauses doesn't matter -- they work with or without the `ret`.\n\n```\nfn drop_ty_immediate(bcx: @block_ctxt, v: ValueRef, t: ty::t) -> @block_ctxt {\n    alt ty::struct(bcx_tcx(bcx), t) {\n      ty::ty_uniq(_) | ty::ty_vec(_) | ty::ty_str. {\n        ret free_ty(bcx, v, t);\n      }\n      ty::ty_box(_) { ret decr_refcnt_maybe_free(bcx, v, t); }\n      ty::ty_ptr(_) { bcx }\n    }\n}\n```\n\nI haven't found a smaller program that produces the same issue yet.\n", "closed_by": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/1023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/1023/timeline", "performed_via_github_app": null, "state_reason": "completed"}