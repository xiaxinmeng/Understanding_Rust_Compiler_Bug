{"url": "https://api.github.com/repos/rust-lang/rust/issues/85948", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85948/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85948/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85948/events", "html_url": "https://github.com/rust-lang/rust/issues/85948", "id": 910000515, "node_id": "MDU6SXNzdWU5MTAwMDA1MTU=", "number": 85948, "title": "Linking MSP430 Code fails with `unrecognized option '-znoexecstack'`", "user": {"login": "cr1901", "id": 6418027, "node_id": "MDQ6VXNlcjY0MTgwMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/6418027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cr1901", "html_url": "https://github.com/cr1901", "followers_url": "https://api.github.com/users/cr1901/followers", "following_url": "https://api.github.com/users/cr1901/following{/other_user}", "gists_url": "https://api.github.com/users/cr1901/gists{/gist_id}", "starred_url": "https://api.github.com/users/cr1901/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cr1901/subscriptions", "organizations_url": "https://api.github.com/users/cr1901/orgs", "repos_url": "https://api.github.com/users/cr1901/repos", "events_url": "https://api.github.com/users/cr1901/events{/privacy}", "received_events_url": "https://api.github.com/users/cr1901/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2413861294, "node_id": "MDU6TGFiZWwyNDEzODYxMjk0", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-untriaged", "name": "regression-untriaged", "color": "e4008a", "default": false, "description": "Untriaged performance or correctness regression."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-06-03T01:07:11Z", "updated_at": "2021-06-05T21:09:59Z", "closed_at": "2021-06-05T21:09:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## `cargo-bisect-rustc` Output\r\n\r\nsearched nightlies: from nightly-2021-04-19 to nightly-2021-06-01\r\nregressed nightly: nightly-2021-05-23\r\nsearched commits: from https://github.com/rust-lang/rust/commit/5dc8789e300930751a78996da0fa906be5a344a2 to https://github.com/rust-lang/rust/commit/e4ca1662f255db774dcd16ed9c3776bf25ac8361\r\nregressed commit: https://github.com/rust-lang/rust/commit/21e1cd9b95854bec31a4d05992561ef47c0c8b07\r\n\r\n<details>\r\n<summary>bisected with <a href='https://github.com/rust-lang/cargo-bisect-rustc'>cargo-bisect-rustc</a> v0.6.0</summary>\r\n\r\n\r\nHost triple: x86_64-unknown-linux-gnu\r\nReproduce with:\r\n```bash\r\ncargo bisect-rustc --preserve-target --preserve --start=2021-04-19 --end=2021-06-01 --with-src -v\r\n```\r\n</details>\r\n\r\n## Instructions\r\n1. Make sure `cargo-bisect-rustc`, and optionally `just` are installed.\r\n2. `git clone https://github.com/cr1901/msp430-size`. Use commit `51af8f8` specifically.\r\n3. Invoke `cargo-bisect-rustc --script=./test-noexec.sh --preserve-target --preserve --start=2021-04-19 --end=2021-06-01 --with-src -v`. The bisector will use `test-noexec.sh` to look for whether compiling msp430 code succeeds or fails.\r\n\r\n## Error\r\nOn recent nightlies, msp430 linking using Rust will fail with something like this:\r\n\r\n```\r\nCompiling take-api v0.1.0 (/home/william/Projects/embedded/msp430/msp430-size/take-api)error: linking with `msp430-elf-gcc` failed: exit status: 1\r\n  |\r\n  = note: \"msp430-elf-gcc\" \"-Wl,-znoexecstack\" \"-Wl,--as-needed\" \"-L\" \"/home/william/.rustup/toolchains/bisector-nightly-2021-05-23-x86_64-unknown-linux-gnu/lib/rustlib/msp430-none-elf/lib\" \"/home/william/Projects/embedded/msp430/msp430-size/target-bisector-nightly-2021-05-23-x86_64-unknown-linux-gnu/msp430-none-elf/release/examples/min-cda63f9889c5937a.min.4jvsmr96-cgu.0.rcgu.o\" \"-o\" \"/home/william/Projects/embedded/msp430/msp430-size/target-bisector-nightly-2021-05-23-x86_64-unknown-linux-gnu/msp430-none-elf/release/examples/min-cda63f9889c5937a\" \"-Wl,--gc-sections\" \"-no-pie\" \"-nodefaultlibs\" \"-L\" \"/home/william/Projects/embedded/msp430/msp430-size/target-bisector-nightly-2021-05-23-x86_64-unknown-linux-gnu/msp430-none-elf/release/deps\" \"-L\" \"/home/william/Projects/embedded/msp430/msp430-size/target-bisector-nightly-2021-05-23-x86_64-unknown-linux-gnu/release/deps\" \"-L\" \"/home/william/Projects/embedded/msp430/msp430-size/target-bisector-nightly-2021-05-23-x86_64-unknown-linux-gnu/msp430-none-elf/release/build/msp430-rt-adad60a0e1cd156f/out\" \"-L\" \"/home/william/Projects/embedded/msp430/msp430-size/target-bisector-nightly-2021-05-23-x86_64-unknown-linux-gnu/msp430-none-elf/release/build/msp430g2553-e7917708540bbd5f/out\" \"-L\" \"/home/william/.rustup/toolchains/bisector-nightly-2021-05-23-x86_64-unknown-linux-gnu/lib/rustlib/msp430-none-elf/lib\" \"-Wl,-Bstatic\" \"/tmp/rustcGX8Ln9/libmsp430_rt-734159736d6268eb.rlib\" \"-Wl,--start-group\" \"-Wl,--end-group\" \"/home/william/Projects/embedded/msp430/msp430-size/target-bisector-nightly-2021-05-23-x86_64-unknown-linux-gnu/msp430-none-elf/release/deps/libcompiler_builtins-73a9b2f3ac812575.rlib\" \"-Tlink.x\" \"-nostartfiles\" \"-mcpu=msp430\" \"-lmul_none\" \"-lgcc\" \"-Wl,-Bdynamic\"\r\n  = note: /home/william/.local/bin/../lib/gcc/msp430-elf/9.2.0/../../../../msp430-elf/bin/ld: unrecognized option '-znoexecstack'\r\n          /home/william/.local/bin/../lib/gcc/msp430-elf/9.2.0/../../../../msp430-elf/bin/ld: use the --help option for usage information\r\n          collect2: error: ld returned 1 exit status\r\n\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `take-api`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nWhen #85531 was merged, the default value for `linker_is_gnu` option [changed](https://github.com/rust-lang/rust/pull/85531/files#diff-aa810a3be0834da891b171a8b04b09d0d3bbb76ac27c757cd232235099e062d2R1310) from `false` to `true`. msp430 appears to have [not been changed](https://github.com/rust-lang/rust/blob/master/compiler/rustc_target/src/spec/msp430_none_elf.rs#L10-L57) by #85531, so `linker_is_gnu` is _now_ set for msp430. If `linker_is_gnu` is set, Rust unconditionally [adds](https://github.com/rust-lang/rust/blob/master/compiler/rustc_codegen_ssa/src/back/linker.rs#L691) `-znoexecstack` to the linker options, which msp430 doesn't support. But technically, the msp430 backend _does_ use the GNU linker.\r\n\r\nThis is a bit of a bikeshed, but: I could set `linker_is_gnu` back to `false` with a comment, or perhaps [special case](https://github.com/rust-lang/rust/blob/master/compiler/rustc_codegen_ssa/src/back/linker.rs#L691) the logic to add the `-znoexecstack` option? Does `linker_is_gnu` mean only \"uses the GNU linker\", or does it mean \"uses the GNU linker _plus_ specific options\"? Thus, I'm opening an issue for possible feedback before fixing.\r\n\r\n## Other Context\r\n### Inline contents of `test_noexec.sh`\r\n```\r\n#!/bin/sh\r\ncargo build --manifest-path=take-api/Cargo.toml --release --target=msp430-none-elf -Z build-std=core --example min\r\n```\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85948/timeline", "performed_via_github_app": null, "state_reason": "completed"}