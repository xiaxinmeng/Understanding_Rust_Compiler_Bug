{"url": "https://api.github.com/repos/rust-lang/rust/issues/45011", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45011/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45011/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45011/events", "html_url": "https://github.com/rust-lang/rust/issues/45011", "id": 262606128, "node_id": "MDU6SXNzdWUyNjI2MDYxMjg=", "number": 45011, "title": "ICE: Broken MIR in NodeId when inferring SmallVec type", "user": {"login": "c0gent", "id": 2916797, "node_id": "MDQ6VXNlcjI5MTY3OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/2916797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c0gent", "html_url": "https://github.com/c0gent", "followers_url": "https://api.github.com/users/c0gent/followers", "following_url": "https://api.github.com/users/c0gent/following{/other_user}", "gists_url": "https://api.github.com/users/c0gent/gists{/gist_id}", "starred_url": "https://api.github.com/users/c0gent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c0gent/subscriptions", "organizations_url": "https://api.github.com/users/c0gent/orgs", "repos_url": "https://api.github.com/users/c0gent/repos", "events_url": "https://api.github.com/users/c0gent/events{/privacy}", "received_events_url": "https://api.github.com/users/c0gent/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-03T22:08:16Z", "updated_at": "2023-03-20T15:32:29Z", "closed_at": "2023-03-20T15:32:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Apologies for the non-simplified example but basically asking the compiler to infer the type of the contents of the `SmallVec` (`formats`) causes an ICE. \r\n\r\n```\r\n    pub fn formats(&self, surface: &Surface) -> SmallVec<[::SurfaceFormatKhr; 64]> {\r\n        let mut format_count = 0u32;\r\n        let mut formats = SmallVec::new();\r\n        unsafe {\r\n            self.instance.proc_addr_loader().khr_surface.vkGetPhysicalDeviceSurfaceFormatsKHR(self.handle(),\r\n                surface.handle(), &mut format_count, ptr::null_mut());\r\n            assert!(format_count as usize <= formats.inline_size());\r\n            formats.set_len(format_count as usize);\r\n            if format_count != 0 {\r\n                self.instance.proc_addr_loader().khr_surface.vkGetPhysicalDeviceSurfaceFormatsKHR(self.handle(),\r\n                    surface.handle(), &mut format_count, formats.as_mut_ptr() as *mut vks::VkSurfaceFormatKHR);\r\n            }\r\n        }\r\n        formats\r\n    }\r\n```\r\n\r\nAnnotating the type (e.g. `let mut formats: SmallVec<[::SurfaceFormatKhr; 64]> = SmallVec::new();`) avoids the ICE. Using a `Vec` likewise averts an ICE.\r\n\r\n\r\n### Full Error:\r\n```\r\nerror: internal compiler error: broken MIR in NodeId(1813) (Terminator { source_info: SourceInfo { span: src\\physical_device.rs:86:58: 86:65, scope: scope6 }, kind: _51 = const bitflags_::<unnamed>::ops::DerefMut::deref_mut(_52) -> [return: bb18, unwind: bb4] }): call dest mismatch (&mut [vks_::khr_surface::VkSurfaceFormatKHR] <- &mut [_]): Sorts(ExpectedFound { expected: vks_::khr_surface::VkSurfaceFormatKHR, found: structs::SurfaceFormatKhr })\r\n  --> src\\physical_device.rs:86:58\r\n   |\r\n86 |                     surface.handle(), &mut format_count, formats.as_mut_ptr() as *mut vks::VkSurfaceFormatKHR);\r\n   |                                                          ^^^^^^^\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.22.0-nightly (185cc5f26 2017-10-02) running on x86_64-pc-windows-msvc\r\n\r\nnote: run with `RUST_BACKTRACE=1` for a backtrace\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src\\librustc_errors\\lib.rs:439:8\r\nstack backtrace:\r\n   0: _rdl_shrink_in_place\r\n   1: std::panicking::Location::column\r\n   2: std::panicking::Location::column\r\n   3: std::panicking::rust_panic_with_hook\r\n   4: <unknown>\r\n   5: <unknown>\r\n   6: <rustc_mir::transform::type_check::TypeVerifier<'a, 'b, 'gcx, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_mir\r\n   7: <rustc_mir::transform::type_check::TypeckMir as rustc::mir::transform::MirPass>::run_pass\r\n   8: <rustc_mir::transform::mir_keys::GatherCtors<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_variant_data\r\n   9: <rustc_mir::transform::mir_keys::GatherCtors<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_variant_data\r\n  10: rustc::ty::maps::<impl rustc::ty::maps::queries::mir_const_qualif<'tcx>>::force\r\n  11: rustc::dep_graph::graph::DepGraph::in_ignore\r\n  12: rustc::ty::maps::<impl rustc::ty::maps::queries::mir_const<'tcx>>::try_get\r\n  13: rustc::ty::maps::TyCtxtAt::mir_const\r\n  14: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::mir_const\r\n  15: <rustc_mir::transform::check_unsafety::UnusedUnsafeVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_block\r\n  16: rustc::dep_graph::graph::DepGraph::in_ignore\r\n  17: rustc::ty::maps::<impl rustc::ty::maps::queries::unsafety_violations<'tcx>>::force\r\n  18: <rustc_mir::transform::mir_keys::GatherCtors<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_variant_data\r\n  19: rustc::ty::maps::<impl rustc::ty::maps::queries::mir_const<'tcx>>::force\r\n  20: rustc::dep_graph::graph::DepGraph::in_ignore\r\n  21: rustc::ty::maps::<impl rustc::ty::maps::queries::mir_validated<'tcx>>::try_get\r\n  22: rustc::ty::maps::TyCtxtAt::mir_validated\r\n  23: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::mir_validated\r\n  24: rustc_borrowck::borrowck::provide\r\n  25: rustc::ty::maps::<impl rustc::ty::maps::queries::coherent_trait<'tcx>>::force\r\n  26: rustc::dep_graph::graph::DepGraph::in_ignore\r\n  27: rustc::ty::maps::<impl rustc::ty::maps::queries::borrowck<'tcx>>::try_get\r\n  28: rustc::ty::maps::TyCtxtAt::borrowck\r\n  29: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::borrowck\r\n  30: rustc_borrowck::borrowck::check_crate\r\n  31: <rustc_driver::derive_registrar::Finder as rustc::hir::itemlikevisit::ItemLikeVisitor<'v>>::visit_trait_item\r\n  32: rustc_driver::driver::compile_input\r\n  33: rustc_driver::run_compiler\r\n  34: <unknown>\r\n  35: _rust_maybe_catch_panic\r\n  36: <rustc_driver::derive_registrar::Finder as rustc::hir::itemlikevisit::ItemLikeVisitor<'v>>::visit_trait_item\r\n  37: std::sys::imp::thread::Thread::new\r\n  38: BaseThreadInitThunk\r\n\r\nerror: Could not compile `voodoo`.\r\n```\r\n\r\n### rustc version\r\n```\r\nrustc 1.22.0-nightly (185cc5f26 2017-10-02)\r\nbinary: rustc\r\ncommit-hash: 185cc5f26d2c8a794189b028b43f6a3b8fc586db\r\ncommit-date: 2017-10-02\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.22.0-nightly\r\nLLVM version: 4.0\r\n```", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45011/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}