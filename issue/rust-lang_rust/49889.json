{"url": "https://api.github.com/repos/rust-lang/rust/issues/49889", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49889/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49889/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49889/events", "html_url": "https://github.com/rust-lang/rust/issues/49889", "id": 313500145, "node_id": "MDU6SXNzdWUzMTM1MDAxNDU=", "number": 49889, "title": "rustc panics on compile-fail/issue-36638", "user": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-11T21:47:56Z", "updated_at": "2018-04-27T22:00:14Z", "closed_at": "2018-04-27T22:00:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As noted in https://github.com/rust-lang/rust/pull/49826#issuecomment-380591115, currently rustc is panicking on `compile-fail/issue-36638`.  This only passed CI because main-thread panics are not being detected as ICE (to be fixed by #49826), and compiletest doesn't notice non-ICE panics (#49888).\r\n\r\nIt's fine with `rustc 1.27.0-nightly (0b72d48f8 2018-04-10)`, so I was able to bisect this to the recent commit abfc8c267c155443491dafc09f94aa956c0c3830 from #49695 -- cc @michaelwoerister.\r\n\r\n```\r\n$ RUST_BACKTRACE=1 rustc +dev1 -Z continue-parse-after-error src/test/compile-fail/issue-36638.rs\r\nerror: expected identifier, found keyword `Self`\r\n  --> src/test/compile-fail/issue-36638.rs:13:12\r\n   |\r\n13 | struct Foo<Self>(Self);\r\n   |            ^^^^ expected identifier, found keyword\r\n\r\nerror: expected identifier, found keyword `Self`\r\n  --> src/test/compile-fail/issue-36638.rs:16:11\r\n   |\r\n16 | trait Bar<Self> {}\r\n   |           ^^^^ expected identifier, found keyword\r\n\r\nthread 'main' panicked at 'assertion failed: `(left == right)`\r\n  left: `1`,\r\n right: `0`', librustc/ty/sty.rs:889:13\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n   1: std::sys_common::backtrace::print\r\n   2: std::panicking::default_hook::{{closure}}\r\n   3: std::panicking::default_hook\r\n   4: core::ops::function::Fn::call\r\n   5: std::panicking::rust_panic_with_hook\r\n   6: std::panicking::begin_panic_fmt\r\n   7: rustc::ty::sty::ParamTy::is_self\r\n   8: rustc::ty::flags::FlagComputation::for_sty\r\n   9: rustc::ty::context::CtxtInterners::intern_ty\r\n  10: rustc::ty::subst::<impl rustc::ty::Slice<rustc::ty::subst::Kind<'tcx>>>::fill_item\r\n  11: rustc::ty::subst::<impl rustc::ty::Slice<rustc::ty::subst::Kind<'tcx>>>::identity_for_item\r\n  12: rustc_typeck::collect::predicates_of\r\n  13: rustc::ty::maps::<impl rustc::ty::maps::queries::predicates_of<'tcx>>::compute_result\r\n  14: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  15: rustc::ty::context::tls::with_related_context\r\n  16: rustc::ty::maps::<impl rustc::ty::maps::queries::predicates_of<'tcx>>::force_with_lock\r\n  17: rustc::ty::maps::<impl rustc::ty::maps::queries::predicates_of<'tcx>>::try_get\r\n  18: rustc::ty::maps::TyCtxtAt::predicates_of\r\n  19: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::predicates_of\r\n  20: <rustc_typeck::collect::CollectItemTypesVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_item\r\n  21: rustc::hir::Crate::visit_all_item_likes\r\n  22: rustc::util::common::time\r\n  23: rustc_typeck::check_crate\r\n  24: rustc::ty::context::tls::enter_context\r\n  25: <std::thread::local::LocalKey<T>>::with\r\n  26: rustc::ty::context::TyCtxt::create_and_enter\r\n  27: rustc_driver::driver::compile_input\r\n  28: rustc_driver::run_compiler_impl\r\n  29: syntax::with_globals\r\n  30: rustc_driver::run\r\n  31: rustc_driver::main\r\n  32: std::rt::lang_start::{{closure}}\r\n  33: std::panicking::try::do_call\r\n  34: __rust_maybe_catch_panic\r\n  35: std::rt::lang_start_internal\r\n  36: main\r\n  37: __libc_start_main\r\n  38: _start\r\nerror: aborting due to 2 previous errors\r\n\r\n```\r\n\r\nNote that the test is dealing with improper usage of `Self`, and the assertion in question is also dealing with self:\r\nhttps://github.com/rust-lang/rust/blob/abfc8c267c155443491dafc09f94aa956c0c3830/src/librustc/ty/sty.rs#L887-L894", "closed_by": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49889/timeline", "performed_via_github_app": null, "state_reason": "completed"}