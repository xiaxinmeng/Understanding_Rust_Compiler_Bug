{"url": "https://api.github.com/repos/rust-lang/rust/issues/84073", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84073/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84073/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84073/events", "html_url": "https://github.com/rust-lang/rust/issues/84073", "id": 855155981, "node_id": "MDU6SXNzdWU4NTUxNTU5ODE=", "number": 84073, "title": "ICE on Current Stable", "user": {"login": "AldaronLau", "id": 8846235, "node_id": "MDQ6VXNlcjg4NDYyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/8846235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AldaronLau", "html_url": "https://github.com/AldaronLau", "followers_url": "https://api.github.com/users/AldaronLau/followers", "following_url": "https://api.github.com/users/AldaronLau/following{/other_user}", "gists_url": "https://api.github.com/users/AldaronLau/gists{/gist_id}", "starred_url": "https://api.github.com/users/AldaronLau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AldaronLau/subscriptions", "organizations_url": "https://api.github.com/users/AldaronLau/orgs", "repos_url": "https://api.github.com/users/AldaronLau/repos", "events_url": "https://api.github.com/users/AldaronLau/events{/privacy}", "received_events_url": "https://api.github.com/users/AldaronLau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-04-10T21:07:59Z", "updated_at": "2022-03-30T07:45:41Z", "closed_at": "2022-03-30T07:45:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Interestingly, this error only happens when building a binary, and not when building a library.\r\n\r\n### Code\r\n\r\n```Rust\r\npub struct RaceFuture<T, F, S, G, U>\r\n    where F: StatefulFuture<Option<T>, S>,\r\n          G: Future<Output = Option<U>>,\r\n{\r\n    inner: F,\r\n    future: G,\r\n    event: fn(&mut S, U) -> T,\r\n}\r\n\r\nimpl<T, F, S, G, U> StatefulFuture<Option<T>, S> for RaceFuture<T, F, S, G, U>\r\n    where F: StatefulFuture<Option<T>, S>,\r\n          G: Future<Output = Option<U>>,\r\n{\r\n    fn poll(&mut self, cx: &mut Context<'_>, state: &mut S) -> Poll<Option<T>> {\r\n        Poll::Pending // FIXME\r\n    }\r\n}\r\n\r\npub trait StatefulFuture<T, S> {\r\n    fn poll(&mut self, cx: &mut Context<'_>, state: &mut S) -> Poll<T>;\r\n}\r\n\r\npub struct Never<T, S>(PhantomData<(T, S)>);\r\n\r\nimpl<T, S> StatefulFuture<T, S> for Never<T, S> {\r\n    fn poll(&mut self, cx: &mut Context<'_>, state: &mut S) -> Poll<T> {\r\n        Poll::Pending\r\n    }\r\n}\r\n\r\n/// Race builder.  Add tasks by calling `when()`.\r\npub struct RaceBuilder<T, F, S>\r\n    where F: StatefulFuture<Option<T>, S>\r\n{\r\n    future: F,\r\n    _phantom: PhantomData<(S, T)>,\r\n}\r\n\r\nimpl<T, F, S> RaceBuilder<T, F, S>\r\n    where F: StatefulFuture<Option<T>, S>\r\n{\r\n    pub fn when<U, G>(self, future: G, event: fn(&mut S, U) -> T)\r\n            -> RaceBuilder<T, RaceFuture<T, F, S, G, U>, S>\r\n        where G: Future<Output = Option<U>>,\r\n    {\r\n        RaceBuilder {\r\n            future: RaceFuture {\r\n                inner: self.future, future, event\r\n            },\r\n            _phantom: PhantomData,\r\n        }\r\n    }\r\n}\r\n\r\n/// A future that returns a closure for the first completed future.\r\n#[derive(Debug)]\r\npub struct Race<'a, T, S, R, F>\r\n    where R: Fn(RaceBuilder<T, Never<T, S>, S>, &mut S) -> RaceBuilder<T, F, S>,\r\n          F: StatefulFuture<Option<T>, S>,\r\n{\r\n    state: &'a mut S,\r\n    race: R,\r\n    _phantom: PhantomData<(T, F)>,\r\n}\r\n\r\nimpl<'a, T, S, R, F> Race<'a, T, S, R, F>\r\n    where R: Fn(RaceBuilder<T, Never<T, S>, S>, &mut S) -> RaceBuilder<T, F, S>,\r\n          F: StatefulFuture<Option<T>, S>,\r\n{\r\n    pub fn new(state: &'a mut S, race: R) -> Self {\r\n        Self { state, race, _phantom: PhantomData }\r\n    }\r\n}\r\n\r\nimpl<T, S, R, F> Future for Race<'_, T, S, R, F>\r\n    where R: Fn(RaceBuilder<T, Never<T, S>, S>, &mut S) -> RaceBuilder<T, F, S>,\r\n          F: StatefulFuture<Option<T>, S>,\r\n{\r\n    type Output = T;\r\n    \r\n    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<T> {\r\n        Poll::Pending // FIXME\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.51.0 (2fd73fabe 2021-03-23)\r\nbinary: rustc\r\ncommit-hash: 2fd73fabe469357a12c2c974c140f67e7cdd76d0\r\ncommit-date: 2021-03-23\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.51.0\r\nLLVM version: 11.0.1\r\n```\r\n\r\nAlso happens on nightly:\r\n\r\n`rustc +nightly --version --verbose`\r\n```\r\nrustc 1.53.0-nightly (07e0e2ec2 2021-03-24)\r\nbinary: rustc\r\ncommit-hash: 07e0e2ec268c140e607e1ac7f49f145612d0f597\r\ncommit-date: 2021-03-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.53.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_trait_selection/src/traits/select/mod.rs:1818:17: Impl DefId(51:102 ~ pasts[c5c1]::race::{impl#1}) was matchable against Obligation(predicate=Binder(TraitPredicate(<pasts::race::Never<_, State> as pasts::race::StatefulFuture<std::option::Option<_>, State>>)), depth=0) but now is not\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597/library/std/src/panic.rs:59:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (07e0e2ec2 2021-03-24) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `run`\r\n#1 [mir_built] building MIR for `run`\r\nend of query stack\r\nerror: aborting due to previous error\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_trait_selection/src/traits/select/mod.rs:1793:17: Impl DefId(51:74 ~ pasts[9c70]::race::{impl#1}) was matchable against Obligation(predicate=Binder(TraitPredicate(<pasts::race::Never<_, State> as pasts::race::StatefulFuture<std::option::Option<_>, State>>)), depth=0) but now is not\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/2fd73fabe469357a12c2c974c140f67e7cdd76d0/library/std/src/panic.rs:59:5\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: std::panic::panic_any\r\n   2: rustc_errors::HandlerInner::bug\r\n   3: rustc_errors::Handler::bug\r\n   4: rustc_middle::ty::context::tls::with_opt\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: rustc_infer::infer::InferCtxt::commit_unconditionally\r\n   8: rustc_trait_selection::traits::select::confirmation::<impl rustc_trait_selection::traits::select::SelectionContext>::confirm_candidate\r\n   9: rustc_trait_selection::traits::select::SelectionContext::select\r\n  10: rustc_trait_selection::traits::fulfill::FulfillProcessor::process_trait_obligation\r\n  11: rustc_trait_selection::traits::fulfill::FulfillProcessor::progress_changed_obligations\r\n  12: <rustc_trait_selection::traits::fulfill::FulfillmentContext as rustc_infer::traits::engine::TraitEngine>::select_where_possible\r\n  13: rustc_typeck::check::fn_ctxt::_impl::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::resolve_vars_with_obligations\r\n  14: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_method_argument_types\r\n  15: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  16: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  17: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  18: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  19: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  20: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  21: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  22: rustc_typeck::check::check::check_fn\r\n  23: rustc_typeck::check::closure::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_closure\r\n  24: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  25: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  26: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  27: rustc_typeck::check::callee::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::confirm_builtin_call\r\n  28: rustc_typeck::check::callee::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n  29: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  30: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  31: rustc_typeck::check::_match::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::demand_scrutinee_type\r\n  32: rustc_typeck::check::_match::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_match\r\n  33: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  34: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  35: rustc_typeck::check::_match::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::demand_scrutinee_type\r\n  36: rustc_typeck::check::_match::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_match\r\n  37: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  38: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  39: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  40: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  41: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  42: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  43: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  44: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  45: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  46: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  47: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  48: rustc_typeck::check::check::check_fn\r\n  49: rustc_typeck::check::closure::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_closure\r\n  50: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  51: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  52: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  53: rustc_typeck::check::callee::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::confirm_builtin_call\r\n  54: rustc_typeck::check::callee::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n  55: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  56: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  57: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  58: rustc_typeck::check::check::check_fn\r\n  59: rustc_infer::infer::InferCtxtBuilder::enter\r\n  60: rustc_typeck::check::typeck\r\n  61: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  62: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  63: rustc_data_structures::stack::ensure_sufficient_stack\r\n  64: rustc_query_system::query::plumbing::force_query_with_job\r\n  65: rustc_query_system::query::plumbing::get_query_impl\r\n  66: rustc_middle::ty::context::TyCtxt::typeck_opt_const_arg\r\n  67: rustc_infer::infer::InferCtxtBuilder::enter\r\n  68: rustc_mir_build::build::mir_built\r\n  69: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::mir_built>::compute\r\n  70: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  71: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  72: rustc_data_structures::stack::ensure_sufficient_stack\r\n  73: rustc_query_system::query::plumbing::force_query_with_job\r\n  74: rustc_query_system::query::plumbing::get_query_impl\r\n  75: rustc_mir::transform::check_unsafety::unsafety_check_result\r\n  76: core::ops::function::FnOnce::call_once\r\n  77: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  78: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  79: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  80: rustc_data_structures::stack::ensure_sufficient_stack\r\n  81: rustc_query_system::query::plumbing::force_query_with_job\r\n  82: rustc_query_system::query::plumbing::force_query_impl\r\n  83: rustc_middle::dep_graph::dep_node::dep_kind::unsafety_check_result::force_from_dep_node\r\n  84: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_previous_green\r\n  85: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_previous_green\r\n  86: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_previous_green\r\n  87: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_green_and_read\r\n  88: rustc_data_structures::stack::ensure_sufficient_stack\r\n  89: rustc_query_system::query::plumbing::get_query_impl\r\n  90: rustc_typeck::collect::type_of::type_of\r\n  91: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::type_of>::compute\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.51.0 (2fd73fabe 2021-03-23) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `run`\r\n#1 [mir_built] building MIR for `run`\r\n#2 [unsafety_check_result] unsafety-checking `run`\r\n#3 [mir_borrowck] borrow-checking `run`\r\n#4 [type_of] computing type of `run::{opaque#0}`\r\n#5 [check_mod_item_types] checking item types in top-level module\r\n#6 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84073/timeline", "performed_via_github_app": null, "state_reason": "completed"}