{"url": "https://api.github.com/repos/rust-lang/rust/issues/70686", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70686/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70686/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70686/events", "html_url": "https://github.com/rust-lang/rust/issues/70686", "id": 592408995, "node_id": "MDU6SXNzdWU1OTI0MDg5OTU=", "number": 70686, "title": "Arc::drop creates a reference to partially dropped value", "user": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-02T07:11:35Z", "updated_at": "2020-04-04T14:44:24Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I remembered why I wanted to implement `Layout::for_value_raw` now...\r\n\r\nRelevant snippets:\r\n\r\n```rust\r\nstruct ArcInner<T: ?Sized> {\r\n    strong: atomic::AtomicUsize,\r\n    weak: atomic::AtomicUsize,\r\n    data: T,\r\n}\r\n\r\npub struct Arc<T: ?Sized> {\r\n    ptr: NonNull<ArcInner<T>>,\r\n    phantom: PhantomData<ArcInner<T>>,\r\n}\r\n\r\nimpl<T: ?Sized> Arc<T> {\r\n    fn inner(&self) -> &ArcInner<T> {\r\n        unsafe { self.ptr.as_ref() }\r\n    }\r\n\r\n    unsafe fn drop_slow(&mut self) {\r\n        ptr::drop_in_place(&mut self.ptr.as_mut().data);\r\n\r\n        if self.inner().weak.fetch_sub(1, Release) == 1 {\r\n            acquire!(self.inner().weak);\r\n            Global.dealloc(self.ptr.cast(), Layout::for_value(self.ptr.as_ref()))\r\n        }\r\n    }\r\n}\r\n\r\nunsafe impl<#[may_dangle] T: ?Sized> Drop for Arc<T> {\r\n    #[inline]\r\n    fn drop(&mut self) {\r\n        if self.inner().strong.fetch_sub(1, Release) != 1 {\r\n            return;\r\n        }\r\n\r\n        acquire!(self.inner().strong);\r\n\r\n        unsafe {\r\n            self.drop_slow();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nSpecifically, `Arc::drop_slow` (and `Weak::drop`) use `Layout::for_value(self.ptr.as_ref())`, which manifests `&ArcInner`.\r\n\r\nI don't _think_ this is UB (otherwise, a lot of `ptr::drop_in_place(&mut place)` would be broken), but this code can definitely be improved by using `Layout::for_value_raw`. This issue is to track that.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70686/timeline", "performed_via_github_app": null, "state_reason": null}