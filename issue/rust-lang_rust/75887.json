{"url": "https://api.github.com/repos/rust-lang/rust/issues/75887", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75887/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75887/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75887/events", "html_url": "https://github.com/rust-lang/rust/issues/75887", "id": 684858519, "node_id": "MDU6SXNzdWU2ODQ4NTg1MTk=", "number": 75887, "title": "Accepted convention for incurring dependencies on external files in macro expansion hurts reproducibility", "user": {"login": "pikajude", "id": 316117, "node_id": "MDQ6VXNlcjMxNjExNw==", "avatar_url": "https://avatars.githubusercontent.com/u/316117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pikajude", "html_url": "https://github.com/pikajude", "followers_url": "https://api.github.com/users/pikajude/followers", "following_url": "https://api.github.com/users/pikajude/following{/other_user}", "gists_url": "https://api.github.com/users/pikajude/gists{/gist_id}", "starred_url": "https://api.github.com/users/pikajude/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pikajude/subscriptions", "organizations_url": "https://api.github.com/users/pikajude/orgs", "repos_url": "https://api.github.com/users/pikajude/repos", "events_url": "https://api.github.com/users/pikajude/events{/privacy}", "received_events_url": "https://api.github.com/users/pikajude/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 952737937, "node_id": "MDU6TGFiZWw5NTI3Mzc5Mzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-NixOS", "name": "O-NixOS", "color": "6e6ec0", "default": false, "description": "Operating system: NixOS, https://nixos.org/"}, {"id": 1508600909, "node_id": "MDU6TGFiZWwxNTA4NjAwOTA5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-reproducibility", "name": "A-reproducibility", "color": "f7e101", "default": false, "description": "Area: Reproducible / Deterministic builds"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-24T17:58:55Z", "updated_at": "2020-08-24T18:26:47Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "According to this thread https://internals.rust-lang.org/t/pre-rfc-add-a-builtin-macro-to-indicate-build-dependency-to-file/9242/2 and a few other sources I found online, the common way to force a module with a proc-macro to be rebuilt based on external changes (for example, an HTML template) is to generate an expansion that uses `include_bytes!()` with the path to the file.\r\n\r\n[This function](https://github.com/rust-lang/rust/blob/master/src/librustc_span/lib.rs#L243-L247) in librustc_span adds the string content of every macro input to the resulting rmeta file, including macros that are then re-expanded, like [this one](https://github.com/djc/askama/blob/master/askama_shared/src/generator.rs#L141) in the askama-derive crate. That macro expansion becomes `include_bytes!(\"/absolute/path/to/source.html\");`, then the actual byte literal that contains the file contents.\r\n\r\nI am using the [Nix](https://nixos.org/) language/build system here and the [`cargo2nix` tool](https://github.com/tenx-tech/cargo2nix), which causes every crate to be built in a temporary directory (to maximize isolation from the rest of the system). If the tempdir names differ between two builds of a crate that otherwise logically yields identical code, the metadata hashes will differ. (Though I haven't tested it myself, I can imagine this also being a problem with a tool like `sccache` if two devs with different filepaths to some git checkout try to use the same build artifacts).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75887/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75887/timeline", "performed_via_github_app": null, "state_reason": null}