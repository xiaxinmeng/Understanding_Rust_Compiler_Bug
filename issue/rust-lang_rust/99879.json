{"url": "https://api.github.com/repos/rust-lang/rust/issues/99879", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99879/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99879/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99879/events", "html_url": "https://github.com/rust-lang/rust/issues/99879", "id": 1321615584, "node_id": "I_kwDOAAsO6M5OxkDg", "number": 99879, "title": "Failed to build json docs with `rustdoc -w json`", "user": {"login": "akriegman", "id": 19512174, "node_id": "MDQ6VXNlcjE5NTEyMTc0", "avatar_url": "https://avatars.githubusercontent.com/u/19512174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akriegman", "html_url": "https://github.com/akriegman", "followers_url": "https://api.github.com/users/akriegman/followers", "following_url": "https://api.github.com/users/akriegman/following{/other_user}", "gists_url": "https://api.github.com/users/akriegman/gists{/gist_id}", "starred_url": "https://api.github.com/users/akriegman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akriegman/subscriptions", "organizations_url": "https://api.github.com/users/akriegman/orgs", "repos_url": "https://api.github.com/users/akriegman/repos", "events_url": "https://api.github.com/users/akriegman/events{/privacy}", "received_events_url": "https://api.github.com/users/akriegman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2682491374, "node_id": "MDU6TGFiZWwyNjgyNDkxMzc0", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-rustdoc-json", "name": "A-rustdoc-json", "color": "f7e101", "default": false, "description": "Area: Rustdoc JSON backend"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-07-29T00:20:28Z", "updated_at": "2022-08-19T13:18:38Z", "closed_at": "2022-08-19T13:18:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nI'm trying to use the rustdoc `-w json` option, but it crashes with a difficult to understand error, and suggests reporting it here.\r\n\r\n### Code\r\n\r\n```bash\r\n$ RUSTDOCFLAGS='-w json -Z unstable-options' cargo +nightly doc\r\n```\r\n\r\nCargo.toml:\r\n```\r\n...\r\n[dependencies]\r\nanyhow = \"1.0.58\"\r\nethers = { version = \"0.14.0\", features = [\"ws\"] }\r\nfutures = \"0.3.21\"\r\ntap = \"1.0.1\"\r\ntokio = { version = \"1.20.1\", features = [\"full\"] }\r\ntracing-subscriber = \"0.3.15\"\r\nwarp = \"0.3.2\"\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.61.0 (fe5b13d68 2022-05-18)\r\nbinary: rustc\r\ncommit-hash: fe5b13d681f25ee6474be29d748c65adcd91f69e\r\ncommit-date: 2022-05-18\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.61.0\r\nLLVM version: 14.0.0\r\n\r\n$ cargo +nightly rustc --lib -- --version --verbose\r\n...\r\nrustc 1.63.0-nightly (1f34da9ec 2022-06-14)\r\nbinary: rustc\r\ncommit-hash: 1f34da9ec8a85b6f86c5fa1c121ab6f88f2f4966\r\ncommit-date: 2022-06-14\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.63.0-nightly\r\nLLVM version: 14.0.5\r\n\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n...\r\n Documenting libc v0.2.126\r\n Documenting typenum v1.15.0\r\n Documenting memchr v2.5.0\r\n Documenting log v0.4.17\r\n Documenting futures-core v0.3.21\r\n Documenting crunchy v0.2.2\r\n Documenting radium v0.7.0\r\n Documenting httparse v1.7.1\r\n Documenting futures-task v0.3.21\r\n Documenting rustversion v1.0.8\r\n Documenting encoding_rs v0.8.31\r\n Documenting eyre v0.6.8\r\n Documenting hashers v1.0.1\r\n Documenting anyhow v1.0.58\r\n Documenting spki v0.6.0\r\nthread 'rustc' panicked at 'assertion failed: `(left == right)`\r\n  left: `Item { id: Id(\"0:444:165\"), crate_id: 0, name: Some(\"Output\"), span: Some(Span { filename: \"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.15.0/src/int.rs\", begin: (621, 4), end: (621, 29) }), visibility: Default, docs: None, links: {}, attrs: [], deprecation: None, inner: Typedef(Typedef { type_: QualifiedPath { name: \"Output\", args: AngleBracketed { args: [], bindings: [] }, self_type: Generic(\"M\"), trait_: ResolvedPath { name: \"Div\", id: Id(\"1:3260:1791\"), args: Some(AngleBracketed { args: [Type(Generic(\"N\"))], bindings: [] }), param_names: [] } }, generics: Generics { params: [], where_predicates: [] } }) }`,\r\n right: `Item { id: Id(\"0:444:165\"), crate_id: 0, name: Some(\"Output\"), span: Some(Span { filename: \"/home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.15.0/src/int.rs\", begin: (621, 4), end: (621, 29) }), visibility: Default, docs: None, links: {}, attrs: [], deprecation: None, inner: Typedef(Typedef { type_: ResolvedPath { name: \"Quot\", id: Id(\"0:843:1861\"), args: Some(AngleBracketed { args: [Type(Generic(\"M\")), Type(Generic(\"N\"))], bindings: [] }), param_names: [] }, generics: Generics { params: [], where_predicates: [] } }) }`', src/librustdoc/json/mod.rs:202:17\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/1f34da9ec8a85b6f86c5fa1c121ab6f88f2f4966/library/std/src/panicking.rs:584:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/1f34da9ec8a85b6f86c5fa1c121ab6f88f2f4966/library/core/src/panicking.rs:142:14\r\n   2: core::panicking::assert_failed_inner\r\n   3: core::panicking::assert_failed::<rustdoc_json_types::Item, rustdoc_json_types::Item>\r\n   4: <rustdoc::json::JsonRenderer as rustdoc::formats::renderer::FormatRenderer>::item\r\n   5: <rustdoc::json::JsonRenderer as rustdoc::formats::renderer::FormatRenderer>::item\r\n   6: <core::iter::adapters::map::Map<core::slice::iter::Iter<rustdoc::formats::Impl>, <rustdoc::json::JsonRenderer>::get_trait_implementors::{closure#0}::{closure#0}> as core::iter::traits::iterator::Iterator>::fold::<(), core::iter::traits::iterator::Iterator::for_each::call<rustdoc_json_types::Id, <alloc::vec::Vec<rustdoc_json_types::Id> as alloc::vec::spec_extend::SpecExtend<rustdoc_json_types::Id, core::iter::adapters::map::Map<core::slice::iter::Iter<rustdoc::formats::Impl>, <rustdoc::json::JsonRenderer>::get_trait_implementors::{closure#0}::{closure#0}>>>::spec_extend::{closure#0}>::{closure#0}>\r\n   7: <alloc::vec::Vec<rustdoc_json_types::Id> as alloc::vec::spec_from_iter::SpecFromIter<rustdoc_json_types::Id, core::iter::adapters::map::Map<core::slice::iter::Iter<rustdoc::formats::Impl>, <rustdoc::json::JsonRenderer>::get_trait_implementors::{closure#0}::{closure#0}>>>::from_iter\r\n   8: <rustdoc::json::JsonRenderer as rustdoc::formats::renderer::FormatRenderer>::item\r\n   9: <rustdoc::json::JsonRenderer as rustdoc::formats::renderer::FormatRenderer>::item\r\n  10: <rustdoc::json::JsonRenderer as rustdoc::formats::renderer::FormatRenderer>::item\r\n  11: rustdoc::formats::renderer::run_format::<rustdoc::json::JsonRenderer>\r\n  12: rustdoc::run_renderer::<rustdoc::json::JsonRenderer>\r\n  13: <rustc_session::session::Session>::time::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustdoc::main_options::{closure#0}::{closure#0}::{closure#1}::{closure#2}>\r\n  14: <rustc_interface::passes::QueryContext>::enter::<rustdoc::main_options::{closure#0}::{closure#0}::{closure#1}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n  15: <rustc_interface::interface::Compiler>::enter::<rustdoc::main_options::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n  16: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustdoc::main_options::{closure#0}>::{closure#1}>\r\n  17: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustdoc::main_options::{closure#0}>\r\n  18: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustdoc::main_args::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.63.0-nightly (1f34da9ec 2022-06-14) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type lib -Z unstable-options\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: could not document `typenum`\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustdoc --edition=2018 --crate-type lib --crate-name typenum /home/aaron/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.15.0/src/lib.rs --cap-lints allow -o /home/aaron/scp/moonport/target/doc --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat -C metadata=fa5adaf555b55ba1 -L dependency=/home/aaron/scp/moonport/target/debug/deps -w json -Z unstable-options --crate-version 1.15.0` (exit status: 101)\r\nwarning: build failed, waiting for other jobs to finish...\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99879/timeline", "performed_via_github_app": null, "state_reason": "completed"}