{"url": "https://api.github.com/repos/rust-lang/rust/issues/99685", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99685/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99685/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99685/events", "html_url": "https://github.com/rust-lang/rust/issues/99685", "id": 1315950783, "node_id": "I_kwDOAAsO6M5Ob9C_", "number": 99685, "title": "Binary size regression on msp430 due to #98582", "user": {"login": "cr1901", "id": 6418027, "node_id": "MDQ6VXNlcjY0MTgwMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/6418027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cr1901", "html_url": "https://github.com/cr1901", "followers_url": "https://api.github.com/users/cr1901/followers", "following_url": "https://api.github.com/users/cr1901/following{/other_user}", "gists_url": "https://api.github.com/users/cr1901/gists{/gist_id}", "starred_url": "https://api.github.com/users/cr1901/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cr1901/subscriptions", "organizations_url": "https://api.github.com/users/cr1901/orgs", "repos_url": "https://api.github.com/users/cr1901/repos", "events_url": "https://api.github.com/users/cr1901/events{/privacy}", "received_events_url": "https://api.github.com/users/cr1901/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 884691893, "node_id": "MDU6TGFiZWw4ODQ2OTE4OTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-codegen", "name": "WG-codegen", "color": "c2e0c6", "default": false, "description": "Working Group: Codegen (Runtime perf and code size)"}, {"id": 4434140250, "node_id": "LA_kwDOAAsO6M8AAAABCEucWg", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-msp430", "name": "O-msp430", "color": "6e6ec0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-07-24T16:30:01Z", "updated_at": "2022-09-21T17:11:41Z", "closed_at": "2022-09-19T12:27:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I recently had CI start [failing](https://github.com/cr1901/AT2XT/runs/7380638368#step:9:71) for some firmware I use to make sure Rust still compiles msp430 code correctly. It appears that as of #98582, Rust has stopped optimizing out dead panic code; there is no I/O device to send the panic strings to, and so panic strings- and setting up arguments to access panic strings- should be considered dead code.\r\n\r\nNormally, the firmware size should take 1994 (1992+2) bytes:\r\n\r\n```\r\ncargo build --release -Zbuild-std=core --target=msp430-none-elf\r\nmsp430-elf-size target/msp430-none-elf/release/at2xt\r\n   text    data     bss     dec     hex filename\r\n   1992       2      48    2042     7fa target/msp430-none-elf/release/at2xt\r\n```\r\n\r\nHowever, the firmware size had gone up 100 bytes (2048+46 = 2094- 5% regression) before #98582 was reverted by #99495:\r\n\r\n```\r\ncargo build --release -Zbuild-std=core --target=msp430-none-elf\r\nerror: linking with `msp430-elf-gcc` failed: exit status: 1\r\n  |\r\n  = note: \"msp430-elf-gcc\" \"/home/william/Projects/embedded/msp430/AT2XT/target/msp430-none-elf/release/deps/at2xt-4706a59318f01763.at2xt.aa970193-cgu.0.rcgu.o\" \"-L\" \"/home/william/Projects/embedded/msp430/AT2XT/target/msp430-none-elf/release/deps\" \"-L\" \"/home/william/Projects/embedded/msp430/AT2XT/target/release/deps\" \"-L\" \"/home/william/Projects/embedded/msp430/AT2XT/target/msp430-none-elf/release/build/msp430-rt-587a8251c4c89199/out\" \"-L\" \"/home/william/Projects/embedded/msp430/AT2XT/target/msp430-none-elf/release/build/msp430g2211-1199852debc08ead/out\" \"-L\" \"/home/william/Projects/toolchains/build-llvm-toolchain/build-rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/msp430-none-elf/lib\" \"-Wl,-Bstatic\" \"/tmp/rustcy1Mond/libmsp430_rt-19edab0518267d0f.rlib\" \"-Wl,--start-group\" \"-Wl,--end-group\" \"/home/william/Projects/embedded/msp430/AT2XT/target/msp430-none-elf/release/deps/libcompiler_builtins-1ef8666a5bfcc3f4.rlib\" \"-Wl,-Bdynamic\" \"-L\" \"/home/william/Projects/toolchains/build-llvm-toolchain/build-rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/msp430-none-elf/lib\" \"-o\" \"/home/william/Projects/embedded/msp430/AT2XT/target/msp430-none-elf/release/deps/at2xt-4706a59318f01763\" \"-nodefaultlibs\" \"-Tlink.x\" \"-mcpu=msp430\" \"-nostartfiles\" \"-lmul_none\" \"-lgcc\"\r\n  = note: /home/william/.local/bin/../lib/gcc/msp430-elf/9.2.0/../../../../msp430-elf/bin/ld: /home/william/Projects/embedded/msp430/AT2XT/target/msp430-none-elf/release/deps/at2xt-4706a59318f01763 section `.rodata' will not fit in region `ROM'\r\n          /home/william/.local/bin/../lib/gcc/msp430-elf/9.2.0/../../../../msp430-elf/bin/ld: section .rodata VMA wraps around address space\r\n          /home/william/.local/bin/../lib/gcc/msp430-elf/9.2.0/../../../../msp430-elf/bin/ld: section .vector_table LMA [000000000000ffe0,000000000000ffff] overlaps section .rodata LMA [000000000000ff48,000000000001000b]\r\n          /home/william/.local/bin/../lib/gcc/msp430-elf/9.2.0/../../../../msp430-elf/bin/ld: region `ROM' overflowed by 46 bytes\r\n          collect2: error: ld returned 1 exit status\r\n\r\n\r\nerror: could not compile `at2xt` due to previous error\r\nerror: Recipe `timer` failed on line 10 with exit code 101\r\n```\r\n\r\n\r\nI've created an [MVCE](https://github.com/cr1901/msp430-size) from the failing CI to illustrate:\r\n\r\n### Code\r\n#### Instructions\r\n\r\n1. Make sure the `msp430-elf-gcc` [toolchain](https://www.ti.com/tool/MSP430-GCC-OPENSOURCE) is installed. Optionally install [`just`](https://github.com/casey/just) for convenience.\r\n2. `git clone https://github.com/cr1901/msp430-size`. Use commit [e44cf66](https://github.com/cr1901/msp430-size/commit/e44cf66a3c0777ddf437c45ee3a2b7d1a0bb080f) **specifically.**\r\n3. Compile `rustc` and add your new `rustc` to `rustup` using `rustup toolchain link override-name /path/to/override`. _Use this override for both `rustc` commits in the next step._\r\n4. Run the below command twice (using different `target` dirs):\r\n   ```\r\n   cargo +override-name rustc --manifest-path=./take-api/Cargo.toml --release -Zbuild-std=core --example=once -- --emit=obj=target/msp430-none-elf/release/examples/once.o,llvm-ir=target/msp430-none-elf/release/examples/once.ll,asm=target/msp430-none-elf/release/examples/once.s\r\n   ```\r\n\r\n   The above command needs to be run with two different compilers:\r\n\r\n   * Once with a compiler _before_ #98582 or _after_ #99495. \r\n   * Once with a compiler _in between_ those PRs.\r\n   * I used 4a742a691 and 03d488b48a, but the actual commits aren't essential.\r\n\r\n5. Extra compiler artifacts can be generated like so:\r\n   ```\r\n   msp430-elf-objdump -Cd target/msp430-none-elf/release/examples/once\r\n   msp430-elf-readelf -a --wide target/msp430-none-elf/release/examples/once\r\n   msp430-elf-objdump -Cd target/msp430-none-elf/release/examples/once.o\r\n   msp430-elf-readelf -a --wide target/msp430-none-elf/release/examples/once.o\r\n   msp430-elf-size target/msp430-none-elf/release/examples/once\r\n   ```\r\n\r\n#### Expected Results\r\nFor _both_ Rust compiler commits, I expected to see  the following output from `msp430-elf-size`, with _no_ panic strings emitted:\r\n\r\n```\r\nwilliam@xubuntu-dtrain:~/Projects/embedded/msp430/msp430-size$ msp430-elf-size -A target/msp430-none-elf/release/examples/once\r\ntarget/msp430-none-elf/release/examples/once  :\r\nsection              size    addr\r\n.vector_table          32   65504\r\n.text                 168   49152\r\n.rodata                 4   49320\r\n.bss                    2     512\r\n.data                   0     514\r\n.MSP430.attributes     23       0\r\nTotal                 229\r\nstrings target/msp430-none-elf/release/examples/once | grep called\r\n```\r\n\r\nInstead, the compiler which had PR #98582 had a different size, and a panic string for `Option::unwrap()` failure was emitted into the binary:\r\n\r\n```\r\nwilliam@xubuntu-dtrain:~/Projects/embedded/msp430/msp430-size$ msp430-elf-size -A target/msp430-none-elf/release/examples/once\r\ntarget/msp430-none-elf/release/examples/once  :\r\nsection              size    addr\r\n.vector_table          32   65504\r\n.text                 200   49152\r\n.rodata                48   49352\r\n.bss                    2     512\r\n.data                   0     514\r\n.MSP430.attributes     23       0\r\nTotal                 305\r\nstrings target/msp430-none-elf/release/examples/once | grep called\r\n?called `Option::unwrap()` on a `None` value\r\n```\r\n\r\n### Regression Commits\r\n\r\nBased on `git bisect`, this regression was introduced by PR #98582. Specifically 728c7e8bda215dc0ef055a817964f199427512e0 introduced the regression. This regression was fixed by #99495. However, @oli-obk [asked](https://twitter.com/oli_obk/status/1549265760031211523) me to open an issue anyway.\r\n\r\n@rustbot modify labels: +regression-from-stable-to-nightly -regression-untriaged\r\n\r\n### Other Context\r\n\r\nAlthough I don't have numbers handy, this regression also affects `libcore`s compiled with the `panic_immediate_abort` feature for less marked size regression.\r\n", "closed_by": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99685/timeline", "performed_via_github_app": null, "state_reason": "completed"}