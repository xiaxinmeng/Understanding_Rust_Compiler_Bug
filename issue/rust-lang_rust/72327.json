{"url": "https://api.github.com/repos/rust-lang/rust/issues/72327", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72327/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72327/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72327/events", "html_url": "https://github.com/rust-lang/rust/issues/72327", "id": 620328373, "node_id": "MDU6SXNzdWU2MjAzMjgzNzM=", "number": 72327, "title": "Comparing to infinity is buggy on x87", "user": {"login": "eduardosm", "id": 761151, "node_id": "MDQ6VXNlcjc2MTE1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/761151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eduardosm", "html_url": "https://github.com/eduardosm", "followers_url": "https://api.github.com/users/eduardosm/followers", "following_url": "https://api.github.com/users/eduardosm/following{/other_user}", "gists_url": "https://api.github.com/users/eduardosm/gists{/gist_id}", "starred_url": "https://api.github.com/users/eduardosm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eduardosm/subscriptions", "organizations_url": "https://api.github.com/users/eduardosm/orgs", "repos_url": "https://api.github.com/users/eduardosm/repos", "events_url": "https://api.github.com/users/eduardosm/events{/privacy}", "received_events_url": "https://api.github.com/users/eduardosm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 55301991, "node_id": "MDU6TGFiZWw1NTMwMTk5MQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-x86", "name": "O-x86", "color": "6e6ec0", "default": false, "description": "Target: x86 processors"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2139259423, "node_id": "MDU6TGFiZWwyMTM5MjU5NDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-floating-point", "name": "A-floating-point", "color": "f7e101", "default": false, "description": "Area: Floating point numbers and arithmetic"}, {"id": 5223550385, "node_id": "LA_kwDOAAsO6M8AAAABN1kNsQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-target-feature", "name": "A-target-feature", "color": "f7e101", "default": false, "description": "Area: Enabling/disabling target features like AVX, Neon, etc."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2020-05-18T16:02:31Z", "updated_at": "2023-03-03T22:41:27Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When code is compiled using the X87 FPU, comparing to infinity can lead to unexpected behavior.\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#[inline(never)]\r\nfn get_num() -> f64 {\r\n    let num: f64 = 1.0e300;\r\n    // volatile is to avoid optimizations\r\n    unsafe { std::ptr::read_volatile(&num) }\r\n}\r\n\r\nfn main() {\r\n    let x = get_num();\r\n    let y = get_num();\r\n    let z = x * y;\r\n    if z != f64::INFINITY && z != f64::NEG_INFINITY && !z.is_nan() {\r\n        let exp = (z.to_bits() >> 52) & 0x7FF;\r\n        assert!(exp != 0x7FF);\r\n        println!(\"is finite, exp = {}\", exp);\r\n    } else {\r\n        println!(\"is not finite\");\r\n    }\r\n}\r\n```\r\n\r\nI expected to see this happen:\r\n\r\nThis should either print \"infinite or nan\" or \"is finite, exp = ...\". The `assert!` should never fail because the exponent bits are 0x7FF if and only if the number is infinity or nan, so the `if` condition should have been false.\r\n\r\nInstead, this happened:\r\n\r\nWhen compiled for X86 without SSE, the assert will fail. This could also cause safety issues if `unsafe` code relies on it.\r\n\r\nThe following command can be used to compile without SSE:\r\n```\r\nRUSTFLAGS=\"-C target-cpu=pentium\" cargo run --target i686-unknown-linux-gnu\r\n```\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.43.1 (8d69840ab 2020-05-04)\r\nbinary: rustc\r\ncommit-hash: 8d69840ab92ea7f4d323420088dd8c9775f180cd\r\ncommit-date: 2020-05-04\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.43.1\r\nLLVM version: 9.0\r\n```\r\nand\r\n```\r\nrustc 1.45.0-nightly (a74d1862d 2020-05-14)\r\nbinary: rustc\r\ncommit-hash: a74d1862d4d87a56244958416fd05976c58ca1a8\r\ncommit-date: 2020-05-14\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.45.0-nightly\r\nLLVM version: 9.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72327/reactions", "total_count": 6, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 3, "rocket": 0, "eyes": 3}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72327/timeline", "performed_via_github_app": null, "state_reason": null}