{"url": "https://api.github.com/repos/rust-lang/rust/issues/49520", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49520/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49520/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49520/events", "html_url": "https://github.com/rust-lang/rust/issues/49520", "id": 310116420, "node_id": "MDU6SXNzdWUzMTAxMTY0MjA=", "number": 49520, "title": "macros can observe raw identifier state [discuss]", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 858360099, "node_id": "MDU6TGFiZWw4NTgzNjAwOTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-epoch", "name": "WG-epoch", "color": "c2e0c6", "default": false, "description": "Working group: Epoch (2018) management"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-30T17:01:35Z", "updated_at": "2018-07-08T01:02:32Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In https://github.com/rust-lang/rust/pull/48942, @Lymia landed raw identifiers; \"equality\" in this implementation includes observing the \"raw\" state. Therefore, macros can observe if `r#foo` was used or not:\r\n\r\n```rust\r\n#![feature(raw_identifiers)]\r\n\r\nmacro_rules! foo {\r\n    (a) => {\r\n        1\r\n    };\r\n    \r\n    (r#a) => { 2 };\r\n}\r\n\r\nfn main() {\r\n    println!(\"{}\", foo!(a));\r\n    println!(\"{}\", foo!(r#a));\r\n}\r\n```\r\n\r\nThis makes a certain measure of sense, but also makes me nervous, and I wanted to open an issue to discuss. For example, @Manishearth proposed making identifiers \"raw\" in macros when they are serialized, thus ensuring consistent interpretation as we cross editions. \r\n\r\nI'm not entirely sure of the implications of this but it does make me nervous for users to be able to distinguish `foo` and `r#foo`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49520/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49520/timeline", "performed_via_github_app": null, "state_reason": null}