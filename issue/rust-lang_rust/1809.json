{"url": "https://api.github.com/repos/rust-lang/rust/issues/1809", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/1809/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/1809/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/1809/events", "html_url": "https://github.com/rust-lang/rust/issues/1809", "id": 3180708, "node_id": "MDU6SXNzdWUzMTgwNzA4", "number": 1809, "title": "Mutable values in predicate arguments break typestate checks", "user": {"login": "vlasovskikh", "id": 126891, "node_id": "MDQ6VXNlcjEyNjg5MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/126891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlasovskikh", "html_url": "https://github.com/vlasovskikh", "followers_url": "https://api.github.com/users/vlasovskikh/followers", "following_url": "https://api.github.com/users/vlasovskikh/following{/other_user}", "gists_url": "https://api.github.com/users/vlasovskikh/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlasovskikh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlasovskikh/subscriptions", "organizations_url": "https://api.github.com/users/vlasovskikh/orgs", "repos_url": "https://api.github.com/users/vlasovskikh/repos", "events_url": "https://api.github.com/users/vlasovskikh/events{/privacy}", "received_events_url": "https://api.github.com/users/vlasovskikh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-02-10T22:37:49Z", "updated_at": "2014-06-16T21:56:26Z", "closed_at": "2012-03-17T04:08:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the following example in Rust 0.1:\n\n```\nuse std;\n\ntype s = {mutable x: int};\n\npure fn is_non_negative(&s: s) -> bool { s.x >= 0 } // should not compile, violates referential transparency\n\nfn get_non_negative_x(s: s): is_non_negative(s) -> int { s.x }\n\n#[test]\nfn test1() {\n    let s = {mutable x: 0};\n    check is_non_negative(s);\n    s.x = -1;\n    let x = get_non_negative_x(s);\n    assert x >= 0; // should pass, but fails\n}\n```\n\nThe predicate `pure fn is_non_negative(&s: s) -> bool` should guarantee, that the field `s.x` is not negative, so `fn get_non_negative(s: s) -> int` should return a value greater or equal to `0`. But due to mutability of `s.x` this may be not true. And it does in the example above, so the `assert x >= 0` fails.\n", "closed_by": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/1809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/1809/timeline", "performed_via_github_app": null, "state_reason": "completed"}