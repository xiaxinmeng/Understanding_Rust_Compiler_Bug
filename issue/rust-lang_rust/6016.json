{"url": "https://api.github.com/repos/rust-lang/rust/issues/6016", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/6016/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/6016/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/6016/events", "html_url": "https://github.com/rust-lang/rust/issues/6016", "id": 13515245, "node_id": "MDU6SXNzdWUxMzUxNTI0NQ==", "number": 6016, "title": "Implement `as` operator overload trait", "user": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-04-23T01:30:12Z", "updated_at": "2013-07-13T13:51:42Z", "closed_at": "2013-07-13T13:51:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Proposed trait for inclusion in core::ops:\n\n``` rust\n#[lang=\"cast\"]\ntrait Cast<T> {\n    fn cast(&self) -> T;\n}\n```\n\nExample implementation:\n\n``` rust\nimpl Cast<f32> for float { fn cast(&self) -> f32 { self as f32 } }\nimpl Cast<int> for f32   { fn cast(&self) -> int { self as int } }\n\nimpl<T: Cast<U>, U> Cast<Vec3<U>> for Vec3<T> {\n    fn cast(&self) -> Vec3<U> {\n        Vec3 { x: self.x as U, y: self.y as U, z: self.z as U }\n    }\n}\n\ntype Vec3f   = Vec3<float>;\ntype Vec3f32 = Vec3<f32>;\ntype Vec3i   = Vec3<int>;\n\nfn main() {\n    let a = Vec3 { x: 1f, y: 1f, z: 1f };\n    let b = a as Vec3f32;\n    let c = b as Vec3i;\n}\n```\n\nPerhaps there could be a deriving attribute as well:\n\n``` rust\n#[deriving(Cast)]\nstruct Vec3<T> { x: T, y: T, z: T }\n```\n", "closed_by": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/6016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/6016/timeline", "performed_via_github_app": null, "state_reason": "completed"}