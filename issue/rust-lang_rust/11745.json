{"url": "https://api.github.com/repos/rust-lang/rust/issues/11745", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/11745/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/11745/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/11745/events", "html_url": "https://github.com/rust-lang/rust/issues/11745", "id": 26148693, "node_id": "MDU6SXNzdWUyNjE0ODY5Mw==", "number": 11745, "title": "RFC: Improve the module system", "user": {"login": "kud1ing", "id": 391975, "node_id": "MDQ6VXNlcjM5MTk3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/391975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kud1ing", "html_url": "https://github.com/kud1ing", "followers_url": "https://api.github.com/users/kud1ing/followers", "following_url": "https://api.github.com/users/kud1ing/following{/other_user}", "gists_url": "https://api.github.com/users/kud1ing/gists{/gist_id}", "starred_url": "https://api.github.com/users/kud1ing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kud1ing/subscriptions", "organizations_url": "https://api.github.com/users/kud1ing/orgs", "repos_url": "https://api.github.com/users/kud1ing/repos", "events_url": "https://api.github.com/users/kud1ing/events{/privacy}", "received_events_url": "https://api.github.com/users/kud1ing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 58, "created_at": "2014-01-23T07:17:34Z", "updated_at": "2023-05-24T15:09:11Z", "closed_at": "2014-03-23T07:50:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am not sure what the chances are, but if it could be improved, it should be before 1.0.\nRust's module system has a steep learning/doing curve. I think there are two reasons for this:\n1. Importing functionality and importing namespace are two steps: `mod` and `use`. This leads to the shadowing rules, that have weird consequences: you need to import a path via `use` which is not even defined at this point in time, because `use` needs to before `mod`. I find this not only unfamiliar but also counterintuitive.\n2. The compiled file becomes a crate. In most languages you can iteratively compose a project of files/modules and use/compile those individually. Since `use` statements are relative to the crate, the meaning changes depending on which file you currently compile. The consequence is that it makes it more difficult than necessary to first write file `a.rs`, then `b.rs` (uses `a.rs`), and then `c.rs` (uses `b.rs`) and make them compile individually. Even in Haskell that is easy. In Rust you either have to go back and forth and adjust the `use`-staments or only put the `mod`-statements in a dedicated top-level crate (`lib.rs` or `main.rs`) which defies encapsulation.\n\nThis could be an issue that is fixable with more/better documentation. However, when you need a lot of words/actions to describe/do something in one system which does not need that care in another system, that could be an indication that there is some accidental complexity. I think this complexity is accidental since i am not yet aware of which gains are compensating for this.\n", "closed_by": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/11745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/11745/timeline", "performed_via_github_app": null, "state_reason": "completed"}