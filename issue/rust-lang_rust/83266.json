{"url": "https://api.github.com/repos/rust-lang/rust/issues/83266", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83266/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83266/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83266/events", "html_url": "https://github.com/rust-lang/rust/issues/83266", "id": 835031377, "node_id": "MDU6SXNzdWU4MzUwMzEzNzc=", "number": 83266, "title": "Vec::splice() has noticeable overhead for some use cases", "user": {"login": "adrian17", "id": 4729533, "node_id": "MDQ6VXNlcjQ3Mjk1MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/4729533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrian17", "html_url": "https://github.com/adrian17", "followers_url": "https://api.github.com/users/adrian17/followers", "following_url": "https://api.github.com/users/adrian17/following{/other_user}", "gists_url": "https://api.github.com/users/adrian17/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrian17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrian17/subscriptions", "organizations_url": "https://api.github.com/users/adrian17/orgs", "repos_url": "https://api.github.com/users/adrian17/repos", "events_url": "https://api.github.com/users/adrian17/events{/privacy}", "received_events_url": "https://api.github.com/users/adrian17/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 166999014, "node_id": "MDU6TGFiZWwxNjY5OTkwMTQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-collections", "name": "A-collections", "color": "f7e101", "default": false, "description": "Area: std::collections."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-03-18T16:38:49Z", "updated_at": "2021-03-19T18:32:20Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "As far as I know, Vec::splice() is the only way to extend the Vec from a slice in an arbitrary location. However, being a fairly universal api makes it slower than a hypothetical dedicated `insert_from_slice` could be.\r\n\r\nIn fact, according to `cargo bench`, for small vectors (let's say under 10) and number of elements to insert, it can be faster to insert them in a loop:\r\n```\r\n    for i in 0..5 { data.insert(3, 77); }\r\n```\r\nthan to call `splice`:\r\n```\r\n    let new = [77; 5];\r\n    data.splice(3..3, new.iter().copied());\r\n```\r\n\r\n`splice` also seems to optimize badly in presence of constants. For example, looking at Godbolt, the optimizer can't seem to optimize\r\n```\r\n    let tab = [77; 1];\r\n    vec.splice(5..6, tab.iter().cloned());\r\n```\r\nas good as\r\n```\r\n    vec[5] = 77;\r\n```\r\nOr\r\n```\r\n    let tab = [77; 1];\r\n    vec.splice(5..5, tab.iter().cloned());\r\n```\r\nas good as\r\n```\r\n    vec.insert(5, 77);\r\n```\r\n\r\nIt'd be nice if the function had lower overhead for small vectors/slices. Or maybe if another specialized method `insert_from_slice(idx, slice)` was added that avoids all overhead for this particular use case.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83266/timeline", "performed_via_github_app": null, "state_reason": null}