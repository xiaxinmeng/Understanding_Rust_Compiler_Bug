{"url": "https://api.github.com/repos/rust-lang/rust/issues/63916", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63916/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63916/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63916/events", "html_url": "https://github.com/rust-lang/rust/issues/63916", "id": 485283173, "node_id": "MDU6SXNzdWU0ODUyODMxNzM=", "number": 63916, "title": "Const function sized arrays fail to evaluate `Sized` bound", "user": {"login": "p-avital", "id": 6801863, "node_id": "MDQ6VXNlcjY4MDE4NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/6801863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/p-avital", "html_url": "https://github.com/p-avital", "followers_url": "https://api.github.com/users/p-avital/followers", "following_url": "https://api.github.com/users/p-avital/following{/other_user}", "gists_url": "https://api.github.com/users/p-avital/gists{/gist_id}", "starred_url": "https://api.github.com/users/p-avital/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/p-avital/subscriptions", "organizations_url": "https://api.github.com/users/p-avital/orgs", "repos_url": "https://api.github.com/users/p-avital/repos", "events_url": "https://api.github.com/users/p-avital/events{/privacy}", "received_events_url": "https://api.github.com/users/p-avital/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 268744493, "node_id": "MDU6TGFiZWwyNjg3NDQ0OTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-fn", "name": "A-const-fn", "color": "f7e101", "default": false, "description": "Area: const fn foo(..) {..}. Pure functions which can be applied at compile time."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-26T14:59:52Z", "updated_at": "2019-10-01T15:21:18Z", "closed_at": "2019-10-01T15:21:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI was trying to have generic arrays that occupy as much of a single cache line as possible, but get a compile error when trying to use `std::mem::size_of<T>()`, as the `T: Sized` constraint seems to be evaluated later than [T; N] seems to require the value.\r\n\r\nIs this behaviour normal? Is there an alternative?\r\nI've included an example of the behaviour.\r\nThanks.\r\n\r\n```rust\r\n// #[feature(const_generics)] // In case someone asks: tried it, doesn't help.\r\nuse std::mem::MaybeUninit;\r\n\r\nconst fn fit_array_into<T: Sized>(size: usize) -> usize{\r\n    size / std::mem::size_of::<T>()\r\n}\r\n\r\nstruct SmallArray<T: Sized>([MaybeUninit<T>; fit_array_into::<T>(64)]); // comment to build\r\n\r\n#[derive(Copy, Clone, Debug)]\r\nstruct CopyArray<T: Copy>(pub [T; 3]);\r\n\r\npub fn main() {\r\n    let test: [MaybeUninit<u64>; fit_array_into::<u64>(64)] = unsafe {std::mem::MaybeUninit::uninit().assume_init()};\r\n    let test: SmallArray<u64> = unsafe {std::mem::MaybeUninit::uninit().assume_init()}; // comment to build\r\n    let test: CopyArray<u64> = CopyArray([0, 1, 2]);\r\n    let copy = test;\r\n    println!(\"test: {:?}, copy: {:?}\", test, copy);\r\n}\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=b0e42fdf93b1bd804507174d9d4439c3))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0277]: the size for values of type `T` cannot be known at compilation time\r\n --> src/main.rs:8:46\r\n  |\r\n8 | struct SmallArray<T: Sized>([MaybeUninit<T>; fit_array_into::<T>(64-56)]);\r\n  |                                              ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\r\n  |\r\n  = help: the trait `std::marker::Sized` is not implemented for `T`\r\n  = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\r\n  = help: consider adding a `where T: std::marker::Sized` bound\r\nnote: required by `fit_array_into`\r\n --> src/main.rs:4:1\r\n  |\r\n4 | const fn fit_array_into<T: Sized>(size: usize) -> usize{\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63916/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63916/timeline", "performed_via_github_app": null, "state_reason": "completed"}