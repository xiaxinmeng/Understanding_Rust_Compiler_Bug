{"url": "https://api.github.com/repos/rust-lang/rust/issues/83411", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83411/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83411/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83411/events", "html_url": "https://github.com/rust-lang/rust/issues/83411", "id": 838742590, "node_id": "MDU6SXNzdWU4Mzg3NDI1OTA=", "number": 83411, "title": "Experienced compiler error with simple test project", "user": {"login": "Folling", "id": 23152870, "node_id": "MDQ6VXNlcjIzMTUyODcw", "avatar_url": "https://avatars.githubusercontent.com/u/23152870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Folling", "html_url": "https://github.com/Folling", "followers_url": "https://api.github.com/users/Folling/followers", "following_url": "https://api.github.com/users/Folling/following{/other_user}", "gists_url": "https://api.github.com/users/Folling/gists{/gist_id}", "starred_url": "https://api.github.com/users/Folling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Folling/subscriptions", "organizations_url": "https://api.github.com/users/Folling/orgs", "repos_url": "https://api.github.com/users/Folling/repos", "events_url": "https://api.github.com/users/Folling/events{/privacy}", "received_events_url": "https://api.github.com/users/Folling/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-03-23T13:44:34Z", "updated_at": "2021-05-10T15:34:39Z", "closed_at": "2021-05-10T15:34:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\nJust the example code from the SDL2 crate\r\n```Rust\r\nextern crate gl;\r\nextern crate sdl2;\r\n\r\nuse sdl2::event::Event;\r\nuse sdl2::keyboard::Keycode;\r\nuse sdl2::video::GLProfile;\r\n\r\nfn main() {\r\n    let sdl_context = sdl2::init().unwrap();\r\n    let video_subsystem = sdl_context.video().unwrap();\r\n\r\n    let gl_attr = video_subsystem.gl_attr();\r\n    gl_attr.set_context_profile(GLProfile::Core);\r\n    gl_attr.set_context_version(3, 3);\r\n\r\n    let window = video_subsystem\r\n        .window(\"Window\", 800, 600)\r\n        .resizable()\r\n        .opengl()\r\n        .build()\r\n        .unwrap();\r\n\r\n    // Unlike the other example above, nobody created a context for your window, so you need to create one.\r\n    let ctx = window.gl_create_context().unwrap();\r\n    gl::load_with(|name| video_subsystem.gl_get_proc_address(name) as *const _);\r\n\r\n    debug_assert_eq!(gl_attr.context_profile(), GLProfile::Core);\r\n    debug_assert_eq!(gl_attr.context_version(), (3, 3));\r\n\r\n    let mut event_pump = sdl_context.event_pump().unwrap();\r\n\r\n    'running: loop {\r\n        unsafe {\r\n            gl::ClearColor(0.6, 0.0, 0.8, 1.0);\r\n            gl::Clear(gl::COLOR_BUFFER_BIT);\r\n        }\r\n\r\n        window.gl_swap_window();\r\n        for event in event_pump.poll_iter() {\r\n            match event {\r\n                Event::Quit { .. }\r\n                | Event::KeyDown {\r\n                    keycode: Some(Keycode::Escape),\r\n                    ..\r\n                } => break 'running,\r\n                _ => {}\r\n            }\r\n        }\r\n        ::std::thread::sleep(::std::time::Duration::new(0, 1_000_000_000u32 / 60));\r\n    }\r\n}\r\n```\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.52.0-nightly (1705a7d64 2021-03-18)\r\nbinary: rustc\r\ncommit-hash: 1705a7d64b833d1c4b69958b0627bd054e6d764b\r\ncommit-date: 2021-03-18\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.52.0-nightly\r\nLLVM version: 12.0.0\r\n\r\n-- It does run on stable, just not on nightly\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'found unstable fingerprints for predicates_of(core[3998]::cmp::PartialEq)', /rustc/1705a7d64b833d1c4b69958b0627bd054e6d764b/compiler/rustc_query_system/src/query/plumbing.rs:593:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.52.0-nightly (1705a7d64 2021-03-18) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [predicates_of] computing predicates of `std::cmp::PartialEq`\r\n#1 [typeck] type-checking `main`\r\nend of query stack\r\nerror: could not compile `graphite`\r\n```\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n```\r\n   0: rust_begin_unwind\r\n             at /rustc/1705a7d64b833d1c4b69958b0627bd054e6d764b/library/std/src/panicking.rs:493:5\r\n   1: std::panicking::begin_panic_fmt\r\n             at /rustc/1705a7d64b833d1c4b69958b0627bd054e6d764b/library/std/src/panicking.rs:435:5\r\n   2: rustc_query_system::query::plumbing::incremental_verify_ich\r\n   3: rustc_query_system::query::plumbing::load_from_disk_and_cache_in_memory\r\n   4: rustc_query_system::query::plumbing::get_query_impl\r\n   5: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::predicates_of\r\n   6: rustc_middle::ty::generics::GenericPredicates::instantiate_into\r\n   7: rustc_middle::ty::generics::GenericPredicates::instantiate\r\n   8: rustc_typeck::check::method::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::lookup_method_in_trait\r\n   9: rustc_typeck::check::op::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::lookup_op_method\r\n  10: rustc_typeck::check::op::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_overloaded_binop\r\n  11: rustc_typeck::check::op::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_binop\r\n  12: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  13: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  14: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  15: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  16: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  17: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  18: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  19: rustc_typeck::check::_match::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_match\r\n  20: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  21: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  22: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  23: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  24: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  25: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  26: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  27: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  28: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  29: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  30: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  31: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  32: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  33: rustc_typeck::check::check::check_fn\r\n  34: rustc_infer::infer::InferCtxtBuilder::enter\r\n  35: rustc_typeck::check::typeck\r\n  36: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  37: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  38: rustc_query_system::query::plumbing::force_query_with_job\r\n  39: rustc_query_system::query::plumbing::get_query_impl\r\n  40: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  41: rustc_middle::ty::<impl rustc_middle::ty::context::TyCtxt>::par_body_owners\r\n  42: rustc_typeck::check::typeck_item_bodies\r\n  43: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  44: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  45: rustc_data_structures::stack::ensure_sufficient_stack\r\n  46: rustc_query_system::query::plumbing::force_query_with_job\r\n  47: rustc_query_system::query::plumbing::get_query_impl\r\n  48: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck_item_bodies\r\n  49: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  50: rustc_typeck::check_crate\r\n  51: rustc_interface::passes::analysis\r\n  52: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  53: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  54: rustc_data_structures::stack::ensure_sufficient_stack\r\n  55: rustc_query_system::query::plumbing::force_query_with_job\r\n  56: rustc_query_system::query::plumbing::get_query_impl\r\n  57: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  58: rustc_interface::passes::QueryContext::enter\r\n  59: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  60: rustc_span::with_source_map\r\n  61: rustc_interface::interface::create_compiler_and_run\r\n  62: scoped_tls::ScopedKey<T>::set</strong></summary>\r\n```\r\n</summary>\r\n</details>\r\n\r\nMy cargo.toml looks as follows:\r\n```toml\r\n[package]\r\nname = \"graphite\"\r\nversion = \"0.1.0\"\r\nauthors = [\"Folling <coding@folling.de>\"]\r\nedition = \"2018\"\r\n\r\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\r\n\r\n[dependencies]\r\nsdl2 = \"0.34\"\r\ngl = \"0.14.0\"\r\n```\r\n---\r\nHope this helps!", "closed_by": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83411/timeline", "performed_via_github_app": null, "state_reason": "completed"}