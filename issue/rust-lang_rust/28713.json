{"url": "https://api.github.com/repos/rust-lang/rust/issues/28713", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/28713/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/28713/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/28713/events", "html_url": "https://github.com/rust-lang/rust/issues/28713", "id": 108741616, "node_id": "MDU6SXNzdWUxMDg3NDE2MTY=", "number": 28713, "title": "rustc apparently optimizes away the loop in 3.3", "user": {"login": "lojic", "id": 57366, "node_id": "MDQ6VXNlcjU3MzY2", "avatar_url": "https://avatars.githubusercontent.com/u/57366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lojic", "html_url": "https://github.com/lojic", "followers_url": "https://api.github.com/users/lojic/followers", "following_url": "https://api.github.com/users/lojic/following{/other_user}", "gists_url": "https://api.github.com/users/lojic/gists{/gist_id}", "starred_url": "https://api.github.com/users/lojic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lojic/subscriptions", "organizations_url": "https://api.github.com/users/lojic/orgs", "repos_url": "https://api.github.com/users/lojic/repos", "events_url": "https://api.github.com/users/lojic/events{/privacy}", "received_events_url": "https://api.github.com/users/lojic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-09-28T20:38:57Z", "updated_at": "2016-01-05T05:20:34Z", "closed_at": "2016-01-05T05:20:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just implemented the code in section 3.3 to compare Ruby to Rust. It appears that rustc optimizes away the inner loop of the thread, because I kept increasing the limit and the completion time remained constant. I introduced a simple if statement in the loop, and then I got expected timings.\n\nIt might be worth modifying the loop so it's not optimized away for a fairer comparison. Here's what I ended up with:\n\n```\npub extern fn process() {\n  let handles: Vec<_> = (0..10).map(|_| {\n    thread::spawn(|| {\n      let mut x = 0u64;\n      for i in (0..7_700_000_000u64) {\n        if i < 1 {\n          x += 2\n        } else {\n          x += 1\n        }\n      }\n      x\n    })\n  }).collect();\n\n  for h in handles {\n    println!(\"Thread finished with count={}\",\n             h.join().map_err(|_| \"Could not join a thread!\").unwrap());\n  }\n  println!(\"done!\");\n}\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/28713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/28713/timeline", "performed_via_github_app": null, "state_reason": "completed"}