{"url": "https://api.github.com/repos/rust-lang/rust/issues/109304", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/109304/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/109304/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/109304/events", "html_url": "https://github.com/rust-lang/rust/issues/109304", "id": 1630283893, "node_id": "I_kwDOAAsO6M5hLCh1", "number": 109304, "title": "ICE: `reached the recursion limit finding the struct tail for`", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 3921860029, "node_id": "LA_kwDOAAsO6M7pwtW9", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-has-mcve", "name": "S-has-mcve", "color": "862eff", "default": false, "description": "A Minimal Complete and Verifiable Example has been found for this issue"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-03-18T11:25:23Z", "updated_at": "2023-04-03T10:03:10Z", "closed_at": "2023-04-03T10:03:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Code\r\n\r\nCould perhaps be an error instead of ice?\r\n\r\n```Rust\r\n#![recursion_limit = \"10\"]\r\nmacro_rules! link {\r\n    ($outer:ident, $inner:ident) => {\r\n        struct $outer($inner);\r\n        impl $outer {\r\n            fn new() -> $outer {\r\n                $outer($inner::new())\r\n            }\r\n        }\r\n        impl std::ops::Deref for $outer {\r\n            type Target = $inner;\r\n            fn deref(&self) -> &$inner {\r\n                &self.0\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nstruct Bottom;\r\n\r\nimpl Bottom {\r\n    fn new() -> Bottom {\r\n        Bottom\r\n    }\r\n}\r\n\r\nlink!(Top, A);\r\nlink!(A, B);\r\nlink!(B, C);\r\nlink!(C, D);\r\nlink!(D, E);\r\nlink!(E, F);\r\nlink!(F, G);\r\nlink!(G, H);\r\nlink!(H, I);\r\nlink!(I, J);\r\nlink!(J, K);\r\nlink!(K, Bottom);\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.70.0-nightly (13afbdaa0 2023-03-17)\r\nbinary: rustc\r\ncommit-hash: 13afbdaa0655dda23d7129e59ac48f1ec88b2084\r\ncommit-date: 2023-03-17\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.70.0-nightly\r\nLLVM version: 15.0.7\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nwarning: associated function `new` is never used\r\n  --> treereduce.out:22:8\r\n   |\r\n22 |     fn new() -> Bottom {\r\n   |        ^^^\r\n   |\r\n   = note: `#[warn(dead_code)]` on by default\r\n\r\nwarning: associated function `new` is never used\r\n  --> treereduce.out:6:16\r\n   |\r\n6  |             fn new() -> $outer {\r\n   |                ^^^\r\n...\r\n27 | link!(Top, A);\r\n   | ------------- in this macro invocation\r\n   |\r\n   = note: this warning originates in the macro `link` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nwarning: associated function `new` is never used\r\n  --> treereduce.out:6:16\r\n   |\r\n6  |             fn new() -> $outer {\r\n   |                ^^^\r\n...\r\n28 | link!(A, B);\r\n   | ----------- in this macro invocation\r\n   |\r\n   = note: this warning originates in the macro `link` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nwarning: associated function `new` is never used\r\n  --> treereduce.out:6:16\r\n   |\r\n6  |             fn new() -> $outer {\r\n   |                ^^^\r\n...\r\n29 | link!(B, C);\r\n   | ----------- in this macro invocation\r\n   |\r\n   = note: this warning originates in the macro `link` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nwarning: associated function `new` is never used\r\n  --> treereduce.out:6:16\r\n   |\r\n6  |             fn new() -> $outer {\r\n   |                ^^^\r\n...\r\n30 | link!(C, D);\r\n   | ----------- in this macro invocation\r\n   |\r\n   = note: this warning originates in the macro `link` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nwarning: associated function `new` is never used\r\n  --> treereduce.out:6:16\r\n   |\r\n6  |             fn new() -> $outer {\r\n   |                ^^^\r\n...\r\n31 | link!(D, E);\r\n   | ----------- in this macro invocation\r\n   |\r\n   = note: this warning originates in the macro `link` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nwarning: associated function `new` is never used\r\n  --> treereduce.out:6:16\r\n   |\r\n6  |             fn new() -> $outer {\r\n   |                ^^^\r\n...\r\n32 | link!(E, F);\r\n   | ----------- in this macro invocation\r\n   |\r\n   = note: this warning originates in the macro `link` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nwarning: associated function `new` is never used\r\n  --> treereduce.out:6:16\r\n   |\r\n6  |             fn new() -> $outer {\r\n   |                ^^^\r\n...\r\n33 | link!(F, G);\r\n   | ----------- in this macro invocation\r\n   |\r\n   = note: this warning originates in the macro `link` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nwarning: associated function `new` is never used\r\n  --> treereduce.out:6:16\r\n   |\r\n6  |             fn new() -> $outer {\r\n   |                ^^^\r\n...\r\n34 | link!(G, H);\r\n   | ----------- in this macro invocation\r\n   |\r\n   = note: this warning originates in the macro `link` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nwarning: associated function `new` is never used\r\n  --> treereduce.out:6:16\r\n   |\r\n6  |             fn new() -> $outer {\r\n   |                ^^^\r\n...\r\n35 | link!(H, I);\r\n   | ----------- in this macro invocation\r\n   |\r\n   = note: this warning originates in the macro `link` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nwarning: associated function `new` is never used\r\n  --> treereduce.out:6:16\r\n   |\r\n6  |             fn new() -> $outer {\r\n   |                ^^^\r\n...\r\n36 | link!(I, J);\r\n   | ----------- in this macro invocation\r\n   |\r\n   = note: this warning originates in the macro `link` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nwarning: associated function `new` is never used\r\n  --> treereduce.out:6:16\r\n   |\r\n6  |             fn new() -> $outer {\r\n   |                ^^^\r\n...\r\n37 | link!(J, K);\r\n   | ----------- in this macro invocation\r\n   |\r\n   = note: this warning originates in the macro `link` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nwarning: associated function `new` is never used\r\n  --> treereduce.out:6:16\r\n   |\r\n6  |             fn new() -> $outer {\r\n   |                ^^^\r\n...\r\n38 | link!(K, Bottom);\r\n   | ---------------- in this macro invocation\r\n   |\r\n   = note: this warning originates in the macro `link` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n\r\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\r\n\r\nerror: internal compiler error: reached the recursion limit finding the struct tail for Bottom\r\n  |\r\n  = note: delayed at    0: <rustc_errors::HandlerInner>::emit_diagnostic\r\n             1: <rustc_errors::Handler>::delay_span_bug::<rustc_span::span_encoding::Span, &str>\r\n             2: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_argument_types\r\n             3: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_call\r\n             4: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n             5: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_block_with_expected\r\n             6: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n             7: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_return_expr\r\n             8: rustc_hir_typeck::check::check_fn\r\n             9: rustc_hir_typeck::typeck\r\n            10: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::typeck, rustc_query_impl::plumbing::QueryCtxt>\r\n            11: rustc_data_structures::sync::par_for_each_in::<&[rustc_span::def_id::LocalDefId], <rustc_middle::hir::map::Map>::par_body_owners<rustc_hir_typeck::typeck_item_bodies::{closure#0}>::{closure#0}>\r\n            12: rustc_hir_typeck::typeck_item_bodies\r\n            13: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::typeck_item_bodies, rustc_query_impl::plumbing::QueryCtxt>\r\n            14: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck_item_bodies\r\n            15: <rustc_session::session::Session>::time::<(), rustc_hir_analysis::check_crate::{closure#7}>\r\n            16: rustc_hir_analysis::check_crate\r\n            17: rustc_interface::passes::analysis\r\n            18: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n            19: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n            20: <rustc_middle::ty::context::GlobalCtxt>::enter::<rustc_driver_impl::run_compiler::{closure#1}::{closure#2}::{closure#4}, core::result::Result<(), rustc_span::ErrorGuaranteed>>\r\n            21: <rustc_interface::interface::Compiler>::enter::<rustc_driver_impl::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_span::ErrorGuaranteed>>\r\n            22: rustc_span::with_source_map::<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\r\n            23: std::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>\r\n            24: <<std::thread::Builder>::spawn_unchecked_<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>::{closure#1} as core::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n            25: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n                       at /rustc/13afbdaa0655dda23d7129e59ac48f1ec88b2084/library/alloc/src/boxed.rs:1988:9\r\n            26: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n                       at /rustc/13afbdaa0655dda23d7129e59ac48f1ec88b2084/library/alloc/src/boxed.rs:1988:9\r\n            27: std::sys::unix::thread::Thread::new::thread_start\r\n                       at /rustc/13afbdaa0655dda23d7129e59ac48f1ec88b2084/library/std/src/sys/unix/thread.rs:108:17\r\n            28: <unknown>\r\n            29: <unknown>\r\n\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.70.0-nightly (13afbdaa0 2023-03-17) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type lib\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: aborting due to 2 previous errors; 13 warnings emitted\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/109304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/109304/timeline", "performed_via_github_app": null, "state_reason": "completed"}