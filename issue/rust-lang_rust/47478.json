{"url": "https://api.github.com/repos/rust-lang/rust/issues/47478", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47478/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47478/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47478/events", "html_url": "https://github.com/rust-lang/rust/issues/47478", "id": 288767358, "node_id": "MDU6SXNzdWUyODg3NjczNTg=", "number": 47478, "title": "Weird behavior with closure lifetime inference", "user": {"login": "theemathas", "id": 6120103, "node_id": "MDQ6VXNlcjYxMjAxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/6120103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theemathas", "html_url": "https://github.com/theemathas", "followers_url": "https://api.github.com/users/theemathas/followers", "following_url": "https://api.github.com/users/theemathas/following{/other_user}", "gists_url": "https://api.github.com/users/theemathas/gists{/gist_id}", "starred_url": "https://api.github.com/users/theemathas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theemathas/subscriptions", "organizations_url": "https://api.github.com/users/theemathas/orgs", "repos_url": "https://api.github.com/users/theemathas/repos", "events_url": "https://api.github.com/users/theemathas/events{/privacy}", "received_events_url": "https://api.github.com/users/theemathas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-16T02:33:45Z", "updated_at": "2020-04-20T22:53:44Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "In the code below, I expect everything to compile, including the commented out code. However, the commented out code does not actually compile. In particular, I believe that adding `let foo = foo` should not affect whether the code compiles, and changing a temporary into a variable should not affect whether the code compiles. (I ran into this problem, or a variant of it, when troubleshooting a problem on the #rust-beginners IRC channel.)\r\n\r\n[Playground link](https://play.rust-lang.org/?gist=1768605487cd56aedffc6f7a91e8b58e&version=stable)\r\n```rust\r\nstruct Foo;\r\n\r\nfn go(x: &mut Foo) -> &mut Foo {x}\r\nfn fix_closure<'a, F: FnOnce() -> &'a mut Foo>(x: F) -> F { x }\r\nfn call<'a, F: FnOnce() -> &'a mut Foo>(x: F) -> &'a mut Foo { x() }\r\nfn id<T>(x: T) -> T { x }\r\n\r\nfn good1() {\r\n    let foo = &mut Foo;\r\n    let f = || {let foo = foo; go(foo)};\r\n    f();\r\n}\r\n\r\n/*\r\nfn bad1() {\r\n    let foo = &mut Foo;\r\n    let f = || go(foo);\r\n    f();\r\n}\r\n*/\r\n\r\nfn good2() {\r\n    let foo = &mut Foo;\r\n    let f = move || {let foo = foo; go(foo)};\r\n    f();\r\n}\r\n\r\n/*\r\nfn bad2() {\r\n    let foo = &mut Foo;\r\n    let f = move || go(foo);\r\n    f();\r\n}\r\n*/\r\n\r\nfn good3() {\r\n    let foo = &mut Foo;\r\n    call(|| go(foo));\r\n}\r\n\r\n/*\r\nfn bad3() {\r\n    let foo = &mut Foo;\r\n    let f = || go(foo);\r\n    call(f);\r\n}\r\n\r\nfn bad4() {\r\n    let foo = &mut Foo;\r\n    (|| go(foo))();\r\n}\r\n*/\r\n\r\nfn good4() {\r\n    let foo = &mut Foo;\r\n    let f = fix_closure(|| go(foo));\r\n    f();\r\n}\r\n\r\n/*\r\nfn bad5() {\r\n    let foo = &mut Foo;\r\n    let f = id(|| go(foo));\r\n    f();\r\n}\r\n*/\r\n\r\nfn main() {}\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47478/timeline", "performed_via_github_app": null, "state_reason": null}