{"url": "https://api.github.com/repos/rust-lang/rust/issues/82086", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82086/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82086/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82086/events", "html_url": "https://github.com/rust-lang/rust/issues/82086", "id": 807875464, "node_id": "MDU6SXNzdWU4MDc4NzU0NjQ=", "number": 82086, "title": "Add more information to E0599 for small changes that would make the trait bounds be satisfied", "user": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-02-14T02:48:31Z", "updated_at": "2021-02-14T02:48:45Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given\r\n\r\n```\r\nuse std::io::{BufRead, BufReader, Read, Write};\r\n\r\nfn issue_81421<T: Read + Write>(mut stream: T) {\r\n    let initial_message = format!(\"Hello world\");\r\n    let mut buffer: Vec<u8> = Vec::new();\r\n    let bytes_written = stream.write_all(initial_message.as_bytes());\r\n    let flush = stream.flush();\r\n\r\n    loop {\r\n        let mut stream_reader = BufReader::new(&stream);\r\n        //~^ ERROR the trait bound `&T: std::io::Read` is not satisfied [E0277]\r\n        //~| HELP consider removing the leading `&`-reference\r\n        //~| HELP consider changing this borrow's mutability\r\n        stream_reader.read_until(b'\\n', &mut buffer).expect(\"Reading into buffer failed\");\r\n        //~^ ERROR the method `read_until` exists for struct `BufReader<&T>`,\r\n    }\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\nwe currently emit\r\n\r\n```\r\n\r\nerror[E0599]: the method `read_until` exists for struct `BufReader<&T>`, but its trait bounds were not satisfied\r\n  --> $DIR/suggest-change-mut.rs:16:23\r\n   |\r\nLL |         stream_reader.read_until(b'\\n', &mut buffer).expect(\"Reading into buffer failed\");\r\n   |                       ^^^^^^^^^^ method cannot be called on `BufReader<&T>` due to unsatisfied trait bounds\r\n   | \r\n  ::: $SRC_DIR/std/src/io/buffered/bufreader.rs:LL:COL\r\n   |\r\nLL | pub struct BufReader<R> {\r\n   | ----------------------- doesn't satisfy `BufReader<&T>: BufRead`\r\n   |\r\n   = note: the following trait bounds were not satisfied:\r\n           `&T: std::io::Read`\r\n           which is required by `BufReader<&T>: BufRead`\r\n```\r\n\r\nIt would be nice if we mentioned _anywhere_ that `BufReader<&mut T>: BufRead` _is_ satisfied.\r\n\r\nCC https://github.com/rust-lang/rust/pull/81990", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82086/timeline", "performed_via_github_app": null, "state_reason": null}