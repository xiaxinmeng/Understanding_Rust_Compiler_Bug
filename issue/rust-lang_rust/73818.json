{"url": "https://api.github.com/repos/rust-lang/rust/issues/73818", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73818/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73818/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73818/events", "html_url": "https://github.com/rust-lang/rust/issues/73818", "id": 646785484, "node_id": "MDU6SXNzdWU2NDY3ODU0ODQ=", "number": 73818, "title": "Regression in associated type checking for default impls", "user": {"login": "jsmith628", "id": 16457715, "node_id": "MDQ6VXNlcjE2NDU3NzE1", "avatar_url": "https://avatars.githubusercontent.com/u/16457715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsmith628", "html_url": "https://github.com/jsmith628", "followers_url": "https://api.github.com/users/jsmith628/followers", "following_url": "https://api.github.com/users/jsmith628/following{/other_user}", "gists_url": "https://api.github.com/users/jsmith628/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsmith628/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsmith628/subscriptions", "organizations_url": "https://api.github.com/users/jsmith628/orgs", "repos_url": "https://api.github.com/users/jsmith628/repos", "events_url": "https://api.github.com/users/jsmith628/events{/privacy}", "received_events_url": "https://api.github.com/users/jsmith628/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1472579062, "node_id": "MDU6TGFiZWwxNDcyNTc5MDYy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-specialization", "name": "F-specialization", "color": "f9c0cc", "default": false, "description": "`#![feature(specialization)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-27T23:01:32Z", "updated_at": "2020-07-26T01:20:10Z", "closed_at": "2020-07-26T01:20:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\nSo I had a trait system in my (nightly) code for a while now that utilized specialization, but it no longer seems to be working after a recent update:\r\n\r\n```rust\r\n#![feature(specialization)]\r\n\r\ntrait Trait1 { type Selection: PartialEq; }\r\n\r\ntrait Trait2: PartialEq<Self> {}\r\nimpl<T:Trait2> Trait1 for T { default type Selection = T; }\r\n```\r\n```\r\nwarning: the feature `specialization` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/main.rs:1:12\r\n  |\r\n1 | #![feature(specialization)]\r\n  |            ^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #31844 <https://github.com/rust-lang/rust/issues/31844> for more information\r\n\r\nerror[E0277]: can't compare `T` with `<T as Trait1>::Selection`\r\n --> src/main.rs:6:31\r\n  |\r\n3 | trait Trait1 { type Selection: PartialEq; }\r\n  |                -------------------------- required by `Trait1::Selection`\r\n...\r\n6 | impl<T:Trait2> Trait1 for T { default type Selection = T; }\r\n  |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ no implementation for `T == <T as Trait1>::Selection`\r\n  |\r\n  = help: the trait `std::cmp::PartialEq<<T as Trait1>::Selection>` is not implemented for `T`\r\nhelp: consider further restricting this bound\r\n  |\r\n6 | impl<T:Trait2 + std::cmp::PartialEq<<T as Trait1>::Selection>> Trait1 for T { default type Selection = T; }\r\n  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to previous error; 1 warning emitted\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\n```\r\n\r\nNow, I haven't been following the development of the specialization feature too closely, so it _is_ possible that this is somehow actually intended and I am missing something. However, given that this previously compiled and ran just fine a couple weeks ago and given that the specialization incomplete warning was only added recently, I am inclined to think that it is probably a regression of some sort.\r\n\r\n### Meta things\r\n\r\ncompiler version:\r\n```\r\n$rustc --version --verbose\r\nrustc 1.46.0-nightly (7750c3d46 2020-06-26)\r\nbinary: rustc\r\ncommit-hash: 7750c3d46bc19784adb1ee6e37a5ec7e4cd7e772\r\ncommit-date: 2020-06-26\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.46.0-nightly\r\nLLVM version: 10.0\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73818/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73818/timeline", "performed_via_github_app": null, "state_reason": "completed"}