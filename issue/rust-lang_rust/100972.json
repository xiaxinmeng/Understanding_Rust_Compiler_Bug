{"url": "https://api.github.com/repos/rust-lang/rust/issues/100972", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/100972/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/100972/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/100972/events", "html_url": "https://github.com/rust-lang/rust/issues/100972", "id": 1350023697, "node_id": "I_kwDOAAsO6M5Qd7oR", "number": 100972, "title": "Trying to return `c_void` should suggest to return `()` instead", "user": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-08-24T21:09:29Z", "updated_at": "2022-11-27T18:37:59Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "e.g. [this irlo thread](https://internals.rust-lang.org/t/allow-returning-t-where-t-default/17223?u=cad97) was likely the result of someone translating a `void`-returning C function to a `c_void`-returning Rust function.\n\nGiven the following:\n\n```rust\npub fn example() -> core::ffi::c_void {\n}\n```\n\nThe current output is:\n\n```rust\nerror[E0308]: mismatched types\n --> src/lib.rs:1:21\n  |\n1 | pub fn example() -> core::ffi::c_void {\n  |        -------      ^^^^^^^^^^^^^^^^^ expected enum `c_void`, found `()`\n  |        |\n  |        implicitly returns `()` as its body has no tail or `return` expression\n```\n\nIdeally, this should also contain a help message along the lines of\n\n```rust\nhelp = returning void in C is the same as returning () in Rust\n```\n\nand a suggestion to remove the `-> c_void`.\n\n----\n\nIt might be reasonable to have this as a dedicated warning lint for `-> c_void` either instead of or in addition to help on the type mismatch error, as writing bindings to `extern \"C\" { fn foo() -> c_void; }` is wrong but won't get a type mismatch error. This probably should go straight to a rustc lint rather than in clippy due to the practically-100% applicability.\n\n----\n\nIt might also be beneficial to do more thorough linting of misuse of `c_void` (basically any use that isn't `*mut c_void` or `*const c_void` (or *maybe* `ptr::NonNull<c_void>`), but that is a separate issue from teaching in this error.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"czzrr\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/100972/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/100972/timeline", "performed_via_github_app": null, "state_reason": null}