{"url": "https://api.github.com/repos/rust-lang/rust/issues/38145", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/38145/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/38145/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/38145/events", "html_url": "https://github.com/rust-lang/rust/issues/38145", "id": 193306055, "node_id": "MDU6SXNzdWUxOTMzMDYwNTU=", "number": 38145, "title": "ICE: unexpected definition", "user": {"login": "mzji", "id": 23279426, "node_id": "MDQ6VXNlcjIzMjc5NDI2", "avatar_url": "https://avatars.githubusercontent.com/u/23279426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzji", "html_url": "https://github.com/mzji", "followers_url": "https://api.github.com/users/mzji/followers", "following_url": "https://api.github.com/users/mzji/following{/other_user}", "gists_url": "https://api.github.com/users/mzji/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzji/subscriptions", "organizations_url": "https://api.github.com/users/mzji/orgs", "repos_url": "https://api.github.com/users/mzji/repos", "events_url": "https://api.github.com/users/mzji/events{/privacy}", "received_events_url": "https://api.github.com/users/mzji/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-12-03T18:35:14Z", "updated_at": "2017-02-16T21:18:48Z", "closed_at": "2017-02-16T21:18:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "The code breaking compiler:\r\n```rust\r\nextern crate byteorder;\r\n\r\nuse std::io::Result;\r\n\r\nuse byteorder::{ByteOrder, WriteBytesExt};\r\n\r\npub trait GenericWriteBytesMarker: Sized {}\r\n\r\nimpl GenericWriteBytesMarker for u16 {}\r\n\r\npub trait GenericWriteBytesExt<T>: WriteBytesExt\r\n    where T: GenericWriteBytesMarker\r\n{\r\n    fn write_val<BO>(&mut self, val: &T) -> Result<()> where BO: ByteOrder;\r\n}\r\n\r\nimpl<W: WriteBytesExt + ?Sized> GenericWriteBytesExt<u16> for W {\r\n    #[inline]\r\n    fn write_val<BO>(&mut self, val: &u16) -> Result<()> where BO: ByteOrder {\r\n        self.write_u16::<BO>(*val)\r\n    }\r\n}\r\n\r\npub trait ArrayOrVec: Sized {\r\n    type V: GenericWriteBytesMarker + Sized;\r\n\r\n    fn len(&self) -> usize;\r\n    fn to_slice(&self) -> &[Self::V];\r\n}\r\n\r\n#[derive(Clone)]\r\npub enum ArrayTwoU16OrVecU16 {\r\n    Array([u16; 2]),\r\n    Vec(Vec<u16>),\r\n}\r\n\r\nimpl ArrayOrVec for ArrayTwoU16OrVecU16 {\r\n    type V = u16;\r\n\r\n    #[inline]\r\n    fn len(&self) -> usize {\r\n        match self {\r\n            &ArrayTwoU16OrVecU16::Array(array) => array.len(),\r\n            &ArrayTwoU16OrVecU16::Vec(ref vec) => vec.len(),\r\n        }\r\n    }\r\n\r\n    #[inline]\r\n    fn to_slice(&self) -> &[u16] {\r\n        match self {\r\n            &ArrayTwoU16OrVecU16::Array(ref array) => array,\r\n            &ArrayTwoU16OrVecU16::Vec(ref vec) => vec.as_slice(),\r\n        }\r\n    }\r\n}\r\n\r\nimpl<AOV: ArrayOrVec> GenericWriteBytesMarker for AOV {} \r\n\r\nimpl<W: WriteBytesExt + ?Sized, AOV: ArrayOrVec + Sized>\r\n    GenericWriteBytesExt<AOV> for W\r\n{\r\n    fn write_val<BO>(&mut self, aov: &AOV) -> Result<()>\r\n        where BO: ByteOrder\r\n    {\r\n        for val in aov.to_slice() {\r\n            GenericWriteBytesExt<AOV::V>::write_val::<BO>(&mut self, val)?\r\n        };\r\n        Ok(())\r\n    }\r\n}\r\n\r\n// With the following code, the compiler works well:\r\n/*\r\nimpl GenericWriteBytesMarker for ArrayTwoU16OrVecU16 {}\r\n\r\nimpl<W: WriteBytesExt + ?Sized> GenericWriteBytesExt<ArrayTwoU16OrVecU16> for W\r\n{\r\n    fn write_val<BO>(&mut self, aov: &ArrayTwoU16OrVecU16) -> Result<()>\r\n        where BO: ByteOrder\r\n    {\r\n        for &val in aov.to_slice() {\r\n            self.write_val::<BO>(&val)?\r\n        };\r\n        Ok(())\r\n    }\r\n}\r\n*/\r\n\r\nfn main() {\r\n    println!(\"Hello, world!\");\r\n}\r\n```\r\nCargo.toml\r\n```toml\r\n[package]\r\nname = \"compiler_confirm\"\r\nversion = \"0.1.0\"\r\nauthors = [\"mzji\"]\r\n\r\n[dependencies]\r\nbyteorder = \"0.5.3\"\r\n```\r\nThe output of the compiler:\r\n```\r\nRunning \"cargo build\":\r\n   Compiling compiler_confirm v0.1.0 (file:///C:/Users/MYUSERNAME/Documents/Rust/compiler_confirm)\r\nerror: chained comparison operators require parentheses\r\n  --> src\\main.rs:66:33\r\n   |\r\n66 |             GenericWriteBytesExt<AOV::V>::write_val::<BO>(&mut self, val)?\r\n   |                                 ^^^^^^^^^^\r\n   |\r\n   = help: use `::<...>` instead of `<...>` if you meant to specify type arguments\r\n\r\nerror[E0425]: unresolved name `GenericWriteBytesExt`\r\n  --> src\\main.rs:66:13\r\n   |\r\n66 |             GenericWriteBytesExt<AOV::V>::write_val::<BO>(&mut self, val)?\r\n   |             ^^^^^^^^^^^^^^^^^^^^ unresolved name\r\n   |\r\n   = help: trait `GenericWriteBytesExt` cannot be used as an expression\r\n\r\nerror[E0425]: unresolved name `write_val`\r\n  --> src\\main.rs:66:41\r\n   |\r\n66 |             GenericWriteBytesExt<AOV::V>::write_val::<BO>(&mut self, val)?\r\n   |                                         ^^^^^^^^^^^^^^^^^ did you mean to call `self.write_val`?\r\n\r\nerror: internal compiler error: ../src/librustc_typeck\\check/mod.rs:4383: unexpected definition: AssociatedTy(DefId { krate: CrateNum(0), node: DefIndex(24) => compiler_confirm/2b369f45766dcbe5ff5c2c5ae6ed4704-exe::ArrayOrVec[0]::V[0] })\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: run with `RUST_BACKTRACE=1` for a backtrace\r\n\r\nthread 'rustc' panicked at 'Box<Any>', ../src/librustc_errors/lib.rs:424\r\nstack backtrace:\r\n   0:     0x7ffa908802fa - std::panicking::Location::line::h9363ce800e842170\r\n   1:     0x7ffa9087f784 - std::panicking::Location::line::h9363ce800e842170\r\n   2:     0x7ffa908831dd - std::panicking::rust_panic_with_hook::ha5aed1dfc0e220e3\r\n   3:     0x7ffaa2732910 - <unknown>\r\n   4:     0x7ffaa274900e - rustc_errors::Handler::bug::h620f7270292f0095\r\n   5:     0x7ffa8e873355 - rustc::session::bug_fmt::he2d2f00a4afa9d1e\r\n   6:     0x7ffa8e87318a - rustc::session::bug_fmt::he2d2f00a4afa9d1e\r\n   7:     0x7ffa8e8728fc - rustc::session::bug_fmt::he2d2f00a4afa9d1e\r\n   8:     0x7ffa8ee75aca - rustc_typeck::check::FnCtxt::instantiate_value_path::h4229ac945aebfa55\r\n   9:     0x7ffa8ee5fb2e - rustc_typeck::check::FnCtxt::check_struct_path::hd07032c88b73af38\r\n  10:     0x7ffa8ee5e551 - rustc_typeck::check::FnCtxt::check_struct_path::hd07032c88b73af38\r\n  11:     0x7ffa8ee350ce - rustc_typeck::check::op::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::check_binop::h5bae574a47e9d682\r\n  12:     0x7ffa8ee34557 - rustc_typeck::check::op::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::check_binop::h5bae574a47e9d682\r\n  13:     0x7ffa8ee5ed24 - rustc_typeck::check::FnCtxt::check_struct_path::hd07032c88b73af38\r\n  14:     0x7ffa8ee5e551 - rustc_typeck::check::FnCtxt::check_struct_path::hd07032c88b73af38\r\n  15:     0x7ffa8ee34457 - rustc_typeck::check::op::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::check_binop::h5bae574a47e9d682\r\n  16:     0x7ffa8ee5ed24 - rustc_typeck::check::FnCtxt::check_struct_path::hd07032c88b73af38\r\n  17:     0x7ffa8ee5e551 - rustc_typeck::check::FnCtxt::check_struct_path::hd07032c88b73af38\r\n  18:     0x7ffa8ee742a3 - rustc_typeck::check::FnCtxt::check_block_no_value::h3ac235dc3eaa76c3\r\n  19:     0x7ffa8ee5ea3e - rustc_typeck::check::FnCtxt::check_struct_path::hd07032c88b73af38\r\n  20:     0x7ffa8ee5e551 - rustc_typeck::check::FnCtxt::check_struct_path::hd07032c88b73af38\r\n  21:     0x7ffa8edd8fc4 - rustc_typeck::check::_match::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::check_match::h54f69213176d4c8f\r\n  22:     0x7ffa8ee5ed72 - rustc_typeck::check::FnCtxt::check_struct_path::hd07032c88b73af38\r\n  23:     0x7ffa8ee5e551 - rustc_typeck::check::FnCtxt::check_struct_path::hd07032c88b73af38\r\n  24:     0x7ffa8ee742a3 - rustc_typeck::check::FnCtxt::check_block_no_value::h3ac235dc3eaa76c3\r\n  25:     0x7ffa8ee5ebe3 - rustc_typeck::check::FnCtxt::check_struct_path::hd07032c88b73af38\r\n  26:     0x7ffa8ee5e551 - rustc_typeck::check::FnCtxt::check_struct_path::hd07032c88b73af38\r\n  27:     0x7ffa8edd8fc4 - rustc_typeck::check::_match::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::check_match::h54f69213176d4c8f\r\n  28:     0x7ffa8ee5ed72 - rustc_typeck::check::FnCtxt::check_struct_path::hd07032c88b73af38\r\n  29:     0x7ffa8ee5e551 - rustc_typeck::check::FnCtxt::check_struct_path::hd07032c88b73af38\r\n  30:     0x7ffa8ee73a9f - rustc_typeck::check::FnCtxt::check_decl_initializer::h43ea4d26b2a62ae8\r\n  31:     0x7ffa8ee73beb - rustc_typeck::check::FnCtxt::check_decl_local::h15d42ee7f4d79e8d\r\n  32:     0x7ffa8ee73f37 - rustc_typeck::check::FnCtxt::check_stmt::h155d968e61fdfae6\r\n  33:     0x7ffa8ee7426e - rustc_typeck::check::FnCtxt::check_block_no_value::h3ac235dc3eaa76c3\r\n  34:     0x7ffa8ee5ea3e - rustc_typeck::check::FnCtxt::check_struct_path::hd07032c88b73af38\r\n  35:     0x7ffa8ee5e551 - rustc_typeck::check::FnCtxt::check_struct_path::hd07032c88b73af38\r\n  36:     0x7ffa8ee73eab - rustc_typeck::check::FnCtxt::check_stmt::h155d968e61fdfae6\r\n  37:     0x7ffa8ee7426e - rustc_typeck::check::FnCtxt::check_block_no_value::h3ac235dc3eaa76c3\r\n  38:     0x7ffa8ee5ea3e - rustc_typeck::check::FnCtxt::check_struct_path::hd07032c88b73af38\r\n  39:     0x7ffa8ee5e551 - rustc_typeck::check::FnCtxt::check_struct_path::hd07032c88b73af38\r\n  40:     0x7ffa8ee3e32c - <rustc_typeck::check::GatherLocalsVisitor<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_ty::hdcba5921c886305a\r\n  41:     0x7ffa8ee3c68b - rustc_typeck::check::check_drop_impls::hb6e6926f4342f9e2\r\n  42:     0x7ffa8ee40a06 - rustc_typeck::check::check_item_body::h1e039ede2f960fb9\r\n  43:     0x7ffa8ee3936d - rustc_typeck::check::check_item_bodies::hd22adb7703cc56d7\r\n  44:     0x7ffa8eec01d0 - rustc_typeck::check_crate::h92f6bdfe03b6afba\r\n  45:     0x7ffa917db10e - rustc_driver::driver::count_nodes::h84f03318ea2320a8\r\n  46:     0x7ffa9172f92b - <unknown>\r\n  47:     0x7ffa917b7316 - rustc_driver::driver::compile_input::h8e119234b60571d5\r\n  48:     0x7ffa918088c7 - rustc_driver::run_compiler::hbdfc4f84e2e0f4b9\r\n  49:     0x7ffa916ed6ae - <unknown>\r\n  50:     0x7ffa90885c11 - _rust_maybe_catch_panic\r\n  51:     0x7ffa91717134 - <unknown>\r\n  52:     0x7ffa9087d84e - std::sys::imp::thread::Thread::new::h6aed1fb5ec32a04f\r\n  53:     0x7ffac1388363 - BaseThreadInitThunk\r\n\r\nerror: Could not compile `compiler_confirm`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n\"cargo build\" completed with code 101\r\nIt took approximately 0.712 seconds\r\n```\r\nrustc info:\r\n```\r\nrustc 1.15.0-nightly (1c448574b 2016-11-28)\r\nbinary: rustc\r\ncommit-hash: 1c448574bc668b0de70ed75223bf8798d17bf058\r\ncommit-date: 2016-11-28\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.15.0-nightly\r\nLLVM version: 3.9\r\n```", "closed_by": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/38145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/38145/timeline", "performed_via_github_app": null, "state_reason": "completed"}