{"url": "https://api.github.com/repos/rust-lang/rust/issues/54589", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/54589/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/54589/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/54589/events", "html_url": "https://github.com/rust-lang/rust/issues/54589", "id": 364070410, "node_id": "MDU6SXNzdWUzNjQwNzA0MTA=", "number": 54589, "title": "no_std project broken after 9/15 nightly", "user": {"login": "Visic", "id": 2312662, "node_id": "MDQ6VXNlcjIzMTI2NjI=", "avatar_url": "https://avatars.githubusercontent.com/u/2312662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Visic", "html_url": "https://github.com/Visic", "followers_url": "https://api.github.com/users/Visic/followers", "following_url": "https://api.github.com/users/Visic/following{/other_user}", "gists_url": "https://api.github.com/users/Visic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Visic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Visic/subscriptions", "organizations_url": "https://api.github.com/users/Visic/orgs", "repos_url": "https://api.github.com/users/Visic/repos", "events_url": "https://api.github.com/users/Visic/events{/privacy}", "received_events_url": "https://api.github.com/users/Visic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-26T14:49:30Z", "updated_at": "2018-09-26T17:34:38Z", "closed_at": "2018-09-26T17:34:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "The code below compiles using the 9/15 nightly (nightly-2018-09-15-i686-pc-windows-msvc), but fails to compile since then.\r\n\r\n----Code---------------------------------------------------------------------\r\n```\r\n#![no_std]\r\n#![feature(lang_items, alloc_system, alloc_error_handler)]\r\n\r\nextern crate alloc_system;\r\n\r\nuse alloc_system::System;\r\nuse alloc::boxed::Box;\r\nuse alloc::vec::Vec;\r\nuse core::panic::PanicInfo;\r\n\r\n#[global_allocator] static GLOBAL: System = System;\r\n#[alloc_error_handler] #[no_mangle] pub extern \"C\" fn alloc_error(_: core::alloc::Layout) -> ! { loop {} }\r\n#[panic_handler] #[no_mangle] pub extern \"C\" fn panic(_info: &PanicInfo) -> ! { loop {} }\r\n#[lang = \"eh_personality\"] #[no_mangle] pub extern \"C\" fn eh_personality() {}\r\n\r\n#[no_mangle]\r\npub fn hello_world_in_rust() -> i32 {\r\n    let _: Box<[u8]> = Box::new([0; 10]);\r\n    let _: [i32; 3] = [0,1,2];\r\n    let _: Vec<i32> = Vec::new();\r\n    100\r\n}\r\n```\r\n\r\n----Cargo.toml--------------------------------------------------------------------\r\n```\r\n[package]\r\nedition = '2018'\r\nname = \"test_lib\"\r\nversion = \"0.1.0\"\r\nauthors = (removed)\r\n\r\n[lib]\r\nname = \"test_lib\"\r\npath = \"src/lib.rs\"\r\ncrate-type = [\"staticlib\"]\r\n\r\n[dependencies]\r\n```\r\n\r\n----Build Output---------------------------------------------------------------------\r\n\r\n> PS D:\\Dev\\MyProjects\\Rust\\test_lib> cargo build --release\r\n>    Compiling test_lib v0.1.0 (D:\\Dev\\MyProjects\\Rust\\test_lib)\r\n> error[E0433]: failed to resolve. Could not find `alloc` in `{{root}}`\r\n>  --> src/lib.rs:7:5\r\n>   |\r\n> 7 | use alloc::boxed::Box;\r\n>   |     ^^^^^ Could not find `alloc` in `{{root}}`\r\n> \r\n> error[E0433]: failed to resolve. Could not find `alloc` in `{{root}}`\r\n>  --> src/lib.rs:8:5\r\n>   |\r\n> 8 | use alloc::vec::Vec;\r\n>   |     ^^^^^ Could not find `alloc` in `{{root}}`\r\n> \r\n> error[E0432]: unresolved import `alloc_system`\r\n>  --> src/lib.rs:6:5\r\n>   |\r\n> 6 | use alloc_system::System;\r\n>   |     ^^^^^^^^^^^^ Did you mean `self::alloc_system`?\r\n> \r\n> error[E0433]: failed to resolve. Use of undeclared type or module `Box`\r\n>   --> src/lib.rs:18:24\r\n>    |\r\n> 18 |     let _: Box<[u8]> = Box::new([0; 10]);\r\n>    |                        ^^^ Use of undeclared type or module `Box`\r\n> \r\n> error[E0433]: failed to resolve. Use of undeclared type or module `Vec`\r\n>   --> src/lib.rs:20:23\r\n>    |\r\n> 20 |     let _: Vec<i32> = Vec::new();\r\n>    |                       ^^^ Use of undeclared type or module `Vec`\r\n> \r\n> error[E0412]: cannot find type `Box` in this scope\r\n>   --> src/lib.rs:18:12\r\n>    |\r\n> 18 |     let _: Box<[u8]> = Box::new([0; 10]);\r\n>    |            ^^^ not found in this scope\r\n> help: possible candidates are found in other modules, you can import them into scope\r\n>    |\r\n> 6  | use std::boxed::Box;\r\n>    |\r\n> 6  | use std::prelude::v1::Box;\r\n>    |\r\n> \r\n> error[E0412]: cannot find type `Vec` in this scope\r\n>   --> src/lib.rs:20:12\r\n>    |\r\n> 20 |     let _: Vec<i32> = Vec::new();\r\n>    |            ^^^ not found in this scope\r\n> help: possible candidates are found in other modules, you can import them into scope\r\n>    |\r\n> 6  | use std::prelude::v1::Vec;\r\n>    |\r\n> 6  | use std::vec::Vec;\r\n>    |\r\n> \r\n> warning: unused import: `alloc::boxed::Box`\r\n>  --> src/lib.rs:7:5\r\n>   |\r\n> 7 | use alloc::boxed::Box;\r\n>   |     ^^^^^^^^^^^^^^^^^\r\n>   |\r\n>   = note: #[warn(unused_imports)] on by default\r\n> \r\n> warning: unused import: `alloc::vec::Vec`\r\n>  --> src/lib.rs:8:5\r\n>   |\r\n> 8 | use alloc::vec::Vec;\r\n>   |     ^^^^^^^^^^^^^^^\r\n> \r\n> error[E0152]: duplicate lang item found: `oom`.\r\n>   --> src/lib.rs:12:37\r\n>    |\r\n> 12 | #[alloc_error_handler] #[no_mangle] pub extern \"C\" fn alloc_error(_: core::alloc::Layout) -> ! { loop {} }\r\n>    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n>    |\r\n>    = note: first defined in crate `std`.\r\n> \r\n> error[E0152]: duplicate lang item found: `panic_impl`.\r\n>   --> src/lib.rs:13:31\r\n>    |\r\n> 13 | #[panic_handler] #[no_mangle] pub extern \"C\" fn panic(_info: &PanicInfo) -> ! { loop {} }\r\n>    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n>    |\r\n>    = note: first defined in crate `std`.\r\n> \r\n> error[E0152]: duplicate lang item found: `eh_personality`.\r\n>   --> src/lib.rs:14:41\r\n>    |\r\n> 14 | #[lang = \"eh_personality\"] #[no_mangle] pub extern \"C\" fn eh_personality() {}\r\n>    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n>    |\r\n>    = note: first defined in crate `panic_unwind`.\r\n> \r\n> error: aborting due to 10 previous errors\r\n> \r\n> Some errors occurred: E0152, E0412, E0432, E0433.\r\n> For more information about an error, try `rustc --explain E0152`.\r\n> error: Could not compile `test_lib`.\r\n> \r\n> To learn more, run the command again with --verbose.", "closed_by": {"login": "Visic", "id": 2312662, "node_id": "MDQ6VXNlcjIzMTI2NjI=", "avatar_url": "https://avatars.githubusercontent.com/u/2312662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Visic", "html_url": "https://github.com/Visic", "followers_url": "https://api.github.com/users/Visic/followers", "following_url": "https://api.github.com/users/Visic/following{/other_user}", "gists_url": "https://api.github.com/users/Visic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Visic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Visic/subscriptions", "organizations_url": "https://api.github.com/users/Visic/orgs", "repos_url": "https://api.github.com/users/Visic/repos", "events_url": "https://api.github.com/users/Visic/events{/privacy}", "received_events_url": "https://api.github.com/users/Visic/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/54589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/54589/timeline", "performed_via_github_app": null, "state_reason": "completed"}