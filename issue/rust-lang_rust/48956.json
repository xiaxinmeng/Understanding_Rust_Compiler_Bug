{"url": "https://api.github.com/repos/rust-lang/rust/issues/48956", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48956/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48956/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48956/events", "html_url": "https://github.com/rust-lang/rust/issues/48956", "id": 304493092, "node_id": "MDU6SXNzdWUzMDQ0OTMwOTI=", "number": 48956, "title": "The `offset_of!` macro may need to be a compiler intrinsic", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-12T18:39:47Z", "updated_at": "2019-10-21T13:08:14Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This came up a few weeks ago in libs triage specifically related to https://github.com/rust-lang/rust/issues/48493 where we were wondering if there were other locations in the standard library that needed to be adjusted to handle uninhabited enums being handled in generic locations. While not many locations in the standard library leapt to mind one thing we thought of was the `offset_of!` macro. \r\n\r\nFor example if we've got something like:\r\n\r\n```rust\r\nstruct Foo<T> { a: T, b: usize }\r\n```\r\n\r\ndo existing `offset_of!` macros handle this?\r\n\r\n```rust\r\noffset_of!(Foo<Void>, b)\r\n```\r\n\r\nor is there \"technical UB that rustc may paper over today\" somewhere in there? \r\n\r\ncc @dtolnay, I think you had better ideas about examples here than I!", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48956/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48956/timeline", "performed_via_github_app": null, "state_reason": null}