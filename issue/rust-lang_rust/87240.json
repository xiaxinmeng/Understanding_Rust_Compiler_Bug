{"url": "https://api.github.com/repos/rust-lang/rust/issues/87240", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87240/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87240/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87240/events", "html_url": "https://github.com/rust-lang/rust/issues/87240", "id": 946940808, "node_id": "MDU6SXNzdWU5NDY5NDA4MDg=", "number": 87240, "title": "Constructing `Option<&'static dyn T>::None` in a `const fn` requires `const_fn_trait_bounds`", "user": {"login": "cceckman", "id": 861696, "node_id": "MDQ6VXNlcjg2MTY5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/861696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cceckman", "html_url": "https://github.com/cceckman", "followers_url": "https://api.github.com/users/cceckman/followers", "following_url": "https://api.github.com/users/cceckman/following{/other_user}", "gists_url": "https://api.github.com/users/cceckman/gists{/gist_id}", "starred_url": "https://api.github.com/users/cceckman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cceckman/subscriptions", "organizations_url": "https://api.github.com/users/cceckman/orgs", "repos_url": "https://api.github.com/users/cceckman/repos", "events_url": "https://api.github.com/users/cceckman/events{/privacy}", "received_events_url": "https://api.github.com/users/cceckman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-07-18T03:06:56Z", "updated_at": "2021-10-08T06:29:19Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "> Thank you for filing a bug report! \ud83d\udc1b\r\n\r\nThank you for continuing to improve Rust!\r\n\r\n---\r\n\r\nGiven the following code: [playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=368bc1495ce529ba04b340a6b6f4823e)\r\n\r\n```rust\r\ntrait Irrelevant {}\r\n\r\nstruct Buffer {\r\n    ptr: Option<&'static dyn Irrelevant>,\r\n}\r\n\r\nimpl Buffer {\r\n    pub const fn new() -> Self {\r\n        Buffer {\r\n            ptr: None,\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\r\n  --> src/lib.rs:10:18\r\n   |\r\n10 |             ptr: None,\r\n   |                  ^^^^\r\n   |\r\n   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0658`.\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nAfter reading this message and reading #57563, I'm not sure **what trait bound is a problem**. The code that is literally written here does not have any trait bounds - no syntax `R: T`; nor does it have any (explicit) generic `const fn`.\r\n\r\nI assume there is a good reason why this doesn't immediately work - I know the Rust team has put tons of work into making all this analysis correct, so this is not a complaint about the analysis. :-) I'm just not sure how to go from the compiler's message to an action other than \"switch to nightly\".\r\n\r\n(I can confirm that switching to nightly and enabling `#![feature(const_fn_trait_bounds)]` does quiet the warning. It's not clear to me what more-specific issue than #57563 is tracking it?)\r\n\r\n---\r\n\r\nExperiments / speculation:\r\n\r\nI'm assuming there's some sort of desugaring here that's causing a trait bound to appear - e.g. the `None` constructor becoming a `const fn` (per #61456) , and something in the `Option`'s generic argument turning into a trait bound. However, `Option<T>` itself doesn't have any trait bounds on `T` (...other than the default `Sized`, which the error message says is OK), so I'm not sure what to change.\r\n\r\nSome experimenting shows that `Option<&static T>` its OK for a built-in `T`:\r\n\r\n```\r\ntrait Irrelevant {}\r\n\r\nstruct Buffer {\r\n    ptr: Option<&'static usize>,\r\n}\r\n\r\nimpl Buffer {\r\n    pub const fn new() -> Self {\r\n        Buffer {\r\n            ptr: None,\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n[compiles on stable (1.53.0)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=32edf652e3306068cbaa4bf3c213ba4a).\r\n\r\nAnd even using a different `?Sized` type - `[u8]` - works out alright:\r\n\r\n```\r\ntrait Irrelevant {}\r\n\r\nstruct Buffer {\r\n    ptr: Option<&'static [u8]>,\r\n}\r\n\r\nimpl Buffer {\r\n    pub const fn new() -> Self {\r\n        Buffer {\r\n            ptr: None,\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n[compiles as well](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=a0987889d12cfaeab1682c21f3339267).\r\n\r\nThat's based on a not-great understanding of `Sized` - if I understand correctly both `dyn T` and `[u8]` are `?Sized`.\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87240/timeline", "performed_via_github_app": null, "state_reason": null}