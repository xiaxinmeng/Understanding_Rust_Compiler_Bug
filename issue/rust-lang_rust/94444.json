{"url": "https://api.github.com/repos/rust-lang/rust/issues/94444", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94444/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94444/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94444/events", "html_url": "https://github.com/rust-lang/rust/issues/94444", "id": 1153806864, "node_id": "I_kwDOAAsO6M5ExbIQ", "number": 94444, "title": "compiler panic on \"this enum variant takes 1 argument but 2 arguments were supplied\"", "user": {"login": "leoleoasd", "id": 37735580, "node_id": "MDQ6VXNlcjM3NzM1NTgw", "avatar_url": "https://avatars.githubusercontent.com/u/37735580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoleoasd", "html_url": "https://github.com/leoleoasd", "followers_url": "https://api.github.com/users/leoleoasd/followers", "following_url": "https://api.github.com/users/leoleoasd/following{/other_user}", "gists_url": "https://api.github.com/users/leoleoasd/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoleoasd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoleoasd/subscriptions", "organizations_url": "https://api.github.com/users/leoleoasd/orgs", "repos_url": "https://api.github.com/users/leoleoasd/repos", "events_url": "https://api.github.com/users/leoleoasd/events{/privacy}", "received_events_url": "https://api.github.com/users/leoleoasd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-02-28T08:40:08Z", "updated_at": "2022-03-02T01:54:50Z", "closed_at": "2022-03-02T01:54:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nhttps://github.com/leoleoasd/ptranse/blob/6e7d647a2ea77af904c461df7df6a9067c76809f/src/process.rs#L90\r\n\r\nSorry, I'm new to rust and I can't provide a more minimized example. Commenting this line out and everything works fine.\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.61.0-nightly (68369a041 2022-02-22)\r\nbinary: rustc\r\ncommit-hash: 68369a041cea809a87e5bd80701da90e0e0a4799\r\ncommit-date: 2022-02-22\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.61.0-nightly\r\nLLVM version: 14.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.61.0-nightly (68369a041 2022-02-22) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -C opt-level=3 -C embed-bitcode=no\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `process::process`\r\n#1 [typeck] type-checking `process::process::{closure#0}`\r\n#2 [typeck_item_bodies] type-checking all item bodies\r\n#3 [analysis] running analysis passes on this crate\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n  Compiling ptranse v0.1.0 (/home/leo/code/ptranse)\r\nwarning: unused imports: `ProgressIterator`, `ProgressStyle`\r\n --> src/process.rs:8:30\r\n  |\r\n8 | use indicatif::{ProgressBar, ProgressStyle, ProgressIterator};\r\n  |                              ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(unused_imports)]` on by default\r\n\r\nerror: internal compiler error: compiler/rustc_typeck/src/check/fn_ctxt/_impl.rs:318:26: while adjusting Expr { hir_id: HirId { owner: DefId(0:50 ~ ptranse[60bd]::process::process), local_id: 761 }, kind: MethodCall(PathSegment { ident: take#0, hir_id: Some(HirId { owner: DefId(0:50 ~ ptranse[60bd]::process::process), local_id: 755 }), res: Some(Err), args: None, infer_args: true }, [Expr { hir_id: HirId { owner: DefId(0:50 ~ ptranse[60bd]::process::process), local_id: 759 }, kind: MethodCall(PathSegment { ident: iter#0, hir_id: Some(HirId { owner: DefId(0:50 ~ ptranse[60bd]::process::process), local_id: 756 }), res: Some(Err), args: None, infer_args: true }, [Expr { hir_id: HirId { owner: DefId(0:50 ~ ptranse[60bd]::process::process), local_id: 758 }, kind: Path(Resolved(None, Path { span: src/process.rs:90:31: 90:32 (#0), res: Local(HirId { owner: DefId(0:50 ~ ptranse[60bd]::process::process), local_id: 748 }), segments: [PathSegment { ident: t#0, hir_id: Some(HirId { owner: DefId(0:50 ~ ptranse[60bd]::process::process), local_id: 757 }), res: Some(Local(HirId { owner: DefId(0:50 ~ ptranse[60bd]::process::process), local_id: 748 })), args: None, infer_args: true }] })), span: src/process.rs:90:31: 90:32 (#0) }], src/process.rs:90:33: 90:39 (#0)), span: src/process.rs:90:31: 90:39 (#0) }, Expr { hir_id: HirId { owner: DefId(0:50 ~ ptranse[60bd]::process::process), local_id: 760 }, kind: Lit(Spanned { node: Int(1, Unsuffixed), span: src/process.rs:90:45: 90:46 (#0) }), span: src/process.rs:90:45: 90:46 (#0) }], src/process.rs:90:40: 90:47 (#0)), span: src/process.rs:90:31: 90:47 (#0) }, can't compose [Borrow(Ref('_#440r, Mut { allow_two_phase_borrow: Yes })) -> &mut std::iter::Take<std::collections::hash_set::Iter<'_, &Triple<'_>>>] and [Borrow(Ref('_#454r, Mut { allow_two_phase_borrow: Yes })) -> &mut std::iter::Take<std::collections::hash_set::Iter<'_, &Triple<'_>>>]\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1160:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner>::bug\r\n   3: <rustc_errors::Handler>::bug\r\n   4: rustc_middle::ty::context::tls::with_opt::<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, ()>\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: <rustc_typeck::check::fn_ctxt::FnCtxt>::apply_adjustments\r\n   8: <rustc_typeck::check::method::confirm::ConfirmContext>::confirm\r\n   9: <rustc_typeck::check::fn_ctxt::FnCtxt>::lookup_method\r\n  10: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  11: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  12: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  13: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  14: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n  15: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  16: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  17: <rustc_middle::ty::Ty as rustc_middle::ty::context::InternIteratorElement<rustc_middle::ty::Ty, rustc_middle::ty::Ty>>::intern_with::<core::iter::adapters::map::Map<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<rustc_hir::hir::Expr>>, <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_tuple::{closure#1}>, <rustc_middle::ty::context::TyCtxt>::mk_tup<core::iter::adapters::map::Map<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<rustc_hir::hir::Expr>>, <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_tuple::{closure#1}>>::{closure#0}>\r\n  18: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  19: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  20: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  21: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  22: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  23: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  24: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  25: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  26: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  27: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  28: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  29: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  30: rustc_typeck::check::check::check_fn\r\n  31: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_closure\r\n  32: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  33: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  34: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  35: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  36: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  37: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  38: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  39: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  40: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  41: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  42: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  43: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  44: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  45: rustc_typeck::check::check::check_fn\r\n  46: <rustc_infer::infer::InferCtxtBuilder>::enter::<&rustc_middle::ty::context::TypeckResults, <rustc_typeck::check::inherited::InheritedBuilder>::enter<rustc_typeck::check::typeck_with_fallback<rustc_typeck::check::typeck::{closure#0}>::{closure#1}, &rustc_middle::ty::context::TypeckResults>::{closure#0}>\r\n  47: rustc_typeck::check::typeck\r\n  48: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>\r\n  49: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>>\r\n  50: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  51: rustc_typeck::check::typeck\r\n  52: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>\r\n  53: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>>\r\n  54: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  55: <rustc_middle::hir::map::Map>::par_body_owners::<rustc_typeck::check::typeck_item_bodies::{closure#0}>\r\n  56: rustc_typeck::check::typeck_item_bodies\r\n  57: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), ()>\r\n  58: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), ()>>\r\n  59: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::typeck_item_bodies, rustc_query_impl::plumbing::QueryCtxt>\r\n  60: rustc_typeck::check_crate\r\n  61: rustc_interface::passes::analysis\r\n  62: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), core::result::Result<(), rustc_errors::ErrorReported>>\r\n  63: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorReported>>>\r\n  64: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  65: <rustc_interface::passes::QueryContext>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}::{closure#3}, core::result::Result<(), rustc_errors::ErrorReported>>\r\n  66: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorReported>>\r\n  67: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  68: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>\r\n  69: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.61.0-nightly (68369a041 2022-02-22) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `process::process`\r\n#1 [typeck] type-checking `process::process::{closure#0}`\r\n#2 [typeck_item_bodies] type-checking all item bodies\r\n#3 [analysis] running analysis passes on this crate\r\nend of query stack\r\nwarning: `ptranse` (bin \"ptranse\") generated 1 warning\r\nerror: could not compile `ptranse`; 1 warning emitted\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n### Other information\r\n`rustc 1.58.0-nightly` doesn't have this bug.\r\n```\r\n(i386)  \u279c  ~/code/ptranse git:(master) rustc -V --verbose\r\nrustc 1.58.0-nightly (e90c5fbbc 2021-11-12)\r\nbinary: rustc\r\ncommit-hash: e90c5fbbc5df5c81267747daeb937d4e955ce6ad\r\ncommit-date: 2021-11-12\r\nhost: x86_64-apple-darwin\r\nrelease: 1.58.0-nightly\r\nLLVM version: 13.0.0\r\n(i386)  \u279c  ~/code/ptranse git:(master) cargo build\r\n   Compiling ptranse v0.1.0 (/Volumes/Code/ptranse)\r\nwarning: unused imports: `ProgressIterator`, `ProgressStyle`\r\n --> src/process.rs:8:30\r\n  |\r\n8 | use indicatif::{ProgressBar, ProgressStyle, ProgressIterator};\r\n  |                              ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(unused_imports)]` on by default\r\n\r\nerror[E0061]: this enum variant takes 1 argument but 2 arguments were supplied\r\n  --> src/process.rs:90:26\r\n   |\r\n90 |                 (triple, Some(t.iter().take(1).next().unwrap(), r1.2 as f64 / total_length as f64))\r\n   |                          ^^^^ --------------------------------  --------------------------------- supplied 2 arguments\r\n   |                          |\r\n   |                          expected 1 argument\r\n\r\nwarning: unused import: `rand::prelude`\r\n --> src/process.rs:7:5\r\n  |\r\n7 | use rand::prelude::*;\r\n  |     ^^^^^^^^^^^^^\r\n\r\nFor more information about this error, try `rustc --explain E0061`.\r\nwarning: `ptranse` (bin \"ptranse\") generated 2 warnings\r\nerror: could not compile `ptranse` due to previous error; 2 warnings emitted\r\n```", "closed_by": {"login": "leoleoasd", "id": 37735580, "node_id": "MDQ6VXNlcjM3NzM1NTgw", "avatar_url": "https://avatars.githubusercontent.com/u/37735580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoleoasd", "html_url": "https://github.com/leoleoasd", "followers_url": "https://api.github.com/users/leoleoasd/followers", "following_url": "https://api.github.com/users/leoleoasd/following{/other_user}", "gists_url": "https://api.github.com/users/leoleoasd/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoleoasd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoleoasd/subscriptions", "organizations_url": "https://api.github.com/users/leoleoasd/orgs", "repos_url": "https://api.github.com/users/leoleoasd/repos", "events_url": "https://api.github.com/users/leoleoasd/events{/privacy}", "received_events_url": "https://api.github.com/users/leoleoasd/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94444/timeline", "performed_via_github_app": null, "state_reason": "completed"}