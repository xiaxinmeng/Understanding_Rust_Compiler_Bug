{"url": "https://api.github.com/repos/rust-lang/rust/issues/93733", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93733/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93733/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93733/events", "html_url": "https://github.com/rust-lang/rust/issues/93733", "id": 1125711392, "node_id": "I_kwDOAAsO6M5DGP4g", "number": 93733, "title": "A confusing compile error about lifetime", "user": {"login": "HunterGitHub", "id": 4457714, "node_id": "MDQ6VXNlcjQ0NTc3MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4457714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HunterGitHub", "html_url": "https://github.com/HunterGitHub", "followers_url": "https://api.github.com/users/HunterGitHub/followers", "following_url": "https://api.github.com/users/HunterGitHub/following{/other_user}", "gists_url": "https://api.github.com/users/HunterGitHub/gists{/gist_id}", "starred_url": "https://api.github.com/users/HunterGitHub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HunterGitHub/subscriptions", "organizations_url": "https://api.github.com/users/HunterGitHub/orgs", "repos_url": "https://api.github.com/users/HunterGitHub/repos", "events_url": "https://api.github.com/users/HunterGitHub/events{/privacy}", "received_events_url": "https://api.github.com/users/HunterGitHub/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-02-07T09:13:47Z", "updated_at": "2022-02-08T08:12:59Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "rustc version\r\n```shell\r\n$ rustc --version\r\nrustc 1.58.1 (db9d1b20b 2022-01-20)\r\n```\r\n\r\nsuppose we have code like this:\r\n\r\n```rust\r\nstruct Text<'txt> {\r\n  content: &'txt str\r\n}\r\n\r\nstruct RefText<'txt> {\r\n  ptr: &'txt mut Text<'txt>\r\n}\r\n\r\nfn main() {\r\n  let mut txt = Text {\r\n      content: \"eeee\",\r\n  };\r\n  \r\n  {\r\n    // let r = &mut txt;\r\n    let r = RefText {\r\n      ptr: &mut txt,\r\n    };\r\n  }\r\n  \r\n  use_text(&mut txt);\r\n}\r\n\r\nfn use_text(t: &mut Text) {}\r\n```\r\n\r\nif we compile it, it will report error \"cannot borrow `txt` as mutable more than once at a time\":\r\n\r\n```\r\nerror[E0499]: cannot borrow `txt` as mutable more than once at a time\r\n   --> note1/src/fns.rs:202:12\r\n    |\r\n198 |       ptr: &mut txt,\r\n    |            -------- first mutable borrow occurs here\r\n...\r\n202 |   use_text(&mut txt);\r\n    |            ^^^^^^^^\r\n    |            |\r\n    |            second mutable borrow occurs here\r\n    |            first borrow later used here\r\n```\r\n\r\nthere is a way to fix it\uff0cmake the lifetime in `struct RefText<'txt>` independent:\r\n\r\n```rust\r\nstruct RefText<'txt, 'inner> {\r\n  ptr: &'txt mut Text<'inner>\r\n}\r\n```\r\n\r\nbut, the question is\uff1awhy if I bind the outer \"Text\" and the inner \"str\" with the same lifetime, it will cause r.ptr live long enough until the code \"use_text\", even I put it in a nested scope\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93733/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93733/timeline", "performed_via_github_app": null, "state_reason": null}