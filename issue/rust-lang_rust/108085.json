{"url": "https://api.github.com/repos/rust-lang/rust/issues/108085", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108085/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108085/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108085/events", "html_url": "https://github.com/rust-lang/rust/issues/108085", "id": 1586038707, "node_id": "I_kwDOAAsO6M5eiQez", "number": 108085, "title": "exit code: 0xc0000005, STATUS_ACCESS_VIOLATION", "user": {"login": "guzuomuse", "id": 5040829, "node_id": "MDQ6VXNlcjUwNDA4Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/5040829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guzuomuse", "html_url": "https://github.com/guzuomuse", "followers_url": "https://api.github.com/users/guzuomuse/followers", "following_url": "https://api.github.com/users/guzuomuse/following{/other_user}", "gists_url": "https://api.github.com/users/guzuomuse/gists{/gist_id}", "starred_url": "https://api.github.com/users/guzuomuse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guzuomuse/subscriptions", "organizations_url": "https://api.github.com/users/guzuomuse/orgs", "repos_url": "https://api.github.com/users/guzuomuse/repos", "events_url": "https://api.github.com/users/guzuomuse/events{/privacy}", "received_events_url": "https://api.github.com/users/guzuomuse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2023-02-15T15:17:28Z", "updated_at": "2023-02-16T08:48:14Z", "closed_at": "2023-02-15T20:08:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::slice;\r\n\r\n#[derive(Debug)]\r\npub struct MyStruct {\r\n    pub a: f64,\r\n}\r\n\r\nfn get_address_as_usize() -> usize {\r\n    let ms1 = MyStruct { a: 1.0 };\r\n    let ms2 = MyStruct { a: 2.0 };\r\n    let ms3 = MyStruct { a: 3.0 };\r\n    // let boxed = Box::new(vec![ms1, ms2, ms3]);\r\n    // Box::into_raw(boxed) as usize\r\n    let mut v = vec![ms1, ms2, ms3];\r\n    v.as_mut_ptr() as usize\r\n}\r\n\r\nfn print_value_by_pass_usized_address(address: usize, len: usize) {\r\n    /////////////////////////////////\r\n    let ptr = address as *mut MyStruct;\r\n    let rs = unsafe { slice::from_raw_parts(ptr, len) };\r\n    for item in rs {\r\n        println!(\"{:?}\", item);\r\n    }\r\n    /////////////////////////////////\r\n}\r\n\r\nfn main() {\r\n    let len = 3usize;\r\n    ////////////////////////////////////////////////////////////////\r\n    let address = get_address_as_usize();\r\n    println!(\"address: {:?}\", address);//we got something like this \"address: 2668648785952\"\r\n    print_value_by_pass_usized_address(address, len);//use the address variable directly.everything goes well.\r\n    /*\r\n    and then:\r\n    assume we already know the address. here is:2668648785952. pass it to below function!\r\n    error occus :exit code: 0xc0000005, STATUS_ACCESS_VIOLATION\r\n    */\r\n    print_value_by_pass_usized_address(2668648785952, len)//error comes here.\r\n}\r\n```\r\n\r\nI expected to see this happen: \r\n\r\nthe last function:\r\nprint_value_by_pass_usized_address(2668648785952, len)\r\nshould print the the sturcts info.\r\n\r\nMyStruct { a: 1.0 }\r\nMyStruct { a: 2.0 }\r\nMyStruct { a: 3.0 }\r\n\r\nInstead, this happened: \r\n\r\nbut i got \"exit code: 0xc0000005, STATUS_ACCESS_VIOLATION\"\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.67.0 (fc594f156 2023-01-24)\r\nbinary: rustc\r\ncommit-hash: fc594f15669680fa70d255faec3ca3fb507c3405\r\ncommit-date: 2023-01-24\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.67.0\r\nLLVM version: 15.0.6\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n\r\n", "closed_by": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108085/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}