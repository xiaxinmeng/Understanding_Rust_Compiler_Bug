{"url": "https://api.github.com/repos/rust-lang/rust/issues/58026", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58026/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58026/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58026/events", "html_url": "https://github.com/rust-lang/rust/issues/58026", "id": 405259303, "node_id": "MDU6SXNzdWU0MDUyNTkzMDM=", "number": 58026, "title": "Enabling feature does not allow using unstable feature on nightly", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 201852178, "node_id": "MDU6TGFiZWwyMDE4NTIxNzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-stability", "name": "A-stability", "color": "f7e101", "default": false, "description": "Area: issues related to #[stable] and #[unstable] attributes themselves."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-31T14:01:29Z", "updated_at": "2021-02-09T19:26:33Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See https://github.com/gnzlbg/test_detect (to reproduce run cargo test with nightly).\r\n\r\n```rust\r\n#![unstable(feature = \"stdsimd\", issue = \"27731\")]\r\n#![feature(staged_api)]\r\n\r\n#[stable(feature = \"simd_x86\", since = \"1.27.0\")]\r\n#[macro_export]\r\nmacro_rules! is_x86_feature_detected {\r\n    (\"foo\") => { $crate::check($crate::Feature::foo) };\r\n    (\"bar\") => { $crate::check($crate::Feature::bar) };\r\n}\r\n\r\n#[allow(non_camel_case_types)]\r\n#[repr(u8)]\r\n#[doc(hidden)]\r\n#[stable(feature = \"simd_x86\", since = \"1.27.0\")]\r\n// #[unstable(feature = \"stdsimd_internal\", issue = \"0\")]\r\npub enum Feature {\r\n    #[stable(feature = \"simd_x86\", since = \"1.27.0\")] foo,\r\n    #[unstable(feature = \"mmx_target_feature\", issue = \"44839\")] bar,\r\n}\r\n\r\n#[stable(feature = \"simd_x86\", since = \"1.27.0\")]\r\npub fn check(_: Feature) -> bool { true }\r\n\r\n/// Check that MMX fails without features\r\n///\r\n/// ```rust,compile_fail\r\n/// #![feature(stdsimd)]\r\n/// #[macro_use(is_x86_feature_detected)]\r\n/// extern crate test_detect;\r\n///\r\n/// fn main() {\r\n///    let _ = is_x86_feature_detected!(\"bar\");\r\n/// }\r\n/// ```\r\n#[unstable(feature = \"mmx_target_feature\", issue = \"44839\")]\r\n#[allow(dead_code)]\r\nfn mmx_fails() {}\r\n\r\n/// Check that MMX passes when the feature is enabled\r\n///\r\n/// ```rust\r\n/// #![feature(stdsimd, mmx_target_feature)]\r\n/// #[macro_use(is_x86_feature_detected)]\r\n/// extern crate test_detect;\r\n///\r\n/// fn main() {\r\n///    let _ = is_x86_feature_detected!(\"bar\");\r\n/// }\r\n/// ```\r\n#[unstable(feature = \"mmx_target_feature\", issue = \"44839\")]\r\n#[allow(dead_code)]\r\nfn mmx_passes() {}\r\n\r\n\r\n/// Check that MMX passes when variant without features is uses\r\n///\r\n/// ```rust\r\n/// #![feature(stdsimd)]\r\n/// #[macro_use(is_x86_feature_detected)]\r\n/// extern crate test_detect;\r\n///\r\n/// fn main() {\r\n///    let _ = is_x86_feature_detected!(\"foo\");\r\n/// }\r\n/// ```\r\n#[unstable(feature = \"mmx_target_feature\", issue = \"44839\")]\r\n#[allow(dead_code)]\r\nfn mmx_passes2() {}\r\n```\r\n\r\nThe `mmx_passes` doc test has the `feature(mmx_target_feature)` enabled, yet it still fails with:\r\n\r\n```\r\nUse of unstable library feature 'mmx_target_feature' (see issue #44839)\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58026/timeline", "performed_via_github_app": null, "state_reason": null}