{"url": "https://api.github.com/repos/rust-lang/rust/issues/88468", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88468/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88468/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88468/events", "html_url": "https://github.com/rust-lang/rust/issues/88468", "id": 982198529, "node_id": "MDU6SXNzdWU5ODIxOTg1Mjk=", "number": 88468, "title": "ICE: rustdoc crash computing layouts in const generics", "user": {"login": "barrowsys", "id": 41446523, "node_id": "MDQ6VXNlcjQxNDQ2NTIz", "avatar_url": "https://avatars.githubusercontent.com/u/41446523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barrowsys", "html_url": "https://github.com/barrowsys", "followers_url": "https://api.github.com/users/barrowsys/followers", "following_url": "https://api.github.com/users/barrowsys/following{/other_user}", "gists_url": "https://api.github.com/users/barrowsys/gists{/gist_id}", "starred_url": "https://api.github.com/users/barrowsys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barrowsys/subscriptions", "organizations_url": "https://api.github.com/users/barrowsys/orgs", "repos_url": "https://api.github.com/users/barrowsys/repos", "events_url": "https://api.github.com/users/barrowsys/events{/privacy}", "received_events_url": "https://api.github.com/users/barrowsys/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-08-29T20:41:44Z", "updated_at": "2021-12-11T06:58:24Z", "closed_at": "2021-12-11T06:58:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\n#![allow(incomplete_features)]\r\n#![feature(const_generics)]\r\n#![feature(const_evaluatable_checked)]\r\n\r\npub struct Assert<const COND: bool>();\r\npub trait IsTrue {}\r\nimpl IsTrue for Assert<true> {}\r\n\r\npub trait IsNotZST {}\r\nimpl<T> IsNotZST for T where Assert<{ std::mem::size_of::<T>() > 0 }>: IsTrue {}\r\n\r\n/* Not necessary to cause error\r\npub struct AnyVec<T, const BITS: u32>\r\nwhere\r\n    T: IsNotZST,\r\n{\r\n    _marker: std::marker::PhantomData<T>,\r\n}\r\n*/\r\n\r\n/* Does not cause error\r\npub struct AnyVec<T, const BITS: u32>\r\nwhere\r\n    Assert<{ std::mem::size_of::<T>() > 0 }>: IsTrue\r\n{\r\n    _marker: std::marker::PhantomData<T>,\r\n}\r\n*/\r\n\r\n```\r\n\r\n\r\n### Meta\r\nfeatures:\r\n- const_generics\r\n- const_evaluatable_checked\r\n```\r\nrustc 1.56.0-nightly (0035d9dce 2021-08-16)\r\nbinary: rustc\r\ncommit-hash: 0035d9dcecee49d1f7349932bfa52c05a6f83641\r\ncommit-date: 2021-08-16\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.56.0-nightly\r\nLLVM version: 12.0.1\r\n```\r\n\r\n### Error output\r\n\r\ncargo doc\r\n```\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/sty.rs:2174:17: `is_trivially_sized` applied to unexpected type: ^0\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1115:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: Unrecognized option: 'crate-version'\r\n\r\nerror: could not document `rustdoc_err`\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustdoc --edition=2018 --crate-type lib --crate-name rustdoc_err src/lib.rs -o /tmp/tmp.ul886HIeYd/rustdoc_err/target/doc --error-format=json --json=diagnostic-rendered-ansi -L dependency=/tmp/tmp.ul886HIeYd/rustdoc_err/target/debug/deps --crate-version 0.1.0` (exit status: 1)\r\n```\r\nrunning the rustdoc command manually without --crate-version\r\n```\r\n{\"message\":\"compiler/rustc_middle/src/ty/sty.rs:2174:17: `is_trivially_sized` applied to unexpected type: ^0\",\"code\":null,\"level\":\"error: internal compiler error\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror: internal compiler error\\u001b[0m\\u001b[0m\\u001b[1m: compiler/rustc_middle/src/ty/sty.rs:2174:17: `is_trivially_sized` applied to unexpected type: ^0\\u001b[0m\\n\\n\"}\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1115:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.56.0-nightly (0035d9dce 2021-08-16) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type lib\r\n\r\nquery stack during panic:\r\n#0 [layout_raw] computing layout of `*const ^0`\r\n#1 [eval_to_allocation_raw] const-evaluating + checking `<impl at src/lib.rs:10:1: 10:81>::{constant#0}`\r\nend of query stack\r\n{\"message\":\"aborting due to previous error\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: aborting due to previous error\\u001b[0m\\n\\n\"}\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\nbacktrace from the rustdoc command (without --crate-version)\r\n\r\n```\r\n{\"message\":\"compiler/rustc_middle/src/ty/sty.rs:2174:17: `is_trivially_sized` applied to unexpected type: ^0\",\"code\":null,\"level\":\"error: internal compiler error\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror: internal compiler error\\u001b[0m\\u001b[0m\\u001b[1m: compiler/rustc_middle/src/ty/sty.rs:2174:17: `is_trivially_sized` applied to unexpected type: ^0\\u001b[0m\\n\\n\"}\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1115:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: std::panic::panic_any\r\n   2: rustc_errors::HandlerInner::bug\r\n   3: rustc_errors::Handler::bug\r\n   4: rustc_middle::ty::context::tls::with_opt\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: rustc_middle::ty::sty::<impl rustc_middle::ty::TyS>::is_trivially_sized\r\n   8: rustc_middle::ty::util::<impl rustc_middle::ty::TyS>::is_sized\r\n   9: rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt>::layout_raw_uncached\r\n  10: rustc_middle::ty::layout::layout_raw\r\n  11: rustc_query_system::query::plumbing::get_query_impl\r\n  12: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::layout_raw\r\n  13: <rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::query::TyCtxtAt> as rustc_target::abi::LayoutOf>::layout_of\r\n  14: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_rvalue_into_place\r\n  15: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::run\r\n  16: rustc_mir::const_eval::eval_queries::eval_to_allocation_raw_provider\r\n  17: rustc_query_system::query::plumbing::get_query_impl\r\n  18: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::eval_to_allocation_raw\r\n  19: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  20: rustc_query_system::query::plumbing::get_query_impl\r\n  21: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::eval_to_const_value_raw\r\n  22: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_global_id\r\n  23: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_resolve\r\n  24: rustc_infer::infer::InferCtxt::const_eval_resolve\r\n  25: rustc_trait_selection::traits::select::SelectionContext::evaluate_predicate_recursively::{{closure}}::{{closure}}\r\n  26: rustc_data_structures::stack::ensure_sufficient_stack\r\n  27: rustc_trait_selection::traits::select::SelectionContext::evaluate_predicate_recursively\r\n  28: rustc_trait_selection::traits::select::SelectionContext::evaluate_predicates_recursively\r\n  29: rustc_infer::infer::InferCtxt::probe\r\n  30: rustc_trait_selection::traits::select::SelectionContext::evaluate_candidate\r\n  31: rustc_trait_selection::traits::select::SelectionContext::evaluate_stack\r\n  32: rustc_query_system::dep_graph::graph::DepGraph<K>::with_anon_task\r\n  33: rustc_trait_selection::traits::select::SelectionContext::evaluate_trait_predicate_recursively\r\n  34: rustc_data_structures::stack::ensure_sufficient_stack\r\n  35: rustc_trait_selection::traits::select::SelectionContext::evaluate_predicate_recursively\r\n  36: rustc_infer::infer::InferCtxt::probe\r\n  37: rustc_trait_selection::traits::select::SelectionContext::evaluate_root_obligation\r\n  38: rustc_infer::infer::InferCtxtBuilder::enter_with_canonical\r\n  39: rustc_traits::evaluate_obligation::evaluate_obligation\r\n  40: rustc_query_system::query::plumbing::get_query_impl\r\n  41: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::evaluate_obligation\r\n  42: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt>::evaluate_obligation\r\n  43: rustc_infer::infer::InferCtxtBuilder::enter\r\n  44: rustdoc::clean::blanket_impl::BlanketImplFinder::get_blanket_impls\r\n  45: rustdoc::clean::utils::get_auto_trait_and_blanket_impls\r\n  46: rustdoc::passes::collect_trait_impls::collect_trait_impls\r\n  47: rustdoc::core::run_global_ctxt\r\n  48: rustc_interface::passes::QueryContext::enter\r\n  49: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  50: rustc_span::with_source_map\r\n  51: rustc_interface::interface::create_compiler_and_run\r\n  52: rustdoc::main_options\r\n  53: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.56.0-nightly (0035d9dce 2021-08-16) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type lib\r\n\r\nquery stack during panic:\r\n#0 [layout_raw] computing layout of `*const ^0`\r\n#1 [eval_to_allocation_raw] const-evaluating + checking `<impl at src/lib.rs:10:1: 10:81>::{constant#0}`\r\n#2 [eval_to_const_value_raw] simplifying constant for the type system `<impl at src/lib.rs:10:1: 10:81>::{constant#0}`\r\n#3 [evaluate_obligation] evaluating trait selection obligation `Assert<{ std::mem::size_of::<T>() > 0 }>: IsTrue`\r\nend of query stack\r\n{\"message\":\"aborting due to previous error\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: aborting due to previous error\\u001b[0m\\n\\n\"}\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88468/timeline", "performed_via_github_app": null, "state_reason": "completed"}