{"url": "https://api.github.com/repos/rust-lang/rust/issues/64212", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64212/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64212/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64212/events", "html_url": "https://github.com/rust-lang/rust/issues/64212", "id": 490226382, "node_id": "MDU6SXNzdWU0OTAyMjYzODI=", "number": 64212, "title": "[Feature Request] compile time arguments", "user": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-06T09:29:20Z", "updated_at": "2019-09-09T13:20:07Z", "closed_at": "2019-09-09T13:20:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently the closest thing to C's preprocessor conditional compilations we have is the cfg and the features.\r\n\r\nBut there's one missing piece, and that's and that's values in those variables.\r\n\r\nCurrently the design idea of features is to be incremental which doesn't make sense with having values in those features.\r\nThe thing is that in practice a lot of crates don't really use features as incremental and have mutually exclusive features.\r\n\r\nI understand that the incremental features idea is rooted pretty deep in cargo's dependency resolvement. \r\nIs there a way to have this without a big problem with having the same dependency twice in the dependency graph but with different values?\r\nCould we maybe have some symbol randomness and just treat them as two different libraries?", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64212/timeline", "performed_via_github_app": null, "state_reason": "completed"}