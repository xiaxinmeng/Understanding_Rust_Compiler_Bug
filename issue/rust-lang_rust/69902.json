{"url": "https://api.github.com/repos/rust-lang/rust/issues/69902", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69902/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69902/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69902/events", "html_url": "https://github.com/rust-lang/rust/issues/69902", "id": 578911355, "node_id": "MDU6SXNzdWU1Nzg5MTEzNTU=", "number": 69902, "title": "`MaybeRequiresStorage` for generators is not necessary", "user": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 679846574, "node_id": "MDU6TGFiZWw2Nzk4NDY1NzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-generators", "name": "A-generators", "color": "f7e101", "default": false, "description": "Area: Generators"}], "state": "closed", "locked": false, "assignee": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-03-10T23:05:50Z", "updated_at": "2020-05-22T04:52:35Z", "closed_at": "2020-05-22T04:52:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Continuing from discussion in #69716.\r\n\r\n`MaybeRequiresStorage` (introduced in #60187 as `RequiresStorage`) is one of four dataflow analyses used to determine what locals are live across yield points or live at the same time as other locals during the MIR generator pass. I don't see any reason we're not using a [liveness analysis](https://en.wikipedia.org/wiki/Live_variable_analysis) exclusively for this, with an additional check against `MaybeBorrowedLocals \u2229 MaybeStorageLive` in cases where borrows can live across suspension points (immovable generators).\r\n\r\n`MaybeRequiresStorage` is basically `MaybeStorageLive` with some additional logic that kills locals after they are moved out of. It also incorporates the `MaybeBorrowedLocals` analysis as part of its transfer function, which is probably unnecessary, since we could check the results of `MaybeBorrowedLocals` directly at each yield point. If there is often a large gap between the point at which a local is moved out of and the point at which it is marked `StorageDead`, we could augment `MaybeStorageLive` to kill locals when they are moved out of.\r\n\r\nThe liveness analysis in [`librustc_mir/util/liveness.rs`](https://github.com/rust-lang/rust/blob/master/src/librustc_mir/util/liveness.rs) will implicitly handle moved-from locals as long as there are no future accesses to them, which is what causes a variable to be marked as live.\r\n\r\nI'd like refactor the liveness parts of the MIR generator pass, but will wait for buy-in from its authors. I think that basing the current storage optimization on a combination of a few well-known dataflow analyses will make it easier to reason about and therefore fine-tune. This will involve using the liveness analysis (plus `MaybeBorrowedLocals` / `MaybeStorageLive` inside immovable generators) for [`compute_storage_conflicts`](https://github.com/rust-lang/rust/blob/a03921701cdfe0b2c5422240f3ae370ab21069f1/src/librustc_mir/transform/generator.rs#L599). Does anyone see a problem with this? @tmandry @jonas-schievink", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69902/timeline", "performed_via_github_app": null, "state_reason": "completed"}