{"url": "https://api.github.com/repos/rust-lang/rust/issues/94778", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94778/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94778/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94778/events", "html_url": "https://github.com/rust-lang/rust/issues/94778", "id": 1164325402, "node_id": "I_kwDOAAsO6M5FZjIa", "number": 94778, "title": "Recursive call warning does not appear inside a match statement", "user": {"login": "levkk", "id": 9561483, "node_id": "MDQ6VXNlcjk1NjE0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/9561483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/levkk", "html_url": "https://github.com/levkk", "followers_url": "https://api.github.com/users/levkk/followers", "following_url": "https://api.github.com/users/levkk/following{/other_user}", "gists_url": "https://api.github.com/users/levkk/gists{/gist_id}", "starred_url": "https://api.github.com/users/levkk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/levkk/subscriptions", "organizations_url": "https://api.github.com/users/levkk/orgs", "repos_url": "https://api.github.com/users/levkk/repos", "events_url": "https://api.github.com/users/levkk/events{/privacy}", "received_events_url": "https://api.github.com/users/levkk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-03-09T19:02:26Z", "updated_at": "2022-03-09T19:03:11Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#[derive(Copy, Clone)]\r\nenum Test {\r\n    ValueA,\r\n    ValueB,\r\n    #[allow(dead_code)]\r\n    Any\r\n}\r\n\r\nimpl PartialEq for Test {\r\n    fn eq(&self, other: &Test) -> bool {\r\n        match *self {\r\n            Test::Any => true,\r\n            _ => *self == *other,\r\n        }\r\n    }\r\n}\r\n\r\n#[allow(dead_code)]\r\n#[derive(Copy, Clone)]\r\nenum Test2 {\r\n    ValueA,\r\n    ValueB,\r\n    Any\r\n}\r\n\r\nimpl PartialEq for Test2 {\r\n     fn eq(&self, other: &Test2) -> bool {\r\n        *self == *other\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let a = Test::ValueA;\r\n    let b = Test::ValueB;\r\n    \r\n    println!(\"{}\", a ==  b);\r\n}\r\n```\r\n\r\n[Rust Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=2149b4f78fabc2aa7f99845a1a8af8b4)\r\n\r\nI expected to see this happen: the compiler should of warned me that the implementation `PartialEq` for `Test` is recursive.\r\n\r\nInstead, this happened: it compiled the implementation for `Test` without warnings and produced a stack overflow. Implementation for `Test2` is included to show that it does produce a warning when the recursive call is made not inside a `match` statement.\r\n\r\nCompiler output:\r\n\r\n```\r\n Compiling so v0.1.0 (/home/lev/Projects/so)\r\nwarning: function cannot return without recursing\r\n  --> src/main.rs:28:6\r\n   |\r\n28 |      fn eq(&self, other: &Test2) -> bool {\r\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot return without recursing\r\n29 |         *self == *other\r\n   |         --------------- recursive call site\r\n   |\r\n   = note: `#[warn(unconditional_recursion)]` on by default\r\n   = help: a `loop` may express intention better if this is on purpose\r\n\r\nwarning: `so` (bin \"so\") generated 1 warning\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n\r\n```\r\nrustc 1.59.0 (9d1b2106e 2022-02-23)\r\nbinary: rustc\r\ncommit-hash: 9d1b2106e23b1abd32fce1f17267604a5102f57a\r\ncommit-date: 2022-02-23\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.59.0\r\nLLVM version: 13.0.0\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.16s\r\n     Running `target/debug/so`\r\n\r\nthread 'main' has overflowed its stack\r\nfatal runtime error: stack overflow\r\nAborted\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94778/timeline", "performed_via_github_app": null, "state_reason": null}