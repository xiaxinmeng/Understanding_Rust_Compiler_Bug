{"url": "https://api.github.com/repos/rust-lang/rust/issues/49449", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49449/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49449/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49449/events", "html_url": "https://github.com/rust-lang/rust/issues/49449", "id": 309323803, "node_id": "MDU6SXNzdWUzMDkzMjM4MDM=", "number": 49449, "title": "rustc 1.25.0-nightly panicked at 'already borrowed: BorrowMutError'", "user": {"login": "anykey111", "id": 1016850, "node_id": "MDQ6VXNlcjEwMTY4NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1016850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anykey111", "html_url": "https://github.com/anykey111", "followers_url": "https://api.github.com/users/anykey111/followers", "following_url": "https://api.github.com/users/anykey111/following{/other_user}", "gists_url": "https://api.github.com/users/anykey111/gists{/gist_id}", "starred_url": "https://api.github.com/users/anykey111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anykey111/subscriptions", "organizations_url": "https://api.github.com/users/anykey111/orgs", "repos_url": "https://api.github.com/users/anykey111/repos", "events_url": "https://api.github.com/users/anykey111/events{/privacy}", "received_events_url": "https://api.github.com/users/anykey111/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-28T11:17:28Z", "updated_at": "2018-03-29T18:38:29Z", "closed_at": "2018-03-29T18:38:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have changed type alias MyHash from std::collections::HashSet to fnv::FnvHashSet.\r\nAfter switching to stable channel 1.24.1 compiler give me error that method MyHash::new() not available, proper usage is MyHash::default().\r\n\r\nfnv crate version \"1.0.6\"\r\n\r\n## Meta\r\n\r\nrustc 1.25.0-nightly (3ec5a99aa 2018-02-14) running on x86_64-unknown-linux-gnu\r\n\r\nBacktrace:\r\n\r\n```\r\nthread 'rustc' panicked at 'already borrowed: BorrowMutError', libcore/result.rs:945:5\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/sys_common/backtrace.rs:59\r\n             at libstd/panicking.rs:380\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:396\r\n   4: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:576\r\n   5: std::panicking::begin_panic\r\n             at libstd/panicking.rs:537\r\n   6: std::panicking::begin_panic_fmt\r\n             at libstd/panicking.rs:521\r\n   7: rust_begin_unwind\r\n             at libstd/panicking.rs:497\r\n   8: core::panicking::panic_fmt\r\n             at libcore/panicking.rs:71\r\n   9: core::result::unwrap_failed\r\n  10: rustc::ty::maps::on_disk_cache::OnDiskCache::load_diagnostics\r\n  11: rustc::dep_graph::graph::DepGraph::try_mark_green\r\n  12: rustc::dep_graph::graph::DepGraph::try_mark_green\r\n  13: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_mark_green_and_read\r\n  14: rustc::ty::maps::<impl rustc::ty::maps::queries::adt_def<'tcx>>::try_get_with\r\n  15: rustc::ty::maps::TyCtxtAt::adt_def\r\n  16: rustc::ty::codec::decode_adt_def\r\n  17: serialize::serialize::Decoder::read_enum_variant\r\n  18: rustc::ty::codec::decode_ty\r\n  19: rustc::ty::codec::decode_ty\r\n  20: serialize::serialize::Decoder::read_enum_variant\r\n  21: <<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter::Adapter<Iter, E> as core::iter::iterator::Iterator>::next\r\n  22: <core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter\r\n  23: <core::result::Result<T, E> as rustc::ty::context::InternIteratorElement<T, R>>::intern_with\r\n  24: rustc::ty::codec::decode_substs\r\n  25: serialize::serialize::Decoder::read_enum_variant\r\n  26: rustc::ty::codec::decode_ty\r\n  27: rustc::ty::maps::on_disk_cache::OnDiskCache::load_indexed\r\n  28: rustc::ty::maps::<impl rustc::ty::maps::queries::type_of<'tcx>>::try_get_with\r\n  29: rustc::ty::maps::TyCtxtAt::type_of\r\n  30: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::type_of\r\n  31: <rustc_typeck::collect::CollectItemTypesVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_item\r\n  32: rustc_typeck::check_crate::{{closure}}::{{closure}}\r\n  33: rustc_typeck::check_crate\r\n  34: rustc::ty::context::TyCtxt::create_and_enter\r\n  35: rustc_driver::driver::compile_input\r\n  36: rustc_driver::run_compiler\r\n\r\nerror: internal compiler error: unexpected panic\r\n```", "closed_by": {"login": "anykey111", "id": 1016850, "node_id": "MDQ6VXNlcjEwMTY4NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1016850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anykey111", "html_url": "https://github.com/anykey111", "followers_url": "https://api.github.com/users/anykey111/followers", "following_url": "https://api.github.com/users/anykey111/following{/other_user}", "gists_url": "https://api.github.com/users/anykey111/gists{/gist_id}", "starred_url": "https://api.github.com/users/anykey111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anykey111/subscriptions", "organizations_url": "https://api.github.com/users/anykey111/orgs", "repos_url": "https://api.github.com/users/anykey111/repos", "events_url": "https://api.github.com/users/anykey111/events{/privacy}", "received_events_url": "https://api.github.com/users/anykey111/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49449/timeline", "performed_via_github_app": null, "state_reason": "completed"}