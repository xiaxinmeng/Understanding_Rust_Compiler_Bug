{"url": "https://api.github.com/repos/rust-lang/rust/issues/4851", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/4851/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/4851/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/4851/events", "html_url": "https://github.com/rust-lang/rust/issues/4851", "id": 10800711, "node_id": "MDU6SXNzdWUxMDgwMDcxMQ==", "number": 4851, "title": "Overriding default ToStr impl for @A where A: ToStr", "user": {"login": "pkgw", "id": 59598, "node_id": "MDQ6VXNlcjU5NTk4", "avatar_url": "https://avatars.githubusercontent.com/u/59598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pkgw", "html_url": "https://github.com/pkgw", "followers_url": "https://api.github.com/users/pkgw/followers", "following_url": "https://api.github.com/users/pkgw/following{/other_user}", "gists_url": "https://api.github.com/users/pkgw/gists{/gist_id}", "starred_url": "https://api.github.com/users/pkgw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pkgw/subscriptions", "organizations_url": "https://api.github.com/users/pkgw/orgs", "repos_url": "https://api.github.com/users/pkgw/repos", "events_url": "https://api.github.com/users/pkgw/events{/privacy}", "received_events_url": "https://api.github.com/users/pkgw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-02-08T23:12:17Z", "updated_at": "2013-02-09T23:32:32Z", "closed_at": "2013-02-09T04:34:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm running into an issue with an interaction between ToStr and pointers that I'm not sure how to handle. I have a struct with a ToStr, and I want to call that method on a @-pointer to the struct. However, to_str.rs provides a generic implementation:\n\n```\nimpl<A: ToStr> @A: ToStr { ... }\n```\n\nthat returns the to_str prefixed with \"@\". I do _not_ want this behavior, but I can't figure out how to override it. My naive implementation is:\n\n```\n#[crate_type = \"bin\"];\n\npub struct Foo {\n    v: uint,\n}\n\nimpl Foo: to_str::ToStr {\n    pure fn to_str (&self) -> ~str { ~\"stacky\" }\n}\n\nimpl @Foo: to_str::ToStr {\n    pure fn to_str (&self) -> ~str { ~\"at-pointer\" }\n}\n\nfn main () {\n    let q = @Foo { v: 0 };\n    io::print (q.to_str () + \"\\n\");\n}\n```\n\nBut this gives a compile error about multiple implementations. Is there a way around this?\n", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/4851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/4851/timeline", "performed_via_github_app": null, "state_reason": "completed"}