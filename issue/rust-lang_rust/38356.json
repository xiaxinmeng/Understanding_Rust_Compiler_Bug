{"url": "https://api.github.com/repos/rust-lang/rust/issues/38356", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/38356/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/38356/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/38356/events", "html_url": "https://github.com/rust-lang/rust/issues/38356", "id": 195398462, "node_id": "MDU6SXNzdWUxOTUzOTg0NjI=", "number": 38356, "title": "Tracking issue for RFC 1566: Procedural macros", "user": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 89436934, "node_id": "MDU6TGFiZWw4OTQzNjkzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-RFC-approved", "name": "B-RFC-approved", "color": "d304cb", "default": false, "description": "Approved by a merged RFC but not yet implemented."}, {"id": 111868330, "node_id": "MDU6TGFiZWwxMTE4NjgzMzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-plugin", "name": "A-plugin", "color": "f7e101", "default": false, "description": "Area: compiler plugins, doc.rust-lang.org/nightly/unstable-book/language-features/plugin.html"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 632573348, "node_id": "MDU6TGFiZWw2MzI1NzMzNDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros-2.0", "name": "A-macros-2.0", "color": "f7e101", "default": false, "description": "Area: declarative macros 2.0, https://github.com/rust-lang/rust/issues/39412"}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 923282386, "node_id": "MDU6TGFiZWw5MjMyODIzODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/finished-final-comment-period", "name": "finished-final-comment-period", "color": "f9e189", "default": false, "description": "The final comment period is finished for this PR / Issue."}, {"id": 941498014, "node_id": "MDU6TGFiZWw5NDE0OTgwMTQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros-1.2", "name": "A-macros-1.2", "color": "f7e101", "default": false, "description": "Issues which affect macros 1.2"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 184, "created_at": "2016-12-13T23:24:51Z", "updated_at": "2018-11-23T20:45:45Z", "closed_at": "2018-10-01T19:04:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Current Status\r\n\r\n[This issue has been closed in favor of more fine-grained tracking issues](https://github.com/rust-lang/rust/issues/38356#issuecomment-426025407)\r\n\r\n## ~~~Updated Description~~~\r\n\r\n* [FCP request](https://github.com/rust-lang/rust/issues/38356#issuecomment-383693017)\r\n* [FCP check off](https://github.com/rust-lang/rust/issues/38356#issuecomment-383693023)\r\n* [All macros-1.2 related issue](https://github.com/rust-lang/rust/labels/A-macros-1.2)\r\n\r\nNext steps:\r\n\r\n* [x] [Stabilize `use_extern_macros`](https://github.com/rust-lang/rust/pull/50911)\r\n  * waiting on crater\r\n* [ ] Stabilize the `proc_macro` feature\r\n\r\nPossible Stabilization Showstoppers\r\n\r\n* [Hygiene is weird](https://github.com/rust-lang/rust/issues/50050)\r\n  * [proposed solution](https://github.com/rust-lang/rust/issues/50050#issuecomment-390520317)\r\n* ~~[Hygiene is weirder](https://github.com/rust-lang/rust/issues/50504)~~\r\n  * [disallow modules/macro definitions in output](https://github.com/rust-lang/rust/pull/50820)\r\n* [Supporting module system macros with `macro_rules!` and also having pre-1.29 compat is hard](https://github.com/rust-lang/rust/issues/35896#issuecomment-390381120)\r\n  * [current possible routes](https://github.com/rust-lang/rust/issues/35896#issuecomment-390551869)\r\n\r\n## Original Description\r\n\r\n[RFC](https://github.com/rust-lang/rfcs/pull/1566).\r\n\r\n> This RFC proposes an evolution of Rust's procedural macro system (aka syntax\r\nextensions, aka compiler plugins). This RFC specifies syntax for the definition\r\nof procedural macros, a high-level view of their implementation in the compiler,\r\nand outlines how they interact with the compilation process.\r\n\r\n> At the highest level, macros are defined by implementing functions marked with\r\na `#[macro]` attribute. Macros operate on a list of tokens provided by the\r\ncompiler and return a list of tokens that the macro use is replaced by. We\r\nprovide low-level facilities for operating on these tokens. Higher level\r\nfacilities (e.g., for parsing tokens to an AST) should exist as library crates.\r\n\r\nRoadmap: https://github.com/rust-lang/rust/issues/38356#issuecomment-274377210.\r\n\r\n---\r\n\r\n## Tasks\r\n\r\n - [x] Implement `#[proc_macro_attribute]` (PR #38842).\r\n   - [x] Fix #39347 (PR #39572).\r\n   - [x] Fix #39336 (PR #44528).\r\n - [x] Implement `#[proc_macro]` (PR #40129).\r\n - [x] Identify and collect uses of `proc_macro_derive`s in the `InvocationCollector` (PR #39391).\r\n - [x] Support macro-expanded `proc_macro_derive` imports.\r\n   - For example:\r\n```rust\r\n#[derive(Trait, OtherTrait)] struct S; // Both these derives should resolve\r\nmacro_rules! m { () => {\r\n    #[macro_use(Trait)] extern crate derives;\r\n    use derives::OtherTrait; // this kind of import is gated behind `#![feature(proc_macro)]`\r\n} }\r\nm!();\r\n```\r\n - [ ] Expand items before expanding applied `proc_macro_derive`s (PR #48465).\r\n - [x] Implement warnings for unused `#[macro_use]` imports (PR #39060).\r\n - [x] Refactor the parser to consume token trees (PR #39118).\r\n - [x] Clean up `TokenStream` in preparation for further refactoring (PR #39173).\r\n - [x] Remove `TokenTree::Sequence` (PR #39419).\r\n - [x] Use `TokenStream`s instead of `Vec<TokenTree>` in `tokenstream::TokenTree`'s `Delimited` variant (PR #40202).\r\n - [x] Use `Path`s and `TokenStream`s in `ast::Attribute`s (PR #40346).\r\n   - [x] Support nontrivial paths in attribute/derive macros (e.g. `#[foo::bar]`, `#[derive(foo::Bar)]`).\r\n - [x] Include hygiene information with all tokens, not just identifiers (PR #40597). \r\n - [x] Implement a minimal API for `proc_macro::TokenStream` as outlined in the RFC (PR #40939).\r\n   - [x] Include source `TokenStream`s for interpolated AST fragments in `Token::Interpolated` tokens.\r\n   - [x] Include a `TokenStream` quoter `proc_macro::quote!` behind the `proc_macro` feature gate.\r\n - [x] Provide a way for `proc_macro` authors to create expansions that use items in a predetermined crate `foo` without requiring the macro user to include `extern crate foo;` at the crate root (PR #40939).\r\n   - [ ] Improve ergonomics.\r\n - [ ] Include source `TokenStream`s for items in the AST.\r\n - [ ] Stability check (proc-)macros (issue #34079).\r\n - [x] Allow proc macro to initialize a private field with a def_site value (issue #47311). (PR #48082)\r\n - [x] Inconsistency between accessing field of braced struct vs tuple struct in proc macro (issue #47312). (PR #48083)\r\n - [ ] Make std available to proc macro root in phase 1 (issue #47314).\r\n - [x] Improve error from invalid syntax inside `proc_macro::quote!` (issue #47315).\r\n - [ ] Inconsistency between Display and IntoIterator for a TokenStream containing a module (issue #47627).\r\n - [x] #[cfg_attr] makes .to_string() and TokenStream disagree (issue #48644).\r\n - [x] Wishlist for libproc_macro (checklist in #47786).", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/38356/reactions", "total_count": 55, "+1": 23, "-1": 0, "laugh": 0, "hooray": 20, "confused": 0, "heart": 12, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/38356/timeline", "performed_via_github_app": null, "state_reason": "completed"}