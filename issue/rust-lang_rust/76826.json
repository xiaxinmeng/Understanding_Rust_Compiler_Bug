{"url": "https://api.github.com/repos/rust-lang/rust/issues/76826", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/76826/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/76826/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/76826/events", "html_url": "https://github.com/rust-lang/rust/issues/76826", "id": 703351083, "node_id": "MDU6SXNzdWU3MDMzNTEwODM=", "number": 76826, "title": "ICE when combining GATs and HRTBs", "user": {"login": "zesterer", "id": 3268430, "node_id": "MDQ6VXNlcjMyNjg0MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/3268430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zesterer", "html_url": "https://github.com/zesterer", "followers_url": "https://api.github.com/users/zesterer/followers", "following_url": "https://api.github.com/users/zesterer/following{/other_user}", "gists_url": "https://api.github.com/users/zesterer/gists{/gist_id}", "starred_url": "https://api.github.com/users/zesterer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zesterer/subscriptions", "organizations_url": "https://api.github.com/users/zesterer/orgs", "repos_url": "https://api.github.com/users/zesterer/repos", "events_url": "https://api.github.com/users/zesterer/events{/privacy}", "received_events_url": "https://api.github.com/users/zesterer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-09-17T07:44:00Z", "updated_at": "2021-07-16T04:03:11Z", "closed_at": "2021-07-16T04:03:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code triggers an ICE.\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(generic_associated_types)]\r\n\r\npub trait Iter {\r\n    type Item<'a> where Self: 'a;\r\n    \r\n    fn next<'a>(&'a mut self) -> Option<Self::Item<'a>>;\r\n    \r\n    fn for_each<F>(mut self, mut f: F)\r\n        where Self: Sized, F: for<'a> FnMut(Self::Item<'a>)\r\n    {\r\n        while let Some(item) = self.next() {\r\n            f(item);\r\n        }\r\n    }\r\n}\r\n\r\npub struct Windows<T> {\r\n    items: Vec<T>,\r\n    start: usize,\r\n    len: usize,\r\n}\r\n\r\nimpl<T> Windows<T> {\r\n    pub fn new(items: Vec<T>, len: usize) -> Self {\r\n        Self { items, start: 0, len }\r\n    }\r\n}\r\n\r\nimpl<T> Iter for Windows<T> {\r\n    type Item<'a> where T: 'a = &'a mut [T];\r\n    \r\n    fn next<'a>(&'a mut self) -> Option<Self::Item<'a>> {\r\n        let slice = self.items.get_mut(self.start..self.start + self.len)?;\r\n        self.start += 1;\r\n        Some(slice)\r\n    }\r\n}\r\n\r\nfn main() {\r\n    Windows::new(vec![1, 2, 3, 4, 5], 3)\r\n        .for_each(|slice| println!(\"{:?}\", slice));\r\n}\r\n```\r\n\r\n[Playground version](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=5fc1a17b6b474bca1e584071b06a4613)\r\n\r\nThis example can no doubt be minimised further, but it should be obvious what I'm attempting to do and why. This would be, I assume, a fairly common use-case for GATs and are likely to be essential if GATs are ever to be integrated into `Iterator`.\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.48.0-nightly (d006f5734 2020-08-28)\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: src/librustc_trait_selection/traits/codegen/mod.rs:75:17: Encountered error `OutputTypeParameterMismatch(Binder(<[closure@gats.rs:41:19: 41:50] as std::ops::FnMut<(<Windows<i32> as Iter>::Item<'_>,)>>), Binder(<[closure@gats.rs:41:19: 41:50] as std::ops::FnMut<(&mut [i32],)>>), Sorts(ExpectedFound { expected: &mut [i32], found: <Windows<i32> as Iter>::Item<'_> }))` selecting `Binder(<[closure@gats.rs:41:19: 41:50] as std::ops::FnMut<(&mut [i32],)>>)` during codegen\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:918:9\r\n```\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: rustc_errors::HandlerInner::bug\r\n   2: rustc_errors::Handler::bug\r\n   3: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n   4: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n   5: rustc_middle::ty::context::tls::with_opt\r\n   6: rustc_middle::util::bug::opt_span_bug_fmt\r\n   7: rustc_middle::util::bug::bug_fmt\r\n   8: rustc_infer::infer::InferCtxtBuilder::enter\r\n   9: rustc_trait_selection::traits::codegen::codegen_fulfill_obligation\r\n  10: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::codegen_fulfill_obligation>::compute\r\n  11: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  12: rustc_data_structures::stack::ensure_sufficient_stack\r\n  13: rustc_query_system::query::plumbing::get_query_impl\r\n  14: rustc_ty::instance::inner_resolve_instance\r\n  15: rustc_ty::instance::resolve_instance\r\n  16: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::resolve_instance>::compute\r\n  17: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  18: rustc_data_structures::stack::ensure_sufficient_stack\r\n  19: rustc_query_system::query::plumbing::get_query_impl\r\n  20: rustc_middle::ty::instance::Instance::resolve_opt_const_arg\r\n  21: rustc_middle::ty::instance::Instance::resolve\r\n  22: <rustc_mir::monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor>::visit_terminator\r\n  23: rustc_mir::monomorphize::collector::collect_neighbours\r\n  24: rustc_mir::monomorphize::collector::collect_items_rec\r\n  25: rustc_mir::monomorphize::collector::collect_items_rec\r\n  26: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  27: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  28: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  29: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::collect_and_partition_mono_items>::compute\r\n  30: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  31: rustc_data_structures::stack::ensure_sufficient_stack\r\n  32: rustc_query_system::query::plumbing::get_query_impl\r\n  33: rustc_codegen_ssa::base::codegen_crate\r\n  34: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  35: rustc_interface::passes::QueryContext::enter\r\n  36: rustc_interface::queries::Queries::ongoing_codegen\r\n  37: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  38: rustc_span::with_source_map\r\n  39: rustc_interface::interface::create_compiler_and_run\r\n  40: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.48.0-nightly (d006f5734 2020-08-28) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [codegen_fulfill_obligation] checking if `std::ops::FnMut` fulfills its obligations\r\n#1 [resolve_instance] resolving instance `<[closure@gats.rs:41:19: 41:50] as std::ops::FnMut<(&mut [i32],)>>::call_mut`\r\n#2 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: aborting due to previous error; 1 warning emitted\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nRemoving the final line (`.for_each(|slice| println!(\"{:?}\", slice))`) prevents the ICE, implying that this is a codegen issue (as corroborated by the stack trace).", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/76826/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/76826/timeline", "performed_via_github_app": null, "state_reason": "completed"}