{"url": "https://api.github.com/repos/rust-lang/rust/issues/96176", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96176/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96176/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96176/events", "html_url": "https://github.com/rust-lang/rust/issues/96176", "id": 1207118334, "node_id": "I_kwDOAAsO6M5H8yn-", "number": 96176, "title": "bootstrap: Remove the distinction between `compiler` and `compiler_for`", "user": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234876, "node_id": "MDU6TGFiZWwyMzQ4NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-hard", "name": "E-hard", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Hard / a lot"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-04-18T14:42:21Z", "updated_at": "2022-09-13T10:44:49Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "> I am not sure whether compiler/compiler_for is a meaningful + worthwhile distinction; I think the best way to find out is probably to try to unify and see what goes wrong. I suspect the intent behind the addition was largely the typical \"it seems like this one place wants something slightly different\" that perhaps was more of a patchwork fix than done with long-term correctness, so it's unlikely to be super principled I expect in terms of where it's used and such.\n\nI tried changing this and it went ... not well. Removing `compiler` altogether gives 71 build errors, and changing it to alias `compiler_for(stage, host, host)` fails a bunch of the tests, including some that look like real issues:\n```\n---- builder::tests::dist::dist_with_targets_and_hosts stdout ----\nthread 'builder::tests::dist::dist_with_targets_and_hosts' panicked at 'assertion failed: `(left == right)`\n\nDiff < left / right > :\n [\n     Rustc {\n         compiler: Compiler {\n<            stage: 1,\n>            stage: 2,\n             host: A,\n>        },\n>    },\n>    Rustc {\n>        compiler: Compiler {\n>            stage: 2,\n>            host: B,\n         },\n     },\n ]\n\n', src/bootstrap/builder/tests.rs:314:9\n```\n\nLooking at the call sites, they usually look like this:\n```rust\n            fn make_run(run: RunConfig<'_>) {\n                run.builder.ensure($name {\n                    compiler: run.builder.compiler(run.builder.top_stage, run.builder.config.build),\n                    target: run.target,\n                    extra_features: Vec::new(),\n                });\n            }\n```\nso I think the \"proper\" fix is to pass `run.target` into compiler_for in most of these cases; at very least, we can't assume it's always `host`.\n\nIn some cases it may not be clear what target is appropriate - feel free to ask on Zulip.\n\n@rustbot label +A-rustbuild +E-mentor +E-medium\n\n_Originally posted by @jyn514 in https://github.com/rust-lang/rust/pull/96000#issuecomment-1101461571_\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":null}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96176/timeline", "performed_via_github_app": null, "state_reason": null}