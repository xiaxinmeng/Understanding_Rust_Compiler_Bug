{"url": "https://api.github.com/repos/rust-lang/rust/issues/105513", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105513/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105513/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105513/events", "html_url": "https://github.com/rust-lang/rust/issues/105513", "id": 1487531919, "node_id": "I_kwDOAAsO6M5Yqe-P", "number": 105513, "title": "Confusing `E0284` \"type annotations needed\" when trait method bound trait bound conflict in associated type.", "user": {"login": "zachs18", "id": 8355914, "node_id": "MDQ6VXNlcjgzNTU5MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8355914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zachs18", "html_url": "https://github.com/zachs18", "followers_url": "https://api.github.com/users/zachs18/followers", "following_url": "https://api.github.com/users/zachs18/following{/other_user}", "gists_url": "https://api.github.com/users/zachs18/gists{/gist_id}", "starred_url": "https://api.github.com/users/zachs18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zachs18/subscriptions", "organizations_url": "https://api.github.com/users/zachs18/orgs", "repos_url": "https://api.github.com/users/zachs18/repos", "events_url": "https://api.github.com/users/zachs18/events{/privacy}", "received_events_url": "https://api.github.com/users/zachs18/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-12-09T22:06:59Z", "updated_at": "2022-12-13T17:17:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code ([playground link](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=ce91872c380cbf9bb89b910c8bff1b92)):\r\n\r\n```rust\r\npub trait Extension: IntoIterator<Item = u32> + Sized {\r\n    fn test(self) -> Vec<u64>\r\n    where\r\n        Self: IntoIterator<Item = u64>,\r\n    {\r\n        self.into_iter().collect()\r\n    }\r\n}\r\n```\r\n\r\n(i.e. the bound on `fn test` conflicts with the bound of its trait by way of associated types)\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0284]: type annotations needed: cannot satisfy `<Self as IntoIterator>::Item == u32`\r\n  |\r\nnote: required by a bound in `Extension`\r\n --> src/lib.rs:1:35\r\n  |\r\n1 | pub trait Extension: IntoIterator<Item = u32> + Sized {\r\n  |                                   ^^^^^^^^^^ required by this bound in `Extension`\r\n\r\nFor more information about this error, try `rustc --explain E0284`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like: something mentioning the conflicting bounds. (Or under `#![feature(trivial_bounds)]`, maybe it could just be a trivially false bound?).\r\n\r\n```\r\nerror[E0000]: conflicting bounds: cannot satisfy both `<Self as IntoIterator>::Item == u32` and `<Self as IntoIterator>::Item == u64`\r\n  |\r\nnote: bounds in `Extension` and `fn test`\r\n --> src/lib.rs:1:35\r\n  |\r\n1 | pub trait Extension: IntoIterator<Item = u32> + Sized {\r\n  |                                   ^^^^^^^^^^ required by this bound in `Extension`\r\n4 |         Self: IntoIterator<Item = u64>,\r\n  |                            ^^^^^^^^^^ required by this bound in `fn test`\r\n\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n\r\nSame result on stable, beta, and nightly.\r\n\r\nRelated: #103292, (can't find the issue at the moment, but `impl<T: Trait<Assoc = u32>> SecondTrait for T` conflicting with `impl<T: Trait<Assoc = u64>> SecondTrait for T` when it shouldn't is related).\r\n\r\n@rustbot modify labels +A-traits +D-confusing +A-associated-items\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105513/timeline", "performed_via_github_app": null, "state_reason": null}