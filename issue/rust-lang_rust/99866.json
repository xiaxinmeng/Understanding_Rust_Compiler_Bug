{"url": "https://api.github.com/repos/rust-lang/rust/issues/99866", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99866/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99866/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99866/events", "html_url": "https://github.com/rust-lang/rust/issues/99866", "id": 1321308302, "node_id": "I_kwDOAAsO6M5OwZCO", "number": 99866, "title": " broken MIR in Item (nightly)", "user": {"login": "ArthurKValladares", "id": 23410311, "node_id": "MDQ6VXNlcjIzNDEwMzEx", "avatar_url": "https://avatars.githubusercontent.com/u/23410311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArthurKValladares", "html_url": "https://github.com/ArthurKValladares", "followers_url": "https://api.github.com/users/ArthurKValladares/followers", "following_url": "https://api.github.com/users/ArthurKValladares/following{/other_user}", "gists_url": "https://api.github.com/users/ArthurKValladares/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArthurKValladares/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArthurKValladares/subscriptions", "organizations_url": "https://api.github.com/users/ArthurKValladares/orgs", "repos_url": "https://api.github.com/users/ArthurKValladares/repos", "events_url": "https://api.github.com/users/ArthurKValladares/events{/privacy}", "received_events_url": "https://api.github.com/users/ArthurKValladares/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2022-07-28T18:08:41Z", "updated_at": "2022-09-02T21:08:21Z", "closed_at": "2022-09-02T21:08:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\nhow to create smaller examples.\n\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\n\n-->\n\n### Code\n\n```Rust\n#[derive(Debug)]\npub struct HalSetLayouts {\n    vertex_layout: <B as hal::Backend>::DescriptorSetLayout,\n    fragment_layout: <B as hal::Backend>::DescriptorSetLayout,\n    fragment_sampler_layout: <B as hal::Backend>::DescriptorSetLayout,\n}\n\nimpl HalSetLayouts {\n    fn iter<DSL>(&self) -> impl ExactSizeIterator<Item = &DSL> + '_\n    where\n        // rust 1.37 fails to typecheck `iter` without this. This is fixed in nightly.\n        B: hal::Backend<DescriptorSetLayout = DSL>,\n        DSL: std::fmt::Debug + Send + Sync + 'static,\n    {\n        std::iter::once(&self.vertex_layout)\n            .chain(std::iter::once(&self.fragment_layout))\n            .chain(std::iter::once(&self.fragment_sampler_layout))\n            .exact(3)\n    }\n}\n```\n\n\n### Meta\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\n\n`rustc --version --verbose`:\n```\nrustc 1.64.0-nightly (2643b1646 2022-07-27)\nbinary: rustc\ncommit-hash: 2643b16468fda787470340890212591d8bc832b7\ncommit-date: 2022-07-27\nhost: x86_64-apple-darwin\nrelease: 1.64.0-nightly\nLLVM version: 14.0.6\n```\n\n### Error output\n\n```\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\n\nerror: internal compiler error: broken MIR in Item(WithOptConstParam { did: DefId(0:3021 ~ renderer[c01e]::shader::{impl#11}::iter), const_param_did: None }) (end of phase transition to Optimized) at bb0[0]:\n                                Field projection `(*_1).field[0]` specified type `DSL`, but actual type is <gfx_backend_metal::Backend as gfx_hal::Backend>::DescriptorSetLayout\n   --> brainstorm/src/renderer/src/shader.rs:642:25\n    |\n642 |         std::iter::once(&self.vertex_layout)\n    |                         ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: delayed at compiler/rustc_const_eval/src/transform/validate.rs:129:36\n\nerror: internal compiler error: broken MIR in Item(WithOptConstParam { did: DefId(0:3021 ~ renderer[c01e]::shader::{impl#11}::iter), const_param_did: None }) (end of phase transition to Optimized) at bb1[0]:\n                                Field projection `(*_1).field[1]` specified type `DSL`, but actual type is <gfx_backend_metal::Backend as gfx_hal::Backend>::DescriptorSetLayout\n   --> brainstorm/src/renderer/src/shader.rs:643:36\n    |\n643 |             .chain(std::iter::once(&self.fragment_layout))\n    |                                    ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: delayed at compiler/rustc_const_eval/src/transform/validate.rs:129:36\n\nerror: internal compiler error: broken MIR in Item(WithOptConstParam { did: DefId(0:3021 ~ renderer[c01e]::shader::{impl#11}::iter), const_param_did: None }) (end of phase transition to Optimized) at bb3[0]:\n                                Field projection `(*_1).field[2]` specified type `DSL`, but actual type is <gfx_backend_metal::Backend as gfx_hal::Backend>::DescriptorSetLayout\n   --> brainstorm/src/renderer/src/shader.rs:644:36\n    |\n644 |             .chain(std::iter::once(&self.fragment_sampler_layout))\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: delayed at compiler/rustc_const_eval/src/transform/validate.rs:129:36\n\n```\n\n<!--\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\n-->\n<details><summary><strong>Backtrace</strong></summary>\n<p>\n\n```\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1426:13\nstack backtrace:\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\n   2: <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop\n   3: core::ptr::drop_in_place::<rustc_session::parse::ParseSess>\n   4: <alloc::rc::Rc<rustc_session::session::Session> as core::ops::drop::Drop>::drop\n   5: core::ptr::drop_in_place::<rustc_interface::interface::Compiler>\n   6: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\n   7: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>\n   8: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n```\n\n</p>\n</details>\n\nThis came from a workaround for what seems to be an old compiler bug. removing the workaround gets ride of the ICE:\n\n```Rust\n#[derive(Debug)]\npub struct HalSetLayouts {\n    vertex_layout: <B as hal::Backend>::DescriptorSetLayout,\n    fragment_layout: <B as hal::Backend>::DescriptorSetLayout,\n    fragment_sampler_layout: <B as hal::Backend>::DescriptorSetLayout,\n}\n\nimpl HalSetLayouts {\n    fn iter(\n        &self,\n    ) -> impl ExactSizeIterator<Item = &<B as hal::Backend>::DescriptorSetLayout> + '_ {\n        std::iter::once(&self.vertex_layout)\n            .chain(std::iter::once(&self.fragment_layout))\n            .chain(std::iter::once(&self.fragment_sampler_layout))\n            .exact(3)\n    }\n}\n```\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"Nilstrieb\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99866/timeline", "performed_via_github_app": null, "state_reason": "completed"}