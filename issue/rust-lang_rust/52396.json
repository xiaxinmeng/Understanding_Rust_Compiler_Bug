{"url": "https://api.github.com/repos/rust-lang/rust/issues/52396", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52396/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52396/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52396/events", "html_url": "https://github.com/rust-lang/rust/issues/52396", "id": 341295626, "node_id": "MDU6SXNzdWUzNDEyOTU2MjY=", "number": 52396, "title": "Default impls cannot take into account associate types", "user": {"login": "Ericson2314", "id": 1055245, "node_id": "MDQ6VXNlcjEwNTUyNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1055245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ericson2314", "html_url": "https://github.com/Ericson2314", "followers_url": "https://api.github.com/users/Ericson2314/followers", "following_url": "https://api.github.com/users/Ericson2314/following{/other_user}", "gists_url": "https://api.github.com/users/Ericson2314/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ericson2314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ericson2314/subscriptions", "organizations_url": "https://api.github.com/users/Ericson2314/orgs", "repos_url": "https://api.github.com/users/Ericson2314/repos", "events_url": "https://api.github.com/users/Ericson2314/events{/privacy}", "received_events_url": "https://api.github.com/users/Ericson2314/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 347795552, "node_id": "MDU6TGFiZWwzNDc3OTU1NTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-specialization", "name": "A-specialization", "color": "f7e101", "default": false, "description": "Area: Trait impl specialization"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-15T06:16:42Z", "updated_at": "2019-11-10T09:01:13Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Suppose I have some trait with a default method:\r\n```rust\r\ntrait Foo {\r\n  fn bar(&self, isize) { .. }\r\n}\r\n```\r\nand I want to add an associated type:\r\n```rust\r\ntrait Foo {\r\n  type Baz = isize;\r\n  fn bar(&self, Baz);\r\n}\r\n```\r\nThis is a breaking change unless I move the old default method to a new `default impl`. But there is no way to condition the `default impl` on choice the choice of associated type. For example:\r\n```rust\r\ndefault impl<A: Foo<Baz = isze>> Foo for A {\r\n  fn Bar(&self, isize) { .. }\r\n}\r\n```\r\nis prohibited, and both \r\n```rust\r\ndefault impl<A> Foo for A {\r\n  type Baz = isize;\r\n  fn Bar(&self, Baz);\r\n}\r\n```\r\nand\r\n```rust\r\ndefault impl<A> Foo for A {\r\n  default type Baz = isize;\r\n  fn Bar(&self, Baz);\r\n}\r\n```\r\ndo the wrong thing.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52396/timeline", "performed_via_github_app": null, "state_reason": null}