{"url": "https://api.github.com/repos/rust-lang/rust/issues/111149", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111149/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111149/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111149/events", "html_url": "https://github.com/rust-lang/rust/issues/111149", "id": 1694496731, "node_id": "I_kwDOAAsO6M5k__fb", "number": 111149, "title": "Skip filled in fields when suggesting field names", "user": {"login": "gilescope", "id": 803976, "node_id": "MDQ6VXNlcjgwMzk3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/803976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilescope", "html_url": "https://github.com/gilescope", "followers_url": "https://api.github.com/users/gilescope/followers", "following_url": "https://api.github.com/users/gilescope/following{/other_user}", "gists_url": "https://api.github.com/users/gilescope/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilescope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilescope/subscriptions", "organizations_url": "https://api.github.com/users/gilescope/orgs", "repos_url": "https://api.github.com/users/gilescope/repos", "events_url": "https://api.github.com/users/gilescope/events{/privacy}", "received_events_url": "https://api.github.com/users/gilescope/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-05-03T17:26:51Z", "updated_at": "2023-06-10T06:52:24Z", "closed_at": "2023-06-09T09:45:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\nstruct S {\r\n    ant: u32,\r\n    bat: u32,\r\n    cat: u32,\r\n    dog: u32,\r\n    elephant: u32,\r\n    fish: u32,\r\n    giraffe: u32\r\n}\r\n\r\n\r\nfn main() {\r\n    let s = S {\r\n        ant: 1,\r\n        bat: 2,\r\n        cat: 3,\r\n        dog: 4,\r\n        elephant: 5,\r\n        fish: 6,\r\n        zebra: 7\r\n    };\r\n}\r\n```\r\n\r\n\r\n### Current output\r\n\r\n```Shell\r\nerror[E0560]: struct `S` has no field named `zebra`\r\n  --> src/main.rs:20:9\r\n   |\r\n20 |         zebra: 7\r\n   |         ^^^^^ `S` does not have this field\r\n   |\r\n   = note: available fields are: `ant`, `bat`, `cat`, `dog`, `elephant` ... and 2 others\r\n```\r\n\r\n\r\n### Desired output\r\n\r\n```Shell\r\nerror[E0560]: struct `S` has no field named `zebra`\r\n  --> src/main.rs:20:9\r\n   |\r\n20 |         zebra: 7\r\n   |         ^^^^^ `S` does not have this field\r\n   |\r\n   = note: unassigned fields are: `giraffe`\r\n```\r\n\r\nhttps://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=b2d383789fe03fc2ca056487e3e7eb10\r\n\r\n### Rationale and extra context\r\n\r\nWe can't set a field on a struct more than once, so we can discount those already (likely correctly) set fields from the set of available fields to choose from. This is especially useful if you're only following the compiler error messages as the current error output does not mention `giraffe` in the error message. If I'm coding blind I get prompted correctly what the first few fields of the struct are named, but once I've filled in the first 5 fields correctly there's no more hints on the other fields. If we exclude the fields we've already filled in then rustc should be able to hint me to get to the end of a struct no matter how many fields it has (after a few compiles as I fill in what I need to).\r\n\r\n### Other cases\r\n\r\nThis would be especially useful if I am filling out a struct that has been autogenerated by some macro and I can't easily view the source of it.\r\n\r\n### Anything else?\r\n\r\nThis just seems like a cute quality of life improvement in the diagnostics. \r\n(I'm hoping it's not too difficult to implement)", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111149/timeline", "performed_via_github_app": null, "state_reason": "completed"}