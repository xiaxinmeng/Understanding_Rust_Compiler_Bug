{"url": "https://api.github.com/repos/rust-lang/rust/issues/48745", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48745/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48745/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48745/events", "html_url": "https://github.com/rust-lang/rust/issues/48745", "id": 302171396, "node_id": "MDU6SXNzdWUzMDIxNzEzOTY=", "number": 48745, "title": "Provide a way to const-initialize vendor-specific vector types", "user": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 268744493, "node_id": "MDU6TGFiZWwyNjg3NDQ0OTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-fn", "name": "A-const-fn", "color": "f7e101", "default": false, "description": "Area: const fn foo(..) {..}. Pure functions which can be applied at compile time."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 631737389, "node_id": "MDU6TGFiZWw2MzE3MzczODk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-simd", "name": "A-simd", "color": "f7e101", "default": false, "description": "Area: SIMD (Single Instruction Multiple Data)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-03-05T04:53:29Z", "updated_at": "2022-09-25T01:47:44Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The platform independent simd types have constructors which are const fns, so they can be used in things like lookup tables: https://raw.githubusercontent.com/sfackler/stream-vbyte64/ea0d5b0afdf97f31473fafbf33d460fbbb313785/src/tables.rs.\r\n\r\nHowever, the same is not the case for the vendor-specific types like `__m256i`. There are platform intrinsics which initialize those types (e.g. `_mm256_setr_epi32` is equivalent to `i32x8::new`) but those are not const fns.\r\n\r\nOne way to work around this is by type-punning through unions:\r\n\r\n```rust\r\n#![feature(stdsimd)]\r\n\r\nuse std::arch::x86_64::*;\r\n\r\n#[repr(C)]\r\nunion Pun {\r\n    a: __m256i,\r\n    b: [u32; 8],\r\n}\r\n\r\nstatic FOO: Pun = Pun { b: [1, 2, 3, 4, 5, 6, 7, 8] };\r\n\r\nfn main() {\r\n    let x = unsafe { _mm256_extract_epi32(FOO.a, 3) };\r\n    println!(\"{}\", x);\r\n}\r\n```\r\n\r\nThis kind of union is pretty common in SIMD-related C code I've seen, and I think well defined behavior from what the unions RFC describes. Is this the \"right\" way to do this? Can/should we make functions like `_mm256_set_epi32` const?\r\n\r\ncc @alexcrichton ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48745/timeline", "performed_via_github_app": null, "state_reason": null}