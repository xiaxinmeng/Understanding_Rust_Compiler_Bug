{"url": "https://api.github.com/repos/rust-lang/rust/issues/58692", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58692/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58692/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58692/events", "html_url": "https://github.com/rust-lang/rust/issues/58692", "id": 413785812, "node_id": "MDU6SXNzdWU0MTM3ODU4MTI=", "number": 58692, "title": "Missed optimization: extra branch with slicing and integer overflow checks", "user": {"login": "alex", "id": 772, "node_id": "MDQ6VXNlcjc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex", "html_url": "https://github.com/alex", "followers_url": "https://api.github.com/users/alex/followers", "following_url": "https://api.github.com/users/alex/following{/other_user}", "gists_url": "https://api.github.com/users/alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex/subscriptions", "organizations_url": "https://api.github.com/users/alex/orgs", "repos_url": "https://api.github.com/users/alex/repos", "events_url": "https://api.github.com/users/alex/events{/privacy}", "received_events_url": "https://api.github.com/users/alex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 884691893, "node_id": "MDU6TGFiZWw4ODQ2OTE4OTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-codegen", "name": "WG-codegen", "color": "c2e0c6", "default": false, "description": "Working Group: Codegen (Runtime perf and code size)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-02-24T05:57:45Z", "updated_at": "2020-05-29T11:16:42Z", "closed_at": "2020-05-29T11:16:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Godbolt: https://rust.godbolt.org/z/PXY1lr\r\n\r\nBasically the issue is that you compute `s.position + n`, check that it doesn't overflow, and then you verify that `s.position + n` is greater than `s.position`, which it of course always is, since you checked for an overflow! This is probably an LLVM optimization bug, but I'm starting here :-)\r\n\r\nCommand line arguments: `-C opt-level=3 -C debug-assertions`\r\n\r\nSource:\r\n\r\n```rust\r\n\r\npub struct S1<'a> {\r\n    data: &'a [u8],\r\n    position: usize,\r\n}\r\n\r\npub fn f1<'a>(s: &'a mut S1, n: usize) -> &'a [u8] {\r\n    let d = &s.data[s.position..s.position+n];\r\n    s.position += n;\r\n    return d;\r\n}\r\n```\r\n\r\nASM:\r\n\r\n```asm\r\nexample::f1:\r\n        push    rax\r\n        mov     rax, qword ptr [rdi + 16]\r\n        add     rsi, rax\r\n        jb      .LBB0_4\r\n        mov     rdx, rsi\r\n        sub     rdx, rax\r\n        jb      .LBB0_5\r\n        mov     rcx, qword ptr [rdi + 8]\r\n        cmp     rcx, rsi\r\n        jb      .LBB0_6\r\n        add     rax, qword ptr [rdi]\r\n        mov     qword ptr [rdi + 16], rsi\r\n        pop     rcx\r\n        ret\r\n.LBB0_4:\r\n        lea     rdi, [rip + .L__unnamed_1]\r\n        call    qword ptr [rip + _ZN4core9panicking5panic17h8f422ca74d186618E@GOTPCREL]\r\n        ud2\r\n.LBB0_5:\r\n        mov     rdi, rax\r\n        call    qword ptr [rip + _ZN4core5slice22slice_index_order_fail17h7ab7c9c6113ae4b8E@GOTPCREL]\r\n        ud2\r\n.LBB0_6:\r\n        mov     rdi, rsi\r\n        mov     rsi, rcx\r\n        call    qword ptr [rip + _ZN4core5slice20slice_index_len_fail17h3a0f2c4c66447e54E@GOTPCREL]\r\n        ud2\r\n\r\nstr.0:\r\n        .ascii  \"/tmp/compiler-explorer-compiler119124-62-359u5j.hrbs4/example.rs\"\r\n\r\nstr.1:\r\n        .ascii  \"attempt to add with overflow\"\r\n\r\n.L__unnamed_1:\r\n        .quad   str.1\r\n        .quad   28\r\n        .quad   str.0\r\n        .quad   64\r\n        .long   8\r\n        .long   33\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58692/timeline", "performed_via_github_app": null, "state_reason": "completed"}