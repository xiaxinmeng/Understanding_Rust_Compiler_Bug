{"url": "https://api.github.com/repos/rust-lang/rust/issues/57854", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57854/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57854/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57854/events", "html_url": "https://github.com/rust-lang/rust/issues/57854", "id": 402063413, "node_id": "MDU6SXNzdWU0MDIwNjM0MTM=", "number": 57854, "title": "error[E0275]: \"overflow evaluating the requirement\" triggered by importing a path of length 2", "user": {"login": "zhaofengli", "id": 2189609, "node_id": "MDQ6VXNlcjIxODk2MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2189609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhaofengli", "html_url": "https://github.com/zhaofengli", "followers_url": "https://api.github.com/users/zhaofengli/followers", "following_url": "https://api.github.com/users/zhaofengli/following{/other_user}", "gists_url": "https://api.github.com/users/zhaofengli/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhaofengli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhaofengli/subscriptions", "organizations_url": "https://api.github.com/users/zhaofengli/orgs", "repos_url": "https://api.github.com/users/zhaofengli/repos", "events_url": "https://api.github.com/users/zhaofengli/events{/privacy}", "received_events_url": "https://api.github.com/users/zhaofengli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-01-23T04:13:18Z", "updated_at": "2021-08-04T07:33:07Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "This *might* be a duplicate of #39959. I'm posting a new issue here as the mechanism that the error is triggered significantly differs from that in the aforementioned issue.\r\n\r\n## Sample code\r\n\r\n```toml\r\n[package]\r\nname = \"example\"\r\nversion = \"0.1.0\"\r\nauthors = [\"Author\"]\r\nedition = \"2018\"\r\n\r\n[dependencies]\r\ntokio = \"=0.1.14\"\r\n```\r\n\r\n```rust\r\nuse std::fs::File;\r\nuse std::io::{Read, Write};\r\nuse std::path::Path;\r\n\r\n// Comment this out... and everything will work fine\r\nuse thisdoesntexistyolo::haha;\r\n\r\nstruct Something<T: Read + Write> {\r\n    thing: T,\r\n}\r\n\r\nimpl<'a, T: 'a + Read + Write> Something<T>\r\nwhere\r\n    &'a T: Read,\r\n{\r\n    fn new(thing: T) -> Something<T> {\r\n        Something { thing }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let file = File::open(Path::new(\"doesntmatter.txt\")).unwrap();\r\n    let mut st: Something<File> = Something::new(file);\r\n}\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=69a4b74228bcd717f8491debc3c23318))\r\n\r\n\r\n```\r\nerror[E0432]: unresolved import `thisdoesntexistyolo`\r\n --> src/main.rs:6:5\r\n  |\r\n6 | use thisdoesntexistyolo::haha;\r\n  |     ^^^^^^^^^^^^^^^^^^^ use of undeclared type or module `thisdoesntexistyolo`\r\n\r\nwarning: unused import: `thisdoesntexistyolo::haha`\r\n --> src/main.rs:6:5\r\n  |\r\n6 | use thisdoesntexistyolo::haha;\r\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: #[warn(unused_imports)] on by default\r\n\r\nerror[E0275]: overflow evaluating the requirement `_: std::marker::Sized`\r\n  --> src/main.rs:23:35\r\n   |\r\n23 |     let mut st: Something<File> = Something::new(file);\r\n   |                                   ^^^^^^^^^^^^^^\r\n   |\r\n   = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\r\n   = note: required because of the requirements on the impl of `std::io::Read` for `&tokio_reactor::poll_evented::PollEvented<_>`\r\n   = note: required because of the requirements on the impl of `std::io::Read` for `&tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<_>>`\r\n   = note: required because of the requirements on the impl of `std::io::Read` for `&tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<_>>>`\r\n   = note: required because of the requirements on the impl of `std::io::Read` for `&tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<_>>>>`\r\n[...]\r\n   = note: required because of the requirements on the impl of `std::io::Read` for `&tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<tokio_reactor::poll_evented::PollEvented<_>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>`\r\n\r\n```\r\n\r\n## Details\r\n\r\n- This issue will still occur if the imported package is real.\r\n- When `use thisdoesntexistyolo::haha;` is replaced with anything more than 2 levels deep like `use thisdoesntexistyolo::a::b;`, the code will compile without the error.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57854/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57854/timeline", "performed_via_github_app": null, "state_reason": null}