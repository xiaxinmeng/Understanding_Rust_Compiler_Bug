{"url": "https://api.github.com/repos/rust-lang/rust/issues/12902", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/12902/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/12902/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/12902/events", "html_url": "https://github.com/rust-lang/rust/issues/12902", "id": 29484221, "node_id": "MDU6SXNzdWUyOTQ4NDIyMQ==", "number": 12902, "title": "Cannot use `select!` with Receiver contained in a struct", "user": {"login": "quux00", "id": 694387, "node_id": "MDQ6VXNlcjY5NDM4Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/694387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quux00", "html_url": "https://github.com/quux00", "followers_url": "https://api.github.com/users/quux00/followers", "following_url": "https://api.github.com/users/quux00/following{/other_user}", "gists_url": "https://api.github.com/users/quux00/gists{/gist_id}", "starred_url": "https://api.github.com/users/quux00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quux00/subscriptions", "organizations_url": "https://api.github.com/users/quux00/orgs", "repos_url": "https://api.github.com/users/quux00/repos", "events_url": "https://api.github.com/users/quux00/events{/privacy}", "received_events_url": "https://api.github.com/users/quux00/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9695584, "node_id": "MDU6TGFiZWw5Njk1NTg0", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-concurrency", "name": "A-concurrency", "color": "f7e101", "default": false, "description": "Area: Concurrency related issues."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2014-03-15T02:47:42Z", "updated_at": "2017-08-01T22:02:17Z", "closed_at": "2017-08-01T22:02:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "The select! macro doesn't work if you try to reference a Receiver (Port) in a struct.  huon reviewed this in the IRC room and agreed I should file an issue on it.\n\nHere are two attempts to do this and both fail at compile time:\n\n``` rust\nuse std::io::Timer;\n\nstruct A {\n    c: Sender<~str>,\n    p: Receiver<~str>\n}\n\nfn does_not_compile() {\n    let (ch, pt): (Sender<~str>, Receiver<~str>) = channel();\n    let a = A{c: ch, p: pt};\n    let mut timer = Timer::new().unwrap();\n    let timeout = timer.oneshot(1000);\n    select! (\n        s = a.p.recv() => println!(\"{:s}\", s), // error: no rules expected the token `.`\n        () = timeout.recv() => println!(\"time out!\")\n    );\n}\n\n\n\nfn also_does_not_compile() {\n    let (ch, pt): (Sender<~str>, Receiver<~str>) = channel();\n    let a = A{c: ch, p: pt};\n    let mut timer = Timer::new().unwrap();\n    let timeout = timer.oneshot(1000);\n    let p = &a.p;\n    select! (\n        s = p.recv() => println!(\"{:s}\", s), // see error below\n        () = timeout.recv() => println!(\"time out!\")\n    );\n}\n\n/*\n<std macros>:7:37: 7:41 error: mismatched types: expected `&std::comm::Receiver<<generic #45>>` but found `&&std::comm::Receiver<~str>` (expected struct std::comm::Receiver but found &-ptr)\n<std macros>:7 $( let mut $rx = sel.handle(&$rx); )+\n^~~~\n<std macros>:1:1: 15:2 note: in expansion of select!\nselfport.rs:21:5: 24:7 note: expansion site\nselfport.rs:22:42: 22:43 error: cannot determine a type for this bounded type parameter: unconstrained type\nselfport.rs:22 s = p.recv() => println!(\"{:s}\", s), // error: no rules expected the token `.`\n*/\n```\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/12902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/12902/timeline", "performed_via_github_app": null, "state_reason": "completed"}