{"url": "https://api.github.com/repos/rust-lang/rust/issues/16264", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16264/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16264/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16264/events", "html_url": "https://github.com/rust-lang/rust/issues/16264", "id": 39485348, "node_id": "MDU6SXNzdWUzOTQ4NTM0OA==", "number": 16264, "title": "super trait and trait object error with \"source trait is inaccessible\", but source trait is in scope (via a reexport)", "user": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2014-08-05T04:59:56Z", "updated_at": "2015-09-23T00:25:49Z", "closed_at": "2015-09-23T00:25:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### STR\n\n``` rust\nuse array::ArrayShape;\n\npub mod array {\n    pub use self::traits::ArrayShape;\n\n    mod traits {\n        pub trait ArrayShape {\n            fn shape(&self) -> (usize, usize) {\n                (0, 0)\n            }\n        }\n    }\n}\n\nstruct Array;\n\nimpl ArrayShape for Array {}\n\nfn main() {\n    println!(\"{:?}\", Array.shape());  //~ error: source trait is inaccessible\n}\n\ntrait MatrixShape: ArrayShape {\n    fn nrows(&self) -> usize { self.shape().0 }  //~ error: source trait is inaccessible\n}\n\nfn show() {\n    println!(\"{:?}\", (&Array as &ArrayShape).shape());  //~ error: source trait is inaccessible\n}\n```\n### Version\n\n```\nrustc 1.0.0-nightly (458a6a2f6 2015-01-25 21:20:37 +0000)\n```\n\n---\n# Original issue\n\nSTR\n\n``` rust\nuse array::ArrayShape;\n\npub mod array {\n    pub use self::traits::ArrayShape;\n\n    mod traits {\n        pub trait ArrayShape {\n            fn shape(&self) -> (uint, uint) {\n                (0, 0)\n            }\n        }\n    }\n}\n\nstruct Array;\n\n// `ArrayShape` is available in this scope, it can be implemented ...\nimpl ArrayShape for Array {}\n\nfn main() {\n    // ... and can also be used\n    println!(\"{}\", Array.shape());\n}\n\n// But this super trait doesn't work\n#[cfg(not(working))]\ntrait MatrixShape: ArrayShape {\n    fn nrows(&self) -> uint { self.shape().val0() }\n}\n\n#[cfg(not(working))]\nfn bad() {\n    // This doesn't work either\n    println!(\"{}\", (&Array as &ArrayShape).shape());\n}\n```\n\nOutput:\n\n``` rust\ntrait.rs:28:31: 28:43 error: source trait is inaccessible\ntrait.rs:28     fn nrows(&self) -> uint { self.shape().val0() }\n                                          ^~~~~~~~~~~~\ntrait.rs:28:31: 28:43 note: module `traits` is private\ntrait.rs:28     fn nrows(&self) -> uint { self.shape().val0() }\n                                          ^~~~~~~~~~~~\ntrait.rs:34:20: 34:51 error: source trait is inaccessible\ntrait.rs:34     println!(\"{}\", (&Array as &ArrayShape).shape());\n                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnote: in expansion of format_args!\n<std macros>:2:23: 2:77 note: expansion site\n<std macros>:1:1: 3:2 note: in expansion of println!\ntrait.rs:34:5: 34:53 note: expansion site\ntrait.rs:34:20: 34:51 note: module `traits` is private\ntrait.rs:34     println!(\"{}\", (&Array as &ArrayShape).shape());\n                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nnote: in expansion of format_args!\n<std macros>:2:23: 2:77 note: expansion site\n<std macros>:1:1: 3:2 note: in expansion of println!\ntrait.rs:34:5: 34:53 note: expansion site\nerror: aborting due to 2 previous errors\n```\n\nI'm no longer sure if this is a bug or is intended? The `impl` block works, but the super trait and the trait object don't. Do the latter two have different scoping/privacy rules?\n\nVersion:\n\n```\nrustc 0.12.0-pre (795f6ae82 2014-08-04 07:01:10 +0000)\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16264/timeline", "performed_via_github_app": null, "state_reason": "completed"}