{"url": "https://api.github.com/repos/rust-lang/rust/issues/105386", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105386/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105386/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105386/events", "html_url": "https://github.com/rust-lang/rust/issues/105386", "id": 1479764712, "node_id": "I_kwDOAAsO6M5YM2ro", "number": 105386, "title": "Variable debuginfo introduces undefined behaviour", "user": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203130, "node_id": "MDU6TGFiZWwyMDMxMzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-debuginfo", "name": "A-debuginfo", "color": "f7e101", "default": false, "description": "Area: Debugging information in compiled programs (DWARF, PDB, etc.)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2019962432, "node_id": "MDU6TGFiZWwyMDE5OTYyNDMy", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt-inlining", "name": "A-mir-opt-inlining", "color": "f7e101", "default": false, "description": "Area: MIR inlining"}], "state": "closed", "locked": false, "assignee": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-12-06T17:54:32Z", "updated_at": "2022-12-10T19:49:49Z", "closed_at": "2022-12-10T19:49:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When generating a variable debuginfo, rustc emits an expression describing the address of a source variable. Since #83941, rustc also evaluates this expression.\r\n\r\nThe expression can contain indirections, and it is not always valid to evaluate it. Consider a source variable that is described indirectly in terms of a base `LocalRef::Place` local. The source variable will be introduced at the beginning of a function, but at this point the base local might be uninitialized. For example:\r\n\r\n```rust\r\n#![feature(stmt_expr_attributes)]\r\npub struct S([usize; 8]);\r\n\r\n#[no_mangle]\r\npub fn f(x: S, y: S) -> usize {\r\n    (#[inline(always)]|| {\r\n        let _z = x;\r\n        y.0[0]\r\n    })()\r\n}\r\n```\r\n\r\n```\r\n$ rustc --crate-type=lib c.rs -O -Cdebuginfo=2 -Cno-prepopulate-passes -Zunpretty=mir\r\n...\r\nfn f(_1: S, _2: S) -> usize {\r\n    debug x => _1;                       // in scope 0 at c.rs:5:10: 5:11\r\n    debug y => _2;                       // in scope 0 at c.rs:5:16: 5:17\r\n    let mut _0: usize;                   // return place in scope 0 at c.rs:5:25: 5:30\r\n    let mut _3: [closure@c.rs:6:23: 6:25]; // in scope 0 at c.rs:6:5: 9:7\r\n    let mut _4: &S;                      // in scope 0 at c.rs:6:5: 9:7\r\n    scope 1 (inlined f::{closure#0}) {   // at c.rs:6:5: 9:9\r\n        debug x => (_3.0: S);            // in scope 1 at c.rs:5:10: 5:11\r\n        debug y => (*(_3.1: &S));        // in scope 1 at c.rs:5:16: 5:17\r\n...\r\n```\r\n\r\n```\r\n$ rustc --crate-type=lib c.rs -O -Cdebuginfo=2 -Cno-prepopulate-passes --emit llvm-ir\r\n...\r\n%S = type { [8 x i64] }\r\n%\"[closure@c.rs:6:23: 6:25]\" = type { %S, ptr }\r\n\r\n; Function Attrs: nonlazybind uwtable\r\ndefine i64 @f(ptr noalias nocapture noundef readonly dereferenceable(64) %x, ptr noalias nocapture noundef readonly dereferenceable(64) %y) unnamed_addr #0 !dbg !6 {\r\nstart:\r\n  %_z = alloca %S, align 8\r\n  %_3 = alloca %\"[closure@c.rs:6:23: 6:25]\", align 8\r\n  call void @llvm.dbg.declare(metadata ptr %x, metadata !21, metadata !DIExpression()), !dbg !23\r\n  call void @llvm.dbg.declare(metadata ptr %y, metadata !22, metadata !DIExpression()), !dbg !24\r\n  call void @llvm.dbg.declare(metadata ptr %_3, metadata !25, metadata !DIExpression()), !dbg !39\r\n  %0 = getelementptr inbounds %\"[closure@c.rs:6:23: 6:25]\", ptr %_3, i32 0, i32 1\r\n  %1 = load ptr, ptr %0, align 8, !nonnull !19, !align !41, !noundef !19\r\n  call void @llvm.dbg.declare(metadata ptr %_3, metadata !36, metadata !DIExpression(DW_OP_plus_uconst, 64, DW_OP_deref)), !dbg !42\r\n  call void @llvm.dbg.declare(metadata ptr %_z, metadata !37, metadata !DIExpression()), !dbg !43\r\n  call void @llvm.lifetime.start.p0(i64 72, ptr %_3), !dbg !40\r\n```\r\n\r\nNote that `%1 = load` has `!nonnull`  and `!noundef` metadata but loaded value is uninitialized.\r\n\r\n(This leads to end-to-end miscompilation with -Cdebuginfo=2).\r\n\r\ncc @wesleywiser, @nagisa #83941\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105386/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105386/timeline", "performed_via_github_app": null, "state_reason": "completed"}