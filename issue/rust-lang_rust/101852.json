{"url": "https://api.github.com/repos/rust-lang/rust/issues/101852", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/101852/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/101852/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/101852/events", "html_url": "https://github.com/rust-lang/rust/issues/101852", "id": 1374438841, "node_id": "I_kwDOAAsO6M5R7EW5", "number": 101852, "title": "internal compiler error: opaque type with non-universal region substs", "user": {"login": "Luro02", "id": 24826124, "node_id": "MDQ6VXNlcjI0ODI2MTI0", "avatar_url": "https://avatars.githubusercontent.com/u/24826124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Luro02", "html_url": "https://github.com/Luro02", "followers_url": "https://api.github.com/users/Luro02/followers", "following_url": "https://api.github.com/users/Luro02/following{/other_user}", "gists_url": "https://api.github.com/users/Luro02/gists{/gist_id}", "starred_url": "https://api.github.com/users/Luro02/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Luro02/subscriptions", "organizations_url": "https://api.github.com/users/Luro02/orgs", "repos_url": "https://api.github.com/users/Luro02/repos", "events_url": "https://api.github.com/users/Luro02/events{/privacy}", "received_events_url": "https://api.github.com/users/Luro02/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-09-15T12:18:27Z", "updated_at": "2022-10-01T16:08:09Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\npub fn ice(\r\n    x: impl AsRef<str>,\r\n) -> impl IntoIterator<Item = ()> {\r\n    vec![].append(&mut ice(x.as_ref()));\r\n\r\n    Vec::new()\r\n}\r\n\r\nfn main() {\r\n}\r\n```\r\n[playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&code=pub%20fn%20ice(%0A%20%20%20%20x%3A%20impl%20AsRef%3Cstr%3E%2C%0A)%20-%3E%20impl%20IntoIterator%3CItem%20%3D%20()%3E%20%7B%0A%20%20%20%20vec!%5B%5D.append(%26mut%20ice(x.as_ref()))%3B%0A%0A%20%20%20%20Vec%3A%3Anew()%0A%7D%0A%0Afn%20main()%20%7B%0A%7D%0A)\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.63.0 (4b91a6ea7 2022-08-08)\r\nbinary: rustc\r\ncommit-hash: 4b91a6ea7258a947e59c6522cd5898e7c0a6a88f\r\ncommit-date: 2022-08-08\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.63.0\r\nLLVM version: 14.0.5\r\n```\r\nThis happens on latest nightly and stable.\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nwarning: function cannot return without recursing\r\n --> src/main.rs:1:1\r\n  |\r\n1 | / pub fn ice(\r\n2 | |     x: impl AsRef<str>,\r\n3 | | ) -> impl IntoIterator<Item = ()> {\r\n4 | |     vec![].append(&mut ice(x.as_ref()));\r\n  | |                        --------------- recursive call site\r\n5 | |\r\n6 | |     Vec::new()\r\n7 | | }\r\n  | |_^ cannot return without recursing\r\n  |\r\n  = note: `#[warn(unconditional_recursion)]` on by default\r\n  = help: a `loop` may express intention better if this is on purpose\r\n\r\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\r\n\r\nerror: internal compiler error: opaque type with non-universal region substs\r\n --> src/main.rs:4:5\r\n  |\r\n4 |     vec![].append(&mut ice(x.as_ref()));\r\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: delayed at compiler/rustc_borrowck/src/region_infer/opaque_types.rs:81:40\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1425:13\r\nstack backtrace:\r\n   0:     0x7f9e5d24e18d - std::backtrace_rs::backtrace::libunwind::trace::h8217d0a8f3fd2f41\r\n                               at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7f9e5d24e18d - std::backtrace_rs::backtrace::trace_unsynchronized::h308103876b3af410\r\n                               at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f9e5d24e18d - std::sys_common::backtrace::_print_fmt::hc208018c6153605e\r\n                               at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/std/src/sys_common/backtrace.rs:66:5\r\n   3:     0x7f9e5d24e18d - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hf89a7ed694dfb585\r\n                               at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/std/src/sys_common/backtrace.rs:45:22\r\n   4:     0x7f9e5d2a9f7c - core::fmt::write::h21038c1382fe4264\r\n                               at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/core/src/fmt/mod.rs:1197:17\r\n   5:     0x7f9e5d23f8a1 - std::io::Write::write_fmt::h7dbb1c9a3c254aef\r\n                               at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/std/src/io/mod.rs:1672:15\r\n   6:     0x7f9e5d250e55 - std::sys_common::backtrace::_print::h4e8889719c9ddeb8\r\n                               at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/std/src/sys_common/backtrace.rs:48:5\r\n   7:     0x7f9e5d250e55 - std::sys_common::backtrace::print::h1506fe2cb3022667\r\n                               at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/std/src/sys_common/backtrace.rs:35:9\r\n   8:     0x7f9e5d250e55 - std::panicking::default_hook::{{closure}}::hd9d7ce2a8a782440\r\n                               at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/std/src/panicking.rs:295:22\r\n   9:     0x7f9e5d250b76 - std::panicking::default_hook::h5b16ec25444b1b5d\r\n                               at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/std/src/panicking.rs:314:9\r\n  10:     0x7f9e5da2bb54 - rustc_driver[e01eec72899701d3]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n  11:     0x7f9e5d25152a - std::panicking::rust_panic_with_hook::hb0138cb6e6fea3e4\r\n                               at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/std/src/panicking.rs:702:17\r\n  12:     0x7f9e5ebe7a91 - std[f9ee9c7d4fd68eda]::panicking::begin_panic::<rustc_errors[b2e8492a1747ee42]::ExplicitBug>::{closure#0}\r\n  13:     0x7f9e5ebe5036 - std[f9ee9c7d4fd68eda]::sys_common::backtrace::__rust_end_short_backtrace::<std[f9ee9c7d4fd68eda]::panicking::begin_panic<rustc_errors[b2e8492a1747ee42]::ExplicitBug>::{closure#0}, !>\r\n  14:     0x7f9e5ebf4806 - std[f9ee9c7d4fd68eda]::panicking::begin_panic::<rustc_errors[b2e8492a1747ee42]::ExplicitBug>\r\n  15:     0x7f9e5ebf1ad6 - std[f9ee9c7d4fd68eda]::panic::panic_any::<rustc_errors[b2e8492a1747ee42]::ExplicitBug>\r\n  16:     0x7f9e604abcec - <rustc_errors[b2e8492a1747ee42]::HandlerInner as core[3edb0f9afb6adb32]::ops::drop::Drop>::drop\r\n  17:     0x7f9e5fbd6348 - core[3edb0f9afb6adb32]::ptr::drop_in_place::<rustc_session[72c90254a58d88d1]::parse::ParseSess>\r\n  18:     0x7f9e5fbd92e3 - <alloc[59e4fb8ddcfb913c]::rc::Rc<rustc_session[72c90254a58d88d1]::session::Session> as core[3edb0f9afb6adb32]::ops::drop::Drop>::drop\r\n  19:     0x7f9e5fbd86bd - core[3edb0f9afb6adb32]::ptr::drop_in_place::<rustc_interface[be6c6c80f2cd8cf2]::interface::Compiler>\r\n  20:     0x7f9e5fbd5c54 - rustc_span[fb9cf5df1e5e5539]::with_source_map::<core[3edb0f9afb6adb32]::result::Result<(), rustc_errors[b2e8492a1747ee42]::ErrorGuaranteed>, rustc_interface[be6c6c80f2cd8cf2]::interface::create_compiler_and_run<core[3edb0f9afb6adb32]::result::Result<(), rustc_errors[b2e8492a1747ee42]::ErrorGuaranteed>, rustc_driver[e01eec72899701d3]::run_compiler::{closure#1}>::{closure#1}>\r\n  21:     0x7f9e5fbdd302 - <scoped_tls[134a193f706323ee]::ScopedKey<rustc_span[fb9cf5df1e5e5539]::SessionGlobals>>::set::<rustc_interface[be6c6c80f2cd8cf2]::interface::run_compiler<core[3edb0f9afb6adb32]::result::Result<(), rustc_errors[b2e8492a1747ee42]::ErrorGuaranteed>, rustc_driver[e01eec72899701d3]::run_compiler::{closure#1}>::{closure#0}, core[3edb0f9afb6adb32]::result::Result<(), rustc_errors[b2e8492a1747ee42]::ErrorGuaranteed>>\r\n  22:     0x7f9e5fc0099f - std[f9ee9c7d4fd68eda]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[be6c6c80f2cd8cf2]::util::run_in_thread_pool_with_globals<rustc_interface[be6c6c80f2cd8cf2]::interface::run_compiler<core[3edb0f9afb6adb32]::result::Result<(), rustc_errors[b2e8492a1747ee42]::ErrorGuaranteed>, rustc_driver[e01eec72899701d3]::run_compiler::{closure#1}>::{closure#0}, core[3edb0f9afb6adb32]::result::Result<(), rustc_errors[b2e8492a1747ee42]::ErrorGuaranteed>>::{closure#0}, core[3edb0f9afb6adb32]::result::Result<(), rustc_errors[b2e8492a1747ee42]::ErrorGuaranteed>>\r\n  23:     0x7f9e5fbf2529 - <<std[f9ee9c7d4fd68eda]::thread::Builder>::spawn_unchecked_<rustc_interface[be6c6c80f2cd8cf2]::util::run_in_thread_pool_with_globals<rustc_interface[be6c6c80f2cd8cf2]::interface::run_compiler<core[3edb0f9afb6adb32]::result::Result<(), rustc_errors[b2e8492a1747ee42]::ErrorGuaranteed>, rustc_driver[e01eec72899701d3]::run_compiler::{closure#1}>::{closure#0}, core[3edb0f9afb6adb32]::result::Result<(), rustc_errors[b2e8492a1747ee42]::ErrorGuaranteed>>::{closure#0}, core[3edb0f9afb6adb32]::result::Result<(), rustc_errors[b2e8492a1747ee42]::ErrorGuaranteed>>::{closure#1} as core[3edb0f9afb6adb32]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  24:     0x7f9e5d25b463 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h1680342795a2dc08\r\n                               at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/alloc/src/boxed.rs:1951:9\r\n  25:     0x7f9e5d25b463 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h45204a69827b0e83\r\n                               at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/alloc/src/boxed.rs:1951:9\r\n  26:     0x7f9e5d25b463 - std::sys::unix::thread::Thread::new::thread_start::h5d4e11bbda4161c8\r\n                               at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/std/src/sys/unix/thread.rs:108:17\r\n  27:     0x7f9e5d181609 - start_thread\r\n  28:     0x7f9e5d0a4133 - clone\r\n  29:                0x0 - <unknown>\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.63.0 (4b91a6ea7 2022-08-08) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nwarning: `playground` (bin \"playground\") generated 1 warning\r\nerror: could not compile `playground`; 1 warning emitted\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nwarning: function cannot return without recursing\r\n --> src/main.rs:1:1\r\n  |\r\n1 | / pub fn ice(\r\n2 | |     x: impl AsRef<str>,\r\n3 | | ) -> impl IntoIterator<Item = ()> {\r\n4 | |     vec![].append(&mut ice(x.as_ref()));\r\n  | |                        --------------- recursive call site\r\n5 | |\r\n6 | |     Vec::new()\r\n7 | | }\r\n  | |_^ cannot return without recursing\r\n  |\r\n  = note: `#[warn(unconditional_recursion)]` on by default\r\n  = help: a `loop` may express intention better if this is on purpose\r\n\r\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\r\n\r\nerror: internal compiler error: opaque type with non-universal region substs\r\n --> src/main.rs:4:5\r\n  |\r\n4 |     vec![].append(&mut ice(x.as_ref()));\r\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: delayed at compiler/rustc_borrowck/src/region_infer/opaque_types.rs:81:40\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1425:13\r\nstack backtrace:\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop\r\n   3: core::ptr::drop_in_place::<rustc_session::parse::ParseSess>\r\n   4: <alloc::rc::Rc<rustc_session::session::Session> as core::ops::drop::Drop>::drop\r\n   5: core::ptr::drop_in_place::<rustc_interface::interface::Compiler>\r\n   6: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n   7: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.63.0 (4b91a6ea7 2022-08-08) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nwarning: `playground` (bin \"playground\") generated 1 warning\r\nerror: could not compile `playground`; 1 warning emitted\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/101852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/101852/timeline", "performed_via_github_app": null, "state_reason": null}