{"url": "https://api.github.com/repos/rust-lang/rust/issues/64170", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64170/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64170/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64170/events", "html_url": "https://github.com/rust-lang/rust/issues/64170", "id": 489614134, "node_id": "MDU6SXNzdWU0ODk2MTQxMzQ=", "number": 64170, "title": "File and Metadata should document reasons to prefer *not* to use `is_file()`", "user": {"login": "kentfredric", "id": 44790, "node_id": "MDQ6VXNlcjQ0Nzkw", "avatar_url": "https://avatars.githubusercontent.com/u/44790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kentfredric", "html_url": "https://github.com/kentfredric", "followers_url": "https://api.github.com/users/kentfredric/followers", "following_url": "https://api.github.com/users/kentfredric/following{/other_user}", "gists_url": "https://api.github.com/users/kentfredric/gists{/gist_id}", "starred_url": "https://api.github.com/users/kentfredric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kentfredric/subscriptions", "organizations_url": "https://api.github.com/users/kentfredric/orgs", "repos_url": "https://api.github.com/users/kentfredric/repos", "events_url": "https://api.github.com/users/kentfredric/events{/privacy}", "received_events_url": "https://api.github.com/users/kentfredric/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-05T08:46:56Z", "updated_at": "2020-06-28T12:19:12Z", "closed_at": "2020-06-28T12:19:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "As per https://github.com/rust-lang/rust-clippy/issues/4503, there's a bit of a trap you can fall into if you use `is_file()` as a predictor for \"can I probably open and read bytes from this thing\".\r\n\r\nYou *generally* don't want to assert `is_file()` for user specified paths, **especially** if they come from command line arguments, where they might be Unix FIFO File Descriptors.\r\n\r\nIf for example you were implementing `cat` in rust, using `is_file()` instead of `!is_dir()` would prevent you from reading block devices, character devices, pipes, and more:\r\n```\r\n           S_IFSOCK   0140000   socket\r\n           S_IFLNK    0120000   symbolic link\r\n           S_IFREG    0100000   regular file\r\n           S_IFBLK    0060000   block device\r\n           S_IFDIR    0040000   directory\r\n           S_IFCHR    0020000   character device\r\n           S_IFIFO    0010000   FIFO\r\n```\r\n\r\nAnd this would break your ability to be composed nicely in Unix flows where patterns like:\r\n\r\n```bash\r\ndiff <( prog_a ) <( prog_b )\r\n```\r\n\r\nWould become broken if diff was a rust program that ensured all its arguments were `is_file()`", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64170/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64170/timeline", "performed_via_github_app": null, "state_reason": "completed"}