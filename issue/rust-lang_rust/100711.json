{"url": "https://api.github.com/repos/rust-lang/rust/issues/100711", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/100711/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/100711/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/100711/events", "html_url": "https://github.com/rust-lang/rust/issues/100711", "id": 1342703190, "node_id": "I_kwDOAAsO6M5QCAZW", "number": 100711, "title": "std::net::TcpStream::connect() and .to_socket_addrs() segfault when address is \"localhost:8080\", build is static and /etc/hosts is empty on arch linux.", "user": {"login": "alkeryn", "id": 11599075, "node_id": "MDQ6VXNlcjExNTk5MDc1", "avatar_url": "https://avatars.githubusercontent.com/u/11599075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alkeryn", "html_url": "https://github.com/alkeryn", "followers_url": "https://api.github.com/users/alkeryn/followers", "following_url": "https://api.github.com/users/alkeryn/following{/other_user}", "gists_url": "https://api.github.com/users/alkeryn/gists{/gist_id}", "starred_url": "https://api.github.com/users/alkeryn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alkeryn/subscriptions", "organizations_url": "https://api.github.com/users/alkeryn/orgs", "repos_url": "https://api.github.com/users/alkeryn/repos", "events_url": "https://api.github.com/users/alkeryn/events{/privacy}", "received_events_url": "https://api.github.com/users/alkeryn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 5223550385, "node_id": "LA_kwDOAAsO6M8AAAABN1kNsQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-target-feature", "name": "A-target-feature", "color": "f7e101", "default": false, "description": "Area: Enabling/disabling target features like AVX, Neon, etc."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2022-08-18T07:57:00Z", "updated_at": "2023-03-04T00:03:59Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\n-->\r\n\r\nBoth of those function will segfault when trying to resolve localhost on any port if the following condition are met :\r\n- the build is static (compiled with `rustc -C target-feature=+crt-static main.rs`\r\n- the address used is \"localhost:<any port>\"\r\n- the os is Arch Linux lattest (may work on other distros/OS)\r\n- the file /etc/hosts is empty\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::net::ToSocketAddrs;\r\n\r\npub fn main() {\r\n    println!(\"before\");\r\n    let _ = \"localhost:8080\".to_socket_addrs(); // will segfault\r\n    std::net::TcpStream::connect(\"localhost:8080\").unwrap(); // will also segfault\r\n    println!(\"hello world\");\r\n}\r\n```\r\n\r\nI expected to see this happen: the address is resolved\r\n\r\nInstead, this happened: the program segfault\r\n\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.65.0-nightly (9c20b2a8c 2022-08-17)\r\nbinary: rustc\r\ncommit-hash: 9c20b2a8cc7588decb6de25ac6a7912dcef24d65\r\ncommit-date: 2022-08-17\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.65.0-nightly\r\nLLVM version: 15.0.0\r\n```\r\n`uname -a`:  (This is Arch-linux lattest, i could not reproduce the bug on another distro, but still, it shouldn't segfault)\r\n```\r\nLinux Alkeryn-PC 5.19.1-arch2-1 #1 SMP PREEMPT_DYNAMIC Thu, 11 Aug 2022 16:06:13 +0000 x86_64 GNU/Linux\r\n```\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\nFor the backtrace, RUST_BACKTRACE=1 did not work and gave the following output :\r\n```\r\nRUST_BACKTRACE=1 ./main\r\nbefore\r\nzsh: segmentation fault (core dumped)  RUST_BACKTRACE=1 ./main\r\n```\r\nso here is a backtrace made with gdb (don't mind the gef plugin being installed\r\n\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n[ Legend: Modified register | Code | Heap | Stack | String ]\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 registers \u2500\u2500\u2500\u2500\r\n$rax   : 0x0               \r\n$rbx   : 0x3               \r\n$rcx   : 0x007ffff7cf838e  \u2192  0x310b77fffff0003d (\"=\"?)\r\n$rdx   : 0x007ffff7ff8490  \u2192  <_dl_static_dtv+16> add BYTE PTR [rax], al\r\n$rsp   : 0x007fffffffcaf0  \u2192  \"/proc/sys/net/ipv6/conf/all/disable_ipv6\"\r\n$rbp   : 0x007fffffffcc20  \u2192  0x007fffffffcce0  \u2192  0x0000000000000010\r\n$rsi   : 0x007ffff7d99dd5  \u2192  0x6225206125000200\r\n$rdi   : 0x007ffff79c1c88  \u2192  0x0000000000000005\r\n$rip   : 0x007ffff79a5196  \u2192   mov r12, QWORD PTR [rax+0x8]\r\n$r8    : 0x0               \r\n$r9    : 0x0               \r\n$r10   : 0x1000            \r\n$r11   : 0x206             \r\n$r12   : 0x0               \r\n$r13   : 0x007fffffffcaf0  \u2192  \"/proc/sys/net/ipv6/conf/all/disable_ipv6\"\r\n$r14   : 0x007fffffffccf0  \u2192  0x0000000000000000\r\n$r15   : 0x007fffffffcca0  \u2192  0xe1efbb33d283a048\r\n$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow RESUME virtualx86 identification]\r\n$cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 \r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 stack \u2500\u2500\u2500\u2500\r\n0x007fffffffcaf0\u2502+0x0000: \"/proc/sys/net/ipv6/conf/all/disable_ipv6\"\t \u2190 $rsp, $r13\r\n0x007fffffffcaf8\u2502+0x0008: \"s/net/ipv6/conf/all/disable_ipv6\"\r\n0x007fffffffcb00\u2502+0x0010: \"v6/conf/all/disable_ipv6\"\r\n0x007fffffffcb08\u2502+0x0018: \"all/disable_ipv6\"\r\n0x007fffffffcb10\u2502+0x0020: \"ble_ipv6\"\r\n0x007fffffffcb18\u2502+0x0028: 0xffffffffffffff00\r\n0x007fffffffcb20\u2502+0x0030: 0x0000000000000000\r\n0x007fffffffcb28\u2502+0x0038: 0x007ffff79a4e33  \u2192   lea rdx, [rax+0xb]\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 code:x86:64 \u2500\u2500\u2500\u2500\r\n   0x7ffff79a5187                  je     0x7ffff79a51d0\r\n   0x7ffff79a5189                  lea    rdi, [rip+0x1caf8]        # 0x7ffff79c1c88\r\n   0x7ffff79a5190                  call   QWORD PTR [rip+0x1cc82]        # 0x7ffff79c1e18\r\n \u2192 0x7ffff79a5196                  mov    r12, QWORD PTR [rax+0x8]\r\n   0x7ffff79a519d                  mov    r13, rax\r\n   0x7ffff79a51a0                  test   r12, r12\r\n   0x7ffff79a51a3                  je     0x7ffff79a51e5\r\n   0x7ffff79a51a5                  sub    r12, 0x1\r\n   0x7ffff79a51a9                  mov    eax, 0x3ffffe\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 threads \u2500\u2500\u2500\u2500\r\n[#0] Id 1, Name: \"main\", stopped 0x7ffff79a5196 in ?? (), reason: SIGSEGV\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 trace \u2500\u2500\u2500\u2500\r\n[#0] 0x7ffff79a5196 \u2192 mov r12, QWORD PTR [rax+0x8]\r\n[#1] 0x7ffff79ad6b1 \u2192 jmp 0x7ffff79ad518\r\n[#2] 0x7ffff79a1045 \u2192 mov rbx, QWORD PTR [rsp]\r\n[#3] 0x7ffff79aa1a6 \u2192 _nss_myhostname_gethostbyname4_r()\r\n[#4] 0x7ffff7f248ae \u2192 getaddrinfo()\r\n[#5] 0x7ffff7ed5cf6 \u2192 std::sys_common::net::{impl#6}::try_from()\r\n[#6] 0x7ffff7ece64c \u2192 core::convert::{impl#6}::try_into<(&str, u16), std::sys_common::net::LookupHost>()\r\n[#7] 0x7ffff7ece64c \u2192 std::sys_common::net::{impl#5}::try_from()\r\n[#8] 0x7ffff7ece64c \u2192 core::convert::{impl#6}::try_into<&str, std::sys_common::net::LookupHost>()\r\n[#9] 0x7ffff7ece64c \u2192 std::net::addr::{impl#30}::to_socket_addrs()\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\ngef\u27a4  bt\r\n#0  0x00007ffff79a5196 in ?? () from /usr/lib/libnss_myhostname.so.2\r\n#1  0x00007ffff79ad6b1 in ?? () from /usr/lib/libnss_myhostname.so.2\r\n#2  0x00007ffff79a1045 in ?? () from /usr/lib/libnss_myhostname.so.2\r\n#3  0x00007ffff79aa1a6 in _nss_myhostname_gethostbyname4_r () from /usr/lib/libnss_myhostname.so.2\r\n#4  0x00007ffff7f248ae in getaddrinfo ()\r\n#5  0x00007ffff7ed5cf6 in std::sys_common::net::{impl#6}::try_from () at library/std/src/sys_common/net.rs:205\r\n#6  0x00007ffff7ece64c in core::convert::{impl#6}::try_into<(&str, u16), std::sys_common::net::LookupHost> () at library/core/src/convert/mod.rs:590\r\n#7  std::sys_common::net::{impl#5}::try_from () at library/std/src/sys_common/net.rs:190\r\n#8  core::convert::{impl#6}::try_into<&str, std::sys_common::net::LookupHost> () at library/core/src/convert/mod.rs:590\r\n#9  std::net::addr::{impl#30}::to_socket_addrs () at library/std/src/net/addr.rs:961\r\n#10 0x00007ffff7eb91eb in main::main ()\r\n#11 0x00007ffff7eb9ef3 in core::ops::function::FnOnce::call_once ()\r\n#12 0x00007ffff7eb9159 in std::sys_common::backtrace::__rust_begin_short_backtrace ()\r\n#13 0x00007ffff7eb8fc9 in std::rt::lang_start::{{closure}} ()\r\n#14 0x00007ffff7ecb7bf in core::ops::function::impls::{impl#2}::call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> () at library/core/src/ops/function.rs:280\r\n#15 std::panicking::try::do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> () at library/std/src/panicking.rs:492\r\n#16 std::panicking::try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> () at library/std/src/panicking.rs:456\r\n#17 std::panic::catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> () at library/std/src/panic.rs:137\r\n#18 std::rt::lang_start_internal::{closure#2} () at library/std/src/rt.rs:128\r\n#19 std::panicking::try::do_call<std::rt::lang_start_internal::{closure_env#2}, isize> () at library/std/src/panicking.rs:492\r\n#20 std::panicking::try<isize, std::rt::lang_start_internal::{closure_env#2}> () at library/std/src/panicking.rs:456\r\n#21 std::panic::catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> () at library/std/src/panic.rs:137\r\n#22 std::rt::lang_start_internal () at library/std/src/rt.rs:128\r\n#23 0x00007ffff7eb8fb1 in std::rt::lang_start ()\r\n#24 0x00007ffff7eb9273 in main ()\r\ngef\u27a4  \r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/100711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/100711/timeline", "performed_via_github_app": null, "state_reason": null}