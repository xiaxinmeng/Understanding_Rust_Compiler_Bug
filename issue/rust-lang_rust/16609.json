{"url": "https://api.github.com/repos/rust-lang/rust/issues/16609", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16609/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16609/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16609/events", "html_url": "https://github.com/rust-lang/rust/issues/16609", "id": 40628693, "node_id": "MDU6SXNzdWU0MDYyODY5Mw==", "number": 16609, "title": "Cannot transiently move out of dereference of &mut", "user": {"login": "bfops", "id": 196249, "node_id": "MDQ6VXNlcjE5NjI0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/196249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bfops", "html_url": "https://github.com/bfops", "followers_url": "https://api.github.com/users/bfops/followers", "following_url": "https://api.github.com/users/bfops/following{/other_user}", "gists_url": "https://api.github.com/users/bfops/gists{/gist_id}", "starred_url": "https://api.github.com/users/bfops/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bfops/subscriptions", "organizations_url": "https://api.github.com/users/bfops/orgs", "repos_url": "https://api.github.com/users/bfops/repos", "events_url": "https://api.github.com/users/bfops/events{/privacy}", "received_events_url": "https://api.github.com/users/bfops/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-08-19T19:41:34Z", "updated_at": "2014-08-20T21:12:42Z", "closed_at": "2014-08-19T20:25:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I can't find an allowed way to create behavior resembling:\n\n```\nstruct Foo {\n    x: Option<Rc<()>>,\n}\n\nimpl Foo {\n    fn foo(&mut self) {\n        match self.x {\n            None => { self.x = Some(Rc::new(())); },\n            Some(mut bar) => { self.x = Some(bar); },\n        }\n    }\n}\n```\n\nor\n\n```\nstruct Bar {\n    x: Option<Rc<()>>,\n}\n\nimpl Bar {\n    fn foo(&mut self) {\n        let x = match self.x {\n            None => Some(Rc::new(())\n            Some(mut bar) => Some(bar),\n        };\n        self.x = x;\n    }\n}\n```\n\nThese both give me:\n\n```\nerror: cannot move out of dereference of `&mut`-pointer\n```\n\nbut the value is then replaced before it can be used. Is this actually invalid? I've finally ended up using `Option`s as \"update\" flags, but is there some other way to do things like this?\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16609/timeline", "performed_via_github_app": null, "state_reason": "completed"}