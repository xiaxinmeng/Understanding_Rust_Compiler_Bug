{"url": "https://api.github.com/repos/rust-lang/rust/issues/112423", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112423/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112423/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112423/events", "html_url": "https://github.com/rust-lang/rust/issues/112423", "id": 1747891159, "node_id": "I_kwDOAAsO6M5oLrPX", "number": 112423, "title": "std::process::Child::kill should not fail if process is terminated on Windows", "user": {"login": "stepancheg", "id": 28969, "node_id": "MDQ6VXNlcjI4OTY5", "avatar_url": "https://avatars.githubusercontent.com/u/28969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stepancheg", "html_url": "https://github.com/stepancheg", "followers_url": "https://api.github.com/users/stepancheg/followers", "following_url": "https://api.github.com/users/stepancheg/following{/other_user}", "gists_url": "https://api.github.com/users/stepancheg/gists{/gist_id}", "starred_url": "https://api.github.com/users/stepancheg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stepancheg/subscriptions", "organizations_url": "https://api.github.com/users/stepancheg/orgs", "repos_url": "https://api.github.com/users/stepancheg/repos", "events_url": "https://api.github.com/users/stepancheg/events{/privacy}", "received_events_url": "https://api.github.com/users/stepancheg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123109, "node_id": "MDU6TGFiZWwxMjMxMDk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows", "name": "O-windows", "color": "6e6ec0", "default": false, "description": "Operating system: Windows"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 3471279331, "node_id": "LA_kwDOAAsO6M7O54Tj", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-libs-api-nominated", "name": "I-libs-api-nominated", "color": "e10c02", "default": false, "description": "Indicates that an issue has been nominated for discussion during a libs-api team meeting."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2023-06-08T13:24:05Z", "updated_at": "2023-06-13T18:49:19Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`Child::kill` calls `kill` on Unix, and `TerminateProcess` on Windows.\r\n\r\nIf process is terminated, but handle is alive yet, `kill` is successful on Unix, but fails on Windows.\r\n\r\n`kill` is successful on Unix because the process is zombie until waited (it fails after process `waited`, that's probably OK)\r\n\r\nAccording to [documentation of `TerminateProcess`](https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-terminateprocess)\r\n\r\n> After a process has terminated, call to TerminateProcess with open handles to the process fails with ERROR_ACCESS_DENIED (5) error code\r\n\r\nSo if someone else (not us) terminated the process, `kill` would fail.\r\n\r\nThere are problems with this behavior:\r\n* API is different between Unix and Windows\r\n* API to reliably terminate the process is complicated\r\n  * call `kill`\r\n  * if `kill` failed, need to `try_wait`. And if `try_wait` is successful, ignore the error of `kill`\r\n\r\nI could reproduce it. I don't have easy access to Windows machine to create completely isolated test case, but repro looks like this:\r\n\r\n```\r\nlet mut command = std::process::Command::new(\"powershell\");\r\ncommand.args([\"-c\", \"Start-Sleep -Seconds 10000\"]);\r\nlet mut child = command.spawn().unwrap();\r\nlet pid = child.id().try_into().unwrap();\r\n\r\n// Terminate by process id, NOT by our process handle. Like if some other process killed it.\r\n// This function calls `OpenProcess(pid)` followed by `TerminateProcess`.\r\nkill(pid).unwrap();\r\n\r\nthread::sleep(Duration::from_secs(5));\r\n\r\nchild.kill().expect(\"Failed to kill child process\");\r\n```\r\n\r\nThis fails with:\r\n\r\n```\r\nFailed to kill child process: Os { code: 5, kind: PermissionDenied, message: \"Access is denied.\" }\r\n```\r\n\r\nexactly as described in WinAPI docs.\r\n\r\nI think proper `kill` implementation should look like this:\r\n* if process has been waited already, fail explicitly, to be consistent with Unix\r\n* call `TerminateProcess`\r\n* if `TerminateProcess` failed, call `GetExitCodeProcess`\r\n* if `GetExitCodeProcess` is successful and exit code is not `STILL_ACTIVE`, consider `kill` successful\r\n\r\nThis is how `kill` is implemented in our project:\r\n\r\nhttps://github.com/facebook/buck2/blob/b6fb1364e1caf6dac821767b27bda65726e38895/app/buck2_wrapper_common/src/winapi_process.rs#L58-L72\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.70.0-nightly\r\n```\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112423/timeline", "performed_via_github_app": null, "state_reason": null}