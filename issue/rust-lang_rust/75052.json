{"url": "https://api.github.com/repos/rust-lang/rust/issues/75052", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75052/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75052/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75052/events", "html_url": "https://github.com/rust-lang/rust/issues/75052", "id": 671619916, "node_id": "MDU6SXNzdWU2NzE2MTk5MTY=", "number": 75052, "title": "Wrapper/glue functions such as std::fs::FileType::is_file are not always inlined", "user": {"login": "Diomendius", "id": 42310725, "node_id": "MDQ6VXNlcjQyMzEwNzI1", "avatar_url": "https://avatars.githubusercontent.com/u/42310725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Diomendius", "html_url": "https://github.com/Diomendius", "followers_url": "https://api.github.com/users/Diomendius/followers", "following_url": "https://api.github.com/users/Diomendius/following{/other_user}", "gists_url": "https://api.github.com/users/Diomendius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Diomendius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Diomendius/subscriptions", "organizations_url": "https://api.github.com/users/Diomendius/orgs", "repos_url": "https://api.github.com/users/Diomendius/repos", "events_url": "https://api.github.com/users/Diomendius/events{/privacy}", "received_events_url": "https://api.github.com/users/Diomendius/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-02T13:49:40Z", "updated_at": "2021-04-04T00:42:30Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "This function should compile to the exact same assembly as `FileType::is_file` itself, but doesn't: ([godbolt.org link](https://godbolt.org/z/E9Kocv))\r\n```rust\r\npub fn is_file(x: std::fs::FileType) -> bool {\r\n    x.is_file()\r\n}\r\n```\r\n```asm\r\nexample::is_file:\r\n        push    rax\r\n        mov     dword ptr [rsp + 4], edi\r\n        lea     rdi, [rsp + 4]\r\n        call    qword ptr [rip + std::fs::FileType::is_file@GOTPCREL]\r\n        pop     rcx\r\n        ret\r\n```\r\n\r\n`FileType::is_file` is only 2-3 instructions and should surely meet the inlining threshold. Other functions such as `std::fs::Metadata::ino` (provided by `std::os::unix::fs::MetadataExt`) are also not inlined, despite `ino()` being just a single load.\r\n\r\nThis also prevents simple optimizations; despite being a pure function, calling `is_file()` twice results in two separate call instructions just to load, mask and compare the same unchanged var: ([godbolt.org link](https://godbolt.org/z/1nThrK))\r\n\r\nWhen compiling a binary with LTO enabled, these functions get inlined as they should, as far as I can tell, but otherwise there seems to be some kind of boundary preventing the compiler from inlining them.\r\n\r\nNone of the functions in question are marked `#[inline]`, but neither is `Vec::is_empty` for example, yet that function gets inlined just fine.\r\n\r\nThis bug is present as early as rust 1.1.0 and is present in the current nightly:\r\n```\r\nrustc 1.47.0-nightly (05762e3d6 2020-08-01)\r\nbinary: rustc\r\ncommit-hash: 05762e3d6f5facafdd47efdf4203021fadf61bb1\r\ncommit-date: 2020-08-01\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.47.0-nightly\r\nLLVM version: 10.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75052/timeline", "performed_via_github_app": null, "state_reason": null}