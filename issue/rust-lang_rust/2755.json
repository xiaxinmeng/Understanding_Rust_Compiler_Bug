{"url": "https://api.github.com/repos/rust-lang/rust/issues/2755", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/2755/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/2755/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/2755/events", "html_url": "https://github.com/rust-lang/rust/issues/2755", "id": 5361476, "node_id": "MDU6SXNzdWU1MzYxNDc2", "number": 2755, "title": "RFC: Reduce lexer to a regular language", "user": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36956, "node_id": "MDU6TGFiZWwzNjk1Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-frontend", "name": "A-frontend", "color": "f7e101", "default": false, "description": "Area: frontend (errors, parsing and HIR)"}, {"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 235146, "node_id": "MDU6TGFiZWwyMzUxNDY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-syntaxext", "name": "A-syntaxext", "color": "f7e101", "default": false, "description": "Area: Syntax extensions"}, {"id": 235777, "node_id": "MDU6TGFiZWwyMzU3Nzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-grammar", "name": "A-grammar", "color": "f7e101", "default": false, "description": "Area: The grammar of Rust"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/8", "html_url": "https://github.com/rust-lang/rust/milestone/8", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/8/labels", "id": 144598, "node_id": "MDk6TWlsZXN0b25lMTQ0NTk4", "number": 8, "title": "0.5", "description": "", "creator": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 206, "state": "closed", "created_at": "2012-07-12T19:45:03Z", "updated_at": "2013-06-13T02:57:55Z", "due_on": "2012-12-22T08:00:00Z", "closed_at": "2013-06-13T02:57:55Z"}, "comments": 5, "created_at": "2012-06-29T20:40:07Z", "updated_at": "2014-06-16T21:56:21Z", "closed_at": "2012-12-12T22:56:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The lexer presently affords one real and one planned form of recursive token. These mean that our \"tokens\" are not actually describable by a regular language. We discussed this at some length on IRC today and came up with solutions for both cases, so I would like to reduce the lexer back down to \"just regular\".\n\nThe cases are:\n- Balanced block-quote delimiters. That is, the lexer switches mode when seeing an opening `/*` and then consumes a _balanced_ set of possibly-nested `/*` and `*/` pairs. These exist for only one reason, which is to be able to comment-out a region of a file that _already_ contains a comment. The solution we arrived at is to differentiate the problems of \"commenting for the sake of writing some non-rust text like docs or such\" and \"commenting in order to disable code\". For the former case, we'll maintain non-balanced block comments (described by a shortest-match regexp) and for the latter case we'll introduce a syntax extension called `#ignore(...)` that just discards its token-tree (including any  block-comments, which are just single tokens). The corner case is that you won't be able to comment-out blocks that contain mixtures of both other-block-comments and random non-token lexemes, but that's far less common and (imo) worth sacrificing.\n- Lexeme-balanced syntax extensions. This is a touchier topic as I've long since maintained that I want Rust to support custom (marked) lexemes via automatic balancing of bracket-shaped delimiters, much the way Perl's `q{...}` brackets do. Thinking about this in the cold light of the question \"is it enough of a feature to require the lexer to be non-regular?\", though, I have to say no. Python-like raw strings are probably adequate -- or possibly `q{...}` quotes _without_ automatic balancing -- and there's nothing really stopping a syntax extension from picking apart a string-literal token provided this way. I no longer think it's worth the complexity cost.\n\nSo given that, it should be only a couple patches to the lexer to get it back under the \"regular\" threshold, and possibly at that point we could drop in actual regexp definition of our tokens (binding to an existing re engine, or writing our own, I don't care. It should be a linear one in any case, something like http://code.google.com/p/re2/ or a clone if you feel like doing the exercise in rust).\n", "closed_by": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/2755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/2755/timeline", "performed_via_github_app": null, "state_reason": "completed"}