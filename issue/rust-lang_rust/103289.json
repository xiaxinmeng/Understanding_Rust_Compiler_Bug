{"url": "https://api.github.com/repos/rust-lang/rust/issues/103289", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103289/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103289/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103289/events", "html_url": "https://github.com/rust-lang/rust/issues/103289", "id": 1416000836, "node_id": "I_kwDOAAsO6M5UZnVE", "number": 103289, "title": "Lifetime may not live long enough when invoking HashMap::get with a temporary tuple", "user": {"login": "jonhoo", "id": 176295, "node_id": "MDQ6VXNlcjE3NjI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/176295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonhoo", "html_url": "https://github.com/jonhoo", "followers_url": "https://api.github.com/users/jonhoo/followers", "following_url": "https://api.github.com/users/jonhoo/following{/other_user}", "gists_url": "https://api.github.com/users/jonhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonhoo/subscriptions", "organizations_url": "https://api.github.com/users/jonhoo/orgs", "repos_url": "https://api.github.com/users/jonhoo/repos", "events_url": "https://api.github.com/users/jonhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonhoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-10-20T05:48:53Z", "updated_at": "2022-10-21T19:01:00Z", "closed_at": "2022-10-21T15:52:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As is always the case with lifetime issues, this could entirely be a me-problem where I don't understand what's going on well enough. But I _think_ the compiler is wrong here:\r\n\r\nI tried this code ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=819413ee6c8f3040b0a261d80c532d0e)):\r\n\r\n```rust\r\nuse std::collections::HashMap;\r\n\r\npub struct Value<'long>(&'long str);\r\npub struct Holder<'long> {\r\n    cache: HashMap<(&'long str, &'long str), Value<'long>>,\r\n}\r\n\r\nimpl<'long> Holder<'long> {\r\n    pub fn find<'slf, 'short>(&'slf mut self, key: &'short str) -> Option<&'slf Value<'long>> {\r\n        // if the map has {&'long str} as keys instead, and `key` is passed to\r\n        // `get` below, instead of &(key, key), this compiles fine\r\n        let v = if let Some(v) = self.cache.get(&(key, key)) {\r\n            v\r\n        } else {\r\n            self.cache.values().next().unwrap()\r\n        };\r\n\r\n        // This line is unnecessary for reproducing\r\n        let v: &'slf Value<'long> = v;\r\n        Some(v)\r\n    }\r\n}\r\n\r\n```\r\n\r\nI expected to see this happen: it compiles\r\n\r\nInstead, this happened:\r\n```\r\nerror: lifetime may not live long enough\r\n  --> src/lib.rs:18:16\r\n   |\r\n9  |     pub fn find<'slf, 'short>(&'slf mut self, key: &'short str) -> Option<&'slf Value<'long>> {\r\n   |                 ----  ------ lifetime `'short` defined here\r\n   |                 |\r\n   |                 lifetime `'slf` defined here\r\n...\r\n18 |         let v: &'slf Value<'long> = v;\r\n   |                ^^^^^^^^^^^^^^^^^^ type annotation requires that `'short` must outlive `'slf`\r\n   |\r\n   = help: consider adding the following bound: `'short: 'slf`\r\n```\r\n\r\nNote in particular that the same code compiles fine if the `HashMap` is changes such that its key isn't a tuple but a `&'long str`, and the lookup changes to just `.get(key)`, even though the signature of `HashMap::get` should imply that the lifetime of the returned value is only tied to the lifetime of `&self` (i.e., the map) and the provided key should not be relevant.\r\n\r\nIt _seems_ like the lifetime of the temporary `()` that gets constructed \"leaks\" into the `if let Some` branch somehow, and in turn \"infects\" the inferred lifetime of `v`. \r\n\r\nAlso note that the diagnostics if `'short` is replaced with `'_` here are rather poor, as they _only_ suggest annotating `key` with `&'slf` which, while it would fix the problem, would be overly restrictive.\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`: nightly-2022-10-19 4b8f4319954ff2642690 (per playground)\r\n", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103289/timeline", "performed_via_github_app": null, "state_reason": "completed"}