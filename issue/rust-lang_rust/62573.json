{"url": "https://api.github.com/repos/rust-lang/rust/issues/62573", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62573/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62573/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62573/events", "html_url": "https://github.com/rust-lang/rust/issues/62573", "id": 466560055, "node_id": "MDU6SXNzdWU0NjY1NjAwNTU=", "number": 62573, "title": "\"overflow evaluating the requirement\" documenting synstructures in rustdoc beta, but not rustdoc stable nor rustc beta", "user": {"login": "daboross", "id": 1152146, "node_id": "MDQ6VXNlcjExNTIxNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1152146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daboross", "html_url": "https://github.com/daboross", "followers_url": "https://api.github.com/users/daboross/followers", "following_url": "https://api.github.com/users/daboross/following{/other_user}", "gists_url": "https://api.github.com/users/daboross/gists{/gist_id}", "starred_url": "https://api.github.com/users/daboross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daboross/subscriptions", "organizations_url": "https://api.github.com/users/daboross/orgs", "repos_url": "https://api.github.com/users/daboross/repos", "events_url": "https://api.github.com/users/daboross/events{/privacy}", "received_events_url": "https://api.github.com/users/daboross/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-10T22:46:43Z", "updated_at": "2019-07-11T00:09:27Z", "closed_at": "2019-07-11T00:09:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm in a project which depends on both `syn` and `synstructures` crates. Using rustc `1.37.0-beta.2` or `rustc 1.38.0-nightly (78ca1bda3 2019-07-08)`, I can no longer document this crate with its dependencies.\r\n\r\nThe following error occurs:\r\n\r\n```rust\r\n$ cargo doc \r\n  Downloaded synstructure v0.11.0\r\n Documenting synstructure v0.11.0\r\n    Checking synstructure v0.11.0\r\nerror[E0275]: overflow evaluating the requirement `alloc::raw_vec::RawVec<(syn::Lifetime, syn::token::Add)>: std::marker::Unpin`\r\n  |\r\n  = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\r\n  = note: required because it appears within the type `std::vec::Vec<(syn::Lifetime, syn::token::Add)>`\r\n  = note: required because it appears within the type `syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add>`\r\n  = note: required because it appears within the type `syn::LifetimeDef`\r\n  = note: required because it appears within the type `(syn::LifetimeDef, syn::token::Comma)`\r\n  = note: required because it appears within the type `*const (syn::LifetimeDef, syn::token::Comma)`\r\n  = note: required because it appears within the type `std::ptr::Unique<(syn::LifetimeDef, syn::token::Comma)>`\r\n  = note: required because it appears within the type `alloc::raw_vec::RawVec<(syn::LifetimeDef, syn::token::Comma)>`\r\n  = note: required because it appears within the type `std::vec::Vec<(syn::LifetimeDef, syn::token::Comma)>`\r\n  = note: required because it appears within the type `syn::punctuated::Punctuated<syn::LifetimeDef, syn::token::Comma>`\r\n  = note: required because it appears within the type `syn::BoundLifetimes`\r\n  = note: required because it appears within the type `std::option::Option<syn::BoundLifetimes>`\r\n  = note: required because it appears within the type `syn::PredicateType`\r\n  = note: required because it appears within the type `syn::WherePredicate`\r\n  = note: required because it appears within the type `(syn::WherePredicate, syn::token::Comma)`\r\n  = note: required because it appears within the type `*const (syn::WherePredicate, syn::token::Comma)`\r\n  = note: required because it appears within the type `std::ptr::Unique<(syn::WherePredicate, syn::token::Comma)>`\r\n  = note: required because it appears within the type `alloc::raw_vec::RawVec<(syn::WherePredicate, syn::token::Comma)>`\r\n  = note: required because it appears within the type `std::vec::Vec<(syn::WherePredicate, syn::token::Comma)>`\r\n  = note: required because it appears within the type `syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma>`\r\n  = note: required because it appears within the type `syn::WhereClause`\r\n  = note: required because it appears within the type `std::option::Option<syn::WhereClause>`\r\n  = note: required because it appears within the type `syn::Generics`\r\n  = note: required because it appears within the type `syn::ItemType`\r\n  = note: required because it appears within the type `syn::Item`\r\n  = note: required because it appears within the type `syn::Stmt`\r\n  = note: required because it appears within the type `*const syn::Stmt`\r\n  = note: required because it appears within the type `std::ptr::Unique<syn::Stmt>`\r\n  = note: required because it appears within the type `alloc::raw_vec::RawVec<syn::Stmt>`\r\n  = note: required because it appears within the type `std::vec::Vec<syn::Stmt>`\r\n  = note: required because it appears within the type `syn::Block`\r\n  = note: required because it appears within the type `syn::ExprIf`\r\n  = note: required because it appears within the type `syn::Expr`\r\n  = note: required because it appears within the type `syn::TypeArray`\r\n  = note: required because it appears within the type `syn::Type`\r\n  = note: required because it appears within the type `syn::GenericArgument`\r\n  = note: required because it appears within the type `(syn::GenericArgument, syn::token::Comma)`\r\n  = note: required because it appears within the type `*const (syn::GenericArgument, syn::token::Comma)`\r\n  = note: required because it appears within the type `std::ptr::Unique<(syn::GenericArgument, syn::token::Comma)>`\r\n  = note: required because it appears within the type `alloc::raw_vec::RawVec<(syn::GenericArgument, syn::token::Comma)>`\r\n  = note: required because it appears within the type `std::vec::Vec<(syn::GenericArgument, syn::token::Comma)>`\r\n  = note: required because it appears within the type `syn::punctuated::Punctuated<syn::GenericArgument, syn::token::Comma>`\r\n  = note: required because it appears within the type `syn::AngleBracketedGenericArguments`\r\n  = note: required because it appears within the type `syn::PathArguments`\r\n  = note: required because it appears within the type `syn::PathSegment`\r\n  = note: required because it appears within the type `(syn::PathSegment, syn::token::Colon2)`\r\n  = note: required because it appears within the type `*const (syn::PathSegment, syn::token::Colon2)`\r\n  = note: required because it appears within the type `std::ptr::Unique<(syn::PathSegment, syn::token::Colon2)>`\r\n  = note: required because it appears within the type `alloc::raw_vec::RawVec<(syn::PathSegment, syn::token::Colon2)>`\r\n  = note: required because it appears within the type `std::vec::Vec<(syn::PathSegment, syn::token::Colon2)>`\r\n  = note: required because it appears within the type `syn::punctuated::Punctuated<syn::PathSegment, syn::token::Colon2>`\r\n  = note: required because it appears within the type `syn::Path`\r\n  = note: required because it appears within the type `syn::Attribute`\r\n  = note: required because it appears within the type `*const syn::Attribute`\r\n  = note: required because it appears within the type `std::ptr::Unique<syn::Attribute>`\r\n  = note: required because it appears within the type `alloc::raw_vec::RawVec<syn::Attribute>`\r\n  = note: required because it appears within the type `std::vec::Vec<syn::Attribute>`\r\n  = note: required because it appears within the type `syn::TypeParam`\r\n  = note: required because it appears within the type `syn::GenericParam`\r\n  = note: required because it appears within the type `*const syn::GenericParam`\r\n  = note: required because it appears within the type `std::ptr::Unique<syn::GenericParam>`\r\n  = note: required because it appears within the type `alloc::raw_vec::RawVec<syn::GenericParam>`\r\n  = note: required because it appears within the type `std::vec::Vec<syn::GenericParam>`\r\n  = note: required because it appears within the type `Structure<'a>`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0275`.\r\nerror: Could not document `synstructure`.\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustdoc --crate-name synstructure /home/daboross/.cargo/registry/src/github.com-1ecc6299db9ec823/synstructure-0.11.0/src/lib.rs --cap-lints allow --color always -o /home/daboross/stest/target/doc -L dependency=/home/daboross/stest/target/debug/deps --extern proc_macro2=/home/daboross/stest/target/debug/deps/libproc_macro2-5a0d9421c670a9a2.rmeta --extern quote=/home/daboross/stest/target/debug/deps/libquote-0b983089d60fae1d.rmeta --extern syn=/home/daboross/stest/target/debug/deps/libsyn-1579b4397ac9fb62.rmeta --extern unicode_xid=/home/daboross/stest/target/debug/deps/libunicode_xid-83d32fbf12bd2baf.rmeta` (exit code: 1)\r\nwarning: build failed, waiting for other jobs to finish...\r\nerror: build failed\r\n```\r\n\r\nTo reproduce, create an empty new project, and add the following dependencies:\r\n\r\n```toml\r\nsynstructure = \"0.11\"\r\nsyn = { version = \"0.15\", features = [\"full\"] }\r\n```\r\n\r\nRunning `cargo +stable doc` with rust 1.36.0 succeeds, but running `cargo +beta doc` fails with the above error. Strangely, the crate continues to compile fine - it's only running `cargo doc` which fails.\r\n\r\nBeing more precise, this succeeds in nightly-2019-06-21, and fails in nightly-2019-06-22.\r\n\r\nI'm guessing that this could just be an issue with `synstructure`, but the fact that it failed with a rustc upgrade combined with the fact that it fails in `cargo doc` but not `cargo build` or `cargo test` makes me think there could be some other issue here?\r\n\r\n<details><summary>Full `Cargo.toml`</summary>\r\n\r\n```toml\r\n[package]\r\nname = \"stest\"\r\nversion = \"0.1.0\"\r\nauthors = [\"David Ross <daboross@daboross.net>\"]\r\nedition = \"2018\"\r\n\r\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\r\n\r\n[dependencies]\r\nsynstructure = \"0.11\"\r\nsyn = { version = \"0.15\", features = [\"full\"] }\r\n```\r\n\r\n</details>\r\n\r\n<details><summary>Full `Cargo.lock`</summary>\r\n\r\n```toml\r\n# This file is automatically @generated by Cargo.\r\n# It is not intended for manual editing.\r\n[[package]]\r\nname = \"proc-macro2\"\r\nversion = \"0.4.30\"\r\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\r\ndependencies = [\r\n \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n]\r\n\r\n[[package]]\r\nname = \"quote\"\r\nversion = \"0.6.12\"\r\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\r\ndependencies = [\r\n \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n]\r\n\r\n[[package]]\r\nname = \"stest\"\r\nversion = \"0.1.0\"\r\ndependencies = [\r\n \"syn 0.15.39 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"synstructure 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n]\r\n\r\n[[package]]\r\nname = \"syn\"\r\nversion = \"0.15.39\"\r\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\r\ndependencies = [\r\n \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n]\r\n\r\n[[package]]\r\nname = \"synstructure\"\r\nversion = \"0.11.0\"\r\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\r\ndependencies = [\r\n \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"syn 0.15.39 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n]\r\n\r\n[[package]]\r\nname = \"unicode-xid\"\r\nversion = \"0.1.0\"\r\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\r\n\r\n[metadata]\r\n\"checksum proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cf3d2011ab5c909338f7887f4fc896d35932e29146c12c8d01da6b22a80ba759\"\r\n\"checksum quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)\" = \"faf4799c5d274f3868a4aae320a0a182cbd2baee377b378f080e16a23e9d80db\"\r\n\"checksum syn 0.15.39 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b4d960b829a55e56db167e861ddb43602c003c7be0bee1d345021703fac2fb7c\"\r\n\"checksum synstructure 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8a31c862c910b86af7938de3a4f176e89c4dfcb484d119593d456b86c3f0f8ea\"\r\n\"checksum unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fc72304796d0818e357ead4e000d19c9c174ab23dc11093ac919054d20a6a7fc\"\r\n```\r\n\r\n</details>", "closed_by": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62573/timeline", "performed_via_github_app": null, "state_reason": "completed"}