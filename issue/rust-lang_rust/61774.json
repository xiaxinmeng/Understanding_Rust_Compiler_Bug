{"url": "https://api.github.com/repos/rust-lang/rust/issues/61774", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61774/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61774/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61774/events", "html_url": "https://github.com/rust-lang/rust/issues/61774", "id": 455279416, "node_id": "MDU6SXNzdWU0NTUyNzk0MTY=", "number": 61774, "title": "Size mismatch when const transmuting", "user": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2019-06-12T15:25:45Z", "updated_at": "2019-12-28T13:12:26Z", "closed_at": "2019-12-28T13:12:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=bd3b646409e9f3897ee22199f6d25681)\r\n\r\nMaybe this is a duplicate to #61455\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#![feature(const_transmute)]\r\n\r\nuse std::mem::transmute;\r\n\r\nfn dump() -> i32 {\r\n    42\r\n}\r\n\r\nfn main() {\r\n    let arr: [i8; unsafe { transmute(dump) }];\r\n}\r\n```\r\n\r\n\r\n<details>\r\n  <summary>stderr</summary>\r\n\r\n```rust\r\nthread 'rustc' panicked at 'Size mismatch when transmuting!\r\nsrc: OpTy {\r\n    op: Immediate(\r\n        Scalar(\r\n            <ZST>,\r\n        ),\r\n    ),\r\n    layout: TyLayout {\r\n        ty: fn() -> i32 {dump},\r\n        details: LayoutDetails {\r\n            variants: Single {\r\n                index: 0,\r\n            },\r\n            fields: Arbitrary {\r\n                offsets: [],\r\n                memory_index: [],\r\n            },\r\n            abi: Aggregate {\r\n                sized: true,\r\n            },\r\n            align: AbiAndPrefAlign {\r\n                abi: Align {\r\n                    pow2: 0,\r\n                },\r\n                pref: Align {\r\n                    pow2: 3,\r\n                },\r\n            },\r\n            size: Size {\r\n                raw: 0,\r\n            },\r\n        },\r\n    },\r\n}\r\ndest: PlaceTy {\r\n    place: Ptr(\r\n        MemPlace {\r\n            ptr: AllocId(0).0x0,\r\n            align: Align {\r\n                pow2: 3,\r\n            },\r\n            meta: None,\r\n        },\r\n    ),\r\n    layout: TyLayout {\r\n        ty: usize,\r\n        details: LayoutDetails {\r\n            variants: Single {\r\n                index: 0,\r\n            },\r\n            fields: Union(\r\n                0,\r\n            ),\r\n            abi: Scalar(\r\n                Scalar {\r\n                    value: Int(\r\n                        I64,\r\n                        false,\r\n                    ),\r\n                    valid_range: 0..=18446744073709551615,\r\n                },\r\n            ),\r\n            align: AbiAndPrefAlign {\r\n                abi: Align {\r\n                    pow2: 3,\r\n                },\r\n                pref: Align {\r\n                    pow2: 3,\r\n                },\r\n            },\r\n            size: Size {\r\n                raw: 8,\r\n            },\r\n        },\r\n    },\r\n}', src/librustc_mir/interpret/place.rs:874:9\r\n```\r\n</details>\r\n\r\n<details>\r\n  <summary>backtrace</summary>\r\n\r\n```rust\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.29/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.29/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:47\r\n   3: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:36\r\n   4: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   5: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:212\r\n   6: rustc::util::common::panic_hook\r\n   7: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:479\r\n   8: std::panicking::continue_panic_fmt\r\n             at src/libstd/panicking.rs:382\r\n   9: std::panicking::begin_panic_fmt\r\n             at src/libstd/panicking.rs:337\r\n  10: rustc_mir::interpret::place::<impl rustc_mir::interpret::eval_context::InterpretCx<M>>::copy_op_transmute\r\n  11: rustc_mir::interpret::intrinsics::<impl rustc_mir::interpret::eval_context::InterpretCx<M>>::emulate_intrinsic\r\n  12: <rustc_mir::const_eval::CompileTimeInterpreter as rustc_mir::interpret::machine::Machine>::call_intrinsic\r\n  13: rustc_mir::interpret::terminator::<impl rustc_mir::interpret::eval_context::InterpretCx<M>>::eval_fn_call\r\n  14: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpretCx<M>>::run\r\n  15: rustc_mir::const_eval::eval_body_using_ecx\r\n  16: rustc_mir::const_eval::const_eval_raw_provider\r\n  17: rustc::ty::query::__query_compute::const_eval_raw\r\n  18: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval_raw>::compute\r\n  19: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  20: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  21: rustc_mir::const_eval::const_eval_provider\r\n  22: rustc::ty::query::__query_compute::const_eval\r\n  23: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval>::compute\r\n  24: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  25: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  26: <rustc::traits::project::AssocTypeNormalizer as rustc::ty::fold::TypeFolder>::fold_const\r\n  27: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable for &rustc::ty::TyS>::super_fold_with\r\n  28: <rustc::traits::project::AssocTypeNormalizer as rustc::ty::fold::TypeFolder>::fold_ty\r\n  29: rustc::traits::project::normalize\r\n  30: <rustc_typeck::check::FnCtxt as rustc_typeck::astconv::AstConv>::normalize_ty\r\n  31: <dyn rustc_typeck::astconv::AstConv>::ast_ty_to_ty\r\n  32: <rustc_typeck::check::GatherLocalsVisitor as rustc::hir::intravisit::Visitor>::visit_local\r\n  33: rustc::hir::intravisit::walk_expr\r\n  34: rustc_typeck::check::check_fn\r\n  35: rustc::ty::context::GlobalCtxt::enter_local\r\n  36: rustc_typeck::check::typeck_tables_of\r\n  37: rustc::ty::query::__query_compute::typeck_tables_of\r\n  38: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_tables_of>::compute\r\n  39: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  40: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  41: rustc::ty::<impl rustc::ty::context::TyCtxt>::par_body_owners\r\n  42: rustc_typeck::check::typeck_item_bodies\r\n  43: rustc::ty::query::__query_compute::typeck_item_bodies\r\n  44: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_item_bodies>::compute\r\n  45: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  46: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  47: rustc::util::common::time\r\n  48: rustc_typeck::check_crate\r\n  49: rustc_interface::passes::analysis\r\n  50: rustc::ty::query::__query_compute::analysis\r\n  51: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  52: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  53: rustc::ty::context::tls::enter_global\r\n  54: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  55: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  56: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  57: std::thread::local::LocalKey<T>::with\r\n  58: scoped_tls::ScopedKey<T>::set\r\n  59: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nquery stack during panic:\r\n#0 [const_eval_raw] const-evaluating `main::{{constant}}#0`\r\n#1 [const_eval] const-evaluating + checking `main::{{constant}}#0`\r\n#2 [typeck_tables_of] processing `main`\r\n#3 [typeck_item_bodies] type-checking all item bodies\r\n#4 [analysis] running analysis passes on this crate\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.37.0-nightly (02564de47 2019-06-10) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `check`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n</details>\r\n\r\n## Meta\r\n\r\n```\r\n% rustc -Vv\r\nrustc 1.37.0-nightly (02564de47 2019-06-10)\r\nbinary: rustc\r\ncommit-hash: 02564de47b40e953b5144dfd37450c16a84672f1\r\ncommit-date: 2019-06-10\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.37.0-nightly\r\nLLVM version: 8.0\r\n```\r\n", "closed_by": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61774/timeline", "performed_via_github_app": null, "state_reason": "completed"}