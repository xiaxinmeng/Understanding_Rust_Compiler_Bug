{"url": "https://api.github.com/repos/rust-lang/rust/issues/97540", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/97540/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/97540/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/97540/events", "html_url": "https://github.com/rust-lang/rust/issues/97540", "id": 1252070268, "node_id": "I_kwDOAAsO6M5KoRN8", "number": 97540, "title": "`Result` that uses niches resulting in a final size of 16 bytes emits poor LLVM IR due to ABI", "user": {"login": "asquared31415", "id": 34665709, "node_id": "MDQ6VXNlcjM0NjY1NzA5", "avatar_url": "https://avatars.githubusercontent.com/u/34665709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asquared31415", "html_url": "https://github.com/asquared31415", "followers_url": "https://api.github.com/users/asquared31415/followers", "following_url": "https://api.github.com/users/asquared31415/following{/other_user}", "gists_url": "https://api.github.com/users/asquared31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/asquared31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asquared31415/subscriptions", "organizations_url": "https://api.github.com/users/asquared31415/orgs", "repos_url": "https://api.github.com/users/asquared31415/repos", "events_url": "https://api.github.com/users/asquared31415/events{/privacy}", "received_events_url": "https://api.github.com/users/asquared31415/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 4288196623, "node_id": "LA_kwDOAAsO6M7_mLAP", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-abi", "name": "A-abi", "color": "f7e101", "default": false, "description": "Area: Concerning the \"application binary interface\" between functions."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2022-05-30T01:35:21Z", "updated_at": "2022-08-06T07:30:05Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\nThe following code:\r\n```rust\r\npub fn bad() -> Result<u64, core::ptr::NonNull<()>> {\r\n    Ok(0)\r\n}\r\n\r\n#[allow(improper_ctypes_definitions)]\r\npub extern \"C\" fn good() -> Result<u64, core::ptr::NonNull<()>> {\r\n    Ok(0)\r\n}\r\n```\r\n[godbolt LLVM IR](https://godbolt.org/z/b5jjv43nK)\r\n[godbolt ASM](https://godbolt.org/z/jKM8j6hEn)\r\n\r\nBoth functions should be identical, returning the 128-bit value in RAX and RDX per the sysv-64 ABI, which is the default for the environment godbolt uses by default.\r\n\r\nInstead, when returning the value without specifying any ABI, the compiler chooses to return the value using an out pointer argument.\r\n\r\n**Note:** This affects `Result<usize, std::io::Error>`, which is a particularly useful type and affects a significant portion of `std::io`, such as `Read` and `Write`\r\n\r\n### Meta\r\n\r\nThis has improved and regressed since 1.43.0, the first version I could find which would use 128 bits for the type.\r\nAll versions tested used the expected code generation for the `extern \"C\"` function.\r\nAll tests done using https://godbolt.org and no target overrides, which in practice is a x86_64 linux machine using the sysv-64 ABI.\r\n\r\n..= 1.42.0: niche not used, cannot be compared\r\n1.43.0 ..= 1.47.0: codegen like today, uses out ptr for return\r\n1.48.0 ..= 1.60.0: returns using an LLVM `i128`, which produces the most desirable code on sysv-64\r\n1.61.0 .. (current 2022-05-28 nightly): poor codegen that uses an out ptr for return\r\n\r\n@rustbot label +regression-from-stable-to-stable +A-codegen", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/97540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/97540/timeline", "performed_via_github_app": null, "state_reason": null}