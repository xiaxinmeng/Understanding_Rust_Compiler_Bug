{"url": "https://api.github.com/repos/rust-lang/rust/issues/62325", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62325/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62325/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62325/events", "html_url": "https://github.com/rust-lang/rust/issues/62325", "id": 463565378, "node_id": "MDU6SXNzdWU0NjM1NjUzNzg=", "number": 62325, "title": "$crate incorrectly substituted in attribute macro invocation containing bang macro invocation", "user": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-07-03T06:20:00Z", "updated_at": "2019-07-10T08:59:09Z", "closed_at": "2019-07-10T08:59:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When an attribute macro input contains `$ident`, it is correctly substituted both inside and outside of a function-like macro invocation i.e. both of the $ident's in `[u8; $ident + m!($ident)]` would be substituted as expected.\r\n\r\nBut when an attribute macro input contains `$crate`, it is only substituted *outside* of a function-like macro. Inside, it incorrectly disintegrates into `Punct('$'), Ident(crate)` when the whole bang macro invocation is passed to an attribute macro (or derive macro). In the case of `[u8; $crate::N + m!($crate::N)]` the first $crate would be handled correctly but the second one would be passed incorrectly as two tokens. See where I put `// WRONG` in the output below.\r\n\r\n---\r\n\r\n#### Cargo.toml\r\n\r\n```toml\r\n[package]\r\nname = \"repro\"\r\nversion = \"0.0.0\"\r\nedition = \"2018\"\r\npublish = false\r\n\r\n[lib]\r\nproc-macro = true\r\n```\r\n\r\n#### src/main.rs\r\n\r\n```rust\r\n#[macro_export]\r\nmacro_rules! repro {\r\n    ($ident:tt) => {\r\n        #[repro::repro]\r\n        type T = [$crate::$ident; x!($crate::$ident)];\r\n    };\r\n}\r\n\r\nrepro!(N);\r\n\r\nfn main() {}\r\n```\r\n\r\n#### src/lib.rs\r\n\r\n```rust\r\nextern crate proc_macro;\r\nuse proc_macro::TokenStream;\r\n\r\n#[proc_macro_attribute]\r\npub fn repro(_args: TokenStream, input: TokenStream) -> TokenStream {\r\n    println!(\"{:#?}\", input);\r\n    TokenStream::new()\r\n}\r\n```\r\n\r\nOutput of cargo check:\r\n\r\n```console\r\nTokenStream [\r\n    Ident {\r\n        ident: \"type\",\r\n        span: #0 bytes(0..0),\r\n    },\r\n    Ident {\r\n        ident: \"T\",\r\n        span: #0 bytes(0..0),\r\n    },\r\n    Punct {\r\n        ch: '=',\r\n        spacing: Alone,\r\n        span: #0 bytes(0..0),\r\n    },\r\n    Group {\r\n        delimiter: Bracket,\r\n        stream: TokenStream [\r\n            Ident {\r\n                ident: \"crate\",\r\n                span: #0 bytes(0..0),\r\n            },\r\n            Punct {\r\n                ch: ':',\r\n                spacing: Joint,\r\n                span: #0 bytes(0..0),\r\n            },\r\n            Punct {\r\n                ch: ':',\r\n                spacing: Alone,\r\n                span: #0 bytes(0..0),\r\n            },\r\n            Ident {\r\n                ident: \"N\",\r\n                span: #0 bytes(0..0),\r\n            },\r\n            Punct {\r\n                ch: ';',\r\n                spacing: Alone,\r\n                span: #0 bytes(0..0),\r\n            },\r\n            Ident {\r\n                ident: \"x\",\r\n                span: #0 bytes(0..0),\r\n            },\r\n            Punct {\r\n                ch: '!',\r\n                spacing: Alone,\r\n                span: #0 bytes(0..0),\r\n            },\r\n            Group {\r\n                delimiter: Parenthesis,\r\n                stream: TokenStream [\r\n                    Punct {                              // WRONG\r\n                        ch: '$',\r\n                        spacing: Alone,\r\n                        span: #0 bytes(0..0),\r\n                    },\r\n                    Ident {\r\n                        ident: \"crate\",\r\n                        span: #0 bytes(0..0),\r\n                    },\r\n                    Punct {\r\n                        ch: ':',\r\n                        spacing: Joint,\r\n                        span: #0 bytes(0..0),\r\n                    },\r\n                    Punct {\r\n                        ch: ':',\r\n                        spacing: Alone,\r\n                        span: #0 bytes(0..0),\r\n                    },\r\n                    Ident {\r\n                        ident: \"N\",\r\n                        span: #0 bytes(0..0),\r\n                    },\r\n                ],\r\n                span: #0 bytes(0..0),\r\n            },\r\n        ],\r\n        span: #0 bytes(0..0),\r\n    },\r\n    Punct {\r\n        ch: ';',\r\n        spacing: Alone,\r\n        span: #0 bytes(0..0),\r\n    },\r\n]\r\n```\r\n---\r\n\r\nMentioning @petrochenkov who fixed my previous three $crate woes (#57089, #56622, #38016).", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62325/timeline", "performed_via_github_app": null, "state_reason": "completed"}