{"url": "https://api.github.com/repos/rust-lang/rust/issues/80948", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80948/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80948/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80948/events", "html_url": "https://github.com/rust-lang/rust/issues/80948", "id": 784422101, "node_id": "MDU6SXNzdWU3ODQ0MjIxMDE=", "number": 80948, "title": "Rustc isn\u2019t warning about usage of and even suggests importing #[doc(hidden)] items.", "user": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-01-12T17:08:44Z", "updated_at": "2023-01-29T19:30:29Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Motivated by [this thread](https://users.rust-lang.org/t/serde-compatibility-broken/54041) on URLO, I\u2019m wondering if we shouldn\u2019t add warnings for using items that are hidden in documentations, in particular hidden modules (but e.g. also hidden fields that can be used to make structs with public fields extensible while still supporting `Struct { foo: 1, bar: 2 ..Struct::default() }`-style initialization).\r\n\r\nEven more unfortunate is how rustc even _suggests_ hidden re-export modules, e.g. in [this playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=2b8190cd176daec757c7e8eeff4db781), the compiler suggests, among other things, to add `use pin_utils::core_reexport::fmt::Formatter;` or `use serde::export::Formatter;`, which are semver-hazards.\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0412]: cannot find type `Formatter` in this scope\r\n --> src/lib.rs:2:16\r\n  |\r\n2 | pub fn foo(_f: Formatter) {}\r\n  |                ^^^^^^^^^ not found in this scope\r\n  |\r\nhelp: consider importing one of these items\r\n  |\r\n2 | use core::fmt::Formatter;\r\n  |\r\n2 | use env_logger::fmt::Formatter;\r\n  |\r\n2 | use pin_utils::core_reexport::fmt::Formatter;\r\n  |\r\n2 | use serde::export::Formatter;\r\n  |\r\n    and 3 other candidates\r\n```\r\n\r\n@rustbot modify labels: C-enhancement, T-compiler, A-diagnostics, A-suggestion-diagnostics, D-invalid-suggestion\r\n\r\n_(regarging `D-invalid-suggestion`: I **would** consider code that explicitly uses unstable internal (for macros) re-exports of another crate to be \u201cincorrect\u201d)_ ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80948/reactions", "total_count": 6, "+1": 6, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80948/timeline", "performed_via_github_app": null, "state_reason": null}