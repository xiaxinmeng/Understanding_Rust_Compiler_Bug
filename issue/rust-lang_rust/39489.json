{"url": "https://api.github.com/repos/rust-lang/rust/issues/39489", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39489/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39489/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39489/events", "html_url": "https://github.com/rust-lang/rust/issues/39489", "id": 205199802, "node_id": "MDU6SXNzdWUyMDUxOTk4MDI=", "number": 39489, "title": "Tricky type definition can cause inhabitedness check to go into an infinite loop.", "user": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-03T16:12:37Z", "updated_at": "2017-02-12T10:01:30Z", "closed_at": "2017-02-12T10:01:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This code:\r\n\r\n```rust\r\nstruct Foo<'a, T: 'a> {\r\n    ph: std::marker::PhantomData<T>,\r\n    foo: &'a Foo<'a, (T, T)>,\r\n}\r\n\r\nfn wub(f: Foo<!>) {\r\n    match f {}\r\n}\r\n```\r\n\r\nCauses rustc to stack overflow. This should be pretty easy to \"fix\" by just putting a recursion limit in `is_uninhabited_from` and returning false when it gets hit. What's a suitable limit here? Presumably there are other limits like this in other places in the compiler.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39489/timeline", "performed_via_github_app": null, "state_reason": "completed"}