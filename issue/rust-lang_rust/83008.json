{"url": "https://api.github.com/repos/rust-lang/rust/issues/83008", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83008/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83008/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83008/events", "html_url": "https://github.com/rust-lang/rust/issues/83008", "id": 828910183, "node_id": "MDU6SXNzdWU4Mjg5MTAxODM=", "number": 83008, "title": "Logical bug in `thread_local!` macro implementation for Apple targets", "user": {"login": "Kannen", "id": 11684303, "node_id": "MDQ6VXNlcjExNjg0MzAz", "avatar_url": "https://avatars.githubusercontent.com/u/11684303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kannen", "html_url": "https://github.com/Kannen", "followers_url": "https://api.github.com/users/Kannen/followers", "following_url": "https://api.github.com/users/Kannen/following{/other_user}", "gists_url": "https://api.github.com/users/Kannen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kannen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kannen/subscriptions", "organizations_url": "https://api.github.com/users/Kannen/orgs", "repos_url": "https://api.github.com/users/Kannen/repos", "events_url": "https://api.github.com/users/Kannen/events{/privacy}", "received_events_url": "https://api.github.com/users/Kannen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123111, "node_id": "MDU6TGFiZWwxMjMxMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-macos", "name": "O-macos", "color": "6e6ec0", "default": false, "description": "Operating system: macOS"}, {"id": 632886930, "node_id": "MDU6TGFiZWw2MzI4ODY5MzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-thread-locals", "name": "A-thread-locals", "color": "f7e101", "default": false, "description": "Area: Thread local storage (TLS)"}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-03-11T08:15:55Z", "updated_at": "2021-03-14T06:21:53Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "On Appel it seems that variables declared with the thread_local macro, will have their destructor registered with the `register_dtor` function that is declared in `std/src/sys/unix/thread_local_dtor.rs`.\r\n\r\nThere one can read that `_tlv_atexit` function call is UB if called druing thread finalization.\r\n\r\nTo prevent this, a strategy is used to ensure that `_tlv_atexit` is only called once, by the first access to a variable created in `thread_local!` macro. \r\n\r\nBut one can notice that this strategy will work if the first `thread_local!` variable initialization is not performed from a function registered with _tlv_atexit. For example, this can happen if a function declared in a crate accesses a \"thread_loca! \" and this function is called from the destructor of a C++ thread local variable.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83008/timeline", "performed_via_github_app": null, "state_reason": null}