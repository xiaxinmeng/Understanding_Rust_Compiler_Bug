{"url": "https://api.github.com/repos/rust-lang/rust/issues/105422", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105422/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105422/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105422/events", "html_url": "https://github.com/rust-lang/rust/issues/105422", "id": 1481980080, "node_id": "I_kwDOAAsO6M5YVTiw", "number": 105422, "title": "Using `&T` in where clause should suggest HRTB", "user": {"login": "Swatinem", "id": 580492, "node_id": "MDQ6VXNlcjU4MDQ5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/580492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Swatinem", "html_url": "https://github.com/Swatinem", "followers_url": "https://api.github.com/users/Swatinem/followers", "following_url": "https://api.github.com/users/Swatinem/following{/other_user}", "gists_url": "https://api.github.com/users/Swatinem/gists{/gist_id}", "starred_url": "https://api.github.com/users/Swatinem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Swatinem/subscriptions", "organizations_url": "https://api.github.com/users/Swatinem/orgs", "repos_url": "https://api.github.com/users/Swatinem/repos", "events_url": "https://api.github.com/users/Swatinem/events{/privacy}", "received_events_url": "https://api.github.com/users/Swatinem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-12-07T13:51:25Z", "updated_at": "2022-12-07T19:35:37Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=0649baa344cf71ca09719ebebe1bf5d2\r\n\r\n```rust\r\npub struct Foo;\r\npub struct Bar;\r\n\r\nimpl From<&Foo> for Bar {\r\n    fn from(_: &Foo) -> Bar { Bar }\r\n}\r\n\r\npub fn fails<E>(e: E) -> Bar where &E: Into<Bar> {\r\n    (&e).into()\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[[E0637]](https://doc.rust-lang.org/stable/error-index.html#E0637): `&` without an explicit lifetime name cannot be used here\r\n --> src/lib.rs:8:36\r\n  |\r\n8 | pub fn fails<E>(e: E) -> Bar where &E: Into<Bar> {\r\n  |                                    ^ explicit lifetime name needed here\r\n\r\nerror[[E0310]](https://doc.rust-lang.org/stable/error-index.html#E0310): the parameter type `E` may not live long enough\r\n --> src/lib.rs:8:40\r\n  |\r\n8 | pub fn fails<E>(e: E) -> Bar where &E: Into<Bar> {\r\n  |                                        ^^^^^^^^^ ...so that the reference type `&'static E` does not outlive the data it points at\r\n  |\r\nhelp: consider adding an explicit lifetime bound...\r\n  |\r\n8 | pub fn fails<E: 'static>(e: E) -> Bar where &E: Into<Bar> {\r\n  |               +++++++++\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should suggest adding a HRTB like this:\r\n\r\n```rust\r\npub fn works<E>(e: E) -> Bar where for<'e> &'e E: Into<Bar> {\r\n    (&e).into()\r\n}\r\n```\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\nTBH, HRTB are a very obscure feature to me, and it is not obvious in which circumstances I need to use them. This is one of those, and the compiler should suggest this to me.\r\n\r\nI think there are quite some usecases when you have a `Into` / `From` that works with a reference, and you want to write code that is generic over that `Into` / `From` type.\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105422/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105422/timeline", "performed_via_github_app": null, "state_reason": null}