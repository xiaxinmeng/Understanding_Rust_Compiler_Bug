{"url": "https://api.github.com/repos/rust-lang/rust/issues/49976", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49976/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49976/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49976/events", "html_url": "https://github.com/rust-lang/rust/issues/49976", "id": 314377960, "node_id": "MDU6SXNzdWUzMTQzNzc5NjA=", "number": 49976, "title": "impl<T> SliceIndex<[T]> for (Bound<usize>, Bound<usize>)", "user": {"login": "ExpHP", "id": 1411280, "node_id": "MDQ6VXNlcjE0MTEyODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1411280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExpHP", "html_url": "https://github.com/ExpHP", "followers_url": "https://api.github.com/users/ExpHP/followers", "following_url": "https://api.github.com/users/ExpHP/following{/other_user}", "gists_url": "https://api.github.com/users/ExpHP/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExpHP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExpHP/subscriptions", "organizations_url": "https://api.github.com/users/ExpHP/orgs", "repos_url": "https://api.github.com/users/ExpHP/repos", "events_url": "https://api.github.com/users/ExpHP/events{/privacy}", "received_events_url": "https://api.github.com/users/ExpHP/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-15T01:57:09Z", "updated_at": "2021-04-22T18:17:24Z", "closed_at": "2021-04-22T18:17:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "These feel like an omission to me, given how `RangeArgument` is implemented for this type:\r\n\r\n```rust\r\nimpl<T> SliceIndex<[T]> for (Bound<usize>, Bound<usize>) { ... }\r\nimpl SliceIndex<str> for (Bound<usize>, Bound<usize>) { ... }\r\n```\r\n\r\nAnd if we *really* want to go for feature parity, then `RangeArgument` also has impls for `(Bound<&T>, Bound<&T>)`, but I think that's mostly for the sake of methods like `BTreeSet::range`, and it really doesn't make sense here.\r\n_**Edit:** Then again, considering that RangeArgument is going to have methods that return `Bound<&T>`, maybe `(Bound<&usize>, Bound<&usize>)` *is* worth it._\r\n\r\n---\r\n\r\n(secretly, I just want the standard library to implement my bounds-checking and length-computation for me in my n-dimensional array, so that I can just write `vec![(); len][(start_bound, end_bound)].len()` and trust that it's correct.  But *shhhhhh, don't tell anyone*)", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49976/reactions", "total_count": 5, "+1": 3, "-1": 0, "laugh": 2, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49976/timeline", "performed_via_github_app": null, "state_reason": "completed"}