{"url": "https://api.github.com/repos/rust-lang/rust/issues/105989", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105989/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105989/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105989/events", "html_url": "https://github.com/rust-lang/rust/issues/105989", "id": 1506026427, "node_id": "I_kwDOAAsO6M5ZxCO7", "number": 105989, "title": "Linking a bin crate against a dylib crate from within the same workspace will fail if built from workspace root", "user": {"login": "Silvea12", "id": 3120639, "node_id": "MDQ6VXNlcjMxMjA2Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3120639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Silvea12", "html_url": "https://github.com/Silvea12", "followers_url": "https://api.github.com/users/Silvea12/followers", "following_url": "https://api.github.com/users/Silvea12/following{/other_user}", "gists_url": "https://api.github.com/users/Silvea12/gists{/gist_id}", "starred_url": "https://api.github.com/users/Silvea12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Silvea12/subscriptions", "organizations_url": "https://api.github.com/users/Silvea12/orgs", "repos_url": "https://api.github.com/users/Silvea12/repos", "events_url": "https://api.github.com/users/Silvea12/events{/privacy}", "received_events_url": "https://api.github.com/users/Silvea12/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-12-21T09:55:12Z", "updated_at": "2022-12-21T09:58:17Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The repo is set up like so:\r\n<details><summary>Workspace Setup</summary>\r\n<details><summary>Cargo.toml</summary>\r\n\r\n```toml\r\n[workspace]\r\n\r\nmembers = [\r\n\t\"bin\",\r\n\t\"first_lib\"\r\n]\r\n```\r\n</details>\r\n<details><summary>first_lib/Cargo.toml</summary>\r\n\r\n```toml\r\n[package]\r\nname = \"first_lib\"\r\nversion = \"0.1.0\"\r\nedition = \"2021\"\r\n\r\n[lib]\r\ncrate-type = [\"dylib\"]\r\n\r\n[dependencies]\r\ntokio = { version = \"1.23.0\", features = [\"full\"] }\r\n```\r\n</details>\r\n<details><summary>first_lib/src/lib.rs</summary>\r\n\r\n```rust\r\npub use tokio;\r\n```\r\n</details>\r\n<details><summary>bin/Cargo.toml</summary>\r\n\r\n```toml\r\n[package]\r\nname = \"bin\"\r\nversion = \"0.1.0\"\r\nedition = \"2021\"\r\n\r\n[dependencies]\r\nfirst_lib = { path = \"../first_lib\" }\r\n```\r\n</details>\r\n<details><summary>bin/src/main.rs</summary>\r\n\r\n```rust\r\nuse first_lib::tokio::runtime::Builder;\r\n\r\nfn main() {\r\n    Builder::new_multi_thread()\r\n        .enable_all()\r\n        .build()\r\n        .unwrap()\r\n        .block_on(async {\r\n            println!(\"Hello, world!\");\r\n        })\r\n}\r\n\r\n```\r\n</details>\r\n</details>\r\n\r\nWhen performing `cargo run` directly against the `bin` crate either via being inside the `bin` directory or via calling `cargo run --bin bin`, the build and run was successful.\r\n```\r\n   Compiling first_lib v0.1.0 (/home/silvea/multi_test/first_lib)\r\n   Compiling bin v0.1.0 (/home/silvea/multi_test/bin)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 10.29s\r\n     Running `target/debug/bin`\r\nHello, world!\r\n```\r\n\r\nHowever, when performing `cargo run` on its own from the workspace root, instead I get\r\n```\r\n   Compiling first_lib v0.1.0 (/home/silvea/multi_test/first_lib)\r\n   Compiling bin v0.1.0 (/home/silvea/multi_test/bin)\r\nerror: cannot satisfy dependencies so `std` only shows up once\r\n  |\r\n  = help: having upstream crates all available in one format will likely make this go away\r\n\r\nerror: could not compile `bin` due to previous error\r\n```\r\n\r\nChecking between the builds, the `libfirst_lib.so` lib is always the same from clean builds between runs of any given method, but it builds differently across the different methods (i.e. MD5 sum mismatch between working and failed method, but match between runs of the same method).\r\n\r\nIn my mind these should build the same? Not sure what's going on here, but it feels like a compiler bug.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.66.0 (69f9c33d7 2022-12-12)\r\nbinary: rustc\r\ncommit-hash: 69f9c33d71c871fc16ac445211281c6e7a340943\r\ncommit-date: 2022-12-12\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.66.0\r\nLLVM version: 15.0.2\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n\u276f RUST_BACKTRACE=1 cargo run \r\n   Compiling libc v0.2.138\r\n   Compiling autocfg v1.1.0\r\n   Compiling proc-macro2 v1.0.49\r\n   Compiling cfg-if v1.0.0\r\n   Compiling quote v1.0.23\r\n   Compiling unicode-ident v1.0.6\r\n   Compiling syn v1.0.107\r\n   Compiling log v0.4.17\r\n   Compiling parking_lot_core v0.9.5\r\n   Compiling smallvec v1.10.0\r\n   Compiling scopeguard v1.1.0\r\n   Compiling memchr v2.5.0\r\n   Compiling bytes v1.3.0\r\n   Compiling pin-project-lite v0.2.9\r\n   Compiling lock_api v0.4.9\r\n   Compiling tokio v1.23.0\r\n   Compiling mio v0.8.5\r\n   Compiling socket2 v0.4.7\r\n   Compiling num_cpus v1.15.0\r\n   Compiling signal-hook-registry v1.4.0\r\n   Compiling parking_lot v0.12.1\r\n   Compiling tokio-macros v1.8.2\r\n   Compiling first_lib v0.1.0 (/home/silvea/multi_test/first_lib)\r\n   Compiling bin v0.1.0 (/home/silvea/multi_test/bin)\r\nerror: cannot satisfy dependencies so `std` only shows up once\r\n  |\r\n  = help: having upstream crates all available in one format will likely make this go away\r\n\r\nerror: could not compile `bin` due to previous error\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105989/timeline", "performed_via_github_app": null, "state_reason": null}