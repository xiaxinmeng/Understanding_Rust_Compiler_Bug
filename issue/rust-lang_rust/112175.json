{"url": "https://api.github.com/repos/rust-lang/rust/issues/112175", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112175/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112175/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112175/events", "html_url": "https://github.com/rust-lang/rust/issues/112175", "id": 1736470006, "node_id": "I_kwDOAAsO6M5ngG32", "number": 112175, "title": "Unclear error message when using recursive future with tokio::spawn", "user": {"login": "krtab", "id": 53921575, "node_id": "MDQ6VXNlcjUzOTIxNTc1", "avatar_url": "https://avatars.githubusercontent.com/u/53921575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krtab", "html_url": "https://github.com/krtab", "followers_url": "https://api.github.com/users/krtab/followers", "following_url": "https://api.github.com/users/krtab/following{/other_user}", "gists_url": "https://api.github.com/users/krtab/gists{/gist_id}", "starred_url": "https://api.github.com/users/krtab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krtab/subscriptions", "organizations_url": "https://api.github.com/users/krtab/orgs", "repos_url": "https://api.github.com/users/krtab/repos", "events_url": "https://api.github.com/users/krtab/events{/privacy}", "received_events_url": "https://api.github.com/users/krtab/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-06-01T14:37:02Z", "updated_at": "2023-06-01T14:44:40Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\nasync fn tokio_fact(n: u32)  -> u32 {\r\n    if n <= 1 {\r\n        return n;\r\n    } else {\r\n        let jh = tokio::spawn(tokio_fact(n-1));\r\n        jh.await.unwrap() * n\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Current output\r\n\r\n```Shell\r\nerror[E0391]: cycle detected when computing type of `tokio_fact::{opaque#0}`\r\n   --> a/src/main.rs:99:33\r\n    |\r\n99  | async fn tokio_fact(n: u32)  -> u32 {\r\n    |                                 ^^^\r\n    |\r\nnote: ...which requires borrow-checking `tokio_fact`...\r\n   --> a/src/main.rs:99:1\r\n    |\r\n99  | async fn tokio_fact(n: u32)  -> u32 {\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires promoting constants in MIR for `tokio_fact`...\r\n   --> a/src/main.rs:99:1\r\n    |\r\n99  | async fn tokio_fact(n: u32)  -> u32 {\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires preparing `tokio_fact` for borrow checking...\r\n   --> a/src/main.rs:99:1\r\n    |\r\n99  | async fn tokio_fact(n: u32)  -> u32 {\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires unsafety-checking `tokio_fact`...\r\n   --> a/src/main.rs:99:1\r\n    |\r\n99  | async fn tokio_fact(n: u32)  -> u32 {\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires building MIR for `tokio_fact`...\r\n   --> a/src/main.rs:99:1\r\n    |\r\n99  | async fn tokio_fact(n: u32)  -> u32 {\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires match-checking `tokio_fact`...\r\n   --> a/src/main.rs:99:1\r\n    |\r\n99  | async fn tokio_fact(n: u32)  -> u32 {\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires building THIR for `tokio_fact`...\r\n   --> a/src/main.rs:99:1\r\n    |\r\n99  | async fn tokio_fact(n: u32)  -> u32 {\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires type-checking `tokio_fact`...\r\n   --> a/src/main.rs:103:18\r\n    |\r\n103 |         let jh = tokio::spawn(tokio_fact(n-1));\r\n    |                  ^^^^^^^^^^^^\r\n    = note: ...which requires evaluating trait selection obligation `tokio_fact::{opaque#0}: core::marker::Send`...\r\n    = note: ...which again requires computing type of `tokio_fact::{opaque#0}`, completing the cycle\r\n```\r\n\r\n\r\n### Desired output\r\n\r\n\r\nI'm not sure what should be the proper error message. Because of the `tokio::spawn` this is not the same problem as in [E0733](https://doc.rust-lang.org/error_codes/E0733.html).\r\n\r\nThe workaround often proposed by @Darksonn on various forums is to use a wrapping non-async function:\r\n\r\n```rust\r\nasync fn tokio_fact_bis(n: u32)  -> u32 {\r\n    if n <= 1 {\r\n        return n;\r\n    } else {\r\n        fn tokio_fact_wrap(n : u32) -> JoinHandle<u32> {\r\n            tokio::spawn(tokio_fact_bis(n))\r\n        }\r\n        let jh = tokio_fact_wrap(n-1);\r\n        jh.await.unwrap() * n\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Rationale and extra context\r\n\r\n_No response_\r\n\r\n### Other cases\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\n_No response_", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112175/timeline", "performed_via_github_app": null, "state_reason": null}