{"url": "https://api.github.com/repos/rust-lang/rust/issues/31697", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/31697/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/31697/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/31697/events", "html_url": "https://github.com/rust-lang/rust/issues/31697", "id": 133890332, "node_id": "MDU6SXNzdWUxMzM4OTAzMzI=", "number": 31697, "title": "Segmentation fault to return tuple struct from FFI", "user": {"login": "zonyitoo", "id": 1067951, "node_id": "MDQ6VXNlcjEwNjc5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1067951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zonyitoo", "html_url": "https://github.com/zonyitoo", "followers_url": "https://api.github.com/users/zonyitoo/followers", "following_url": "https://api.github.com/users/zonyitoo/following{/other_user}", "gists_url": "https://api.github.com/users/zonyitoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/zonyitoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zonyitoo/subscriptions", "organizations_url": "https://api.github.com/users/zonyitoo/orgs", "repos_url": "https://api.github.com/users/zonyitoo/repos", "events_url": "https://api.github.com/users/zonyitoo/events{/privacy}", "received_events_url": "https://api.github.com/users/zonyitoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-16T05:38:49Z", "updated_at": "2016-02-16T17:30:52Z", "closed_at": "2016-02-16T06:01:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reproduce step:\n\n``` c\n// test.c\n\nvoid* test() {\n    return 0x1234;\n}\n```\n\n``` rust\n// test.rs\n\nuse std::os::raw::c_void;\n\n#[link(name = \"test\")]\nextern \"C\" {\n    fn test() -> Foo;\n}\n\n#[derive(Debug)]\n#[repr(C)]\nstruct Foo(*const c_void);\n\nfn main() {\n\n    let x = unsafe { test() };\n    println!(\"{:?}\", x);\n}\n```\n\nCompile it with\n\n```\n$ gcc -c test.c\n$ ar cr libtest.a test.o\n$ rustc test.rs -L .\n```\n- Run `test` on `Darwin YTC-MBP 15.3.0 Darwin Kernel Version 15.3.0: Thu Dec 10 18:40:58 PST 2015; root:xnu-3248.30.4~1/RELEASE_X86_64 x86_64`, it prints\n\n```\nFoo(0x1234)\n```\n- Run `test` on `Linux debian 3.16.0-4-586 #1 Debian 3.16.7-ckt20-1+deb8u3 (2016-01-17) i686 GNU/Linux`, the program crashes with `SIGSEGV`.\n  \n  Run `gdb` on the `test`, I saw the logs as below\n  \n  ```\n  (gdb) r\n  Starting program: /home/zonyitoo/test/test \n  [Thread debugging using libthread_db enabled]\n  Using host libthread_db library \"/lib/i386-linux-gnu/i686/cmov/libthread_db.so.1\".\n  \n  Program received signal SIGSEGV, Segmentation fault.\n  0x80039dc8 in fmt::num::GenericRadix::fmt_int::h14764401731330493532 ()\n  (gdb) bt\n  #0  0x80039dc8 in fmt::num::GenericRadix::fmt_int::h14764401731330493532 ()\n  #1  0x8003a05f in fmt::num::_$LT$impl$GT$::fmt::h8d49af895bae7e42NIU ()\n  #2  0x800026fc in test::fmt::*const T.Pointer::fmt (self=0xbffff0f8, f=0xbfffedb4) at ../src/libcore/fmt/mod.rs:1399\n  #3  0x80002633 in test::fmt::*const T.Debug::fmt (self=0xbffff0f8, f=0xbfffedb4) at ../src/libcore/fmt/mod.rs:1519\n  #4  0x800025e5 in test::fmt::&'a T.Debug::fmt (self=0xbfffee94, f=0xbfffedb4) at ../src/libcore/fmt/mod.rs:1301\n  #5  0x8003a6f7 in fmt::_$LT$impl$GT$::fmt::h10861639613460630029 ()\n  #6  0x80039585 in fmt::write::h3ee305798dfb6d5czsW ()\n  #7  0x8003817d in fmt::builders::_$LT$impl$GT$::field::h50f24299c526b18bKQV ()\n  #8  0x8000251b in test::Foo.::std::fmt::Debug::fmt (self=0xbffff0f8, __arg_0=0xbfffeef4) at test.rs:8\n  #9  0x80039585 in fmt::write::h3ee305798dfb6d5czsW ()\n  #10 0x80005363 in io::stdio::_$LT$impl$GT$::write_fmt::h9bd90625c8576985N8g ()\n  #11 0x80005cbd in io::stdio::_print::h85c07cd599af0721Eeh ()\n  #12 0x80002806 in test::main () at <std macros>:2\n  #13 0x8000a92b in sys_common::unwind::try::try_fn::h14495721407247111545 ()\n  #14 0x800081b5 in __rust_try ()\n  #15 0x8000a5b8 in rt::lang_start::h8bad9340ef79b917k5x ()\n  #16 0x800028de in main ()\n  ```\n  \n  Break the program after `test()` returned, I got the following logs:\n  \n  ```\n  (gdb) b test.rs:14\n  Breakpoint 1 at 0x274f: file test.rs, line 14.\n  (gdb) r\n  Starting program: /home/zonyitoo/test/test \n  [Thread debugging using libthread_db enabled]\n  Using host libthread_db library \"/lib/i386-linux-gnu/i686/cmov/libthread_db.so.1\".\n  \n  Breakpoint 1, test::main () at test.rs:14\n  14      let x = unsafe { test() };\n  (gdb) bt\n  #0  test::main () at test.rs:14\n  #1  0x8000a92b in sys_common::unwind::try::try_fn::h14495721407247111545 ()\n  #2  0x800081b5 in __rust_try ()\n  #3  0x8000a5b8 in rt::lang_start::h8bad9340ef79b917k5x ()\n  #4  0x800028de in main ()\n  (gdb) n\n  15      println!(\"{:?}\", x);\n  (gdb) bt\n  #0  test::main () at test.rs:15\n  #1  0x8000a92b in sys_common::unwind::try::try_fn::h14495721407247111545 ()\n  #2  0x800081b5 in __rust_try ()\n  #3  0x8000a5b8 in rt::lang_start::h8bad9340ef79b917k5x ()\n  #4  0x800028de in main ()\n  (gdb) p x\n  $1 = {__0 = 0x1}\n  ```\n\nThe main idea here is that the FFI function `test` actually returns `void*`, but in Rust I defined a struct `Foo(*const c_void)`, which has the same size as `void*`.\n\nThe reason I want to do this is because I want to define some special function on `Foo`, which will need to move the `self`.\n## Unknown\n\nIf I define a struct in C\n\n``` c\nstruct Transfer {\n    void * f1;\n    void * f2;\n}\n\nstruct Transfer test();\n```\n\nwhich will be returned as the return type from a C function, and then I write a FFI prototype in Rust as\n\n``` rust\nextern \"C\" {\n    fn test() -> Transfer;\n}\n\n#[repr(C)]\nstruct Transfer {\n    f1: Foo,\n    f2: usize,\n}\n```\n\nIt works fine on x86_64 and x86, but I don't know whether the bug is covered.\n\nRelated project: https://github.com/zonyitoo/context-rs/tree/1.0 . We are porting `Boost.Context` from C++.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/31697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/31697/timeline", "performed_via_github_app": null, "state_reason": "completed"}