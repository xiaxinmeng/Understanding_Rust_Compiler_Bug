{"url": "https://api.github.com/repos/rust-lang/rust/issues/99934", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99934/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99934/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99934/events", "html_url": "https://github.com/rust-lang/rust/issues/99934", "id": 1322858346, "node_id": "I_kwDOAAsO6M5O2Tdq", "number": 99934, "title": "`std::fs::remove_dir_all()` doesn't delete all files on Windows 7", "user": {"login": "crusader-mike", "id": 22357016, "node_id": "MDQ6VXNlcjIyMzU3MDE2", "avatar_url": "https://avatars.githubusercontent.com/u/22357016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crusader-mike", "html_url": "https://github.com/crusader-mike", "followers_url": "https://api.github.com/users/crusader-mike/followers", "following_url": "https://api.github.com/users/crusader-mike/following{/other_user}", "gists_url": "https://api.github.com/users/crusader-mike/gists{/gist_id}", "starred_url": "https://api.github.com/users/crusader-mike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crusader-mike/subscriptions", "organizations_url": "https://api.github.com/users/crusader-mike/orgs", "repos_url": "https://api.github.com/users/crusader-mike/repos", "events_url": "https://api.github.com/users/crusader-mike/events{/privacy}", "received_events_url": "https://api.github.com/users/crusader-mike/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-07-30T03:36:07Z", "updated_at": "2022-08-01T04:00:58Z", "closed_at": "2022-07-30T23:47:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Windows 7 my incremental builds produce following warnings:\r\n```\r\nwarning: Failed to garbage collect finalized incremental compilation session directory `\\\\?\\D:\\Work\\<skip>\\target\\debug\\incre\r\nmental\\<skip>-h0ku3qc8pde\\s-gc3wk9dfjy-13pdd9o-11auxo9w4xmty`: The directory is not empty. (os error 145)\r\n```\r\n\r\nI tracked this issue down to a bug in `std::fs::remove_dir_all()` ([here](https://github.com/rust-lang/rust/blob/master/library/std/src/sys/windows/fs.rs#L1005)). This function tries \"posix delete\" each file and if it fails -- falls back to  \"windows delete\". Problem is that it does not restart enumeration in fallback -- thus first batch of filenames end up being skipped (and subsequent \"delete directory\" fails because dir is not empty). See [this](https://github.com/rust-lang/rust/blob/master/library/std/src/sys/windows/fs.rs#L1042) (note `false` is always passed as restart parameter). Enumeration state is stored within underlying kernel object, not handle -- [duplicating handle](https://github.com/rust-lang/rust/blob/master/library/std/src/sys/windows/fs.rs#L1039) won't reset it.\r\n\r\nI suggest `ReOpenFile()` before fallback or better yet -- reuse DirBuf returned on first iteration.\r\n\r\n\r\n```\r\n$ cargo --version\r\ncargo 1.64.0-nightly (8827baaa7 2022-07-14)\r\n```\r\n\r\nGeneral notes:\r\n- 1kb DirBuf used by `std::fs` is **way too small** (it takes about 5-10 files) -- enumerating directory with 1 mil files will take ages, I suggest 64kb (or better yet -- make it a parameter)\r\n- If you need an object model that \"fits\" both Posix and Win32 FS API I suggest smth like this:\r\n  - have a `Dir` object that represents \"open\" directory and allows access to other objects using relative path. It should also have:\r\n  ```\r\n    fn enumerate(&self, local_path, buf_sz) -> DirEnum;  <-- will call ReOpenFile() (or it's equivalent from NT API)\r\n    fn enumerate_self(self, buf_sz) -> DirEnum;   <-- note this consumes self (no need to ReOpenFile, just move underlying HANDLE)\r\n  ```\r\n  - have a DirEnum object that represents open directory with active enumeration going on and has same interface plus:\r\n  ```\r\n  fn done(&self) -> bool;\r\n  fn next_batch(&self, restart: bool) -> DirEntryBatch;  <-- this should use syscall(SYS_getdents) on Linux (to perform) and returned object can be empty (all entries marked as deleted) without done() being true\r\n  ```\r\n\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99934/timeline", "performed_via_github_app": null, "state_reason": "completed"}