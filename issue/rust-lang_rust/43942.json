{"url": "https://api.github.com/repos/rust-lang/rust/issues/43942", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43942/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43942/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43942/events", "html_url": "https://github.com/rust-lang/rust/issues/43942", "id": 250996436, "node_id": "MDU6SXNzdWUyNTA5OTY0MzY=", "number": 43942, "title": "Is automatic insertion of type inference placeholders possible?", "user": {"login": "mqudsi", "id": 606923, "node_id": "MDQ6VXNlcjYwNjkyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mqudsi", "html_url": "https://github.com/mqudsi", "followers_url": "https://api.github.com/users/mqudsi/followers", "following_url": "https://api.github.com/users/mqudsi/following{/other_user}", "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions", "organizations_url": "https://api.github.com/users/mqudsi/orgs", "repos_url": "https://api.github.com/users/mqudsi/repos", "events_url": "https://api.github.com/users/mqudsi/events{/privacy}", "received_events_url": "https://api.github.com/users/mqudsi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-17T16:12:20Z", "updated_at": "2018-09-15T15:27:18Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would it be possible to automatically insert `_` type inference placeholders where none (or not enough) type placeholders are provided, or does this conflict with any other tokens the parser has to deal with?\r\n\r\ni.e. can `[\"foo\", \"bar\"].iter().collect::Vec::()` be turned into `[\"foo\", \"bar\"].iter().collect::Vec<_>::()` automatically?\r\n\r\nand given a `Struct<X,Y>`, can `Struct<Foo>` automatically be understood as `Struct<Foo, _>`?\r\n\r\nThese would both simplify boilerplate considerably, and the latter could obviate the need to revisit old code when a type is expanded with an additional generic type parameter that can be inferred from its usage. ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43942/timeline", "performed_via_github_app": null, "state_reason": null}