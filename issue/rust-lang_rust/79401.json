{"url": "https://api.github.com/repos/rust-lang/rust/issues/79401", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79401/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79401/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79401/events", "html_url": "https://github.com/rust-lang/rust/issues/79401", "id": 750587273, "node_id": "MDU6SXNzdWU3NTA1ODcyNzM=", "number": 79401, "title": "Incompatibility using both `-Zinstrument-coverage` and `-Z build-std`", "user": {"login": "catenacyber", "id": 35799796, "node_id": "MDQ6VXNlcjM1Nzk5Nzk2", "avatar_url": "https://avatars.githubusercontent.com/u/35799796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catenacyber", "html_url": "https://github.com/catenacyber", "followers_url": "https://api.github.com/users/catenacyber/followers", "following_url": "https://api.github.com/users/catenacyber/following{/other_user}", "gists_url": "https://api.github.com/users/catenacyber/gists{/gist_id}", "starred_url": "https://api.github.com/users/catenacyber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catenacyber/subscriptions", "organizations_url": "https://api.github.com/users/catenacyber/orgs", "repos_url": "https://api.github.com/users/catenacyber/repos", "events_url": "https://api.github.com/users/catenacyber/events{/privacy}", "received_events_url": "https://api.github.com/users/catenacyber/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 5257912668, "node_id": "LA_kwDOAAsO6M8AAAABOWVhXA", "url": "https://api.github.com/repos/rust-lang/rust/labels/-Zbuild-std", "name": "-Zbuild-std", "color": "382EF0", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-11-25T07:59:22Z", "updated_at": "2023-03-13T00:53:14Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```\r\ngit clone https://github.com/OISF/suricata.git\r\ncd suricata\r\nexport RUSTFLAGS=\"-Zinstrument-coverage\"\r\nsh autogen.sh\r\n./configure --disable-shared --enable-fuzztargets --disable-gccmarch-native --enable-debug-validation\r\nmake\r\n```\r\n\r\nThis ends up running `cargo build --release -Z build-std`\r\n\r\nI expected to see this happen: \r\nCompilation succeeds\r\n\r\nInstead, this happened:\r\nCompilation failed with\r\n```\r\nUpdating crates.io index\r\n   Compiling core v0.0.0 (/Users/catena/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core)\r\nerror[E0152]: found duplicate lang item `f32`\r\n   --> /Users/catena/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/f32.rs:319:1\r\n    |\r\n319 | / impl f32 {\r\n320 | |     /// The radix or base of the internal representation of `f32`.\r\n321 | |     #[stable(feature = \"assoc_int_consts\", since = \"1.43.0\")]\r\n322 | |     pub const RADIX: u32 = 2;\r\n...   |\r\n937 | |     }\r\n938 | | }\r\n    | |_^\r\n    |\r\n    = note: the lang item is first defined in crate `core`.\r\n    = note: first definition in `core` loaded from /Users/catena/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcore-e3cd79f6ad1173fd.rlib\r\n    = note: second definition in the local crate (`core`)\r\n```\r\nand many more errors about other duplicate items\r\n\r\n### Meta\r\n\r\nThis is part of https://github.com/rust-lang/rust/issues/34701 cc @richkadel \r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0-nightly (603ab5bd6 2020-11-15)\r\nbinary: rustc\r\ncommit-hash: 603ab5bd6e0ffefafa7411cd8bd23a6ca82bcff0\r\ncommit-date: 2020-11-15\r\nhost: x86_64-apple-darwin\r\nrelease: 1.50.0-nightly\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n    Updating crates.io index\r\n   Compiling core v0.0.0 (/Users/catena/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core)\r\nerror[E0152]: found duplicate lang item `f32`\r\n   --> /Users/catena/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/f32.rs:319:1\r\n    |\r\n319 | / impl f32 {\r\n320 | |     /// The radix or base of the internal representation of `f32`.\r\n321 | |     #[stable(feature = \"assoc_int_consts\", since = \"1.43.0\")]\r\n322 | |     pub const RADIX: u32 = 2;\r\n...   |\r\n937 | |     }\r\n938 | | }\r\n    | |_^\r\n    |\r\n    = note: the lang item is first defined in crate `core`.\r\n    = note: first definition in `core` loaded from /Users/catena/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcore-e3cd79f6ad1173fd.rlib\r\n    = note: second definition in the local crate (`core`)\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79401/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79401/timeline", "performed_via_github_app": null, "state_reason": null}