{"url": "https://api.github.com/repos/rust-lang/rust/issues/52090", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52090/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52090/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52090/events", "html_url": "https://github.com/rust-lang/rust/issues/52090", "id": 338767378, "node_id": "MDU6SXNzdWUzMzg3NjczNzg=", "number": 52090, "title": "Tracking issue for #[wasm_import_module]", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 474645165, "node_id": "MDU6TGFiZWw0NzQ2NDUxNjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-wasm", "name": "O-wasm", "color": "6e6ec0", "default": false, "description": "Target: WASM (WebAssembly), http://webassembly.org/"}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2018-07-06T00:32:34Z", "updated_at": "2018-07-20T08:40:11Z", "closed_at": "2018-07-20T08:40:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is a tracking issue for the `#[wasm_import_module]` attribute and the `wasm_import_module` feature. This attribute is applied to `extern { ... }` blocks like so:\r\n\r\n```rust\r\n#[wasm_import_module = \"foo\"]\r\nextern {\r\n    fn foo();\r\n    fn bar();\r\n    // ...\r\n}\r\n```\r\n\r\nThe [WebAssembly specification](https://github.com/WebAssembly/design/blob/master/Modules.md#imports) requires that all imported values from the host environment have a two-level namespace:\r\n\r\n> All imports include two opaque names: a module name and an import name, which are required to be valid UTF-8. The interpretation of these names is up to the host environment but designed to allow a host environments, like the Web, to support a two-level namespace.\r\n\r\nAdditionally only globals (like static variables), functions, memories, and tables can be imported. The `extern { ... }` language block is used to import globals and functions, memories and tables cannot currently be manually imported.\r\n\r\nEach field of the wasm import needs to be configurable by Rust as both fields have semantic meaning. Typically the first field of the import is the \"module\" interpreted as an ES module, and the second field is what to import from that module.\r\n\r\nCurrently LLVM and LLD will default imports to the \"env\" module. This means that if you compile this code:\r\n\r\n```rust\r\nextern {\r\n    fn foo();\r\n}\r\n```\r\n\r\nit will generate a wasm file that imports the function \"foo\" from the module \"env\". By using `#[wasm_import_module]` we can customize what happens here:\r\n\r\n```rust\r\n#[wasm_import_module = \"somewhere else\"]\r\nextern {\r\n    fn foo();\r\n}\r\n```\r\n\r\nThis attribute *must* be of the form `#[wasm_import_module = \"string\"]`, no other forms are accepted. It can only be attached to an `extern` block. All items in the block are considered to come from the same module. Through the usage of `#[link_name]` we can then configure both fields of WebAssembly imports arbitrarily:\r\n\r\n```rust\r\n#[wasm_import_module = \"somewhere else\"]\r\nextern {\r\n    #[link_name = \"some_other_name\"]\r\n    fn foo();\r\n}\r\n```\r\n\r\nThe `#[wasm_import_module]` is accepted on non-wasm platforms but has no effect, it is simply an ignored attribute.\r\n\r\nHelpful links:\r\n\r\n* [Implementation](https://github.com/rust-lang/rust/pull/48883)\r\n* [Test for a well-formed attribute](https://github.com/rust-lang/rust/blob/c08480fce0f39f5c9c6db6dde0dccb375ca0ab14/src/test/ui/wasm-import-module.rs)\r\n* [Test that it is emitted correctly in the wasm file](https://github.com/rust-lang/rust/tree/c08480fce0f39f5c9c6db6dde0dccb375ca0ab14/src/test/run-make/wasm-import-module)\r\n* [Test that it is currently unstable](https://github.com/rust-lang/rust/blob/c08480fce0f39f5c9c6db6dde0dccb375ca0ab14/src/test/ui/feature-gate-wasm_import_module.rs)\r\n\r\n**Open questions and TODO**\r\n\r\n* Documentation in the reference\r\n* Should the attribute instead be `#[link(wasm_import_module = \"...\")]`?\r\n\r\ncc https://github.com/rustwasm/team/issues/82", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52090/timeline", "performed_via_github_app": null, "state_reason": "completed"}