{"url": "https://api.github.com/repos/rust-lang/rust/issues/70274", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70274/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70274/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70274/events", "html_url": "https://github.com/rust-lang/rust/issues/70274", "id": 585717853, "node_id": "MDU6SXNzdWU1ODU3MTc4NTM=", "number": 70274, "title": "Better diagnostics when calling \"ouroboros method\"", "user": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-22T13:24:51Z", "updated_at": "2021-09-10T07:26:30Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This code gives a somewhat hard to understand error message:\r\n\r\n```rust\r\nstruct S<'a> {\r\n    p: &'a (),\r\n    unit: (),\r\n}\r\n\r\nimpl<'a> S<'a> {\r\n    fn ouroboros_me(&'a mut self) {\r\n        self.p = &self.unit;\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let unit = ();\r\n    let mut s = S { p: &unit, unit: () };\r\n    s.ouroboros_me();\r\n    s.ouroboros_me();\r\n}\r\n\r\n```\r\n\r\n```\r\nerror[E0499]: cannot borrow `s` as mutable more than once at a time\r\n  --> src/main.rs:13:5\r\n   |\r\n12 |     s.ouroboros_me();\r\n   |     - first mutable borrow occurs here\r\n13 |     s.ouroboros_me();\r\n   |     ^\r\n   |     |\r\n   |     second mutable borrow occurs here\r\n   |     first borrow later used here\r\n```\r\n\r\nThe error is correct, as `ouroboros_me` stores a self-reference in `s`, but it also happens when not doing that purely due to the method signature. That's also correct, but users frequently write such a method accidentally and are then left to wonder why the variable stays borrowed for seemingly no reason.\r\n\r\nIt would be good to give a more targeted explanation as to why the borrow stays active for longer than expected.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70274/timeline", "performed_via_github_app": null, "state_reason": null}