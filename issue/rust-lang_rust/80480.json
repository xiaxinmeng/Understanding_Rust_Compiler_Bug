{"url": "https://api.github.com/repos/rust-lang/rust/issues/80480", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80480/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80480/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80480/events", "html_url": "https://github.com/rust-lang/rust/issues/80480", "id": 776010830, "node_id": "MDU6SXNzdWU3NzYwMTA4MzA=", "number": 80480, "title": "std::hint::black_box \u2013\u00a0Extend documentation to include recommended usage when writing benchmarks", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-12-29T17:37:17Z", "updated_at": "2020-12-29T17:57:08Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "https://doc.rust-lang.org/std/hint/fn.black_box.html\r\n\r\nIt would be helpful if the documentation was extended to include best practices when using `std::hint::black_box` in benchmarks. For example, should the user apply `black_box` to each of the parameters for the function they are benchmarking? And should the use apply `black_box` to the return value of the function?\r\n\r\nAnd while we're there we should include a doc example", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80480/timeline", "performed_via_github_app": null, "state_reason": null}