{"url": "https://api.github.com/repos/rust-lang/rust/issues/66784", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66784/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66784/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66784/events", "html_url": "https://github.com/rust-lang/rust/issues/66784", "id": 528860657, "node_id": "MDU6SXNzdWU1Mjg4NjA2NTc=", "number": 66784, "title": "Documentation for Implemented Traits Confusing for Beginners", "user": {"login": "zwhitchcox", "id": 4328800, "node_id": "MDQ6VXNlcjQzMjg4MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4328800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zwhitchcox", "html_url": "https://github.com/zwhitchcox", "followers_url": "https://api.github.com/users/zwhitchcox/followers", "following_url": "https://api.github.com/users/zwhitchcox/following{/other_user}", "gists_url": "https://api.github.com/users/zwhitchcox/gists{/gist_id}", "starred_url": "https://api.github.com/users/zwhitchcox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zwhitchcox/subscriptions", "organizations_url": "https://api.github.com/users/zwhitchcox/orgs", "repos_url": "https://api.github.com/users/zwhitchcox/repos", "events_url": "https://api.github.com/users/zwhitchcox/events{/privacy}", "received_events_url": "https://api.github.com/users/zwhitchcox/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-26T16:51:07Z", "updated_at": "2020-11-04T05:24:12Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "[I posted in Reddit](https://www.reddit.com/r/rust/comments/e1zoja/documentation_seems_to_be_missing_methods/) about a method that seemed to be missing in the [Range documentation](https://doc.rust-lang.org/std/ops/struct.Range.html), and it was explained to me that this method (`map`) came from a different trait called `Iterator`.\r\n\r\nMost people seemed to know this, but when asked how I would find this information if I didn't know every method on every trait that Range implemented, no one seemed to have a good answer.\r\n\r\nThe first way was to expand all the information about all the traits. Only the \"expand all\" button doesn't really expand everything, but just what someone seems to have determined is important, which did not include the `map` method.\r\n\r\nSo, then the next step, which was to manually expand every single method of every single trait that was implemented for `Range`.\r\n\r\nThis brings us to my first point. The `expand everything` button should actually expand everything.\r\n\r\nThere should also be a search box that allows you to search for the methods the trait implements. You could practically get this for free, as the info seems to already be downloaded to the page. I can see no reason why a search feature would not be implemented, especially in light of the fact that you can't do a search on the page with Ctrl+F due to everything being hidden and no easy way to expand everything.\r\n\r\nThe second point is that there should only be methods that are actually implemented for the actual struct of the page I am on. If a struct doesn't implement a method of a trait that it implements, there is not reason for it to be on that page other than to confuse people.\r\n\r\nI get the feeling that people have worked with Rust for so long that they know all this stuff by heart, but for a beginner, this is very confusing, and it also doesn't scale once people start implementing their own structs that people won't have memorized.\r\n\r\nTo be honest, this is *almost* enough to make me leave the language. I will probably just wait to learn it until proper documentation is implemented though. If I can't deterministically tell what method will do what, how am I supposed to use this language to code?\r\n\r\nBut think about how awesome it would be if you could just go a struct's documentation page and just scroll through and see every method implemented for the struct and only methods actually implemented?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66784/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66784/timeline", "performed_via_github_app": null, "state_reason": null}