{"url": "https://api.github.com/repos/rust-lang/rust/issues/46169", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46169/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46169/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46169/events", "html_url": "https://github.com/rust-lang/rust/issues/46169", "id": 275846940, "node_id": "MDU6SXNzdWUyNzU4NDY5NDA=", "number": 46169, "title": "Unable to give the reason why a type isn't Sync", "user": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-21T20:20:21Z", "updated_at": "2023-06-19T17:25:28Z", "closed_at": "2023-06-19T17:25:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For the the following example, rustc is unable to tell the user that there's a `Cell` type which prevents `TokenStreamKind` from implementing `Sync`.\r\n```rust\r\nuse std::boxed::Box as P;\r\nuse std::sync::Arc;\r\nuse std::cell::Cell;\r\n\r\nstruct LazyTokenStream(Cell<TokenStreamKind>);\r\n\r\nstruct Token(Arc<(P<TokenStreamKind>, LazyTokenStream)>);\r\n\r\nstruct RcSlice<T> {\r\n    data: Arc<Box<[T]>>,\r\n}\r\n\r\nenum TokenStreamKind {\r\n    Tree(Token),\r\n    Stream(RcSlice<TokenStreamKind>),\r\n}\r\n\r\nfn assert_sync<T: ?Sized + Sync>() {}\r\n\r\nfn _dummy() {\r\n    assert_sync::<TokenStreamKind>();\r\n}\r\n\r\nfn main() {}\r\n```\r\nIt gives this error instead:\r\n```\r\nCompiling playground v0.0.1 (file:///playground)\r\nerror[E0275]: overflow evaluating the requirement `std::boxed::Box<TokenStreamKind>: std::marker::Send`\r\n  --> src/main.rs:21:5\r\n   |\r\n21 |     assert_sync::<TokenStreamKind>();\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\r\n   = note: required because it appears within the type `(std::boxed::Box<TokenStreamKind>, LazyTokenStream)`\r\n   = note: required because of the requirements on the impl of `std::marker::Sync` for `std::sync::Arc<(std::boxed::Box<TokenStreamKind>, LazyTokenStream)>`\r\n   = note: required because it appears within the type `Token`\r\n   = note: required because it appears within the type `TokenStreamKind`\r\n   = note: required because it appears within the type `[TokenStreamKind]`\r\n   = note: required because of the requirements on the impl of `std::marker::Sync` for `std::ptr::Unique<[TokenStreamKind]>`\r\n   = note: required because it appears within the type `std::boxed::Box<[TokenStreamKind]>`\r\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Arc<std::boxed::Box<[TokenStreamKind]>>`\r\n   = note: required because it appears within the type `RcSlice<TokenStreamKind>`\r\n   = note: required because it appears within the type `TokenStreamKind`\r\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::ptr::Unique<TokenStreamKind>`\r\n   = note: required because it appears within the type `std::boxed::Box<TokenStreamKind>`\r\n   = note: required because it appears within the type `(std::boxed::Box<TokenStreamKind>, LazyTokenStream)`\r\n   = note: required because of the requirements on the impl of `std::marker::Sync` for `std::sync::Arc<(std::boxed::Box<TokenStreamKind>, LazyTokenStream)>`\r\n   = note: required because it appears within the type `Token`\r\n   = note: required because it appears within the type `TokenStreamKind`\r\n   = note: required because it appears within the type `[TokenStreamKind]`\r\n   = note: required because of the requirements on the impl of `std::marker::Sync` for `std::ptr::Unique<[TokenStreamKind]>`\r\n   = note: required because it appears within the type `std::boxed::Box<[TokenStreamKind]>`\r\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Arc<std::boxed::Box<[TokenStreamKind]>>`\r\n   = note: required because it appears within the type `RcSlice<TokenStreamKind>`\r\n   = note: required because it appears within the type `TokenStreamKind`\r\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::ptr::Unique<TokenStreamKind>`\r\n   = note: required because it appears within the type `std::boxed::Box<TokenStreamKind>`\r\n   = note: required because it appears within the type `(std::boxed::Box<TokenStreamKind>, LazyTokenStream)`\r\n   = note: required because of the requirements on the impl of `std::marker::Sync` for `std::sync::Arc<(std::boxed::Box<TokenStreamKind>, LazyTokenStream)>`\r\n   = note: required because it appears within the type `Token`\r\n   = note: required because it appears within the type `TokenStreamKind`\r\n   = note: required because it appears within the type `[TokenStreamKind]`\r\n   = note: required because of the requirements on the impl of `std::marker::Sync` for `std::ptr::Unique<[TokenStreamKind]>`\r\n   = note: required because it appears within the type `std::boxed::Box<[TokenStreamKind]>`\r\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Arc<std::boxed::Box<[TokenStreamKind]>>`\r\n   = note: required because it appears within the type `RcSlice<TokenStreamKind>`\r\n   = note: required because it appears within the type `TokenStreamKind`\r\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::ptr::Unique<TokenStreamKind>`\r\n   = note: required because it appears within the type `std::boxed::Box<TokenStreamKind>`\r\n   = note: required because it appears within the type `(std::boxed::Box<TokenStreamKind>, LazyTokenStream)`\r\n   = note: required because of the requirements on the impl of `std::marker::Sync` for `std::sync::Arc<(std::boxed::Box<TokenStreamKind>, LazyTokenStream)>`\r\n   = note: required because it appears within the type `Token`\r\n   = note: required because it appears within the type `TokenStreamKind`\r\n   = note: required because it appears within the type `[TokenStreamKind]`\r\n   = note: required because of the requirements on the impl of `std::marker::Sync` for `std::ptr::Unique<[TokenStreamKind]>`\r\n   = note: required because it appears within the type `std::boxed::Box<[TokenStreamKind]>`\r\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Arc<std::boxed::Box<[TokenStreamKind]>>`\r\n   = note: required because it appears within the type `RcSlice<TokenStreamKind>`\r\n   = note: required because it appears within the type `TokenStreamKind`\r\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::ptr::Unique<TokenStreamKind>`\r\n   = note: required because it appears within the type `std::boxed::Box<TokenStreamKind>`\r\n   = note: required because it appears within the type `(std::boxed::Box<TokenStreamKind>, LazyTokenStream)`\r\n   = note: required because of the requirements on the impl of `std::marker::Sync` for `std::sync::Arc<(std::boxed::Box<TokenStreamKind>, LazyTokenStream)>`\r\n   = note: required because it appears within the type `Token`\r\n   = note: required because it appears within the type `TokenStreamKind`\r\n   = note: required because it appears within the type `[TokenStreamKind]`\r\n   = note: required because of the requirements on the impl of `std::marker::Sync` for `std::ptr::Unique<[TokenStreamKind]>`\r\n   = note: required because it appears within the type `std::boxed::Box<[TokenStreamKind]>`\r\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Arc<std::boxed::Box<[TokenStreamKind]>>`\r\n   = note: required because it appears within the type `RcSlice<TokenStreamKind>`\r\n   = note: required because it appears within the type `TokenStreamKind`\r\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::ptr::Unique<TokenStreamKind>`\r\n   = note: required because it appears within the type `std::boxed::Box<TokenStreamKind>`\r\n   = note: required because it appears within the type `(std::boxed::Box<TokenStreamKind>, LazyTokenStream)`\r\n   = note: required because of the requirements on the impl of `std::marker::Sync` for `std::sync::Arc<(std::boxed::Box<TokenStreamKind>, LazyTokenStream)>`\r\n   = note: required because it appears within the type `Token`\r\n   = note: required because it appears within the type `TokenStreamKind`\r\n   = note: required by `assert_sync`\r\n```\r\n\r\ncc @nikomatsakis ", "closed_by": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46169/timeline", "performed_via_github_app": null, "state_reason": "completed"}