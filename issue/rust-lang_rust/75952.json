{"url": "https://api.github.com/repos/rust-lang/rust/issues/75952", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75952/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75952/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75952/events", "html_url": "https://github.com/rust-lang/rust/issues/75952", "id": 686551686, "node_id": "MDU6SXNzdWU2ODY1NTE2ODY=", "number": 75952, "title": "Should there be a `Once::try_call_once`", "user": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-26T19:07:39Z", "updated_at": "2020-08-26T19:08:41Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I wonder if `Once` should have a `try_call_once` method for failable initialization, which accepts a `FnOnce() -> Result<(), E>`.\r\n\r\n`OnceCell` has a `get_or_try_init`  method which can fail, so I think it would make sense for `Once` to have a failable initialisation method as well. Note that due to lack of failable init in `Once` right now, `OnceCell` currently need to rely on `pub(crate)` method to posion the `Once` for `get_or_try_init`.\r\n\r\ncc #33577\r\n\r\n@rustbot modify labels: +T-libs", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75952/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75952/timeline", "performed_via_github_app": null, "state_reason": null}