{"url": "https://api.github.com/repos/rust-lang/rust/issues/21871", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/21871/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/21871/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/21871/events", "html_url": "https://github.com/rust-lang/rust/issues/21871", "id": 56280475, "node_id": "MDU6SXNzdWU1NjI4MDQ3NQ==", "number": 21871, "title": "ICE: RUST_LOG=rustc_trans::trans::cleanup: Index out of bounds", "user": {"login": "Munksgaard", "id": 230613, "node_id": "MDQ6VXNlcjIzMDYxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/230613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Munksgaard", "html_url": "https://github.com/Munksgaard", "followers_url": "https://api.github.com/users/Munksgaard/followers", "following_url": "https://api.github.com/users/Munksgaard/following{/other_user}", "gists_url": "https://api.github.com/users/Munksgaard/gists{/gist_id}", "starred_url": "https://api.github.com/users/Munksgaard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Munksgaard/subscriptions", "organizations_url": "https://api.github.com/users/Munksgaard/orgs", "repos_url": "https://api.github.com/users/Munksgaard/repos", "events_url": "https://api.github.com/users/Munksgaard/events{/privacy}", "received_events_url": "https://api.github.com/users/Munksgaard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108435, "node_id": "MDU6TGFiZWwxMDg0MzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-pretty", "name": "A-pretty", "color": "f7e101", "default": false, "description": "Area: Pretty printing."}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-02-02T19:22:13Z", "updated_at": "2015-03-16T12:48:44Z", "closed_at": "2015-03-16T12:48:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When compiling this\n\n``` rust\nfn main() {\n    let v: Vec<u8>;\n}\n```\n\nWith `RUST_LOG=rustc_trans::trans::cleanup`, I get the following:\n\n```\n$ RUST_BACKTRACE=1 RUST_LOG=rustc_trans::trans::cleanup rustc foo.rs \nfoo.rs:2:9: 2:10 warning: unused variable: `v`, #[warn(unused_variables)] on by default\nfoo.rs:2     let v: Vec<u8>;\n                 ^\nDEBUG:rustc_trans::trans::cleanup: push_custom_cleanup_scope(): 0\nDEBUG:rustc_trans::trans::cleanup: push_ast_cleanup_scope(block { let v: Vec<u8>; } (id=6))\nDEBUG:rustc_trans::trans::cleanup: push_ast_cleanup_scope(stmt let v: Vec<u8>; (id=7))\nDEBUG:rustc_trans::trans::cleanup: var_scope(13) = AstScope(6)\nDEBUG:rustc_trans::trans::cleanup: schedule_lifetime_end(AstScope(6), val=(%\"struct.collections::vec::Vec<[\\22u8\\22]>[#3]\"*:  %v = alloca %\"struct.collections::vec::Vec<[\\22u8\\22]>[#3]\"))\nDEBUG:rustc_trans::trans::cleanup: schedule_clean_in_ast_scope(cleanup_scope=6)\nDEBUG:rustc_trans::trans::cleanup: schedule_drop_mem(AstScope(6), val=(%\"struct.collections::vec::Vec<[\\22u8\\22]>[#3]\"*:  %v = alloca %\"struct.collections::vec::Vec<[\\22u8\\22]>[#3]\"), ty=collections::vec::Vec<u8>)\nDEBUG:rustc_trans::trans::cleanup: schedule_clean_in_ast_scope(cleanup_scope=6)\nDEBUG:rustc_trans::trans::cleanup: pop_and_trans_ast_cleanup_scope(stmt let v: Vec<u8>; (id=7))\nDEBUG:rustc_trans::trans::cleanup: popping cleanup scope _ast_7_, 2 scopes remaining\nDEBUG:rustc_trans::trans::cleanup: pop_and_trans_ast_cleanup_scope(block { let v: Vec<u8>; } (id=6))\nDEBUG:rustc_trans::trans::cleanup: popping cleanup scope _ast_6_, 1 scopes remaining\nDEBUG:rustc_trans::trans::cleanup: push_custom_cleanup_scope(): 0\nDEBUG:rustc_trans::trans::cleanup: schedule_lifetime_end(CustomScope(CustomScopeIndex { index: 0 }), val=(%\"struct.collections::vec::Vec<[\\22u8\\22]>[#3]\"**:  %self = alloca %\"struct.collections::vec::Vec<[\\22u8\\22]>[#3]\"*))\nDEBUG:rustc_trans::trans::cleanup: schedule_clean_in_custom_scope(custom_scope=0)\nDEBUG:rustc_trans::trans::cleanup: push_ast_cleanup_scope(block {\n    if self.cap != 0 {\n        unsafe {\n            match ::std::iter::IntoIterator::into_iter(self.iter()) {\n                mut iter =>\n                loop  {\n                    match ::std::iter::Iterator::next(&mut iter) {\n                        ::std::option::Option::Some(x) => { ptr::read(x); }\n                        ::std::option::Option::None => break ,\n                    }\n                },\n            }\n            dealloc(*self.ptr, self.cap)\n        }\n    }\n} (id=19))\nDEBUG:rustc_trans::trans::cleanup: push_ast_cleanup_scope(expr if self.cap != 0 {\n    unsafe {\n        match ::std::iter::IntoIterator::into_iter(self.iter()) {\n            mut iter =>\n            loop  {\n                match ::std::iter::Iterator::next(&mut iter) {\n                    ::std::option::Option::Some(x) => { ptr::read(x); }\n                    ::std::option::Option::None => break ,\n                }\n            },\n        }\n        dealloc(*self.ptr, self.cap)\n    }\n} (id=20))\nDEBUG:rustc_trans::trans::cleanup: push_ast_cleanup_scope(expr self.cap != 0 (id=21))\nDEBUG:rustc_trans::trans::cleanup: push_ast_cleanup_scope(expr self.cap (id=22))\nDEBUG:rustc_trans::trans::cleanup: push_ast_cleanup_scope(expr self (id=23))\nDEBUG:rustc_trans::trans::cleanup: pop_and_trans_ast_cleanup_scope(expr self (id=23))\nDEBUG:rustc_trans::trans::cleanup: popping cleanup scope _ast_23_, 5 scopes remaining\nDEBUG:rustc_trans::trans::cleanup: pop_and_trans_ast_cleanup_scope(expr self.cap (id=22))\nDEBUG:rustc_trans::trans::cleanup: popping cleanup scope _ast_22_, 4 scopes remaining\nDEBUG:rustc_trans::trans::cleanup: push_ast_cleanup_scope(expr 0 (id=24))\nDEBUG:rustc_trans::trans::cleanup: pop_and_trans_ast_cleanup_scope(expr 0 (id=24))\nDEBUG:rustc_trans::trans::cleanup: popping cleanup scope _ast_24_, 4 scopes remaining\nDEBUG:rustc_trans::trans::cleanup: pop_and_trans_ast_cleanup_scope(expr self.cap != 0 (id=21))\nDEBUG:rustc_trans::trans::cleanup: popping cleanup scope _ast_21_, 3 scopes remaining\nDEBUG:rustc_trans::trans::cleanup: push_ast_cleanup_scope(block {\n    unsafe {\n        match ::std::iter::IntoIterator::into_iter(self.iter()) {\n            mut iter =>\n            loop  {\n                match ::std::iter::Iterator::next(&mut iter) {\n                    ::std::option::Option::Some(x) => { ptr::read(x); }\n                    ::std::option::Option::None => break ,\n                }\n            },\n        }\n        dealloc(*self.ptr, self.cap)\n    }\n} (id=25))\nDEBUG:rustc_trans::trans::cleanup: push_ast_cleanup_scope(expr unsafe {\n    match ::std::iter::IntoIterator::into_iter(self.iter()) {\n        mut iter =>\n        loop  {\n            match ::std::iter::Iterator::next(&mut iter) {\n                ::std::option::Option::Some(x) => { ptr::read(x); }\n                ::std::option::Option::None => break ,\n            }\n        },\n    }\n    dealloc(*self.ptr, self.cap)\n} (id=26))\nDEBUG:rustc_trans::trans::cleanup: push_ast_cleanup_scope(block unsafe {\n    match ::std::iter::IntoIterator::into_iter(self.iter()) {\n        mut iter =>\n        loop  {\n            match ::std::iter::Iterator::next(&mut iter) {\n                ::std::option::Option::Some(x) => { ptr::read(x); }\n                ::std::option::Option::None => break ,\n            }\n        },\n    }\n    dealloc(*self.ptr, self.cap)\n} (id=27))\nDEBUG:rustc_trans::trans::cleanup: push_ast_cleanup_scope(stmt match ::std::iter::IntoIterator::into_iter(self.iter()) {\n    mut iter =>\n    loop  {\n        match ::std::iter::Iterator::next(&mut iter) {\n            ::std::option::Option::Some(x) => { ptr::read(x); }\n            ::std::option::Option::None => break ,\n        }\n    },\n} (id=28))\nDEBUG:rustc_trans::trans::cleanup: push_ast_cleanup_scope(expr match ::std::iter::IntoIterator::into_iter(self.iter()) {\n    mut iter =>\n    loop  {\n        match ::std::iter::Iterator::next(&mut iter) {\n            ::std::option::Option::Some(x) => { ptr::read(x); }\n            ::std::option::Option::None => break ,\n        }\n    },\n} (id=29))\nDEBUG:rustc_trans::trans::cleanup: push_ast_cleanup_scope(expr ::std::iter::IntoIterator::into_iter(self.iter()) (id=30))\nDEBUG:rustc_trans::trans::cleanup: push_custom_cleanup_scope(): 9\nDEBUG:rustc_trans::trans::cleanup: push_custom_cleanup_scope(): 0\nDEBUG:rustc_trans::trans::cleanup: schedule_lifetime_end(CustomScope(CustomScopeIndex { index: 0 }), val=(%\"struct.core::slice::Iter<[\\22u8\\22]>[#2]\"*:%\"struct.core::slice::Iter<[\\22u8\\22]>[#2]\"* %1))\nDEBUG:rustc_trans::trans::cleanup: schedule_clean_in_custom_scope(custom_scope=0)\nDEBUG:rustc_trans::trans::cleanup: push_ast_cleanup_scope(block { self } (id=67))\nDEBUG:rustc_trans::trans::cleanup: push_ast_cleanup_scope(expr self (id=68))\nDEBUG:rustc_trans::trans::cleanup: pop_and_trans_ast_cleanup_scope(expr self (id=68))\nDEBUG:rustc_trans::trans::cleanup: popping cleanup scope _ast_68_, 2 scopes remaining\nDEBUG:rustc_trans::trans::cleanup: pop_and_trans_ast_cleanup_scope(block { self } (id=67))\nDEBUG:rustc_trans::trans::cleanup: popping cleanup scope _ast_67_, 1 scopes remaining\nDEBUG:rustc_trans::trans::cleanup: pop_and_trans_custom_cleanup_scope(CustomScopeIndex { index: 0 })\nDEBUG:rustc_trans::trans::cleanup: popping cleanup scope _custom_, 0 scopes remaining\nDEBUG:rustc_trans::trans::cleanup: push_ast_cleanup_scope(expr self.iter() (id=32))\nDEBUG:rustc_trans::trans::cleanup: push_custom_cleanup_scope(): 11\nDEBUG:rustc_trans::trans::cleanup: push_custom_cleanup_scope(): 0\nDEBUG:rustc_trans::trans::cleanup: schedule_lifetime_end(CustomScope(CustomScopeIndex { index: 0 }), val=({ i8*, i64 }*:{ i8*, i64 }* %1))\nDEBUG:rustc_trans::trans::cleanup: schedule_clean_in_custom_scope(custom_scope=0)\nerror: internal compiler error: unexpected panic\nnote: the compiler unexpectedly panicked. this is a bug.\nnote: we would appreciate a bug report: http://doc.rust-lang.org/complement-bugreport.html\nnote: run with `RUST_BACKTRACE=1` for a backtrace\nthread 'rustc' panicked at 'index out of bounds: the len is 916 but the index is 1539', /home/munksgaard/src/rust/src/libsyntax/lib.rs:1\n\nstack backtrace:\n   1:     0x7f581a760f90 - sys::backtrace::write::h05231eaa284f6244Aru\n   2:     0x7f581a7845b0 - failure::on_fail::h199633f9964fe5659GB\n   3:     0x7f581a6ef3e0 - rt::unwind::begin_unwind_inner::h9418c864201e5a95IlB\n   4:     0x7f581a6eff00 - rt::unwind::begin_unwind_fmt::h2752d211a0fd31a7ekB\n   5:     0x7f581a784410 - rust_begin_unwind\n   6:     0x7f581a7d7c10 - panicking::panic_fmt::h479dcfa924d238a3ljw\n   7:     0x7f581a7e09b0 - panicking::panic_bounds_check::h30928c8c0ce1c84dmiw\n   8:     0x7f5817a7fe60 - util::interner::StrInterner::get::he9d63d350e469d366qa\n   9:     0x7f5817c1e030 - print::pprust::State<'a>::print_name::hdfc8c31a93a19984bO3\n  10:     0x7f5817c1e3c0 - print::pprust::State<'a>::print_path_parameters::he3a61e1dd2ade45aNV3\n  11:     0x7f5817c087c0 - print::pprust::State<'a>::print_path::hf8bf3d9d586478caaQ3\n  12:     0x7f5817ad8030 - print::pprust::State<'a>::print_expr::ha1b71339e1aa8496HQ2\n  13:     0x7f5817c1ce00 - print::pprust::State<'a>::print_expr_struct::closure.54776\n  14:     0x7f5817c1c7a0 - print::pprust::State<'a>::print_expr_struct::h03e80ef8a5a65eaazC2\n  15:     0x7f5817ad8030 - print::pprust::State<'a>::print_expr::ha1b71339e1aa8496HQ2\n  16:     0x7f5817c1b1d0 - print::pprust::State<'a>::print_block_maybe_unclosed::h0a641e3985af807fRb2\n  17:     0x7f5817c1c160 - print::pprust::State<'a>::print_if::h62f9cb5c48213677Jn2\n  18:     0x7f5817ad8030 - print::pprust::State<'a>::print_expr::ha1b71339e1aa8496HQ2\n  19:     0x7f5817c1b1d0 - print::pprust::State<'a>::print_block_maybe_unclosed::h0a641e3985af807fRb2\n  20:     0x7f5817ad8030 - print::pprust::State<'a>::print_expr::ha1b71339e1aa8496HQ2\n  21:     0x7f5817c1b1d0 - print::pprust::State<'a>::print_block_maybe_unclosed::h0a641e3985af807fRb2\n  22:     0x7f5817aded30 - print::pprust::block_to_string::hc6545d73cef6ce29fPZ\n  23:     0x7f5817acd610 - ast_map::node_id_to_string::h8441c6e6a0397472QCA\n  24:     0x7f5817acbc70 - ast_map::Map<'ast>::node_to_string::hd217c1aae8205a0521z\n  25:     0x7f581942c1b0 - trans::cleanup::FunctionContext<'blk, 'tcx>.CleanupMethods<'blk, 'tcx>::push_ast_cleanup_scope::h5f6bd82c79e1be10bVK\n  26:     0x7f581942d610 - trans::controlflow::trans_block::ha6710ce14b21fd80yae\n  27:     0x7f58194f85e0 - trans::base::trans_closure::h7e23490ef5529b06l4t\n  28:     0x7f5819419ce0 - trans::base::trans_fn::h525fca289c608987Hfu\n  29:     0x7f581941a240 - trans::monomorphize::monomorphic_fn::h69e036c9514aeca1Dwd\n  30:     0x7f581945ab80 - trans::callee::trans_fn_ref_with_substs::h1827e2dee44937fdeyg\n  31:     0x7f5819470940 - trans::meth::trans_method_callee::ha759981f9d932b8dbUy\n  32:     0x7f581946f210 - trans::callee::trans_call_inner::h18079871155530619635\n  33:     0x7f5819476640 - trans::expr::trans_rvalue_dps_unadjusted::h36a4ddaf92e93ba2VTi\n  34:     0x7f58194759d0 - trans::expr::trans_unadjusted::h501f1d136d476567xli\n  35:     0x7f581942e1b0 - trans::expr::trans::hf58a24ab15abed80ADh\n  36:     0x7f58194674e0 - trans::callee::trans_args::h9a1f29f3ae1886eaqdh\n  37:     0x7f581946db90 - trans::callee::trans_call_inner::h10942245753906255274\n  38:     0x7f5819476640 - trans::expr::trans_rvalue_dps_unadjusted::h36a4ddaf92e93ba2VTi\n  39:     0x7f58194759d0 - trans::expr::trans_unadjusted::h501f1d136d476567xli\n  40:     0x7f581942e1b0 - trans::expr::trans::hf58a24ab15abed80ADh\n  41:     0x7f5819515bd0 - trans::_match::trans_match_inner::h20309c7d6adfe98bqsx\n  42:     0x7f5819476640 - trans::expr::trans_rvalue_dps_unadjusted::h36a4ddaf92e93ba2VTi\n  43:     0x7f581942d010 - trans::expr::trans_into::h905985b65b4d22f36zh\n  44:     0x7f581942c480 - trans::controlflow::trans_stmt_semi::h97461a79191d3857H9d\n  45:     0x7f581942d610 - trans::controlflow::trans_block::ha6710ce14b21fd80yae\n  46:     0x7f5819476640 - trans::expr::trans_rvalue_dps_unadjusted::h36a4ddaf92e93ba2VTi\n  47:     0x7f581942d010 - trans::expr::trans_into::h905985b65b4d22f36zh\n  48:     0x7f581942d610 - trans::controlflow::trans_block::ha6710ce14b21fd80yae\n  49:     0x7f5819476640 - trans::expr::trans_rvalue_dps_unadjusted::h36a4ddaf92e93ba2VTi\n  50:     0x7f581942d010 - trans::expr::trans_into::h905985b65b4d22f36zh\n  51:     0x7f581942d610 - trans::controlflow::trans_block::ha6710ce14b21fd80yae\n  52:     0x7f58194f85e0 - trans::base::trans_closure::h7e23490ef5529b06l4t\n  53:     0x7f5819419ce0 - trans::base::trans_fn::h525fca289c608987Hfu\n  54:     0x7f581941a240 - trans::monomorphize::monomorphic_fn::h69e036c9514aeca1Dwd\n  55:     0x7f5819440b00 - trans::glue::trans_struct_drop::ha3ff0b1d7c030d94POe\n  56:     0x7f5819435830 - trans::glue::get_drop_glue::h4060dde62cee1bdfFHe\n  57:     0x7f5819435530 - trans::glue::drop_ty::hf8ec8a717ad71facWDe\n  58:     0x7f581956aea0 - trans::cleanup::DropValue<'tcx>.Cleanup<'tcx>::trans::he7ded553a9ae0600RaM\n  59:     0x7f581942cb80 - trans::cleanup::FunctionContext<'blk, 'tcx>.CleanupMethods<'blk, 'tcx>::pop_and_trans_ast_cleanup_scope::h87e982779e518632L5K\n  60:     0x7f581942d610 - trans::controlflow::trans_block::ha6710ce14b21fd80yae\n  61:     0x7f58194f85e0 - trans::base::trans_closure::h7e23490ef5529b06l4t\n  62:     0x7f5819419ce0 - trans::base::trans_fn::h525fca289c608987Hfu\n  63:     0x7f5819414e30 - trans::base::trans_item::h4194be0282ff3bfcSDu\n  64:     0x7f58194ff9b0 - trans::base::trans_crate::h5a83c959a64059a1CAv\n  65:     0x7f581ad096c0 - driver::phase_4_translate_to_llvm::h4edec40b63cde28d2Oa\n  66:     0x7f581ace2f90 - driver::compile_input::h069b14861a632ff8Bba\n  67:     0x7f581adadaa0 - run_compiler::hfbc1e332296c6b439ac\n  68:     0x7f581adac130 - thunk::F.Invoke<A, R>::invoke::h9964198321774557263\n  69:     0x7f581adab060 - rt::unwind::try::try_fn::h15238212938126306553\n  70:     0x7f581a7fa970 - rust_try_inner\n  71:     0x7f581a7fa960 - rust_try\n  72:     0x7f581adab310 - thunk::F.Invoke<A, R>::invoke::h15514854263126532375\n  73:     0x7f581a770db0 - sys::thread::thread_start::hd4939dc2db48a5bcPnx\n  74:     0x7f5814aea140 - <unknown>\n  75:     0x7f581a389bb9 - __clone\n  76:                0x0 - <unknown>\n\n\n```\n\n```\n$ rustc --version\nrustc 1.0.0-dev (76ce1ea42 2015-02-01 15:49:20 +0000)\n```\n", "closed_by": {"login": "Munksgaard", "id": 230613, "node_id": "MDQ6VXNlcjIzMDYxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/230613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Munksgaard", "html_url": "https://github.com/Munksgaard", "followers_url": "https://api.github.com/users/Munksgaard/followers", "following_url": "https://api.github.com/users/Munksgaard/following{/other_user}", "gists_url": "https://api.github.com/users/Munksgaard/gists{/gist_id}", "starred_url": "https://api.github.com/users/Munksgaard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Munksgaard/subscriptions", "organizations_url": "https://api.github.com/users/Munksgaard/orgs", "repos_url": "https://api.github.com/users/Munksgaard/repos", "events_url": "https://api.github.com/users/Munksgaard/events{/privacy}", "received_events_url": "https://api.github.com/users/Munksgaard/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/21871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/21871/timeline", "performed_via_github_app": null, "state_reason": "completed"}