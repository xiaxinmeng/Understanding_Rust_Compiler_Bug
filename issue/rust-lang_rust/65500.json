{"url": "https://api.github.com/repos/rust-lang/rust/issues/65500", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65500/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65500/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65500/events", "html_url": "https://github.com/rust-lang/rust/issues/65500", "id": 508493368, "node_id": "MDU6SXNzdWU1MDg0OTMzNjg=", "number": 65500, "title": "rustc panics compiling async_trait with an associated type", "user": {"login": "Hirrolot", "id": 40539574, "node_id": "MDQ6VXNlcjQwNTM5NTc0", "avatar_url": "https://avatars.githubusercontent.com/u/40539574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hirrolot", "html_url": "https://github.com/Hirrolot", "followers_url": "https://api.github.com/users/Hirrolot/followers", "following_url": "https://api.github.com/users/Hirrolot/following{/other_user}", "gists_url": "https://api.github.com/users/Hirrolot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hirrolot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hirrolot/subscriptions", "organizations_url": "https://api.github.com/users/Hirrolot/orgs", "repos_url": "https://api.github.com/users/Hirrolot/repos", "events_url": "https://api.github.com/users/Hirrolot/events{/privacy}", "received_events_url": "https://api.github.com/users/Hirrolot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-10-17T13:55:05Z", "updated_at": "2019-10-18T08:14:53Z", "closed_at": "2019-10-18T08:14:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`rustc` panics if I define an associated type inside an `#[async_trait]` trait and implement it for a structure:\r\n\r\nInside `src/main.rs`:\r\n```rust\r\n#[macro_use]\r\nextern crate async_trait;\r\n\r\n#[async_trait]\r\ntrait MyTrait {\r\n    type MyType;\r\n\r\n    async fn call_boxed(&self) -> Self::MyType;\r\n}\r\n\r\nstruct MyStruct;\r\n\r\n#[async_trait]\r\nimpl MyTrait for MyStruct {\r\n    type MyType = i32;\r\n\r\n    async fn call_boxed(&self) -> Self::MyType {\r\n        self.call().await\r\n    }\r\n}\r\n\r\nimpl MyStruct {\r\n    async fn call(&self) -> Self::Output {\r\n        5\r\n    }\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\nInside `Cargo.toml`:\r\n```toml\r\n[package]\r\nname = \"bug\"\r\nversion = \"0.1.0\"\r\nauthors = [\"Temirkhan Myrzamadi <gymmasssorla@gmail.com>\"]\r\nedition = \"2018\"\r\n\r\n[dependencies]\r\nasync-trait = \"0.1.15\"\r\n```\r\n\r\n## Meta\r\n<details>\r\n\r\n```\r\n\r\n$ RUST_BACKTRACE=1 cargo check --verbose\r\n       Fresh unicode-xid v0.2.0\r\n       Fresh proc-macro2 v1.0.5\r\n       Fresh quote v1.0.2\r\n       Fresh syn v1.0.5\r\n       Fresh async-trait v0.1.15\r\n    Checking bug v0.1.0 (/home/gymmasssorla/bug)\r\n     Running `rustc --edition=2018 --crate-name bug src/main.rs --color always --crate-type bin --emit=dep-info,metadata -C debuginfo=2 -C metadata=8e79409b6a7339ca -C extra-filename=-8e79409b6a7339ca --out-dir /home/gymmasssorla/bug/target/debug/deps -C incremental=/home/gymmasssorla/bug/target/debug/incremental -L dependency=/home/gymmasssorla/bug/target/debug/deps --extern async_trait=/home/gymmasssorla/bug/target/debug/deps/libasync_trait-447b246b76a3f45f.so`\r\nerror[E0223]: ambiguous associated type\r\n  --> src/main.rs:23:29\r\n   |\r\n23 |     async fn call(&self) -> Self::Output {\r\n   |                             ^^^^^^^^^^^^ help: use fully-qualified syntax: `<MyStruct as Trait>::Output`\r\n\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', src/libcore/option.rs:378:21\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.37/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.37/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:77\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:61\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1028\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1412\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:65\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:50\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:189\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:206\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:473\r\n  12: std::panicking::continue_panic_fmt\r\n             at src/libstd/panicking.rs:376\r\n  13: rust_begin_unwind\r\n             at src/libstd/panicking.rs:303\r\n  14: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:84\r\n  15: core::panicking::panic\r\n             at src/libcore/panicking.rs:49\r\n  16: rustc_typeck::check::closure::<impl rustc_typeck::check::FnCtxt>::supplied_sig_of_closure\r\n  17: rustc_typeck::check::closure::<impl rustc_typeck::check::FnCtxt>::check_expr_closure\r\n  18: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  19: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  20: rustc_typeck::check::FnCtxt::check_argument_types\r\n  21: rustc_typeck::check::callee::<impl rustc_typeck::check::FnCtxt>::confirm_builtin_call\r\n  22: rustc_typeck::check::callee::<impl rustc_typeck::check::FnCtxt>::check_call\r\n  23: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  24: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  25: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_return_expr\r\n  26: rustc_typeck::check::check_fn\r\n  27: rustc::ty::context::GlobalCtxt::enter_local\r\n  28: rustc_typeck::check::typeck_tables_of\r\n  29: rustc::ty::query::__query_compute::typeck_tables_of\r\n  30: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_tables_of>::compute\r\n  31: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  32: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  33: rustc::ty::query::__query_compute::typeck_tables_of\r\n  34: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_tables_of>::compute\r\n  35: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  36: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  37: rustc_typeck::collect::checked_type_of\r\n  38: rustc_typeck::collect::type_of\r\n  39: rustc::ty::query::__query_compute::type_of\r\n  40: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::type_of>::compute\r\n  41: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  42: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  43: rustc::hir::intravisit::walk_expr\r\n  44: rustc::hir::intravisit::Visitor::visit_fn\r\n  45: rustc::hir::intravisit::walk_impl_item\r\n  46: rustc::hir::map::Map::visit_item_likes_in_module\r\n  47: rustc_typeck::collect::collect_mod_item_types\r\n  48: rustc::ty::query::__query_compute::collect_mod_item_types\r\n  49: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::collect_mod_item_types>::compute\r\n  50: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  51: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  52: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::ensure_query\r\n  53: rustc_typeck::check_crate::{{closure}}::{{closure}}\r\n  54: rustc::util::common::time\r\n  55: rustc_typeck::check_crate\r\n  56: rustc_interface::passes::analysis\r\n  57: rustc::ty::query::__query_compute::analysis\r\n  58: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  59: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  60: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  61: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  62: rustc_interface::passes::BoxedGlobalCtxt::enter\r\n  63: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  64: std::thread::local::LocalKey<T>::with\r\n  65: scoped_tls::ScopedKey<T>::set\r\n  66: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.40.0-nightly (1721c9685 2019-10-12) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck_tables_of] processing `MyStruct::call`\r\n#1 [typeck_tables_of] processing `MyStruct::call::{{closure}}#0`\r\n#2 [type_of] processing `MyStruct::call::{{closure}}#0`\r\n#3 [collect_mod_item_types] collecting item types in top-level module\r\n#4 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0223`.\r\nerror: could not compile `bug`.\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --edition=2018 --crate-name bug src/main.rs --color always --crate-type bin --emit=dep-info,metadata -C debuginfo=2 -C metadata=8e79409b6a7339ca -C extra-filename=-8e79409b6a7339ca --out-dir /home/gymmasssorla/bug/target/debug/deps -C incremental=/home/gymmasssorla/bug/target/debug/incremental -L dependency=/home/gymmasssorla/bug/target/debug/deps --extern async_trait=/home/gymmasssorla/bug/target/debug/deps/libasync_trait-447b246b76a3f45f.so` (exit code: 101)\r\n\r\n```\r\n\r\n</details>", "closed_by": {"login": "Hirrolot", "id": 40539574, "node_id": "MDQ6VXNlcjQwNTM5NTc0", "avatar_url": "https://avatars.githubusercontent.com/u/40539574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hirrolot", "html_url": "https://github.com/Hirrolot", "followers_url": "https://api.github.com/users/Hirrolot/followers", "following_url": "https://api.github.com/users/Hirrolot/following{/other_user}", "gists_url": "https://api.github.com/users/Hirrolot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hirrolot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hirrolot/subscriptions", "organizations_url": "https://api.github.com/users/Hirrolot/orgs", "repos_url": "https://api.github.com/users/Hirrolot/repos", "events_url": "https://api.github.com/users/Hirrolot/events{/privacy}", "received_events_url": "https://api.github.com/users/Hirrolot/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65500/timeline", "performed_via_github_app": null, "state_reason": "completed"}