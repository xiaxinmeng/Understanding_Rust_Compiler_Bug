{"url": "https://api.github.com/repos/rust-lang/rust/issues/97723", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/97723/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/97723/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/97723/events", "html_url": "https://github.com/rust-lang/rust/issues/97723", "id": 1260578121, "node_id": "I_kwDOAAsO6M5LIuVJ", "number": 97723, "title": "dtrace's ustack() function cannot unwind stack frames on FreeBSD since 1.56.0", "user": {"login": "asomers", "id": 129721, "node_id": "MDQ6VXNlcjEyOTcyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/129721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asomers", "html_url": "https://github.com/asomers", "followers_url": "https://api.github.com/users/asomers/followers", "following_url": "https://api.github.com/users/asomers/following{/other_user}", "gists_url": "https://api.github.com/users/asomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/asomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asomers/subscriptions", "organizations_url": "https://api.github.com/users/asomers/orgs", "repos_url": "https://api.github.com/users/asomers/repos", "events_url": "https://api.github.com/users/asomers/events{/privacy}", "received_events_url": "https://api.github.com/users/asomers/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 55302148, "node_id": "MDU6TGFiZWw1NTMwMjE0OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-x86_64", "name": "O-x86_64", "color": "6e6ec0", "default": false, "description": "Target: x64 processors"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 311417404, "node_id": "MDU6TGFiZWwzMTE0MTc0MDQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-freebsd", "name": "O-freebsd", "color": "6e6ec0", "default": false, "description": "Operating system: FreeBSD"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-06-04T02:27:09Z", "updated_at": "2022-06-08T16:15:44Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "One of the best ways to profile Rust code is with dtrace, as described at https://www.brendangregg.com/FlameGraphs/cpuflamegraphs.html#DTrace .  As recently as Rust 1.55.0 that worked fine.  But with Rust 1.56.0 the stack just isn't there.  Dtrace can only see a single Rust-level stack frame.  For example:\r\n\r\n### Code\r\nWith Rust 1.55.0\r\n```\r\n$ sudo dtrace -x ustackframes=100 -n 'profile-199 /pid == $target && arg1/ {@[ustack()] = count();}' -c \"target/debug/deps/test-bc98e078c2bbb61b\"\r\n    ....\r\n              libc.so.7`__je_malloc_mutex_prefork+0x124\r\n              libc.so.7`__je_arena_prefork7+0x73\r\n              libc.so.7`_malloc_prefork+0x15b\r\n              libthr.so.3`0x392e4a8c4686\r\n              libthr.so.3`_fork+0x18\r\n              test-dad15ed382b075cf`nix::unistd::fork::h358225d652a86eab+0xe\r\n              test-dad15ed382b075cf`test::test_unistd::test_fork_and_waitpid::hb93c7cdf2b79d680+0x36\r\n              test-dad15ed382b075cf`test::test_unistd::test_fork_and_waitpid::_$u7b$$u7b$closure$u7d$$u7d$::h329a121974ff9291+0x11\r\n              test-dad15ed382b075cf`core::ops::function::FnOnce::call_once::h2261827bcba63036+0x11\r\n              test-dad15ed382b075cf`test::__rust_begin_short_backtrace::hefb7644d11da2ff9+0xa\r\n              test-dad15ed382b075cf`test::run_test::run_test_inner::_$u7b$$u7b$closure$u7d$$u7d$::hdaa0fb71aac8d97e+0x2f3\r\n              test-dad15ed382b075cf`std::sys_common::backtrace::__rust_begin_short_backtrace::h8bcc057a546c1087+0xce\r\n              test-dad15ed382b075cf`core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::hf7d978d08be459d0+0x6a\r\n              test-dad15ed382b075cf`std::sys::unix::thread::Thread::new::thread_start::h6b52ca0eca213387+0x2b\r\n              libthr.so.3`0x392e4a8c3a7a\r\n    ...\r\n```\r\n\r\nWith Rust 1.56.0\r\n```\r\n$ sudo dtrace -x ustackframes=100 -n 'profile-199 /pid == $target && arg1/ {@[ustack()] = count();}' -c \"target/debug/deps/test-bc98e078c2bbb61b\"\r\n    ...\r\n              libc.so.7`__je_malloc_mutex_prefork+0x124\r\n              libc.so.7`__je_arena_prefork7+0x73\r\n              libc.so.7`_malloc_prefork+0x15b\r\n              libthr.so.3`0x1106cebc6686\r\n              libthr.so.3`_fork+0x18\r\n              test-b377ad62cc9e0624`nix::unistd::fork::hbf1ed55b658aa870+0xa\r\n              0x8\r\n              0xcccccccccccccccc\r\n    ...\r\n```\r\n\r\n### Version it worked on\r\n\r\nIt most recently worked on: Rust 1.55.0\r\n\r\n### Version with regression\r\n\r\n```\r\nrustc 1.56.0 (09c42c458 2021-10-18)\r\n```\r\n\r\n### Workaround\r\nThe old behavior can be restored by compiling with `RUSTFLAGS=\"-C force-frame-pointers\"`.  This flag was added by https://github.com/rust-lang/rust/issues/48785 , but that was a long time ago.  There is nothing in the 1.56.0 release notes, nor any recent commit messages, that mention anything about frame pointers.  Was this change therefore accidental?  Or could it have been a by product of switching to LLVM 13?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/97723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/97723/timeline", "performed_via_github_app": null, "state_reason": null}