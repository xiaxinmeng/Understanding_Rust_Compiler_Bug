{"url": "https://api.github.com/repos/rust-lang/rust/issues/56423", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56423/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56423/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56423/events", "html_url": "https://github.com/rust-lang/rust/issues/56423", "id": 386510890, "node_id": "MDU6SXNzdWUzODY1MTA4OTA=", "number": 56423, "title": "Unhelpful error message when multiple lifetimes have the same name", "user": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-02T00:02:05Z", "updated_at": "2021-10-04T15:46:23Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I was just looking for some lifetime errors for a project, and I came across the following example:\r\n\r\nhttps://stackoverflow.com/questions/24847331/rust-lifetime-error-expected-concrete-lifetime-but-found-bound-lifetime\r\n\r\nThe solution in that thread is correct, but the error message is somewhat unhelpful with today's stable and nightly compilers:\r\n\r\n```\r\nerror[E0308]: method not compatible with trait\r\n  --> src/l3.rs:19:5\r\n   |\r\n19 |     fn to_c(&self, r: &'a Ref) -> Container<'a> {\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ lifetime mismatch\r\n   |\r\n   = note: expected type `fn(&l3::ContainerB<'a>, &'a l3::Ref) -> l3::Container<'a>`\r\n              found type `fn(&l3::ContainerB<'a>, &'a l3::Ref) -> l3::Container<'a>`\r\nnote: the lifetime 'a as defined on the method body at 19:5...\r\n  --> src/l3.rs:19:5\r\n   |\r\n19 |     fn to_c(&self, r: &'a Ref) -> Container<'a> {\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...does not necessarily outlive the lifetime 'a as defined on the impl at 17:6\r\n  --> src/l3.rs:17:6\r\n   |\r\n17 | impl<'a> ToC for ContainerB<'a> {\r\n   |      ^^\r\n\r\nerror[E0308]: method not compatible with trait\r\n  --> src/l3.rs:19:5\r\n   |\r\n19 |     fn to_c(&self, r: &'a Ref) -> Container<'a> {\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ lifetime mismatch\r\n   |\r\n   = note: expected type `fn(&l3::ContainerB<'a>, &'a l3::Ref) -> l3::Container<'a>`\r\n              found type `fn(&l3::ContainerB<'a>, &'a l3::Ref) -> l3::Container<'a>`\r\nnote: the lifetime 'a as defined on the impl at 17:6...\r\n  --> src/l3.rs:17:6\r\n   |\r\n17 | impl<'a> ToC for ContainerB<'a> {\r\n   |      ^^\r\nnote: ...does not necessarily outlive the lifetime 'a as defined on the method body at 19:5\r\n  --> src/l3.rs:19:5\r\n   |\r\n19 |     fn to_c(&self, r: &'a Ref) -> Container<'a> {\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to 2 previous errors\r\n```\r\n\r\nBasically the problem is that there are two lifetimes called `'a` and the \"expected\" and \"found\" types use different `'a`s.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56423/reactions", "total_count": 3, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 3, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56423/timeline", "performed_via_github_app": null, "state_reason": null}