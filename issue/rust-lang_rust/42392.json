{"url": "https://api.github.com/repos/rust-lang/rust/issues/42392", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42392/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42392/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42392/events", "html_url": "https://github.com/rust-lang/rust/issues/42392", "id": 233291738, "node_id": "MDU6SXNzdWUyMzMyOTE3Mzg=", "number": 42392, "title": "Could we clarify type error messages that involve traits + closures?", "user": {"login": "Yoric", "id": 10190, "node_id": "MDQ6VXNlcjEwMTkw", "avatar_url": "https://avatars.githubusercontent.com/u/10190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yoric", "html_url": "https://github.com/Yoric", "followers_url": "https://api.github.com/users/Yoric/followers", "following_url": "https://api.github.com/users/Yoric/following{/other_user}", "gists_url": "https://api.github.com/users/Yoric/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yoric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yoric/subscriptions", "organizations_url": "https://api.github.com/users/Yoric/orgs", "repos_url": "https://api.github.com/users/Yoric/repos", "events_url": "https://api.github.com/users/Yoric/events{/privacy}", "received_events_url": "https://api.github.com/users/Yoric/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-02T20:31:47Z", "updated_at": "2023-06-08T09:04:39Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After a typo, I recently received the following error message:\r\n\r\n```\r\nerror[E0277]: the trait bound `bintree::simple::BuilderError: std::convert::From<[closure@src/bintree/simple.rs:244:24: 244:51]>` is not satisfied\r\n   --> src/bintree/simple.rs:243:24\r\n    |\r\n243 |               let kind = node.kind()\r\n    |  ________________________^\r\n244 | |                 .ok_or(|| BuilderError::MissingTag)?;\r\n    | |____________________________________________________^ the trait `std::convert::From<[closure@src/bintree/simple.rs:244:24: 244:51]>` is not implemented for `bintree::simple::BuilderError`\r\n    |\r\n    = note: required by `std::convert::From::from`\r\n```\r\n\r\nThe problem was that I used `ok_or` instead of `ok_or_else`. What I'd like to have seen (and what would have saved me a few minutes) is an additional line suggesting something like: \u00ab This operation does not work with a closure. \u00bb\r\n\r\nCould we perhaps detect that the scope contains no implementation of `From<T>` where `T` is a closure? This could, of course, be extended to other traits, but I suspect that it is worse for `Result<>`, since the call to `from` is not visible in the syntax.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42392/timeline", "performed_via_github_app": null, "state_reason": null}