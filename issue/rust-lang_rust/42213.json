{"url": "https://api.github.com/repos/rust-lang/rust/issues/42213", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42213/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42213/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42213/events", "html_url": "https://github.com/rust-lang/rust/issues/42213", "id": 231218295, "node_id": "MDU6SXNzdWUyMzEyMTgyOTU=", "number": 42213, "title": "rustc --pretty=expanded outputs invalid syntax for #[derive(RustcDecodable)]", "user": {"login": "eqrion", "id": 4984292, "node_id": "MDQ6VXNlcjQ5ODQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/4984292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eqrion", "html_url": "https://github.com/eqrion", "followers_url": "https://api.github.com/users/eqrion/followers", "following_url": "https://api.github.com/users/eqrion/following{/other_user}", "gists_url": "https://api.github.com/users/eqrion/gists{/gist_id}", "starred_url": "https://api.github.com/users/eqrion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eqrion/subscriptions", "organizations_url": "https://api.github.com/users/eqrion/orgs", "repos_url": "https://api.github.com/users/eqrion/repos", "events_url": "https://api.github.com/users/eqrion/events{/privacy}", "received_events_url": "https://api.github.com/users/eqrion/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108435, "node_id": "MDU6TGFiZWwxMDg0MzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-pretty", "name": "A-pretty", "color": "f7e101", "default": false, "description": "Area: Pretty printing."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-25T01:50:26Z", "updated_at": "2018-03-27T09:36:24Z", "closed_at": "2018-03-27T09:36:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Run\r\n1. `cargo rustc -- -Z unstable-options --pretty=expanded > lib-expanded.rs`\r\n2. `rustc -Z parse-only lib-expanded.rs`\r\n\r\n### With\r\n```rust\r\n// src/lib.rs\r\nextern crate rustc_serialize;\r\n\r\n#[derive(RustcDecodable, RustcEncodable)]\r\nstruct Foo;\r\n```\r\n```\r\n$ rustc --version\r\nrustc 1.19.0-nightly (5b13bff52 2017-05-23)\r\n```\r\n\r\n### Results\r\n```\r\nerror: expected `{`, found `::`\r\n  --> src/lib-expanded.rs:16:39\r\n   |\r\n16 |                             |_d| -> _ ::std::result::Result::Ok(Foo))\r\n   |                                       ^^\r\n\r\nerror: expected one of `.`, `;`, `?`, `}`, or an operator, found `::`\r\n  --> src/lib-expanded.rs:16:39\r\n   |\r\n16 |                             |_d| -> _ ::std::result::Result::Ok(Foo))\r\n   |                                      -^^ unexpected token\r\n   |                                      |\r\n   |                                      expected one of `.`, `;`, `?`, `}`, or an operator here\r\n\r\nerror: aborting due to 2 previous errors\r\n```\r\n\r\nlib-expanded.rs:\r\n```rust\r\n#![feature(prelude_import)]\r\n#![no_std]\r\n#[prelude_import]\r\nuse std::prelude::v1::*;\r\n#[macro_use]\r\nextern crate std as std;\r\nextern crate rustc_serialize;\r\n\r\nstruct Foo;\r\n#[automatically_derived]\r\n#[allow(unused_qualifications)]\r\nimpl ::rustc_serialize::Decodable for Foo {\r\n    fn decode<__D: ::rustc_serialize::Decoder>(__arg_0: &mut __D)\r\n     -> ::std::result::Result<Foo, __D::Error> {\r\n        __arg_0.read_struct(\"Foo\", 0usize,\r\n                            |_d| -> _ ::std::result::Result::Ok(Foo))\r\n    }\r\n}\r\n#[automatically_derived]\r\n#[allow(unused_qualifications)]\r\nimpl ::rustc_serialize::Encodable for Foo {\r\n    fn encode<__S: ::rustc_serialize::Encoder>(&self, __arg_0: &mut __S)\r\n     -> ::std::result::Result<(), __S::Error> {\r\n        match *self {\r\n            Foo =>\r\n            __arg_0.emit_struct(\"Foo\", 0usize,\r\n                                |_e| -> _\r\n                                    { return ::std::result::Result::Ok(()) }),\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Expected\r\n\r\n`rustc lib-expanded.rs` to succeed. Pretty printing should output valid rust syntax.\r\n\r\nNot sure if this is specific to `rustc_serialize`, I haven't tried to create a simpler testcase.\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42213/timeline", "performed_via_github_app": null, "state_reason": "completed"}