{"url": "https://api.github.com/repos/rust-lang/rust/issues/40255", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40255/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40255/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40255/events", "html_url": "https://github.com/rust-lang/rust/issues/40255", "id": 211868777, "node_id": "MDU6SXNzdWUyMTE4Njg3Nzc=", "number": 40255, "title": "Associated types of a subtrait must always be explicit even when a supertrait implementation implies the subtrait with specific associated types", "user": {"login": "jimmycuadra", "id": 122457, "node_id": "MDQ6VXNlcjEyMjQ1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/122457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimmycuadra", "html_url": "https://github.com/jimmycuadra", "followers_url": "https://api.github.com/users/jimmycuadra/followers", "following_url": "https://api.github.com/users/jimmycuadra/following{/other_user}", "gists_url": "https://api.github.com/users/jimmycuadra/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimmycuadra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimmycuadra/subscriptions", "organizations_url": "https://api.github.com/users/jimmycuadra/orgs", "repos_url": "https://api.github.com/users/jimmycuadra/repos", "events_url": "https://api.github.com/users/jimmycuadra/events{/privacy}", "received_events_url": "https://api.github.com/users/jimmycuadra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-04T09:37:15Z", "updated_at": "2017-03-05T00:41:05Z", "closed_at": "2017-03-05T00:41:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Imagine the following scenario:\r\n\r\nThere is a trait `A` that has many associated types. There are many functions in a program that take a `Box<A>` only with specific associated types. To avoid having to write out all this boilerplate (including importing all the associated types), I want to create an alias for `A` with these specific associated types. A type alias cannot work, because you can't do `impl Foo for Bar` where `Foo` is a type alias. Let's try subtraits:\r\n\r\n``` rust\r\ntrait A {\r\n    type Assoc;\r\n    // Pretend there are several more associated types here to make uses of `Box<A>` inconvenient.\r\n}\r\n\r\ntrait B: A<Assoc=()> {}\r\n\r\nfn takes_b(b: Box<B>) {}\r\n```\r\n\r\nThis results in:\r\n\r\n```\r\nerror[E0191]: the value of the associated type `Assoc` (from the trait `A`) must be specified\r\n --> src/lib.rs:8:19\r\n  |\r\n8 | fn takes_b(b: Box<B>) {}\r\n  |                   ^ missing associated type `Assoc` value\r\n```\r\n\r\nThis seems like it should work. Note that declaring `B` this way is valid, as the program compiles if `takes_b` is commented out.", "closed_by": {"login": "jimmycuadra", "id": 122457, "node_id": "MDQ6VXNlcjEyMjQ1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/122457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimmycuadra", "html_url": "https://github.com/jimmycuadra", "followers_url": "https://api.github.com/users/jimmycuadra/followers", "following_url": "https://api.github.com/users/jimmycuadra/following{/other_user}", "gists_url": "https://api.github.com/users/jimmycuadra/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimmycuadra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimmycuadra/subscriptions", "organizations_url": "https://api.github.com/users/jimmycuadra/orgs", "repos_url": "https://api.github.com/users/jimmycuadra/repos", "events_url": "https://api.github.com/users/jimmycuadra/events{/privacy}", "received_events_url": "https://api.github.com/users/jimmycuadra/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40255/timeline", "performed_via_github_app": null, "state_reason": "completed"}