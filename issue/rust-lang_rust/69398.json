{"url": "https://api.github.com/repos/rust-lang/rust/issues/69398", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69398/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69398/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69398/events", "html_url": "https://github.com/rust-lang/rust/issues/69398", "id": 569503961, "node_id": "MDU6SXNzdWU1Njk1MDM5NjE=", "number": 69398, "title": "ICE issue-36839.rs could not fully normalize `<() as Foo>::Bar`  with --emit=mir", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-02-23T14:31:43Z", "updated_at": "2021-12-01T16:36:10Z", "closed_at": "2021-12-01T16:36:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "\r\n\r\n### Code\r\nsrc/test/ui/issues/issue-36839.rs\r\n```rust\r\n// check-pass\r\n\r\npub trait Foo {\r\n    type Bar;\r\n}\r\n\r\npub trait Broken {\r\n    type Assoc;\r\n    fn broken(&self) where Self::Assoc: Foo;\r\n}\r\n\r\nimpl<T> Broken for T {\r\n    type Assoc = ();\r\n    fn broken(&self) where Self::Assoc: Foo {\r\n        let _x: <Self::Assoc as Foo>::Bar;\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let _m: &dyn Broken<Assoc=()> = &();\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.43.0-nightly (436494b8f 2020-02-22)\r\nbinary: rustc\r\ncommit-hash: 436494b8f8008b600d64b3951f63c2bb0ea81673\r\ncommit-date: 2020-02-22\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.43.0-nightly\r\nLLVM version: 9.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: src/librustc_traits/normalize_erasing_regions.rs:35: could not fully normalize `<() as Foo>::Bar`\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:881:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.0-nightly (436494b8f 2020-02-22) running on x86_64-unknown-linux-gnu\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: src/librustc_traits/normalize_erasing_regions.rs:35: could not fully normalize `<() as Foo>::Bar`\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:881:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1052\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1428\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:474\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_opt\r\n  18: rustc::util::bug::opt_span_bug_fmt\r\n  19: rustc::util::bug::bug_fmt\r\n  20: rustc::ty::context::GlobalCtxt::enter_local\r\n  21: rustc_traits::normalize_erasing_regions::normalize_ty_after_erasing_regions\r\n  22: rustc::ty::query::__query_compute::normalize_ty_after_erasing_regions\r\n  23: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::normalize_ty_after_erasing_regions>::compute\r\n  24: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  25: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  26: <rustc::ty::normalize_erasing_regions::NormalizeAfterErasingRegionsFolder as rustc::ty::fold::TypeFolder>::fold_ty\r\n  27: rustc::ty::util::<impl rustc::ty::TyS>::needs_drop\r\n  28: rustc_mir::dataflow::drop_flag_effects::on_all_children_bits::on_all_children_bits\r\n  29: <rustc_mir::transform::elaborate_drops::ElaborateDrops as rustc_mir::transform::MirPass>::run_pass\r\n  30: rustc_mir::transform::run_passes\r\n  31: rustc_mir::transform::run_optimization_passes\r\n  32: rustc_mir::transform::optimized_mir\r\n  33: rustc::ty::query::__query_compute::optimized_mir\r\n  34: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::optimized_mir>::compute\r\n  35: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  36: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  37: rustc_mir::util::pretty::write_mir_pretty\r\n  38: rustc_mir::transform::dump_mir::emit_mir\r\n  39: rustc_interface::passes::start_codegen\r\n  40: rustc::ty::context::tls::enter_global\r\n  41: rustc_interface::queries::Queries::ongoing_codegen\r\n  42: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.0-nightly (436494b8f 2020-02-22) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [normalize_ty_after_erasing_regions] normalizing `ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: All, def_id: None }, value: <() as Foo>::Bar }`\r\n#1 [optimized_mir] processing `<T as Broken>::broken`\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69398/timeline", "performed_via_github_app": null, "state_reason": "completed"}