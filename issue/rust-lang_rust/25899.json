{"url": "https://api.github.com/repos/rust-lang/rust/issues/25899", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/25899/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/25899/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/25899/events", "html_url": "https://github.com/rust-lang/rust/issues/25899", "id": 82787936, "node_id": "MDU6SXNzdWU4Mjc4NzkzNg==", "number": 25899, "title": "Implicit re-borrows of `&mut` references where a move would be expected", "user": {"login": "elinorbgr", "id": 3009227, "node_id": "MDQ6VXNlcjMwMDkyMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/3009227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elinorbgr", "html_url": "https://github.com/elinorbgr", "followers_url": "https://api.github.com/users/elinorbgr/followers", "following_url": "https://api.github.com/users/elinorbgr/following{/other_user}", "gists_url": "https://api.github.com/users/elinorbgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/elinorbgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elinorbgr/subscriptions", "organizations_url": "https://api.github.com/users/elinorbgr/orgs", "repos_url": "https://api.github.com/users/elinorbgr/repos", "events_url": "https://api.github.com/users/elinorbgr/events{/privacy}", "received_events_url": "https://api.github.com/users/elinorbgr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-30T11:30:07Z", "updated_at": "2016-01-07T18:49:39Z", "closed_at": "2016-01-07T18:49:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider this snippet of code:\n\n``` rust\nfn main() {\n    let a: &mut i32 = &mut 0;\n    { let b = a; }\n    let c = a;\n}\n```\n\nIt properly fails to compile, as `a` is moved into `b`.\n\nHowever this one compiles fine:\n\n``` rust\nfn main() {\n    let a: &mut i32 = &mut 0;\n    { let b: &mut i32 = a; }\n    let c = a;\n}\n```\n\nAdding a type annotation to `b` implicitly changed the move of `a` into a re-borrow. This behavior actually makes sense: if `b` was annotated `&i32`, a move would have not been possible, and a re-borrow would have been mandatory.\n\nIt is pretty harmless and does not pose any safety issue (actually I think having a \"always re-borrow\" policy would still be safe), but is still an implicit behavior that is not documented (at least I didn't find any documentation about it).\n\n(Comes from a SO question: http://stackoverflow.com/q/30535529/2536143 )\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/25899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/25899/timeline", "performed_via_github_app": null, "state_reason": "completed"}