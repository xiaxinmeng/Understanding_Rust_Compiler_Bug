{"url": "https://api.github.com/repos/rust-lang/rust/issues/45732", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45732/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45732/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45732/events", "html_url": "https://github.com/rust-lang/rust/issues/45732", "id": 270885006, "node_id": "MDU6SXNzdWUyNzA4ODUwMDY=", "number": 45732, "title": "Weirdness with macros trying to redefine each other", "user": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-03T05:59:38Z", "updated_at": "2017-11-04T18:38:23Z", "closed_at": "2017-11-04T18:38:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On IRC we were trying to make a macro that turns itself into a no-op after the first call. I think it's not actually possible, but I was confused by the compiler's behavior.\r\n\r\nA macro that tries to redefine itself (or another already existing macro) is allowed to do so once, but fails with an error the second time.\r\n\r\n```rust\r\nmacro_rules! once {\r\n    () => {\r\n        macro_rules! once { () => {} }\r\n    }\r\n}\r\n\r\nonce!(); // OK\r\nonce!(); // ERROR\r\n```\r\n\r\n```\r\nerror: `once` is already in scope\r\n --> src/main.rs:3:9\r\n  |\r\n3 |         macro_rules! once { () => {} }\r\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n...\r\n7 | once!();\r\n  | -------- in this macro invocation\r\n  |\r\n  = note: macro-expanded `macro_rules!`s may not shadow existing macros (see RFC 1560)\r\n```\r\n\r\nThe error points to the first invocation. However, there is no error if I remove the second invocation!\r\n\r\nAlso, why can't I do this? :) The error refers us to [RFC 1560](https://rust-lang.github.io/rfcs/1560-name-resolution.html) which doesn't talk about macros.\r\n\r\ncc @jseyfried ", "closed_by": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45732/timeline", "performed_via_github_app": null, "state_reason": "completed"}