{"url": "https://api.github.com/repos/rust-lang/rust/issues/43946", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43946/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43946/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43946/events", "html_url": "https://github.com/rust-lang/rust/issues/43946", "id": 251006247, "node_id": "MDU6SXNzdWUyNTEwMDYyNDc=", "number": 43946, "title": "Implement `std::iter::Iterator` for arrays?", "user": {"login": "mqudsi", "id": 606923, "node_id": "MDQ6VXNlcjYwNjkyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mqudsi", "html_url": "https://github.com/mqudsi", "followers_url": "https://api.github.com/users/mqudsi/followers", "following_url": "https://api.github.com/users/mqudsi/following{/other_user}", "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions", "organizations_url": "https://api.github.com/users/mqudsi/orgs", "repos_url": "https://api.github.com/users/mqudsi/repos", "events_url": "https://api.github.com/users/mqudsi/events{/privacy}", "received_events_url": "https://api.github.com/users/mqudsi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-17T16:49:11Z", "updated_at": "2017-08-17T18:30:27Z", "closed_at": "2017-08-17T18:30:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is it possible to implement a zero-cost, safe, and doesn't-conflict-with-anything-else `std::iter::Iterator` for arrays, such that it is no longer required to called `.iter()` to get an iterator out of an array?\r\n\r\ne.g. is it possible to use\r\n\r\n```rust\r\nfor value in [\"foo\", \"bar\"] {\r\n   ....\r\n}\r\n```\r\n\r\ninstead of needing to manually add the `.iter()`:\r\n\r\n```rust\r\nfor value in [\"foo\", \"bar\"].iter() {\r\n    ....\r\n}\r\n```\r\n", "closed_by": {"login": "mqudsi", "id": 606923, "node_id": "MDQ6VXNlcjYwNjkyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mqudsi", "html_url": "https://github.com/mqudsi", "followers_url": "https://api.github.com/users/mqudsi/followers", "following_url": "https://api.github.com/users/mqudsi/following{/other_user}", "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions", "organizations_url": "https://api.github.com/users/mqudsi/orgs", "repos_url": "https://api.github.com/users/mqudsi/repos", "events_url": "https://api.github.com/users/mqudsi/events{/privacy}", "received_events_url": "https://api.github.com/users/mqudsi/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43946/timeline", "performed_via_github_app": null, "state_reason": "completed"}