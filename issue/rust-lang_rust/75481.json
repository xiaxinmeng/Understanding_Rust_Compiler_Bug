{"url": "https://api.github.com/repos/rust-lang/rust/issues/75481", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75481/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75481/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75481/events", "html_url": "https://github.com/rust-lang/rust/issues/75481", "id": 678346471, "node_id": "MDU6SXNzdWU2NzgzNDY0NzE=", "number": 75481, "title": "Constprop can create aggregates that won't get deaggregated anymore", "user": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1904923801, "node_id": "MDU6TGFiZWwxOTA0OTIzODAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-cranelift", "name": "A-cranelift", "color": "f7e101", "default": false, "description": "Things relevant to the [future] cranelift backend"}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-13T10:57:08Z", "updated_at": "2020-08-20T18:02:41Z", "closed_at": "2020-08-20T18:02:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Before #73656 the deaggregator ran after aggregates. Now it doesn't anymore, breaking cg_clif.\r\n\r\n```rust\r\nstatic mut NUM: i32 = 0;\r\n\r\nfn store_42() {\r\n    unsafe {\r\n        NUM = 6 * 7;\r\n    }\r\n}\r\n```\r\n\r\n```rust\r\n// WARNING: This output format is intended for human consumers only\r\n// and is subject to change without notice. Knock yourself out.\r\nfn store_42() -> () {\r\n    let mut _0: ();                      // return place in scope 0 at src/lib.rs:3:15: 3:15\r\n    let mut _1: (i32, bool);             // in scope 0 at src/lib.rs:5:15: 5:20\r\n    let mut _2: *mut i32;                // in scope 0 at src/lib.rs:5:9: 5:12\r\n    scope 1 {\r\n    }\r\n\r\n    bb0: {\r\n        _1 = (const 42_i32, const false); // scope 1 at src/lib.rs:5:15: 5:20\r\n                                         // ty::Const\r\n                                         // + ty: i32\r\n                                         // + val: Value(Scalar(0x0000002a))\r\n                                         // mir::Constant\r\n                                         // + span: src/lib.rs:5:15: 5:20\r\n                                         // + literal: Const { ty: i32, val: Value(Scalar(0x0000002a)) }\r\n                                         // ty::Const\r\n                                         // + ty: bool\r\n                                         // + val: Value(Scalar(0x00))\r\n                                         // mir::Constant\r\n                                         // + span: src/lib.rs:5:15: 5:20\r\n                                         // + literal: Const { ty: bool, val: Value(Scalar(0x00)) }\r\n        StorageLive(_2);                 // scope 1 at src/lib.rs:5:9: 5:12\r\n        _2 = const {alloc0: *mut i32};   // scope 1 at src/lib.rs:5:9: 5:12\r\n                                         // ty::Const\r\n                                         // + ty: *mut i32\r\n                                         // + val: Value(Scalar(alloc0))\r\n                                         // mir::Constant\r\n                                         // + span: src/lib.rs:5:9: 5:12\r\n                                         // + literal: Const { ty: *mut i32, val: Value(Scalar(alloc0)) }\r\n        (*_2) = move (_1.0: i32);        // scope 1 at src/lib.rs:5:9: 5:20\r\n        StorageDead(_2);                 // scope 1 at src/lib.rs:5:20: 5:21\r\n        _0 = const ();                   // scope 1 at src/lib.rs:4:5: 6:6\r\n                                         // ty::Const\r\n                                         // + ty: ()\r\n                                         // + val: Value(Scalar(<ZST>))\r\n                                         // mir::Constant\r\n                                         // + span: src/lib.rs:4:5: 6:6\r\n                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\r\n        return;                          // scope 0 at src/lib.rs:7:2: 7:2\r\n    }\r\n}\r\n\r\nalloc0 (static: NUM, size: 4, align: 4) {\r\n    00 00 00 00                                     \u2502 ....\r\n}\r\n\r\nstatic mut NUM: i32 = {\r\n    let mut _0: i32;                     // return place in scope 0 at src/lib.rs:1:17: 1:20\r\n\r\n    bb0: {\r\n        _0 = const 0_i32;                // scope 0 at src/lib.rs:1:23: 1:24\r\n                                         // ty::Const\r\n                                         // + ty: i32\r\n                                         // + val: Value(Scalar(0x00000000))\r\n                                         // mir::Constant\r\n                                         // + span: src/lib.rs:1:23: 1:24\r\n                                         // + literal: Const { ty: i32, val: Value(Scalar(0x00000000)) }\r\n        return;                          // scope 0 at src/lib.rs:1:1: 1:25\r\n    }\r\n}\r\n```\r\n\r\n@rustbot modify labels: +A-mir +A-mir-opt +A-cranelift +C-bug +T-compiler\r\n\r\ncc @oli-obk (PR author)", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75481/timeline", "performed_via_github_app": null, "state_reason": "completed"}