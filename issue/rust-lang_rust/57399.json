{"url": "https://api.github.com/repos/rust-lang/rust/issues/57399", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57399/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57399/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57399/events", "html_url": "https://github.com/rust-lang/rust/issues/57399", "id": 396473800, "node_id": "MDU6SXNzdWUzOTY0NzM4MDA=", "number": 57399, "title": "Returning Self in impl Trait does not resolve member types (+ Compiler Crash)", "user": {"login": "ISibboI", "id": 2361822, "node_id": "MDQ6VXNlcjIzNjE4MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/2361822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ISibboI", "html_url": "https://github.com/ISibboI", "followers_url": "https://api.github.com/users/ISibboI/followers", "following_url": "https://api.github.com/users/ISibboI/following{/other_user}", "gists_url": "https://api.github.com/users/ISibboI/gists{/gist_id}", "starred_url": "https://api.github.com/users/ISibboI/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ISibboI/subscriptions", "organizations_url": "https://api.github.com/users/ISibboI/orgs", "repos_url": "https://api.github.com/users/ISibboI/repos", "events_url": "https://api.github.com/users/ISibboI/events{/privacy}", "received_events_url": "https://api.github.com/users/ISibboI/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-07T12:46:21Z", "updated_at": "2019-10-12T10:05:33Z", "closed_at": "2019-10-12T10:05:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "A code sample demonstrating the problem:\r\n\r\n```\r\ntrait T {\r\n    type T;\r\n}\r\n\r\nimpl T for i32 {\r\n    type T = u32;\r\n}\r\n\r\nstruct S<A> {\r\n    a: A,\r\n}\r\n\r\n/*// Works\r\nimpl From<u32> for S<<i32 as T>::T> {\r\n    fn from(a: u32) -> S<<i32 as T>::T> {\r\n        S::<<i32 as T>::T> {a}\r\n    }\r\n}*/\r\n\r\n/*// Works\r\nimpl From<u32> for S<<i32 as T>::T> {\r\n    fn from(a: u32) -> Self {\r\n        S::<<i32 as T>::T> {a}\r\n    }\r\n}*/\r\n\r\n/*// Fails\r\nimpl From<u32> for S<<i32 as T>::T> {\r\n    fn from(a: u32) -> Self {\r\n        Self {a}\r\n    }\r\n}*/\r\n\r\n// Fails\r\nimpl From<u32> for S<<i32 as T>::T> {\r\n    fn from(a: u32) -> S<<i32 as T>::T> {\r\n        Self {a}\r\n    }\r\n}\r\n\r\nfn main() {\r\n}\r\n```\r\n[Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=2928e352133d80b14a80b74fe2f81091)\r\n\r\nThe error:\r\n```error[E0308]: mismatched types\r\n  --> src/main.rs:37:9\r\n   |\r\n36 |     fn from(a: u32) -> S<<i32 as T>::T> {\r\n   |                        ---------------- expected `S<u32>` because of return type\r\n37 |         Self {a}\r\n   |         ^^^^^^^^ expected u32, found associated type\r\n   |\r\n   = note: expected type `S<u32>`\r\n              found type `S<<i32 as T>::T>`\r\n```\r\n\r\nThe Observed behaviour occurs on stable 1.31.1.\r\nI would expect this to compile, as `Self` is just an alias for `S<<i32 as T>::T>` in this case.\r\n\r\n\r\nOn the current nightly (`nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.33.0-nightly (b92552d55 2019-01-06)`), using the same construction in a more complicated environment leads to a compiler crash:\r\n```error: internal compiler error: broken MIR in DefId(0/0:390 ~ proof_of_concept[a4c9]::graph[0]::td_cch[0]::{{impl}}[6]::from[0]) (_103 = graph::td_cch::TDCCH<<plf::PLFunctionBuilder as graph::WeightFunctionBuilder>::Weight, plf::PLFunctionBuilder> { source_nodes: move _104, first_in: move _105, first_out: move _106, target_nodes: move _107, out_to_in_edges: move _108, in_to_out_edges: move _109, weight_builders: move _110, weights: move _111 }): bad user type on rvalue (TypeOf(DefId(0/0:1848 ~ proof_of_concept[a4c9]::graph[0]::td_cch[0]::TDCCH[0]), UserSubsts { substs: [<plf::PLFunctionBuilder as graph::WeightFunctionBuilder>::Weight, plf::PLFunctionBuilder], user_self_ty: None }) = graph::td_cch::TDCCH<<plf::PLFunctionBuilder as graph::WeightFunctionBuilder>::Weight, plf::PLFunctionBuilder>): NoSolution\r\n   --> src/graph/td_cch/mod.rs:973:26\r\n    |\r\n973 |           let mut result = Self {\r\n    |  __________________________^\r\n974 | |             source_nodes,\r\n975 | |             first_in,\r\n976 | |             first_out,\r\n...   |\r\n982 | |             weights: functions,\r\n983 | |         };\r\n    | |_________^\r\n\r\nerror: internal compiler error: broken MIR in DefId(0/0:390 ~ proof_of_concept[a4c9]::graph[0]::td_cch[0]::{{impl}}[6]::from[0]) (_0 = move _103): bad assignment (graph::td_cch::TDCCH<plf::Point, plf::PLFunctionBuilder> = graph::td_cch::TDCCH<<plf::PLFunctionBuilder as graph::WeightFunctionBuilder>::Weight, plf::PLFunctionBuilder>): NoSolution\r\n   --> src/graph/td_cch/mod.rs:984:9\r\n    |\r\n984 |         result\r\n    |         ^^^^^^\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src/librustc_errors/lib.rs:324:17\r\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.33.0-nightly (b92552d55 2019-01-06) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental -C target-cpu=native --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `proof_of_concept`.\r\n```\r\n\r\nI cannot disclose the full code, but here are some samples I think are relevant:\r\nThe method around the crash:\r\n```\r\nimpl From<EdgeList<Point, ()>> for PLTDCCH {\r\n    fn from(edge_list: EdgeList<Point, ()>) -> Self {\r\n        let edges = edge_list.edges;\r\n        let functions = edge_list.weights;\r\n\r\n        let mut source_nodes = vec![0; edges.len()];\r\n        let mut first_in = vec![0; edge_list.node_count as usize + 2];\r\n        let mut first_out = vec![0; edge_list.node_count as usize + 1];\r\n        let mut target_nodes = Vec::with_capacity(edges.len());\r\n        let mut weight_builders = Vec::with_capacity(edges.len());\r\n\r\n        for edge in &edges {\r\n            first_in[edge.end as usize + 1] += 1;\r\n            first_out[edge.start as usize] += 1;\r\n            target_nodes.push(edge.end);\r\n            weight_builders.push(PLFunctionBuilder::new(edge.weight_start, edge.weight_end));\r\n        }\r\n\r\n        first_in.prefix_sum();\r\n        first_out.prefix_sum();\r\n\r\n        for edge in &edges {\r\n            let index = &mut first_in[edge.end as usize + 1];\r\n            source_nodes[*index as usize] = edge.start;\r\n            let weights = &functions[edge.weight_start as usize..edge.weight_end as usize];\r\n            *index += 1;\r\n        }\r\n\r\n        first_in.pop();\r\n\r\n        let mut result = Self {\r\n            source_nodes,\r\n            first_in,\r\n            first_out,\r\n            target_nodes,\r\n            out_to_in_edges: Vec::new(),\r\n            in_to_out_edges: Vec::new(),\r\n\r\n            weight_builders: weight_builders,\r\n            weights: functions,\r\n        };\r\n        result\r\n    }\r\n}\r\n```\r\n\r\nThe PLTDCCH type:\r\n```\r\n#[derive(Clone, PartialEq, Eq, Serialize, Deserialize)]\r\npub struct TDCCH<W, WFB> {\r\n    source_nodes: Vec<NodeId>,\r\n    first_in: Vec<EdgeId>,\r\n    first_out: Vec<EdgeId>,\r\n    target_nodes: Vec<NodeId>,\r\n    out_to_in_edges: Vec<EdgeId>,\r\n    in_to_out_edges: Vec<EdgeId>,\r\n\r\n    weight_builders: Vec<WFB>,\r\n    weights: Vec<W>,\r\n}\r\n\r\npub type PLTDCCH = TDCCH<<PLFunctionBuilder as WeightFunctionBuilder>::Weight, PLFunctionBuilder>;\r\n```\r\n\r\nThe WeightFunctionBuilder trait:\r\n```\r\npub trait WeightFunctionBuilder: Link<Self> + Merge<Self> + Clone + Serialize + for<'de> Deserialize<'de> {\r\n    type Weight: Clone + Debug;\r\n    // [...]\r\n}\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57399/timeline", "performed_via_github_app": null, "state_reason": "completed"}