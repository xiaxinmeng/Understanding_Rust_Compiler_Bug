{"url": "https://api.github.com/repos/rust-lang/rust/issues/45346", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45346/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45346/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45346/events", "html_url": "https://github.com/rust-lang/rust/issues/45346", "id": 266226186, "node_id": "MDU6SXNzdWUyNjYyMjYxODY=", "number": 45346, "title": "borrowck freaks out with patterns in closure args", "user": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 867483626, "node_id": "MDU6TGFiZWw4Njc0ODM2MjY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-fixed-by-NLL", "name": "NLL-fixed-by-NLL", "color": "f799ea", "default": false, "description": "Bugs fixed, but only when NLL is enabled."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-10-17T18:12:21Z", "updated_at": "2019-04-29T11:28:18Z", "closed_at": "2019-04-29T11:28:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following (valid) program fails to compile with a borrowck error.\r\n\r\n```rust\r\nfn main() {\r\n    struct Foo(String, u32);\r\n    \r\n    let input: Vec<Foo> = vec![];\r\n    let query: Vec<String> = vec![];\r\n    \r\n    let mut func = |&Foo(ref name, val)| {\r\n        for (idx, other_name) in query.iter().enumerate() {\r\n            if other_name == name { \r\n                return (idx, val) \r\n            }\r\n        }\r\n        unreachable!()\r\n    };\r\n    \r\n    for _ in 0..10 {\r\n        let _result: Vec<_> = input.iter().map(&mut func).collect();\r\n    }\r\n}\r\n```\r\n\r\n```\r\nerror[E0597]: borrowed value does not live long enough\r\n  --> src/main.rs:18:67\r\n   |\r\n8  |     let mut func = |&Foo(ref name, val)| {\r\n   |                          -------- borrow occurs here\r\n9  |         for (idx, other_name) in query.iter().enumerate() {\r\n10 |             if other_name == name { \r\n   |                                 - borrowed value needs to live until here\r\n...\r\n18 |         let _result: Vec<_> = input.iter().map(&mut func).collect();\r\n   |                                                                   ^ borrowed value dropped here while still borrowed\r\n```\r\n\r\nRemoving the pattern match from the closure arguments removes the problem (which doesn't make sense?):\r\n\r\n```rust\r\nfn main() {\r\n    struct Foo(String, u32);\r\n    \r\n    let input: Vec<Foo> = vec![];\r\n    let query: Vec<String> = vec![];\r\n    \r\n    let mut func = |input: &Foo| {\r\n        for (idx, other_name) in query.iter().enumerate() {\r\n            if other_name == &input.0 { \r\n                return (idx, input.1) \r\n            }\r\n        }\r\n        unreachable!()\r\n    };\r\n    \r\n    for _ in 0..10 {\r\n        let _result: Vec<_> = input.iter().map(&mut func).collect();\r\n    }\r\n}\r\n```\r\n\r\nRandom Notes: \r\n\r\n* Whether func is passed `&mut` or `&` doesn't matter. \r\n* Whether `for query.iter().enumerate() { ... }` or `query.iter().position(|| { ... })` is used doesn't matter.\r\n* Same on stable and nightly (playground versions)\r\n ", "closed_by": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45346/timeline", "performed_via_github_app": null, "state_reason": "completed"}