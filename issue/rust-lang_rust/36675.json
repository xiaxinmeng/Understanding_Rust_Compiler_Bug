{"url": "https://api.github.com/repos/rust-lang/rust/issues/36675", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/36675/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/36675/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/36675/events", "html_url": "https://github.com/rust-lang/rust/issues/36675", "id": 178940202, "node_id": "MDU6SXNzdWUxNzg5NDAyMDI=", "number": 36675, "title": "Impossible to remove #![must_use] from a value", "user": {"login": "alexchandel", "id": 637714, "node_id": "MDQ6VXNlcjYzNzcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/637714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexchandel", "html_url": "https://github.com/alexchandel", "followers_url": "https://api.github.com/users/alexchandel/followers", "following_url": "https://api.github.com/users/alexchandel/following{/other_user}", "gists_url": "https://api.github.com/users/alexchandel/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexchandel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexchandel/subscriptions", "organizations_url": "https://api.github.com/users/alexchandel/orgs", "repos_url": "https://api.github.com/users/alexchandel/repos", "events_url": "https://api.github.com/users/alexchandel/events{/privacy}", "received_events_url": "https://api.github.com/users/alexchandel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-09-23T18:13:37Z", "updated_at": "2020-03-28T18:18:35Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I want to write a macro wrapping something marked `#![must_use]` which **doesn't** spam the build output with \"unused_must_use\", but also doesn't destroy the result. I don't want to unwrap these values either, nor mark every single invocation with `#![allow(unused_must_use)]`, nor allow `unused_must_see` for the entire program (because with this macro's one exception, it is useful): I simply want to strip _this return value's_ compiler-spamming `must_use`.\n\nThis:\n\n``` rust\nmacro_rules! println_out(\n    ($($arg:tt)*) => ( {let _ = writeln!(&mut ::std::io::stdout(), $($arg)* )} )\n);\n```\n\ndoesn't work because the result is unavailable if I need to check it, which I do on occasion.\n\nEven this: fails to work:\n\n``` rust\nmacro_rules! println_err(\n    ($($arg:tt)*) => ( {\n        let _x = writeln!(&mut ::std::io::stderr(), $($arg)* );\n        _x.is_ok();\n        _x\n    } )\n);\n```\n\nbecause the final line can be unused in the calling context\n\n`stdout`/`stderr`/`write_ln!` are used as examples here, but I need to do this generically with certain things that spam `must_use`.\n\nThis isn't an unsafety issue. I simply shouldn't have to be bound ubiquitously by the particular compiler-warning policy preached by a module's author. I may (and do) have valid cases where `must_use` is semantically wrong.\n\nIt should not be impossible to do this.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/36675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/36675/timeline", "performed_via_github_app": null, "state_reason": null}