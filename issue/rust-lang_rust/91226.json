{"url": "https://api.github.com/repos/rust-lang/rust/issues/91226", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91226/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91226/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91226/events", "html_url": "https://github.com/rust-lang/rust/issues/91226", "id": 1063780352, "node_id": "I_kwDOAAsO6M4_aAAA", "number": 91226, "title": "`std::env::vars` and `std::env::args` should silently ignore non-UTF8 values", "user": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46311113, "node_id": "MDU6TGFiZWw0NjMxMTExMw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-unicode", "name": "A-unicode", "color": "f7e101", "default": false, "description": "Area: unicode related"}, {"id": 178802147, "node_id": "MDU6TGFiZWwxNzg4MDIxNDc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-needs-decision", "name": "I-needs-decision", "color": "e11d21", "default": false, "description": "Issues in need of decision."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2021-11-25T16:36:57Z", "updated_at": "2022-02-09T22:54:44Z", "closed_at": "2022-02-09T21:02:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[`std::env::vars`](https://doc.rust-lang.org/std/env/fn.vars.html) and [`std::env::args`](https://doc.rust-lang.org/std/env/fn.args.html) both panic when they encounter non-UTF8 values.\r\n\r\nThis is harmful for several reason:\r\n\r\n1. It means binaries can fail simply because someone else set an env var that ended up in the user's environment (e.g, [cargo](https://github.com/rust-lang/cargo/blob/58a961314437258065e23cb6316dfc121d96fb71/crates/credential/cargo-credential/src/lib.rs#L52))\r\n1. Disallowing through linters like `clippy` is not enough since clippy doesn't look at dependencies that are non-local. If one of them calls `std::env::vars`, it is possible to crash the end product without a lot of efforts.\r\n1. Environment variables and arguments are inherently system-specific, panicking at the slightest mistake or mistype seems like a bad idea when it could happen for any number of reasons.\r\n1. In managed computers, e.g. a Windows for an employee, users may not have the right to modify some env vars or any of them. If one is causing crashes because of this, it's not good.\r\n\r\nInstead of panicking (though it is better than unknown behavior), such cases should simply be ignored instead.\r\n\r\nExample to see what happens:\r\n\r\n<details><summary>Code</summary>\r\n\r\n```rust\r\n// src/main.rs\r\n\r\nuse std::{ffi::OsStr, os::unix::prelude::OsStrExt, process::Command};\r\n\r\nfn main() -> Result<(), Box<dyn std::error::Error>> {\r\n    let s = &\"\\u{2764}\".as_bytes()[..1];\r\n    let s = OsStr::from_bytes(s);\r\n\r\n    Command::new(\"cargo\")\r\n        .arg(\"login\")\r\n        .arg(s)\r\n        .spawn()?;\r\n\r\n    Ok(())\r\n}\r\n```\r\n\r\n```toml\r\n# Cargo.toml\r\n\r\n[package]\r\nname = \"reproducer\"\r\nversion = \"0.1.0\"\r\nedition = \"2021\"\r\nlicense = \"MIT\"\r\ndescription = \"welp, crashed the thing\"\r\ndocumentation = \"https://google.com\"\r\nhomepage = \"https://google.com\"\r\nrepository = \"https://google.com\"\r\n```\r\n\r\n</details>\r\n\r\nResult:\r\n\r\n```\r\nthread 'main' panicked at 'unexpected invalid UTF-8 code point', /cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs:118:40                                                          \r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n```\r\n\r\n@rustbot label T-libs T-libs-api", "closed_by": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91226/reactions", "total_count": 2, "+1": 1, "-1": 1, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91226/timeline", "performed_via_github_app": null, "state_reason": "completed"}