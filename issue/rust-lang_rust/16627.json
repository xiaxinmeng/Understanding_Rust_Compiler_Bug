{"url": "https://api.github.com/repos/rust-lang/rust/issues/16627", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16627/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16627/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16627/events", "html_url": "https://github.com/rust-lang/rust/issues/16627", "id": 40701570, "node_id": "MDU6SXNzdWU0MDcwMTU3MA==", "number": 16627, "title": "Lifetime of reference taken for parameter vs lifetime of function resolution", "user": {"login": "serpent", "id": 63511, "node_id": "MDQ6VXNlcjYzNTEx", "avatar_url": "https://avatars.githubusercontent.com/u/63511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/serpent", "html_url": "https://github.com/serpent", "followers_url": "https://api.github.com/users/serpent/followers", "following_url": "https://api.github.com/users/serpent/following{/other_user}", "gists_url": "https://api.github.com/users/serpent/gists{/gist_id}", "starred_url": "https://api.github.com/users/serpent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/serpent/subscriptions", "organizations_url": "https://api.github.com/users/serpent/orgs", "repos_url": "https://api.github.com/users/serpent/repos", "events_url": "https://api.github.com/users/serpent/events{/privacy}", "received_events_url": "https://api.github.com/users/serpent/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-20T14:05:11Z", "updated_at": "2014-08-20T14:39:54Z", "closed_at": "2014-08-20T14:39:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "In an example like\n\n```\nstruct Foo\n{\n  n: u8\n}\n\nimpl Foo {\n  fn get(&self) -> u8 { self.n }\n  fn set(&mut self, n: u8) { self.n = n }\n}\n\nfn main()\n{\n  let mut f = Foo { n : 0 };\n  f.set(f.get() + 1);\n}\n```\n\none can't get and set in the same function call. (If the f.get() is placed in a temporary variable, then of course this works, but this is such a common idiom that I would think Rust should avoid requiring that).\n\nI wonder if this could be improved? It seems like, if the borrow of the f.get() happens first, before the f.set, then it would be possible.\n", "closed_by": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16627/timeline", "performed_via_github_app": null, "state_reason": "completed"}