{"url": "https://api.github.com/repos/rust-lang/rust/issues/53977", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53977/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53977/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53977/events", "html_url": "https://github.com/rust-lang/rust/issues/53977", "id": 357429596, "node_id": "MDU6SXNzdWUzNTc0Mjk1OTY=", "number": 53977, "title": "Do not apply `#[macro_use]` to implicitly injected `extern crate std;`, use standard library prelude instead", "user": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-09-05T22:39:38Z", "updated_at": "2020-03-14T09:07:56Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Macros like `vec` or `println` are currently automatically available to user code through injected standard library\r\n```\r\n#[macro_use]\r\nextern crate std;\r\n```\r\n`#[macro_use]` puts all the macro names into macro prelude, so they are available in inner modules without additional imports.\r\n\r\nIt would be good to avoid this, especially given that `#[macro_use]` is going to be gradually deprecated.\r\nWe have analogous way to put things into prelude for non-macro namespaces - standard library prelude `std::prelude::v1`, all stable library macros can be reexported through it instead of `#[macro_use]` in backward-compatible way.\r\nUndesirable unstable macros like `select` can be removed from prelude in the process.\r\n\r\nThe only issue is that several imports for several macros (`env`, `vec`, `panic`) would also import corresponding modules from the standard library (`std::env`, `std::vec`, `std::panic`) and put them into prelude. This is certainly not desirable.\r\n\r\nThe solution is to come up with some way for a `use` item to import the name only in the single selected namespace, something like\r\n```rust\r\nuse a::b in type;\r\nuse a::b in macro;\r\nuse a::b in value;\r\n```\r\n\r\nAlternatively, this can be done with [hacks](https://github.com/rust-lang/rust/issues/36837) for cross-crate scenarios (stdlib prelude is indeed a cross-crate scenario).\r\n\r\n(All of this is applicable to libcore as well.)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53977/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53977/timeline", "performed_via_github_app": null, "state_reason": null}