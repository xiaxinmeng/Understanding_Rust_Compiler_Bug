{"url": "https://api.github.com/repos/rust-lang/rust/issues/49375", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49375/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49375/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49375/events", "html_url": "https://github.com/rust-lang/rust/issues/49375", "id": 308516135, "node_id": "MDU6SXNzdWUzMDg1MTYxMzU=", "number": 49375, "title": "ICE on ARM - missing MIR for `DefId(7/0:7 ~ cortex_m_rt[cc3c]::lang_items[0]::start[0])", "user": {"login": "sbourdeauducq", "id": 720864, "node_id": "MDQ6VXNlcjcyMDg2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/720864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbourdeauducq", "html_url": "https://github.com/sbourdeauducq", "followers_url": "https://api.github.com/users/sbourdeauducq/followers", "following_url": "https://api.github.com/users/sbourdeauducq/following{/other_user}", "gists_url": "https://api.github.com/users/sbourdeauducq/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbourdeauducq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbourdeauducq/subscriptions", "organizations_url": "https://api.github.com/users/sbourdeauducq/orgs", "repos_url": "https://api.github.com/users/sbourdeauducq/repos", "events_url": "https://api.github.com/users/sbourdeauducq/events{/privacy}", "received_events_url": "https://api.github.com/users/sbourdeauducq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-26T10:29:13Z", "updated_at": "2018-03-26T12:18:20Z", "closed_at": "2018-03-26T12:18:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "When compiling https://github.com/m-labs/ionpak at fe088d7bba189d4b0edf584b69c8b3974a1dce5a\r\nnew versions of the compiler crash:\r\n```\r\nerror: internal compiler error: librustc_metadata/cstore_impl.rs:135: get_optimized_mir: missing MIR for `DefId(7/0:7 ~ cortex_m_rt[cc3c]::lang_items[0]::start[0])`\r\n\r\nthread 'rustc' panicked at 'Box<Any>', librustc_errors/lib.rs:543:9\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:207\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:223\r\n   4: core::ops::function::Fn::call\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:403\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::session::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: <std::thread::local::LocalKey<T>>::try_with\r\n  11: <std::thread::local::LocalKey<T>>::with\r\n  12: rustc::ty::context::tls::with\r\n  13: rustc::ty::context::tls::with_opt\r\n  14: rustc::session::opt_span_bug_fmt\r\n  15: rustc::session::bug_fmt\r\n  16: rustc_metadata::cstore_impl::provide_extern::optimized_mir\r\n  17: rustc::ty::maps::<impl rustc::ty::maps::queries::optimized_mir<'tcx>>::compute_result\r\n  18: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  19: rustc_errors::Handler::track_diagnostics\r\n  20: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::cycle_check\r\n  21: rustc::ty::maps::<impl rustc::ty::maps::queries::optimized_mir<'tcx>>::force\r\n  22: rustc::ty::maps::<impl rustc::ty::maps::queries::optimized_mir<'tcx>>::try_get\r\n  23: rustc::ty::maps::TyCtxtAt::optimized_mir\r\n  24: rustc::ty::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::instance_mir\r\n  25: rustc_mir::monomorphize::collector::collect_items_rec\r\n  26: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  27: rustc::util::common::time\r\n  28: rustc_trans::base::collect_and_partition_translation_items\r\n  29: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  30: rustc_errors::Handler::track_diagnostics\r\n  31: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::cycle_check\r\n  32: rustc::ty::maps::<impl rustc::ty::maps::queries::collect_and_partition_translation_items<'tcx>>::force\r\n  33: rustc::ty::maps::<impl rustc::ty::maps::queries::collect_and_partition_translation_items<'tcx>>::try_get\r\n  34: rustc::ty::maps::TyCtxtAt::collect_and_partition_translation_items\r\n  35: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::collect_and_partition_translation_items\r\n  36: rustc_trans::base::trans_crate\r\n  37: <rustc_trans::LlvmTransCrate as rustc_trans_utils::trans_crate::TransCrate>::trans_crate\r\n  38: rustc::util::common::time\r\n  39: rustc_driver::driver::phase_4_translate_to_llvm\r\n  40: rustc_driver::driver::compile_input::{{closure}}\r\n  41: <std::thread::local::LocalKey<T>>::with\r\n  42: <std::thread::local::LocalKey<T>>::with\r\n  43: rustc::ty::context::TyCtxt::create_and_enter\r\n  44: rustc_driver::driver::compile_input\r\n  45: rustc_driver::run_compiler_impl\r\n  46: syntax::with_globals\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.26.0-nightly (482a913fb 2018-03-25) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z linker-flavor=ld -C opt-level=3 -C lto -C debuginfo=2 -C link-arg=-Tlink.x -C linker=arm-none-eabi-ld --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `ionpak-firmware`.\r\n```", "closed_by": {"login": "sbourdeauducq", "id": 720864, "node_id": "MDQ6VXNlcjcyMDg2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/720864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbourdeauducq", "html_url": "https://github.com/sbourdeauducq", "followers_url": "https://api.github.com/users/sbourdeauducq/followers", "following_url": "https://api.github.com/users/sbourdeauducq/following{/other_user}", "gists_url": "https://api.github.com/users/sbourdeauducq/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbourdeauducq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbourdeauducq/subscriptions", "organizations_url": "https://api.github.com/users/sbourdeauducq/orgs", "repos_url": "https://api.github.com/users/sbourdeauducq/repos", "events_url": "https://api.github.com/users/sbourdeauducq/events{/privacy}", "received_events_url": "https://api.github.com/users/sbourdeauducq/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49375/timeline", "performed_via_github_app": null, "state_reason": "completed"}