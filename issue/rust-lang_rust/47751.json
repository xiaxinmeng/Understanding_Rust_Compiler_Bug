{"url": "https://api.github.com/repos/rust-lang/rust/issues/47751", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47751/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47751/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47751/events", "html_url": "https://github.com/rust-lang/rust/issues/47751", "id": 291700384, "node_id": "MDU6SXNzdWUyOTE3MDAzODQ=", "number": 47751, "title": "Could process::Command implement Send ?", "user": {"login": "little-dude", "id": 6646324, "node_id": "MDQ6VXNlcjY2NDYzMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6646324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/little-dude", "html_url": "https://github.com/little-dude", "followers_url": "https://api.github.com/users/little-dude/followers", "following_url": "https://api.github.com/users/little-dude/following{/other_user}", "gists_url": "https://api.github.com/users/little-dude/gists{/gist_id}", "starred_url": "https://api.github.com/users/little-dude/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/little-dude/subscriptions", "organizations_url": "https://api.github.com/users/little-dude/orgs", "repos_url": "https://api.github.com/users/little-dude/repos", "events_url": "https://api.github.com/users/little-dude/events{/privacy}", "received_events_url": "https://api.github.com/users/little-dude/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-25T20:12:01Z", "updated_at": "2018-01-30T15:08:13Z", "closed_at": "2018-01-30T15:08:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nCurrently, we cannot send a `process::Command` to another thread because it does not implement `Send` (at least on Unix). The reason is the struct has a raw pointer field:\r\n\r\n```rust\r\npub struct Command {\r\n    // Currently we try hard to ensure that the call to `.exec()` doesn't\r\n    // actually allocate any memory. While many platforms try to ensure that\r\n    // memory allocation works after a fork in a multithreaded process, it's\r\n    // been observed to be buggy and somewhat unreliable, so we do our best to\r\n    // just not do it at all!\r\n    //\r\n    // Along those lines, the `argv` and `envp` raw pointers here are exactly\r\n    // what's gonna get passed to `execvp`. The `argv` array starts with the\r\n    // `program` and ends with a NULL, and the `envp` pointer, if present, is\r\n    // also null-terminated.\r\n    //\r\n    // Right now we don't support removing arguments, so there's no much fancy\r\n    // support there, but we support adding and removing environment variables,\r\n    // so a side table is used to track where in the `envp` array each key is\r\n    // located. Whenever we add a key we update it in place if it's already\r\n    // present, and whenever we remove a key we update the locations of all\r\n    // other keys.\r\n    program: CString,\r\n    args: Vec<CString>,\r\n    argv: Vec<*const c_char>,\r\n    env: CommandEnv<DefaultEnvKey>,\r\n\r\n    cwd: Option<CString>,\r\n    uid: Option<uid_t>,\r\n    gid: Option<gid_t>,\r\n    saw_nul: bool,\r\n    closures: Vec<Box<FnMut() -> io::Result<()> + Send + Sync>>,\r\n    stdin: Option<Stdio>,\r\n    stdout: Option<Stdio>,\r\n    stderr: Option<Stdio>,\r\n}\r\n```\r\nAccording to @cuviper [it's probably possible to implement `Send` manually](https://users.rust-lang.org/t/would-it-be-possible-for-std-process-command-to-be-send/15254/2) though. Is this something you would consider?", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47751/timeline", "performed_via_github_app": null, "state_reason": "completed"}