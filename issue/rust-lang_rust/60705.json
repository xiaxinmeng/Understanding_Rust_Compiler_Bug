{"url": "https://api.github.com/repos/rust-lang/rust/issues/60705", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/60705/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/60705/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/60705/events", "html_url": "https://github.com/rust-lang/rust/issues/60705", "id": 442790471, "node_id": "MDU6SXNzdWU0NDI3OTA0NzE=", "number": 60705, "title": "Tracking issue for RFC 2603, \"Rust Symbol Mangling (v0)\"", "user": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 433146169, "node_id": "MDU6TGFiZWw0MzMxNDYxNjk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-RFC-implemented", "name": "B-RFC-implemented", "color": "d304cb", "default": false, "description": "Approved by a merged RFC and implemented."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 3537211190, "node_id": "LA_kwDOAAsO6M7S1Y82", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-needs-to-bake", "name": "S-tracking-needs-to-bake", "color": "4682b4", "default": false, "description": "This is \"code complete\" but needs time to bake."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 97, "created_at": "2019-05-10T16:03:46Z", "updated_at": "2023-05-11T00:08:51Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a tracking issue for the RFC \"Rust Symbol Mangling (v0)\" (rust-lang/rfcs#2603).\r\n\r\n**Current status:**\r\n\r\nSince #90128, you can control the mangling scheme with `-C symbol-mangling-version`, which can be:\r\n* `legacy`: the older mangling version, still the default currently\r\n  * explicitly specifying this is unstable-only and also requires `-Z unstable-options`\r\n    (to allow for eventual removal after `v0` becomes the default)\r\n* `v0`: the new RFC mangling version, as implemented by #57967\r\n\r\n(Before #90128, this flag was the nightly-only `-Z symbol-mangling-version`)\r\n\r\n</details>\r\n\r\nTo test the new mangling, set `RUSTFLAGS=-Csymbol-mangling-version=v0` (or change [`rustflags` in `.cargo/config.toml`](https://doc.rust-lang.org/cargo/reference/config.html#configuration-keys)). Please note that only symbols from crates built with that flag will use the new mangling, and that tool support (e.g. debuggers) will be limited initially, until everything is upstreamed. However, `RUST_BACKTRACE` and [`rustfilt`](https://crates.io/crates/rustfilt) should work out of the box with either mangling version.\r\n\r\n**Steps:**\r\n\r\n- [x] Implement the RFC (https://github.com/rust-lang/rust/pull/57967 + https://github.com/alexcrichton/rustc-demangle/pull/23)\r\n- [x] Upstream C implementation of the demangler to:\r\n  - [x] `binutils`/`gdb` (GNU `libiberty`)\r\n    - [x] [[PATCH] Move rust_{is_mangled,demangle_sym} to a private libiberty header.\r\n](https://gcc.gnu.org/pipermail/gcc-patches/2019-June/523011.html) committed as https://github.com/gcc-mirror/gcc/commit/979526c9ce7bb79315f0f91fde0668a5ad8536df\r\n    - [x] [[PATCH] Simplify and generalize rust-demangle's unescaping logic.\r\n](https://gcc.gnu.org/pipermail/gcc-patches/2019-August/527835.html) committed as https://github.com/gcc-mirror/gcc/commit/42bf58bb137992b876be37f8b2e683c49bc2abed\r\n    - [x] [[PATCH] Remove some restrictions from rust-demangle.\r\n](https://gcc.gnu.org/pipermail/gcc-patches/2019-September/530445.html) committed as https://github.com/gcc-mirror/gcc/commit/e1cb00db670e4eb277f8315ecc1da65a5477298d\r\n    - [x] [[PATCH] Refactor rust-demangle to be independent of C++ demangling.\r\n](https://gcc.gnu.org/pipermail/gcc-patches/2019-November/533719.html) ([original submission](https://gcc.gnu.org/pipermail/gcc-patches/2019-October/532388.html)) committed as https://github.com/gcc-mirror/gcc/commit/32fc3719e06899d43e2298ad6d0028efe5ec3024\r\n    - [x] [[PATCH] Support the new (\"v0\") mangling scheme in rust-demangle.\r\n](https://gcc.gnu.org/pipermail/gcc-patches/2020-November/558905.html) ([original submission](https://gcc.gnu.org/pipermail/gcc-patches/2020-March/542012.html)) committed as https://github.com/gcc-mirror/gcc/commit/84096498a7bd788599d4a7ca63543fc7c297645e\r\n  - [x] Linux `perf` (through `binutils 2.36` and/or `libiberty 11.0`, or later versions - may vary between distros)\r\n  - [x] `valgrind`\r\n- [x] Implement demangling support in LLVM, including lldb, lld, llvm-objdump, llvm-nm, llvm-symbolizer, llvm-cxxfilt\r\n- [x] Resolve issue around rustc generating invalid symbol names (https://github.com/rust-lang/rust/issues/83611)\r\n- [ ] Adjust documentation ([see instructions on rustc-guide][doc-guide])\r\n- [ ] Stabilization PR ([see instructions on rustc-guide][stabilization-guide])\r\n\r\n[stabilization-guide]: https://rust-lang.github.io/rustc-guide/stabilization_guide.html#stabilization-pr\r\n[doc-guide]: https://rust-lang.github.io/rustc-guide/stabilization_guide.html#documentation-prs\r\n\r\n**Unresolved questions:**\r\n\r\n- [x] [Punycode vs UTF-8](https://github.com/rust-lang/rfcs/blob/master/text/2603-symbol-name-mangling-v2.md#punycode-vs-utf-8), some prior discussion in https://github.com/rust-lang/rust/issues/7539\r\n- [x] [Encoding parameter types for function symbols](https://github.com/rust-lang/rfcs/blob/master/text/2603-symbol-name-mangling-v2.md#encoding-parameter-types-for-function-symbols)\r\n\r\n**Desired availability of tooling:**\r\n\r\nLinux:\r\n\r\n- Tools: binutils, gdb, lldb, perf, valgrind\r\n\r\n| Distro | Has versions of all tools with support? |\r\n| - | - |\r\n| Debian (latest stable) | ? |\r\n| Arch | ? |\r\n| Ubuntu (latest release) | ? |\r\n| Ubuntu (latest LTS) | ? |\r\n| Fedora (latest release) | ? |\r\n| Alpine (latest release) | ? |\r\n\r\nWindows:\r\n\r\nWindows does not have support for demangling either legacy or v0 Rust symbols and requires debuginfo to load the appropriate function name. As such, no special support is required.\r\n\r\nmacOS:\r\n\r\nMore investigation is needed to determine to what extent macOS system tools already support Rust v0 mangling.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/60705/reactions", "total_count": 35, "+1": 12, "-1": 0, "laugh": 0, "hooray": 11, "confused": 0, "heart": 9, "rocket": 3, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/60705/timeline", "performed_via_github_app": null, "state_reason": null}