{"url": "https://api.github.com/repos/rust-lang/rust/issues/37164", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/37164/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/37164/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/37164/events", "html_url": "https://github.com/rust-lang/rust/issues/37164", "id": 183032016, "node_id": "MDU6SXNzdWUxODMwMzIwMTY=", "number": 37164, "title": "Inference fails because it doesn't consider deref coercions", "user": {"login": "cristicbz", "id": 801328, "node_id": "MDQ6VXNlcjgwMTMyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/801328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cristicbz", "html_url": "https://github.com/cristicbz", "followers_url": "https://api.github.com/users/cristicbz/followers", "following_url": "https://api.github.com/users/cristicbz/following{/other_user}", "gists_url": "https://api.github.com/users/cristicbz/gists{/gist_id}", "starred_url": "https://api.github.com/users/cristicbz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cristicbz/subscriptions", "organizations_url": "https://api.github.com/users/cristicbz/orgs", "repos_url": "https://api.github.com/users/cristicbz/repos", "events_url": "https://api.github.com/users/cristicbz/events{/privacy}", "received_events_url": "https://api.github.com/users/cristicbz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-14T11:56:09Z", "updated_at": "2020-01-09T14:54:26Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Maybe this is intended, but it's not super-clear.\n\n[Playground](https://is.gd/v2SFxF)\n\n``` rust\nuse std::collections::HashMap;\n\nfn check(_: &str) -> bool { false }\n\nfn chain<'a>(some_key: &'a str) -> HashMap<&'a str, Vec<usize>> {\n    let mut map = HashMap::new();\n    map.get(&some_key);\n    {\n        // uncomment type annotation to fix\n        let key_ref /*: &&str*/ = map.keys().next().unwrap();\n        if check(key_ref) {} // due to autoderef `key_ref` could be `&&str` and\n                             // this would work. but `key_ref` is inferred to be\n                             // `&str` due to the `check` call, causing `map` to\n                             // be `HashMap<str, _>`.\n    }\n    map\n}\n\nfn main() {}\n```\n\nfails with\n<details>\n\n```\nerror[E0277]: the trait bound `str: std::marker::Sized` is not satisfied\n --> min.rs:6:19\n  |\n6 |     let mut map = HashMap::new();\n  |                   ^^^^^^^^^^^^\n  |\n  = note: `str` does not have a constant size known at compile-time\n  = note: required by `<std::collections::HashMap<K, V>>::new`\n\nerror[E0277]: the trait bound `str: std::marker::Sized` is not satisfied\n --> min.rs:7:9\n  |\n7 |     map.get(&some_key);\n  |         ^^^\n  |\n  = note: `str` does not have a constant size known at compile-time\n\nerror[E0277]: the trait bound `str: std::borrow::Borrow<&str>` is not satisfied\n --> min.rs:7:9\n  |\n7 |     map.get(&some_key);\n  |         ^^^\n\nerror[E0277]: the trait bound `str: std::marker::Sized` is not satisfied\n --> min.rs:8:18\n  |\n8 |     if check(map.keys().next().unwrap()) {}\n  |                  ^^^^\n  |\n  = note: `str` does not have a constant size known at compile-time\n\nerror[E0277]: the trait bound `str: std::marker::Sized` is not satisfied\n --> min.rs:8:25\n  |\n8 |     if check(map.keys().next().unwrap()) {}\n  |                         ^^^^\n  |\n  = note: `str` does not have a constant size known at compile-time\n  = note: required because of the requirements on the impl of `std::iter::Iterator` for `std::collections::hash_map::Keys<'_, str, _>`\n\nerror[E0277]: the trait bound `str: std::marker::Sized` is not satisfied\n --> min.rs:8:14\n  |\n8 |     if check(map.keys().next().unwrap()) {}\n  |              ^^^^^^^^^^^^^^^^^\n  |\n  = note: `str` does not have a constant size known at compile-time\n  = note: required by `std::collections::hash_map::Keys`\n\nerror[E0308]: mismatched types\n --> min.rs:9:5\n  |\n9 |     map\n  |     ^^^ expected reference, found str\n  |\n  = note: expected type `std::collections::HashMap<&'a str, std::vec::Vec<usize>>`\n  = note:    found type `std::collections::HashMap<str, _>`\n\nerror: aborting due to 7 previous errors\n```\n\n</details>\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/37164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/37164/timeline", "performed_via_github_app": null, "state_reason": null}