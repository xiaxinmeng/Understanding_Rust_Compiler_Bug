{"url": "https://api.github.com/repos/rust-lang/rust/issues/95126", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95126/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95126/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95126/events", "html_url": "https://github.com/rust-lang/rust/issues/95126", "id": 1174389307, "node_id": "I_kwDOAAsO6M5F_8I7", "number": 95126, "title": "io::cleanup() can panic in unusual circumstances", "user": {"login": "jswrenn", "id": 3820879, "node_id": "MDQ6VXNlcjM4MjA4Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3820879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jswrenn", "html_url": "https://github.com/jswrenn", "followers_url": "https://api.github.com/users/jswrenn/followers", "following_url": "https://api.github.com/users/jswrenn/following{/other_user}", "gists_url": "https://api.github.com/users/jswrenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jswrenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jswrenn/subscriptions", "organizations_url": "https://api.github.com/users/jswrenn/orgs", "repos_url": "https://api.github.com/users/jswrenn/repos", "events_url": "https://api.github.com/users/jswrenn/events{/privacy}", "received_events_url": "https://api.github.com/users/jswrenn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-03-19T22:54:04Z", "updated_at": "2022-03-19T22:54:04Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "In the presence of a global allocator that prints on `dealloc`, the [`io::cleanup`](https://github.com/rust-lang/rust/blob/9c7f6d60b103e940f939f568ee2e06de6e914d09/library/std/src/io/stdio.rs#L615-L627) routine panics. This panic is surprising, because it occurs _after_ `main`.\r\n\r\n## Example and Backtrace\r\n([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=0b2959145e444c3f3f6b7626b52a7db0))\r\n```rust\r\n#[global_allocator]\r\nstatic ALLOCATOR: allocator::TracingSystemAllocator \r\n    = allocator::TracingSystemAllocator;\r\n\r\nfn main() {\r\n    let _ = std::io::stdout();\r\n    allocator::enable_tracing();\r\n    // allocator::disable_tracing(); // uncomment to fix panic\r\n    // panic occurs after `main()`\r\n}\r\n\r\n// a global allocator that prints on `alloc` and `dealloc`\r\n#[allow(dead_code)]\r\nmod allocator {\r\n    use core::{\r\n        alloc::{GlobalAlloc, Layout},\r\n        cell::{RefCell, RefMut},\r\n    };\r\n\r\n    use std::{\r\n        alloc::System,\r\n        panic::catch_unwind,\r\n    };\r\n\r\n    pub struct TracingSystemAllocator;\r\n\r\n    unsafe impl GlobalAlloc for TracingSystemAllocator {\r\n        unsafe fn alloc(&self, layout: Layout) -> *mut u8 {\r\n            let ptr = System.alloc(layout);\r\n\r\n            let _ = catch_unwind(|| maybe_with_guard(|trace_allocations| {\r\n                if *trace_allocations {\r\n                    println!(\"alloc({:?}) = {}\", layout, ptr as usize);\r\n                }\r\n            }));\r\n\r\n            ptr\r\n        }\r\n\r\n        unsafe fn dealloc(&self, ptr: *mut u8, layout: Layout) {\r\n            System.dealloc(ptr, layout);\r\n\r\n            let _ = catch_unwind(|| maybe_with_guard(|trace_allocations| {\r\n                if *trace_allocations {\r\n                    println!(\"dealloc({}, {:?})\", ptr as usize, layout);\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    pub fn enable_tracing() { maybe_with_guard(|mut trace| *trace = true) }\r\n    pub fn disable_tracing() { maybe_with_guard(|mut trace| *trace = false) }\r\n\r\n    // maybe run `f`, if a unique, mutable reference to `TRACE_ALLOCATOR` can be\r\n    // acquired.\r\n    fn maybe_with_guard<F>(f: F)\r\n    where\r\n        F: for<'a> FnOnce(RefMut<'a, bool>),\r\n    {\r\n        let _ = TRACE_ALLOCATOR.try_with(|guard| guard.try_borrow_mut().map(f));\r\n    }\r\n\r\n    // used to prevent infinitely recursive tracing\r\n    thread_local!{ static TRACE_ALLOCATOR: RefCell<bool> = RefCell::default(); }\r\n}\r\n```\r\n\r\n<details><summary>Backtrace</summary>\r\n\r\n```\r\nthread 'main' panicked at 'already borrowed: BorrowMutError', library/std/src/io/stdio.rs:864:20\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\nthread 'main' panicked at 'already borrowed: BorrowMutError', library/std/src/io/stdio.rs:864:20\r\nstack backtrace:\r\n   0:     0x56295cb1663c - std::backtrace_rs::backtrace::libunwind::trace::h91c465e73bf6c785\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x56295cb1663c - std::backtrace_rs::backtrace::trace_unsynchronized::hae9da36f5d58b5f3\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x56295cb1663c - std::sys_common::backtrace::_print_fmt::h7f499fa126a7effb\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x56295cb1663c - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h3e2b509ce2ce6007\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x56295cb3290c - core::fmt::write::h753c7571fa063ecb\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/fmt/mod.rs:1168:17\r\n   5:     0x56295cb13523 - std::io::Write::write_fmt::h2815c0519c99ba09\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/io/mod.rs:1660:15\r\n   6:     0x56295cb184f2 - std::sys_common::backtrace::_print::h64941a6fc8b0ed9b\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x56295cb184f2 - std::sys_common::backtrace::print::hcf25e43e1a9b0766\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x56295cb184f2 - std::panicking::default_hook::{{closure}}::h78d3e6cf97fc623d\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panicking.rs:211:50\r\n   9:     0x56295cb180d5 - std::panicking::default_hook::hda898f8d3ad1a5ae\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panicking.rs:228:9\r\n  10:     0x56295cb18b43 - std::panicking::rust_panic_with_hook::h1a5ea2d6c23051aa\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panicking.rs:606:17\r\n  11:     0x56295cb18860 - std::panicking::begin_panic_handler::{{closure}}::h07f549390938b73f\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panicking.rs:502:13\r\n  12:     0x56295cb16ae4 - std::sys_common::backtrace::__rust_end_short_backtrace::h5ec3758a92cfb00d\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/sys_common/backtrace.rs:139:18\r\n  13:     0x56295cb18599 - rust_begin_unwind\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panicking.rs:498:5\r\n  14:     0x56295caff371 - core::panicking::panic_fmt::h3a79a6a99affe1d5\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/panicking.rs:116:14\r\n  15:     0x56295caff403 - core::result::unwrap_failed::ha0327e3803285d6e\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/result.rs:1690:5\r\n  16:     0x56295cb129ba - core::result::Result<T,E>::expect::hd92a85caa762cf4d\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/result.rs:975:23\r\n  17:     0x56295cb129ba - core::cell::RefCell<T>::borrow_mut::h222a43ad92e47b29\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/cell.rs:946:9\r\n  18:     0x56295cb129ba - <std::io::stdio::StdoutLock as std::io::Write>::write_all::h0485fa4c76ef33a0\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/io/stdio.rs:864:9\r\n  19:     0x56295cb136f3 - <std::io::Write::write_fmt::Adapter<T> as core::fmt::Write>::write_str::h0469fbf51f460f83\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/io/mod.rs:1649:23\r\n  20:     0x56295cb328fc - core::fmt::write::h753c7571fa063ecb\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/fmt/mod.rs:1166:21\r\n  21:     0x56295cb126bd - std::io::Write::write_fmt::h14847b988808b22b\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/io/mod.rs:1660:15\r\n  22:     0x56295cb126bd - <&std::io::stdio::Stdout as std::io::Write>::write_fmt::hbedd013841f7b2e2\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/io/stdio.rs:844:9\r\n  23:     0x56295cb12b1b - <std::io::stdio::Stdout as std::io::Write>::write_fmt::h606f3fb18c36d7de\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/io/stdio.rs:818:9\r\n  24:     0x56295cb12b1b - std::io::stdio::print_to::h30cc8f14d9cb96a3\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/io/stdio.rs:1186:21\r\n  25:     0x56295cb12b1b - std::io::stdio::_print::h4dabb72d0b79d2de\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/io/stdio.rs:1199:5\r\n  26:     0x56295cb0015d - <playground::allocator::TracingSystemAllocator as core::alloc::global::GlobalAlloc>::dealloc::{{closure}}::{{closure}}::h7d6128ea2f7a151d\r\n                               at /playground/src/main.rs:45:21\r\n  27:     0x56295cb01e3c - core::result::Result<T,E>::map::h713c34b4fa0d9fd8\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/result.rs:709:25\r\n  28:     0x56295cb002e9 - playground::allocator::maybe_with_guard::{{closure}}::h1cabc2e8cd20fc8b\r\n                               at /playground/src/main.rs:60:50\r\n  29:     0x56295cb00ade - std::thread::local::LocalKey<T>::try_with::he04bc4e8d7dba087\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/thread/local.rs:412:16\r\n  30:     0x56295cb0021e - playground::allocator::maybe_with_guard::h51f94e4a4fcfca48\r\n                               at /playground/src/main.rs:60:17\r\n  31:     0x56295cafffd7 - <playground::allocator::TracingSystemAllocator as core::alloc::global::GlobalAlloc>::dealloc::{{closure}}::h7be36579f26cfcec\r\n                               at /playground/src/main.rs:43:37\r\n  32:     0x56295cb0249b - std::panicking::try::do_call::h616a99828a3d0f34\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panicking.rs:406:40\r\n  33:     0x56295cb02a3b - __rust_try\r\n  34:     0x56295cb022cd - std::panicking::try::h1da88df9552726f4\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panicking.rs:370:19\r\n  35:     0x56295cb01c83 - std::panic::catch_unwind::h4c11da4187c3b896\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panic.rs:133:14\r\n  36:     0x56295cafff96 - <playground::allocator::TracingSystemAllocator as core::alloc::global::GlobalAlloc>::dealloc::h6009103950d84ca5\r\n                               at /playground/src/main.rs:43:21\r\n  37:     0x56295cb004ec - __rg_dealloc\r\n                               at /playground/src/main.rs:2:1\r\n  38:     0x56295cb24bdb - alloc::alloc::dealloc::haa3492954d12ce5f\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/alloc/src/alloc.rs:105:14\r\n  39:     0x56295cb24bdb - <alloc::alloc::Global as core::alloc::Allocator>::deallocate::hb4b305912aa4cfca\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/alloc/src/alloc.rs:242:22\r\n  40:     0x56295cb24bdb - alloc::alloc::box_free::ha1cc9603ca4735c5\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/alloc/src/alloc.rs:340:9\r\n  41:     0x56295cb24bdb - panic_unwind::real_imp::cleanup::h752dae465f50738f\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/panic_unwind/src/gcc.rs:83:5\r\n  42:     0x56295cb24bdb - __rust_panic_cleanup\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/panic_unwind/src/lib.rs:97:19\r\n  43:     0x56295cafe87d - std::panicking::try::cleanup::he69b6749f8de9285\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panicking.rs:387:42\r\n  44:     0x56295cb02573 - std::panicking::try::do_catch::he816bc138d82a8be\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panicking.rs:431:23\r\n  45:     0x56295cb02a53 - __rust_try\r\n  46:     0x56295cb022cd - std::panicking::try::h1da88df9552726f4\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panicking.rs:370:19\r\n  47:     0x56295cb01c83 - std::panic::catch_unwind::h4c11da4187c3b896\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panic.rs:133:14\r\n  48:     0x56295cafff96 - <playground::allocator::TracingSystemAllocator as core::alloc::global::GlobalAlloc>::dealloc::h6009103950d84ca5\r\n                               at /playground/src/main.rs:43:21\r\n  49:     0x56295cb004ec - __rg_dealloc\r\n                               at /playground/src/main.rs:2:1\r\n  50:     0x56295cb155ab - alloc::alloc::dealloc::haa3492954d12ce5f\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/alloc/src/alloc.rs:105:14\r\n  51:     0x56295cb155ab - <alloc::alloc::Global as core::alloc::Allocator>::deallocate::hb4b305912aa4cfca\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/alloc/src/alloc.rs:242:22\r\n  52:     0x56295cb155ab - <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop::h5cc422f24c20fbcc\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/alloc/src/raw_vec.rs:479:22\r\n  53:     0x56295cb155ab - core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>::hec44dd4b63d893d3\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/ptr/mod.rs:188:1\r\n  54:     0x56295cb155ab - core::ptr::drop_in_place<alloc::vec::Vec<u8>>::h8549a3bfcac0511f\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/ptr/mod.rs:188:1\r\n  55:     0x56295cb155ab - core::ptr::drop_in_place<std::io::buffered::bufwriter::BufWriter<std::io::stdio::StdoutRaw>>::h03be3001ed541bd0\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/ptr/mod.rs:188:1\r\n  56:     0x56295cb155ab - core::ptr::drop_in_place<std::io::buffered::linewriter::LineWriter<std::io::stdio::StdoutRaw>>::hca1184e7a5ab199b\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/ptr/mod.rs:188:1\r\n  57:     0x56295cb155ab - std::io::stdio::cleanup::hc7c677e6c351f70b\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/io/stdio.rs:720:13\r\n  58:     0x56295cb155ab - std::rt::cleanup::{{closure}}::h3b61a35d525b7463\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/rt.rs:97:9\r\n  59:     0x56295cb155ab - std::sync::once::Once::call_once::{{closure}}::hc7434a57984866e6\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/sync/once.rs:269:41\r\n  60:     0x56295cafe63a - std::sync::once::Once::call_inner::h222a34e71c71c7d0\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/sync/once.rs:426:21\r\n  61:     0x56295cb15d30 - std::sync::once::Once::call_once::h1832fcdcd1b2c564\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/sync/once.rs:269:9\r\n  62:     0x56295cb15d30 - std::rt::cleanup::h56ad3aee2a9e3759\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/rt.rs:95:5\r\n  63:     0x56295cb15d30 - core::ops::function::FnOnce::call_once::h2b4de7e60e48388d\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/ops/function.rs:227:5\r\n  64:     0x56295cb15d30 - std::panicking::try::do_call::h4cec8f0c5cfc7b8d\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panicking.rs:406:40\r\n  65:     0x56295cb15d30 - std::panicking::try::h8c85538cac59ef3f\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panicking.rs:370:19\r\n  66:     0x56295cb15d30 - std::panic::catch_unwind::had8717965d8fd960\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panic.rs:133:14\r\n  67:     0x56295cb15d30 - std::rt::lang_start_internal::h52e73755f77c7dd9\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/rt.rs:133:5\r\n  68:     0x56295cb02040 - std::rt::lang_start::h8ddb7db3dfeaadab\r\n                               at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/rt.rs:144:17\r\n  69:     0x56295cb02a7c - main\r\n  70:     0x7f591eed30b3 - __libc_start_main\r\n  71:     0x56295caffa6e - _start\r\n  72:                0x0 - <unknown>\r\nthread panicked while panicking. aborting.\r\n```\r\n\r\n</details>\r\n\r\n### Meta\r\nAt the time of writing, this bug occurs on stable (v1.59.0), beta (1.60.0-beta.5), and nightly (1.61.0-nightly 2022-03-18 1bfe40d11c3630254504).\r\n\r\n### Sequence of Events\r\n- first, `io::cleanup` `borrow_mut`s `Stdout`'s `LineWriter` and drops it\r\n  https://github.com/rust-lang/rust/blob/9c7f6d60b103e940f939f568ee2e06de6e914d09/library/std/src/io/stdio.rs#L624\r\n  - then, that previous `LineWriter<BufWriter>` of `Stdout` is deallocated\r\n    - then, `TracingSystemAllocator::dealloc` invokes `println!`\r\n      - ...which eventually invokes ` StdoutLock<'_>::write_all`\r\n        https://github.com/rust-lang/rust/blob/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/io/stdio.rs#L863-L865\r\n        - ...which *tries* to `borrow_mut()` the `Stdout`'s `LineWriter`. This fails because `io::cleanup` already holds the mutable borrow.\r\n\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95126/timeline", "performed_via_github_app": null, "state_reason": null}