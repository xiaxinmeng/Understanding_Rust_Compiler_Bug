{"url": "https://api.github.com/repos/rust-lang/rust/issues/29277", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/29277/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/29277/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/29277/events", "html_url": "https://github.com/rust-lang/rust/issues/29277", "id": 113170524, "node_id": "MDU6SXNzdWUxMTMxNzA1MjQ=", "number": 29277, "title": "Memory leaks with diverging functions", "user": {"login": "DenisKolodin", "id": 418920, "node_id": "MDQ6VXNlcjQxODkyMA==", "avatar_url": "https://avatars.githubusercontent.com/u/418920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DenisKolodin", "html_url": "https://github.com/DenisKolodin", "followers_url": "https://api.github.com/users/DenisKolodin/followers", "following_url": "https://api.github.com/users/DenisKolodin/following{/other_user}", "gists_url": "https://api.github.com/users/DenisKolodin/gists{/gist_id}", "starred_url": "https://api.github.com/users/DenisKolodin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DenisKolodin/subscriptions", "organizations_url": "https://api.github.com/users/DenisKolodin/orgs", "repos_url": "https://api.github.com/users/DenisKolodin/repos", "events_url": "https://api.github.com/users/DenisKolodin/events{/privacy}", "received_events_url": "https://api.github.com/users/DenisKolodin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-10-24T16:34:11Z", "updated_at": "2015-10-24T18:36:43Z", "closed_at": "2015-10-24T18:30:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Some external C libs uses `setjmp` as exceptions. I have function declared as diverging which does `longjmp` inside and never returns. But some data have lost if it was allocated in a heap:\n\n``` rust\npub fn jmp_outside() -> ! {...}\n\nfn called_from_c() -> u32 {\n    let s1 = String::new();\n    {\n        let s2 = String::new();\n        {\n            let s3 = String::new();\n            // innermost checks....\n            jmp_outside();\n        }\n    }\n    // normal return\n    0\n}\n```\n\nWhy diverging functions doesn't clean up locally heap allocations? I think that's dangerous behaviour. Never returns doesn't mean panics and fails only. Program can still be running. Is it possible to fix?\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/29277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/29277/timeline", "performed_via_github_app": null, "state_reason": "completed"}