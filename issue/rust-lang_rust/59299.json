{"url": "https://api.github.com/repos/rust-lang/rust/issues/59299", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/59299/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/59299/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/59299/events", "html_url": "https://github.com/rust-lang/rust/issues/59299", "id": 422983927, "node_id": "MDU6SXNzdWU0MjI5ODM5Mjc=", "number": 59299, "title": "Better diagnostics for multiple borrowed fields with non-unified lifetimes", "user": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 867483626, "node_id": "MDU6TGFiZWw4Njc0ODM2MjY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-fixed-by-NLL", "name": "NLL-fixed-by-NLL", "color": "f799ea", "default": false, "description": "Bugs fixed, but only when NLL is enabled."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-19T22:32:44Z", "updated_at": "2020-06-11T18:00:02Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[The following code](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=881a7cde8e12b2b441de99c478aa9a99)\r\n\r\n```\r\nstruct Foo<'a> { a: &'a usize }\r\n\r\nfn get_account_value<'l>(\r\n    flag: bool,\r\n    a: &'l mut Foo,\r\n    b: &'l mut Foo,\r\n) {\r\n    let _ = if flag { a } else { b };\r\n}\r\n```\r\n\r\nProduces the following output:\r\n\r\n```\r\nerror[E0623]: lifetime mismatch\r\n --> src/main.rs:8:34\r\n  |\r\n5 |     a: &'l mut Foo,\r\n  |                ---\r\n6 |     b: &'l mut Foo,\r\n  |                --- these two types are declared with different lifetimes...\r\n7 | ) {\r\n8 |     let _ = if flag { a } else { b };\r\n  |                                  ^ ...but data from `b` flows into `a` here\r\n\r\nerror[E0623]: lifetime mismatch\r\n --> src/main.rs:8:34\r\n  |\r\n5 |     a: &'l mut Foo,\r\n  |                --- these two types are declared with different lifetimes...\r\n6 |     b: &'l mut Foo,\r\n  |                ---\r\n7 | ) {\r\n8 |     let _ = if flag { a } else { b };\r\n  |                                  ^ ...but data from `a` flows into `b` here\r\n\r\nerror: aborting due to 2 previous errors\r\n```\r\n\r\nIt seems like the borrow checker could handle this case better. Particularly, the fact that `Foo` has a lifetime makes the errors more puzzling than they need to be.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/59299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/59299/timeline", "performed_via_github_app": null, "state_reason": null}