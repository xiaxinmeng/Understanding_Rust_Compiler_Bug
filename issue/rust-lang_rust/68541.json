{"url": "https://api.github.com/repos/rust-lang/rust/issues/68541", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68541/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68541/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68541/events", "html_url": "https://github.com/rust-lang/rust/issues/68541", "id": 555109977, "node_id": "MDU6SXNzdWU1NTUxMDk5Nzc=", "number": 68541, "title": "ICE on nightly when using trait objects with lazy_static", "user": {"login": "foxbenjaminfox", "id": 4003976, "node_id": "MDQ6VXNlcjQwMDM5NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/4003976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foxbenjaminfox", "html_url": "https://github.com/foxbenjaminfox", "followers_url": "https://api.github.com/users/foxbenjaminfox/followers", "following_url": "https://api.github.com/users/foxbenjaminfox/following{/other_user}", "gists_url": "https://api.github.com/users/foxbenjaminfox/gists{/gist_id}", "starred_url": "https://api.github.com/users/foxbenjaminfox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foxbenjaminfox/subscriptions", "organizations_url": "https://api.github.com/users/foxbenjaminfox/orgs", "repos_url": "https://api.github.com/users/foxbenjaminfox/repos", "events_url": "https://api.github.com/users/foxbenjaminfox/events{/privacy}", "received_events_url": "https://api.github.com/users/foxbenjaminfox/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-25T17:12:44Z", "updated_at": "2020-01-26T00:22:40Z", "closed_at": "2020-01-26T00:22:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "When creating a [`lazy_static`](https://crates.io/crates/lazy_static) with a reference to a trait object, I get an internal compiler error (only on nightly).\r\n\r\nHere's a minimal example: ([playground link](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=cc404efa95a7614309e4526b199461f3))\r\n\r\n```rust\r\nlazy_static::lazy_static! {\r\n    static ref X: &dyn std::any::Any = ();\r\n}\r\n```\r\n\r\nOn stable and beta this gives a expected error message, but on nightly it causes an ICE.\r\n\r\n### Meta\r\n\r\nOutput from `rustc --version --verbose`:\r\n\r\n```\r\nrustc 1.42.0-nightly (c2d141df5 2020-01-24)\r\nbinary: rustc\r\ncommit-hash: c2d141df59703393c0c683abc259f9a8c3be041a\r\ncommit-date: 2020-01-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.42.0-nightly\r\nLLVM version: 9.0\r\n```\r\n\r\n<details>\r\n<summary>Backtrace</summary>\r\n\r\n```\r\nthread 'rustc' panicked at 'called `Result::unwrap()` on an `Err` value: DistinctSources(DistinctSources { begin: (Real(\"src/main.rs\"), BytePos(0)), end: (Macros(\"::lazy_static::__lazy_static_internal\"), BytePos(6703667)) })', src/librustc_errors/lib.rs:197:29\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:77\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1052\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1426\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:476\r\n  12: rust_begin_unwind\r\n             at src/libstd/panicking.rs:380\r\n  13: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:85\r\n  14: core::option::expect_none_failed\r\n             at src/libcore/option.rs:1199\r\n  15: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once\r\n  16: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter\r\n  17: <rustc_errors::emitter::EmitterWriter as rustc_errors::emitter::Emitter>::emit_diagnostic\r\n  18: <rustc_errors::json::JsonEmitter as rustc_errors::emitter::Emitter>::emit_diagnostic\r\n  19: rustc_errors::HandlerInner::emit_diagnostic\r\n  20: rustc_errors::diagnostic_builder::DiagnosticBuilder::emit\r\n  21: rustc_resolve::lifetimes::LifetimeContext::resolve_elided_lifetimes\r\n  22: <rustc_resolve::lifetimes::LifetimeContext as rustc_hir::intravisit::Visitor>::visit_lifetime\r\n  23: <rustc_resolve::lifetimes::LifetimeContext as rustc_hir::intravisit::Visitor>::visit_ty\r\n  24: <rustc_resolve::lifetimes::LifetimeContext as rustc_hir::intravisit::Visitor>::visit_impl_item\r\n  25: rustc_hir::intravisit::walk_item\r\n  26: <rustc_resolve::lifetimes::LifetimeContext as rustc_hir::intravisit::Visitor>::visit_item\r\n  27: rustc_resolve::lifetimes::resolve_lifetimes\r\n  28: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  29: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::force_query\r\n  30: rustc::ty::query::plumbing::force_from_dep_node\r\n  31: rustc::dep_graph::graph::DepGraph::try_mark_previous_green\r\n  32: rustc::dep_graph::graph::DepGraph::try_mark_previous_green\r\n  33: rustc::dep_graph::graph::DepGraph::try_mark_green\r\n  34: rustc::dep_graph::graph::DepGraph::try_mark_green_and_read\r\n  35: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  36: <rustc_typeck::collect::CollectItemTypesVisitor as rustc_hir::intravisit::Visitor>::visit_item\r\n  37: rustc::hir::map::Map::visit_item_likes_in_module\r\n  38: rustc_typeck::collect::collect_mod_item_types\r\n  39: rustc::ty::query::__query_compute::collect_mod_item_types\r\n  40: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::collect_mod_item_types>::compute\r\n  41: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  42: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  43: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::ensure_query\r\n  44: rustc_typeck::check_crate\r\n  45: rustc_interface::passes::analysis\r\n  46: rustc::ty::query::__query_compute::analysis\r\n  47: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  48: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  49: rustc::ty::context::tls::enter_global\r\n  50: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  51: scoped_tls::ScopedKey<T>::set\r\n  52: syntax::with_globals\r\n```\r\n</sumerry>", "closed_by": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68541/timeline", "performed_via_github_app": null, "state_reason": "completed"}