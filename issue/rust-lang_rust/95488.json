{"url": "https://api.github.com/repos/rust-lang/rust/issues/95488", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95488/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95488/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95488/events", "html_url": "https://github.com/rust-lang/rust/issues/95488", "id": 1186808340, "node_id": "I_kwDOAAsO6M5GvUIU", "number": 95488, "title": "[strict provenance] add lints for evil pointer casts", "user": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 630636017, "node_id": "MDU6TGFiZWw2MzA2MzYwMTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-future-compatibility", "name": "C-future-compatibility", "color": "f5f1fd", "default": false, "description": "Category: future compatibility lints"}, {"id": 3983786342, "node_id": "LA_kwDOAAsO6M7tc8Fm", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-strict-provenance", "name": "A-strict-provenance", "color": "f7e101", "default": false, "description": "Area: Strict provenance for raw pointers"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2022-03-30T18:06:04Z", "updated_at": "2022-04-08T16:34:32Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This issue is part of the Strict Provenance Experiment - #95228 \n\nWe should make it easier for people to detect places where they are using casts instead of the \"blessed\" strict_provenance APIs.\n\n@eddyb and I prototyped this out here: https://github.com/rust-lang/rust/pull/95199/commits/93f7f06737686fdd6a44127d51129764c0d0a0bc\n\nThe patch needs some cleanups, though. Quoting from elsewhere:\n\n----------------------\n\nAll lints should be made allow by default, meaning they're opt-in.\n\nAt least in the bootstrap, the compiler will complain if you `allow()` a lint in your code that doesn't exist. This potentially just means:\n\n* We need to keep the experimental lint around forever even when the experiment is over\n* Users can only \"safely\" invoke it from the command line manually, which is slightly unfortunate for anything like what I did where I used it as a FIXME/WONTFIX marker for the file.\n\nAlso due to the \"Opaque Function Pointers\" / \"Harvard Architecture\" / \"AVR is cursed\" issue \n\nhttps://github.com/rust-lang/rust/blob/92804455704cc59d6d8272faf72f442c6125d395/library/core/src/ptr/mod.rs#L1390-L1395\n\nI think we want the lint broken up into parts:\n\n* `#[fuzzy_provenance_casts]` - int-to-ptr, totally evil\n* `#[lossy_provencance_casts]` - ptr-to-int, sketchy but valid as long as you *actually* want `.addr()` semantics\n* `#[oxford_casts]` - casts that make harvard architectures sad -- fn<->ptr (name is a joke... unless...)\n\nI can't justify discouraging `fn <-> int`, absent better ways to talk about fn ptrs properly.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":null}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95488/timeline", "performed_via_github_app": null, "state_reason": null}