{"url": "https://api.github.com/repos/rust-lang/rust/issues/88741", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88741/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88741/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88741/events", "html_url": "https://github.com/rust-lang/rust/issues/88741", "id": 991061672, "node_id": "MDU6SXNzdWU5OTEwNjE2NzI=", "number": 88741, "title": "Rustdoc shouldn't lint about missing code examples in trait impls", "user": {"login": "hnj2", "id": 49440977, "node_id": "MDQ6VXNlcjQ5NDQwOTc3", "avatar_url": "https://avatars.githubusercontent.com/u/49440977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hnj2", "html_url": "https://github.com/hnj2", "followers_url": "https://api.github.com/users/hnj2/followers", "following_url": "https://api.github.com/users/hnj2/following{/other_user}", "gists_url": "https://api.github.com/users/hnj2/gists{/gist_id}", "starred_url": "https://api.github.com/users/hnj2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hnj2/subscriptions", "organizations_url": "https://api.github.com/users/hnj2/orgs", "repos_url": "https://api.github.com/users/hnj2/repos", "events_url": "https://api.github.com/users/hnj2/events{/privacy}", "received_events_url": "https://api.github.com/users/hnj2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-09-08T12:04:49Z", "updated_at": "2021-09-13T12:43:58Z", "closed_at": "2021-09-13T12:43:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "My suggestion is to exclude Trait implementations from the items that need to have doc code examples when using the `rustdoc::missing_doc_code_examples` lint.\r\n\r\n## Examples\r\n\r\nConsider the following example:\r\n```rust\r\n//! docs\r\n//! ```\r\n//! let s = SomeStruct;\r\n//! ```\r\n\r\n#![deny(rustdoc::missing_doc_code_examples)]\r\n\r\n/// docs\r\n/// ```\r\n/// let s = SomeStruct;\r\n/// ```\r\npub struct SomeStruct;\r\n\r\nimpl Clone for SomeStruct {\r\n    fn clone(&self) -> Self { Self }\r\n}\r\n```\r\nThe `missing_doc_code_exmaples` lint causes the following errors:\r\n```\r\nerror: missing code example in this documentation\r\n  --> src/lib.rs:14:1\r\n   |\r\n14 | / impl Clone for SomeStruct {\r\n15 | |     fn clone(&self) -> Self { Self }\r\n16 | | }\r\n   | |_^\r\n   |\r\nnote: the lint level is defined here\r\n  --> src/lib.rs:6:9\r\n   |\r\n6  | #![deny(rustdoc::missing_doc_code_examples)]\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: missing code example in this documentation\r\n  --> src/lib.rs:15:5\r\n   |\r\n15 |     fn clone(&self) -> Self { Self }\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\n### Pros\r\n\r\n 1. This is inconsistent with the `missing_docs` lint, which does not require documentation for Trait implementations.\r\n 2. The documentation errors/warnings should be issued when compiling the Traits documentation (as is the case with e.g. the missing documentation lint).\r\n 3. Once \"#81775\" is fixed, the missing code examples lint is inconsistent with its own behavior when using derive macro.\r\n\r\n### Workarounds\r\n\r\nThere are two options available to avoid these documentation errors:\r\n\r\n 1. One can replace the traits documentations:\r\n    ```\r\n    /// docs\r\n    /// ```\r\n    /// let c = SomeStruct.clone();\r\n    /// ```\r\n    impl Clone for SomeStruct {\r\n        /// docs\r\n        /// ```\r\n        /// let c = SomeStruct.clone();\r\n        /// ```\r\n        fn clone(&self) -> Self { Self }\r\n    }\r\n    ```\r\n    This is a bad workaround because:\r\n     1. It cause a lot of copy-paste code duplication.\r\n     3. In most cases the traits documentation is preferred to an implementors documentation.\r\n     4. The Trait and it's associated methods, types, etc. can already have a documentation with code examples.\r\n        Those are not considered by the lint, which prompts the implementor rewrite the documentation or ignore the lint.\r\n     5. The Trait's provided methods might not have code examples (as is the case with `Clone::clone_from`).\r\n        Those is not considered by the lint.\r\n     6. The lint is inconsistent when it comes to required and provided methods of a trait (compare the previous two points).\r\n        Even though both types of methods are displayed equally in the documentation the missing doc code examples lint treats them differently.\r\n 2. One can allow missing doc code examples for each of these cases:\r\n    ```rust\r\n    #[allow(rustdoc::missing_doc_code_examples)]\r\n    impl Clone for SomeStruct {\r\n        fn clone(&self) -> Self { Self }\r\n    }\r\n    ```\r\n    This workaround is also not ideal due to the amount of copy paste code duplication necessary, its inconsistency with derive macros and its inconsistency with other lints like the missing documentations lint.\r\n\r\n### Cons\r\n\r\nThe only good case (that I can think of) for the current behavior of the lint is:\r\nIf an implementation has some special behavior (like not implementing a method of a Trait) then the author of the implementation is reminded to document this behavior by the lint.\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88741/timeline", "performed_via_github_app": null, "state_reason": "completed"}