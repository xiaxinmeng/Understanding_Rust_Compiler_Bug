{"url": "https://api.github.com/repos/rust-lang/rust/issues/80268", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80268/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80268/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80268/events", "html_url": "https://github.com/rust-lang/rust/issues/80268", "id": 772355725, "node_id": "MDU6SXNzdWU3NzIzNTU3MjU=", "number": 80268, "title": "Getting SIGSEGV with `-fp-armv8` features", "user": {"login": "tnishinaga", "id": 14229654, "node_id": "MDQ6VXNlcjE0MjI5NjU0", "avatar_url": "https://avatars.githubusercontent.com/u/14229654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tnishinaga", "html_url": "https://github.com/tnishinaga", "followers_url": "https://api.github.com/users/tnishinaga/followers", "following_url": "https://api.github.com/users/tnishinaga/following{/other_user}", "gists_url": "https://api.github.com/users/tnishinaga/gists{/gist_id}", "starred_url": "https://api.github.com/users/tnishinaga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tnishinaga/subscriptions", "organizations_url": "https://api.github.com/users/tnishinaga/orgs", "repos_url": "https://api.github.com/users/tnishinaga/repos", "events_url": "https://api.github.com/users/tnishinaga/events{/privacy}", "received_events_url": "https://api.github.com/users/tnishinaga/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 100522, "node_id": "MDU6TGFiZWwxMDA1MjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-crash", "name": "I-crash", "color": "e10c02", "default": false, "description": "Issue: The compiler crashes (SIGSEGV, SIGABRT, etc). Use I-ICE instead when the compiler panics."}, {"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1568663381, "node_id": "MDU6TGFiZWwxNTY4NjYzMzgx", "url": "https://api.github.com/repos/rust-lang/rust/labels/ICEBreaker-LLVM", "name": "ICEBreaker-LLVM", "color": "74cc28", "default": false, "description": "Bugs identified for the LLVM ICE-breaker group"}, {"id": 3940166907, "node_id": "LA_kwDOAAsO6M7q2iz7", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-AArch64", "name": "O-AArch64", "color": "6e6ec0", "default": false, "description": "Armv8-A or later processors in AArch64 mode"}], "state": "open", "locked": false, "assignee": {"login": "nasherm", "id": 20664035, "node_id": "MDQ6VXNlcjIwNjY0MDM1", "avatar_url": "https://avatars.githubusercontent.com/u/20664035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nasherm", "html_url": "https://github.com/nasherm", "followers_url": "https://api.github.com/users/nasherm/followers", "following_url": "https://api.github.com/users/nasherm/following{/other_user}", "gists_url": "https://api.github.com/users/nasherm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nasherm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nasherm/subscriptions", "organizations_url": "https://api.github.com/users/nasherm/orgs", "repos_url": "https://api.github.com/users/nasherm/repos", "events_url": "https://api.github.com/users/nasherm/events{/privacy}", "received_events_url": "https://api.github.com/users/nasherm/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nasherm", "id": 20664035, "node_id": "MDQ6VXNlcjIwNjY0MDM1", "avatar_url": "https://avatars.githubusercontent.com/u/20664035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nasherm", "html_url": "https://github.com/nasherm", "followers_url": "https://api.github.com/users/nasherm/followers", "following_url": "https://api.github.com/users/nasherm/following{/other_user}", "gists_url": "https://api.github.com/users/nasherm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nasherm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nasherm/subscriptions", "organizations_url": "https://api.github.com/users/nasherm/orgs", "repos_url": "https://api.github.com/users/nasherm/repos", "events_url": "https://api.github.com/users/nasherm/events{/privacy}", "received_events_url": "https://api.github.com/users/nasherm/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2020-12-21T17:51:24Z", "updated_at": "2022-03-18T01:02:21Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting `SIGSEGV: invalid memory reference` crashes when compiling projects with `-fp-armv8` features.\n\nI got same results on macosx and linux.\n\n\nI tried this code:\n\n<details><summary>codes</summary>\n<p>\n\n\n`src/startup.rs`\n```rust\n#![no_std]\n#![no_main]\n#![feature(asm)]\n\n#[no_mangle]\npub extern \"C\" fn startup() {\n    loop {\n        unsafe{ asm!(\"wfe\") }\n    };\n}\n```\n\n`.cargo/config.toml`\n```toml\n[unstable]\nbuild-std = [\"core\", \"compiler_builtins\"]\nbuild-std-features = [\"compiler-builtins-mem\"]\n\n[build]\ntarget = \"aarch64-unknown-none.json\"\n```\n\n`aarch64-unknown-none.json`\n```json\n{\n  \"arch\": \"aarch64\",\n  \"data-layout\": \"e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128\",\n  \"env\": \"\",\n  \"executables\": true,\n  \"features\": \"+strict-align,-fp-armv8\",\n  \"is-builtin\": true,\n  \"linker\": \"rust-lld\",\n  \"linker-flavor\": \"ld.lld\",\n  \"pre-link-args\": {\n    \"ld.lld\": [\"-Tldscript.ld\"]\n  },\n  \"llvm-target\": \"aarch64-unknown-none\",\n  \"max-atomic-width\": 128,\n  \"os\": \"none\",\n  \"panic-strategy\": \"abort\",\n  \"relocation-model\": \"static\",\n  \"target-c-int-width\": \"32\",\n  \"target-endian\": \"little\",\n  \"target-pointer-width\": \"64\",\n  \"unsupported-abis\": [\n    \"stdcall\",\n    \"fastcall\",\n    \"vectorcall\",\n    \"thiscall\",\n    \"win64\",\n    \"sysv64\"\n  ],\n  \"vendor\": \"\"\n}\n```\n\n`Cargo.toml`\n```toml\n[package]\nname = \"kernel\"\nversion = \"0.1.0\"\nauthors = [\"tnishinaga <>\"]\nedition = \"2018\"\n\n[[bin]]\nname = \"kernel\"\npath = \"src/startup.rs\"\n\n[profile.dev]\npanic = \"abort\"\n\n[profile.release]\npanic = \"abort\"\n\n[dependencies]\n```\n\n`ldscript.ld`\n```\nOUTPUT_ARCH(aarch64)\n\nENTRY(_start)\n\nMEMORY\n{\n\t/* for qemu(256MiB) */\n\t/* entry point is 0x40000000 */\n\tRAM(xrw) : ORIGIN = 0x40080000 , LENGTH = 0x10000000 - 0x00080000\n}\n\nSECTIONS\n{\t\n\t.text : {\n\t\t__text_start = .;\n\t\t__start = .;\n\t\tKEEP(*(.text.start))\n\t\tKEEP(*(.text.exeption.el2))\n\t\t*(.text*)\n\t\t. = ALIGN(4096);\n\t\t__text_end = .;\n\t} > RAM\n\n\t.rodata : {\n\t\t__rodata_start = .;\n\t\t*(.rodata*)\n\t\t. = ALIGN(4096);\n\t\t__rodata_end = .;\n\t} > RAM\n\n\t.data : {\n\t\t__data_start = . ;\n\t\t*(.data*)\n\t\t. = ALIGN(4096);\n\t\t__data_end = . ;\n\t} > RAM\n\n\t.bss : {\n\t\t__bss_start = . ;\n\t\t*(.bss*)\n\t\t. = ALIGN(4096);\n\t\t__bss_end = . ;\n\t} > RAM\n\n    /* 8MiB space for heap memory */\n\t. = . + (1024 * 1024) * 8;\n\n    __stack_end = .;\n    /* 8MiB space */ \n    __stack_start = __stack_end + (1024 * 1024) * 8;\n\n\n\t/* /DISCARD/ : { *(.debug*) } */\n}\n```\n\n</p>\n</details>\n\n\nI expected to see this happen:\nbuild sccuess\n\nInstead, this happened:\n`SIGSEGV: invalid memory reference`\n\n### Meta\n\n#### macosx\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\n\n`rustc --version --verbose`:\n```\nrustc 1.50.0-nightly (1f5bc176b 2020-12-19)\nbinary: rustc\ncommit-hash: 1f5bc176b0e54a8e464704adcd7e571700207fe9\ncommit-date: 2020-12-19\nhost: x86_64-apple-darwin\nrelease: 1.50.0-nightly\n```\n\n<!--\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\n-->\n<details><summary>Error log(on macos)</summary>\n<p>\n\n```\n$ RUST_BACKTRACE=1 cargo +nightly build --target=aarch64-unknown-none.json\n    Blocking waiting for file lock on build directory\n   Compiling core v0.0.0 (/Users/tnishinaga/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core)\n   Compiling rustc-std-workspace-core v1.99.0 (/Users/tnishinaga/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/rustc-std-workspace-core)\nerror: could not compile `core`\n\nCaused by:\n  process didn't exit successfully: `rustc --crate-name core --edition=2018 /Users/tnishinaga/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C panic=abort -C embed-bitcode=no -C debuginfo=2 -C metadata=0e695d8bdba0e0fe -C extra-filename=-0e695d8bdba0e0fe --out-dir /Users/tnishinaga/tmp/kernel/target/aarch64-unknown-none/debug/deps --target /Users/tnishinaga/tmp/kernel/aarch64-unknown-none.json -Z force-unstable-if-unmarked -L dependency=/Users/tnishinaga/tmp/kernel/target/aarch64-unknown-none/debug/deps -L dependency=/Users/tnishinaga/tmp/kernel/target/debug/deps --cap-lints allow` (signal: 11, SIGSEGV: invalid memory reference)\nwarning: build failed, waiting for other jobs to finish...\nerror: build failed\n```\n\n</p>\n</details>\n\n\n#### linux\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\n\n`rustc +nightly --version --verbose`:\n```\nrustc 1.50.0-nightly (c609b2eaf 2020-12-20)\nbinary: rustc\ncommit-hash: c609b2eaf323186a1167ec1a9ffa69a7d4a5b1b9\ncommit-date: 2020-12-20\nhost: x86_64-unknown-linux-gnu\nrelease: 1.50.0-nightly\n```\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"nasherm\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80268/timeline", "performed_via_github_app": null, "state_reason": null}