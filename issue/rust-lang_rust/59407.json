{"url": "https://api.github.com/repos/rust-lang/rust/issues/59407", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/59407/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/59407/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/59407/events", "html_url": "https://github.com/rust-lang/rust/issues/59407", "id": 424719040, "node_id": "MDU6SXNzdWU0MjQ3MTkwNDA=", "number": 59407, "title": "Cannot implement trait on type alias involving another trait's associated type", "user": {"login": "Ralith", "id": 104558, "node_id": "MDQ6VXNlcjEwNDU1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/104558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ralith", "html_url": "https://github.com/Ralith", "followers_url": "https://api.github.com/users/Ralith/followers", "following_url": "https://api.github.com/users/Ralith/following{/other_user}", "gists_url": "https://api.github.com/users/Ralith/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ralith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ralith/subscriptions", "organizations_url": "https://api.github.com/users/Ralith/orgs", "repos_url": "https://api.github.com/users/Ralith/repos", "events_url": "https://api.github.com/users/Ralith/events{/privacy}", "received_events_url": "https://api.github.com/users/Ralith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-25T04:32:05Z", "updated_at": "2019-05-29T11:52:15Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When trying to implement `From` for nalgebra types, I discovered the following surprising behavior:\r\n\r\ncrate2/src/lib.rs\r\n```rust\r\npub trait Foo {\r\n    type Bar;\r\n}\r\n\r\npub struct Baz;\r\n\r\nimpl Foo for Baz {\r\n    type Bar = ();\r\n}\r\n\r\npub struct Quux<T>(pub T);\r\n\r\npub type Corge = Quux<<Baz as Foo>::Bar>;\r\n```\r\n\r\ncrate1/src/lib.rs\r\n```rust\r\npub struct Grault;\r\n\r\n// this doesn't compile\r\nimpl From<Grault> for crate2::Corge {\r\n    fn from(x: Grault) -> Self {\r\n        Self(())\r\n    }\r\n}\r\n\r\n// but this seemingly equivalent impl works fine\r\nimpl From<Grault> for crate2::Quux<()> {\r\n    fn from(x: Grault) -> Self {\r\n        Self(())\r\n    }\r\n}\r\n```\r\n\r\nError:\r\n```\r\nerror[E0210]: type parameter `<crate2::Baz as crate2::Foo>::Bar` must be used as the type parameter for some local type (e.g. `MyStruct<<crate2::Baz as crate2::Foo>::Bar>`)\r\n --> src/lib.rs:3:1\r\n  |\r\n3 | impl From<Grault> for crate2::Corge {\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `<crate2::Baz as crate2::Foo>::Bar` must be used as the type parameter for some local type\r\n  |\r\n  = note: only traits defined in the current crate can be implemented for a type parameter\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0210`.\r\n```\r\n\r\nThe error occurs no matter which crate the type alias is in. In addition to failing at all here being almost certainly incorrect, the error message is strange; `Foo::Bar` is not a type parameter at all!", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/59407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/59407/timeline", "performed_via_github_app": null, "state_reason": null}