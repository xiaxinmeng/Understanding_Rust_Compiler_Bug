{"url": "https://api.github.com/repos/rust-lang/rust/issues/82333", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82333/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82333/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82333/events", "html_url": "https://github.com/rust-lang/rust/issues/82333", "id": 812650567, "node_id": "MDU6SXNzdWU4MTI2NTA1Njc=", "number": 82333, "title": "`force-frame-pointers` on Windows does not allow directly unwinding", "user": {"login": "Swatinem", "id": 580492, "node_id": "MDQ6VXNlcjU4MDQ5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/580492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Swatinem", "html_url": "https://github.com/Swatinem", "followers_url": "https://api.github.com/users/Swatinem/followers", "following_url": "https://api.github.com/users/Swatinem/following{/other_user}", "gists_url": "https://api.github.com/users/Swatinem/gists{/gist_id}", "starred_url": "https://api.github.com/users/Swatinem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Swatinem/subscriptions", "organizations_url": "https://api.github.com/users/Swatinem/orgs", "repos_url": "https://api.github.com/users/Swatinem/repos", "events_url": "https://api.github.com/users/Swatinem/events{/privacy}", "received_events_url": "https://api.github.com/users/Swatinem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 91598611, "node_id": "MDU6TGFiZWw5MTU5ODYxMQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inline-assembly", "name": "A-inline-assembly", "color": "f7e101", "default": false, "description": "Area: inline asm!(..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 2046313052, "node_id": "MDU6TGFiZWwyMDQ2MzEzMDUy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-asm", "name": "F-asm", "color": "f9c0cc", "default": false, "description": "`#![feature(asm)]` (not `llvm_asm`)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-02-20T16:06:52Z", "updated_at": "2022-02-19T21:07:10Z", "closed_at": "2022-02-19T21:07:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As a learning excercise, I\u2019m trying to build my own stack unwinder, where I first read the `rsp` and `rbp` registers, and later on unwinding from them. (using `-Cforce-frame-pointers=yes` to get base pointers)\r\n\r\n```rust\r\n#![feature(asm)]\r\n\r\nfn main() {\r\n    never()\r\n}\r\n\r\nfn never() {\r\n    gonna()\r\n}\r\nfn gonna() {\r\n    give()\r\n}\r\nfn give() {\r\n    you()\r\n}\r\nfn you() {\r\n    up()\r\n}\r\nfn up() {\r\n    let sp: usize;\r\n    let bp: usize;\r\n    let ip: usize;\r\n    unsafe {\r\n        asm!(\r\n            \"mov {sp}, rsp\",\r\n            \"mov {bp}, rbp\",\r\n            \"lea {ip}, [rip]\",\r\n            sp = out(reg) sp,\r\n            bp = out(reg) bp,\r\n            ip = out(reg) ip,\r\n        );\r\n    }\r\n    trace_stack()\r\n}\r\n\r\nfn trace_stack() {\r\n    let sp: usize;\r\n    let bp: usize;\r\n    let ip: usize;\r\n    unsafe {\r\n        asm!(\r\n            \"mov {sp}, rsp\",\r\n            \"mov {bp}, rbp\",\r\n            \"lea {ip}, [rip]\",\r\n            sp = out(reg) sp,\r\n            bp = out(reg) bp,\r\n            ip = out(reg) ip,\r\n        );\r\n    }\r\n\r\n    let mut ip = ip;\r\n    let mut bp = bp;\r\n    for _ in 0..=5 {\r\n        ip = unsafe { (bp as *const usize).offset(1).read() };\r\n        bp = unsafe { (bp as *const usize).offset(0).read() };\r\n    }\r\n}\r\n```\r\n\r\nWhen compiling this on linux, or in the compiler explorer, I do get the following expected assembly:\r\n\r\n```\r\nexample::up:\r\n        push    rbp\r\n        mov     rbp, rsp\r\n        sub     rsp, 32\r\n\r\n        mov     rax, rsp\r\n        mov     rcx, rbp\r\n        lea     rdx, [rip]\r\n[...]\r\nexample::trace_stack:\r\n        push    rbp\r\n        mov     rbp, rsp\r\n        sub     rsp, 160\r\n\r\n        mov     rax, rsp\r\n        mov     rcx, rbp\r\n        lea     rdx, [rip]\r\n```\r\n\r\nHowever, compiling this on Windows gives me the following disassembly:\r\n\r\n```\r\nexample::up:\r\n        push    rbp\r\n        sub     rsp, 64\r\n        lea     rbp, [rsp + 64]\r\n\r\n        mov     rax, rsp\r\n        mov     rcx, rbp\r\n        lea     rdx, [rip]\r\n[...]\r\nexample::trace_stack:\r\n        push    rbp\r\n        sub     rsp, 192\r\n        lea     rbp, [rsp + 128]\r\n\r\n        mov     rax, rsp\r\n        mov     rcx, rbp\r\n        lea     rdx, [rip]\r\n```\r\n\r\nNotice how the `trace_stack` fn uses different offsets in the `sub` and `lea`. Also surprising that it is using `sub/lea` instead of the `mov/sub` that is generated on linux.\r\n\r\nNot quite sure if this is really a miscompilation, or if I\u2019m doing anything wrong here.\r\n\r\nrustc:\r\n```\r\nrustc 1.52.0-nightly (07194ffcd 2021-02-10)\r\nbinary: rustc\r\ncommit-hash: 07194ffcd25b0871ce560b9f702e52db27ac9f77\r\ncommit-date: 2021-02-10\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.52.0-nightly\r\nLLVM version: 11.0.1\r\n```", "closed_by": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82333/timeline", "performed_via_github_app": null, "state_reason": "completed"}