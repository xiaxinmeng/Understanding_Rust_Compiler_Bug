{"url": "https://api.github.com/repos/rust-lang/rust/issues/107276", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107276/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107276/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107276/events", "html_url": "https://github.com/rust-lang/rust/issues/107276", "id": 1555633293, "node_id": "I_kwDOAAsO6M5cuRSN", "number": 107276, "title": "Windows: Path API Incorrectly Handles Alternate Data Stream Identifiers", "user": {"login": "Measter", "id": 1949879, "node_id": "MDQ6VXNlcjE5NDk4Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1949879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Measter", "html_url": "https://github.com/Measter", "followers_url": "https://api.github.com/users/Measter/followers", "following_url": "https://api.github.com/users/Measter/following{/other_user}", "gists_url": "https://api.github.com/users/Measter/gists{/gist_id}", "starred_url": "https://api.github.com/users/Measter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Measter/subscriptions", "organizations_url": "https://api.github.com/users/Measter/orgs", "repos_url": "https://api.github.com/users/Measter/repos", "events_url": "https://api.github.com/users/Measter/events{/privacy}", "received_events_url": "https://api.github.com/users/Measter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123109, "node_id": "MDU6TGFiZWwxMjMxMDk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows", "name": "O-windows", "color": "6e6ec0", "default": false, "description": "Operating system: Windows"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}, {"id": 2238437210, "node_id": "MDU6TGFiZWwyMjM4NDM3MjEw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-io", "name": "A-io", "color": "f7e101", "default": false, "description": "Area: std::io, std::fs, std::net and std::path"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2023-01-24T20:37:37Z", "updated_at": "2023-03-19T09:40:32Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nOn Windows a file path may contain the name of an alternate data stream, which is provided after the file name with a colon as a separator (e.g. `foo.bar:quux`). The `Path::components`, `Path::file_name`, `Path::extension`, `Path::with_file_name` and `Path::with_extension` functions do not correctly handle this. They treat the stream name as part of the extension. \r\n\r\n```rust\r\n    let p = Path::new(\"foo.bar:quux\");\r\n\r\n    for c in p.components() {\r\n        println!(\"{c:?}\");\r\n    }\r\n\r\n    println!(\"filename: {:?}\", p.file_name());\r\n    println!(\"extension: {:?}\", p.extension());\r\n    println!(\"with_extension: {:?}\", p.with_extension(\"blah\"));\r\n    println!(\"with_file_name: {:?}\", p.with_file_name(\"blah.txt\"));\r\n```\r\n\r\nI expected to see this happen:\r\n\r\n```\r\nNormal(\"foo.bar\")\r\nDataStream(\"quux\") // I'm not sure about this one? But being Normal seems confusable.\r\nfilename: Some(\"foo.bar\")\r\nextension: Some(\"bar\")\r\nwith_extension: \"foo.blah:quux\"\r\nwith_file_name: \"blah.txt:quux\"\r\n```\r\n\r\nInstead, this happened:\r\n\r\n```\r\nNormal(\"foo.bar:quux\")\r\nfilename: Some(\"foo.bar:quux\")\r\nextension: Some(\"bar:quux\")\r\nwith_extension: \"foo.blah\"\r\nwith_file_name: \"blah.txt\"\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.66.1 (90743e729 2023-01-10)\r\nbinary: rustc\r\ncommit-hash: 90743e7298aca107ddaa0c202a4d3604e29bfeb6\r\ncommit-date: 2023-01-10\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.66.1\r\nLLVM version: 15.0.2\r\n```\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107276/timeline", "performed_via_github_app": null, "state_reason": null}