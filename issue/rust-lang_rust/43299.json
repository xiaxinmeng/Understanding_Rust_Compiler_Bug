{"url": "https://api.github.com/repos/rust-lang/rust/issues/43299", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43299/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43299/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43299/events", "html_url": "https://github.com/rust-lang/rust/issues/43299", "id": 243532276, "node_id": "MDU6SXNzdWUyNDM1MzIyNzY=", "number": 43299, "title": "Suboptimal debug codegen in `rand`", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-07-17T21:24:51Z", "updated_at": "2020-01-31T22:51:23Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I found in one of my crates that when compiling in debug mode (`cargo build`) the *largest* function in the whole executable looked like it was [this one](https://github.com/rust-lang-nursery/rand/blob/6ba6aabd580c0be3a34a9b5f8ab5e8591a1d5d7a/src/isaac.rs#L309-L368). That looked pretty innocuous so I dug a little deeper. It turns out that function creates 1000 `alloc` instructions using [this program](https://gist.github.com/alexcrichton/b16c54c93f5135abf4bbf23c4ab98184) as `find.rs` compiling [this source](https://gist.github.com/885e6d0bd72cde4756bb8da4bd0cc0be):\r\n\r\n```\r\n$ rustc +nightly -V\r\nrustc 1.20.0-nightly (b2c070787 2017-07-13)\r\n$ rustc +nightly foo.rs --emit llvm-ir --crate-type lib -Z time-passes && ./find < ./foo.ll\r\n1137 allocas\r\n```\r\n\r\nTrying to winnow it down further [this source](https://gist.github.com/ba7626121c0454da2f576f392b7281b4) contains 337 allocas:\r\n\r\n```\r\n$ rustc +nightly foo.rs --emit llvm-ir --crate-type lib -Z time-passes && ./find < ./foo.ll\r\n337 allocas\r\n```\r\n\r\nFor comparison, [the equivalent C++ program](https://gist.github.com/dc9cf806c197ac82e85e8b6cbbb5432c) (I think? my C++ isn't very good) has only 86 allocas:\r\n\r\n```\r\n$ clang++ -emit-llvm -S foo.cpp -std=c++11 && ./find < ./foo.ll\r\n86 allocas\r\n```\r\n\r\nInterestingly enough the C++ program compiles in ~0.035s whereas the Rust program compiles in ~0.2s, over 4x slower. The major passes in Rust 0.07s in translation, 0.03s in expansion, and 0.01s in item-bodies checking and LLVM passes. As to where the other 0.08s went in `-Z time-passes` I'm not sure!", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43299/timeline", "performed_via_github_app": null, "state_reason": null}