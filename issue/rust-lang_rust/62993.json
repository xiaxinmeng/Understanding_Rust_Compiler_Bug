{"url": "https://api.github.com/repos/rust-lang/rust/issues/62993", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62993/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62993/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62993/events", "html_url": "https://github.com/rust-lang/rust/issues/62993", "id": 473081862, "node_id": "MDU6SXNzdWU0NzMwODE4NjI=", "number": 62993, "title": "Boolean optimization no longer works", "user": {"login": "pedantic79", "id": 11181103, "node_id": "MDQ6VXNlcjExMTgxMTAz", "avatar_url": "https://avatars.githubusercontent.com/u/11181103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pedantic79", "html_url": "https://github.com/pedantic79", "followers_url": "https://api.github.com/users/pedantic79/followers", "following_url": "https://api.github.com/users/pedantic79/following{/other_user}", "gists_url": "https://api.github.com/users/pedantic79/gists{/gist_id}", "starred_url": "https://api.github.com/users/pedantic79/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pedantic79/subscriptions", "organizations_url": "https://api.github.com/users/pedantic79/orgs", "repos_url": "https://api.github.com/users/pedantic79/repos", "events_url": "https://api.github.com/users/pedantic79/events{/privacy}", "received_events_url": "https://api.github.com/users/pedantic79/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-25T21:39:13Z", "updated_at": "2019-08-12T12:44:07Z", "closed_at": "2019-08-12T12:44:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm unsure if this is a bug or not. The following code used to perform just as well as if there were no `let` statements. However, sometime since last year, that has changed.\r\n\r\n```rust\r\npub fn is_leap_year1(year: i32) -> bool {\r\n    let div_4 = year % 4 == 0;\r\n    let div_100 = year % 100 == 0;\r\n    let div_400 = year % 400 == 0;\r\n    div_4 && !(div_100 && !div_400)\r\n}\r\n```\r\n\r\nStarting with rust 1.33, all the modulos are always computed. While in 1.32, it would stop processing if the year was not divisible by 4. Using compiler explorer, I was able to find when `is_leap_year` assembly output changed. ([link to godbolt with assembly output](https://godbolt.org/z/FAUV5o)). \r\n\r\nI wanted to make sure it wasn't a change in LLVM, so I looked at the llvm-ir. The same logic between the llvm-ir and assembly existed. ([link to godbolt with llvm-ir output](https://godbolt.org/z/XKnayZ))\r\n\r\nNext was to determine exactly when this change occurred, `nightly-2018-12-24` had the optimization and `nightly-2018-12-26` did not. Unfortunately, `nightly-2018-12-25` won't install via `rustup`. I was however able to manually download rustc and std, and was able to verify that it is broken then.\r\n\r\n```\r\nroot@2c92852f7036:~# rustc --version\r\nrustc 1.33.0-nightly (f960f377f 2018-12-24)\r\nroot@2c92852f7036:~# rustc --crate-type=lib -C opt-level=3 --emit=llvm-ir leap.rs\r\nroot@2c92852f7036:~# sed -n -e '/is_leap_year1/,/}/ p' leap.ll\r\n; leap::is_leap_year1\r\n; Function Attrs: norecurse nounwind nonlazybind readnone uwtable\r\ndefine zeroext i1 @_ZN4leap13is_leap_year117ha0a43b53679ed341E(i32 %year) unnamed_addr #0 {\r\nstart:\r\n  %0 = and i32 %year, 3\r\n  %1 = icmp eq i32 %0, 0\r\n  %2 = srem i32 %year, 100\r\n  %3 = icmp ne i32 %2, 0\r\n  %4 = srem i32 %year, 400\r\n  %5 = icmp eq i32 %4, 0\r\n  %. = or i1 %5, %3\r\n  %_0.0 = and i1 %1, %.\r\n  ret i1 %_0.0\r\n}\r\n```\r\nSo some commit between these two nightly removed this optimization:\r\n* `rustc 1.33.0-nightly (ddab10a69 2018-12-23)`\r\n* `rustc 1.33.0-nightly (f960f377f 2018-12-24)`", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62993/reactions", "total_count": 10, "+1": 9, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62993/timeline", "performed_via_github_app": null, "state_reason": "completed"}