{"url": "https://api.github.com/repos/rust-lang/rust/issues/44394", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44394/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44394/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44394/events", "html_url": "https://github.com/rust-lang/rust/issues/44394", "id": 256009194, "node_id": "MDU6SXNzdWUyNTYwMDkxOTQ=", "number": 44394, "title": "Consider making `std::time::SystemTime` platform-independent", "user": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 2635892938, "node_id": "MDU6TGFiZWwyNjM1ODkyOTM4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-time", "name": "A-time", "color": "f7e101", "default": false, "description": "Area: Time"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2017-09-07T17:13:29Z", "updated_at": "2022-01-21T14:07:06Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "It was found in https://github.com/rust-lang/rust/pull/44220#issuecomment-327744848 that certain systems in Tier-2 support still uses a 32-bit `time_t`. `SystemTime` on them will suffer from the Year-2038 problem, and also cannot perform arithmetic for a duration >68 years. This introduces a portability hazard, in which on some systems the time arithmetic works normally, and in some more legacy system it suddenly panics.\r\n\r\nThe `SystemTime` struct is a wrapper around [`timespec`](http://en.cppreference.com/w/c/chrono/timespec) on Unix and Redox, and [`FILETIME`](https://msdn.microsoft.com/en-us/library/windows/desktop/ms724284.aspx) on Windows. Nevertheless, the public API involving `SystemTime` never exposes this detail:\r\n\r\n* You cannot construct a `SystemTime` from a `timespec`/`FILETIME`, nor the other way round\r\n* The only place where `SystemTime` interacts with the OS are being returned\r\n\r\n    1. `SystemTime::now`, returning a `SystemTime`\r\n    2. `Metadata::{modified, accessed, created}`, returning an `io::Result<SystemTime>`\r\n\r\n* There are no OS-specific APIs reading a `SystemTime`. \r\n\r\nThis means expanding the precision and range of `SystemTime` is safe. In fact, we could even make the `SystemTime` structure itself platform-agnostic, just like `Duration`:\r\n\r\n```rust\r\nstruct SystemTime {\r\n    secs: i64,\r\n    nanos: u32,\r\n}\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44394/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44394/timeline", "performed_via_github_app": null, "state_reason": null}