{"url": "https://api.github.com/repos/rust-lang/rust/issues/75524", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75524/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75524/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75524/events", "html_url": "https://github.com/rust-lang/rust/issues/75524", "id": 679189814, "node_id": "MDU6SXNzdWU2NzkxODk4MTQ=", "number": 75524, "title": ".rodata bloat with aligned zero sized objects", "user": {"login": "haraldh", "id": 427825, "node_id": "MDQ6VXNlcjQyNzgyNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/427825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haraldh", "html_url": "https://github.com/haraldh", "followers_url": "https://api.github.com/users/haraldh/followers", "following_url": "https://api.github.com/users/haraldh/following{/other_user}", "gists_url": "https://api.github.com/users/haraldh/gists{/gist_id}", "starred_url": "https://api.github.com/users/haraldh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haraldh/subscriptions", "organizations_url": "https://api.github.com/users/haraldh/orgs", "repos_url": "https://api.github.com/users/haraldh/repos", "events_url": "https://api.github.com/users/haraldh/events{/privacy}", "received_events_url": "https://api.github.com/users/haraldh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2020-08-14T14:19:57Z", "updated_at": "2022-12-23T18:05:33Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#![allow(unused_variables, unused_mut)]\r\n\r\n#[repr(align(0x200000))]\r\npub struct Page2MiB;\r\n\r\npub fn main() {\r\n    // Version a: .rodata size <<<<< 0x200000\r\n    let mut slice = [0u8];\r\n\r\n    // Version b: .rodata size > 0x200000\r\n    let mut slice = vec![0u8]; let slice = slice.as_mut_slice();\r\n\r\n    let (pre, middle, post) = unsafe { slice.align_to_mut::<Page2MiB>() };\r\n    dbg!(pre.len(), middle.len(), post.len());\r\n}\r\n```\r\n\r\nEdit: which can be further reduced to:\r\n```rust\r\npub fn main() {\r\n    #[repr(align(0x200000))]\r\n    pub struct Aligned;\r\n    dbg!();\r\n    let slice: &mut [Aligned; 0] = &mut [];\r\n    dbg!(slice.as_ptr());\r\n}\r\n```\r\n\r\nI expected to see this happen:\r\n```console\r\n$ rustc main.rs && size -A main | fgrep .rodata\r\n.rodata                   17449   2097152\r\n```\r\nA reasonable section size of `.rodata`, like if `Version b` is commented out.\r\n\r\nInstead, this happened:\r\n```console\r\n$ rustc main.rs && size -A main | fgrep .rodata\r\n.rodata                 2114473   2097152\r\n```\r\n\r\nA `.rodata` section with over 2MB.\r\n\r\nWith this minimal example, `opt-level` makes it go away, but with more complex code it does not.\r\n\r\nThe culprit is:\r\n```console\r\n$ rustc --emit=asm main.rs && egrep -5 'p2align[[:space:]]+21' main.s\r\n\t.asciz\t\"k\\000\\000\\000\\000\\000\\000\\000[\\004\\000\\000\\035\\000\\000\"\r\n\t.size\t.L__unnamed_3, 24\r\n\r\n\t.type\t.L__unnamed_19,@object\r\n\t.section\t.rodata..L__unnamed_19,\"a\",@progbits\r\n\t.p2align\t21\r\n.L__unnamed_19:\r\n\t.size\t.L__unnamed_19, 0\r\n\r\n\t.type\t.L__unnamed_4,@object\r\n\t.section\t.data.rel.ro..L__unnamed_4,\"aw\",@progbits\r\n```\r\n\r\nSo, we have a zero-sized object, but an alignment was forced.\r\nI don't know, if this is an LLVM bug.\r\n\r\n```console\r\n$ rustc --emit=llvm-ir main.rs && grep 'align 2097152' main.ll\r\n@alloc162 = private unnamed_addr constant <{ [0 x i8] }> zeroinitializer, align 2097152\r\ndefine internal i64 @\"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h52545189b0701658E\"([0 x %Page2MiB]* noalias nonnull readonly align 2097152 %self.0, i64 %self.1) unnamed_addr #1 {\r\n  %_45 = call i64 @\"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h52545189b0701658E\"([0 x %Page2MiB]* noalias nonnull readonly align 2097152 %middle.0, i64 %middle.1)\r\n```\r\n\r\nAgain, zero-sized, but with `align 2097152`.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc --version --verbose\r\nrustc 1.45.2 (d3fb005a3 2020-07-31)\r\nbinary: rustc\r\ncommit-hash: d3fb005a39e62501b8b0b356166e515ae24e2e54\r\ncommit-date: 2020-07-31\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.45.2\r\nLLVM version: 10.0\r\n```\r\n\r\nand nightly:\r\n```\r\n$ rustc +nightly -Vv\r\nrustc 1.47.0-nightly (18f3be770 2020-08-09)\r\nbinary: rustc\r\ncommit-hash: 18f3be7704a4ec7976fcd1272c728974243d29bd\r\ncommit-date: 2020-08-09\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.47.0-nightly\r\nLLVM version: 10.0\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75524/timeline", "performed_via_github_app": null, "state_reason": null}