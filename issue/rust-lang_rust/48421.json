{"url": "https://api.github.com/repos/rust-lang/rust/issues/48421", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48421/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48421/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48421/events", "html_url": "https://github.com/rust-lang/rust/issues/48421", "id": 299251418, "node_id": "MDU6SXNzdWUyOTkyNTE0MTg=", "number": 48421, "title": "Misleading diagnostics for method call", "user": {"login": "Boddlnagg", "id": 1024333, "node_id": "MDQ6VXNlcjEwMjQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1024333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Boddlnagg", "html_url": "https://github.com/Boddlnagg", "followers_url": "https://api.github.com/users/Boddlnagg/followers", "following_url": "https://api.github.com/users/Boddlnagg/following{/other_user}", "gists_url": "https://api.github.com/users/Boddlnagg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Boddlnagg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Boddlnagg/subscriptions", "organizations_url": "https://api.github.com/users/Boddlnagg/orgs", "repos_url": "https://api.github.com/users/Boddlnagg/repos", "events_url": "https://api.github.com/users/Boddlnagg/events{/privacy}", "received_events_url": "https://api.github.com/users/Boddlnagg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-22T07:49:07Z", "updated_at": "2020-04-08T01:08:36Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following (reduced example) code leads to a misleading error message:\r\n\r\n```rust\r\ntrait IsARectangle<T> {}\r\n\r\nstruct GeneralRectangle<T>\r\n{\r\n    x: T\r\n}\r\n\r\nimpl<T> IsARectangle<T> for GeneralRectangle<T> {}\r\n\r\nimpl<U> GeneralRectangle<U> where U: std::ops::Add<Output = U>\r\n{\r\n    fn from<T, R>(_: &R) -> Result<GeneralRectangle<U>, ()>\r\n    where\r\n        R: IsARectangle<T>,\r\n    {\r\n        unimplemented!()\r\n    }\r\n}\r\n\r\nfn box_to_pixel<T, S>( (_, _): (S, S)) -> Result<GeneralRectangle<T>, ()>\r\n// if you enable the following line, it will work:\r\n//where T: std::ops::Add<Output = T>\r\n    {\r\n        GeneralRectangle::<T>::from::<u32, GeneralRectangle<u32>>(&GeneralRectangle::<u32> {\r\n            x: 0,\r\n        })\r\n    }\r\n\r\n\r\nfn main() {\r\n   box_to_pixel::<u32, u32>( (0, 0) );\r\n}\r\n```\r\nThe problem is that the `where`-clause for `box_to_pixel` is missing (it works if it is added), but the compiler instead reports:\r\n\r\n```\r\nerror[E0087]: too many type parameters provided: expected at most 0 type parameters, found 2 type parameters\r\n  --> src\\main.rs:22:39\r\n   |\r\n22 |         GeneralRectangle::<T>::from::<u32, GeneralRectangle<u32>>(&GeneralRectangle::<u32> {\r\n   |                                       ^^^ expected 0 type parameters\r\n\r\nerror[E0277]: the trait bound `std::result::Result<GeneralRectangle<T>, ()>: std::convert::From<&GeneralRectangle<u32>>` is not satisfied\r\n  --> src\\main.rs:22:9\r\n   |\r\n22 |         GeneralRectangle::<T>::from::<u32, GeneralRectangle<u32>>(&GeneralRectangle::<u32> {\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<&GeneralRectangle<u32>>` is not implemented for `std::result::Result<GeneralRectangle<T>, ()>`\r\n   |\r\n   = note: required by `std::convert::From::from`\r\n```\r\n\r\nAs a Rust beginner, who might have not yet heard about `std::convert::From::from`, I would now be really confused, because the `from` method exists (in my code!), and it does expect 2 type parameters, not 0.\r\n\r\nThe error message is better if the `where U: std::ops::Add<Output = U>` is moved from the `impl` block to the `fn from`, so I do understand what the compiler does here (it probably totally disregards the whole `impl` block because its `where` clause is not satisfied), but maybe the situation can be improved anyway?\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48421/timeline", "performed_via_github_app": null, "state_reason": null}