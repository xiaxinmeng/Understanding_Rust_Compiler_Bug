{"url": "https://api.github.com/repos/rust-lang/rust/issues/89222", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89222/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89222/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89222/events", "html_url": "https://github.com/rust-lang/rust/issues/89222", "id": 1006519782, "node_id": "I_kwDOAAsO6M47_kXm", "number": 89222, "title": "Can't automatically convert references to trait objects if target type is behind a generic parameter", "user": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-09-24T14:22:01Z", "updated_at": "2021-10-04T19:17:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Considering the following code\r\n\r\n```rust\r\nfn func_1<'a>(x: impl IntoIterator<Item = &'a dyn std::fmt::Display>) {\r\n}\r\n\r\nfn func_2<const N: usize>(x: [&dyn std::fmt::Display; N]) {\r\n}\r\n\r\nfn main() {\r\n    func_1([&1i32, &1i64]);\r\n    func_2([&1i32, &1i64]);\r\n}\r\n```\r\n\r\nThe first function call fails compiling because the compiler can't figure out that this needs to become a `[&dyn Display]`:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:8:20\r\n  |\r\n8 |     func_1([&1i32, &1i64]);\r\n  |                    ^^^^^ expected `i32`, found `i64`\r\n  |\r\n  = note:   expected type `&i32`\r\n          found reference `&i64`\r\n```\r\n\r\nThis can be worked around by doing `func_1([&1i32 as &dyn std::fmt::Display, &1i64])` but that doesn't seem ideal.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89222/timeline", "performed_via_github_app": null, "state_reason": null}