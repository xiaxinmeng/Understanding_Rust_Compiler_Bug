{"url": "https://api.github.com/repos/rust-lang/rust/issues/28726", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/28726/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/28726/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/28726/events", "html_url": "https://github.com/rust-lang/rust/issues/28726", "id": 108832005, "node_id": "MDU6SXNzdWUxMDg4MzIwMDU=", "number": 28726, "title": "Ask for bringing back the `std::rt::unwind::try`", "user": {"login": "zonyitoo", "id": 1067951, "node_id": "MDQ6VXNlcjEwNjc5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1067951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zonyitoo", "html_url": "https://github.com/zonyitoo", "followers_url": "https://api.github.com/users/zonyitoo/followers", "following_url": "https://api.github.com/users/zonyitoo/following{/other_user}", "gists_url": "https://api.github.com/users/zonyitoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/zonyitoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zonyitoo/subscriptions", "organizations_url": "https://api.github.com/users/zonyitoo/orgs", "repos_url": "https://api.github.com/users/zonyitoo/repos", "events_url": "https://api.github.com/users/zonyitoo/events{/privacy}", "received_events_url": "https://api.github.com/users/zonyitoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-09-29T09:36:33Z", "updated_at": "2015-09-29T15:51:04Z", "closed_at": "2015-09-29T13:38:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since Rust does not have officially support coroutines, so I attempted to made several crates that supports coroutine scheduling and non-blocking I/O.\n- https://github.com/rustcc/coroutine-rs\n- https://github.com/zonyitoo/coio-rs\n- https://github.com/zonyitoo/simplesched\n\nBut these crates requires `std::rt::unwind::try` to catch panics inside coroutines to prevent worker thread to panicking and exiting. But since the latest nightly version of Rust have made `std::rt` to be private, there won't be another way to catch panics ...\n\nSo I am here to ask for suggestions:\n1. Could you bring back the `std::rt` again?\n2. Before the language supported coroutine (the `yield` keyword) is done, is it possible to let `coio-rs` to go into the `std` crate? Just like the `libgreen` before `0.12-dev`. :)\n\nBy the way, `coroutine-rs` also needs the `std::rt::unwind::begin_unwind` to explicitly start unwinding for preventing memory leaks.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/28726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/28726/timeline", "performed_via_github_app": null, "state_reason": "completed"}