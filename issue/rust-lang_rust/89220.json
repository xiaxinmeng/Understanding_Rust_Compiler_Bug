{"url": "https://api.github.com/repos/rust-lang/rust/issues/89220", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89220/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89220/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89220/events", "html_url": "https://github.com/rust-lang/rust/issues/89220", "id": 1006412621, "node_id": "I_kwDOAAsO6M47_KNN", "number": 89220, "title": "\"implement the missing item: \u2026\" suggestion does not substitute type parameter", "user": {"login": "Tamschi", "id": 715360, "node_id": "MDQ6VXNlcjcxNTM2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/715360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tamschi", "html_url": "https://github.com/Tamschi", "followers_url": "https://api.github.com/users/Tamschi/followers", "following_url": "https://api.github.com/users/Tamschi/following{/other_user}", "gists_url": "https://api.github.com/users/Tamschi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tamschi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tamschi/subscriptions", "organizations_url": "https://api.github.com/users/Tamschi/orgs", "repos_url": "https://api.github.com/users/Tamschi/repos", "events_url": "https://api.github.com/users/Tamschi/events{/privacy}", "received_events_url": "https://api.github.com/users/Tamschi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-09-24T12:27:00Z", "updated_at": "2021-11-18T15:53:30Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=0bc82986aeab6421699562569505aa40\r\n\r\n```rust\r\ntrait A<T> {\r\n    fn a(&self) -> &T;\r\n}\r\nstruct B {}\r\n\r\nimpl<T> A<B> for T {} // <-- error[E0046]: not all trait items implemented, missing: `a`\r\n```\r\n\r\nThe current output is:\r\n\r\n(Note: The **whitespace in strings is probably not real** due to my manual JSON prettification.)\r\n\r\n<details><summary>compiler-message json</summary>\r\n\r\n```json\r\n{\r\n    \"reason\": \"compiler-message\",\r\n    \"package_id\": \"scraps-again 0.1.0 (path+file:///C:/Users/Tamme/Documents/Projekte/scraps-again)\",\r\n    \"manifest_path\": \"C:\\\\Users\\\\Tamme\\\\Documents\\\\Projekte\\\\scraps-again\\\\Cargo.toml\",\r\n    \"target\": {\r\n        \"kind\": [\r\n            \"lib\"\r\n        ],\r\n        \"crate_types\": [\r\n            \"lib\"\r\n        ],\r\n        \"name\": \"scraps-again\",\r\n        \"src_path\": \"C:\\\\Users\\\\Tamme\\\\Documents\\\\Projekte\\\\scraps-again\\\\src\\\\lib.rs\",\r\n        \"edition\": \"2018\",\r\n        \"doc\": true,\r\n        \"doctest\": true,\r\n        \"test\": true\r\n    },\r\n    \"message\": {\r\n        \"rendered\": \"error[E0046]: not all trait items implemented, missing: `a`\\n --> src\\\\lib.rs: 6: 1\\n  |\\n2 |     fn a(&self) -> &T;\\n  |     ------------------ `a` from trait\\n...\\n6 | impl<T> A<B> for T {}\\n  | ^^^^^^^^^^^^^^^^^^ missing `a` in implementation\\n\\n\",\r\n        \"children\": [\r\n            {\r\n                \"children\": [],\r\n                \"code\": null,\r\n                \"level\": \"help\",\r\n                \"message\": \"implement the missing item: `fn a(&self) -> &T { todo!()            }`\",\r\n                \"rendered\": null,\r\n                \"spans\": [\r\n                    {\r\n                        \"byte_end\": 71,\r\n                        \"byte_start\": 71,\r\n                        \"column_end\": 21,\r\n                        \"column_start\": 21,\r\n                        \"expansion\": null,\r\n                        \"file_name\": \"src\\\\lib.rs\",\r\n                        \"is_primary\": true,\r\n                        \"label\": null,\r\n                        \"line_end\": 6,\r\n                        \"line_start\": 6,\r\n                        \"suggested_replacement\": \"fn a(&self) -> &T { todo!()                    }\\n\",\r\n                        \"suggestion_applicability\": \"HasPlaceholders\",\r\n                        \"text\": [\r\n                            {\r\n                                \"highlight_end\": 21,\r\n                                \"highlight_start\": 21,\r\n                                \"text\": \"impl<T> A<B> for T {}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"code\": {\r\n            \"code\": \"E0046\",\r\n            \"explanation\": \"Items are missing in a trait implementation.\\n\\nErroneous code example:\\n\\n```compile_fail,E0046\\ntrait Foo {\\n    fn foo();\\n        }\\n\\nstruct Bar;\\n\\nimpl Foo for Bar {}\\n // error: not all trait items implemented, missing: `foo`\\n```\\n\\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\\nprovide implementations for all of `Foo`'s required methods (meaning the\\nmethods that do not have default implementations), as well as any required\\ntrait items like associated types or constants. Example:\\n\\n```\\ntrait Foo {\\n    fn foo();\\n}\\n\\nstruct Bar;\\n\\nimpl Foo for Bar {\\n    fn foo() {} // ok!\\n}\\n```\\n\"\r\n        },\r\n        \"level\": \"error\",\r\n        \"message\": \"not all trait items implemented, missing: `a`\",\r\n        \"spans\": [\r\n            {\r\n                \"byte_end\": 69,\r\n                \"byte_start\": 51,\r\n                \"column_end\": 19,\r\n                \"column_start\": 1,\r\n                \"expansion\": null,\r\n                \"file_name\": \"src\\\\lib.rs\",\r\n                \"is_primary\": true,\r\n                \"label\": \"missing `a` in implementation\",\r\n                \"line_end\": 6,\r\n                \"line_start\": 6,\r\n                \"suggested_replacement\": null,\r\n                \"suggestion_applicability\": null,\r\n                \"text\": [\r\n                    {\r\n                        \"highlight_end\": 19,\r\n                        \"highlight_start\": 1,\r\n                        \"text\": \"impl<T> A<B> for T {}\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"byte_end\": 35,\r\n                \"byte_start\": 17,\r\n                \"column_end\": 23,\r\n                \"column_start\": 5,\r\n                \"expansion\": null,\r\n                \"file_name\": \"src\\\\lib.rs\",\r\n                \"is_primary\": false,\r\n                \"label\": \"`a` from trait\",\r\n                \"line_end\": 2,\r\n                \"line_start\": 2,\r\n                \"suggested_replacement\": null,\r\n                \"suggestion_applicability\": null,\r\n                \"text\": [\r\n                    {\r\n                        \"highlight_end\": 23,\r\n                        \"highlight_start\": 5,\r\n                        \"text\": \"    fn a(&self) -> &T;\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\n</details>\r\n\r\n(with `\"suggested_replacement\": \"fn a(&self) -> &T { todo!()                    }\\n\"` and its message being invalid)\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\n\r\n<details><summary>compiler-message json</summary>\r\n\r\n```json\r\n{\r\n    \"reason\": \"compiler-message\",\r\n    \"package_id\": \"scraps-again 0.1.0 (path+file:///C:/Users/Tamme/Documents/Projekte/scraps-again)\",\r\n    \"manifest_path\": \"C:\\\\Users\\\\Tamme\\\\Documents\\\\Projekte\\\\scraps-again\\\\Cargo.toml\",\r\n    \"target\": {\r\n        \"kind\": [\r\n            \"lib\"\r\n        ],\r\n        \"crate_types\": [\r\n            \"lib\"\r\n        ],\r\n        \"name\": \"scraps-again\",\r\n        \"src_path\": \"C:\\\\Users\\\\Tamme\\\\Documents\\\\Projekte\\\\scraps-again\\\\src\\\\lib.rs\",\r\n        \"edition\": \"2018\",\r\n        \"doc\": true,\r\n        \"doctest\": true,\r\n        \"test\": true\r\n    },\r\n    \"message\": {\r\n        \"rendered\": \"error[E0046]: not all trait items implemented, missing: `a`\\n --> src\\\\lib.rs: 6: 1\\n  |\\n2 |     fn a(&self) -> &T;\\n  |     ------------------ `a` from trait\\n...\\n6 | impl<T> A<B> for T {}\\n  | ^^^^^^^^^^^^^^^^^^ missing `a` in implementation\\n\\n\",\r\n        \"children\": [\r\n            {\r\n                \"children\": [],\r\n                \"code\": null,\r\n                \"level\": \"help\",\r\n                \"message\": \"implement the missing item: `fn a(&self) -> &B { todo!()            }`\",\r\n                \"rendered\": null,\r\n                \"spans\": [\r\n                    {\r\n                        \"byte_end\": 71,\r\n                        \"byte_start\": 71,\r\n                        \"column_end\": 21,\r\n                        \"column_start\": 21,\r\n                        \"expansion\": null,\r\n                        \"file_name\": \"src\\\\lib.rs\",\r\n                        \"is_primary\": true,\r\n                        \"label\": null,\r\n                        \"line_end\": 6,\r\n                        \"line_start\": 6,\r\n                        \"suggested_replacement\": \"fn a(&self) -> &B { todo!()                    }\\n\",\r\n                        \"suggestion_applicability\": \"HasPlaceholders\",\r\n                        \"text\": [\r\n                            {\r\n                                \"highlight_end\": 21,\r\n                                \"highlight_start\": 21,\r\n                                \"text\": \"impl<T> A<B> for T {}\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"code\": {\r\n            \"code\": \"E0046\",\r\n            \"explanation\": \"Items are missing in a trait implementation.\\n\\nErroneous code example:\\n\\n```compile_fail,E0046\\ntrait Foo {\\n    fn foo();\\n        }\\n\\nstruct Bar;\\n\\nimpl Foo for Bar {}\\n // error: not all trait items implemented, missing: `foo`\\n```\\n\\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\\nprovide implementations for all of `Foo`'s required methods (meaning the\\nmethods that do not have default implementations), as well as any required\\ntrait items like associated types or constants. Example:\\n\\n```\\ntrait Foo {\\n    fn foo();\\n}\\n\\nstruct Bar;\\n\\nimpl Foo for Bar {\\n    fn foo() {} // ok!\\n}\\n```\\n\"\r\n        },\r\n        \"level\": \"error\",\r\n        \"message\": \"not all trait items implemented, missing: `a`\",\r\n        \"spans\": [\r\n            {\r\n                \"byte_end\": 69,\r\n                \"byte_start\": 51,\r\n                \"column_end\": 19,\r\n                \"column_start\": 1,\r\n                \"expansion\": null,\r\n                \"file_name\": \"src\\\\lib.rs\",\r\n                \"is_primary\": true,\r\n                \"label\": \"missing `a` in implementation\",\r\n                \"line_end\": 6,\r\n                \"line_start\": 6,\r\n                \"suggested_replacement\": null,\r\n                \"suggestion_applicability\": null,\r\n                \"text\": [\r\n                    {\r\n                        \"highlight_end\": 19,\r\n                        \"highlight_start\": 1,\r\n                        \"text\": \"impl<T> A<B> for T {}\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"byte_end\": 35,\r\n                \"byte_start\": 17,\r\n                \"column_end\": 23,\r\n                \"column_start\": 5,\r\n                \"expansion\": null,\r\n                \"file_name\": \"src\\\\lib.rs\",\r\n                \"is_primary\": false,\r\n                \"label\": \"`a` from trait\",\r\n                \"line_end\": 2,\r\n                \"line_start\": 2,\r\n                \"suggested_replacement\": null,\r\n                \"suggestion_applicability\": null,\r\n                \"text\": [\r\n                    {\r\n                        \"highlight_end\": 23,\r\n                        \"highlight_start\": 5,\r\n                        \"text\": \"    fn a(&self) -> &T;\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\n</details>\r\n\r\n(with `\"suggested_replacement\": \"fn a(&self) -> &B { todo!()                    }\\n\"` and its message being valid)\r\n\r\n- - -\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\nThis seems like something the compiler could in theory take care of, and it's not always immediately clear to the programmer (that is: me) why exactly there's an error highlighted if there's another `T` like in the example above.\r\n\r\nThat said, the error message resulting from the invalid suggestion already does a fairly decent job of pointing out the fix here, and the suggestion there (\"change the output type to match the trait: `&B`\") is correct.\r\n\r\n- - -\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n\r\nI first misfiled this as https://github.com/rust-analyzer/rust-analyzer/issues/10327 after reporting https://github.com/rust-analyzer/rust-analyzer/issues/10326. If the generic type parameter is expanded to something like `dyn 'a + Trait`, it would also need to be parenthesised in some cases.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89220/timeline", "performed_via_github_app": null, "state_reason": null}