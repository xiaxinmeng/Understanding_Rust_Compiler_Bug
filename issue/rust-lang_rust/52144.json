{"url": "https://api.github.com/repos/rust-lang/rust/issues/52144", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52144/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52144/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52144/events", "html_url": "https://github.com/rust-lang/rust/issues/52144", "id": 339171807, "node_id": "MDU6SXNzdWUzMzkxNzE4MDc=", "number": 52144, "title": "Non-public tuple fields causes confusing error message when crossing module boundaries", "user": {"login": "KallDrexx", "id": 139393, "node_id": "MDQ6VXNlcjEzOTM5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/139393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KallDrexx", "html_url": "https://github.com/KallDrexx", "followers_url": "https://api.github.com/users/KallDrexx/followers", "following_url": "https://api.github.com/users/KallDrexx/following{/other_user}", "gists_url": "https://api.github.com/users/KallDrexx/gists{/gist_id}", "starred_url": "https://api.github.com/users/KallDrexx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KallDrexx/subscriptions", "organizations_url": "https://api.github.com/users/KallDrexx/orgs", "repos_url": "https://api.github.com/users/KallDrexx/repos", "events_url": "https://api.github.com/users/KallDrexx/events{/privacy}", "received_events_url": "https://api.github.com/users/KallDrexx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 66893153, "node_id": "MDU6TGFiZWw2Njg5MzE1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-visibility", "name": "A-visibility", "color": "f7e101", "default": false, "description": "Area: visibility/privacy modifiers such as `pub`"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-07T20:16:03Z", "updated_at": "2023-01-12T20:05:12Z", "closed_at": "2023-01-12T20:05:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nmod first {\r\n    #[derive(Debug)]\r\n    pub struct SomeId(u32);    \r\n}\r\n\r\nmod second {\r\n    use ::first::SomeId;\r\n\r\n    #[derive(Debug)]    \r\n    pub enum MyEnum {\r\n        Variant1 {\r\n            id: SomeId\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    use first::SomeId;\r\n    use second::MyEnum;\r\n\r\n    let test = MyEnum::Variant1 {\r\n        id: SomeId(32),\r\n    };\r\n    \r\n    println!(\"{:?}\", test);\r\n}\r\n```\r\n\r\nThis gave me the following error message:\r\n\r\n```\r\nerror[E0423]: expected function, found struct `SomeId`\r\n  --> src/main.rs:22:13\r\n   |\r\n22 |         id: SomeId(32),\r\n   |             ^^^^^^\r\n   |             |\r\n   |             did you mean `Some`?\r\n   |             constructor is not visible here due to private fields\r\nhelp: possible better candidate is found in another module, you can import it into scope\r\n   |\r\n1  | use first::SomeId;\r\n   |\r\n```\r\n\r\nIt turns out the fix for this was to change my struct definition to `pub struct SomeId(pub u32);`.  This was not obvious to me for several reasons:\r\n\r\n1. The `expected function, found struct SomeId` is odd because that's what I'm trying to perform, so it appears like it's erroring because it's doing what I want.\r\n1. The suggestion for the use statement is completely incorrect, as that use statement already exists and won't fix the problem\r\n1. The `constructor is not visible here due to private fields` didn't make sense to me as the rust book never gives an example of the `Struct(pub fieldType)` syntax, so I assumed tuple fields had the same visibility as the struct itself.\r\n\r\nIt probably needs a recommendation for tuple structs to show that all fields should be marked as `pub`", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52144/reactions", "total_count": 9, "+1": 9, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52144/timeline", "performed_via_github_app": null, "state_reason": "completed"}