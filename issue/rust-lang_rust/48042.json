{"url": "https://api.github.com/repos/rust-lang/rust/issues/48042", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48042/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48042/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48042/events", "html_url": "https://github.com/rust-lang/rust/issues/48042", "id": 294975926, "node_id": "MDU6SXNzdWUyOTQ5NzU5MjY=", "number": 48042, "title": "with #![no_std] enabled, 'panic!(\"{{}}\")' and 'panic!(\"{{}}\",)' are different", "user": {"login": "ExpHP", "id": 1411280, "node_id": "MDQ6VXNlcjE0MTEyODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1411280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExpHP", "html_url": "https://github.com/ExpHP", "followers_url": "https://api.github.com/users/ExpHP/followers", "following_url": "https://api.github.com/users/ExpHP/following{/other_user}", "gists_url": "https://api.github.com/users/ExpHP/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExpHP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExpHP/subscriptions", "organizations_url": "https://api.github.com/users/ExpHP/orgs", "repos_url": "https://api.github.com/users/ExpHP/repos", "events_url": "https://api.github.com/users/ExpHP/events{/privacy}", "received_events_url": "https://api.github.com/users/ExpHP/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-07T01:37:05Z", "updated_at": "2018-02-28T10:02:29Z", "closed_at": "2018-02-28T10:02:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Discovered while trying to implement fixes for #46241.  Possible back-compat hazard for trailing comma support, but hopefully not.\r\n\r\n[**libstd/macros.rs**](https://github.com/rust-lang/rust/blob/bd98fe0c0560/src/libstd/macros.rs#L64-L75)\r\n```rust\r\nmacro_rules! panic {\r\n    () => (/* default message */);\r\n    ($msg:expr) => (/* use msg as literal */);\r\n    ($fmt:expr, $($arg:tt)+) => (/* use format_args! */);\r\n}\r\n```\r\n\r\n[**libcore/macros.rs**](https://github.com/rust-lang/rust/blob/bd98fe0c0560/src/libcore/macros.rs#L12-L26)\r\n```rust\r\nmacro_rules! panic {\r\n    () => (/* default message */);\r\n    ($msg:expr) => (/* use msg as literal */);\r\n    ($fmt:expr, $($arg:tt)*) => (/* use format_args! */);\r\n}\r\n```\r\n\r\nCan you spot the difference?\r\n\r\n---\r\n\r\nThe definition in std fails to support trailing commas after a single string literal:\r\n\r\n```rust\r\nfn main() {\r\n    panic!(\"a\");\r\n    panic!(\"a\",); //~ ERROR unexpected end of macro invocation\r\n    \r\n    panic!(\"{}\");\r\n    panic!(\"{}\",); //~ ERROR unexpected end of macro invocation\r\n}\r\n```\r\n\r\nThe definition in core accepts a trailing comma, but follows a completely different code-path with potentially different semantics.\r\n\r\n```rust\r\n#![no_std]\r\n\r\nfn main() {\r\n    panic!(\"a\");\r\n    panic!(\"a\",);\r\n    \r\n    panic!(\"{}\");\r\n    panic!(\"{}\",); //~ ERROR 1 positional argument in format string, but no arguments were given\r\n}\r\n```\r\n\r\n---\r\n\r\n~Fortuitously, it seems to me that it libcore's definition produces equivalent behavior for `panic!(<literal>,)` and `panic!(<literal>)` in all cases *where both forms successfully compile,* meaning it should hopefully be safe to change `panic!(<literal>,)` to behave like `panic!(<literal>)`.~", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48042/timeline", "performed_via_github_app": null, "state_reason": "completed"}