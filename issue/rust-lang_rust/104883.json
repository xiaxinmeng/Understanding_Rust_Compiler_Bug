{"url": "https://api.github.com/repos/rust-lang/rust/issues/104883", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104883/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104883/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104883/events", "html_url": "https://github.com/rust-lang/rust/issues/104883", "id": 1464558350, "node_id": "I_kwDOAAsO6M5XS2MO", "number": 104883, "title": "Future non-Send although non-Send local is dropped before .await", "user": {"login": "hniksic", "id": 1078190, "node_id": "MDQ6VXNlcjEwNzgxOTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1078190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hniksic", "html_url": "https://github.com/hniksic", "followers_url": "https://api.github.com/users/hniksic/followers", "following_url": "https://api.github.com/users/hniksic/following{/other_user}", "gists_url": "https://api.github.com/users/hniksic/gists{/gist_id}", "starred_url": "https://api.github.com/users/hniksic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hniksic/subscriptions", "organizations_url": "https://api.github.com/users/hniksic/orgs", "repos_url": "https://api.github.com/users/hniksic/repos", "events_url": "https://api.github.com/users/hniksic/events{/privacy}", "received_events_url": "https://api.github.com/users/hniksic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-11-25T13:33:45Z", "updated_at": "2023-01-28T22:18:21Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Rust 1.65 doesn't compile this code:\r\n\r\n```rust\r\nfn main() {\r\n    tokio::spawn(async move {\r\n        let non_send = get_non_send();\r\n        drop(non_send);\r\n        tokio::time::sleep(std::time::Duration::from_secs(1)).await;\r\n    });\r\n}\r\n\r\nfn get_non_send() -> Box<dyn std::io::Read> {\r\n    unimplemented!()\r\n}\r\n```\r\n[Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=a557b2d660dddba8ab7832fad2e5bd0a)\r\n\r\nIt complains that the future is not `Send`, reporting the following:\r\n\r\n```none\r\nerror: future cannot be sent between threads safely\r\n   --> src/main.rs:4:18\r\n    |\r\n4   |       tokio::spawn(async move {\r\n    |  __________________^\r\n5   | |         let non_send = get_non_send();\r\n6   | |         drop(non_send);\r\n7   | |         tokio::time::sleep(std::time::Duration::from_secs(1)).await;\r\n8   | |     });\r\n    | |_____^ future created by async block is not `Send`\r\n    |\r\n    = help: the trait `Send` is not implemented for `dyn std::io::Read`\r\nnote: future is not `Send` as this value is used across an await\r\n   --> src/main.rs:7:62\r\n    |\r\n5   |         let non_send = get_non_send();\r\n    |             -------- has type `Box<dyn std::io::Read>` which is not `Send`\r\n6   |         drop(non_send);\r\n7   |         tokio::time::sleep(std::time::Duration::from_secs(1)).await;\r\n    |                                                              ^^^^^^ await occurs here, with `non_send` maybe used later\r\n8   |     });\r\n    |     - `non_send` is later dropped here\r\nnote: required by a bound in `tokio::spawn`\r\n   --> /playground/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.22.0/src/task/spawn.rs:163:21\r\n    |\r\n163 |         T: Future + Send + 'static,\r\n    |                     ^^^^ required by this bound in `tokio::spawn`\r\n```\r\n\r\nI would expect it to compile, since the offending non-Send value is unconditionally dropped before `.await`.\r\n\r\nIf I change `drop(non_send)` to a block that makes it go out of scope, then it compiles:\r\n\r\n```rust\r\n    tokio::spawn(async move {\r\n        {\r\n            let non_send = get_non_send();\r\n        }\r\n        tokio::time::sleep(std::time::Duration::from_secs(1)).await;\r\n    });\r\n```\r\n[Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=32645878ebe1ef46149862c2c44e48aa)\r\n\r\nAs shown, the first example can be trivially transformed to use a scope, but in other situations it might not be as easy. This report is inspired by [a post on reddit](https://www.reddit.com/r/rust/comments/z47y6p/am_i_missing_something_or_is_it_rustc/) that described this issue in a slightly more complex scenario.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104883/reactions", "total_count": 5, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104883/timeline", "performed_via_github_app": null, "state_reason": null}