{"url": "https://api.github.com/repos/rust-lang/rust/issues/28894", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/28894/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/28894/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/28894/events", "html_url": "https://github.com/rust-lang/rust/issues/28894", "id": 110318233, "node_id": "MDU6SXNzdWUxMTAzMTgyMzM=", "number": 28894, "title": "Rust tries to be too helpful with impl suggestions, sometimes being unhelpful", "user": {"login": "sgrif", "id": 1529387, "node_id": "MDQ6VXNlcjE1MjkzODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgrif", "html_url": "https://github.com/sgrif", "followers_url": "https://api.github.com/users/sgrif/followers", "following_url": "https://api.github.com/users/sgrif/following{/other_user}", "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions", "organizations_url": "https://api.github.com/users/sgrif/orgs", "repos_url": "https://api.github.com/users/sgrif/repos", "events_url": "https://api.github.com/users/sgrif/events{/privacy}", "received_events_url": "https://api.github.com/users/sgrif/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1484153989, "node_id": "MDU6TGFiZWwxNDg0MTUzOTg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-on_unimplemented", "name": "F-on_unimplemented", "color": "f9c0cc", "default": false, "description": "Error messages that can be tackled with `#[rustc_on_unimplemented]`"}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 29, "created_at": "2015-10-07T21:15:23Z", "updated_at": "2023-03-15T03:07:46Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[This code example](http://is.gd/riFsRe) is a simplified extraction of part of the hierarchy that I'm working on for https://github.com/sgrif/yaqb. It's still a bit contrived, but I think it really gets the point across about how unhelpful/nonsensical the resulting error message is. \n\nThe type structure goes like this: `AsExpression` represents a type which can be converted to an `Expression` which would return a given type. `Expression` represents... well, an expression. `AsExpression` gets a blanket impl for any type which implements `Expression`. `Column` represents a concrete column (which in the real code has other things associated to it). Ultimately the column has a type, and can be used as an expression of that type. Any type that implements `Column` gets a blanket impl for `Expression`.\n\nIn `main`, we're trying to compare a column representing an `i32`, to a `str`. This is incorrect, and should fail to compile. However, the error message we get out of this is:\n\n> error: the trait `Column` is not implemented for the type `&str` [E0277]\n\nIn the context of a SQL database, and what `Column` means, this is a nonsense error, and would not be helpful to the user in seeing why their code is failing to compile. Rust is just being super clever and realizing that the blanket impls would apply if we just implement that instead. I'd like to propose changing the error message to something with a bit more information, such as:\n\n> error: the trait `AsExpression<i32>` is not implemented for the type `&str` [E0277]\n> \n> A blanket implementation of `AsExpression`, located at <file_path>:<line_number> could apply if `Column` were implemented for the type `&str`\n", "closed_by": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/28894/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/28894/timeline", "performed_via_github_app": null, "state_reason": null}