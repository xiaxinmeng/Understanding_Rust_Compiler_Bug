{"url": "https://api.github.com/repos/rust-lang/rust/issues/53092", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53092/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53092/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53092/events", "html_url": "https://github.com/rust-lang/rust/issues/53092", "id": 347705347, "node_id": "MDU6SXNzdWUzNDc3MDUzNDc=", "number": 53092, "title": "FullfillmentError ICE with const fn and existential type", "user": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 178802147, "node_id": "MDU6TGFiZWwxNzg4MDIxNDc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-needs-decision", "name": "I-needs-decision", "color": "e11d21", "default": false, "description": "Issues in need of decision."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-08-05T15:02:54Z", "updated_at": "2022-05-13T13:36:15Z", "closed_at": "2022-05-13T13:36:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Again something that is highly unlikely to ever be found in real code, but nonetheless ICE's:\r\n\r\nMCVE: https://github.com/rust-lang/rust/issues/53092#issuecomment-772888878\r\n\r\n```Rust\r\n#![feature(const_fn)]\r\n#![feature(existential_type)]\r\n#![feature(untagged_unions)]\r\n\r\nconst fn transmute<T, U>(t: T) -> U {\r\n    union Transform<TT, UU> {\r\n        t: TT,\r\n        u: UU,\r\n    }\r\n    \r\n    unsafe { Transform { t }.u }\r\n}\r\n\r\n\r\nexistential type Foo<F, U>: Fn(F) -> U + Copy;\r\n\r\nconst BAZR: Foo<u8, ()> = transmute(|x: ()| { x });\r\n\r\nfn bar<T, U: From<T>>() -> Foo<T, U> { |x| x.into() }\r\n\r\nfn main() {\r\n    let x = BAZR(0);\r\n}\r\n```\r\n\r\nPlayground: https://play.rust-lang.org/?gist=47ee8d54d29329821783e315423aa352&version=nightly&mode=release&edition=2015\r\n\r\n<details>\r\n<summary>Backtrace:</summary>\r\n\r\n```\r\nerror: internal compiler error: librustc/traits/codegen/mod.rs:169: Encountered errors `[FulfillmentError(Obligation(predicate=Binder(TraitPredicate(<() as std::convert::From<u8>>)),depth=1),Unimplemented)]` resolving bounds after type-checking\r\n\r\nthread 'main' panicked at 'Box<Any>', librustc_errors/lib.rs:516:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:479\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::span_bug\r\n   8: rustc::session::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::session::opt_span_bug_fmt\r\n  13: rustc::session::span_bug_fmt\r\n  14: rustc::traits::codegen::<impl rustc::infer::InferCtxt<'a, 'gcx, 'tcx>>::drain_fulfillment_cx_or_panic\r\n  15: rustc::ty::context::tls::with_related_context\r\n  16: rustc::traits::codegen::codegen_fulfill_obligation\r\n  17: rustc::ty::query::__query_compute::codegen_fulfill_obligation\r\n  18: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::codegen_fulfill_obligation<'tcx>>::compute\r\n  19: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  20: rustc::ty::context::tls::with_related_context\r\n  21: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  22: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  23: rustc::ty::instance::Instance::resolve\r\n  24: rustc_mir::monomorphize::collector::visit_fn_use\r\n  25: <rustc_mir::monomorphize::collector::MirNeighborCollector<'a, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_terminator_kind\r\n  26: rustc_mir::monomorphize::collector::collect_items_rec\r\n  27: rustc_mir::monomorphize::collector::collect_items_rec\r\n  28: rustc_mir::monomorphize::collector::collect_crate_mono_items::{{closure}}\r\n  29: rustc::util::common::time\r\n  30: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  31: rustc::util::common::time\r\n  32: rustc_codegen_llvm::base::collect_and_partition_mono_items\r\n  33: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::collect_and_partition_mono_items<'tcx>>::compute\r\n  34: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  35: rustc::ty::context::tls::with_related_context\r\n  36: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  37: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  38: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate\r\n  39: rustc::util::common::time\r\n  40: rustc_driver::driver::phase_4_codegen\r\n  41: rustc_driver::driver::compile_input::{{closure}}\r\n  42: rustc::ty::context::tls::enter_context\r\n  43: <std::thread::local::LocalKey<T>>::with\r\n  44: rustc::ty::context::TyCtxt::create_and_enter\r\n  45: rustc_driver::driver::compile_input\r\n  46: rustc_driver::run_compiler_with_pool\r\n  47: <scoped_tls::ScopedKey<T>>::set\r\n  48: syntax::with_globals\r\n  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  50: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:105\r\n  51: rustc_driver::run\r\n  52: rustc_driver::main\r\n  53: std::rt::lang_start::{{closure}}\r\n  54: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  55: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:105\r\n  56: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:392\r\n             at libstd/rt.rs:58\r\n  57: main\r\n  58: __libc_start_main\r\n  59: <unknown>\r\nquery stack during panic:\r\n#0 [codegen_fulfill_obligation] checking if `std::convert::Into` fulfills its obligations\r\n#1 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.30.0-nightly (3edb355b7 2018-08-03) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C opt-level=3 -C codegen-units=1 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n</details>\r\n\r\nChanging\r\n```Rust\r\nfn bar<T, U: From<T>>() -> Foo<T, U> { |x| x.into() }\r\n```\r\n\r\nto\r\n\r\n ```Rust\r\nfn bar<T, U: From<T>>() -> Foo<T, U> { |x| U::from(x) }\r\n```\r\n\r\nalso ICE's but with a different message:\r\n```\r\nerror: internal compiler error: librustc/traits/codegen/mod.rs:68: Encountered error `Unimplemented` selecting `Binder(<() as std::convert::From<u8>>)` during codegen`\r\n```\r\n\r\nRemoving the `Copy` from the existential type, gives the same ICE as https://github.com/rust-lang/rust/issues/53087", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53092/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53092/timeline", "performed_via_github_app": null, "state_reason": "completed"}