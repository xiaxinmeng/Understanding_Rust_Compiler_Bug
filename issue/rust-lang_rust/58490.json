{"url": "https://api.github.com/repos/rust-lang/rust/issues/58490", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58490/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58490/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58490/events", "html_url": "https://github.com/rust-lang/rust/issues/58490", "id": 410785717, "node_id": "MDU6SXNzdWU0MTA3ODU3MTc=", "number": 58490, "title": "ICE when using cfg_if and defining a macro with macro_rules twice.", "user": {"login": "theypsilon", "id": 852246, "node_id": "MDQ6VXNlcjg1MjI0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/852246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theypsilon", "html_url": "https://github.com/theypsilon", "followers_url": "https://api.github.com/users/theypsilon/followers", "following_url": "https://api.github.com/users/theypsilon/following{/other_user}", "gists_url": "https://api.github.com/users/theypsilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/theypsilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theypsilon/subscriptions", "organizations_url": "https://api.github.com/users/theypsilon/orgs", "repos_url": "https://api.github.com/users/theypsilon/repos", "events_url": "https://api.github.com/users/theypsilon/events{/privacy}", "received_events_url": "https://api.github.com/users/theypsilon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-15T14:09:50Z", "updated_at": "2020-03-13T22:24:31Z", "closed_at": "2020-03-13T22:24:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Compiler crash when using cfg_if and defining a macro with macro_rules twice.\r\n\r\nI tried this code:\r\n\r\n```rust\r\n// file lib.rs\r\n#[macro_use]\r\nextern crate cfg_if;\r\n\r\nmod test;\r\nmod foo;\r\n\r\n// file foo.rs\r\ncfg_if! {\r\n    if #[cfg(unix)] {\r\n#[macro_export]\r\nmacro_rules! foo {\r\n    ( $x:expr, $y:expr ) => {\r\n        ($x + $y)\r\n    };\r\n}\r\n    }\r\n}\r\n\r\n#[macro_export]\r\nmacro_rules! foo {\r\n    ( $x:expr, $y:expr ) => {\r\n        ($x + $y)\r\n    };\r\n}\r\n\r\n//file test.rs\r\nuse crate::foo;\r\n\r\n#[test]\r\nfn test_true() {\r\n    assert_eq!(foo!(1, 2), 3);\r\n}\r\n```\r\n\r\nIn a repo: https://github.com/theypsilon/rust-bug-crash-cfg-if-macro\r\n\r\nI expected to see this happen:\r\n\r\n`\r\nerror: a macro named `foo` has already been exported\r\n`\r\n\r\nInstead, this happened:\r\n\r\n`\r\nerror: internal compiler error: unexpected panic\r\n`\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n\r\n```bash\r\nrustc 1.32.0-beta.1 (eb53c1039 2018-12-05)\r\nbinary: rustc\r\ncommit-hash: eb53c1039300a8bc8f8e4b29659ddc80b1e81b68\r\ncommit-date: 2018-12-05\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.32.0-beta.1\r\nLLVM version: 8.0\r\n```\r\n\r\nBacktrace:\r\n\r\n```bash\r\n   Compiling rust-bug v0.1.0 (/mnt/c/Users/Jose/Documents/Workspace/rust-bug)\r\nthread 'rustc' panicked at 'src/librustc_resolve/resolve_imports.rs:941: inconsistent resolution for an import', src/librustc/util/bug.rs:47:26\r\nthread 'rustc' panicked at 'src/librustc_resolve/resolve_imports.rs:941: inconsistent resolution for an import', src/librustc/util/bug.rs:47:26\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n             at src/libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:495\r\n   6: std::panicking::begin_panic\r\n   7: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   8: rustc::ty::context::tls::with_opt::{{closure}}\r\n   9: rustc::ty::context::tls::with_context_opt\r\n  10: rustc::ty::context::tls::with_opt\r\n  11: rustc::util::bug::opt_span_bug_fmt\r\n  12: rustc::util::bug::span_bug_fmt\r\n  13: rustc_resolve::resolve_imports::ImportResolver::finalize_import::{{closure}}\r\n  14: rustc_resolve::resolve_imports::ImportResolver::finalize_imports\r\n  15: rustc_resolve::Resolver::resolve_crate\r\n  16: rustc::util::common::time\r\n  17: rustc_driver::driver::phase_2_configure_and_expand\r\n  18: rustc_driver::driver::compile_input\r\n  19: rustc_driver::run_compiler_with_pool\r\n  20: <scoped_tls::ScopedKey<T>>::set\r\n  21: rustc_driver::run_compiler\r\n  22: rustc_driver::monitor::{{closure}}\r\n  23: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  24: <F as alloc::boxed::FnBox<A>>::call_box\r\n  25: std::sys::unix::thread::Thread::new::thread_start\r\n             at /rustc/eb53c1039300a8bc8f8e4b29659ddc80b1e81b68/src/liballoc/boxed.rs:683\r\n             at src/libstd/sys_common/thread.rs:24\r\n             at src/libstd/sys/unix/thread.rs:90\r\n  26: start_thread\r\n  27: __clone\r\nquery stack during panic:\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.32.0-beta.1 (eb53c1039 2018-12-05) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `rust-bug`.\r\nwarning: build failed, waiting for other jobs to finish...\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n             at src/libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:495\r\n   6: std::panicking::begin_panic\r\n   7: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   8: rustc::ty::context::tls::with_opt::{{closure}}\r\n   9: rustc::ty::context::tls::with_context_opt\r\n  10: rustc::ty::context::tls::with_opt\r\n  11: rustc::util::bug::opt_span_bug_fmt\r\n  12: rustc::util::bug::span_bug_fmt\r\n  13: rustc_resolve::resolve_imports::ImportResolver::finalize_import::{{closure}}\r\n  14: rustc_resolve::resolve_imports::ImportResolver::finalize_imports\r\n  15: rustc_resolve::Resolver::resolve_crate\r\n  16: rustc::util::common::time\r\n  17: rustc_driver::driver::phase_2_configure_and_expand\r\n  18: rustc_driver::driver::compile_input\r\n  19: rustc_driver::run_compiler_with_pool\r\n  20: <scoped_tls::ScopedKey<T>>::set\r\n  21: rustc_driver::run_compiler\r\n  22: rustc_driver::monitor::{{closure}}\r\n  23: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  24: <F as alloc::boxed::FnBox<A>>::call_box\r\n  25: std::sys::unix::thread::Thread::new::thread_start\r\n             at /rustc/eb53c1039300a8bc8f8e4b29659ddc80b1e81b68/src/liballoc/boxed.rs:683\r\n             at src/libstd/sys_common/thread.rs:24\r\n             at src/libstd/sys/unix/thread.rs:90\r\n  26: start_thread\r\n  27: __clone\r\nquery stack during panic:\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.32.0-beta.1 (eb53c1039 2018-12-05) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `rust-bug`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58490/timeline", "performed_via_github_app": null, "state_reason": "completed"}