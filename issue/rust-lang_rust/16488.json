{"url": "https://api.github.com/repos/rust-lang/rust/issues/16488", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16488/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16488/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16488/events", "html_url": "https://github.com/rust-lang/rust/issues/16488", "id": 40216065, "node_id": "MDU6SXNzdWU0MDIxNjA2NQ==", "number": 16488, "title": "std::mem::uninitialized documentation incorrectly states destructors *will* run.", "user": {"login": "donkopotamus", "id": 4120456, "node_id": "MDQ6VXNlcjQxMjA0NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4120456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/donkopotamus", "html_url": "https://github.com/donkopotamus", "followers_url": "https://api.github.com/users/donkopotamus/followers", "following_url": "https://api.github.com/users/donkopotamus/following{/other_user}", "gists_url": "https://api.github.com/users/donkopotamus/gists{/gist_id}", "starred_url": "https://api.github.com/users/donkopotamus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/donkopotamus/subscriptions", "organizations_url": "https://api.github.com/users/donkopotamus/orgs", "repos_url": "https://api.github.com/users/donkopotamus/repos", "events_url": "https://api.github.com/users/donkopotamus/events{/privacy}", "received_events_url": "https://api.github.com/users/donkopotamus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2014-08-14T01:39:06Z", "updated_at": "2014-09-16T03:11:03Z", "closed_at": "2014-09-16T03:10:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "_update_:\n\nThe docs say\n\n> Care must be taken when using this function, if the type T has a destructor and\n> the value falls out of scope (due to unwinding or returning) before being initialized,\n> then the destructor will run on uninitialized data, likely leading to crashes.\n\nbut the \"will\" is incorrect; the destructors may run, because it is undefined behaviour and thus there are no guarantees about behaviour at all. Emphasising the UB would be good too.\n\n---\n\nWith the current rust-nightly, the following snippet fails to print \"Dropping\" twice as `drop` is not run on `y`\n\n``` rust\nstruct X {\n    x: int\n}\n\nimpl Drop for X {\n    fn drop(&mut self) {\n        println!(\"Dropping\");\n    }\n}\n\nfn main() {\n    let x = X{x: 0};\n    let y: X = unsafe {std::mem::uninitialized()};\n}\n```\n\nIn contrast, rust-0.11 will correctly run Drop on `y`\n", "closed_by": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16488/timeline", "performed_via_github_app": null, "state_reason": "completed"}