{"url": "https://api.github.com/repos/rust-lang/rust/issues/27281", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/27281/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/27281/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/27281/events", "html_url": "https://github.com/rust-lang/rust/issues/27281", "id": 97235378, "node_id": "MDU6SXNzdWU5NzIzNTM3OA==", "number": 27281, "title": "ICE with Self in function bodies, associated types, and lifetimes", "user": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-07-25T16:05:08Z", "updated_at": "2015-07-26T10:39:26Z", "closed_at": "2015-07-26T10:39:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## STR\n\n``` Rust\npub trait Trait<'a> {                        \n    type T;                                                              \n    fn foo(&self, s: &'a ()) -> &'a ();\n}                                                                               \n\nimpl<'a> Trait<'a> for () {\n    type T = &'a ();\n\n    fn foo(&self, s: &'a ()) -> &'a () {\n        let t: Self::T = s; s\n    }                                                                           \n}\n\nfn main() {}\n```\n## Result\n\n```\n<anon>:10:16: 10:23 error: internal compiler error: cannot relate bound region: '_#0r <= ReEarlyBound(48, TypeSpace, 0, 'a)\n<anon>:10         let t: Self::T = s; s\n                         ^~~~~~~\nnote: the compiler unexpectedly panicked. this is a bug.\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\nnote: run with `RUST_BACKTRACE=1` for a backtrace\nthread 'rustc' panicked at 'Box<Any>', /home/rustbuild/src/rust-buildbot/slave/stable-dist-rustc-linux/build/src/libsyntax/diagnostic.rs:170\n```\n## Orig\n\n``` Rust\nuse std::marker::PhantomData; \n\npub struct GILGuard;\ntrait PythonObject<'a> {\n    fn dummy() -> &'a i32;\n}\n\n#[derive(Copy, Clone)]                                                          \npub struct Python<'p>(PhantomData<&'p GILGuard>);                               \n\npub struct PyErr<'p> {                                                          \n    pub ptype : PyObject<'p>,                                                   \n}  \n\ntype PyResult<'p, T> = Result<T, PyErr<'p>>;\n\npub struct PyObject<'a> {\n    dummy : &'a i32\n}\n\nimpl <'p> PyObject<'p> { \n    pub fn cast_into<T>(self) -> Result<T, PythonObjectDowncastError<'p>> where T: PythonObjectWithCheckedDowncast<'p> {\n        PythonObjectWithCheckedDowncast::downcast_from(self)                    \n    }   \n}\n\npub struct PythonObjectDowncastError<'p>(pub Python<'p>);                       \npub trait PythonObjectWithCheckedDowncast<'p> : PythonObject<'p> {              \n    fn downcast_from(PyObject<'p>) -> Result<Self, PythonObjectDowncastError<'p>>;\n}   \n\nimpl <'p> PythonObjectWithCheckedDowncast<'p> for PyObject<'p> {                \n    #[inline]                                                                   \n    fn downcast_from(obj: PyObject<'p>) -> Result<PyObject<'p>, PythonObjectDowncastError<'p>> {\n        Ok(obj)                                                                 \n    }\n}\n\nimpl <'p> PythonObject<'p> for PyObject<'p> {                                   \n    fn dummy() -> &'p i32 { &7 }\n}\n\npub trait PyExtractor<'python, 'source, 'prepared> {                            \n    type Prepared;                                                              \n    fn extract<T>(prepared: &'prepared Self::Prepared) -> PyResult<'python, T>  \n        where T: PythonObjectWithCheckedDowncast<'python> ;                     \n}                                                                               \n\npub struct PyObjectExtractor;                                                   \n\nimpl <'python, 'source, 'prepared> PyExtractor<'python, 'source, 'prepared>     \n    for PyObjectExtractor {                                                     \n    type Prepared = &'source PyObject<'python>;                                 \n\n    #[inline]                                                                   \n    fn extract<T>(&&ref obj: &'prepared Self::Prepared) -> PyResult<'python, T> \n        where T: PythonObjectWithCheckedDowncast<'python> {                     \n        Ok(try!(obj.clone().cast_into()))                                       \n    }                                                                           \n}                                                                               \n\npub trait ExtractPyObject<'python, 'source, 'prepared> {                        \n    type Prepared;                                                              \n\n    fn prepare_extract(obj: &'source PyObject<'python>) -> PyResult<'python, Self::Prepared>;\n\n    fn extract<E: PyExtractor<'python, 'source, 'prepared>>(prepared: &'prepared Self::Prepared) -> PyResult<'python, Self>;\n}                                                                               \n\nimpl <'python, 'source, 'prepared, T> ExtractPyObject<'python, 'source, 'prepared>\n    for T where T: PythonObjectWithCheckedDowncast<'python> {                   \n\n    type Prepared = &'source PyObject<'python>;                                 \n\n    #[inline]                                                                   \n    fn prepare_extract(obj: &'source PyObject<'python>) -> PyResult<'python, Self::Prepared> {\n        Ok(obj)                                                                 \n    }                                                                           \n\n    #[inline]                                                                   \n    fn extract<E: PyExtractor<'python, 'source, 'prepared>>(&&ref obj: &'prepared Self::Prepared) -> PyResult<'python, T> {\n        E::extract::<Self::Prepared>(&obj)                                      \n    }                                                                           \n}\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/27281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/27281/timeline", "performed_via_github_app": null, "state_reason": "completed"}