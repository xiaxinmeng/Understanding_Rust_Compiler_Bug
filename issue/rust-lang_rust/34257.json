{"url": "https://api.github.com/repos/rust-lang/rust/issues/34257", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/34257/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/34257/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/34257/events", "html_url": "https://github.com/rust-lang/rust/issues/34257", "id": 159945245, "node_id": "MDU6SXNzdWUxNTk5NDUyNDU=", "number": 34257, "title": "Associated type equality not followed through multiple traits", "user": {"login": "sgrif", "id": 1529387, "node_id": "MDQ6VXNlcjE1MjkzODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgrif", "html_url": "https://github.com/sgrif", "followers_url": "https://api.github.com/users/sgrif/followers", "following_url": "https://api.github.com/users/sgrif/following{/other_user}", "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions", "organizations_url": "https://api.github.com/users/sgrif/orgs", "repos_url": "https://api.github.com/users/sgrif/repos", "events_url": "https://api.github.com/users/sgrif/events{/privacy}", "received_events_url": "https://api.github.com/users/sgrif/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-13T13:03:50Z", "updated_at": "2019-12-25T17:26:00Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Simplest case to reproduce would be to add a trait which decorates `IntoIterator` and try to write a blanket impl for that trait:\n\n``` rust\ntrait DecoratesIntoIterator: IntoIterator {\n    type Output: Iterator<Item=Self::Item>;\n}\n\nimpl<T> DecoratesIntoIterator for T where\n    T: IntoIterator,\n    T::IntoIter: DecoratesIntoIterator,\n{\n    type Output = <T::IntoIter as DecoratesIntoIterator>::Output;\n}\n```\n\nWill fail to compile with \n\n```\ntype mismatch resolving `<<<T as std::iter::IntoIterator>::IntoIter as DecoratesIntoIterator>::Output as std::iter::Iterator>::Item == <T as std::iter::IntoIterator>::Item`:\n```\n\neven though every trait mentioned has the constraint that the output has `Iterator<Item=Self::Item>`.\n\nRan into this with a more concrete use case inside of Diesel:\n\n``` rust\ntrait Query {\n    type SqlType;\n}\n\ntrait AsQuery {\n    type SqlType;\n    type Query: Query<SqlType=Self::SqlType>;\n\n    fn as_query(self) -> Self::Query;\n}\n\ntrait LimitDsl: AsQuery {\n    type Output: Query<SqlType=Self::SqlType>;\n\n    fn limit(self, limit: i64) -> Self::Output;\n}\n\nimpl<T> LimitDsl for T where\n    T: AsQuery,\n    T::Query: LimitDsl,\n{\n    type Output = <T::Query as LimitDsl>::Output;\n\n    fn limit(self, limit: i64) -> Self::Output {\n        self.as_query().limit(limit)\n    }\n}\n```\n\nThis can be worked around by manually restating the constraint, like so:\n\n```\nimpl<T, ST> LimitDsl for T where\n    T: AsQuery<SqlType=ST>,\n    T::Query: LimitDsl<SqlType=ST>,\n```\n\nbut this shouldn't be required.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/34257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/34257/timeline", "performed_via_github_app": null, "state_reason": null}