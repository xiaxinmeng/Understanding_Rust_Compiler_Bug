{"url": "https://api.github.com/repos/rust-lang/rust/issues/100154", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/100154/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/100154/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/100154/events", "html_url": "https://github.com/rust-lang/rust/issues/100154", "id": 1329196790, "node_id": "I_kwDOAAsO6M5POe72", "number": 100154, "title": "ICE: compiler/rustc_middle/src/ty/context.rs:705:13: node_type: no type for node", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-08-04T21:33:52Z", "updated_at": "2022-08-05T20:06:50Z", "closed_at": "2022-08-05T20:06:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nextern crate rustc_codegen_ssa;\r\n\r\nuse rustc_codegen_ssa::CodegenResults;\r\nuse rustc_codegen_ssa::traits::{CodegenBackend, WriteBackendMethods};\r\n\r\n#[derive(Clone)]\r\npub struct GccCodegenBackend;\r\n\r\nimpl CodegenBackend for GccCodegenBackend {\r\n    fn link(&self, sess: &Session, codegen_results: CodegenResults, outputs: &OutputFilenames) -> Result<(), ErrorReported> {\r\n        use rustc_codegen_ssa::back::link::link_binary;\r\n\r\n        link_binary::<crate::archive::ArArchiveBuilder<'_>>(\r\n            sess,\r\n            &codegen_results,\r\n            outputs,\r\n        )\r\n    }\r\n}\r\n\r\nimpl WriteBackendMethods for GccCodegenBackend {}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.64.0-nightly (1b57946a4 2022-08-03)\r\nbinary: rustc\r\ncommit-hash: 1b57946a405d5b2a87e612335db033edb2c3427f\r\ncommit-date: 2022-08-03\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.64.0-nightly\r\nLLVM version: 14.0.6\r\n```\r\n\r\n### Error output\r\n\r\n```error[E0433]: failed to resolve: unresolved import\r\n  --> 9b62bf4183779f002aba901cbe888acec64ea7c5.rs:13:30\r\n   |\r\n13 |         link_binary::<crate::archive::ArArchiveBuilder<'_>>(\r\n   |                              ^^^^^^^\r\n   |                              |\r\n   |                              unresolved import\r\n   |                              help: a similar path exists: `rustc_codegen_ssa::back::archive`\r\n\r\nerror[E0412]: cannot find type `Session` in this scope\r\n  --> 9b62bf4183779f002aba901cbe888acec64ea7c5.rs:10:27\r\n   |\r\n10 |     fn link(&self, sess: &Session, codegen_results: CodegenResults, outputs: &OutputFilenames) -> Result<(), ErrorReported> {\r\n   |                           ^^^^^^^ not found in this scope\r\n\r\nerror[E0412]: cannot find type `OutputFilenames` in this scope\r\n  --> 9b62bf4183779f002aba901cbe888acec64ea7c5.rs:10:79\r\n   |\r\n10 |     fn link(&self, sess: &Session, codegen_results: CodegenResults, outputs: &OutputFilenames) -> Result<(), ErrorReported> {\r\n   |                                                                               ^^^^^^^^^^^^^^^ not found in this scope\r\n\r\nerror[E0412]: cannot find type `ErrorReported` in this scope\r\n  --> 9b62bf4183779f002aba901cbe888acec64ea7c5.rs:10:110\r\n   |\r\n9  | impl CodegenBackend for GccCodegenBackend {\r\n   |     - help: you might be missing a type parameter: `<ErrorReported>`\r\n10 |     fn link(&self, sess: &Session, codegen_results: CodegenResults, outputs: &OutputFilenames) -> Result<(), ErrorReported> {\r\n   |                                                                                                              ^^^^^^^^^^^^^ not found in this scope\r\n\r\nerror[E0601]: `main` function not found in crate `9b62bf4183779f002aba901cbe888acec64ea7c5`\r\n  --> 9b62bf4183779f002aba901cbe888acec64ea7c5.rs:21:50\r\n   |\r\n21 | impl WriteBackendMethods for GccCodegenBackend {}\r\n   |                                                  ^ consider adding a `main` function to `9b62bf4183779f002aba901cbe888acec64ea7c5.rs`\r\n\r\nerror[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\r\n --> 9b62bf4183779f002aba901cbe888acec64ea7c5.rs:1:1\r\n  |\r\n1 | extern crate rustc_codegen_ssa;\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: see issue #27812 <https://github.com/rust-lang/rust/issues/27812> for more information\r\n  = help: add `#![feature(rustc_private)]` to the crate attributes to enable\r\n\r\nerror[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\r\n --> 9b62bf4183779f002aba901cbe888acec64ea7c5.rs:3:5\r\n  |\r\n3 | use rustc_codegen_ssa::CodegenResults;\r\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: see issue #27812 <https://github.com/rust-lang/rust/issues/27812> for more information\r\n  = help: add `#![feature(rustc_private)]` to the crate attributes to enable\r\n\r\nerror[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\r\n --> 9b62bf4183779f002aba901cbe888acec64ea7c5.rs:4:33\r\n  |\r\n4 | use rustc_codegen_ssa::traits::{CodegenBackend, WriteBackendMethods};\r\n  |                                 ^^^^^^^^^^^^^^\r\n  |\r\n  = note: see issue #27812 <https://github.com/rust-lang/rust/issues/27812> for more information\r\n  = help: add `#![feature(rustc_private)]` to the crate attributes to enable\r\n\r\nerror[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\r\n --> 9b62bf4183779f002aba901cbe888acec64ea7c5.rs:4:49\r\n  |\r\n4 | use rustc_codegen_ssa::traits::{CodegenBackend, WriteBackendMethods};\r\n  |                                                 ^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: see issue #27812 <https://github.com/rust-lang/rust/issues/27812> for more information\r\n  = help: add `#![feature(rustc_private)]` to the crate attributes to enable\r\n\r\nerror[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\r\n  --> 9b62bf4183779f002aba901cbe888acec64ea7c5.rs:10:5\r\n   |\r\n10 | /     fn link(&self, sess: &Session, codegen_results: CodegenResults, outputs: &OutputFilenames) -> Result<(), ErrorReported> {\r\n11 | |         use rustc_codegen_ssa::back::link::link_binary;\r\n12 | |\r\n13 | |         link_binary::<crate::archive::ArArchiveBuilder<'_>>(\r\n...  |\r\n17 | |         )\r\n18 | |     }\r\n   | |_____^\r\n   |\r\n   = note: see issue #27812 <https://github.com/rust-lang/rust/issues/27812> for more information\r\n   = help: add `#![feature(rustc_private)]` to the crate attributes to enable\r\n\r\nerror[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\r\n --> 9b62bf4183779f002aba901cbe888acec64ea7c5.rs:9:6\r\n  |\r\n9 | impl CodegenBackend for GccCodegenBackend {\r\n  |      ^^^^^^^^^^^^^^\r\n  |\r\n  = note: see issue #27812 <https://github.com/rust-lang/rust/issues/27812> for more information\r\n  = help: add `#![feature(rustc_private)]` to the crate attributes to enable\r\n\r\nerror[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\r\n  --> 9b62bf4183779f002aba901cbe888acec64ea7c5.rs:11:13\r\n   |\r\n11 |         use rustc_codegen_ssa::back::link::link_binary;\r\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: see issue #27812 <https://github.com/rust-lang/rust/issues/27812> for more information\r\n   = help: add `#![feature(rustc_private)]` to the crate attributes to enable\r\n\r\nerror[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\r\n  --> 9b62bf4183779f002aba901cbe888acec64ea7c5.rs:21:6\r\n   |\r\n21 | impl WriteBackendMethods for GccCodegenBackend {}\r\n   |      ^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: see issue #27812 <https://github.com/rust-lang/rust/issues/27812> for more information\r\n   = help: add `#![feature(rustc_private)]` to the crate attributes to enable\r\n\r\nerror[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\r\n  --> 9b62bf4183779f002aba901cbe888acec64ea7c5.rs:10:53\r\n   |\r\n10 |     fn link(&self, sess: &Session, codegen_results: CodegenResults, outputs: &OutputFilenames) -> Result<(), ErrorReported> {\r\n   |                                                     ^^^^^^^^^^^^^^\r\n   |\r\n   = note: see issue #27812 <https://github.com/rust-lang/rust/issues/27812> for more information\r\n   = help: add `#![feature(rustc_private)]` to the crate attributes to enable\r\n\r\nerror[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\r\n  --> 9b62bf4183779f002aba901cbe888acec64ea7c5.rs:13:9\r\n   |\r\n13 |         link_binary::<crate::archive::ArArchiveBuilder<'_>>(\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: see issue #27812 <https://github.com/rust-lang/rust/issues/27812> for more information\r\n   = help: add `#![feature(rustc_private)]` to the crate attributes to enable\r\n\r\nerror[E0046]: not all trait items implemented, missing: `codegen_crate`, `join_codegen`\r\n --> 9b62bf4183779f002aba901cbe888acec64ea7c5.rs:9:1\r\n  |\r\n9 | impl CodegenBackend for GccCodegenBackend {\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `codegen_crate`, `join_codegen` in implementation\r\n  |\r\n  = help: implement the missing item: `fn codegen_crate(&self, _: rustc_middle::ty::context::TyCtxt<'tcx>, _: rustc_metadata::rmeta::encoder::EncodedMetadata, _: bool) -> Box<(dyn Any + 'static)> { todo!() }`\r\n  = help: implement the missing item: `fn join_codegen(&self, _: Box<(dyn Any + 'static)>, _: &rustc_session::session::Session, _: &rustc_session::config::OutputFilenames) -> Result<(CodegenResults, HashMap<rustc_query_system::dep_graph::dep_node::WorkProductId, rustc_query_system::dep_graph::graph::WorkProduct, BuildHasherDefault<rustc_hash::FxHasher>>), rustc_errors::ErrorGuaranteed> { todo!() }`\r\n\r\nerror[E0046]: not all trait items implemented, missing: `Module`, `TargetMachine`, `ModuleBuffer`, `Context`, `ThinData`, `ThinBuffer`, `run_link`, `run_fat_lto`, `run_thin_lto`, `print_pass_timings`, `optimize`, `optimize_fat`, `optimize_thin`, `codegen`, `prepare_thin`, `serialize_module`\r\n  --> 9b62bf4183779f002aba901cbe888acec64ea7c5.rs:21:1\r\n   |\r\n21 | impl WriteBackendMethods for GccCodegenBackend {}\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `Module`, `TargetMachine`, `ModuleBuffer`, `Context`, `ThinData`, `ThinBuffer`, `run_link`, `run_fat_lto`, `run_thin_lto`, `print_pass_timings`, `optimize`, `optimize_fat`, `optimize_thin`, `codegen`, `prepare_thin`, `serialize_module` in implementation\r\n   |\r\n   = help: implement the missing item: `type Module = Type;`\r\n   = help: implement the missing item: `type TargetMachine = Type;`\r\n   = help: implement the missing item: `type ModuleBuffer = Type;`\r\n   = help: implement the missing item: `type Context = Type;`\r\n   = help: implement the missing item: `type ThinData = Type;`\r\n   = help: implement the missing item: `type ThinBuffer = Type;`\r\n   = help: implement the missing item: `fn run_link(_: &CodegenContext<Self>, _: &rustc_errors::Handler, _: Vec<ModuleCodegen<<Self as WriteBackendMethods>::Module>>) -> Result<ModuleCodegen<<Self as WriteBackendMethods>::Module>, rustc_span::fatal_error::FatalError> { todo!() }`\r\n   = help: implement the missing item: `fn run_fat_lto(_: &CodegenContext<Self>, _: Vec<FatLTOInput<Self>>, _: Vec<(SerializedModule<<Self as WriteBackendMethods>::ModuleBuffer>, rustc_query_system::dep_graph::graph::WorkProduct)>) -> Result<LtoModuleCodegen<Self>, rustc_span::fatal_error::FatalError> { todo!() }`\r\n   = help: implement the missing item: `fn run_thin_lto(_: &CodegenContext<Self>, _: Vec<(String, <Self as WriteBackendMethods>::ThinBuffer)>, _: Vec<(SerializedModule<<Self as WriteBackendMethods>::ModuleBuffer>, rustc_query_system::dep_graph::graph::WorkProduct)>) -> Result<(Vec<LtoModuleCodegen<Self>>, Vec<rustc_query_system::dep_graph::graph::WorkProduct>), rustc_span::fatal_error::FatalError> { todo!() }`\r\n   = help: implement the missing item: `fn print_pass_timings(&self) { todo!() }`\r\n   = help: implement the missing item: `unsafe fn optimize(_: &CodegenContext<Self>, _: &rustc_errors::Handler, _: &ModuleCodegen<<Self as WriteBackendMethods>::Module>, _: &ModuleConfig) -> Result<(), rustc_span::fatal_error::FatalError> { todo!() }`\r\n   = help: implement the missing item: `fn optimize_fat(_: &CodegenContext<Self>, _: &mut ModuleCodegen<<Self as WriteBackendMethods>::Module>) -> Result<(), rustc_span::fatal_error::FatalError> { todo!() }`\r\n   = help: implement the missing item: `unsafe fn optimize_thin(_: &CodegenContext<Self>, _: ThinModule<Self>) -> Result<ModuleCodegen<<Self as WriteBackendMethods>::Module>, rustc_span::fatal_error::FatalError> { todo!() }`\r\n   = help: implement the missing item: `unsafe fn codegen(_: &CodegenContext<Self>, _: &rustc_errors::Handler, _: ModuleCodegen<<Self as WriteBackendMethods>::Module>, _: &ModuleConfig) -> Result<CompiledModule, rustc_span::fatal_error::FatalError> { todo!() }`\r\n   = help: implement the missing item: `fn prepare_thin(_: ModuleCodegen<<Self as WriteBackendMethods>::Module>) -> (String, <Self as WriteBackendMethods>::ThinBuffer) { todo!() }`\r\n   = help: implement the missing item: `fn serialize_module(_: ModuleCodegen<<Self as WriteBackendMethods>::Module>) -> (String, <Self as WriteBackendMethods>::ModuleBuffer) { todo!() }`\r\n\r\nerror[E0107]: this function takes 0 generic arguments but 1 generic argument was supplied\r\n  --> 9b62bf4183779f002aba901cbe888acec64ea7c5.rs:13:9\r\n   |\r\n13 |         link_binary::<crate::archive::ArArchiveBuilder<'_>>(\r\n   |         ^^^^^^^^^^^---------------------------------------- help: remove these generics\r\n   |         |\r\n   |         expected 0 generic arguments\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/context.rs:705:13: node_type: no type for node `type crate::archive::ArArchiveBuilder<'_> (hir_id=HirId { owner: DefId(0:15 ~ 9b62bf4183779f002aba901cbe888acec64ea7c5[15ed]::{impl#0}::link), local_id: 10 })`\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/1b57946a405d5b2a87e612335db033edb2c3427f/compiler/rustc_errors/src/lib.rs:1392:9\r\nstack backtrace:\r\n   0:     0x7f6d529ca280 - std::backtrace_rs::backtrace::libunwind::trace::h9d4b0a0070383433\r\n                               at /rustc/1b57946a405d5b2a87e612335db033edb2c3427f/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   1:     0x7f6d529ca280 - std::backtrace_rs::backtrace::trace_unsynchronized::hd0319debd80d7567\r\n                               at /rustc/1b57946a405d5b2a87e612335db033edb2c3427f/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f6d529ca280 - std::sys_common::backtrace::_print_fmt::ha358f64ddabcaade\r\n                               at /rustc/1b57946a405d5b2a87e612335db033edb2c3427f/library/std/src/sys_common/backtrace.rs:66:5\r\n   3:     0x7f6d529ca280 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hbb8bd1ad8e501cae\r\n                               at /rustc/1b57946a405d5b2a87e612335db033edb2c3427f/library/std/src/sys_common/backtrace.rs:45:22\r\n   4:     0x7f6d52a25c4c - core::fmt::write::hba0660bcdf7a814a\r\n                               at /rustc/1b57946a405d5b2a87e612335db033edb2c3427f/library/core/src/fmt/mod.rs:1198:17\r\n   5:     0x7f6d529bb2c5 - std::io::Write::write_fmt::h1d8458299a37d708\r\n                               at /rustc/1b57946a405d5b2a87e612335db033edb2c3427f/library/std/src/io/mod.rs:1672:15\r\n   6:     0x7f6d529ccf61 - std::sys_common::backtrace::_print::hc6c01539c480a60d\r\n                               at /rustc/1b57946a405d5b2a87e612335db033edb2c3427f/library/std/src/sys_common/backtrace.rs:48:5\r\n   7:     0x7f6d529ccf61 - std::sys_common::backtrace::print::hb6a72c6c5063f3fd\r\n                               at /rustc/1b57946a405d5b2a87e612335db033edb2c3427f/library/std/src/sys_common/backtrace.rs:35:9\r\n   8:     0x7f6d529ccf61 - std::panicking::default_hook::{{closure}}::hb421182db9227a0c\r\n                               at /rustc/1b57946a405d5b2a87e612335db033edb2c3427f/library/std/src/panicking.rs:295:22\r\n   9:     0x7f6d529ccc2e - std::panicking::default_hook::h57cf011ec63882a8\r\n                               at /rustc/1b57946a405d5b2a87e612335db033edb2c3427f/library/std/src/panicking.rs:314:9\r\n  10:     0x7f6d5525d5d4 - rustc_driver[28a8a24145fee7e3]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n  11:     0x7f6d529cd796 - std::panicking::rust_panic_with_hook::h93256441b3a09185\r\n                               at /rustc/1b57946a405d5b2a87e612335db033edb2c3427f/library/std/src/panicking.rs:702:17\r\n  12:     0x7f6d561fbed1 - std[1797f99dfd5db856]::panicking::begin_panic::<rustc_errors[57ee69a351dd2f5f]::ExplicitBug>::{closure#0}\r\n  13:     0x7f6d561fb3c6 - std[1797f99dfd5db856]::sys_common::backtrace::__rust_end_short_backtrace::<std[1797f99dfd5db856]::panicking::begin_panic<rustc_errors[57ee69a351dd2f5f]::ExplicitBug>::{closure#0}, !>\r\n  14:     0x7f6d561dc416 - std[1797f99dfd5db856]::panicking::begin_panic::<rustc_errors[57ee69a351dd2f5f]::ExplicitBug>\r\n  15:     0x7f6d56220956 - std[1797f99dfd5db856]::panic::panic_any::<rustc_errors[57ee69a351dd2f5f]::ExplicitBug>\r\n  16:     0x7f6d562207a5 - <rustc_errors[57ee69a351dd2f5f]::HandlerInner>::bug::<&alloc[56eb4d0e39078a]::string::String>\r\n  17:     0x7f6d56220500 - <rustc_errors[57ee69a351dd2f5f]::Handler>::bug::<&alloc[56eb4d0e39078a]::string::String>\r\n  18:     0x7f6d5624341d - rustc_middle[3c62e2e09efd4a65]::ty::context::tls::with_context_opt::<rustc_middle[3c62e2e09efd4a65]::ty::context::tls::with_opt<rustc_middle[3c62e2e09efd4a65]::util::bug::opt_span_bug_fmt<rustc_span[35b28c3ec96f8264]::span_encoding::Span>::{closure#0}, ()>::{closure#0}, ()>\r\n  19:     0x7f6d562464d6 - rustc_middle[3c62e2e09efd4a65]::util::bug::opt_span_bug_fmt::<rustc_span[35b28c3ec96f8264]::span_encoding::Span>\r\n  20:     0x7f6d53cb6823 - rustc_middle[3c62e2e09efd4a65]::util::bug::bug_fmt\r\n  21:     0x7f6d53bc7b7a - <rustc_middle[3c62e2e09efd4a65]::ty::context::TypeckResults>::node_type\r\n  22:     0x7f6d5559a454 - <rustc_typeck[310de37840dc46b8]::check::fn_ctxt::FnCtxt>::point_at_type_arg_instead_of_call_if_possible\r\n  23:     0x7f6d53cc67ac - <rustc_typeck[310de37840dc46b8]::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  24:     0x7f6d53c7b167 - <rustc_typeck[310de37840dc46b8]::check::fn_ctxt::FnCtxt>::check_call\r\n  25:     0x7f6d53cc95af - <rustc_typeck[310de37840dc46b8]::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  26:     0x7f6d53cdf08d - <rustc_typeck[310de37840dc46b8]::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  27:     0x7f6d53cc971e - <rustc_typeck[310de37840dc46b8]::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  28:     0x7f6d54144e5d - rustc_typeck[310de37840dc46b8]::check::check::check_fn\r\n  29:     0x7f6d5413700e - <rustc_infer[851aa0b77966ddaa]::infer::InferCtxtBuilder>::enter::<&rustc_middle[3c62e2e09efd4a65]::ty::context::TypeckResults, <rustc_typeck[310de37840dc46b8]::check::inherited::InheritedBuilder>::enter<rustc_typeck[310de37840dc46b8]::check::typeck_with_fallback<rustc_typeck[310de37840dc46b8]::check::typeck::{closure#0}>::{closure#1}, &rustc_middle[3c62e2e09efd4a65]::ty::context::TypeckResults>::{closure#0}>\r\n  30:     0x7f6d541348e4 - rustc_typeck[310de37840dc46b8]::check::typeck\r\n  31:     0x7f6d548e0f6f - rustc_query_system[3672fd42db334255]::query::plumbing::try_execute_query::<rustc_query_impl[56619d473d589f9a]::plumbing::QueryCtxt, rustc_query_system[3672fd42db334255]::query::caches::DefaultCache<rustc_span[35b28c3ec96f8264]::def_id::LocalDefId, &rustc_middle[3c62e2e09efd4a65]::ty::context::TypeckResults>>\r\n  32:     0x7f6d5515ffc8 - <rustc_query_impl[56619d473d589f9a]::Queries as rustc_middle[3c62e2e09efd4a65]::ty::query::QueryEngine>::typeck\r\n  33:     0x7f6d54f50c76 - rustc_data_structures[fa69b12c2d991fb7]::sync::par_for_each_in::<&[rustc_span[35b28c3ec96f8264]::def_id::LocalDefId], <rustc_middle[3c62e2e09efd4a65]::hir::map::Map>::par_body_owners<rustc_typeck[310de37840dc46b8]::check::typeck_item_bodies::{closure#0}>::{closure#0}>\r\n  34:     0x7f6d54f50a2b - <rustc_middle[3c62e2e09efd4a65]::hir::map::Map>::par_body_owners::<rustc_typeck[310de37840dc46b8]::check::typeck_item_bodies::{closure#0}>\r\n  35:     0x7f6d54f5097c - rustc_typeck[310de37840dc46b8]::check::typeck_item_bodies\r\n  36:     0x7f6d54f397e5 - rustc_query_system[3672fd42db334255]::query::plumbing::try_execute_query::<rustc_query_impl[56619d473d589f9a]::plumbing::QueryCtxt, rustc_query_system[3672fd42db334255]::query::caches::DefaultCache<(), ()>>\r\n  37:     0x7f6d54f39571 - rustc_query_system[3672fd42db334255]::query::plumbing::get_query::<rustc_query_impl[56619d473d589f9a]::queries::typeck_item_bodies, rustc_query_impl[56619d473d589f9a]::plumbing::QueryCtxt>\r\n  38:     0x7f6d54c286bf - <rustc_session[a98b15f73d1a4597]::session::Session>::time::<(), rustc_typeck[310de37840dc46b8]::check_crate::{closure#7}>\r\n  39:     0x7f6d54c2813f - rustc_typeck[310de37840dc46b8]::check_crate\r\n  40:     0x7f6d54c27747 - rustc_interface[2779bea5779b9cc7]::passes::analysis\r\n  41:     0x7f6d54ff7cf5 - rustc_query_system[3672fd42db334255]::query::plumbing::try_execute_query::<rustc_query_impl[56619d473d589f9a]::plumbing::QueryCtxt, rustc_query_system[3672fd42db334255]::query::caches::DefaultCache<(), core[4c00d720cb23a2ad]::result::Result<(), rustc_errors[57ee69a351dd2f5f]::ErrorGuaranteed>>>\r\n  42:     0x7f6d54ff7a7e - rustc_query_system[3672fd42db334255]::query::plumbing::get_query::<rustc_query_impl[56619d473d589f9a]::queries::analysis, rustc_query_impl[56619d473d589f9a]::plumbing::QueryCtxt>\r\n  43:     0x7f6d54a39bca - <rustc_interface[2779bea5779b9cc7]::interface::Compiler>::enter::<rustc_driver[28a8a24145fee7e3]::run_compiler::{closure#1}::{closure#2}, core[4c00d720cb23a2ad]::result::Result<core[4c00d720cb23a2ad]::option::Option<rustc_interface[2779bea5779b9cc7]::queries::Linker>, rustc_errors[57ee69a351dd2f5f]::ErrorGuaranteed>>\r\n  44:     0x7f6d54a2d5fa - rustc_span[35b28c3ec96f8264]::with_source_map::<core[4c00d720cb23a2ad]::result::Result<(), rustc_errors[57ee69a351dd2f5f]::ErrorGuaranteed>, rustc_interface[2779bea5779b9cc7]::interface::create_compiler_and_run<core[4c00d720cb23a2ad]::result::Result<(), rustc_errors[57ee69a351dd2f5f]::ErrorGuaranteed>, rustc_driver[28a8a24145fee7e3]::run_compiler::{closure#1}>::{closure#1}>\r\n  45:     0x7f6d54a2cfd0 - rustc_interface[2779bea5779b9cc7]::interface::create_compiler_and_run::<core[4c00d720cb23a2ad]::result::Result<(), rustc_errors[57ee69a351dd2f5f]::ErrorGuaranteed>, rustc_driver[28a8a24145fee7e3]::run_compiler::{closure#1}>\r\n  46:     0x7f6d54a2b341 - <scoped_tls[b1559f3fa2997ec4]::ScopedKey<rustc_span[35b28c3ec96f8264]::SessionGlobals>>::set::<rustc_interface[2779bea5779b9cc7]::interface::run_compiler<core[4c00d720cb23a2ad]::result::Result<(), rustc_errors[57ee69a351dd2f5f]::ErrorGuaranteed>, rustc_driver[28a8a24145fee7e3]::run_compiler::{closure#1}>::{closure#0}, core[4c00d720cb23a2ad]::result::Result<(), rustc_errors[57ee69a351dd2f5f]::ErrorGuaranteed>>\r\n  47:     0x7f6d54a2b02f - std[1797f99dfd5db856]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[2779bea5779b9cc7]::util::run_in_thread_pool_with_globals<rustc_interface[2779bea5779b9cc7]::interface::run_compiler<core[4c00d720cb23a2ad]::result::Result<(), rustc_errors[57ee69a351dd2f5f]::ErrorGuaranteed>, rustc_driver[28a8a24145fee7e3]::run_compiler::{closure#1}>::{closure#0}, core[4c00d720cb23a2ad]::result::Result<(), rustc_errors[57ee69a351dd2f5f]::ErrorGuaranteed>>::{closure#0}, core[4c00d720cb23a2ad]::result::Result<(), rustc_errors[57ee69a351dd2f5f]::ErrorGuaranteed>>\r\n  48:     0x7f6d55084c49 - <<std[1797f99dfd5db856]::thread::Builder>::spawn_unchecked_<rustc_interface[2779bea5779b9cc7]::util::run_in_thread_pool_with_globals<rustc_interface[2779bea5779b9cc7]::interface::run_compiler<core[4c00d720cb23a2ad]::result::Result<(), rustc_errors[57ee69a351dd2f5f]::ErrorGuaranteed>, rustc_driver[28a8a24145fee7e3]::run_compiler::{closure#1}>::{closure#0}, core[4c00d720cb23a2ad]::result::Result<(), rustc_errors[57ee69a351dd2f5f]::ErrorGuaranteed>>::{closure#0}, core[4c00d720cb23a2ad]::result::Result<(), rustc_errors[57ee69a351dd2f5f]::ErrorGuaranteed>>::{closure#1} as core[4c00d720cb23a2ad]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  49:     0x7f6d529d7763 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h7cdbc89df5cc56b5\r\n                               at /rustc/1b57946a405d5b2a87e612335db033edb2c3427f/library/alloc/src/boxed.rs:1935:9\r\n  50:     0x7f6d529d7763 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h56fd0a7120358d6b\r\n                               at /rustc/1b57946a405d5b2a87e612335db033edb2c3427f/library/alloc/src/boxed.rs:1935:9\r\n  51:     0x7f6d529d7763 - std::sys::unix::thread::Thread::new::thread_start::hab11f20f5d17dbc7\r\n                               at /rustc/1b57946a405d5b2a87e612335db033edb2c3427f/library/std/src/sys/unix/thread.rs:108:17\r\n  52:     0x7f6d5270e54d - <unknown>\r\n  53:     0x7f6d52793874 - clone\r\n  54:                0x0 - <unknown>\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.64.0-nightly (1b57946a4 2022-08-03) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `<impl at 9b62bf4183779f002aba901cbe888acec64ea7c5.rs:9:1: 9:42>::link`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to 19 previous errors\r\n\r\nSome errors have detailed explanations: E0046, E0107, E0412, E0433, E0601, E0658.\r\nFor more information about an error, try `rustc --explain E0046`.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/100154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/100154/timeline", "performed_via_github_app": null, "state_reason": "completed"}