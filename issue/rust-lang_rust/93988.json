{"url": "https://api.github.com/repos/rust-lang/rust/issues/93988", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93988/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93988/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93988/events", "html_url": "https://github.com/rust-lang/rust/issues/93988", "id": 1137174088, "node_id": "I_kwDOAAsO6M5Dx-ZI", "number": 93988, "title": "On macOS, `strip=symbols` results in \"error: symbols referenced by indirect symbol table entries that can't be stripped in <file>.dylib\"", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-02-14T11:36:26Z", "updated_at": "2022-06-12T15:05:14Z", "closed_at": "2022-06-12T15:05:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When the new [`strip`](https://doc.rust-lang.org/stable/rustc/codegen-options/index.html#strip) codegen option is used on OS X with mode `\"symbols\"` (which is the highest strip mode, and what is used when `strip=true` is passed to Cargo), the build emits the following warning for the testcase below:\r\n\r\n```\r\n   Compiling libcnb-proc-macros v0.1.1 (/Users/emorley/src/libcnb.rs/libcnb-proc-macros)\r\nwarning: stripping debug info with `strip` failed: exit status: 1\r\n  |\r\n  = note: /Library/Developer/CommandLineTools/usr/bin/strip: error: symbols referenced by indirect symbol table entries that can't be stripped in: /Users/emorley/src/testcase/target/release/deps/liblibcnb_proc_macros-5b9f8927d4ae103e.dylib\r\n```\r\n\r\nDoing any of the following stops the warning from appearing (see the workarounds section below for more details):\r\n- Setting `strip` to `\"debuginfo\"` instead of `\"symbols\"` (globally).\r\n- Setting a `build-override` for `strip`, to turn it off for proc-macros/... only, whilst leaving it set to `\"symbols\"` for everything else.\r\n- Changing the dependency in the testcase below from a local `path` reference to the published crate. (**The published crate is identical to the local version, so this seems significant?**)\r\n\r\nThis potentially seems like fallout from #88137 - cc @joshtriplett\r\n\r\n---\r\n\r\n### Steps to reproduce\r\n\r\n1. `git clone https://github.com/Malax/libcnb.rs` (currently at `11bdefc02d649fdde3ac5c1404e7d8d5f8f2681c`)\r\n2. `cargo new testcase && cd $_`\r\n3. `cargo add ../libcnb.rs/libcnb-proc-macros`\r\n4. `CARGO_PROFILE_RELEASE_STRIP=symbols cargo build --release`\r\n\r\n### Expected\r\n\r\nThe cargo build completes successfully (exit code 0), with no warnings/errors seen in the build output.\r\n\r\n### Actual\r\n\r\nWhilst the build completes successfully (exit code 0), there is a warning/error about stripping in the build output. Ideally rustc would configure stripping so it \"just works\" with one of the presets like \"symbols\", or else suppress warnings if they are deemed expected in certain scenarios.\r\n\r\n```\r\n$ CARGO_PROFILE_RELEASE_STRIP=symbols cargo build --release\r\n   Compiling memchr v2.4.1\r\n   Compiling proc-macro2 v1.0.36\r\n   Compiling unicode-xid v0.2.2\r\n   Compiling syn v1.0.86\r\n   Compiling regex-syntax v0.6.25\r\n   Compiling bit-vec v0.6.3\r\n   Compiling bit-set v0.5.2\r\n   Compiling aho-corasick v0.7.18\r\n   Compiling quote v1.0.15\r\n   Compiling regex v1.5.4\r\n   Compiling fancy-regex v0.7.1\r\n   Compiling libcnb-proc-macros v0.1.1 (/Users/emorley/src/libcnb.rs/libcnb-proc-macros)\r\nwarning: stripping debug info with `strip` failed: exit status: 1\r\n  |\r\n  = note: /Library/Developer/CommandLineTools/usr/bin/strip: error: symbols referenced by indirect symbol table entries that can't be stripped in: /Users/emorley/src/testcase/target/release/deps/liblibcnb_proc_macros-5b9f8927d4ae103e.dylib\r\n          __NSGetArgc\r\n          __NSGetArgv\r\n          __NSGetEnviron\r\n          __NSGetExecutablePath\r\n          __Unwind_Backtrace\r\n          __Unwind_DeleteException\r\n          __Unwind_GetCFA\r\n          __Unwind_GetDataRelBase\r\n          __Unwind_GetIP\r\n          __Unwind_GetIPInfo\r\n          __Unwind_GetLanguageSpecificData\r\n          __Unwind_GetRegionStart\r\n          __Unwind_GetTextRelBase\r\n          __Unwind_RaiseException\r\n          __Unwind_Resume\r\n          __Unwind_SetGR\r\n          __Unwind_SetIP\r\n          ___bzero\r\n          ___error\r\n          __dyld_get_image_header\r\n          __dyld_get_image_name\r\n          __dyld_get_image_vmaddr_slide\r\n          __dyld_image_count\r\n          __exit\r\n          __tlv_atexit\r\n          _abort\r\n          _accept\r\n          _bind\r\n          _calloc\r\n          _chdir\r\n          _chmod\r\n          _chown\r\n          _chroot\r\n          _close$NOCANCEL\r\n          _closedir\r\n          _connect\r\n          _copyfile_state_alloc\r\n          _copyfile_state_free\r\n          _copyfile_state_get\r\n          _dlsym\r\n          _dup2\r\n          _execvp\r\n          _exit\r\n          _fchmod\r\n          _fchown\r\n          _fcntl\r\n          _fcopyfile\r\n          _fork\r\n          _free\r\n          _freeaddrinfo\r\n          _fstat$INODE64\r\n          _ftruncate\r\n          _gai_strerror\r\n          _getaddrinfo\r\n          _getcwd\r\n          _getenv\r\n          _getpeereid\r\n          _getpeername\r\n          _getpid\r\n          _getppid\r\n          _getpwuid_r\r\n          _getsockname\r\n          _getsockopt\r\n          _gettimeofday\r\n          _getuid\r\n          _ioctl\r\n          _kill\r\n          _lchown\r\n          _link\r\n          _listen\r\n          _lseek\r\n          _lstat$INODE64\r\n          _mach_absolute_time\r\n          _mach_timebase_info\r\n          _malloc\r\n          _memchr\r\n          _memcmp\r\n          _memcpy\r\n          _memmove\r\n          _memset\r\n          _mkdir\r\n          _mmap\r\n          _mprotect\r\n          _munmap\r\n          _nanosleep\r\n          _open\r\n          _opendir$INODE64\r\n          _pipe\r\n          _poll\r\n          _posix_memalign\r\n          _posix_spawn_file_actions_adddup2\r\n          _posix_spawn_file_actions_destroy\r\n          _posix_spawn_file_actions_init\r\n          _posix_spawnattr_destroy\r\n          _posix_spawnattr_init\r\n          _posix_spawnattr_setflags\r\n          _posix_spawnattr_setsigdefault\r\n          _posix_spawnattr_setsigmask\r\n          _posix_spawnp\r\n          _pread\r\n          _pthread_attr_destroy\r\n          _pthread_attr_init\r\n          _pthread_attr_setstacksize\r\n          _pthread_cond_broadcast\r\n          _pthread_cond_destroy\r\n          _pthread_cond_signal\r\n          _pthread_cond_timedwait\r\n          _pthread_cond_wait\r\n          _pthread_create\r\n          _pthread_detach\r\n          _pthread_get_stackaddr_np\r\n          _pthread_get_stacksize_np\r\n          _pthread_join\r\n          _pthread_key_create\r\n          _pthread_key_delete\r\n          _pthread_mutex_destroy\r\n          _pthread_mutex_init\r\n          _pthread_mutex_lock\r\n          _pthread_mutex_trylock\r\n          _pthread_mutex_unlock\r\n          _pthread_mutexattr_destroy\r\n          _pthread_mutexattr_init\r\n          _pthread_mutexattr_settype\r\n          _pthread_rwlock_destroy\r\n          _pthread_rwlock_rdlock\r\n          _pthread_rwlock_unlock\r\n          _pthread_rwlock_wrlock\r\n          _pthread_self\r\n          _pthread_setname_np\r\n          _pthread_sigmask\r\n          _pwrite\r\n          _read\r\n          _readdir_r$INODE64\r\n          _readlink\r\n          _readv\r\n          _realloc\r\n          _realpath$DARWIN_EXTSN\r\n          _recv\r\n          _recvfrom\r\n          _rename\r\n          _rmdir\r\n          _sched_yield\r\n          _send\r\n          _sendto\r\n          _setenv\r\n          _setgid\r\n          _setgroups\r\n          _setsockopt\r\n          _setuid\r\n          _shutdown\r\n          _sigaction\r\n          _sigaddset\r\n          _sigaltstack\r\n          _sigemptyset\r\n          _signal\r\n          _socket\r\n          _socketpair\r\n          _stat$INODE64\r\n          _strerror_r\r\n          _strlen\r\n          _symlink\r\n          _sysconf\r\n          _unlink\r\n          _unsetenv\r\n          _waitpid\r\n          _write\r\n          _writev\r\n```\r\n\r\n### Workarounds\r\n\r\nThe warning does not appear if...\r\n\r\n- Mode `debuginfo` is used instead (ie: step 4 replaced with `CARGO_PROFILE_RELEASE_STRIP=debuginfo cargo build --release`).\r\n- Strip is switched off for proc-macros (ie: step 4 replaced with `CARGO_PROFILE_RELEASE_STRIP=symbols CARGO_PROFILE_RELEASE_BUILD_OVERRIDE=none cargo build --release`)\r\n- The `libcnb-proc-macros` dependency is changed from a local path reference to the published crate (ie: step 3 changed to `cargo add libcnb-proc-macros@0.1.1`) - even though the published crate is identical to the local version?!\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.60.0-nightly (1e12aef3f 2022-02-13)\r\nbinary: rustc\r\ncommit-hash: 1e12aef3fab243407f9d71ba9956cb2a1bf105d5\r\ncommit-date: 2022-02-13\r\nhost: x86_64-apple-darwin\r\nrelease: 1.60.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93988/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93988/timeline", "performed_via_github_app": null, "state_reason": "completed"}