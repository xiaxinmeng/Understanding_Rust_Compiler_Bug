{"url": "https://api.github.com/repos/rust-lang/rust/issues/10387", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/10387/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/10387/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/10387/events", "html_url": "https://github.com/rust-lang/rust/issues/10387", "id": 22393176, "node_id": "MDU6SXNzdWUyMjM5MzE3Ng==", "number": 10387, "title": "Flatten numeric trait hierarchy and allow for user extensibility.", "user": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}], "state": "closed", "locked": false, "assignee": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/20", "html_url": "https://github.com/rust-lang/rust/milestone/20", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/20/labels", "id": 452034, "node_id": "MDk6TWlsZXN0b25lNDUyMDM0", "number": 20, "title": "1.0", "description": "This will be the first major release of Rust, where we offer some guaranteed level of support and backwards compatibility.\r\n\r\nThe significant criteria for this release are:\r\n\r\n* Language backwards compatibility - All major features are in, and in their final form. Generally, the only new language features added after this milestone must be backwards compatible, or to fix soundness holes, though we do expect to have some leeway to make small incompatible fixes that have low impact on existing code bases.\r\n\r\n* Library stability - We have a system of measuring and ensuring the stability of API's, and a significant portion of the standard library is declared stable. Stable API's will not change. Large portions of the standard library need to be stable for 1.0, including primitive types, vectors, strings, option, numerics, collections, some I/O and concurrency.\r\n\r\n* User experience - The system is polished and the presentation is complete and professional. New users have a clear path to using and learning the system. This encompasses the web site, documentation, installation, and tooling.\r\n", "creator": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 376, "state": "closed", "created_at": "2013-10-10T18:48:33Z", "updated_at": "2016-08-28T23:13:24Z", "due_on": "2015-05-15T07:00:00Z", "closed_at": "2015-05-21T20:59:13Z"}, "comments": 34, "created_at": "2013-11-09T20:28:45Z", "updated_at": "2014-11-16T04:17:55Z", "closed_at": "2014-11-16T04:17:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I am growing increasingly concerned that we are locking ourselves into a substandard numeric API heading toward 1.0 that will be hard to alter in the future without breaking a significant amount of client code.\n\nPerhaps we could investigate simplifying the numeric trait hierarchy to be centered around built-in types. Perhaps the traits could be removed from the prelude as default instead using free, method wrapper functions as the primary form of using the numeric functions. This would make the API more amenable to being extended by users in the future. Perhaps an algebraic hierarchy could be included in `extra`.\n\nFor example the `Round`, `Fractional`, `Algebraic`, `Trigonometric`, `Exponential`, `Hyperbolic`, `Real` and `Float` could be consolidated into a single `Float` trait. Then the primary way of accessing the functions would be via the wrapper functions, eg. `num::atan2(x, y)`.\n\n``` rust\npub trait Float {\n    fn floor(x: Self) -> Self;\n    fn ceil(x: Self) -> Self;\n    fn round(x: Self) -> Self;\n    fn trunc(x: Self) -> Self;\n    fn fract(x: Self) -> Self;\n\n    fn recip(x: Self) -> Self;\n\n    fn pow(x: Self, n: Self) -> Self;\n    fn sqrt(x: Self) -> Self;\n    fn rsqrt(x: Self) -> Self;\n    fn cbrt(x: Self) -> Self;\n    fn hypot(x: Self, other: Self) -> Self;\n\n    fn sin(x: Self) -> Self;\n    fn cos(x: Self) -> Self;\n    fn tan(x: Self) -> Self;\n\n    fn asin(x: Self) -> Self;\n    fn acos(x: Self) -> Self;\n    fn atan(x: Self) -> Self;\n\n    fn atan2(x: Self, y: Self) -> Self;\n    fn sin_cos(x: Self) -> (Self, Self);\n\n    fn sinh(x: Self) -> Self;\n    fn cosh(x: Self) -> Self;\n    fn tanh(x: Self) -> Self;\n\n    fn asinh(x: Self) -> Self;\n    fn acosh(x: Self) -> Self;\n    fn atanh(x: Self) -> Self;\n\n    fn exp(x: Self) -> Self;\n    fn exp2(x: Self) -> Self;\n\n    fn ln(x: Self) -> Self;\n    fn log(x: Self, base: Self) -> Self;\n    fn log2(x: Self) -> Self;\n    fn log10(x: Self) -> Self;\n\n    fn pi() -> Self;\n    fn two_pi() -> Self;\n    fn frac_pi_2() -> Self;\n    fn frac_pi_3() -> Self;\n    fn frac_pi_4() -> Self;\n    fn frac_pi_6() -> Self;\n    fn frac_pi_8() -> Self;\n    fn frac_1_pi() -> Self;\n    fn frac_2_pi() -> Self;\n    fn frac_2_sqrtpi() -> Self;\n    fn sqrt2() -> Self;\n    fn frac_1_sqrt2() -> Self;\n    fn e() -> Self;\n    fn log2_e() -> Self;\n    fn log10_e() -> Self;\n    fn ln_2() -> Self;\n    fn ln_10() -> Self;\n\n    fn to_degrees(x: Self) -> Self;\n    fn to_radians(x: Self) -> Self;\n\n    fn nan() -> Self;\n    fn infinity() -> Self;\n    fn neg_infinity() -> Self;\n    fn neg_zero() -> Self;\n\n    fn is_nan(self) -> bool;\n    fn is_infinite(self) -> bool;\n    fn is_finite(self) -> bool;\n    fn is_normal(self) -> bool;\n    fn classify(self) -> FPCategory;\n\n    fn mantissa_digits(_: Option<Self>) -> uint;\n    fn digits(_: Option<Self>) -> uint;\n    fn epsilon() -> Self;\n    fn min_exp(_: Option<Self>) -> int;\n    fn max_exp(_: Option<Self>) -> int;\n    fn min_10_exp(_: Option<Self>) -> int;\n    fn max_10_exp(_: Option<Self>) -> int;\n\n    fn ldexp(x: Self, exp: int) -> Self;\n    fn frexp(x: Self) -> (Self, int);\n\n    fn exp_m1(x: Self) -> Self;\n    fn ln_1p(x: Self) -> Self;\n    fn mul_add(x: Self, a: Self, b: Self) -> Self;\n    fn next_after(x: Self, other: Self) -> Self;\n}\n\n#[inline] fn floor<T:Float>(x: T) -> T { Float::floor(x) }\n#[inline] fn ceil<T:Float>(x: T) -> T { Float::ceil(x) }\n#[inline] fn round<T:Float>(x: T) -> T { Float::round(x) }\n#[inline] fn trunc<T:Float>(x: T) -> T { Float::trunc(x) }\n#[inline] fn fract<T:Float>(x: T) -> T { Float::fract(x) }\n\n#[inline] fn recip<T:Float>(x: T) -> T { Float::recip(x) }\n\n#[inline] fn pow<T:Float>(x: T, n: T) -> T { Float::pow(x, n) }\n#[inline] fn sqrt<T:Float>(x: T) -> T { Float::sqrt(x) }\n#[inline] fn rsqrt<T:Float>(x: T) -> T { Float::rsqrt(x) }\n#[inline] fn cbrt<T:Float>(x: T) -> T { Float::cbrt(x) }\n#[inline] fn hypot<T:Float>(x: T, y: T) -> T { Float::hypot(x, y) }\n\n#[inline] fn sin<T:Float>(x: T) -> T { Float::sin(x) }\n#[inline] fn cos<T:Float>(x: T) -> T { Float::cos(x) }\n#[inline] fn tan<T:Float>(x: T) -> T { Float::tan(x) }\n\n// ...\n```\n\nThis is related to the numeric trait reform tracked at #4819\n", "closed_by": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/10387/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/10387/timeline", "performed_via_github_app": null, "state_reason": "completed"}