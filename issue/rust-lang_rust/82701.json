{"url": "https://api.github.com/repos/rust-lang/rust/issues/82701", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82701/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82701/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82701/events", "html_url": "https://github.com/rust-lang/rust/issues/82701", "id": 820046649, "node_id": "MDU6SXNzdWU4MjAwNDY2NDk=", "number": 82701, "title": "read_volatile/write_volatile uses ldrb/strb only for structs on aarch64", "user": {"login": "Trolldemorted", "id": 10261186, "node_id": "MDQ6VXNlcjEwMjYxMTg2", "avatar_url": "https://avatars.githubusercontent.com/u/10261186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Trolldemorted", "html_url": "https://github.com/Trolldemorted", "followers_url": "https://api.github.com/users/Trolldemorted/followers", "following_url": "https://api.github.com/users/Trolldemorted/following{/other_user}", "gists_url": "https://api.github.com/users/Trolldemorted/gists{/gist_id}", "starred_url": "https://api.github.com/users/Trolldemorted/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Trolldemorted/subscriptions", "organizations_url": "https://api.github.com/users/Trolldemorted/orgs", "repos_url": "https://api.github.com/users/Trolldemorted/repos", "events_url": "https://api.github.com/users/Trolldemorted/events{/privacy}", "received_events_url": "https://api.github.com/users/Trolldemorted/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-03-02T14:00:52Z", "updated_at": "2021-03-02T15:50:56Z", "closed_at": "2021-03-02T15:50:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am writing low-level code targeting ARMv8 (aarch64), and I have noticed that [read_volatile](https://doc.rust-lang.org/std/ptr/fn.read_volatile.html) and [write_volatile](https://doc.rust-lang.org/std/ptr/fn.write_volatile.html) are emitting unexpected bytecode.\r\n\r\nWhen I use `read_volatile` on a `*const u32`, rustc generates the expected `ldr`:\r\n```rust\r\n#[no_mangle]\r\n#[inline(never)]\r\npub fn volatile_read_u32(address: u64) -> u32 {\r\n    let ptr = address as *const u32;\r\n    unsafe {\r\n        ptr\r\n            .offset(0x42)\r\n            .read_volatile()\r\n    }\r\n}\r\n```\r\n```asm\r\n00000000400855ec <volatile_read_u32>:\r\n    400855ec:\tb9410800 \tldr\tw0, [x0, #264]\r\n    400855f0:\td65f03c0 \tret\r\n```\r\n\r\nHowever, if I do that on a struct (even packed ones with only one u32 member), rustc generates separate `ldrb` instructions whose results are shifted to yield the original result:\r\n```rust\r\n#[repr(packed)]\r\nstruct Foo {\r\n    a: u32,\r\n}\r\n\r\n#[no_mangle]\r\n#[inline(never)]\r\npub fn volatile_read(address: u64) -> u32 {\r\n    let ptr = address as *const Foo;\r\n    unsafe {\r\n        ptr\r\n            .offset(0x43)\r\n            .read_volatile()\r\n    }.a\r\n}\r\n```\r\n```asm\r\n00000000400855f4 <volatile_read>:\r\n    400855f4:\t39443c08 \tldrb\tw8, [x0, #271]\r\n    400855f8:\t39443809 \tldrb\tw9, [x0, #270]\r\n    400855fc:\t3944340a \tldrb\tw10, [x0, #269]\r\n    40085600:\t39443000 \tldrb\tw0, [x0, #268]\r\n    40085604:\t33181d09 \tbfi\tw9, w8, #8, #8\r\n    40085608:\t33181d40 \tbfi\tw0, w10, #8, #8\r\n    4008560c:\t33103d20 \tbfi\tw0, w9, #16, #16\r\n    40085610:\td65f03c0 \tret\r\n```\r\n\r\nThe same thing happens with `write_volatile`:\r\n```rust\r\n#[no_mangle]\r\n#[inline(never)]\r\npub fn volatile_write(address: u64) {\r\n    let ptr = address as *mut Foo;\r\n    unsafe {\r\n        ptr\r\n            .offset(0x44)\r\n            .write_volatile(Foo {\r\n                a: 1,\r\n            })\r\n    };\r\n}\r\n```\r\n```asm\r\n0000000040085614 <volatile_write>:\r\n    40085614:\td10043ff \tsub\tsp, sp, #0x10\r\n    40085618:\t52800028 \tmov\tw8, #0x1                   \t// #1\r\n    4008561c:\tb9000fe8 \tstr\tw8, [sp, #12]\r\n    40085620:\tb9400fe8 \tldr\tw8, [sp, #12]\r\n    40085624:\t39044008 \tstrb\tw8, [x0, #272]\r\n    40085628:\t53187d09 \tlsr\tw9, w8, #24\r\n    4008562c:\t53107d0a \tlsr\tw10, w8, #16\r\n    40085630:\t53087d08 \tlsr\tw8, w8, #8\r\n    40085634:\t39044c09 \tstrb\tw9, [x0, #275]\r\n    40085638:\t3904480a \tstrb\tw10, [x0, #274]\r\n    4008563c:\t39044408 \tstrb\tw8, [x0, #273]\r\n    40085640:\t910043ff \tadd\tsp, sp, #0x10\r\n    40085644:\td65f03c0 \tret\r\n```\r\n\r\nThe generated bytecode has several problems:\r\n- MMIO devices do not appreciate if their registers are read from or written to byte-wise\r\n- Verification of the binary is impaired because of unnecessary instructions and expressions on symbols\r\n- This can't be good for performance, can it?\r\n\r\nFor me it was very unexpected that a read from an u32 causes different instructions than a read from a packed struct with only one (u32) member.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.49.0-nightly (ffa2e7ae8 2020-10-24)\r\nbinary: rustc\r\ncommit-hash: ffa2e7ae8fbf9badc035740db949b9dae271c29f\r\ncommit-date: 2020-10-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.49.0-nightly\r\nLLVM version: 11.0\r\n```\r\n.cargo/config:\r\n```\r\n[build]\r\ntarget = \"aarch64-unknown-none-softfloat.json\"\r\n```\r\naarch64-unknown-none-softfloat.json:\r\n```\r\n{\r\n  \"pre-link-args\": {\r\n    \"ld.lld\": [\"-Taarch64-qemu.ld\"]\r\n  },\r\n  \"arch\": \"aarch64\",\r\n  \"data-layout\": \"e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128\",\r\n  \"disable-redzone\": true,\r\n  \"env\": \"\",\r\n  \"executables\": true,\r\n  \"features\": \"+strict-align,-neon,-fp-armv8\",\r\n  \"is-builtin\": true,\r\n  \"linker\": \"rust-lld\",\r\n  \"linker-flavor\": \"ld.lld\",\r\n  \"linker-is-gnu\": true,\r\n  \"llvm-target\": \"aarch64-unknown-none\",\r\n  \"max-atomic-width\": 128,\r\n  \"os\": \"none\",\r\n  \"panic-strategy\": \"abort\",\r\n  \"relocation-model\": \"static\",\r\n  \"target-c-int-width\": \"32\",\r\n  \"target-endian\": \"little\",\r\n  \"target-pointer-width\": \"64\",\r\n  \"unsupported-abis\": [\r\n    \"stdcall\",\r\n    \"fastcall\",\r\n    \"vectorcall\",\r\n    \"thiscall\",\r\n    \"win64\",\r\n    \"sysv64\"\r\n  ],\r\n  \"vendor\": \"\"\r\n}\r\n```\r\nAll instructions above were disassembled by objdump, and the binary was built with `cargo xbuild --release`.", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82701/timeline", "performed_via_github_app": null, "state_reason": "completed"}