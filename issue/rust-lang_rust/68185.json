{"url": "https://api.github.com/repos/rust-lang/rust/issues/68185", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68185/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68185/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68185/events", "html_url": "https://github.com/rust-lang/rust/issues/68185", "id": 549097952, "node_id": "MDU6SXNzdWU1NDkwOTc5NTI=", "number": 68185, "title": "`impl<T: Error> Error for Box<T>` means `Box<dyn Error>` does not implement `Error`", "user": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 1448485701, "node_id": "MDU6TGFiZWwxNDQ4NDg1NzAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-error-handling", "name": "A-error-handling", "color": "f7e101", "default": false, "description": "Area: Error handling"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-13T18:14:12Z", "updated_at": "2021-05-25T15:40:19Z", "closed_at": "2020-01-14T09:11:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently the implementation of `Error for Box<T>` looks like this:\r\n\r\n```rust\r\n#[stable(feature = \"box_error\", since = \"1.8.0\")]\r\n// note the missing `+ ?Sized` bound.\r\nimpl<T: Error> Error for Box<T> {\r\n    fn description(&self) -> &str {\r\n        Error::description(&**self)\r\n    }\r\n\r\n    #[allow(deprecated)]\r\n    fn cause(&self) -> Option<&dyn Error> {\r\n        Error::cause(&**self)\r\n    }\r\n\r\n    fn source(&self) -> Option<&(dyn Error + 'static)> {\r\n        Error::source(&**self)\r\n    }\r\n}\r\n```\r\n\r\nwhich in turn disallows passing in dynamic `Error` objects around as easily as it should be possible to:\r\n\r\n```rust\r\nfn main() {\r\n    let x: Box<dyn std::error::Error> = std::io::Error::last_os_error().into();\r\n    fn assert_error<E: std::error::Error>(x: E) {}\r\n    assert_error(x);\r\n    //^~ error[E0277]: the size for values of type `dyn std::error::Error` cannot be known at compilation time\r\n}\r\n```\r\n\r\n`Error` by definition of being object safe is implementable for `Box<T: ?Sized>`. We should relax that bound, especially now that `Box<dyn Error>` is becoming the way in the ecosystem to pass around the type-erased error values.\r\n\r\n---\r\n\r\nI discovered this after I attempted to use an implementation that looks like this:\r\n\r\n```rust\r\nimpl<F: std::error::Error + Send + Sync + 'static> From<F> for SomeWrapper {\r\n    fn from(f: F) -> Self {\r\n        SomeWrapper(Box::new(f))\r\n    }\r\n}\r\n```\r\n\r\nYou cannot add an implementation specialized for `Box<...>` either as that\u2019s prevented by the coherence rules.", "closed_by": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68185/timeline", "performed_via_github_app": null, "state_reason": "completed"}