{"url": "https://api.github.com/repos/rust-lang/rust/issues/13488", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/13488/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/13488/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/13488/events", "html_url": "https://github.com/rust-lang/rust/issues/13488", "id": 31395206, "node_id": "MDU6SXNzdWUzMTM5NTIwNg==", "number": 13488, "title": "expected 'T' but found 'T'", "user": {"login": "Slowhand5", "id": 7277026, "node_id": "MDQ6VXNlcjcyNzcwMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7277026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Slowhand5", "html_url": "https://github.com/Slowhand5", "followers_url": "https://api.github.com/users/Slowhand5/followers", "following_url": "https://api.github.com/users/Slowhand5/following{/other_user}", "gists_url": "https://api.github.com/users/Slowhand5/gists{/gist_id}", "starred_url": "https://api.github.com/users/Slowhand5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Slowhand5/subscriptions", "organizations_url": "https://api.github.com/users/Slowhand5/orgs", "repos_url": "https://api.github.com/users/Slowhand5/repos", "events_url": "https://api.github.com/users/Slowhand5/events{/privacy}", "received_events_url": "https://api.github.com/users/Slowhand5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-13T01:31:48Z", "updated_at": "2014-04-13T02:14:00Z", "closed_at": "2014-04-13T02:14:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "   Newbie bug poster here.\n\n```\nrustc wire.rs\nwire.rs:34:20: 34:26 error: mismatched types: expected `T` but found `T` (expected type parameter but found type parameter)\nwire.rs:34         self.val = newVal;\n                              ^~~~~~\nerror: aborting due to previous error\n[jim@localhost rust_tests]$ rustc --version\nrustc 0.10 (46867cc 2014-04-02 16:59:39 -0700)\nhost: i686-unknown-linux-gnu\n```\n\n===== testcase wire.rs follows =======\n\n``` rust\n//use std::task;\n//use std::comm;\nextern crate  collections;\n\nuse std::io::timer::sleep;\n\n//#[feature(managed_boxes)] \n\n//use collections::dlist::DList;\n\nuse collections::dlist::DList;\n\n\nstruct WListener < T > { \n    callback : 'static |T|\n}\n\nimpl<T> WListener<T> { \n    fn call(&self, value : T) -> () { (self.callback)(value); } \n}\n\n\nstruct WMaster < T > { \n    name : & 'static str,\n    val : T,\n    listeners : DList<WListener<T>>\n}\n\nimpl<T> WMaster<T> { \n    fn new<T>(iname : & 'static str, ival : T) -> WMaster<T> { \n        WMaster { name : iname, val : ival, listeners : DList::new() }\n    } \n    fn assign<T>(&self, newVal : T) -> () { \n        self.val = newVal;\n//        println!(\"{} is now {}\", self.name, newVal);\n    }\n\n}\n\nenum Wire <T> { \n    Master(~WMaster<T>),\n    Ref(& 'static WMaster<T>)\n} \n\n\nfn run_and(in1 : Receiver<bool>, \n           in2 : Receiver<bool>,\n           zz : Sender<bool>) -> () \n{ \n  let mut ii1 : bool = false;\n  let mut ii2 : bool = false;\n  let mut prev_rr : bool = false;\n\n  loop { \n    select! { \n      tt = in1.recv() => { ii1 = tt; },\n      tt = in2.recv() => { ii2 = tt; }\n      };     \n      let rr = ii1 & ii2; \n      if rr != prev_rr { \n          prev_rr = rr;\n          zz.send(rr);\n      } \n   }      \n}\n\n\n\nfn top ()  -> ()  { \n   let (w1_s, w1_r) : (Sender<bool>, Receiver<bool>) = channel();\n   let (w2_s, w2_r) : (Sender<bool>, Receiver<bool>) = channel();\n   let (w3_s, w3_r) : (Sender<bool>, Receiver<bool>) = channel();\n   let (w4_s, w4_r) : (Sender<bool>, Receiver<bool>) = channel();\n\n\n   spawn(proc() { \n      loop { \n        let bb = w3_r.recv();\n         println!(\"ww3 is now {}\", bb);\n     } \n   });\n   spawn(proc() { \n      loop { \n        let bb = w4_r.recv();\n         println!(\"ww4 is now {}\", bb);\n     } \n   });\n\n   spawn(proc() { \n      run_and(w1_r, w2_r, w3_s);\n   });\n\n/*\n   spawn(proc() { \n      run_and(w1_r2, w2_r2, w4_s);\n   });\n*/\n\n   w1_s.send(true);\n   sleep(1000);\n   w2_s.send(true);\n   sleep(1000);\n   w1_s.send(true);\n   sleep(1000);\n   w2_s.send(true);\n   sleep(1000);\n   w1_s.send(false);\n   sleep(1000);\n   w2_s.send(false);\n   sleep(1000);\n\n   println!(\"I'm done now!\");\n}\n\n\nfn main() { \n   top();\n} \n```\n", "closed_by": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/13488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/13488/timeline", "performed_via_github_app": null, "state_reason": "completed"}