{"url": "https://api.github.com/repos/rust-lang/rust/issues/111228", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111228/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111228/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111228/events", "html_url": "https://github.com/rust-lang/rust/issues/111228", "id": 1696954054, "node_id": "I_kwDOAAsO6M5lJXbG", "number": 111228, "title": "Experimental feature \"BTreeMap cursors\": CursorMut.peek_prev() broken", "user": {"login": "theandi667", "id": 94802550, "node_id": "U_kgDOBaaSdg", "avatar_url": "https://avatars.githubusercontent.com/u/94802550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theandi667", "html_url": "https://github.com/theandi667", "followers_url": "https://api.github.com/users/theandi667/followers", "following_url": "https://api.github.com/users/theandi667/following{/other_user}", "gists_url": "https://api.github.com/users/theandi667/gists{/gist_id}", "starred_url": "https://api.github.com/users/theandi667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theandi667/subscriptions", "organizations_url": "https://api.github.com/users/theandi667/orgs", "repos_url": "https://api.github.com/users/theandi667/repos", "events_url": "https://api.github.com/users/theandi667/events{/privacy}", "received_events_url": "https://api.github.com/users/theandi667/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 166999014, "node_id": "MDU6TGFiZWwxNjY5OTkwMTQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-collections", "name": "A-collections", "color": "f7e101", "default": false, "description": "Area: std::collections."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-05-05T03:27:16Z", "updated_at": "2023-05-05T18:48:05Z", "closed_at": "2023-05-05T18:48:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "While using the experimental new API \"BTreeMap cursors\" (tracking issue: #107540) I noticed that the CursorMut.peek_prev() API, which is documented to return the last element of the map if the cursor is pointing to the \"ghost\" non-element, returns the _first_ element of the map instead. Not only does this disagree with the documentation, the _immutable_ Cursor.peek_prev() API does the right thing. Here's a small testcase:\r\n\r\n```rust\r\n#![feature(btree_cursors)]\r\n\r\nfn main() {}\r\n\r\n#[cfg(test)]\r\nmod tests {\r\n\r\n    use std::collections::BTreeMap;\r\n    use std::ops::Bound;\r\n\r\n    #[test]\r\n    fn test_cursor() {\r\n        let map = BTreeMap::from([(1, 1), (2, 2), (3, 3)]);\r\n\r\n        let cursor = map.lower_bound(Bound::Excluded(&3));\r\n        assert!(cursor.key().is_none());\r\n\r\n        let prev = cursor.peek_prev();\r\n        assert!(matches!(prev, Some((&3, _))));\r\n    }\r\n\r\n    #[test]\r\n    fn test_cursor_mut() {\r\n        let mut map = BTreeMap::from([(1, 1), (2, 2), (3, 3)]);\r\n\r\n        let mut cursor = map.lower_bound_mut(Bound::Excluded(&3));\r\n        assert!(cursor.key().is_none());\r\n\r\n        let prev = cursor.peek_prev();\r\n        // FAILS, prev is Some((&1, &1)) instead.\r\n        assert!(matches!(prev, Some((&3, _))));\r\n    }\r\n}\r\n```\r\n\r\nThe CursorMut.peek_prev() API should, as documented, return the _last_ element of the map if the cursor points at the \"ghost\" non-element.\r\n\r\nInstead, this happened: It currently returns the _first_ element of the map.\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.71.0-nightly (39c6804b9 2023-04-19)\r\nbinary: rustc\r\ncommit-hash: 39c6804b92aa202369e402525cee329556bc1db0\r\ncommit-date: 2023-04-19\r\nhost: aarch64-apple-darwin\r\nrelease: 1.71.0-nightly\r\nLLVM version: 16.0.2\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111228/timeline", "performed_via_github_app": null, "state_reason": "completed"}