{"url": "https://api.github.com/repos/rust-lang/rust/issues/43991", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43991/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43991/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43991/events", "html_url": "https://github.com/rust-lang/rust/issues/43991", "id": 251454115, "node_id": "MDU6SXNzdWUyNTE0NTQxMTU=", "number": 43991, "title": "ICE: 'assertion failed: is_value_path', src/librustc/util/ppaux.rs:121:12", "user": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-19T22:45:18Z", "updated_at": "2017-08-20T18:00:53Z", "closed_at": "2017-08-20T18:00:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Applying the following diff on top of 7f397bdb produces the ICE `thread 'rustc' panicked at 'assertion failed: is_value_path', src/librustc/util/ppaux.rs:121:12`.\r\n\r\n```diff\r\ndiff --git a/src/librustc/util/ppaux.rs b/src/librustc/util/ppaux.rs\r\nindex 184fd75135..3408c4b8e2 100644\r\n--- a/src/librustc/util/ppaux.rs\r\n+++ b/src/librustc/util/ppaux.rs\r\n@@ -958,15 +958,7 @@ impl<'tcx> fmt::Display for ty::ProjectionPredicate<'tcx> {\r\n \r\n impl<'tcx> fmt::Display for ty::ProjectionTy<'tcx> {\r\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\r\n-        // FIXME(tschottdorf): use something like\r\n-        //   parameterized(f, self.substs, self.item_def_id, &[])\r\n-        // (which currently ICEs).\r\n-        let (trait_ref, item_name) = ty::tls::with(|tcx|\r\n-            (self.trait_ref(tcx), tcx.associated_item(self.item_def_id).name)\r\n-        );\r\n-        write!(f, \"{:?}::{}\",\r\n-               trait_ref,\r\n-               item_name)\r\n+        parameterized(f, self.substs, self.item_def_id, &[])\r\n     }\r\n }\r\n \r\n```\r\n\r\n```\r\n$ RUST_BACKTRACE=1 ./x.py test --stage 1 --incremental ./src/rustc\r\nUpdating submodules\r\n    Finished dev [unoptimized] target(s) in 0.0 secs\r\nBuilding stage0 std artifacts (x86_64-apple-darwin -> x86_64-apple-darwin)\r\n    Finished release [optimized] target(s) in 0.0 secs\r\nCopying stage0 std from stage0 (x86_64-apple-darwin -> x86_64-apple-darwin / x86_64-apple-darwin)\r\nBuilding stage0 test artifacts (x86_64-apple-darwin -> x86_64-apple-darwin)\r\n    Finished release [optimized] target(s) in 0.0 secs\r\nCopying stage0 test from stage0 (x86_64-apple-darwin -> x86_64-apple-darwin / x86_64-apple-darwin)\r\nBuilding stage0 compiler artifacts (x86_64-apple-darwin -> x86_64-apple-darwin)\r\n   Compiling rustc v0.0.0 (file:///Users/tamird/src/rust/src/librustc)\r\n   Compiling rustc_resolve v0.0.0 (file:///Users/tamird/src/rust/src/librustc_resolve)\r\n   Compiling rustc_trans_utils v0.0.0 (file:///Users/tamird/src/rust/src/librustc_trans_utils)\r\n   Compiling rustc_const_eval v0.0.0 (file:///Users/tamird/src/rust/src/librustc_const_eval)\r\n   Compiling rustc_incremental v0.0.0 (file:///Users/tamird/src/rust/src/librustc_incremental)\r\n   Compiling rustc_privacy v0.0.0 (file:///Users/tamird/src/rust/src/librustc_privacy)\r\n   Compiling rustc_metadata v0.0.0 (file:///Users/tamird/src/rust/src/librustc_metadata)\r\n   Compiling rustc_typeck v0.0.0 (file:///Users/tamird/src/rust/src/librustc_typeck)\r\n   Compiling rustc_allocator v0.0.0 (file:///Users/tamird/src/rust/src/librustc_allocator)\r\n   Compiling rustc_passes v0.0.0 (file:///Users/tamird/src/rust/src/librustc_passes)\r\n   Compiling rustc_lint v0.0.0 (file:///Users/tamird/src/rust/src/librustc_lint)\r\n   Compiling rustc_mir v0.0.0 (file:///Users/tamird/src/rust/src/librustc_mir)\r\n   Compiling rustc_trans v0.0.0 (file:///Users/tamird/src/rust/src/librustc_trans)\r\n   Compiling rustc_save_analysis v0.0.0 (file:///Users/tamird/src/rust/src/librustc_save_analysis)\r\n   Compiling rustc_plugin v0.0.0 (file:///Users/tamird/src/rust/src/librustc_plugin)\r\n   Compiling rustc_borrowck v0.0.0 (file:///Users/tamird/src/rust/src/librustc_borrowck)\r\n   Compiling rustc_driver v0.0.0 (file:///Users/tamird/src/rust/src/librustc_driver)\r\n   Compiling rustc-main v0.0.0 (file:///Users/tamird/src/rust/src/rustc)\r\n    Finished release [optimized] target(s) in 203.92 secs\r\nCopying stage0 rustc from stage0 (x86_64-apple-darwin -> x86_64-apple-darwin / x86_64-apple-darwin)\r\nAssembling stage1 compiler (x86_64-apple-darwin)\r\nBuilding stage1 std artifacts (x86_64-apple-darwin -> x86_64-apple-darwin)\r\n   Compiling core v0.0.0 (file:///Users/tamird/src/rust/src/libcore)\r\n   Compiling unwind v0.0.0 (file:///Users/tamird/src/rust/src/libunwind)\r\n   Compiling libc v0.0.0 (file:///Users/tamird/src/rust/src/rustc/libc_shim)\r\n   Compiling compiler_builtins v0.0.0 (file:///Users/tamird/src/rust/src/rustc/compiler_builtins_shim)\r\n   Compiling alloc_jemalloc v0.0.0 (file:///Users/tamird/src/rust/src/liballoc_jemalloc)\r\n   Compiling rustc_asan v0.0.0 (file:///Users/tamird/src/rust/src/librustc_asan)\r\n   Compiling rustc_tsan v0.0.0 (file:///Users/tamird/src/rust/src/librustc_tsan)\r\n   Compiling std v0.0.0 (file:///Users/tamird/src/rust/src/libstd)\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.21.0-dev (ceeb399ce 2017-08-19) running on x86_64-apple-darwin\r\n\r\nnote: run with `RUST_BACKTRACE=1` for a backtrace\r\n\r\nthread 'rustc' panicked at 'assertion failed: is_value_path', src/librustc/util/ppaux.rs:121:12\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace\r\n   1: std::sys_common::backtrace::_print\r\n   2: std::sys_common::backtrace::print\r\n   3: std::panicking::default_hook::{{closure}}\r\n   4: std::panicking::default_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n   6: std::panicking::begin_panic\r\n   7: <std::thread::local::LocalKey<T>>::try_with\r\n   8: <std::thread::local::LocalKey<T>>::with\r\n   9: rustc::ty::context::tls::with\r\n  10: rustc::util::ppaux::parameterized\r\n  11: core::fmt::write\r\n  12: core::fmt::Formatter::write_fmt\r\n  13: rustc::util::ppaux::<impl core::fmt::Display for rustc::ty::sty::TypeVariants<'tcx>>::fmt\r\n  14: core::fmt::write\r\n  15: core::fmt::Formatter::write_fmt\r\n  16: rustc::util::ppaux::<impl core::fmt::Display for rustc::ty::TyS<'tcx>>::fmt\r\n  17: core::fmt::write\r\n  18: core::fmt::Formatter::write_fmt\r\n  19: rustc::util::ppaux::<impl core::fmt::Display for rustc::ty::sty::TypeAndMut<'tcx>>::fmt\r\n  20: core::fmt::write\r\n  21: core::fmt::Formatter::write_fmt\r\n  22: rustc::util::ppaux::<impl core::fmt::Display for rustc::ty::sty::TypeVariants<'tcx>>::fmt\r\n  23: core::fmt::write\r\n  24: core::fmt::Formatter::write_fmt\r\n  25: rustc::util::ppaux::<impl core::fmt::Display for rustc::ty::TyS<'tcx>>::fmt\r\n  26: core::fmt::write\r\n  27: core::fmt::Formatter::write_fmt\r\n  28: rustc::util::ppaux::<impl core::fmt::Display for rustc::ty::sty::TypeVariants<'tcx>>::fmt\r\n  29: core::fmt::write\r\n  30: core::fmt::Formatter::write_fmt\r\n  31: rustc::util::ppaux::<impl core::fmt::Display for rustc::ty::TyS<'tcx>>::fmt\r\n  32: core::fmt::write\r\n  33: core::fmt::Formatter::write_fmt\r\n  34: rustc::util::ppaux::parameterized\r\n  35: core::fmt::write\r\n  36: core::fmt::Formatter::write_fmt\r\n  37: rustc::util::ppaux::in_binder\r\n  38: <std::thread::local::LocalKey<T>>::try_with\r\n  39: <std::thread::local::LocalKey<T>>::with\r\n  40: rustc::ty::context::tls::with\r\n  41: rustc::util::ppaux::<impl core::fmt::Display for rustc::ty::sty::Binder<rustc::ty::sty::TraitRef<'tcx>>>::fmt\r\n  42: core::fmt::write\r\n  43: core::fmt::Write::write_fmt\r\n  44: <rustc_typeck::astconv::AstConv<'gcx, 'tcx> + 'o>::ast_type_binding_to_poly_projection_predicate\r\n  45: <alloc::vec::Vec<T>>::extend_desugared\r\n  46: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::spec_extend\r\n  47: <rustc_typeck::astconv::AstConv<'gcx, 'tcx> + 'o>::instantiate_poly_trait_ref\r\n  48: rustc_typeck::collect::predicates_of\r\n  49: rustc::ty::maps::<impl rustc::ty::maps::queries::predicates_of<'tcx>>::try_get_with::{{closure}}::run_provider\r\n  50: rustc::dep_graph::graph::DepGraph::with_task\r\n  51: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::cycle_check\r\n  52: rustc::ty::maps::<impl rustc::ty::maps::queries::predicates_of<'tcx>>::try_get_with\r\n  53: rustc::ty::maps::<impl rustc::ty::maps::queries::predicates_of<'tcx>>::try_get\r\n  54: rustc::ty::maps::TyCtxtAt::predicates_of\r\n  55: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::predicates_of\r\n  56: rustc_typeck::collect::convert_item\r\n  57: <rustc_typeck::collect::CollectItemTypesVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_item\r\n  58: rustc::hir::Crate::visit_all_item_likes\r\n  59: rustc_typeck::collect::collect_item_types\r\n  60: rustc::util::common::time\r\n  61: rustc::session::Session::track_errors\r\n  62: rustc_typeck::check_crate\r\n  63: <std::thread::local::LocalKey<T>>::try_with\r\n  64: <std::thread::local::LocalKey<T>>::with\r\n  65: rustc::ty::context::tls::enter\r\n  66: <std::thread::local::LocalKey<T>>::try_with\r\n  67: <std::thread::local::LocalKey<T>>::with\r\n  68: rustc::ty::context::tls::enter_global\r\n  69: rustc::ty::context::TyCtxt::create_and_enter\r\n  70: rustc_driver::driver::phase_3_run_analysis_passes\r\n  71: rustc_driver::driver::compile_input\r\n  72: rustc_driver::run_compiler\r\n\r\nerror: Could not compile `core`.\r\n\r\nCaused by:\r\n  process didn't exit successfully: `/Users/tamird/src/rust/build/bootstrap/debug/rustc --crate-name core src/libcore/lib.rs --error-format json --crate-type lib --emit=dep-info,link -C opt-level=2 -C metadata=27a0b780c8c3f494 -C extra-filename=-27a0b780c8c3f494 --out-dir /Users/tamird/src/rust/build/x86_64-apple-darwin/stage1-std/x86_64-apple-darwin/release/deps --target x86_64-apple-darwin -L dependency=/Users/tamird/src/rust/build/x86_64-apple-darwin/stage1-std/x86_64-apple-darwin/release/deps -L dependency=/Users/tamird/src/rust/build/x86_64-apple-darwin/stage1-std/release/deps` (exit code: 101)\r\nthread 'main' panicked at 'command did not execute successfully: \"/Users/tamird/src/rust/build/x86_64-apple-darwin/stage0/bin/cargo\" \"build\" \"-j\" \"4\" \"--target\" \"x86_64-apple-darwin\" \"--release\" \"--features\" \"panic-unwind jemalloc backtrace\" \"--manifest-path\" \"/Users/tamird/src/rust/src/libstd/Cargo.toml\" \"--message-format\" \"json\"\r\nexpected success, got: exit code: 101', src/bootstrap/compile.rs:869:8\r\nstack backtrace:\r\n   0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace\r\n   1: std::panicking::default_hook::{{closure}}\r\n   2: std::panicking::default_hook\r\n   3: std::panicking::rust_panic_with_hook\r\n   4: std::panicking::begin_panic_new\r\n   5: std::panicking::begin_panic_fmt\r\n   6: bootstrap::compile::run_cargo\r\n   7: <bootstrap::compile::Std as bootstrap::builder::Step>::run\r\n   8: bootstrap::builder::Builder::ensure\r\n   9: <bootstrap::compile::Test as bootstrap::builder::Step>::run\r\n  10: bootstrap::builder::Builder::ensure\r\n  11: <bootstrap::check::Crate as bootstrap::builder::Step>::run\r\n  12: bootstrap::builder::Builder::ensure\r\n  13: <bootstrap::check::CrateLibrustc as bootstrap::builder::Step>::run\r\n  14: bootstrap::builder::Builder::ensure\r\n  15: <bootstrap::check::CrateLibrustc as bootstrap::builder::Step>::make_run::{{closure}}\r\n  16: <bootstrap::check::CrateLibrustc as bootstrap::builder::Step>::make_run\r\n  17: bootstrap::builder::StepDescription::maybe_run\r\n  18: bootstrap::builder::StepDescription::run\r\n  19: bootstrap::builder::Builder::run\r\n  20: bootstrap::Build::build\r\n  21: bootstrap::main\r\n  22: __rust_maybe_catch_panic\r\n  23: std::rt::lang_start\r\n  24: main\r\nfailed to run: /Users/tamird/src/rust/build/bootstrap/debug/bootstrap test --stage 1 --incremental ./src/rustc\r\nBuild completed unsuccessfully in 0:03:34\r\n```\r\n\r\ncc @eddyb @tschottdorf ", "closed_by": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43991/timeline", "performed_via_github_app": null, "state_reason": "completed"}