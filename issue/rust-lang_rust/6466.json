{"url": "https://api.github.com/repos/rust-lang/rust/issues/6466", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/6466/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/6466/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/6466/events", "html_url": "https://github.com/rust-lang/rust/issues/6466", "id": 14293774, "node_id": "MDU6SXNzdWUxNDI5Mzc3NA==", "number": 6466, "title": "configure fails clang++ required but not found.", "user": {"login": "bruceiv", "id": 1854258, "node_id": "MDQ6VXNlcjE4NTQyNTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1854258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bruceiv", "html_url": "https://github.com/bruceiv", "followers_url": "https://api.github.com/users/bruceiv/followers", "following_url": "https://api.github.com/users/bruceiv/following{/other_user}", "gists_url": "https://api.github.com/users/bruceiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/bruceiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bruceiv/subscriptions", "organizations_url": "https://api.github.com/users/bruceiv/orgs", "repos_url": "https://api.github.com/users/bruceiv/repos", "events_url": "https://api.github.com/users/bruceiv/events{/privacy}", "received_events_url": "https://api.github.com/users/bruceiv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2013-05-14T04:49:01Z", "updated_at": "2015-02-02T14:17:26Z", "closed_at": "2015-02-02T14:17:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've downloaded rust-0.6, and am attempting to install it on Ubuntu 13.04. Unlike in Issue 1774, I _have_ installed clang (though not g++), and have set my CC and CXX environment variables appropriately, but the configure script fails with the message below:\n\n```\nchecking tool compatibility... configure: error: g++|clang++|icc required but not found\nconfigure: error: LLVM\n```\n\nfull ,/configure output:\n\n```\nconfigure: looking for configure programs\nconfigure: found cmp\nconfigure: found mkdir\nconfigure: found printf\nconfigure: found cut\nconfigure: found head\nconfigure: found grep\nconfigure: found xargs\nconfigure: found cp\nconfigure: found find\nconfigure: found uname\nconfigure: found date\nconfigure: found tr\nconfigure: found sed\nconfigure: inspecting environment\nconfigure: recreating config.tmp\nconfigure: \nconfigure: processing /home/aaron/Downloads/rust-0.6/configure args\nconfigure: \nconfigure: CFG_PREFIX           := /usr/local \nconfigure: CFG_LOCAL_RUST_ROOT  := /usr/local \nconfigure: CFG_LLVM_ROOT        :=  \nconfigure: CFG_BUILD_TRIPLE     := x86_64-unknown-linux-gnu \nconfigure: CFG_HOST_TRIPLES     := x86_64-unknown-linux-gnu \nconfigure: CFG_TARGET_TRIPLES   := x86_64-unknown-linux-gnu \nconfigure: CFG_ANDROID_CROSS_PATH := /opt/ndk_standalone \nconfigure: CFG_MINGW32_CROSS_PATH :=  \nconfigure: \nconfigure: validating /home/aaron/Downloads/rust-0.6/configure args\nconfigure: \nconfigure: \nconfigure: looking for build programs\nconfigure: \nconfigure: CFG_PERL             := /usr/bin/perl \nconfigure: CFG_CURL             := /usr/bin/curl (7.29.0)\nconfigure: CFG_PYTHON           := /usr/bin/python2.7 \nconfigure: CFG_GIT              := /usr/bin/git (1.8.1.2)\nconfigure: git: no git directory. disabling submodules\nconfigure: CFG_CLANG            := /usr/bin/clang++ (3.2-1~exp9ubuntu1)\nconfigure: CFG_GCC              := /usr/bin/gcc (4.7.3-1ubuntu1))\nconfigure: CFG_LD               := /usr/bin/ld (2.23.2)\nconfigure: CFG_VALGRIND         :=  \nconfigure: CFG_PERF             :=  \nconfigure: CFG_ISCC             :=  \nconfigure: CFG_LLNEXTGEN        :=  \nconfigure: CFG_PANDOC           :=  \nconfigure: CFG_PDFLATEX         :=  \nconfigure: CFG_XETEX            :=  \nconfigure: CFG_LUATEX           :=  \nconfigure: CFG_NODE             :=  \nconfigure: CFG_GDB              := /usr/bin/gdb (7.5.91.20130417-cvs-ubuntu)\nconfigure: CFG_PAXCTL           :=  \nconfigure: CFG_ZCAT             := /bin/zcat (1.5)\nconfigure: \nconfigure: GRSecurity: no\nconfigure: \nconfigure: \nconfigure: making directories\nconfigure: \nconfigure: \nconfigure: configuring submodules\nconfigure: \nconfigure: \nconfigure: looking at LLVM\nconfigure: \nconfigure: configuring LLVM for x86_64-unknown-linux-gnu\nconfigure: configuring LLVM with:\nconfigure: --enable-targets=x86,x86_64,arm,mips --enable-optimized --disable-docs                    --enable-bindings=none --disable-threads                    --disable-pthreads --build=x86_64-unknown-linux-gnu                         --host=x86_64-unknown-linux-gnu --target=x86_64-unknown-linux-gnu\nchecking for x86_64-unknown-linux-gnu-clang... gcc\nchecking for C compiler default output file name... a.out\nchecking whether the C compiler works... yes\nchecking whether we are cross compiling... no\nchecking for suffix of executables... \nchecking for suffix of object files... o\nchecking whether we are using the GNU C compiler... yes\nchecking whether gcc accepts -g... yes\nchecking for gcc option to accept ISO C89... none needed\nchecking whether we are using the GNU C++ compiler... no\nchecking whether g++ accepts -g... no\nchecking how to run the C preprocessor... gcc -E\nchecking build system type... x86_64-unknown-linux-gnu\nchecking host system type... x86_64-unknown-linux-gnu\nchecking target system type... x86_64-unknown-linux-gnu\nchecking type of operating system we're going to host on... Linux\nchecking type of operating system we're going to target... Linux\nchecking target architecture... x86_64\nchecking for grep that handles long lines and -e... /bin/grep\nchecking for egrep... /bin/grep -E\nchecking for ANSI C header files... yes\nchecking for sys/types.h... yes\nchecking for sys/stat.h... yes\nchecking for stdlib.h... yes\nchecking for string.h... yes\nchecking for memory.h... yes\nchecking for strings.h... yes\nchecking for inttypes.h... yes\nchecking for stdint.h... yes\nchecking for unistd.h... yes\nchecking whether byte ordering is bigendian... no\nchecking optimization flags... -O3\nchecking for BSD-compatible nm... /usr/bin/nm -B\nchecking for GNU make... make\nchecking whether ln -s works... yes\nchecking for cmp... /usr/bin/cmp\nchecking for cp... /bin/cp\nchecking for date... /bin/date\nchecking for find... /usr/bin/find\nchecking for grep... (cached) /bin/grep\nchecking for mkdir... /bin/mkdir\nchecking for mv... /bin/mv\nchecking for x86_64-unknown-linux-gnu-ranlib... no\nchecking for ranlib... ranlib\nchecking for x86_64-unknown-linux-gnu-ar... no\nchecking for ar... ar\nchecking for rm... /bin/rm\nchecking for sed... /bin/sed\nchecking for tar... /bin/tar\nchecking for pwd... /bin/pwd\nchecking for Graphviz... echo Graphviz\nchecking for dot... echo dot\nchecking for fdp... echo fdp\nchecking for neato... echo neato\nchecking for twopi... echo twopi\nchecking for circo... echo circo\nchecking for gv... no\nchecking for gsview32... no\nchecking for dotty... echo dotty\nchecking for xdot.py... echo xdot.py\nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking for bzip2... /bin/bzip2\nchecking for cat... /bin/cat\nchecking for doxygen... no\nchecking for groff... /usr/bin/groff\nchecking for gzip... /bin/gzip\nchecking for pdfroff... no\nchecking for zip... /usr/bin/zip\nchecking for ocamlc... no\nchecking for ocamlopt... no\nchecking for ocamldep... no\nchecking for ocamldoc... no\nchecking for gas... no\nchecking for as... /usr/bin/as\nchecking for linker version... 2.23.2\nchecking for compiler -Wl,-R<path> option... yes\nchecking for compiler -Wl,-export-dynamic option... yes\nchecking for compiler -Wl,--version-script option... yes\nchecking for an ANSI C-conforming const... yes\nchecking for dirent.h that defines DIR... yes\nchecking for library containing opendir... none required\nchecking dlfcn.h usability... yes\nchecking dlfcn.h presence... yes\nchecking for dlfcn.h... yes\nchecking dynamic linker characteristics... GNU/Linux ld.so\nchecking which extension is used for loadable modules... .so\nchecking which variable specifies run-time library path... LD_LIBRARY_PATH\nchecking for the default library search path... /lib /usr/lib /usr/local/lib /lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/mesa-egl /usr/lib/x86_64-linux-gnu/mesa \nchecking for objdir... .libs\nchecking command to parse /usr/bin/nm -B output from  object... ok\nchecking whether libtool supports -dlopen/-dlpreopen... yes\nchecking for shl_load... no\nchecking for shl_load in -ldld... no\nchecking for dlopen in -ldl... yes\nchecking for dlerror... yes\nchecking for _ prefix in compiled symbols... no\nchecking whether deplibs are loaded by dlopen... yes\nchecking argz.h usability... yes\nchecking argz.h presence... yes\nchecking for argz.h... yes\nchecking for error_t... yes\nchecking for argz_append... yes\nchecking for argz_create_sep... yes\nchecking for argz_insert... yes\nchecking for argz_next... yes\nchecking for argz_stringify... yes\nchecking assert.h usability... yes\nchecking assert.h presence... yes\nchecking for assert.h... yes\nchecking ctype.h usability... yes\nchecking ctype.h presence... yes\nchecking for ctype.h... yes\nchecking errno.h usability... yes\nchecking errno.h presence... yes\nchecking for errno.h... yes\nchecking malloc.h usability... yes\nchecking malloc.h presence... yes\nchecking for malloc.h... yes\nchecking for memory.h... (cached) yes\nchecking for stdlib.h... (cached) yes\nchecking stdio.h usability... yes\nchecking stdio.h presence... yes\nchecking for stdio.h... yes\nchecking for unistd.h... (cached) yes\nchecking dl.h usability... no\nchecking dl.h presence... no\nchecking for dl.h... no\nchecking sys/dl.h usability... no\nchecking sys/dl.h presence... no\nchecking for sys/dl.h... no\nchecking dld.h usability... no\nchecking dld.h presence... no\nchecking for dld.h... no\nchecking mach-o/dyld.h usability... no\nchecking mach-o/dyld.h presence... no\nchecking for mach-o/dyld.h... no\nchecking for string.h... (cached) yes\nchecking for strchr... yes\nchecking for strrchr... yes\nchecking for memcpy... yes\nchecking for memmove... yes\nchecking for strcmp... yes\nchecking for closedir... yes\nchecking for opendir... yes\nchecking for readdir... yes\nchecking tool compatibility... configure: error: g++|clang++|icc required but not found\nconfigure: error: LLVM\n```\n\nmisc system details:\n\n```\n% whereis clang++\nclang++: /usr/bin/clang++ /usr/bin/X11/clang++ /usr/share/man/man1/clang++.1.gz\n% clang++ --version\nUbuntu clang version 3.2-1~exp9ubuntu1 (tags/RELEASE_32/final) (based on LLVM 3.2)\nTarget: x86_64-pc-linux-gnu\nThread model: posix\n% echo $CC $CXX    \n/usr/bin/clang /usr/bin/clang++\n```\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/6466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/6466/timeline", "performed_via_github_app": null, "state_reason": "completed"}