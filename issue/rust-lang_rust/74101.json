{"url": "https://api.github.com/repos/rust-lang/rust/issues/74101", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74101/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74101/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74101/events", "html_url": "https://github.com/rust-lang/rust/issues/74101", "id": 651644004, "node_id": "MDU6SXNzdWU2NTE2NDQwMDQ=", "number": 74101, "title": "cycle error when dealing with an unevaluated const in the type of a const param", "user": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1405345617, "node_id": "MDU6TGFiZWwxNDA1MzQ1NjE3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lazy-normalization", "name": "A-lazy-normalization", "color": "f7e101", "default": false, "description": "Area: lazy normalization (tracking issue: #60471)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-06T15:49:56Z", "updated_at": "2020-07-16T22:23:07Z", "closed_at": "2020-07-16T22:23:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```rust\r\n#![feature(const_generics)]\r\n\r\nfn foo<const N: [u8; { 3 + 1 }]>() {}\r\n```\r\nshould compile, but currently results in the following. I am kind of surprised that this ends up with **3** separate cycle errors.\r\n```\r\nwarning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/lib.rs:1:12\r\n  |\r\n1 | #![feature(const_generics)]\r\n  |            ^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\r\n\r\nerror[E0391]: cycle detected when computing type of `foo::N`\r\n --> src/lib.rs:3:14\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |              ^\r\n  |\r\n  = note: ...which again requires computing type of `foo::N`, completing the cycle\r\nnote: cycle used when computing type of `foo`\r\n --> src/lib.rs:3:1\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  | ^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror[E0391]: cycle detected when computing type of `foo::N`\r\n --> src/lib.rs:3:14\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |              ^\r\n  |\r\nnote: ...which requires const-evaluating + checking `foo::{{constant}}#0`...\r\n --> src/lib.rs:3:22\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |                      ^^^^^^^^^\r\nnote: ...which requires const-evaluating + checking `foo::{{constant}}#0`...\r\n --> src/lib.rs:3:22\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |                      ^^^^^^^^^\r\nnote: ...which requires const-evaluating `foo::{{constant}}#0`...\r\n --> src/lib.rs:3:22\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |                      ^^^^^^^^^\r\nnote: ...which requires optimizing MIR for `foo::{{constant}}#0`...\r\n --> src/lib.rs:3:22\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |                      ^^^^^^^^^\r\nnote: ...which requires elaborating drops for `foo::{{constant}}#0`...\r\n --> src/lib.rs:3:22\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |                      ^^^^^^^^^\r\nnote: ...which requires borrow-checking `foo::{{constant}}#0`...\r\n --> src/lib.rs:3:22\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |                      ^^^^^^^^^\r\nnote: ...which requires processing `foo::{{constant}}#0`...\r\n --> src/lib.rs:3:22\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |                      ^^^^^^^^^\r\nnote: ...which requires const checking `foo::{{constant}}#0`...\r\n --> src/lib.rs:3:22\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |                      ^^^^^^^^^\r\nnote: ...which requires processing MIR for `foo::{{constant}}#0`...\r\n --> src/lib.rs:3:22\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |                      ^^^^^^^^^\r\nnote: ...which requires unsafety-checking `foo::{{constant}}#0`...\r\n --> src/lib.rs:3:22\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |                      ^^^^^^^^^\r\nnote: ...which requires building MIR for `foo::{{constant}}#0`...\r\n --> src/lib.rs:3:22\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |                      ^^^^^^^^^\r\n  = note: ...which again requires computing type of `foo::N`, completing the cycle\r\nnote: cycle used when computing type of `foo`\r\n --> src/lib.rs:3:1\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  | ^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror[E0391]: cycle detected when computing type of `foo::N`\r\n --> src/lib.rs:3:14\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |              ^\r\n  |\r\nnote: ...which requires const-evaluating + checking `foo::{{constant}}#0`...\r\n --> src/lib.rs:3:22\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |                      ^^^^^^^^^\r\nnote: ...which requires const-evaluating + checking `foo::{{constant}}#0`...\r\n --> src/lib.rs:3:22\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |                      ^^^^^^^^^\r\nnote: ...which requires const-evaluating `foo::{{constant}}#0`...\r\n --> src/lib.rs:3:22\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |                      ^^^^^^^^^\r\nnote: ...which requires optimizing MIR for `foo::{{constant}}#0`...\r\n --> src/lib.rs:3:22\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |                      ^^^^^^^^^\r\nnote: ...which requires elaborating drops for `foo::{{constant}}#0`...\r\n --> src/lib.rs:3:22\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |                      ^^^^^^^^^\r\nnote: ...which requires borrow-checking `foo::{{constant}}#0`...\r\n --> src/lib.rs:3:22\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  |                      ^^^^^^^^^\r\n  = note: ...which again requires computing type of `foo::N`, completing the cycle\r\nnote: cycle used when computing type of `foo`\r\n --> src/lib.rs:3:1\r\n  |\r\n3 | fn foo<const N: [u8; { 3 + 1 }]>() {}\r\n  | ^^^^^^^^^^^^^^^^^^^^\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74101/timeline", "performed_via_github_app": null, "state_reason": "completed"}