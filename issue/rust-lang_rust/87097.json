{"url": "https://api.github.com/repos/rust-lang/rust/issues/87097", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87097/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87097/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87097/events", "html_url": "https://github.com/rust-lang/rust/issues/87097", "id": 942815495, "node_id": "MDU6SXNzdWU5NDI4MTU0OTU=", "number": 87097, "title": "ICE with `capture_disjoint_fields` during match MIR building", "user": {"login": "DropDemBits", "id": 13354275, "node_id": "MDQ6VXNlcjEzMzU0Mjc1", "avatar_url": "https://avatars.githubusercontent.com/u/13354275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DropDemBits", "html_url": "https://github.com/DropDemBits", "followers_url": "https://api.github.com/users/DropDemBits/followers", "following_url": "https://api.github.com/users/DropDemBits/following{/other_user}", "gists_url": "https://api.github.com/users/DropDemBits/gists{/gist_id}", "starred_url": "https://api.github.com/users/DropDemBits/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DropDemBits/subscriptions", "organizations_url": "https://api.github.com/users/DropDemBits/orgs", "repos_url": "https://api.github.com/users/DropDemBits/repos", "events_url": "https://api.github.com/users/DropDemBits/events{/privacy}", "received_events_url": "https://api.github.com/users/DropDemBits/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-07-13T06:14:17Z", "updated_at": "2021-07-16T12:09:30Z", "closed_at": "2021-07-16T12:09:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nNightly only, since it depends on the `capture_disjoint_fields` feature gate.\r\nWithout the `capture_disjoint_fields` feature gate, the code compiles without an ICE.\r\n\r\n`f5d8117c3 2021-03-16` is the first nightly with the ICE.\r\nStill occurs on the latest nightly (`955b9c0d4 2021-07-12` at the time of writing).\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(capture_disjoint_fields)]\r\n  \r\nenum Variant {\r\n    A,\r\n    B,\r\n}\r\n\r\nstruct A {\r\n    field: Variant,\r\n}\r\n\r\nfn main() {\r\n    let here = A { field: Variant::A };\r\n    let out_ref = &here.field;\r\n\r\n    || match out_ref {\r\n        Variant::A => (),\r\n        Variant::B => (),\r\n    };\r\n}\r\n\r\n```\r\n\r\nICE still occurs when `out_ref` is substituted with `here.field`, e.g.\r\n\r\n```Rust\r\n|| match here.field {\r\n    Variant::A => (),\r\n    Variant::B => (),\r\n};\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc +nightly --version --verbose`:\r\n```\r\nrustc 1.55.0-nightly (955b9c0d4 2021-07-12)\r\nbinary: rustc\r\ncommit-hash: 955b9c0d4cd9176b53f518e01cbe175545c69947\r\ncommit-date: 2021-07-12\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.55.0-nightly\r\nLLVM version: 12.0.1\r\n```\r\n\r\n`rustc +bisector-ci-f5d8117c338a788bd24abec733fd143dfceb25a0-x86_64-unknown-linux-gnu --version --verbose`:\r\n```\r\nrustc 1.52.0-nightly (f5d8117c3 2021-03-16)\r\nbinary: rustc\r\ncommit-hash: f5d8117c338a788bd24abec733fd143dfceb25a0\r\ncommit-date: 2021-03-16\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.52.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n### Error output\r\n\r\n```\r\n    Checking ice-2021-07-13-0000 v0.1.0 (/path/to/ice-2021-07-13-0000)\r\nwarning: the feature `capture_disjoint_fields` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/main.rs:1:12\r\n  |\r\n1 | #![feature(capture_disjoint_fields)]\r\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #53488 <https://github.com/rust-lang/rust/issues/53488> for more information\r\n\r\nwarning: unused variable: `out_ref`\r\n  --> src/main.rs:14:9\r\n   |\r\n14 |     let out_ref = &here.field;\r\n   |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_out_ref`\r\n   |\r\n   = note: `#[warn(unused_variables)]` on by default\r\n\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler/rustc_mir_build/src/build/matches/mod.rs:1685:53\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.55.0-nightly (955b9c0d4 2021-07-12) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [mir_built] building MIR for `main::{closure#0}`\r\n#1 [unsafety_check_result] unsafety-checking `main::{closure#0}`\r\nend of query stack\r\nwarning: 2 warnings emitted\r\n\r\nerror: could not compile `ice-2021-07-13-0000`\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   0: rust_begin_unwind\r\n             at /rustc/955b9c0d4cd9176b53f518e01cbe175545c69947/library/std/src/panicking.rs:515:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/955b9c0d4cd9176b53f518e01cbe175545c69947/library/core/src/panicking.rs:92:14\r\n   2: core::panicking::panic\r\n             at /rustc/955b9c0d4cd9176b53f518e01cbe175545c69947/library/core/src/panicking.rs:50:5\r\n   3: rustc_mir_build::build::matches::<impl rustc_mir_build::build::Builder>::bind_and_guard_matched_candidate\r\n   4: rustc_mir_build::build::matches::<impl rustc_mir_build::build::Builder>::bind_pattern\r\n   5: rustc_mir_build::build::scope::<impl rustc_mir_build::build::Builder>::in_scope\r\n   6: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold\r\n   7: alloc::vec::source_iter_marker::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter\r\n   8: rustc_mir_build::build::expr::into::<impl rustc_mir_build::build::Builder>::expr_into_dest\r\n   9: rustc_mir_build::build::scope::<impl rustc_mir_build::build::Builder>::in_scope\r\n  10: rustc_mir_build::build::expr::into::<impl rustc_mir_build::build::Builder>::expr_into_dest\r\n  11: rustc_mir_build::build::scope::<impl rustc_mir_build::build::Builder>::in_scope\r\n  12: rustc_mir_build::build::expr::into::<impl rustc_mir_build::build::Builder>::expr_into_dest\r\n  13: rustc_mir_build::build::construct_fn\r\n  14: rustc_infer::infer::InferCtxtBuilder::enter\r\n  15: rustc_mir_build::build::mir_built\r\n  16: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  17: rustc_data_structures::stack::ensure_sufficient_stack\r\n  18: rustc_query_system::query::plumbing::get_query_impl\r\n  19: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_built\r\n  20: rustc_mir::transform::check_unsafety::unsafety_check_result\r\n  21: core::ops::function::FnOnce::call_once\r\n  22: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  23: rustc_data_structures::stack::ensure_sufficient_stack\r\n  24: rustc_query_system::query::plumbing::force_query_with_job\r\n  25: rustc_query_system::query::plumbing::get_query_impl\r\n  26: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::unsafety_check_result\r\n  27: <rustc_mir::transform::check_unsafety::UnsafetyChecker as rustc_middle::mir::visit::Visitor>::visit_rvalue\r\n  28: rustc_mir::transform::check_unsafety::unsafety_check_result\r\n  29: core::ops::function::FnOnce::call_once\r\n  30: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  31: rustc_data_structures::stack::ensure_sufficient_stack\r\n  32: rustc_query_system::query::plumbing::force_query_with_job\r\n  33: rustc_query_system::query::plumbing::get_query_impl\r\n  34: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::unsafety_check_result\r\n  35: rustc_mir::transform::mir_const\r\n  36: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  37: rustc_data_structures::stack::ensure_sufficient_stack\r\n  38: rustc_query_system::query::plumbing::get_query_impl\r\n  39: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_const\r\n  40: rustc_mir::transform::mir_promoted\r\n  41: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  42: rustc_data_structures::stack::ensure_sufficient_stack\r\n  43: rustc_query_system::query::plumbing::get_query_impl\r\n  44: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_promoted\r\n  45: rustc_mir::borrow_check::mir_borrowck\r\n  46: core::ops::function::FnOnce::call_once\r\n  47: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  48: rustc_data_structures::stack::ensure_sufficient_stack\r\n  49: rustc_query_system::query::plumbing::force_query_with_job\r\n  50: rustc_query_system::query::plumbing::get_query_impl\r\n  51: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_borrowck\r\n  52: rustc_middle::ty::<impl rustc_middle::ty::context::TyCtxt>::par_body_owners\r\n  53: rustc_interface::passes::analysis\r\n  54: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  55: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  56: rustc_query_system::dep_graph::graph::DepGraph<K>::with_eval_always_task\r\n  57: rustc_data_structures::stack::ensure_sufficient_stack\r\n  58: rustc_query_system::query::plumbing::force_query_with_job\r\n  59: rustc_query_system::query::plumbing::get_query_impl\r\n  60: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  61: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  62: rustc_span::with_source_map\r\n  63: rustc_interface::interface::create_compiler_and_run\r\n  64: scoped_tls::ScopedKey<T>::set\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87097/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87097/timeline", "performed_via_github_app": null, "state_reason": "completed"}