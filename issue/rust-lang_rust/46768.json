{"url": "https://api.github.com/repos/rust-lang/rust/issues/46768", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46768/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46768/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46768/events", "html_url": "https://github.com/rust-lang/rust/issues/46768", "id": 282618845, "node_id": "MDU6SXNzdWUyODI2MTg4NDU=", "number": 46768, "title": "ICE on type inference with for<'de> and Trait objects", "user": {"login": "Michael-F-Bryan", "id": 17380079, "node_id": "MDQ6VXNlcjE3MzgwMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/17380079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Michael-F-Bryan", "html_url": "https://github.com/Michael-F-Bryan", "followers_url": "https://api.github.com/users/Michael-F-Bryan/followers", "following_url": "https://api.github.com/users/Michael-F-Bryan/following{/other_user}", "gists_url": "https://api.github.com/users/Michael-F-Bryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Michael-F-Bryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Michael-F-Bryan/subscriptions", "organizations_url": "https://api.github.com/users/Michael-F-Bryan/orgs", "repos_url": "https://api.github.com/users/Michael-F-Bryan/repos", "events_url": "https://api.github.com/users/Michael-F-Bryan/events{/privacy}", "received_events_url": "https://api.github.com/users/Michael-F-Bryan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-16T11:54:55Z", "updated_at": "2018-01-30T13:50:57Z", "closed_at": "2018-01-30T13:50:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've just encountered an interesting ICE on both `stable` and `nightly` which only presents itself when using `for<'de>` in a where clause and boxed trait objects. \r\n\r\nA quick skim through the backtrace makes it look like an issue with type inference and the fact that the first argument is `self`.\r\n\r\nExample: \r\n\r\n```rust\r\nextern crate serde;\r\n\r\nuse std::error::Error;\r\nuse std::iter;\r\nuse serde::Deserialize;\r\n\r\n\r\npub trait Paginated: Executor {\r\n    fn paginated<T>(self) -> Box<Iterator<Item = Result<T, Box<Error>>>>\r\n    where\r\n        Self: Sized,\r\n        T: for<'de> Deserialize<'de>,\r\n    {\r\n        match self.execute::<Vec<T>>() {\r\n            Ok(got) => Box::new(iter::empty()),\r\n            Err(e) => Box::new(iter::once(Err(e))),\r\n        }\r\n    }\r\n}\r\n\r\ntrait Executor {\r\n    fn execute<T>(self) -> Result<T, Box<Error>>\r\n    where\r\n        Self: Sized,\r\n        T: for<'de> Deserialize<'de>,\r\n    {\r\n        unimplemented!()\r\n    }\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\n([playground])\r\n\r\nBacktrace:\r\n\r\n```\r\n$ RUST_BACKTRACE=full cargo run\r\n...\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.22.1 (05e2e1c41 2017-11-22) running on x86_64-unknown-linux-gnu\r\n\r\nnote: run with `RUST_BACKTRACE=1` for a backtrace\r\n\r\nthread 'rustc' panicked at 'assertion failed: !(self.has_self && idx == 0)', /checkout/src/librustc/ty/mod.rs:788:16\r\nstack backtrace:\r\n   0:     0x7fcfa867ce43 - std::sys::imp::backtrace::tracing::imp::unwind_backtrace::h8ed7485deb8ab958\r\n                               at /checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1:     0x7fcfa8677590 - std::sys_common::backtrace::_print::h3d4f9ea58578e60f\r\n                               at /checkout/src/libstd/sys_common/backtrace.rs:69\r\n   2:     0x7fcfa868a343 - std::panicking::default_hook::{{closure}}::h0088fe51b67c687c\r\n                               at /checkout/src/libstd/sys_common/backtrace.rs:58\r\n                               at /checkout/src/libstd/panicking.rs:381\r\n   3:     0x7fcfa868a04a - std::panicking::default_hook::hf425c768c5ffbbad\r\n                               at /checkout/src/libstd/panicking.rs:391\r\n   4:     0x7fcfa868a807 - std::panicking::rust_panic_with_hook::h25b934bb4484e9e0\r\n                               at /checkout/src/libstd/panicking.rs:577\r\n   5:     0x7fcfa505aa3a - std::panicking::begin_panic::h00bf2a70e069c223\r\n   6:     0x7fcfa536ab7f - rustc::ty::Generics::type_param::h91ef8c39b7e0fd49\r\n   7:     0x7fcfa5223ae3 - rustc::infer::error_reporting::<impl rustc::infer::InferCtxt<'a, 'gcx, 'tcx>>::report_region_errors::h5eada194f4b8f339\r\n   8:     0x7fcfa52491a7 - rustc::infer::InferCtxt::resolve_regions_and_report_errors::h64edcb890c069ae8\r\n   9:     0x7fcfa764d2a5 - rustc_typeck::check::typeck_tables_of::{{closure}}::h042d0873aaf7fde0\r\n  10:     0x7fcfa7649b3b - rustc_typeck::check::typeck_tables_of::he5b52d40ac01f6ff\r\n  11:     0x7fcfa54198e4 - rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::force::h22c9013a5fcfb086\r\n  12:     0x7fcfa541a341 - rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::try_get::hf118a95b7cc6e708\r\n  13:     0x7fcfa550ae9a - rustc::ty::maps::TyCtxtAt::typeck_tables_of::h51c78abcf9c5a929\r\n  14:     0x7fcfa5507653 - rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_tables_of::hbf69b4488e565710\r\n  15:     0x7fcfa7648e27 - rustc_typeck::check::typeck_item_bodies::h39b104d6bb6d2f89\r\n  16:     0x7fcfa5416b0d - rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_item_bodies<'tcx>>::force::h28d47d1ad55f84fa\r\n  17:     0x7fcfa5417543 - rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_item_bodies<'tcx>>::try_get::h2e813186439f4ed0\r\n  18:     0x7fcfa550ad74 - rustc::ty::maps::TyCtxtAt::typeck_item_bodies::h4b1084eafa435c5e\r\n  19:     0x7fcfa5507623 - rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_item_bodies::hc5ad0d8db8d5fb90\r\n  20:     0x7fcfa769dccb - rustc_typeck::check_crate::h855fcdb3ee4b5abc\r\n  21:     0x7fcfa89aeb39 - rustc::ty::context::TyCtxt::create_and_enter::h3dad1968772b9cec\r\n  22:     0x7fcfa8a2cd4b - rustc_driver::driver::compile_input::h4bf59ac61f928939\r\n  23:     0x7fcfa8a489fe - rustc_driver::run_compiler::h2a410e29e6088b6b\r\n  24:     0x7fcfa89677c7 - std::sys_common::backtrace::__rust_begin_short_backtrace::hb62d9d382e421fd7\r\n  25:     0x7fcfa86c4bdc - __rust_maybe_catch_panic\r\n                               at /checkout/src/libpanic_unwind/lib.rs:99\r\n  26:     0x7fcfa89a0870 - <F as alloc::boxed::FnBox<A>>::call_box::h56ea5c52b2f008af\r\n  27:     0x7fcfa868920b - std::sys::imp::thread::Thread::new::thread_start::hbaf1b5aa1ca8e3ea\r\n                               at /checkout/src/liballoc/boxed.rs:736\r\n                               at /checkout/src/libstd/sys_common/thread.rs:24\r\n                               at /checkout/src/libstd/sys/unix/thread.rs:90\r\n  28:     0x7fcfa3543089 - start_thread\r\n  29:     0x7fcfa834b42e - __clone\r\n  30:                0x0 - <unknown>\r\n\r\nerror: Could not compile `repo-backup`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n[playground]: https://play.rust-lang.org/?gist=b10d02bb7426855453470cdbba01ff4f&version=stable", "closed_by": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46768/timeline", "performed_via_github_app": null, "state_reason": "completed"}