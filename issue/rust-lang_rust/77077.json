{"url": "https://api.github.com/repos/rust-lang/rust/issues/77077", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77077/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77077/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77077/events", "html_url": "https://github.com/rust-lang/rust/issues/77077", "id": 706726765, "node_id": "MDU6SXNzdWU3MDY3MjY3NjU=", "number": 77077, "title": "test code more or less identical to the main() hangs.", "user": {"login": "hboetes", "id": 2285225, "node_id": "MDQ6VXNlcjIyODUyMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/2285225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hboetes", "html_url": "https://github.com/hboetes", "followers_url": "https://api.github.com/users/hboetes/followers", "following_url": "https://api.github.com/users/hboetes/following{/other_user}", "gists_url": "https://api.github.com/users/hboetes/gists{/gist_id}", "starred_url": "https://api.github.com/users/hboetes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hboetes/subscriptions", "organizations_url": "https://api.github.com/users/hboetes/orgs", "repos_url": "https://api.github.com/users/hboetes/repos", "events_url": "https://api.github.com/users/hboetes/events{/privacy}", "received_events_url": "https://api.github.com/users/hboetes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-09-22T22:15:31Z", "updated_at": "2020-09-22T23:52:50Z", "closed_at": "2020-09-22T23:52:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, I'm trying to learn rust with exercism and I ran into the following situation which smells like  a bug to me.\r\n\r\nWhen I ran this code with:\r\n   `rustc src/lib.rs && time ./lib`\r\nit finishes after 2 seconds, returning the right result.\r\nWhen I run the tests (next snippet) with:\r\n   `cargo test -- --ignored`\r\nAll tests succeed, apart from the last one, identical to main()\r\nThere it crashes after say 120 seconds, whilst eating all my resources.\r\n\r\n```rust\r\npub fn sum_of_multiples(limit: u32, factors: &[u32]) -> u32 {\r\n    let mut sum:u32 = 0;\r\n    let mut x:u32;\r\n    let mut seen = Vec::new();\r\n    for i in factors {\r\n        x = 0;\r\n        while x + i < limit {\r\n            x = x + i;\r\n            if seen.iter().any(|&j| j == x) {\r\n                //println!(\"already seen {}\", x);\r\n            } else {\r\n                seen.push(x);\r\n                //println!(\"factor: {}\", x);\r\n                sum = sum + x;\r\n                //println!(\"intermediate sum: {}\", sum);\r\n            }\r\n        }\r\n    }\r\n    //println!(\"endsum: {}\", sum);\r\n    sum\r\n}\r\n\r\npub fn main() {\r\n    println!(\"{}\", sum_of_multiples(10_000, &[2,3,5,7,11]));\r\n    println!(\"should be: 39_614_537\");\r\n}\r\n```\r\n\r\n```rust\r\nuse sum_of_multiples::*;\r\n\r\n#[test]\r\nfn no_multiples_within_limit() {\r\n    assert_eq!(0, sum_of_multiples(1, &[3, 5]))\r\n}\r\n\r\n#[test]\r\n#[ignore]\r\nfn one_factor_has_multiples_within_limit() {\r\n    assert_eq!(3, sum_of_multiples(4, &[3, 5]))\r\n}\r\n\r\n#[test]\r\n#[ignore]\r\nfn more_than_one_multiple_within_limit() {\r\n    assert_eq!(9, sum_of_multiples(7, &[3]))\r\n}\r\n\r\n#[test]\r\n#[ignore]\r\nfn more_than_one_factor_with_multiples_within_limit() {\r\n    assert_eq!(23, sum_of_multiples(10, &[3, 5]))\r\n}\r\n\r\n#[test]\r\n#[ignore]\r\nfn each_multiple_is_only_counted_once() {\r\n    assert_eq!(2318, sum_of_multiples(100, &[3, 5]))\r\n}\r\n\r\n#[test]\r\n#[ignore]\r\nfn a_much_larger_limit() {\r\n    assert_eq!(233_168, sum_of_multiples(1000, &[3, 5]))\r\n}\r\n\r\n#[test]\r\n#[ignore]\r\nfn three_factors() {\r\n    assert_eq!(51, sum_of_multiples(20, &[7, 13, 17]))\r\n}\r\n\r\n#[test]\r\n#[ignore]\r\nfn factors_not_relatively_prime() {\r\n    assert_eq!(30, sum_of_multiples(15, &[4, 6]))\r\n}\r\n\r\n#[test]\r\n#[ignore]\r\nfn some_pairs_of_factors_relatively_prime_and_some_not() {\r\n    assert_eq!(4419, sum_of_multiples(150, &[5, 6, 8]))\r\n}\r\n\r\n#[test]\r\n#[ignore]\r\nfn one_factor_is_a_multiple_of_another() {\r\n    assert_eq!(275, sum_of_multiples(51, &[5, 25]))\r\n}\r\n\r\n#[test]\r\n#[ignore]\r\nfn much_larger_factors() {\r\n    assert_eq!(2_203_160, sum_of_multiples(10_000, &[43, 47]))\r\n}\r\n\r\n#[test]\r\n#[ignore]\r\nfn all_numbers_are_multiples_of_1() {\r\n    assert_eq!(4950, sum_of_multiples(100, &[1]))\r\n}\r\n\r\n#[test]\r\n#[ignore]\r\nfn no_factors_means_an_empty_sum() {\r\n    assert_eq!(0, sum_of_multiples(10_000, &[]))\r\n}\r\n\r\n#[test]\r\n#[ignore]\r\nfn the_only_multiple_of_0_is_0() {\r\n    assert_eq!(0, sum_of_multiples(1, &[0]))\r\n}\r\n\r\n#[test]\r\n#[ignore]\r\nfn the_factor_0_does_not_affect_the_sum_of_multiples_of_other_factors() {\r\n    assert_eq!(3, sum_of_multiples(4, &[3, 0]))\r\n}\r\n//Here comes the problematic test\r\n#[test]\r\n#[ignore]\r\nfn solutions_using_include_exclude_must_extend_to_cardinality_greater_than_3() {\r\n    assert_eq!(39_614_537, sum_of_multiples(10_000, &[2, 3, 5, 7, 11]))\r\n}\r\n```\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.46.0 (04488afe3 2020-08-24)\r\nbinary: rustc\r\ncommit-hash: 04488afe34512aa4c33566eb16d8c912a3ae04f9\r\ncommit-date: 2020-08-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.46.0\r\nLLVM version: 10.0\r\n```\r\nThe problem with nightly is identical.\r\n```\r\nrustc 1.48.0-nightly (fb1dc34a8 2020-09-21)\r\nbinary: rustc\r\ncommit-hash: fb1dc34a831688f8eca89ea22ea2eb39e881d729\r\ncommit-date: 2020-09-21\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.48.0-nightly\r\nLLVM version: 11.0\r\n```\r\n\r\nI tried getting a backtrace but that didn't work because I had to interrupt the process, or accept a melted CPU. Stracing the process also failed.\r\n", "closed_by": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77077/timeline", "performed_via_github_app": null, "state_reason": "completed"}