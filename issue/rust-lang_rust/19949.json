{"url": "https://api.github.com/repos/rust-lang/rust/issues/19949", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/19949/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/19949/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/19949/events", "html_url": "https://github.com/rust-lang/rust/issues/19949", "id": 52218475, "node_id": "MDU6SXNzdWU1MjIxODQ3NQ==", "number": 19949, "title": "\"Static\" methods should not be object safe", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-17T09:33:43Z", "updated_at": "2014-12-31T23:11:45Z", "closed_at": "2014-12-31T23:11:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While reading the object safety code I found this:\n\n``` rust\nty::StaticExplicitSelfCategory => {\n    // Static methods are always object-safe since they\n    // can't be called through a trait object\n    return msgs\n}\n```\n\nI think this is sadly incorrect. The whole idea of object safety is to ensure that an object type `Foo` implements the trait `Foo`. But if that is the case, then we can have an example like this one:\n\n``` rust\ntrait Foo for Sized? {\n    fn make() -> Self; // static method\n}\n\nfn use<Sized? F:Foo>() {\n    let x = Foo::make();\n}\n\nfn main() {\n    use::<Foo>();\n}\n```\n\ncc @nick29581 \ncc @aturon \n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/19949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/19949/timeline", "performed_via_github_app": null, "state_reason": "completed"}