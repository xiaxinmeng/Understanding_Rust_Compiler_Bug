{"url": "https://api.github.com/repos/rust-lang/rust/issues/42535", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42535/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42535/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42535/events", "html_url": "https://github.com/rust-lang/rust/issues/42535", "id": 234570302, "node_id": "MDU6SXNzdWUyMzQ1NzAzMDI=", "number": 42535, "title": "fix perf measurements for incremental test cases", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-08T15:40:44Z", "updated_at": "2017-06-12T19:30:25Z", "closed_at": "2017-06-12T19:30:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@arielb1 and @Mark-Simulacrum have done awesome work getting perf.rust-lang.org up and running again. Unfortunately, the current setup does not seem to be handling **incremental** data correctly (in particular, if you view the graphs, you'll see that all the measurements for the incremental tests -- which have names like `foo@010-bar` -- are zero). It'd be great to figure out what is going wrong! As a second goal, it'd be great to improve this setup and find better ways to visualize the data.\r\n\r\nThe current setup is described in [the README on the rustc-benchmarks repository](https://github.com/rust-lang-nursery/rustc-benchmarks#how-benchmarks-work). The basic idea is that we invoke a series of make targets with funny names like `all@010-bar`, and each one progressively mutates the setup in some way and then does a compilation (for example, they might apply a patch). This allows us to measure the effect of each change on compilation time.\r\n\r\nTo explain the idea, here are some of the regex targets:\r\n\r\n- `regex-0.1.80@010-baseline` -- builds without incremental, to establish a baseline time\r\n- `regex-0.1.80@020-incr-from-scratch` -- builds for the first time with incremental; comparing to the previous result gives us an idea of the base overhead for incremental tracking\r\n- `regex-0.1.80@030-compile_one` -- applies a patch that modifies a particular method; comparing to the `010-baseline` result gives us an idea of the gain from using incremental versus comparing by scratch every time, or this particular change.\r\n\r\nPerhaps @Mark-Simulacrum or @arielb1 can give some tips as to what *might* be wrong and how to go about debugging the problem? I'm not really sure (for example) what code `perf` is running or how to make it run locally. I'm labeling this as \"E-mentor\" but volunteering them as mentors. =)", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42535/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42535/timeline", "performed_via_github_app": null, "state_reason": "completed"}