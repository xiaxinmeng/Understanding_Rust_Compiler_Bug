{"url": "https://api.github.com/repos/rust-lang/rust/issues/86050", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86050/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86050/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86050/events", "html_url": "https://github.com/rust-lang/rust/issues/86050", "id": 912583272, "node_id": "MDU6SXNzdWU5MTI1ODMyNzI=", "number": 86050, "title": "ICE: `assertion failed: i < this.fields.count()`", "user": {"login": "max-cura", "id": 70043540, "node_id": "MDQ6VXNlcjcwMDQzNTQw", "avatar_url": "https://avatars.githubusercontent.com/u/70043540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-cura", "html_url": "https://github.com/max-cura", "followers_url": "https://api.github.com/users/max-cura/followers", "following_url": "https://api.github.com/users/max-cura/following{/other_user}", "gists_url": "https://api.github.com/users/max-cura/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-cura/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-cura/subscriptions", "organizations_url": "https://api.github.com/users/max-cura/orgs", "repos_url": "https://api.github.com/users/max-cura/repos", "events_url": "https://api.github.com/users/max-cura/events{/privacy}", "received_events_url": "https://api.github.com/users/max-cura/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-06-06T03:13:07Z", "updated_at": "2021-06-06T04:36:05Z", "closed_at": "2021-06-06T04:36:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "The key line seems to be the `Box::from_raw_in(/*pointer*/, allocator)` where `allocator` is specifically coming out of an Option; other than that I haven't the faintest where this is coming from.\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(allocator_api)]\r\n\r\nuse std::alloc::{Allocator, Global};\r\nuse std::ops::Drop;\r\n\r\npub struct CirqueLog<A: Allocator> {\r\n    allocator: Option<A>,\r\n}\r\n\r\nfn main() {\r\n    CirqueLog::<Global>::new();\r\n}\r\n\r\nimpl<A: Allocator> Drop for CirqueLog<A> {\r\n    fn drop(&mut self) {\r\n        match &self.allocator {\r\n            None => (),\r\n            Some(allocator) => unsafe {\r\n                Box::from_raw_in(std::ptr::null_mut() as *mut u8, allocator);\r\n            },\r\n        }\r\n        // also will error:\r\n        //if let Some(allocator) = &self.allocator {\r\n        //    unsafe { Box::from_raw_in(std::ptr::null_mut() as *mut u8, allocator); }\r\n        //}\r\n    }\r\n}\r\n\r\nimpl<A: Allocator> CirqueLog<A> {\r\n    pub fn new() -> CirqueLog<Global> {\r\n        CirqueLog {\r\n            allocator: Some(Global),\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.54.0-nightly (9111b8ae9 2021-05-26)\r\nbinary: rustc\r\ncommit-hash: 9111b8ae9793f18179a1336417618fc07a9cac85\r\ncommit-date: 2021-05-26\r\nhost: x86_64-apple-darwin\r\nrelease: 1.54.0-nightly\r\nLLVM version: 12.0.1\r\n```\r\n\r\n(also breaks on [playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=8c7a2042edba876663ec5bfd57ad0b7e))\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: i < this.fields.count()', /rustc/9111b8ae9793f18179a1336417618fc07a9cac85/compiler/rustc_middle/src/ty/layout.rs:2189:21\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: _rust_begin_unwind\r\n   1: core::panicking::panic_fmt\r\n   2: core::panicking::panic\r\n   3: rustc_middle::ty::layout::<impl rustc_target::abi::TyAndLayoutMethods<C> for &rustc_middle::ty::TyS>::field::ty_and_layout_kind\r\n   4: <rustc_target::abi::TyAndLayout<&rustc_middle::ty::TyS> as rustc_codegen_llvm::type_of::LayoutLlvmExt>::scalar_pair_element_llvm_type\r\n   5: <rustc_target::abi::TyAndLayout<&rustc_middle::ty::TyS> as rustc_codegen_llvm::type_of::LayoutLlvmExt>::scalar_pair_element_llvm_type\r\n   6: <rustc_target::abi::call::FnAbi<&rustc_middle::ty::TyS> as rustc_codegen_llvm::abi::FnAbiLlvmExt>::llvm_type\r\n   7: rustc_codegen_llvm::mono_item::<impl rustc_codegen_ssa::traits::declare::PreDefineMethods for rustc_codegen_llvm::context::CodegenCx>::predefine_fn\r\n   8: rustc_codegen_llvm::base::compile_codegen_unit::module_codegen\r\n   9: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  10: rustc_codegen_llvm::base::compile_codegen_unit\r\n  11: rustc_codegen_ssa::base::codegen_crate\r\n  12: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  13: rustc_interface::queries::Queries::ongoing_codegen\r\n  14: rustc_span::with_session_globals\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86050/timeline", "performed_via_github_app": null, "state_reason": "completed"}