{"url": "https://api.github.com/repos/rust-lang/rust/issues/34958", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/34958/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/34958/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/34958/events", "html_url": "https://github.com/rust-lang/rust/issues/34958", "id": 166869776, "node_id": "MDU6SXNzdWUxNjY4Njk3NzY=", "number": 34958, "title": "no_std rustdoctest failures on armhf", "user": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55301954, "node_id": "MDU6TGFiZWw1NTMwMTk1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-Arm", "name": "O-Arm", "color": "6e6ec0", "default": false, "description": "Target: 32-bit Arm processors (armv6, armv7, thumb...), including 64-bit Arm in AArch32 state"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-21T17:04:21Z", "updated_at": "2017-05-07T14:22:05Z", "closed_at": "2017-05-07T14:22:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `no_std` tests in `no-stdlib.md` and `lang-items.md` fail on armhf ([harris.debian.org](https://db.debian.org/machines.cgi?host=harris)) with errors like the following:\n\n```\nerror: linking with `cc` failed: exit code: 1\nnote: \"cc\" \"-Wl,--as-needed\" \"-Wl,-z,noexecstack\" \"-L\" \"/home/infinity0/rust/armv7-unknown-linux-gnueabihf/stage2/lib/rustlib/armv7-unknown-linux-gnueabihf/lib\" \"/tmp/rustdoctest.Pt5LMxioTt3L/rust_out.0.o\" \"-o\" \"/tmp/rustdoctest.Pt5LMxioTt3L/rust_out\" \"-Wl,--gc-sections\" \"-pie\" \"-nodefaultlibs\" \"-L\" \"/home/infinity0/rust/armv7-unknown-linux-gnueabihf/stage2/lib/rustlib/armv7-unknown-linux-gnueabihf/lib\" \"-Wl,-Bstatic\" \"-Wl,-Bdynamic\" \"/home/infinity0/rust/armv7-unknown-linux-gnueabihf/stage2/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/liblibc-e8edd0fd.rlib\" \"/home/infinity0/rust/armv7-unknown-linux-gnueabihf/stage2/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/libcore-e8edd0fd.rlib\" \"-l\" \"c\" \"-l\" \"m\" \"-l\" \"rt\" \"-l\" \"util\" \"-l\" \"compiler-rt\"\nnote: /tmp/rustdoctest.Pt5LMxioTt3L/rust_out.0.o:(.ARM.exidx.text._ZN8rust_out8allocate17h0a354a56233cfdc7E+0x0): undefined reference to `__aeabi_unwind_cpp_pr0'\n/tmp/rustdoctest.Pt5LMxioTt3L/rust_out.0.o:(.ARM.exidx.text._ZN8rust_out10deallocate17h30a2d76daae7371fE+0x0): undefined reference to `__aeabi_unwind_cpp_pr0'\n/tmp/rustdoctest.Pt5LMxioTt3L/rust_out.0.o:(.ARM.exidx.text._ZN8rust_out4main17hec68da2489a63b6aE+0x0): undefined reference to `__aeabi_unwind_cpp_pr0'\n/tmp/rustdoctest.Pt5LMxioTt3L/rust_out.0.o:(.ARM.exidx.text._ZN14Box$LT$i32$GT$9drop.411417hf88478677771e48aE+0x0): undefined reference to `__aeabi_unwind_cpp_pr0'\n/tmp/rustdoctest.Pt5LMxioTt3L/rust_out.0.o:(.ARM.exidx.text.main+0x0): undefined reference to `__aeabi_unwind_cpp_pr0'\ncollect2: error: ld returned 1 exit status\n\nerror: aborting due to previous error\n```\n\n@eddyb has suggested that these could just be ignored, and I have done this as a temporary measure for our Debian package - but they do pass on x86, x86-64 and even arm64, so perhaps you'd like to keep testing it there. [This post](https://lists.linaro.org/pipermail/linaro-toolchain/2011-April/001101.html) states \"[the missing function] is included in libgcc_eh.a and is normally pulled in automatically\".\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/34958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/34958/timeline", "performed_via_github_app": null, "state_reason": "completed"}