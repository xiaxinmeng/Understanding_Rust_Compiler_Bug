{"url": "https://api.github.com/repos/rust-lang/rust/issues/108753", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108753/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108753/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108753/events", "html_url": "https://github.com/rust-lang/rust/issues/108753", "id": 1609980767, "node_id": "I_kwDOAAsO6M5f9ltf", "number": 108753, "title": "UdpSocket::bind(bind_addr).unwrap() panics under VS2022 debugger", "user": {"login": "parthopdas", "id": 2140460, "node_id": "MDQ6VXNlcjIxNDA0NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2140460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parthopdas", "html_url": "https://github.com/parthopdas", "followers_url": "https://api.github.com/users/parthopdas/followers", "following_url": "https://api.github.com/users/parthopdas/following{/other_user}", "gists_url": "https://api.github.com/users/parthopdas/gists{/gist_id}", "starred_url": "https://api.github.com/users/parthopdas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parthopdas/subscriptions", "organizations_url": "https://api.github.com/users/parthopdas/orgs", "repos_url": "https://api.github.com/users/parthopdas/repos", "events_url": "https://api.github.com/users/parthopdas/events{/privacy}", "received_events_url": "https://api.github.com/users/parthopdas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123109, "node_id": "MDU6TGFiZWwxMjMxMDk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows", "name": "O-windows", "color": "6e6ec0", "default": false, "description": "Operating system: Windows"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-03-04T23:10:30Z", "updated_at": "2023-03-15T23:49:48Z", "closed_at": "2023-03-15T23:49:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\n(original: https://github.com/kitamstudios/rust-analyzer.vs/issues/14)\r\n\r\nI tried this code (nothing in Cargo.toml):\r\n\r\n```rust\r\n// Steps\r\n// - In VS2022, install https://marketplace.visualstudio.com/items?itemName=kitamstudios.RustAnalyzer&ssr=false#overview\r\n// - cargo new soc --bin\r\n// - Open folder soc in VS2022\r\n//\r\nuse std::net::{SocketAddr, UdpSocket};\r\n\r\nfn main() {\r\n    let bind_addr = SocketAddr::from(([127, 0, 0, 1], 54321));\r\n    let x = UdpSocket::bind(bind_addr).unwrap();\r\n    eprintln!(\"{:?}\", x);\r\n}\r\n```\r\n\r\nI expected to see this happen: \r\nRunning under the visual studio debugger should give the same results as cargo run.\r\n\r\nInstead, this happened: *explanation*\r\n\r\n1. Debug in VS2022 (i.e. using this rust-analyzer.vs extension) panics with ```Exception thrown at 0x00007FFB7B34CD29 in server.exe: Microsoft C++ exception:  ?? ::st_panic at memory location 0x000000A01290EF20.```.\r\n1. cargo build --profile dev succeeds, run exe gives ```UdpSocket { addr: 127.0.0.1:54321, socket: 236 }```\r\n1. cargo build --profile dev suceeds, open exe in vs and run under debugger gives the same as above ``````UdpSocket { addr: 127.0.0.1:54321, socket: 236 }``````\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.67.1 (d5a82bbd2 2023-02-07)\r\ncargo 1.67.1 (8ecd4f20a 2023-01-10)\r\nBuilding on stable-x86_64-pc-windows-msvc\r\n(Visual Studio Community 2022 (64-bit) Version 17.5.1)\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 10106, kind: Uncategorized, message: \"The requested service provider could not be loaded or initialized.\" }', src\\main.rs:5:40\r\nstack backtrace:\r\n   0:     0x7ff64207b1a2 - std::backtrace_rs::backtrace::dbghelp::trace\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\..\\..\\backtrace\\src\\backtrace\\dbghelp.rs:98\r\n   1:     0x7ff64207b1a2 - std::backtrace_rs::backtrace::trace_unsynchronized\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\..\\..\\backtrace\\src\\backtrace\\mod.rs:66\r\n   2:     0x7ff64207b1a2 - std::sys_common::backtrace::_print_fmt\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\sys_common\\backtrace.rs:65\r\n   3:     0x7ff64207b1a2 - std::sys_common::backtrace::_print::impl$0::fmt\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\sys_common\\backtrace.rs:44\r\n   4:     0x7ff64208ac6b - core::fmt::write\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\core\\src\\fmt\\mod.rs:1208\r\n   5:     0x7ff64207846a - std::io::Write::write_fmt<std::sys::windows::stdio::Stderr>\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\io\\mod.rs:1682\r\n   6:     0x7ff64207aeeb - std::sys_common::backtrace::_print\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\sys_common\\backtrace.rs:47\r\n   7:     0x7ff64207aeeb - std::sys_common::backtrace::print\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\sys_common\\backtrace.rs:34\r\n   8:     0x7ff64207d0e9 - std::panicking::default_hook::closure$1\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\panicking.rs:267\r\n   9:     0x7ff64207cd6b - std::panicking::default_hook\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\panicking.rs:286\r\n  10:     0x7ff64207d981 - std::panicking::rust_panic_with_hook\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\panicking.rs:688\r\n  11:     0x7ff64207d70e - std::panicking::begin_panic_handler::closure$0\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\panicking.rs:579\r\n  12:     0x7ff64207bbbf - std::sys_common::backtrace::__rust_end_short_backtrace<std::panicking::begin_panic_handler::closure_env$0,never$>\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\sys_common\\backtrace.rs:137\r\n  13:     0x7ff64207d3c0 - std::panicking::begin_panic_handler\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\panicking.rs:575\r\n  14:     0x7ff642090c95 - core::panicking::panic_fmt\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\core\\src\\panicking.rs:64\r\n  15:     0x7ff6420910b6 - core::result::unwrap_failed\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\core\\src\\result.rs:1791\r\n  16:     0x7ff642072545 - enum2$<core::result::Result<std::net::udp::UdpSocket,std::io::error::Error> >::unwrap<std::net::udp::UdpSocket,std::io::error::Error>\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483\\library\\core\\src\\result.rs:1113\r\n  17:     0x7ff6420727fd - soc::main\r\n                               at D:\\src\\delme\\soc\\src\\main.rs:5\r\n  18:     0x7ff642071a3b - core::ops::function::FnOnce::call_once<void (*)(),tuple$<> >\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483\\library\\core\\src\\ops\\function.rs:507\r\n  19:     0x7ff64207112e - std::sys_common::backtrace::__rust_begin_short_backtrace<void (*)(),tuple$<> >\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483\\library\\std\\src\\sys_common\\backtrace.rs:121\r\n  20:     0x7ff64207112e - std::sys_common::backtrace::__rust_begin_short_backtrace<void (*)(),tuple$<> >\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483\\library\\std\\src\\sys_common\\backtrace.rs:121\r\n  21:     0x7ff642071f81 - std::rt::lang_start::closure$0<tuple$<> >\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483\\library\\std\\src\\rt.rs:166\r\n  22:     0x7ff64207575e - core::ops::function::impls::impl$2::call_once\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\core\\src\\ops\\function.rs:606\r\n  23:     0x7ff64207575e - std::panicking::try::do_call\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\panicking.rs:483\r\n  24:     0x7ff64207575e - std::panicking::try\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\panicking.rs:447\r\n  25:     0x7ff64207575e - std::panic::catch_unwind\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\panic.rs:137\r\n  26:     0x7ff64207575e - std::rt::lang_start_internal::closure$2\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\rt.rs:148\r\n  27:     0x7ff64207575e - std::panicking::try::do_call\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\panicking.rs:483\r\n  28:     0x7ff64207575e - std::panicking::try\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\panicking.rs:447\r\n  29:     0x7ff64207575e - std::panic::catch_unwind\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\panic.rs:137\r\n  30:     0x7ff64207575e - std::rt::lang_start_internal\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library\\std\\src\\rt.rs:148\r\n  31:     0x7ff642071f5a - std::rt::lang_start<tuple$<> >\r\n                               at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483\\library\\std\\src\\rt.rs:165\r\n  32:     0x7ff6420728b9 - main\r\n  33:     0x7ff64208f54c - invoke_main\r\n                               at D:\\a\\_work\\1\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl:78\r\n  34:     0x7ff64208f54c - __scrt_common_main_seh\r\n                               at D:\\a\\_work\\1\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl:288\r\n  35:     0x7fff3db126bd - BaseThreadInitThunk\r\n  36:     0x7fff3e4aa9f8 - RtlUserThreadStart\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "parthopdas", "id": 2140460, "node_id": "MDQ6VXNlcjIxNDA0NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2140460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parthopdas", "html_url": "https://github.com/parthopdas", "followers_url": "https://api.github.com/users/parthopdas/followers", "following_url": "https://api.github.com/users/parthopdas/following{/other_user}", "gists_url": "https://api.github.com/users/parthopdas/gists{/gist_id}", "starred_url": "https://api.github.com/users/parthopdas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parthopdas/subscriptions", "organizations_url": "https://api.github.com/users/parthopdas/orgs", "repos_url": "https://api.github.com/users/parthopdas/repos", "events_url": "https://api.github.com/users/parthopdas/events{/privacy}", "received_events_url": "https://api.github.com/users/parthopdas/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108753/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}