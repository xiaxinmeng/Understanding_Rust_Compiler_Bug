{"url": "https://api.github.com/repos/rust-lang/rust/issues/50066", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50066/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50066/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50066/events", "html_url": "https://github.com/rust-lang/rust/issues/50066", "id": 315645531, "node_id": "MDU6SXNzdWUzMTU2NDU1MzE=", "number": 50066, "title": "calling as_ptr from `__asan_default_options` segfaults with `-C debuginfo=2`", "user": {"login": "Hello71", "id": 351006, "node_id": "MDQ6VXNlcjM1MTAwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/351006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hello71", "html_url": "https://github.com/Hello71", "followers_url": "https://api.github.com/users/Hello71/followers", "following_url": "https://api.github.com/users/Hello71/following{/other_user}", "gists_url": "https://api.github.com/users/Hello71/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hello71/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hello71/subscriptions", "organizations_url": "https://api.github.com/users/Hello71/orgs", "repos_url": "https://api.github.com/users/Hello71/repos", "events_url": "https://api.github.com/users/Hello71/events{/privacy}", "received_events_url": "https://api.github.com/users/Hello71/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-18T21:16:36Z", "updated_at": "2019-10-31T21:15:03Z", "closed_at": "2019-10-31T21:15:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "in the process of working around #41807, I found that the following code fragment results in a segmentation fault when run after compilation with `-Z sanitizer=address -C debuginfo=2`.\r\n\r\n```rust\r\nconst ASAN_DEFAULT_OPTIONS: &'static [u8] = b\"detect_odr_violation=1\\0\";\r\n\r\n#[no_mangle]\r\npub extern \"C\" fn __asan_default_options() -> *const u8 {\r\n    ASAN_DEFAULT_OPTIONS.as_ptr()\r\n}\r\n\r\nfn main() {\r\n    println!(\"Hello World!\");\r\n}\r\n```\r\n\r\n```\r\n$ rustc test.rs -Z sanitizer=address\r\n$ ./test\r\nHello World!\r\n$ rustc test.rs -Z sanitizer=address -C debuginfo=2\r\n$ ./test\r\nsh: segmentation fault (core dumped)  ./test\r\n$ rust-gdb ./test\r\n[ ... ]\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n0x000055555555e11d in alloc::slice::<impl [T]>::as_ptr (self=&[u8](len: 140737488345840) = {...})\r\n    at /checkout/src/liballoc/slice.rs:474\r\n(gdb) bt\r\n#0  0x000055555555e11d in alloc::slice::<impl [T]>::as_ptr (self=&[u8](len: 140737488345840) = {...})\r\n    at /checkout/src/liballoc/slice.rs:474\r\n#1  0x000055555555e2ae in __asan_default_options () at test.rs:5\r\n#2  0x000055555556da92 in __asan::MaybeCallAsanDefaultOptions ()\r\n    at /checkout/src/libcompiler_builtins/compiler-rt/lib/asan/asan_flags.cc:31\r\n#3  __asan::InitializeFlags () at /checkout/src/libcompiler_builtins/compiler-rt/lib/asan/asan_flags.cc:115\r\n#4  0x000055555555cd25 in __asan::AsanInitInternal ()\r\n    at /checkout/src/libcompiler_builtins/compiler-rt/lib/asan/asan_rtl.cc:380\r\n#5  0x00007ffff7de75de in _dl_init () from /lib64/ld-linux-x86-64.so.2\r\n#6  0x00007ffff7dd8f6a in _dl_start_user () from /lib64/ld-linux-x86-64.so.2\r\n#7  0x0000000000000001 in ?? ()\r\n#8  0x00007fffffffe062 in ?? ()\r\n#9  0x0000000000000000 in ?? ()\r\n```\r\n\r\nInterestingly, adding `-C opt-level=1` fixes the issue, as does manually inlining `as_ptr` (i.e. `ASAN_DEFAULT_OPTIONS as *const [u8] as *const u8`).", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50066/timeline", "performed_via_github_app": null, "state_reason": "completed"}