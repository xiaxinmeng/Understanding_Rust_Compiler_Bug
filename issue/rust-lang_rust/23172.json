{"url": "https://api.github.com/repos/rust-lang/rust/issues/23172", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/23172/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/23172/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/23172/events", "html_url": "https://github.com/rust-lang/rust/issues/23172", "id": 60249154, "node_id": "MDU6SXNzdWU2MDI0OTE1NA==", "number": 23172, "title": "JoinGuard should not panic in its destructor when unwinding another panic.", "user": {"login": "theemathas", "id": 6120103, "node_id": "MDQ6VXNlcjYxMjAxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/6120103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theemathas", "html_url": "https://github.com/theemathas", "followers_url": "https://api.github.com/users/theemathas/followers", "following_url": "https://api.github.com/users/theemathas/following{/other_user}", "gists_url": "https://api.github.com/users/theemathas/gists{/gist_id}", "starred_url": "https://api.github.com/users/theemathas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theemathas/subscriptions", "organizations_url": "https://api.github.com/users/theemathas/orgs", "repos_url": "https://api.github.com/users/theemathas/repos", "events_url": "https://api.github.com/users/theemathas/events{/privacy}", "received_events_url": "https://api.github.com/users/theemathas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-08T09:33:42Z", "updated_at": "2015-12-18T22:38:19Z", "closed_at": "2015-12-18T22:38:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, when the destructor of a `JoinGuard` runs, it will panic if the associated thread is panicking. (This is [not properly documented](http://doc.rust-lang.org/nightly/std/thread/struct.JoinGuard.html))\n\nThe problem is that when another panic is happening and the `JoinGuard`'s thread is also panicking, the program double-panics and aborts.\n\nAt least, I would like the `JoinGuard` to avoid double-panics (possibly by calling `thread::panicking()` first, and not panicking if that returns `true`).\n\nI am not sure whether the destructor should block if the child thread is still running but the parent thread panics, but that is another problem.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/23172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/23172/timeline", "performed_via_github_app": null, "state_reason": "completed"}