{"url": "https://api.github.com/repos/rust-lang/rust/issues/96295", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96295/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96295/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96295/events", "html_url": "https://github.com/rust-lang/rust/issues/96295", "id": 1211468794, "node_id": "I_kwDOAAsO6M5INYv6", "number": 96295, "title": "Wrong trait in \"use the fully qualified path for the potential candidates\" suggestion", "user": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-04-21T19:32:42Z", "updated_at": "2022-07-11T02:44:59Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Given the following code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=ee16c31890addb9bd9e64b3d393a2de3\r\n\r\n```rust\r\nstruct A<T>(T);\r\nstruct B;\r\n\r\ntrait I<T> {}\r\nimpl I<i32> for B {}\r\nimpl I<u32> for B {}\r\n\r\ntrait V<U> {\r\n    fn method(self) -> U;\r\n}\r\n\r\nimpl<T, U> V<U> for A<T>\r\nwhere\r\n    T: I<U>,\r\n{\r\n    fn method(self) -> U { unimplemented!() }\r\n}\r\n\r\nfn main() {\r\n    let a = A(B);\r\n    a.method();\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```console\r\nerror[E0283]: type annotations needed\r\n  --> src/main.rs:21:7\r\n   |\r\n21 |     a.method();\r\n   |     --^^^^^^--\r\n   |     | |\r\n   |     | cannot infer type for type parameter `U`\r\n   |     this method call resolves to `U`\r\n   |\r\nnote: multiple `impl`s satisfying `B: I<_>` found\r\n  --> src/main.rs:5:1\r\n   |\r\n5  | impl I<i32> for B {}\r\n   | ^^^^^^^^^^^^^^^^^\r\n6  | impl I<u32> for B {}\r\n   | ^^^^^^^^^^^^^^^^^\r\nnote: required because of the requirements on the impl of `V<_>` for `A<B>`\r\n  --> src/main.rs:12:12\r\n   |\r\n12 | impl<T, U> V<U> for A<T>\r\n   |            ^^^^     ^^^^\r\nhelp: use the fully qualified path for the potential candidates\r\n   |\r\n21 |     <B as I<i32>>::method(a);\r\n   |     ~~~~~~~~~~~~~~~~~~~~~~~~\r\n21 |     <B as I<u32>>::method(a);\r\n   |     ~~~~~~~~~~~~~~~~~~~~~~~~\r\n```\r\n\r\nThe two suggestions `<B as I<i32>>::method(a)` and `<B as I<u32>>::method(a)` are nonsensical because `a` is not of type `B` and the trait `I<T>` does not have a method called `method`. This is not how the ambiguous type would need to be disambiguated.\r\n\r\n```console\r\nerror[E0576]: cannot find method or associated constant `method` in trait `I`\r\n  --> src/main.rs:21:20\r\n   |\r\n21 |     <B as I<i32>>::method(a);\r\n   |                    ^^^^^^ not found in `I`\r\n```\r\n\r\nInstead a correct suggestion would look like one of the following:\r\n\r\n- `<A<B> as V<i32>>::method(a)`\r\n- `<A<_> as V<i32>>::method(a)`\r\n- `<_ as V<i32>>::method(a)`\r\n- `<V<i32>>::method(a)`\r\n- `V::<i32>::method(a)`\r\n\r\nExactly which one of the above 5 correct possibilities is chosen is related to #96292, but this issue focuses on the fact that the current suggestion's **trait** is wrong (`I` vs `V`).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96295/timeline", "performed_via_github_app": null, "state_reason": null}