{"url": "https://api.github.com/repos/rust-lang/rust/issues/106029", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/106029/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/106029/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/106029/events", "html_url": "https://github.com/rust-lang/rust/issues/106029", "id": 1507222241, "node_id": "I_kwDOAAsO6M5Z1mLh", "number": 106029, "title": "confused about rustc E0223, ambiguous associated type", "user": {"login": "youweol-master", "id": 42799130, "node_id": "MDQ6VXNlcjQyNzk5MTMw", "avatar_url": "https://avatars.githubusercontent.com/u/42799130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/youweol-master", "html_url": "https://github.com/youweol-master", "followers_url": "https://api.github.com/users/youweol-master/followers", "following_url": "https://api.github.com/users/youweol-master/following{/other_user}", "gists_url": "https://api.github.com/users/youweol-master/gists{/gist_id}", "starred_url": "https://api.github.com/users/youweol-master/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/youweol-master/subscriptions", "organizations_url": "https://api.github.com/users/youweol-master/orgs", "repos_url": "https://api.github.com/users/youweol-master/repos", "events_url": "https://api.github.com/users/youweol-master/events{/privacy}", "received_events_url": "https://api.github.com/users/youweol-master/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-12-22T03:47:57Z", "updated_at": "2022-12-22T03:47:57Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "here is a small snippet\r\n```rust \r\npub trait A {\r\n   type AItem: Debug + Default;\r\n   fn g() {}\r\n}\r\n\r\npub trait B {\r\n   type BItem: A;\r\n\r\n   fn f(x: Self::BItem::AItem) {       // this line raise E0223\r\n       println!(\"{}\", x);\r\n   }\r\n\r\n   fn gg() {\r\n       let x: Self::BItem::AItem = Default::default();    // raise E0223 too\r\n       Self::BItem::g();\r\n   }\r\n}\r\n```\r\n\r\nwhat I'm confused is why  inside B's gg()\r\n```\r\nSelf::BItem::g();\r\n```\r\ndid't raise E0223.\r\n\r\nAccording to the rustc error code document, code like\r\n```\r\nSelf::BItem::AItem\r\n```\r\nneed to be fully-qualified syntax, because Self::BItem is just a placeholder.\r\nBut why\r\n```\r\nSelf::BItem::g();\r\n```\r\ncan success compile, which Self::BItem have same situation too.\r\n\r\n\r\nwritting `<<Self as B>::BItem as A>::AItem` is too much  verbose than Self::BItem::AItem.\r\n\r\nInside trail B ,the rustc is smart enough to recognized BItem is a type of A because of\r\n```\r\n   type BItem: A;\r\n```\r\nso `Self::BItem::g()`  is equal to `<<Self as B>::BItem as A>::g()`.\r\nBut why did it blind to see that \r\n```\r\nSelf::BItem::AItem\r\n```\r\nthe Self::BItem must be a type of A.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/106029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/106029/timeline", "performed_via_github_app": null, "state_reason": null}