{"url": "https://api.github.com/repos/rust-lang/rust/issues/50509", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50509/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50509/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50509/events", "html_url": "https://github.com/rust-lang/rust/issues/50509", "id": 320856846, "node_id": "MDU6SXNzdWUzMjA4NTY4NDY=", "number": 50509, "title": "Clean up dependency tracking in Rustbuild", "user": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-07T15:50:44Z", "updated_at": "2018-10-02T14:48:59Z", "closed_at": "2018-10-02T14:48:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The primary idea here is that throughout compile, check, tool, and test.rs we call `builder.cargo`, with a series of `clear_if_dirty` calls before it depending on the implicit dependencies of the given crate.\r\n\r\nI'd like for us to instead utilize the `Mode` argument passed. That should ensure that we appropriately do this without having to think about it when adding new tools and tests.\r\n\r\nI believe the appropriate first step here is to refactor the existing `Mode` enum into something like the below; then we'd have to change the uses of it throughout the codebase to apply this strategy:\r\n\r\n - Only compilations of std, test, rustc, and the codegen libraries should use `Mode::{Std, Test, Rustc, Codegen}` respectively. Primarily the changes here are in tool.rs.\r\n - Tool compilations that today use `Mode::Librustc` would become `Mode::RustcTool`, and same for the other combinations. There isn't a `Mode::CodegenTool` as those don't currently exist to my knowledge, but we can add it if necessary.\r\n\r\nOnce this initial refactor is done, I think that's a good point to file a PR as it's an incremental change that can be reviewed on its own. The second change (which will close this issue) is to change `Builder::cargo` to have a match on the passed mode which will call clear_if_dirty with the stamp dependencies of the given Mode. Note that this means for `Mode::Rustc` we need to call clear_if_dirty on std, test stamps, whereas `Mode::RustcTool` needs to call clear_if_dirty for std, test, and rustc stamps. This is mostly just inlining code.\r\n\r\n```rust\r\nenum Mode {\r\n    Std,\r\n    Test,\r\n    Rustc,\r\n    Codegen,\r\n    ToolStd,\r\n    ToolTest,\r\n    ToolRustc,\r\n}\r\n```\r\n\r\ncc @collin5 -- if you're interested please let me know", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50509/timeline", "performed_via_github_app": null, "state_reason": "completed"}