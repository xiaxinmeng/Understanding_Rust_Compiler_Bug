{"url": "https://api.github.com/repos/rust-lang/rust/issues/64382", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64382/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64382/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64382/events", "html_url": "https://github.com/rust-lang/rust/issues/64382", "id": 492365595, "node_id": "MDU6SXNzdWU0OTIzNjU1OTU=", "number": 64382, "title": "Consider async blocks on lifetime errors", "user": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1259720434, "node_id": "MDU6TGFiZWwxMjU5NzIwNDM0", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Polish", "name": "AsyncAwait-Polish", "color": "d4c5f9", "default": false, "description": "Async-await issues that are part of the \"polish\" area"}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}], "state": "closed", "locked": false, "assignee": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-09-11T17:20:33Z", "updated_at": "2019-10-09T07:10:44Z", "closed_at": "2019-10-09T07:10:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[The following incorrect code](https://github.com/bluejekyll/trust-dns/pull/849/files#diff-5cbe22b68a836c7213c624099dedb640R182)\r\n```rust\r\n        // For QoS, this will only accept one message and output that\r\n        // receive all inbound messages\r\n\r\n        // TODO: this should match edns settings\r\n        loop {\r\n            let msg = if let Some(receiving) = receiving {\r\n                // TODO: should we drop this packet if it's not from the same src as dest?\r\n                let msg = ready!(receiving.as_mut().poll(cx))?;\r\n\r\n                Some(Poll::Ready(Some(Ok(msg))))\r\n            } else {\r\n                None\r\n            };\r\n \r\n            *receiving = None;\r\n\r\n            if let Some(msg) = msg {\r\n                return msg;\r\n            }\r\n\r\n            let socket = Arc::clone(socket);\r\n            let mut buf = [0u8; 2048];\r\n            let receive_future = async {\r\n                let socket = socket;\r\n\r\n                let mut socket = socket.lock().await;\r\n                let (len, src) = socket.recv_from(&mut buf).await?;\r\n                \r\n                Ok(SerialMessage::new(\r\n                    buf.iter().take(len).cloned().collect(),\r\n                    src,\r\n                ))\r\n            };\r\n\r\n            *receiving = Some(Box::pin(receive_future));\r\n        }\r\n```\r\nemits the following error\r\n```\r\nerror[E0597]: `buf` does not live long enough\r\n   --> crates/proto/src/udp/udp_stream.rs:204:56\r\n    |\r\n183 |               let msg = if let Some(receiving) = receiving {\r\n    |                                                  --------- borrow later used here\r\n...\r\n200 |               let receive_future = async {\r\n    |  ________________________________________-\r\n201 | |                 let socket = socket;\r\n202 | |\r\n203 | |                 let mut socket = socket.lock().await;\r\n204 | |                 let (len, src) = socket.recv_from(&mut buf).await?;\r\n    | |                                                        ^^^ borrowed value does not live long enough\r\n...   |\r\n209 | |                 ))\r\n210 | |             };\r\n    | |_____________- value captured here by generator\r\n...\r\n213 |           }\r\n    |           - `buf` dropped here while still borrowed\r\n```\r\n\r\nThe correct code needs the `buf` to be part of the `async` block because it is a stack allocation that needs to be in the generator:\r\n\r\n```rust\r\n        loop {\r\n            let msg = if let Some(receiving) = receiving {\r\n                // TODO: should we drop this packet if it's not from the same src as dest?\r\n                let msg = ready!(receiving.as_mut().poll(cx))?;\r\n\r\n                Some(Poll::Ready(Some(Ok(msg))))\r\n            } else {\r\n                None\r\n            };\r\n \r\n            *receiving = None;\r\n\r\n            if let Some(msg) = msg {\r\n                return msg;\r\n            }\r\n\r\n            let socket = Arc::clone(socket);\r\n            let receive_future = async {\r\n                let socket = socket;\r\n                let mut buf = [0u8; 2048];\r\n\r\n                let mut socket = socket.lock().await;\r\n                let (len, src) = socket.recv_from(&mut buf).await?;\r\n                \r\n                Ok(SerialMessage::new(\r\n                    buf.iter().take(len).cloned().collect(),\r\n                    src,\r\n                ))\r\n            };\r\n\r\n            *receiving = Some(Box::pin(receive_future));\r\n        }\r\n```\r\n\r\nIdeally, the error message would mention `buf`:\r\n\r\n```\r\nerror[E0597]: `buf` does not live long enough\r\n   --> crates/proto/src/udp/udp_stream.rs:204:56\r\n    |\r\n183 |               let msg = if let Some(receiving) = receiving {\r\n    |                                                  --------- borrow later used here\r\n...\r\n199 |               let mut buf = [0u8; 2048];\r\n    |                       --- consider moving this stack allocation inside the `async` block\r\n200 |               let receive_future = async {\r\n    |  ________________________________________-\r\n201 | |                 let socket = socket;\r\n202 | |\r\n203 | |                 let mut socket = socket.lock().await;\r\n204 | |                 let (len, src) = socket.recv_from(&mut buf).await?;\r\n    | |                                                        ^^^ borrowed value does not live long enough\r\n...   |\r\n209 | |                 ))\r\n210 | |             };\r\n    | |_____________- value captured here by `async` block\r\n...\r\n213 |           }\r\n    |           - `buf` dropped here while still borrowed\r\n```\r\n\r\n*thanks to @bluejekyll for bringing this up!*\r\n\r\nCC @nikomatsakis \n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"csmoe\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64382/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64382/timeline", "performed_via_github_app": null, "state_reason": "completed"}