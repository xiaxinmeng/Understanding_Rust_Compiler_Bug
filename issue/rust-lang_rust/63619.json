{"url": "https://api.github.com/repos/rust-lang/rust/issues/63619", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63619/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63619/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63619/events", "html_url": "https://github.com/rust-lang/rust/issues/63619", "id": 481368832, "node_id": "MDU6SXNzdWU0ODEzNjg4MzI=", "number": 63619, "title": "Confusing error message when a trait bound is unsatisfied due to lack of mutability", "user": {"login": "zackw", "id": 325899, "node_id": "MDQ6VXNlcjMyNTg5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/325899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackw", "html_url": "https://github.com/zackw", "followers_url": "https://api.github.com/users/zackw/followers", "following_url": "https://api.github.com/users/zackw/following{/other_user}", "gists_url": "https://api.github.com/users/zackw/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackw/subscriptions", "organizations_url": "https://api.github.com/users/zackw/orgs", "repos_url": "https://api.github.com/users/zackw/repos", "events_url": "https://api.github.com/users/zackw/events{/privacy}", "received_events_url": "https://api.github.com/users/zackw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-15T22:43:33Z", "updated_at": "2019-10-10T08:00:53Z", "closed_at": "2019-10-10T08:00:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In this code, `fp` should have been declared as a mutable reference, and the compiler gives you a nice clear error message saying so:\r\n\r\n```rust\r\nuse std::env::args;\r\nuse std::fs::File;\r\nuse std::io::{stdout, Write};\r\n\r\nfn main() {\r\n    let mut args = args();\r\n    let _ = args.next();\r\n    let dest = args.next();\r\n\r\n    let h1; let h2; let h3;\r\n\r\n    let fp: &dyn Write = match dest {\r\n        Some(path) => { h1 = File::create(path).unwrap(); &h1 },\r\n        None => { h2 = stdout(); h3 = h2.lock(); &h3 }\r\n    };\r\n\r\n    writeln!(fp, \"hello world\").unwrap();\r\n}\r\n```\r\n\r\n\u27f6\r\n\r\n```\r\nerror[E0596]: cannot borrow `*fp` as mutable, as it is behind a `&` reference\r\n  --> test.rs:17:14\r\n   |\r\n12 |     let fp: &dyn Write = match dest {\r\n   |         -- help: consider changing this to be a mutable reference:\r\n   |            `&mut dyn std::io::Write`\r\n...\r\n17 |     writeln!(fp, \"hello world\").unwrap();\r\n   |              ^^ `fp` is a `&` reference, so the data it refers to\r\n   |                 cannot be borrowed as mutable\r\n```\r\n\r\nBut you have a BufWriter in between `writeln!` and the match, you get a different and very confusing error message:\r\n\r\n``` rust\r\nuse std::env::args;\r\nuse std::fs::File;\r\nuse std::io::{stdout, Write, BufWriter};\r\n\r\nfn main() {\r\n    let mut args = args();\r\n    let _ = args.next();\r\n    let dest = args.next();\r\n\r\n    let h1; let h2; let h3;\r\n\r\n    let fp: &dyn Write = match dest {\r\n        Some(path) => { h1 = File::create(path).unwrap(); &h1 },\r\n        None => { h2 = stdout(); h3 = h2.lock(); &h3 }\r\n    };\r\n\r\n    let fp = BufWriter::new(fp);\r\n\r\n    writeln!(fp, \"hello world\").unwrap();\r\n}\r\n```\r\n\r\n\u27f6\r\n\r\n```\r\nerror[E0277]: the trait bound `&dyn std::io::Write: std::io::Write`\r\n              is not satisfied\r\n  --> test.rs:17:14\r\n   |\r\n17 |     let fp = BufWriter::new(fp);\r\n   |              ^^^^^^^^^^^^^^ the trait `std::io::Write`\r\n   |           is not implemented for `&dyn std::io::Write`\r\n   |\r\n   = note: required by `std::io::BufWriter::<W>::new`\r\n```\r\n\r\nHow can it possibly be that \"the trait `std::io::Write` is not implemented for `&dyn std::io::Write`\" ?!  Well, in fact, it's the exact same problem as the first sample code, and the error message is literally true.  `&dyn std::io::Write` _doesn't_ implement `std::io::Write`, but `&mut dyn std::io::Write` _does_.\r\n\r\nCould the compiler perhaps print an additional note when `&T` doesn't satisfy a trait bound, but `&mut T` would have, explaining that this might be the problem?  Or vice versa, of course.\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63619/timeline", "performed_via_github_app": null, "state_reason": "completed"}