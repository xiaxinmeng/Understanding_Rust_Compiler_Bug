{"url": "https://api.github.com/repos/rust-lang/rust/issues/12409", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/12409/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/12409/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/12409/events", "html_url": "https://github.com/rust-lang/rust/issues/12409", "id": 27931888, "node_id": "MDU6SXNzdWUyNzkzMTg4OA==", "number": 12409, "title": "Add a derive! macro to utilise deriving sugar outside Struct/Enum definition", "user": {"login": "bharrisau", "id": 119958, "node_id": "MDQ6VXNlcjExOTk1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/119958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bharrisau", "html_url": "https://github.com/bharrisau", "followers_url": "https://api.github.com/users/bharrisau/followers", "following_url": "https://api.github.com/users/bharrisau/following{/other_user}", "gists_url": "https://api.github.com/users/bharrisau/gists{/gist_id}", "starred_url": "https://api.github.com/users/bharrisau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bharrisau/subscriptions", "organizations_url": "https://api.github.com/users/bharrisau/orgs", "repos_url": "https://api.github.com/users/bharrisau/repos", "events_url": "https://api.github.com/users/bharrisau/events{/privacy}", "received_events_url": "https://api.github.com/users/bharrisau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-02-20T02:39:35Z", "updated_at": "2014-02-20T07:10:46Z", "closed_at": "2014-02-20T07:10:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Not sure if this is the correct solution, but I'm looking at untangling libstd so it can be built freestanding.\n\nThe deriving syntax is good, but if you want to make part of it conditional you can't. Looking at #11968, Eq and Clone have to be done with the impl written out in full, be easier to do\n\n`derive!(marker::CovariantType<T>, (Eq, Clone))`\n\nAnd if libprim is replaced with #[cfg] tags, you can do\n\n```\n#[lang=\"covariant_type\"]\npub struct CovariantType<T>;\n\n#[cfg(with_alloc)] derive!(CovariantType<T>, (Eq, Clone))\n```\n\nOr maybe these should just be written out in full?\n", "closed_by": {"login": "bharrisau", "id": 119958, "node_id": "MDQ6VXNlcjExOTk1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/119958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bharrisau", "html_url": "https://github.com/bharrisau", "followers_url": "https://api.github.com/users/bharrisau/followers", "following_url": "https://api.github.com/users/bharrisau/following{/other_user}", "gists_url": "https://api.github.com/users/bharrisau/gists{/gist_id}", "starred_url": "https://api.github.com/users/bharrisau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bharrisau/subscriptions", "organizations_url": "https://api.github.com/users/bharrisau/orgs", "repos_url": "https://api.github.com/users/bharrisau/repos", "events_url": "https://api.github.com/users/bharrisau/events{/privacy}", "received_events_url": "https://api.github.com/users/bharrisau/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/12409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/12409/timeline", "performed_via_github_app": null, "state_reason": "completed"}