{"url": "https://api.github.com/repos/rust-lang/rust/issues/85365", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85365/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85365/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85365/events", "html_url": "https://github.com/rust-lang/rust/issues/85365", "id": 892648843, "node_id": "MDU6SXNzdWU4OTI2NDg4NDM=", "number": 85365, "title": "Vec::pop() sometimes returns value inefficiently.", "user": {"login": "human-0", "id": 33237916, "node_id": "MDQ6VXNlcjMzMjM3OTE2", "avatar_url": "https://avatars.githubusercontent.com/u/33237916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/human-0", "html_url": "https://github.com/human-0", "followers_url": "https://api.github.com/users/human-0/followers", "following_url": "https://api.github.com/users/human-0/following{/other_user}", "gists_url": "https://api.github.com/users/human-0/gists{/gist_id}", "starred_url": "https://api.github.com/users/human-0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/human-0/subscriptions", "organizations_url": "https://api.github.com/users/human-0/orgs", "repos_url": "https://api.github.com/users/human-0/repos", "events_url": "https://api.github.com/users/human-0/events{/privacy}", "received_events_url": "https://api.github.com/users/human-0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 166999014, "node_id": "MDU6TGFiZWwxNjY5OTkwMTQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-collections", "name": "A-collections", "color": "f7e101", "default": false, "description": "Area: std::collections."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-05-16T11:12:34Z", "updated_at": "2022-08-30T17:26:06Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#[repr(align(32))]\r\n#[derive(Copy, Clone)]\r\npub struct Data {\r\n    u64s: [u64; 4],\r\n    options: Option<(u64, u8, Option<u8>)>\r\n}\r\n\r\npub fn len_minus_one(mut vec: Vec<Data>, value: &mut Data) {\r\n   *value = vec[vec.len() - 1];\r\n   vec.pop();\r\n}\r\n\r\npub fn pop(mut vec: Vec<Data>, value: &mut Data) {\r\n   *value = vec.pop().unwrap();\r\n}\r\n```\r\n\r\nI expected to see this happen: The two functions generate similar assembly.\r\n\r\nInstead, this happened: `Vec::pop()` uses far less efficient copying.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n\r\n`rustc --version --verbose`: \r\n```\r\n<version>\r\nbinary: rustc\r\ncommit-hash: 88f19c6dab716c6281af7602e30f413e809c5974\r\ncommit-date: 2021-05-03\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.52.0\r\nLLVM version: 12.0.0\r\n```\r\n\r\nIt also happens on Nightly, although the generated assembly is much better.\r\n\r\nEdit: It appears to be related to an `Option` holding the value, because the same behaviour is observed when using `vec.get(vec.len() - 1).copied().unwrap()` but not `*vec.get(vec.len() - 1).unwrap()`.\r\n[Playground Link](https://play.rust-lang.org/?version=nightly&mode=release&edition=2018&gist=30690a4a0439a3836f30c6e29c7f5daf)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85365/reactions", "total_count": 2, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85365/timeline", "performed_via_github_app": null, "state_reason": null}