{"url": "https://api.github.com/repos/rust-lang/rust/issues/14595", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/14595/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/14595/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/14595/events", "html_url": "https://github.com/rust-lang/rust/issues/14595", "id": 34750806, "node_id": "MDU6SXNzdWUzNDc1MDgwNg==", "number": 14595, "title": "rustdoc\u2019s approach to producing output needs to be rethought", "user": {"login": "chris-morgan", "id": 392868, "node_id": "MDQ6VXNlcjM5Mjg2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/392868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-morgan", "html_url": "https://github.com/chris-morgan", "followers_url": "https://api.github.com/users/chris-morgan/followers", "following_url": "https://api.github.com/users/chris-morgan/following{/other_user}", "gists_url": "https://api.github.com/users/chris-morgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-morgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-morgan/subscriptions", "organizations_url": "https://api.github.com/users/chris-morgan/orgs", "repos_url": "https://api.github.com/users/chris-morgan/repos", "events_url": "https://api.github.com/users/chris-morgan/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-morgan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 602425123, "node_id": "MDU6TGFiZWw2MDI0MjUxMjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-dev-tools", "name": "T-dev-tools", "color": "bfd4f2", "default": false, "description": "Relevant to the dev-tools subteam, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-06-02T07:26:18Z", "updated_at": "2018-09-24T17:02:29Z", "closed_at": "2018-09-24T17:02:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "rustdoc was built under a single-crate-universe assumption: that the documentation would be just for that crate. While that assumption held, Rust-to-HTML generation worked fine.\n\nThis assumption is now broken. We have the `implementors/**/*.js` technique for trait implementatons; search pulls its information for many crates from one; the order in which you build the documentation of crates matters and\u2014for the Rust repository\u2014`make docs` produces different output to `make -j docs`.\n\nIt is precept upon precept,\nprecept upon precept;\nline upon line,\nline upon line;\nhere a little,\nthere a little.\n\nIt\u2019s time to stop writing new workarounds and address the basic problem that we have here: rustdoc needs to handle this multiple-crates world intelligently. This means ditching the simple and, alas, simplistic single-pass Rust-to-HTML approach.\n\nI propose in its stead this model:\n- First pass, done per crate: extract all the metadata and write it in serialized form, not HTML/JavaScript/whatever. I don\u2019t care what format.\n- Second pass, which need only be done after all crates but can be done more frequently without harm: using the metadata, write all the HTML and whatever JavaScript is still necessary (this way, I think it will be for the search only, not the crate-level sidebar and trait implementations stuff).\n\nBy default, the second pass should probably still be run, but it can be turned off with a flag like `--no-html` for efficiency when you _do_ have multiple crates. Or you can run the HTML pass by itself, which will allow meaningful Makefile dependencies in this blas\u00e9-with-respect-to-detail example, allowing efficient, consistent and correct `make -j` behaviour:\n\n``` make\ndoc/index.html: doc/a.json doc/b.json doc/c.json\n    rustdoc --html doc/{a,b,c}.json\n\ndoc/%.json: src/%/lib.rs\n    rustdoc --no-html src/%/lib.rs\n```\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/14595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/14595/timeline", "performed_via_github_app": null, "state_reason": "completed"}