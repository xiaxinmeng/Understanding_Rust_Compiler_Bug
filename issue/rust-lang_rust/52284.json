{"url": "https://api.github.com/repos/rust-lang/rust/issues/52284", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52284/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52284/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52284/events", "html_url": "https://github.com/rust-lang/rust/issues/52284", "id": 340496080, "node_id": "MDU6SXNzdWUzNDA0OTYwODA=", "number": 52284, "title": "Confusing error mesage", "user": {"login": "mmrath", "id": 115767, "node_id": "MDQ6VXNlcjExNTc2Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/115767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmrath", "html_url": "https://github.com/mmrath", "followers_url": "https://api.github.com/users/mmrath/followers", "following_url": "https://api.github.com/users/mmrath/following{/other_user}", "gists_url": "https://api.github.com/users/mmrath/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmrath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmrath/subscriptions", "organizations_url": "https://api.github.com/users/mmrath/orgs", "repos_url": "https://api.github.com/users/mmrath/repos", "events_url": "https://api.github.com/users/mmrath/events{/privacy}", "received_events_url": "https://api.github.com/users/mmrath/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-12T05:41:09Z", "updated_at": "2021-03-01T17:58:23Z", "closed_at": "2021-03-01T17:58:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Source**\r\n\r\n```rust\r\n    fn main() {\r\n        println!(\"Hello world\");\r\n        let arr1 = [10, 15, 20, 25];\r\n        let arr2 = [1, 5, 9, 13, 17, 21, 25];\r\n        let med = median(&arr1, &arr2);\r\n        println!(\"{:?}\", med);\r\n    }\r\n\r\n    fn median(arr1: &[i32], arr2: &[i32]) -> Result<f64, String> {\r\n        use std::cmp;\r\n        if arr1.len() == 0 && arr2.len() == 0 {\r\n            Err(\"No elements\".to_owned())\r\n        }\r\n        let x = arr1.len();\r\n        let y = arr2.len();\r\n\r\n        if x > y {\r\n            return median(arr2, arr1);\r\n        }\r\n\r\n        let mut low: usize = 0;\r\n        let mut high = x;\r\n        while low <= high {\r\n            let part_x = (low + high) / 2;\r\n            let part_y = (x + y + 1) / 2 - part_x;\r\n\r\n            let max_x = if part_x == 0 {\r\n                i32::min_value()\r\n            } else {\r\n                arr1[part_x - 1]\r\n            };\r\n            let min_x = if part_x == x {\r\n                i32::max_value()\r\n            } else {\r\n                arr1[part_x]\r\n            };\r\n\r\n            let max_y = if part_y == 0 {\r\n                i32::min_value()\r\n            } else {\r\n                arr2[part_y - 1]\r\n            };\r\n            let min_y = if part_y == y {\r\n                i32::max_value()\r\n            } else {\r\n                arr2[part_y]\r\n            };\r\n\r\n            if max_x <= min_y && max_y <= min_x {\r\n                if (x + y) % 2 == 0 {\r\n                    return Ok((cmp::max(max_x, max_y) + cmp::min(min_x, min_y)) as f64 / 2.0);\r\n                } else {\r\n                    return Ok(cmp::max(max_x, max_y) as f64);\r\n                }\r\n            } else if max_x > min_y {\r\n                high = part_x - 1;\r\n            } else {\r\n                low = part_x + 1;\r\n            }\r\n        }\r\n        Err(\"Median not found\".to_owned())\r\n    }]]\r\n```\r\n\r\n**Link to playground:** https://play.rust-lang.org/?gist=4f80f043a2f29bf2810ecc8f75575f8d&version=stable&mode=debug&edition=2015\r\n\r\n**Current error message:**\r\n\r\n\terror[E0308]: mismatched types\r\n\t  --> src/main.rs:12:9\r\n\t   |\r\n\t12 |         Err(\"No elements\".to_owned())\r\n\t   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^- help: try adding a semicolon: `;`\r\n\t   |         |\r\n\t   |         expected (), found enum `std::result::Result`\r\n\t   |\r\n\t   = note: expected type `()`\r\n\t\t\t\t  found type `std::result::Result<_, std::string::String>`\r\n\r\n\r\n**Expected**\r\n\r\nThe compiler should probably tell me that I am missing a return statement.\r\n", "closed_by": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52284/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52284/timeline", "performed_via_github_app": null, "state_reason": "completed"}