{"url": "https://api.github.com/repos/rust-lang/rust/issues/39842", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39842/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39842/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39842/events", "html_url": "https://github.com/rust-lang/rust/issues/39842", "id": 207765622, "node_id": "MDU6SXNzdWUyMDc3NjU2MjI=", "number": 39842, "title": "Deal with outputs of subprocesses better in std::process", "user": {"login": "hicqu", "id": 8407317, "node_id": "MDQ6VXNlcjg0MDczMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/8407317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hicqu", "html_url": "https://github.com/hicqu", "followers_url": "https://api.github.com/users/hicqu/followers", "following_url": "https://api.github.com/users/hicqu/following{/other_user}", "gists_url": "https://api.github.com/users/hicqu/gists{/gist_id}", "starred_url": "https://api.github.com/users/hicqu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hicqu/subscriptions", "organizations_url": "https://api.github.com/users/hicqu/orgs", "repos_url": "https://api.github.com/users/hicqu/repos", "events_url": "https://api.github.com/users/hicqu/events{/privacy}", "received_events_url": "https://api.github.com/users/hicqu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-15T10:34:13Z", "updated_at": "2017-08-30T19:33:06Z", "closed_at": "2017-08-30T19:33:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Suppose that we need run a command in subprocess and collect its outputs(both stdout and stderr). Here is an example:\r\n```rust\r\nfn main() {\r\n    // Command is `nc -l localhost -p 3333`.\r\n    let mut cmd = Command::new(\"nc\");\r\n    cmd.args(&[\"-l\", \"localhost\", \"-p\", \"3333\"]);\r\n    cmd.stdout(Stdio::piped());\r\n    cmd.stderr(Stdio::piped());\r\n\r\n    let mut process: Child = cmd.spawn().unwrap();\r\n    'big: loop {\r\n        match process.try_wait() {\r\n            Ok(Some(exit_status)) => {\r\n                println!(\"sub process exit ok: {}\", exit_status);\r\n                break 'big;\r\n            }\r\n            Ok(None) => {\r\n                println!(\"sub process not exited\");\r\n                thread::sleep(time::Duration::new(3, 0));\r\n            }\r\n            Err(s) => {\r\n                println!(\"try wait return error: {}\", s);\r\n                break 'big;\r\n            }\r\n        }\r\n\r\n        let mut buf = [0 as u8; 1024];\r\n        process.stderr.as_mut().unwrap().read(&mut buf);\r\n        process.stdout.as_mut().unwrap().read(&mut buf);\r\n    }\r\n}\r\n```\r\n\r\nSuppose that the subprocess will only write bytes into *stdout* but not *stderr*.\r\n\r\nYou can find that the program will never finish if you send a **big** file to it:\r\n```bash\r\nnc localhost 3333 < bigfile.txt -c\r\n```\r\n\r\nAnalyse:\r\n* the *stdout* pipe is full, so the subprocess will wait for that to finish writing, so it cannot exit.\r\n* the subprocess can't exit, so the parent process will block on *stderr* forever, and can't fetch any bytes from *stdout*.\r\n\r\nI think it's a deadlock, exactly. \r\n\r\nTo resove that, \r\n\r\n* maybe we can fetch bytes from *stderr* and *stdout* with 2 threads simultaneously;\r\n* or maybe we can improve **read API** on `ChildStdout` and `ChildStderr` to simlify that;\r\n* or just use some event-driven libs like mio.\r\n\r\nSo, which way do you think is better?", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39842/timeline", "performed_via_github_app": null, "state_reason": "completed"}