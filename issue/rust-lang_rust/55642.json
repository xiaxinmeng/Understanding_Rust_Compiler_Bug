{"url": "https://api.github.com/repos/rust-lang/rust/issues/55642", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55642/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55642/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55642/events", "html_url": "https://github.com/rust-lang/rust/issues/55642", "id": 377040658, "node_id": "MDU6SXNzdWUzNzcwNDA2NTg=", "number": 55642, "title": "Matching on four consecutive bytes not optimized to matching on unaligned u32", "user": {"login": "hsivonen", "id": 478856, "node_id": "MDQ6VXNlcjQ3ODg1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/478856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsivonen", "html_url": "https://github.com/hsivonen", "followers_url": "https://api.github.com/users/hsivonen/followers", "following_url": "https://api.github.com/users/hsivonen/following{/other_user}", "gists_url": "https://api.github.com/users/hsivonen/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsivonen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsivonen/subscriptions", "organizations_url": "https://api.github.com/users/hsivonen/orgs", "repos_url": "https://api.github.com/users/hsivonen/repos", "events_url": "https://api.github.com/users/hsivonen/events{/privacy}", "received_events_url": "https://api.github.com/users/hsivonen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-03T09:59:37Z", "updated_at": "2023-04-05T17:37:01Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "[Godbolt link](https://rust.godbolt.org/z/zmalWt)\r\n\r\nInput\r\n```rust\r\npub fn check(buf: &[u8]) -> bool {\r\n    if buf.len() < 4 {\r\n    \treturn false;\r\n    }\r\n    match (buf[0] | 0x20, buf[1] | 0x20, buf[2], buf[3]) {\r\n    \t(b'a', b'b', b'+', b'-') => {\r\n            true\r\n        },\r\n    \t_ => {\r\n    \t\tfalse\r\n    \t}\r\n    }\r\n}\r\n\r\npub fn check_case_sensitive(buf: &[u8]) -> bool {\r\n    if buf.len() < 4 {\r\n    \treturn false;\r\n    }\r\n    match (buf[0], buf[1], buf[2], buf[3]) {\r\n    \t(b'a', b'b', b'+', b'-') => {\r\n            true\r\n        },\r\n    \t_ => {\r\n    \t\tfalse\r\n    \t}\r\n    }\r\n}\r\n```\r\n\r\nOutput\r\n```asm\r\nexample::check:\r\n        cmp     rsi, 3\r\n        ja      .LBB0_2\r\n        xor     eax, eax\r\n        ret\r\n.LBB0_2:\r\n        mov     al, byte ptr [rdi]\r\n        mov     cl, byte ptr [rdi + 1]\r\n        or      al, 32\r\n        or      cl, 32\r\n        mov     dl, byte ptr [rdi + 2]\r\n        mov     sil, byte ptr [rdi + 3]\r\n        xor     al, 97\r\n        xor     cl, 98\r\n        or      cl, al\r\n        xor     dl, 43\r\n        or      dl, cl\r\n        xor     sil, 45\r\n        or      sil, dl\r\n        sete    al\r\n        ret\r\n\r\nexample::check_case_sensitive:\r\n        cmp     rsi, 3\r\n        ja      .LBB1_2\r\n        xor     eax, eax\r\n        ret\r\n.LBB1_2:\r\n        mov     sil, byte ptr [rdi]\r\n        mov     cl, byte ptr [rdi + 1]\r\n        mov     dl, byte ptr [rdi + 2]\r\n        mov     al, byte ptr [rdi + 3]\r\n        xor     sil, 97\r\n        xor     cl, 98\r\n        or      cl, sil\r\n        xor     dl, 43\r\n        or      dl, cl\r\n        xor     al, 45\r\n        or      al, dl\r\n        sete    al\r\n        ret\r\n```\r\n\r\nExpected there to be a single unaligned 32-bit load. Excepted the masking in the first function to be done on a 32-bit value using a 32-bit constant. Expected the comparison to be done with a 32-bit constant.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55642/timeline", "performed_via_github_app": null, "state_reason": null}