{"url": "https://api.github.com/repos/rust-lang/rust/issues/47114", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47114/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47114/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47114/events", "html_url": "https://github.com/rust-lang/rust/issues/47114", "id": 285338219, "node_id": "MDU6SXNzdWUyODUzMzgyMTk=", "number": 47114, "title": "String capacity is unnecessarily modified by File::read_to_string", "user": {"login": "Addisonbean", "id": 2948220, "node_id": "MDQ6VXNlcjI5NDgyMjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2948220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Addisonbean", "html_url": "https://github.com/Addisonbean", "followers_url": "https://api.github.com/users/Addisonbean/followers", "following_url": "https://api.github.com/users/Addisonbean/following{/other_user}", "gists_url": "https://api.github.com/users/Addisonbean/gists{/gist_id}", "starred_url": "https://api.github.com/users/Addisonbean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Addisonbean/subscriptions", "organizations_url": "https://api.github.com/users/Addisonbean/orgs", "repos_url": "https://api.github.com/users/Addisonbean/repos", "events_url": "https://api.github.com/users/Addisonbean/events{/privacy}", "received_events_url": "https://api.github.com/users/Addisonbean/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-02T00:04:07Z", "updated_at": "2019-12-10T16:11:50Z", "closed_at": "2019-12-10T16:11:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using `File::read_to_string` or `BufReader::read_to_string`, the capacity of the string being written to will change, even if no change in capacity was necessary. For example:\r\n\r\n```\r\nuse std::fs::File;\r\nuse std::io::{BufReader, Read};\r\n\r\nfn with_buf_reader(filename: &str, capacity: usize) {\r\n    let f = File::open(filename).unwrap();\r\n    let mut buf = BufReader::new(f);\r\n    let mut s = String::with_capacity(capacity);\r\n\r\n    println!(\"Capacity before calling BufReader::read_to_string = {}\", s.capacity());\r\n    buf.read_to_string(&mut s).unwrap();\r\n    println!(\"Capacity after calling BufReader::read_to_string = {}\", s.capacity());\r\n}\r\n\r\nfn with_file(filename: &str, capacity: usize) {\r\n    let mut f = File::open(filename).unwrap();\r\n    let mut s = String::with_capacity(capacity);\r\n\r\n    println!(\"Capacity before calling File::read_to_string = {}\", s.capacity());\r\n    f.read_to_string(&mut s).unwrap();\r\n    println!(\"Capacity after calling File::read_to_string = {}\", s.capacity());\r\n}\r\n\r\nfn main() {\r\n    let filename = \"test.txt\";\r\n    let capacity = 4;\r\n    with_buf_reader(&filename, capacity);\r\n    println!();\r\n    with_file(&filename, capacity);\r\n}\r\n```\r\n\r\nAssuming there is a file named `test.txt` containing the text `123` (no newline at the end), I would expect to this printed:\r\n\r\n```\r\nCapacity before calling BufReader::read_to_string = 4\r\nCapacity after calling BufReader::read_to_string = 4\r\n\r\nCapacity before calling File::read_to_string = 4\r\nCapacity after calling File::read_to_string = 4\r\n```\r\n\r\nHowever, this is what actually happens:\r\n\r\n```\r\nCapacity before calling BufReader::read_to_string = 4\r\nCapacity after calling BufReader::read_to_string = 32\r\n\r\nCapacity before calling File::read_to_string = 4\r\nCapacity after calling File::read_to_string = 32\r\n```\r\n\r\nHere's the version of `rustc` I am using:\r\n\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.22.1 (05e2e1c41 2017-11-22)\r\nbinary: rustc\r\ncommit-hash: 05e2e1c41414e8fc73d0f267ea8dab1a3eeeaa99\r\ncommit-date: 2017-11-22\r\nhost: x86_64-apple-darwin\r\nrelease: 1.22.1\r\nLLVM version: 4.0\r\n```", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47114/timeline", "performed_via_github_app": null, "state_reason": "completed"}