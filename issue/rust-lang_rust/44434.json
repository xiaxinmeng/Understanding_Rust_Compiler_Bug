{"url": "https://api.github.com/repos/rust-lang/rust/issues/44434", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44434/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44434/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44434/events", "html_url": "https://github.com/rust-lang/rust/issues/44434", "id": 256368727, "node_id": "MDU6SXNzdWUyNTYzNjg3Mjc=", "number": 44434, "title": "Provide an API to extract fields from Command builder", "user": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 657353545, "node_id": "MDU6TGFiZWw2NTczNTM1NDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-accepted", "name": "C-feature-accepted", "color": "f5f1fd", "default": false, "description": "Category: A feature request that has been accepted pending implementation."}, {"id": 919710011, "node_id": "MDU6TGFiZWw5MTk3MTAwMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/disposition-merge", "name": "disposition-merge", "color": "008800", "default": false, "description": "This issue / PR is in PFCP or FCP with a disposition to merge it."}, {"id": 923282386, "node_id": "MDU6TGFiZWw5MjMyODIzODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/finished-final-comment-period", "name": "finished-final-comment-period", "color": "f9e189", "default": false, "description": "The final comment period is finished for this PR / Issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 34, "created_at": "2017-09-08T20:53:43Z", "updated_at": "2022-07-19T21:24:10Z", "closed_at": "2022-07-19T21:24:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is now implemented on nightly via #77029.\r\n\r\n**Summary**\r\nThe following accessors are available on `Command` behind the `#![feature(command_access)]` gate:\r\n* [`Command::get_program`](https://doc.rust-lang.org/nightly/std/process/struct.Command.html#method.get_program)\r\n* [`Command::get_args`](https://doc.rust-lang.org/nightly/std/process/struct.Command.html#method.get_args)\r\n* [`Command::get_envs`](https://doc.rust-lang.org/nightly/std/process/struct.Command.html#method.get_envs)\r\n* [`Command::get_current_dir`](https://doc.rust-lang.org/nightly/std/process/struct.Command.html#method.get_current_dir)\r\n\r\n\r\n**Unresolved issues**\r\nSome concerns I had with the implementation, but probably not important:\r\n\r\n- [ ] Values with NULs on Unix will be returned as `\"<string-with-nul>\"`. I don't think it is practical to avoid this, since otherwise a whole separate copy of all the values would need to be kept in `Command`.\r\n- [ ] Does not handle `arg0` on Unix. This can be awkward to support in `get_args` and is rarely used. I figure if someone really wants it, it can be added to `CommandExt` as a separate method.\r\n- [ ] Does not offer a way to detect `env_clear`. I'm uncertain if it would be useful for anyone.\r\n- [ ] Does not offer a way to get an environment variable by name (`get_env`). I figure this can be added later if anyone really wants it. I think the motivation for this is weak, though. Also, the API could be a little awkward (return a `Option<Option<&OsStr>>`?).\r\n- [ ] `get_envs` could skip \"cleared\" entries and just return `&OsStr` values instead of `Option<&OsStr>`. I'm on the fence here. My use case is to display a shell command, and I only intend it to be roughly equivalent to the actual execution, and I probably won't display `None` entries. I erred on the side of providing extra information, but I suspect many situations will just filter out the `None`s.\r\n- [ ] Could implement more iterator stuff (like `DoubleEndedIterator`).\r\n\r\n\r\n**Original issue below**\r\n----\r\n\r\nThe the `std::process::Command` builder is useful for building up a Command in a cross-platform way. I've found that it would be useful to extract the name, args, environment, etc. of a `Command` they have been set.\r\n\r\nThere are at least two places in the Rust compiler that would benefit from such an API. Instead, the authors have had to resort to wrappers instead of using `Command` directly.\r\n\r\nhttps://github.com/rust-lang/rust/blob/master/src/tools/compiletest/src/runtest.rs#L1527\r\n\r\nhttps://github.com/rust-lang/rust/blob/master/src/librustc_trans/back/command.rs\r\n\r\n", "closed_by": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44434/reactions", "total_count": 15, "+1": 13, "-1": 0, "laugh": 0, "hooray": 1, "confused": 1, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44434/timeline", "performed_via_github_app": null, "state_reason": "completed"}