{"url": "https://api.github.com/repos/rust-lang/rust/issues/74462", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74462/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74462/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74462/events", "html_url": "https://github.com/rust-lang/rust/issues/74462", "id": 659649107, "node_id": "MDU6SXNzdWU2NTk2NDkxMDc=", "number": 74462, "title": "#[derive(Default)] fails when type parameters do not implement Default", "user": {"login": "nwn", "id": 5771789, "node_id": "MDQ6VXNlcjU3NzE3ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/5771789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nwn", "html_url": "https://github.com/nwn", "followers_url": "https://api.github.com/users/nwn/followers", "following_url": "https://api.github.com/users/nwn/following{/other_user}", "gists_url": "https://api.github.com/users/nwn/gists{/gist_id}", "starred_url": "https://api.github.com/users/nwn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nwn/subscriptions", "organizations_url": "https://api.github.com/users/nwn/orgs", "repos_url": "https://api.github.com/users/nwn/repos", "events_url": "https://api.github.com/users/nwn/events{/privacy}", "received_events_url": "https://api.github.com/users/nwn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-17T21:18:15Z", "updated_at": "2020-07-17T21:26:27Z", "closed_at": "2020-07-17T21:26:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `derive(Default)` macro fails when applied to a type with a non-`Default` type parameter.\r\n\r\nI tried this code: ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=ce408b26f83b822e7bbba18f26ca2840))\r\n\r\n```rust\r\nuse core::marker::PhantomData;\r\n\r\nstruct NoDefault;\r\n\r\n#[derive(Default)]\r\nstruct X<T> {\r\n    phantom: PhantomData<T>,\r\n}\r\n\r\nfn main() {\r\n    let _: X<NoDefault> = Default::default();\r\n}\r\n```\r\n\r\nI expected this to compile with `Default` being implemented using `PhantomData`'s `Default` implementation.\r\n\r\nInstead, the following error was produced:\r\n```\r\nerror[E0277]: the trait bound `NoDefault: std::default::Default` is not satisfied\r\n  --> src/main.rs:11:27\r\n   |\r\n11 |     let _: X<NoDefault> = Default::default();\r\n   |                           ^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `NoDefault`\r\n   |\r\n   = note: required because of the requirements on the impl of `std::default::Default` for `X<NoDefault>`\r\n   = note: required by `std::default::Default::default`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nThe same problem occurs when any field of the type implements `Default`, but is parameterized by a type that doesn't. For example, the following produces the same error: ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=de5f9dff3077be1bbd658ca6a1cb7e45))\r\n``` rust\r\nstruct NoDefault;\r\n\r\n#[derive(Default)]\r\nstruct X<T> {\r\n    option: Option<T>,\r\n}\r\n\r\nfn main() {\r\n    let _: X<NoDefault> = Default::default();\r\n}\r\n```\r\n\r\nThis can be worked around by manually implementing `Default` for the type: ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=4f4df482445f7116b17ce4f7920ea814))\r\n``` rust\r\nstruct NoDefault;\r\n\r\nstruct X<T> {\r\n    option: Option<T>,\r\n}\r\n\r\nimpl<T> Default for X<T> {\r\n    fn default() -> Self {\r\n        Self {\r\n            option: Default::default(),\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let _: X<NoDefault> = Default::default();\r\n}\r\n```\r\n\r\nWhile this may be intentional, the [documentation](https://doc.rust-lang.org/stable/std/default/trait.Default.html#derivable) suggests that it should work since the fields themselves all implement `Default`.\r\n\r\n### Meta\r\nThe code above was tested on the stable (1.45.0), beta (1.46.0-beta.1), and nightly (1.46.0-nightly) channels available on the Rust Playground, with the same results.", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74462/timeline", "performed_via_github_app": null, "state_reason": "completed"}