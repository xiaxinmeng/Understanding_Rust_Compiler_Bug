{"url": "https://api.github.com/repos/rust-lang/rust/issues/46079", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46079/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46079/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46079/events", "html_url": "https://github.com/rust-lang/rust/issues/46079", "id": 275084445, "node_id": "MDU6SXNzdWUyNzUwODQ0NDU=", "number": 46079, "title": "resolve: Fresh bindings in `match`/`let` are preferred to \"import ambiguity items\"", "user": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-18T14:51:28Z", "updated_at": "2020-03-15T20:40:13Z", "closed_at": "2020-03-15T20:40:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the example below two glob imports bring two conflicting names `V` into scope.\r\n```rust\r\nenum E1 { V }\r\nuse E1::*;\r\n\r\nenum E2 { V }\r\nuse E2::*; // OK, no conflict with `use E1::*;`\r\n\r\nfn main() {\r\n    let v = V; // ERROR `V` is ambiguous\r\n    match v {\r\n        V => {} // No error, `V` is a fresh binding\r\n    }\r\n}\r\n```\r\nAccording to [RFC 1560](https://github.com/rust-lang/rfcs/blob/master/text/1560-name-resolution.md) an error is not immediately reported when two globs conflict, it is reported \"on use\" only if the ambiguous name is actually used.\r\nInternally such an ambiguity creates an \"erroneous item\" (`Def::Err`) with name `V` used exclusively for reporting diagnostics. (However, see https://github.com/rust-lang/rust/issues/36837, which is an issue closely related to this one.)\r\nFor other purposes the name `V` doesn't exist in our module.\r\n\r\nIn the example above we can see that in `let v = V;` `V` is properly reported as ambiguous on use.\r\n\r\nIn `match` however the meaning of `V` is determined in two-step disambiguation process. First we search for an existing item named `V`, then if no item named `V` exists we create a new variable.\r\nDiagnostics-only `Def::Err` items do not exist from this disambiguation process' point of view, so the first step fails for `V` and we interpret it as a new variable without any \"ambiguous name\" warning.\r\n\r\nIn many cases however, a warning about unused imports will be reported for `use E1::*;` and `use E2::*;`, but this happens only if the imports aren't actually used anywhere else and the warnings are not always noticed (see https://github.com/rust-lang/rust/pull/46078).\r\n\r\nTwo possible solutions are:\r\n- Issue some \"did you mean the ambiguous import, not new variable?\" warning for `V` in `match`.\r\n- Make \"import ambiguity items\" actual items, affecting not only diagnostics, but name resolution behavior in general, including disambiguation for fresh bindings. This alternative may be better for resolving https://github.com/rust-lang/rust/issues/36837.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46079/timeline", "performed_via_github_app": null, "state_reason": "completed"}