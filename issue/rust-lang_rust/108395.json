{"url": "https://api.github.com/repos/rust-lang/rust/issues/108395", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108395/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108395/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108395/events", "html_url": "https://github.com/rust-lang/rust/issues/108395", "id": 1596913395, "node_id": "I_kwDOAAsO6M5fLvbz", "number": 108395, "title": "Wildcard pattern not optimized in match expression", "user": {"login": "mitiko", "id": 26521741, "node_id": "MDQ6VXNlcjI2NTIxNzQx", "avatar_url": "https://avatars.githubusercontent.com/u/26521741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitiko", "html_url": "https://github.com/mitiko", "followers_url": "https://api.github.com/users/mitiko/followers", "following_url": "https://api.github.com/users/mitiko/following{/other_user}", "gists_url": "https://api.github.com/users/mitiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitiko/subscriptions", "organizations_url": "https://api.github.com/users/mitiko/orgs", "repos_url": "https://api.github.com/users/mitiko/repos", "events_url": "https://api.github.com/users/mitiko/events{/privacy}", "received_events_url": "https://api.github.com/users/mitiko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-02-23T13:53:09Z", "updated_at": "2023-02-24T22:01:47Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The following snippet generates branches (with `-C opt-level=3`)\r\n\r\n```rust\r\npub fn func1(a: u16, b: u16, v: u16) -> u16 {\r\n    match (a == v, b == v) {\r\n        (true, false) => 0,\r\n        (false, true) => u16::MAX,\r\n        _ => 1 << 15, // half\r\n    }\r\n}\r\n```\r\n\r\nwhereas spelling it out to the compiler does not:\r\n\r\n```rust\r\npub fn func2(a: u16, b: u16, v: u16) -> u16 {\r\n    match (a == v, b == v) {\r\n        (true, false) => 0,\r\n        (false, true) => u16::MAX,\r\n        (true, true) => 1 << 15, // half\r\n        (false, false) => 1 << 15, // half\r\n    }\r\n}\r\n```\r\n\r\nI believe this breaks the zero cost abstraction promise.\r\nIn theory these do mean different things but for constant 16-bit integers on a modern 64-bit system they should be optimized away.\r\n\r\nOther quirks:\r\n- only partially spelling it out to the compiler with `(true, true) | (false, false)` still generates branches\r\n- using guard clauses generates branchless code but with more instructions\r\n\r\nGodbolt link: https://rust.godbolt.org/z/cWoboKM3d\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108395/timeline", "performed_via_github_app": null, "state_reason": null}