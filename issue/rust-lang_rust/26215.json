{"url": "https://api.github.com/repos/rust-lang/rust/issues/26215", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/26215/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/26215/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/26215/events", "html_url": "https://github.com/rust-lang/rust/issues/26215", "id": 87278334, "node_id": "MDU6SXNzdWU4NzI3ODMzNA==", "number": 26215, "title": "Rust does not guarantee thread-safety", "user": {"login": "rightfold", "id": 5132125, "node_id": "MDQ6VXNlcjUxMzIxMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5132125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rightfold", "html_url": "https://github.com/rightfold", "followers_url": "https://api.github.com/users/rightfold/followers", "following_url": "https://api.github.com/users/rightfold/following{/other_user}", "gists_url": "https://api.github.com/users/rightfold/gists{/gist_id}", "starred_url": "https://api.github.com/users/rightfold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rightfold/subscriptions", "organizations_url": "https://api.github.com/users/rightfold/orgs", "repos_url": "https://api.github.com/users/rightfold/repos", "events_url": "https://api.github.com/users/rightfold/events{/privacy}", "received_events_url": "https://api.github.com/users/rightfold/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-06-11T09:31:11Z", "updated_at": "2015-11-10T00:09:51Z", "closed_at": "2015-11-10T00:09:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to the Rust website, Rust guarantees thread safety. However, I managed to write a program that appears to be thread-unsafe while it does not use external resources or `unsafe`:\n\n```\nuse std::sync::{Arc, Mutex};\nuse std::thread;\n\nfn main() {\n    let p = Arc::new(Mutex::new(0));\n\n    for _ in 1..100 {\n        let x = p.clone();\n        thread::spawn(move || {\n            let n;\n            {\n                let mut x_ = x.lock().unwrap();\n                *x_ += 1;\n                n = *x_;\n            }\n            thread::sleep_ms(50);\n            {\n                // because Rust guarantees thread-safety, we can safely assume x hasn't been changed\n                let x_ = x.lock().unwrap();\n                if *x_ != n {\n                    panic!();\n                }\n            }\n        });\n    }\n\n    thread::sleep_ms(2000);\n}\n```\n\nExpected output:\nNo output and exit status 0.\n\nActual output:\nThis program panics.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/26215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/26215/timeline", "performed_via_github_app": null, "state_reason": "completed"}