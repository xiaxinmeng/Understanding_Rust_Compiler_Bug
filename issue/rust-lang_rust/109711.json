{"url": "https://api.github.com/repos/rust-lang/rust/issues/109711", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/109711/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/109711/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/109711/events", "html_url": "https://github.com/rust-lang/rust/issues/109711", "id": 1644772145, "node_id": "I_kwDOAAsO6M5iCTsx", "number": 109711, "title": "ICE in rustc_codegen_llvm when cross compiling to linux on OSX", "user": {"login": "ranmocy", "id": 601767, "node_id": "MDQ6VXNlcjYwMTc2Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/601767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranmocy", "html_url": "https://github.com/ranmocy", "followers_url": "https://api.github.com/users/ranmocy/followers", "following_url": "https://api.github.com/users/ranmocy/following{/other_user}", "gists_url": "https://api.github.com/users/ranmocy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranmocy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranmocy/subscriptions", "organizations_url": "https://api.github.com/users/ranmocy/orgs", "repos_url": "https://api.github.com/users/ranmocy/repos", "events_url": "https://api.github.com/users/ranmocy/events{/privacy}", "received_events_url": "https://api.github.com/users/ranmocy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 167285428, "node_id": "MDU6TGFiZWwxNjcyODU0Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-cross", "name": "A-cross", "color": "f7e101", "default": false, "description": "Area: Cross compilation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-03-28T23:02:52Z", "updated_at": "2023-04-14T22:21:29Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Env setup\r\n\r\n```bash\r\nrustup +nightly target add aarch64-unknown-linux-gnu\r\nrustup +nightly target add aarch64-apple-darwin\r\nrustup +nightly target add x86_64-unknown-linux-gnu\r\nrustup +nightly target add x86_64-apple-darwin\r\n\r\nbrew tap messense/macos-cross-toolchains\r\nbrew install x86_64-unknown-linux-gnu\r\nbrew install aarch64-unknown-linux-gnu\r\n\r\nexport CC_x86_64_unknown_linux_gnu=x86_64-unknown-linux-gnu-gcc\r\nexport CXX_x86_64_unknown_linux_gnu=x86_64-unknown-linux-gnu-g++\r\nexport AR_x86_64_unknown_linux_gnu=x86_64-unknown-linux-gnu-ar\r\nexport CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_LINKER=x86_64-unknown-linux-gnu-gcc\r\nexport CC_aarch64_unknown_linux_gnu=aarch64-unknown-linux-gnu-gcc\r\nexport CXX_aarch64_unknown_linux_gnu=aarch64-unknown-linux-gnu-g++\r\nexport AR_aarch64_unknown_linux_gnu=aarch64-unknown-linux-gnu-ar\r\nexport CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-unknown-linux-gnu-gcc\r\n\r\ncargo build --bin my_bin --release --target aarch64-unknown-linux-gnu\r\ncargo build --bin my_bin --release --target x86_64-unknown-linux-gnu\r\ncargo build --bin my_bin --release --target x86_64-apple-darwin\r\ncargo build --bin my_bin --release --target aarch64-apple-darwin\r\n```\r\n\r\n### Code\r\n\r\n```Rust\r\nTBD\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc +nightly --version --verbose`:\r\n```\r\nrustc 1.70.0-nightly (2036fdd24 2023-03-27)\r\nbinary: rustc\r\ncommit-hash: 2036fdd24f77d607dcfaa24c48fbe85d3f785823\r\ncommit-date: 2023-03-27\r\nhost: aarch64-apple-darwin\r\nrelease: 1.70.0-nightly\r\nLLVM version: 16.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler/rustc_codegen_llvm/src/back/archive.rs:388:67\r\nstack backtrace:\r\n   0:        0x1055cd5bc - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h5fb738fb6b06a1d9\r\n   1:        0x1056206d4 - core::fmt::write::h6a02464bebb2a88f\r\n   2:        0x1055c306c - std::io::Write::write_fmt::h0365a706650ef7a0\r\n   3:        0x1055cd3d0 - std::sys_common::backtrace::print::h2b2100bcc34ab976\r\n   4:        0x1055cfde4 - std::panicking::default_hook::{{closure}}::hde9e5aa39a306a1c\r\n   5:        0x1055cfba4 - std::panicking::default_hook::h3a7ed30f183fe740\r\n   6:        0x10da3f554 - rustc_driver_impl[5332f8ff8b069570]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n   7:        0x1055d04a4 - std::panicking::rust_panic_with_hook::h3f818433f3792366\r\n   8:        0x1055d025c - std::panicking::begin_panic_handler::{{closure}}::hba1d1542190b0a1d\r\n   9:        0x1055cd9dc - std::sys_common::backtrace::__rust_end_short_backtrace::heb72c863cff1bc59\r\n  10:        0x1055d0030 - _rust_begin_unwind\r\n  11:        0x10564c0f0 - core::panicking::panic_fmt::h940abc2770676ab4\r\n  12:        0x10564c160 - core::panicking::panic::hed9e6f165e9ca76a\r\n  13:        0x10db6f750 - <rustc_codegen_llvm[fde183f7bc188e4d]::back::archive::LlvmArchiveBuilder as rustc_codegen_ssa[c368d436ad072d1]::back::archive::ArchiveBuilder>::build\r\n  14:        0x110ecfaa4 - rustc_codegen_ssa[c368d436ad072d1]::back::link::link_binary\r\n  15:        0x10db636c8 - <rustc_codegen_llvm[fde183f7bc188e4d]::LlvmCodegenBackend as rustc_codegen_ssa[c368d436ad072d1]::traits::backend::CodegenBackend>::link\r\n  16:        0x10dadd3cc - <rustc_interface[c04e01e9db0d2ec]::queries::Linker>::link\r\n  17:        0x10d9d8aa4 - rustc_span[6c4d6989865837ed]::with_source_map::<core[62096c4622bbf560]::result::Result<(), rustc_span[6c4d6989865837ed]::ErrorGuaranteed>, rustc_interface[c04e01e9db0d2ec]::interface::run_compiler<core[62096c4622bbf560]::result::Result<(), rustc_span[6c4d6989865837ed]::ErrorGuaranteed>, rustc_driver_impl[5332f8ff8b069570]::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\r\n  18:        0x10d9e6bc0 - std[6fbb0ec1f86da1b4]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[c04e01e9db0d2ec]::util::run_in_thread_pool_with_globals<rustc_interface[c04e01e9db0d2ec]::interface::run_compiler<core[62096c4622bbf560]::result::Result<(), rustc_span[6c4d6989865837ed]::ErrorGuaranteed>, rustc_driver_impl[5332f8ff8b069570]::run_compiler::{closure#1}>::{closure#0}, core[62096c4622bbf560]::result::Result<(), rustc_span[6c4d6989865837ed]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[62096c4622bbf560]::result::Result<(), rustc_span[6c4d6989865837ed]::ErrorGuaranteed>>\r\n  19:        0x10d9dec04 - <<std[6fbb0ec1f86da1b4]::thread::Builder>::spawn_unchecked_<rustc_interface[c04e01e9db0d2ec]::util::run_in_thread_pool_with_globals<rustc_interface[c04e01e9db0d2ec]::interface::run_compiler<core[62096c4622bbf560]::result::Result<(), rustc_span[6c4d6989865837ed]::ErrorGuaranteed>, rustc_driver_impl[5332f8ff8b069570]::run_compiler::{closure#1}>::{closure#0}, core[62096c4622bbf560]::result::Result<(), rustc_span[6c4d6989865837ed]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[62096c4622bbf560]::result::Result<(), rustc_span[6c4d6989865837ed]::ErrorGuaranteed>>::{closure#1} as core[62096c4622bbf560]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  20:        0x1055d8b4c - std::sys::unix::thread::Thread::new::thread_start::ha951329ff3fcdc44\r\n  21:        0x1a2dca06c - __pthread_deallocate\r\n\r\nerror: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.70.0-nightly (2036fdd24 2023-03-27) running on aarch64-apple-darwin\r\n\r\nnote: compiler flags: --crate-type lib -C opt-level=s -C panic=abort -C linker-plugin-lto -C codegen-units=1 -C debuginfo=0 -C linker=aarch64-unknown-linux-gnu-gcc -C strip=symbols\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: could not compile `openssl-sys` (lib)\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler/rustc_codegen_llvm/src/back/archive.rs:388:67\r\nstack backtrace:\r\n   Compiling libssh2-sys v0.2.23\r\n   Compiling openssl v0.10.45\r\n   0: _rust_begin_unwind\r\n   1: core::panicking::panic_fmt\r\n   2: core::panicking::panic\r\n   3: <rustc_codegen_llvm::back::archive::LlvmArchiveBuilder as rustc_codegen_ssa::back::archive::ArchiveBuilder>::build\r\n   4: rustc_codegen_ssa::back::link::link_binary\r\n   5: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::link\r\n   6: <rustc_interface::queries::Linker>::link\r\n   7: rustc_span::with_source_map::<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.70.0-nightly (2036fdd24 2023-03-27) running on aarch64-apple-darwin\r\n\r\nnote: compiler flags: --crate-type lib -C opt-level=s -C panic=abort -C linker-plugin-lto -C codegen-units=1 -C debuginfo=0 -C linker=aarch64-unknown-linux-gnu-gcc -C strip=symbols\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: could not compile `openssl-sys` (lib)\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/109711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/109711/timeline", "performed_via_github_app": null, "state_reason": null}