{"url": "https://api.github.com/repos/rust-lang/rust/issues/20811", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/20811/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/20811/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/20811/events", "html_url": "https://github.com/rust-lang/rust/issues/20811", "id": 53887553, "node_id": "MDU6SXNzdWU1Mzg4NzU1Mw==", "number": 20811, "title": "range notation (a..b) has weird operator precedence", "user": {"login": "dgrunwald", "id": 243140, "node_id": "MDQ6VXNlcjI0MzE0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/243140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgrunwald", "html_url": "https://github.com/dgrunwald", "followers_url": "https://api.github.com/users/dgrunwald/followers", "following_url": "https://api.github.com/users/dgrunwald/following{/other_user}", "gists_url": "https://api.github.com/users/dgrunwald/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgrunwald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgrunwald/subscriptions", "organizations_url": "https://api.github.com/users/dgrunwald/orgs", "repos_url": "https://api.github.com/users/dgrunwald/repos", "events_url": "https://api.github.com/users/dgrunwald/events{/privacy}", "received_events_url": "https://api.github.com/users/dgrunwald/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/22", "html_url": "https://github.com/rust-lang/rust/milestone/22", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/22/labels", "id": 924511, "node_id": "MDk6TWlsZXN0b25lOTI0NTEx", "number": 22, "title": "1.0 beta", "description": "", "creator": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 80, "state": "closed", "created_at": "2015-01-06T21:40:55Z", "updated_at": "2015-04-08T23:57:21Z", "due_on": null, "closed_at": "2015-04-08T23:57:21Z"}, "comments": 18, "created_at": "2015-01-09T16:43:25Z", "updated_at": "2015-01-23T09:26:36Z", "closed_at": "2015-01-23T09:26:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "First off, the operator precedence of `a..b` is extremely low.\n`struct Range` recently got #[derive(Eq)], so people might want to compare a range to an expression in range notation.\n\n`r == 1..10` parses as `(r == 1)..10`. Similarly, `1..10 == r` parses as `1..(10 == r)`. Both result in type errors.\nI think there's no good reason for `..` to have a precedence lower than comparisons. I'd suggest to put it in-between the comparison operators and the bitwise operators.\n\nBut the current implementation gets weirder when we consider the other forms of range notation:\n`r == 1..` parses as `(r == 1)..`, and is a type error (or maybe a `RangeFrom<bool>`).\nBut `r == ..1` parses as `r == (..1)`, and is a valid range comparison.\n\nIn the other direction, `..1 == r` parses as `..(1 == r)` and is potentially a `RangeTo<bool>`.\nBut `1.. == r` is a syntax error (expected one of `)` or `,`, found `==`).\nThis inconsistent with the prefix form.\n\nIf we keep the current precedence of `..` (lower than all binops), I think we should disallow `r == ..1`. I think this can be implemented easily by using RESTRICTION_NO_DOTS when parsing the RHS of any binop.\n\nAlso, we should use RESTRICTION_NO_DOTS when parsing the RHS of prefix-version `..expr` -- currently `..1..2` is a `RangeTo<Range<_>>`, while `1..2..3` and `1..2..` both are syntax errors.\n\nIf we increase the precedence, we will need to be careful not to allow code like `1 + ..2`. I think any binop with precedence smaller than that of `..` will have to use RESTRICTION_NO_DOTS on the RHS.\n\nI also think the implementation can be simplified quite a bit if the prefix `..` wasn't handled in `parse_prefix_expr` (as that's only supposed to be used for operators with high precedence), but at the same level as the binary and postfix version (`parse_assign_expr`, or `parse_binops` if we change the precedence). This would allow us to get rid of RESTRICTION_NO_DOTS and use the normal operator precedence handling instead.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/20811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/20811/timeline", "performed_via_github_app": null, "state_reason": "completed"}