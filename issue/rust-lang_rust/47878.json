{"url": "https://api.github.com/repos/rust-lang/rust/issues/47878", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47878/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47878/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47878/events", "html_url": "https://github.com/rust-lang/rust/issues/47878", "id": 292795933, "node_id": "MDU6SXNzdWUyOTI3OTU5MzM=", "number": 47878, "title": "Unclear calling convention for returning an enum to C from `extern \"C\"` functions", "user": {"login": "losfair", "id": 6104981, "node_id": "MDQ6VXNlcjYxMDQ5ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6104981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/losfair", "html_url": "https://github.com/losfair", "followers_url": "https://api.github.com/users/losfair/followers", "following_url": "https://api.github.com/users/losfair/following{/other_user}", "gists_url": "https://api.github.com/users/losfair/gists{/gist_id}", "starred_url": "https://api.github.com/users/losfair/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/losfair/subscriptions", "organizations_url": "https://api.github.com/users/losfair/orgs", "repos_url": "https://api.github.com/users/losfair/repos", "events_url": "https://api.github.com/users/losfair/events{/privacy}", "received_events_url": "https://api.github.com/users/losfair/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-30T14:10:02Z", "updated_at": "2018-01-30T17:14:16Z", "closed_at": "2018-01-30T15:31:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to pass an enum by value from Rust to C as the return value (to avoid heap allocation), but it doesn't seem to work correctly:\r\n\r\nRust:\r\n\r\n```rust\r\npub enum SomeEnum {\r\n    A(i32),\r\n    B(i32)\r\n}\r\n\r\n#[no_mangle]\r\npub extern \"C\" fn rust_enum_size() -> u32 {\r\n    std::mem::size_of::<SomeEnum>() as u32\r\n}\r\n\r\n#[no_mangle]\r\npub extern \"C\" fn rust_build_enum(v: i32) -> SomeEnum {\r\n    SomeEnum::A(v)\r\n}\r\n\r\n#[no_mangle]\r\npub extern \"C\" fn rust_extract_enum(e: &SomeEnum) -> i32 {\r\n    if let SomeEnum::A(v) = *e {\r\n        v\r\n    } else {\r\n        std::process::abort();\r\n    }\r\n}\r\n```\r\n\r\nC:\r\n\r\n```C\r\n#include <stdio.h>\r\n\r\nstruct SomeEnum {\r\n    char _[8]; // mem::size_of::<SomeEnum>() is 8 on my system\r\n};\r\n\r\nunsigned int rust_enum_size();\r\nstruct SomeEnum rust_build_enum(int v);\r\nint rust_extract_enum(struct SomeEnum *e);\r\n\r\nint main() {\r\n    printf(\"%u %lu\\n\", rust_enum_size(), sizeof(struct SomeEnum));\r\n    struct SomeEnum e = rust_build_enum(42);\r\n    int extracted = rust_extract_enum(&e);\r\n\r\n    printf(\"%d\\n\", extracted);\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\nThe code seems to trigger a UB and segfaults on my system (Linux x86_64) . Running in valgrind reports an invalid write error originating from inside `rust_build_enum`:\r\n\r\n```\r\n$ LD_LIBRARY_PATH=. valgrind ./a.out\r\n==12642== Memcheck, a memory error detector\r\n==12642== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\r\n==12642== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info\r\n==12642== Command: ./a.out\r\n==12642== \r\n8 8\r\n==12642== Invalid write of size 4\r\n==12642==    at 0x4E3A6B0: rust_build_enum (process_unix.rs:268)\r\n==12642==    by 0x505C3F0: (below main) (libc-start.c:291)\r\n==12642==  Address 0x2a is not stack'd, malloc'd or (recently) free'd\r\n```\r\n\r\nI guess that Rust is using a custom calling convention to return `enum`s, rather than the convention for returning structs defined in the System V ABI, even if the function is declared as `extern \"C\"`. Is there any workarounds for this or should we consider to make it FFI-safe to return a Rust enum from `extern \"C\"` functions?\r\n\r\nrustc version:\r\n\r\n```\r\nrustc 1.25.0-nightly (b5392f545 2018-01-08)\r\nbinary: rustc\r\ncommit-hash: b5392f54503fdaf04df4b9578510b2baa944f4af\r\ncommit-date: 2018-01-08\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.25.0-nightly\r\nLLVM version: 4.0\r\n```", "closed_by": {"login": "TimNN", "id": 1178249, "node_id": "MDQ6VXNlcjExNzgyNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimNN", "html_url": "https://github.com/TimNN", "followers_url": "https://api.github.com/users/TimNN/followers", "following_url": "https://api.github.com/users/TimNN/following{/other_user}", "gists_url": "https://api.github.com/users/TimNN/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimNN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimNN/subscriptions", "organizations_url": "https://api.github.com/users/TimNN/orgs", "repos_url": "https://api.github.com/users/TimNN/repos", "events_url": "https://api.github.com/users/TimNN/events{/privacy}", "received_events_url": "https://api.github.com/users/TimNN/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47878/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47878/timeline", "performed_via_github_app": null, "state_reason": "completed"}