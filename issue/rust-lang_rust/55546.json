{"url": "https://api.github.com/repos/rust-lang/rust/issues/55546", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55546/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55546/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55546/events", "html_url": "https://github.com/rust-lang/rust/issues/55546", "id": 376050114, "node_id": "MDU6SXNzdWUzNzYwNTAxMTQ=", "number": 55546, "title": "Suggestion for BufReader Documentation Improvement", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-31T16:25:58Z", "updated_at": "2019-03-28T12:12:48Z", "closed_at": "2019-03-28T12:12:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Introduction\r\n\r\nAfter we have chased down a bug in our multiprocess application, which caused messages passed between processes to get lost sometimes, I would like to suggest including a small hint in the Rust documentation of `BufReader`. Maybe a lint implementation for clippy also would be possible.\r\n\r\n## Background\r\n\r\nThe messages got (sometimes partly) lost, because I repeatedly created a `BufReader` instance on the same `ChildStdout` reference for every line I wanted to read off the stream. This instance got then dropped at the end of the scope. Retroperspective this was not a wise decision in my implementation and I understand that this can cause parts of stream data to get lost when the `BufReader` instance gets dropped.\r\nBut when implementing it I did not think of such a possibility and finding the source of this bug was quite difficult. It ended up searching the libstd source, after having found out that a crude self implementation of `read_line()` somehow fixed the bug. Only this brought up the idea, that the buffering of `BufReader` could be the cause of our issues.\r\n\r\n## Code\r\n\r\nThe issue can be reproduced by the following simple application and one file `input.log` with some lines of text in the execution directory. The read lines are written for comparison into `output.log`.\r\n\r\n```rust\r\nuse std::fs::{File, OpenOptions};\r\nuse std::io::{prelude::*, BufReader};\r\n\r\nfn main() -> std::io::Result<()> {\r\n    let mut read = File::open(\"./input.log\")?;\r\n    let mut write = OpenOptions::new()\r\n        .write(true)\r\n        .truncate(true)\r\n        .create(true)\r\n        .open(\"./output.log\")?;\r\n\r\n    loop {\r\n        let mut reader = BufReader::new(&mut read);\r\n        let mut line = String::new();\r\n\r\n        match reader.read_line(&mut line) {\r\n            Ok(0) | Err(_) => break,\r\n            Ok(_) => write!(write, \"{}\", line)?,\r\n        }\r\n    }\r\n\r\n    Ok(())\r\n}\r\n```\r\n\r\n# Suggestion\r\n\r\nTo decrease the chance for others repeating the same mistake, I would suggest a short hint in the documentation of `BufReader`, that creating multiple instances on a referenced stream (especially in some sort of loop) can cause data loss.\r\nMaybe it might even be possible to implement a clippy lint to fetch such a pitfall.\r\n\r\n## Reference\r\n\r\nThe related users topic can be found [here](https://users.rust-lang.org/t/messages-getting-lost-in-process-pipe/21704).", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55546/timeline", "performed_via_github_app": null, "state_reason": "completed"}