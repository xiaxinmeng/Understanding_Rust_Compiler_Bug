{"url": "https://api.github.com/repos/rust-lang/rust/issues/94434", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94434/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94434/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94434/events", "html_url": "https://github.com/rust-lang/rust/issues/94434", "id": 1153422148, "node_id": "I_kwDOAAsO6M5Ev9NE", "number": 94434, "title": "target-feature diagnostics should run for check-builds", "user": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-02-27T22:15:40Z", "updated_at": "2022-02-27T22:17:40Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Today any sort of checking done to verify the validity of the target features runs at codegen/post-monomorphization time. This means these issues are not visible for check builds and more importantly they also fail to show up for functions that do not get collected into a codegen unit. An example of this sort of problem is something I encountered when adjusting the `ui/target-feature/tied-features.rs` test, which if written like this:\r\n\r\n```rust\r\n// build-fail\r\n// compile-flags: --crate-type=rlib --target=aarch64-unknown-linux-gnu\r\n// needs-llvm-components: aarch64\r\n#![feature(aarch64_target_feature, target_feature_11)]\r\n#![feature(no_core, lang_items)]\r\n#![no_core]\r\n\r\n#[lang=\"sized\"]\r\ntrait Sized {}\r\n\r\n// FIXME: this should not need to be public.\r\n/*pub */ fn main() {\r\n    #[target_feature(enable = \"pacg\")]\r\n    //~^ ERROR must all be either enabled or disabled together\r\n    unsafe fn inner() {}\r\n\r\n    unsafe {\r\n        foo();\r\n        bar();\r\n        baz();\r\n        inner();\r\n    }\r\n}\r\n\r\n#[target_feature(enable = \"paca\")]\r\n//~^ ERROR must all be either enabled or disabled together\r\nunsafe fn foo() {}\r\n\r\n\r\n#[target_feature(enable = \"paca,pacg\")]\r\nunsafe fn bar() {}\r\n\r\n#[target_feature(enable = \"paca\")]\r\n#[target_feature(enable = \"pacg\")]\r\nunsafe fn baz() {}\r\n```\r\n\r\nwill not emit any errors. That's because the test is `rlib` and all of the functions are private, and therefore not collected. Since they are not collected, none of the validation code in the LLVM codegen implementation gets run.\r\n\r\nWe should move most of the target-feature related validation away from the `rustc_codegen_llvm` and to somewhere where this would be run for `cargo check` and similar.\r\n\r\n---\r\n\r\nThis requires some deliberation on the exact approach used, however. In some cases the features are global and specified via CLI flags, in other cases they are function-specific and specified via attributes as seen above. Finally there is translation from the rustc feature names to the backend specific feature names, which needs to remain in the backend.\r\n\r\nOh, and we need to have access to current features early on to derive `target_feature` `cfg`s from. And those may be affected by stuff like `-Ctarget-cpu=native`, and only the backend knows what that entails, really.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94434/timeline", "performed_via_github_app": null, "state_reason": null}