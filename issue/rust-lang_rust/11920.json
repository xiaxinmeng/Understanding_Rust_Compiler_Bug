{"url": "https://api.github.com/repos/rust-lang/rfcs/issues/2769", "repository_url": "https://api.github.com/repos/rust-lang/rfcs", "labels_url": "https://api.github.com/repos/rust-lang/rfcs/issues/2769/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rfcs/issues/2769/comments", "events_url": "https://api.github.com/repos/rust-lang/rfcs/issues/2769/events", "html_url": "https://github.com/rust-lang/rfcs/issues/2769", "id": 496717327, "node_id": "MDU6SXNzdWU0OTY3MTczMjc=", "number": 2769, "title": "C headers and ABI tests", "user": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2014-01-30T00:35:19Z", "updated_at": "2019-09-22T00:41:58Z", "closed_at": "2019-09-22T00:41:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using Rust as a glue language in place of C, or in addition to C, is quite popular and an area of a lot of potential for Rust, but right now we're not catering to it.\n\nOne aspect of Rust's embeddability is knowing what the ABI is. Although we don't want to have a stable ABI yet, we can start defining clearly what it is to make embedders live's easier.\n\nCreate a C header file called `rust.h`. This contains struct definitions useful for interop with Rust as well as declarations of C-ABI functions in the standard library that are intended for embedding and interop - it's the embedding API.\n\nThen extend our test infrastructure to execute \"embedding tests\": a) build a rust library, b) build a C exe that links to it, and execute.\n\nSome structs that are probably useful: strings, vectors, slices, a few different form of Option that have a guaranteed representation, closures, procs.\n\ncc @wycats\n", "closed_by": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rfcs/issues/2769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rfcs/issues/2769/timeline", "performed_via_github_app": null, "state_reason": "completed"}