{"url": "https://api.github.com/repos/rust-lang/rust/issues/21641", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/21641/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/21641/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/21641/events", "html_url": "https://github.com/rust-lang/rust/issues/21641", "id": 55446223, "node_id": "MDU6SXNzdWU1NTQ0NjIyMw==", "number": 21641, "title": "Accessing poisoned MutexGuard is unsafe", "user": {"login": "Diggsey", "id": 451321, "node_id": "MDQ6VXNlcjQ1MTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/451321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Diggsey", "html_url": "https://github.com/Diggsey", "followers_url": "https://api.github.com/users/Diggsey/followers", "following_url": "https://api.github.com/users/Diggsey/following{/other_user}", "gists_url": "https://api.github.com/users/Diggsey/gists{/gist_id}", "starred_url": "https://api.github.com/users/Diggsey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Diggsey/subscriptions", "organizations_url": "https://api.github.com/users/Diggsey/orgs", "repos_url": "https://api.github.com/users/Diggsey/repos", "events_url": "https://api.github.com/users/Diggsey/events{/privacy}", "received_events_url": "https://api.github.com/users/Diggsey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-01-26T04:39:30Z", "updated_at": "2015-01-26T22:13:39Z", "closed_at": "2015-01-26T08:31:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Mutex provides a way to access the data from a poisoned mutex, by handling the PoisonError case explicitly. This is unsafe, because the data contained within the mutex may be in an invalid state. For example, unsafe code which is writing to the data may panic part-way through (eg. something like CString may not yet have written the final NULL).\n\nUnder normal circumstances, the only requirement is that \"Drop\" is able to correctly handle any of the intermediate states resulting from a panic, which in practice is not too difficult because Drop is internal to the type, so externally all constraints are still maintained.\n\nA nice way to fix this would be for a poisoned mutex to immediately drop the contained data. To recover a poisoned mutex, another thread must then move new data into the mutex using a method on the PoisonError. (There could be unsafe methods to bypass this restriction)\n\nThis is more consistent and safer, because all other owned data is dropped when a thread panics, so the same should apply to data contained in an owned mutex.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/21641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/21641/timeline", "performed_via_github_app": null, "state_reason": "completed"}