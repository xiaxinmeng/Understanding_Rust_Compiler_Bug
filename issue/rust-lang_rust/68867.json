{"url": "https://api.github.com/repos/rust-lang/rust/issues/68867", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68867/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68867/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68867/events", "html_url": "https://github.com/rust-lang/rust/issues/68867", "id": 560562890, "node_id": "MDU6SXNzdWU1NjA1NjI4OTA=", "number": 68867, "title": "Bad codegen with simple match statement", "user": {"login": "emilio", "id": 1323194, "node_id": "MDQ6VXNlcjEzMjMxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1323194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilio", "html_url": "https://github.com/emilio", "followers_url": "https://api.github.com/users/emilio/followers", "following_url": "https://api.github.com/users/emilio/following{/other_user}", "gists_url": "https://api.github.com/users/emilio/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilio/subscriptions", "organizations_url": "https://api.github.com/users/emilio/orgs", "repos_url": "https://api.github.com/users/emilio/repos", "events_url": "https://api.github.com/users/emilio/events{/privacy}", "received_events_url": "https://api.github.com/users/emilio/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-02-05T18:52:40Z", "updated_at": "2020-09-22T21:09:38Z", "closed_at": "2020-09-20T20:00:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code:\r\n\r\n```rust\r\ntype CSSFloat = f32;\r\n\r\npub enum ViewportPercentageLength {\r\n    Vw(CSSFloat),\r\n    Vh(CSSFloat),\r\n    Vmin(CSSFloat),\r\n    Vmax(CSSFloat),\r\n}\r\n\r\nimpl ViewportPercentageLength {\r\n    fn try_sum(&self, other: &Self) -> Result<Self, ()> {\r\n        use self::ViewportPercentageLength::*;\r\n        Ok(match (self, other) {\r\n            (&Vw(one), &Vw(other)) => Vw(one + other),\r\n            (&Vh(one), &Vh(other)) => Vh(one + other),\r\n            (&Vmin(one), &Vmin(other)) => Vmin(one + other),\r\n            (&Vmax(one), &Vmax(other)) => Vmax(one + other),\r\n            _ => return Err(()),\r\n        })\r\n    }\r\n}\r\n\r\n#[no_mangle]\r\npub extern \"C\" fn sum_them(\r\n    one: &ViewportPercentageLength,\r\n    other: &ViewportPercentageLength,\r\n    out: &mut ViewportPercentageLength,\r\n) -> bool {\r\n    match one.try_sum(other) {\r\n        Ok(v) => {\r\n            *out = v;\r\n            true\r\n        }\r\n        Err(()) => false,\r\n    }\r\n}\r\n```\r\n\r\nGenerates the following assembly on Rust Nightly when compiled with `-C opt-level=3`:\r\n\r\n```asm\r\nsum_them:\r\n        mov     eax, dword ptr [rdi]\r\n        movss   xmm0, dword ptr [rdi + 4]\r\n        mov     ecx, dword ptr [rsi]\r\n        movss   xmm1, dword ptr [rsi + 4]\r\n        lea     rsi, [rip + .LJTI0_0]\r\n        movsxd  rax, dword ptr [rsi + 4*rax]\r\n        add     rax, rsi\r\n        jmp     rax\r\n.LBB0_1:\r\n        xor     eax, eax\r\n        test    ecx, ecx\r\n        je      .LBB0_8\r\n        ret\r\n.LBB0_3:\r\n        mov     eax, 2\r\n        cmp     ecx, 2\r\n        je      .LBB0_8\r\n.LBB0_9:\r\n        xor     eax, eax\r\n        ret\r\n.LBB0_5:\r\n        mov     eax, 3\r\n        cmp     ecx, 3\r\n        jne     .LBB0_9\r\n.LBB0_8:\r\n        addss   xmm0, xmm1\r\n        mov     dword ptr [rdx], eax\r\n        movss   dword ptr [rdx + 4], xmm0\r\n        mov     al, 1\r\n        ret\r\n.LBB0_7:\r\n        mov     eax, 1\r\n        cmp     ecx, 1\r\n        jne     .LBB0_9\r\n        jmp     .LBB0_8\r\n.LJTI0_0:\r\n        .long   .LBB0_1-.LJTI0_0\r\n        .long   .LBB0_7-.LJTI0_0\r\n        .long   .LBB0_3-.LJTI0_0\r\n        .long   .LBB0_5-.LJTI0_0\r\n```\r\n\r\nGodbolt link: https://rust.godbolt.org/z/JfkEez\r\n\r\nIt seems to generate one branch for each case of the statement, when I would've expected it to look more like:\r\n\r\n```\r\nif one.enum_discriminant != other.enum_discriminant {\r\n    jump to error case\r\n}\r\nwrite enum into outparam with tag = one.error_discriminant and value one.value != other.value\r\n```\r\n\r\ncc @michaelwoerister @heycam ", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68867/timeline", "performed_via_github_app": null, "state_reason": "completed"}