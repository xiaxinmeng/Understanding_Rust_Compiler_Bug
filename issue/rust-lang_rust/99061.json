{"url": "https://api.github.com/repos/rust-lang/rust/issues/99061", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99061/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99061/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99061/events", "html_url": "https://github.com/rust-lang/rust/issues/99061", "id": 1299256002, "node_id": "I_kwDOAAsO6M5NcRLC", "number": 99061, "title": "unhelpful `drop check cycle encountered` errors on infinite-sized recursive enum with a boxed variant", "user": {"login": "pro465", "id": 67726964, "node_id": "MDQ6VXNlcjY3NzI2OTY0", "avatar_url": "https://avatars.githubusercontent.com/u/67726964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pro465", "html_url": "https://github.com/pro465", "followers_url": "https://api.github.com/users/pro465/followers", "following_url": "https://api.github.com/users/pro465/following{/other_user}", "gists_url": "https://api.github.com/users/pro465/gists{/gist_id}", "starred_url": "https://api.github.com/users/pro465/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pro465/subscriptions", "organizations_url": "https://api.github.com/users/pro465/orgs", "repos_url": "https://api.github.com/users/pro465/repos", "events_url": "https://api.github.com/users/pro465/events{/privacy}", "received_events_url": "https://api.github.com/users/pro465/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 43009118, "node_id": "MDU6TGFiZWw0MzAwOTExOA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-destructors", "name": "A-destructors", "color": "f7e101", "default": false, "description": "Area: destructors (Drop, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-07-08T17:02:02Z", "updated_at": "2022-07-10T01:06:04Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nenum List<S> {\r\n    Cons(S, Box<List<S>>),\r\n    One(List<S>),\r\n    None,\r\n}\r\n\r\nfn main() {\r\n    let c: List<i32>;\r\n}\r\n```\r\n\r\nI expected to see this happen: *just error messages about infinite sized `List`*\r\n\r\nInstead, this happened: errored out as\r\n```\r\nerror[E0072]: recursive type `List` has infinite size\r\n --> /data/data/com.termux/files/home/test.rs:1:1\r\n  |\r\n1 | enum List<S> {\r\n  | ^^^^^^^^^^^^ recursive type has infinite size\r\n2 |     Cons(S, Box<List<S>>),\r\n3 |     One(List<S>),\r\n  |         ------- recursive without indirection\r\n  |\r\nhelp: insert some indirection (e.g., a `Box`, `Rc`, or `&`) to make `List` representable\r\n  |\r\n3 |     One(Box<List<S>>),\r\n  |         ++++       +\r\n\r\nerror[E0391]: cycle detected when computing drop-check constraints for `List`\r\n --> /data/data/com.termux/files/home/test.rs:1:1\r\n  |\r\n1 | enum List<S> {\r\n  | ^^^^^^^^^^^^\r\n  |\r\n  = note: ...which immediately requires computing drop-check constraints for `List` again\r\n  = note: cycle used when computing dropck types for `Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, constness: NotConst }, value: List<i32> } }`                                       \r\nerror: aborting due to 2 previous errors\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.61.0\r\nbinary: rustc\r\ncommit-hash: unknown\r\ncommit-date: unknown\r\nhost: armv7-linux-androideabi\r\nrelease: 1.61.0\r\nLLVM version: 14.0.3\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n<no backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99061/timeline", "performed_via_github_app": null, "state_reason": null}