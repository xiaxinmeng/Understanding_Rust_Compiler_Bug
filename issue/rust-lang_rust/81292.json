{"url": "https://api.github.com/repos/rust-lang/rust/issues/81292", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81292/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81292/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81292/events", "html_url": "https://github.com/rust-lang/rust/issues/81292", "id": 792439167, "node_id": "MDU6SXNzdWU3OTI0MzkxNjc=", "number": 81292, "title": "What guarantees does core::iter::Repeat give around observing calls to clone?", "user": {"login": "lopopolo", "id": 860434, "node_id": "MDQ6VXNlcjg2MDQzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/860434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lopopolo", "html_url": "https://github.com/lopopolo", "followers_url": "https://api.github.com/users/lopopolo/followers", "following_url": "https://api.github.com/users/lopopolo/following{/other_user}", "gists_url": "https://api.github.com/users/lopopolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lopopolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lopopolo/subscriptions", "organizations_url": "https://api.github.com/users/lopopolo/orgs", "repos_url": "https://api.github.com/users/lopopolo/repos", "events_url": "https://api.github.com/users/lopopolo/events{/privacy}", "received_events_url": "https://api.github.com/users/lopopolo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 889209675, "node_id": "MDU6TGFiZWw4ODkyMDk2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-iterators", "name": "A-iterators", "color": "f7e101", "default": false, "description": "Area: Iterators"}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-01-23T04:39:37Z", "updated_at": "2021-05-18T17:30:20Z", "closed_at": "2021-05-18T17:30:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, `core::iter::Repeat::nth` calls `core::iter::Repeat::next` `n` times.\r\n\r\nThis allows a struct with interior mutability or other global state and a custom clone implementation to observe the number of times it has been cloned.\r\n\r\n```rust\r\nuse std::sync::atomic::{AtomicUsize, Ordering};\r\n\r\nstatic COUNTER: AtomicUsize = AtomicUsize::new(0);\r\n\r\nstruct X;\r\n\r\nimpl Clone for X {\r\n    fn clone(&self) -> Self {\r\n        COUNTER.fetch_add(1, Ordering::SeqCst);\r\n        Self\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let mut iter = core::iter::repeat(X);\r\n    for _ in 0..10_000 {\r\n        let _ = iter.next();\r\n    }\r\n    println!(\"counter: {}\", COUNTER.load(Ordering::SeqCst));\r\n    let _ = iter.nth(555);\r\n    println!(\"counter: {}\", COUNTER.load(Ordering::SeqCst));\r\n}\r\n```\r\n\r\nCurrently, this program outputs:\r\n\r\n```text\r\ncounter: 10000\r\ncounter: 10556\r\n```\r\n\r\nWould it be possible to override the implementations of some `Iterator` methods that have default implementations without breaking any documented contract?\r\n\r\n```rust\r\nimpl<A: Clone> Iterator for Repeat<A> {\r\n    type Item = A;\r\n\r\n    #[inline]\r\n    fn next(&mut self) -> Option<A> {\r\n        Some(self.element.clone())\r\n    }\r\n\r\n    #[inline]\r\n    fn size_hint(&self) -> (usize, Option<usize>) {\r\n        (usize::MAX, None)\r\n    }\r\n\r\n    #[inline]\r\n    fn advance_by(&mut self, n: usize) -> Result<(), usize> {\r\n        // Advancing an infinite iterator of a single element is a no-op.\r\n        let _ = n;\r\n    }\r\n\r\n    #[inline]\r\n    fn nth(&mut self, n: usize) -> Option<T> {\r\n        let _ = n;\r\n        Some(self.element.clone())\r\n    }\r\n\r\n    fn last(self) -> Option<T> {\r\n        loop {}\r\n    }\r\n\r\n    fn count(self) -> usize {\r\n        loop {}\r\n    }\r\n}\r\n\r\nimpl<A: Clone> DoubleEndedIterator for Repeat<A> {\r\n    #[inline]\r\n    fn next_back(&mut self) -> Option<A> {\r\n        Some(self.element.clone())\r\n    }\r\n\r\n    #[inline]\r\n    fn advance_back_by(&mut self, n: usize) -> Result<(), usize> {\r\n        // Advancing an infinite iterator of a single element is a no-op.\r\n        let _ = n;\r\n    }\r\n\r\n    #[inline]\r\n    fn nth_back(&mut self, n: usize) -> Option<T> {\r\n        let _ = n;\r\n        Some(self.element.clone())\r\n    }\r\n}\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81292/timeline", "performed_via_github_app": null, "state_reason": "completed"}