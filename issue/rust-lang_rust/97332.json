{"url": "https://api.github.com/repos/rust-lang/rust/issues/97332", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/97332/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/97332/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/97332/events", "html_url": "https://github.com/rust-lang/rust/issues/97332", "id": 1245609122, "node_id": "I_kwDOAAsO6M5KPnyi", "number": 97332, "title": "Drop tracking error message regression in `issue-70935-complex-spans.rs`", "user": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2022-05-23T19:31:33Z", "updated_at": "2022-07-29T22:56:50Z", "closed_at": "2022-07-29T22:56:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With `-Zdrop-tracking` enabled, `issue-70935-complex-spans.rs` gives the following stderr output:\n\n```\nerror[E0277]: `Sender<i32>` cannot be shared between threads safely\n  --> $DIR/issue-70935-complex-spans.rs:10:45\n   |\nLL | fn foo(tx: std::sync::mpsc::Sender<i32>) -> impl Future + Send {\n   |                                             ^^^^^^^^^^^^^^^^^^ `Sender<i32>` cannot be shared between threads safely\n   |\n   = help: the trait `Sync` is not implemented for `Sender<i32>`\n   = note: required because of the requirements on the impl of `Send` for `&Sender<i32>`\n   = note: required because it appears within the type `[closure@$DIR/issue-70935-complex-spans.rs:13:13: 15:10]`\n   = note: required because it appears within the type `[static generator@$DIR/issue-70935-complex-spans.rs:7:67: 8:2]`\n   = note: required because it appears within the type `from_generator::GenFuture<[static generator@$DIR/issue-70935-complex-spans.rs:7:67: 8:2]>`\n   = note: required because it appears within the type `impl Future<Output = ()>`\n   = note: required because it appears within the type `impl Future<Output = ()>`\n   = note: required because it appears within the type `for<'r, 's, 't0> {ResumeTy, impl Future<Output = ()>, ()}`\n   = note: required because it appears within the type `[static generator@$DIR/issue-70935-complex-spans.rs:12:16: 16:6]`\n   = note: required because it appears within the type `from_generator::GenFuture<[static generator@$DIR/issue-70935-complex-spans.rs:12:16: 16:6]>`\n   = note: required because it appears within the type `impl Future<Output = ()>`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0277`.\n```\n\nWithout `-Zdrop-tracking`, we get the following error message:\n```\nerror: future cannot be sent between threads safely\n  --> src/test/ui/async-await/issue-70935-complex-spans.rs:10:45\n   |\n10 | fn foo(tx: std::sync::mpsc::Sender<i32>) -> impl Future + Send {\n   |                                             ^^^^^^^^^^^^^^^^^^ future created by async block is not `Send`\n   |\n   = help: the trait `Sync` is not implemented for `Sender<i32>`\nnote: future is not `Send` as this value is used across an await\n  --> src/test/ui/async-await/issue-70935-complex-spans.rs:15:11\n   |\n13 |           baz(|| async{\n   |  _____________-\n14 | |             foo(tx.clone());\n15 | |         }).await;\n   | |         - ^^^^^^ await occurs here, with the value maybe used later\n   | |_________|\n   |           has type `[closure@src/test/ui/async-await/issue-70935-complex-spans.rs:13:13: 15:10]` which is not `Send`\nnote: the value is later dropped here\n  --> src/test/ui/async-await/issue-70935-complex-spans.rs:15:17\n   |\n15 |         }).await;\n   |                 ^\n\nerror: aborting due to previous error\n```\n\nThe old message seems much better, so it'd be good to match the behavior with drop tracking.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"jyn514\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/97332/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/97332/timeline", "performed_via_github_app": null, "state_reason": "completed"}