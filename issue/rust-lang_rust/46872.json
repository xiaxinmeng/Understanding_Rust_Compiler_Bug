{"url": "https://api.github.com/repos/rust-lang/rust/issues/46872", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46872/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46872/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46872/events", "html_url": "https://github.com/rust-lang/rust/issues/46872", "id": 283538720, "node_id": "MDU6SXNzdWUyODM1Mzg3MjA=", "number": 46872, "title": "Inefficient write! macro with vector", "user": {"login": "DawidPi", "id": 9028695, "node_id": "MDQ6VXNlcjkwMjg2OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9028695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DawidPi", "html_url": "https://github.com/DawidPi", "followers_url": "https://api.github.com/users/DawidPi/followers", "following_url": "https://api.github.com/users/DawidPi/following{/other_user}", "gists_url": "https://api.github.com/users/DawidPi/gists{/gist_id}", "starred_url": "https://api.github.com/users/DawidPi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DawidPi/subscriptions", "organizations_url": "https://api.github.com/users/DawidPi/orgs", "repos_url": "https://api.github.com/users/DawidPi/repos", "events_url": "https://api.github.com/users/DawidPi/events{/privacy}", "received_events_url": "https://api.github.com/users/DawidPi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-20T11:53:19Z", "updated_at": "2017-12-21T08:58:53Z", "closed_at": "2017-12-21T08:58:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "write! macro, that uses vector to write it's elements into a file is inefficient, as it make write() system call for each letter stored in vector of chars. It could be implemented in a way, that only one write system call is made with all the data, that is to be written.\r\n\r\nsource code, that shows the issue can be seen with following source code:\r\n\r\n```\r\nextern crate rand;\r\n\r\nuse rand::Rng;\r\nuse std::io::Write;\r\nuse std::fs::OpenOptions;\r\n\r\nfn generate_character() -> char {\r\n    rand::thread_rng().gen_ascii_chars().next().expect(\"Could not get character\")\r\n}\r\n\r\nfn main() {\r\n    let mut vector = Vec::new();\r\n\r\n    for _ in 0..10000{\r\n        vector.push(generate_character());\r\n    }\r\n\r\n    let mut file = OpenOptions::new().create(true).write(true).open(\"testfile.txt\").unwrap();\r\n\r\n    write!(file, \"{:?}\", vector).expect(\"Could not write to file\");\r\n    file.sync_all().expect(\"Could not sync all\");\r\n\r\n    let string : String = vector.iter().collect();\r\n    file.write_all(string.as_bytes()).expect(\"Could not sync all\");\r\n    file.sync_all().expect(\"Could not sync all\");\r\n\r\n}\r\n```\r\n(there is a wrong error log if writing fails but it's not important)\r\n\r\nwhen progam is run with strace we can see, that write! under the hood issues many many system calls, while write_all method uses just one system call. One system call is often more efficient and in some cases even much more efficient.\r\n\r\nAttaching logs from the strace and sample project with given source code.\r\n\r\n\r\nIs there a possibility to fix this issue? I am no Rust expert at all and with macros I know very little, but this certainly is an issue. I see this a some major flaw\r\n\r\n[strace.log](https://github.com/rust-lang/rust/files/1575383/strace.log)\r\n[inefficient write macro.zip](https://github.com/rust-lang/rust/files/1575394/inefficient.write.macro.zip)\r\n\r\n\r\n", "closed_by": {"login": "DawidPi", "id": 9028695, "node_id": "MDQ6VXNlcjkwMjg2OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9028695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DawidPi", "html_url": "https://github.com/DawidPi", "followers_url": "https://api.github.com/users/DawidPi/followers", "following_url": "https://api.github.com/users/DawidPi/following{/other_user}", "gists_url": "https://api.github.com/users/DawidPi/gists{/gist_id}", "starred_url": "https://api.github.com/users/DawidPi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DawidPi/subscriptions", "organizations_url": "https://api.github.com/users/DawidPi/orgs", "repos_url": "https://api.github.com/users/DawidPi/repos", "events_url": "https://api.github.com/users/DawidPi/events{/privacy}", "received_events_url": "https://api.github.com/users/DawidPi/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46872/timeline", "performed_via_github_app": null, "state_reason": "completed"}