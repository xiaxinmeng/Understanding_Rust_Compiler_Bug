{"url": "https://api.github.com/repos/rust-lang/rust/issues/56103", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56103/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56103/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56103/events", "html_url": "https://github.com/rust-lang/rust/issues/56103", "id": 382710093, "node_id": "MDU6SXNzdWUzODI3MTAwOTM=", "number": 56103, "title": "Compiler panic when running rustdoc (unreproducible on latest nightly)", "user": {"login": "derekdreery", "id": 1392222, "node_id": "MDQ6VXNlcjEzOTIyMjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1392222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/derekdreery", "html_url": "https://github.com/derekdreery", "followers_url": "https://api.github.com/users/derekdreery/followers", "following_url": "https://api.github.com/users/derekdreery/following{/other_user}", "gists_url": "https://api.github.com/users/derekdreery/gists{/gist_id}", "starred_url": "https://api.github.com/users/derekdreery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/derekdreery/subscriptions", "organizations_url": "https://api.github.com/users/derekdreery/orgs", "repos_url": "https://api.github.com/users/derekdreery/repos", "events_url": "https://api.github.com/users/derekdreery/events{/privacy}", "received_events_url": "https://api.github.com/users/derekdreery/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-20T15:15:46Z", "updated_at": "2018-11-20T15:42:19Z", "closed_at": "2018-11-20T15:42:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I got a compiler panic running `RUST_BACKTRACE=1 cargo doc --open` in the most up-to-date `wasm-bindgen` `js-sys`. It seems to have been fixed in latest nightly, but I thought I should report it anyway.\r\n\r\n<details><summary>compiler output</summary>\r\n\r\n```\r\nthread 'main' panicked at 'no entry found for key', libcore/option.rs:1008:5\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/sys_common/backtrace.rs:59\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:480\r\n   6: std::panicking::continue_panic_fmt\r\n             at libstd/panicking.rs:390\r\n   7: rust_begin_unwind\r\n             at libstd/panicking.rs:325\r\n   8: core::panicking::panic_fmt\r\n             at libcore/panicking.rs:77\r\n   9: core::option::expect_failed\r\n             at libcore/option.rs:1008\r\n  10: <T as serialize::serialize::Decodable>::decode\r\n  11: serialize::serialize::Decoder::read_enum\r\n  12: rustc::ty::query::on_disk_cache::__ty_decoder_impl::<impl serialize::serialize::SpecializedDecoder<&'tcx rustc::ty::TyS<'tcx>> for rustc::ty::query::on_disk_cache::CacheDecoder<'a, 'tcx, 'x>>::specialized_decode\r\n  13: rustc::ty::query::on_disk_cache::__ty_decoder_impl::<impl serialize::serialize::SpecializedDecoder<&'tcx rustc::ty::TyS<'tcx>> for rustc::ty::query::on_disk_cache::CacheDecoder<'a, 'tcx, 'x>>::specialized_decode\r\n  14: serialize::serialize::Decoder::read_enum\r\n  15: <smallvec::SmallVec<A> as core::iter::traits::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  16: <core::result::Result<T, E> as rustc::ty::context::InternIteratorElement<T, R>>::intern_with\r\n  17: serialize::serialize::Decoder::read_enum\r\n  18: rustc::ty::query::on_disk_cache::__ty_decoder_impl::<impl serialize::serialize::SpecializedDecoder<&'tcx rustc::ty::TyS<'tcx>> for rustc::ty::query::on_disk_cache::CacheDecoder<'a, 'tcx, 'x>>::specialized_decode\r\n  19: serialize::serialize::Decoder::read_struct\r\n  20: <alloc::boxed::Box<T> as serialize::serialize::Decodable>::decode\r\n  21: serialize::serialize::Decoder::read_enum\r\n  22: <rustc::mir::TerminatorKind<'tcx> as serialize::serialize::Decodable>::decode::{{closure}}::{{closure}}\r\n  23: serialize::serialize::Decoder::read_struct\r\n  24: serialize::serialize::Decoder::read_option\r\n  25: serialize::serialize::Decoder::read_struct\r\n  26: serialize::serialize::Decoder::read_seq\r\n  27: <rustc::mir::Mir<'tcx> as serialize::serialize::Decodable>::decode::{{closure}}\r\n  28: rustc::ty::query::on_disk_cache::OnDiskCache::try_load_query_result\r\n  29: <rustc::ty::query::queries::optimized_mir<'tcx> as rustc::ty::query::config::QueryDescription<'tcx>>::try_load_from_disk\r\n  30: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_query\r\n  31: rustc::ty::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::instance_mir\r\n  32: rustc_mir::monomorphize::collector::collect_items_rec\r\n  33: rustc_mir::monomorphize::collector::collect_items_rec\r\n  34: rustc_mir::monomorphize::collector::collect_items_rec\r\n  35: rustc_mir::monomorphize::collector::collect_items_rec\r\n  36: rustc_mir::monomorphize::collector::collect_items_rec\r\n  37: rustc_mir::monomorphize::collector::collect_items_rec\r\n  38: rustc_mir::monomorphize::collector::collect_items_rec\r\n  39: rustc_mir::monomorphize::collector::collect_items_rec\r\n  40: rustc_mir::monomorphize::collector::collect_items_rec\r\n  41: rustc_mir::monomorphize::collector::collect_items_rec\r\n  42: rustc_mir::monomorphize::collector::collect_items_rec\r\n  43: rustc_mir::monomorphize::collector::collect_items_rec\r\n  44: rustc_mir::monomorphize::collector::collect_crate_mono_items::{{closure}}\r\n  45: rustc::util::common::time\r\n  46: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  47: rustc::util::common::time\r\n  48: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  49: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::collect_and_partition_mono_items<'tcx>>::compute\r\n  50: rustc::ty::context::tls::with_context\r\n  51: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  52: rustc::ty::context::tls::with_related_context\r\n  53: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  54: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query\r\n  55: rustc::ty::query::plumbing::force_from_dep_node\r\n  56: rustc::dep_graph::graph::DepGraph::try_mark_green\r\n  57: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_mark_green_and_read\r\n  58: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  59: rustc_metadata::encoder::encode_metadata\r\n  60: rustc_metadata::cstore_impl::<impl rustc::middle::cstore::CrateStore for rustc_metadata::cstore::CStore>::encode_metadata\r\n  61: rustc::ty::context::TyCtxt::encode_metadata\r\n  62: rustc_codegen_llvm::base::write_metadata\r\n  63: rustc::util::common::time\r\n  64: rustc_codegen_llvm::base::codegen_crate\r\n  65: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate\r\n  66: rustc::util::common::time\r\n  67: rustc_driver::driver::phase_4_codegen\r\n  68: rustc_driver::driver::compile_input::{{closure}}\r\n  69: rustc::ty::context::tls::enter_context\r\n  70: <std::thread::local::LocalKey<T>>::with\r\n  71: rustc::ty::context::TyCtxt::create_and_enter\r\n  72: rustc_driver::driver::compile_input\r\n  73: rustc_driver::run_compiler_with_pool\r\n  74: <scoped_tls::ScopedKey<T>>::set\r\n  75: rustc_driver::run_compiler\r\n  76: syntax::with_globals\r\n  77: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  78: rustc_driver::run\r\n  79: rustc_driver::main\r\n  80: std::rt::lang_start::{{closure}}\r\n  81: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  82: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  83: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:398\r\n             at libstd/rt.rs:58\r\n  84: main\r\n  85: __libc_start_main\r\n  86: <unknown>\r\nquery stack during panic:\r\n#0 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.32.0-nightly (ca79ecd69 2018-11-11) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\n```\r\n</details>", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56103/timeline", "performed_via_github_app": null, "state_reason": "completed"}