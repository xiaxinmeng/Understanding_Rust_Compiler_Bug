{"url": "https://api.github.com/repos/rust-lang/rust/issues/99195", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99195/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99195/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99195/events", "html_url": "https://github.com/rust-lang/rust/issues/99195", "id": 1302726030, "node_id": "I_kwDOAAsO6M5NpgWO", "number": 99195, "title": "`overflowing_literals` should have an option for \"ignore signed overflows\"", "user": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2022-07-12T23:39:22Z", "updated_at": "2023-05-23T01:40:23Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have recently been working with code where using the two's complement form of signed literals is useful, but this doesn't mesh very well with the `overflowing_literals` lint.\r\n\r\nHere's a simplified example:\r\n\r\n```rust\r\nlet good_signed = 0b_1111_1111i8;\r\nlet bad_signed = 0b_111_111_111i8;\r\nlet good_unsigned = 0b_1111_1111u8;\r\nlet bad_unsigned = 0b_111_111_111u8;\r\n```\r\n\r\nRight now, with the `overflowing_literals` lint, `good_signed`, `bad_signed`, and `bad_unsigned` will all be marked as overflowing. To avoid `good_signed` being marked as invalid, I had code that I blanket marked as `#[allow(overflowing_literals)]`, but this caused me to miss literals like `bad_signed` and `bad_unsigned`, which overflow regardless of their sign.\r\n\r\nI'm not sure what the best strategy here is. I see two possible solutions:\r\n\r\n1. The `overflowing_literals` lint is split into a separate lint alongside `overflowing_literals` lint, where this new lint warns on integer literals that would not overflow if they were unsigned, but do overflow because they're signed. This can be selectively allowed in code while still being able to keep the `overflowing_literals` lint on.\r\n2. Instead of splitting the lint, no lint is thrown at all in the case where a signed integer overflows to a negative number because it's written in two's complement form. Or, alternatively, the lint is only triggered if the integer is written in base-10, but not if it's written in hexadecimal, octal, or binary.\r\n\r\nEither way, the current configuration of the lint seems overly restrictive.\r\n\r\nAfter searching, I decided to file a separate issue instead of including this analysis in #53628. If this is seen as too similar to the existing ticket, I'm fine with also closing this in favour of that one.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99195/timeline", "performed_via_github_app": null, "state_reason": null}