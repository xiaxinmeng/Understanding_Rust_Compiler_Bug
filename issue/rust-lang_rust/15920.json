{"url": "https://api.github.com/repos/rust-lang/rust/issues/15920", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/15920/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/15920/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/15920/events", "html_url": "https://github.com/rust-lang/rust/issues/15920", "id": 38538951, "node_id": "MDU6SXNzdWUzODUzODk1MQ==", "number": 15920, "title": "The Unsafe<T> reference problem", "user": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-07-23T15:14:26Z", "updated_at": "2015-01-24T00:26:00Z", "closed_at": "2015-01-24T00:26:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, in Rust, undefined behaviour can only appear within an unsafe block, with one exception: one can take a reference to the body of an Unsafe<T> block when unsafe code had borrowed the inside of the block, as in the following Rust code:\n\n``` rust\nuse std::ty::Unsafe;\nuse std::kinds::marker::InvariantType;\n\nfn mess_up_memory() {\n  let mut result : Vec<Box<uint>> = vec![];\n  for _ in range(0, 10000u) { result.push(box 0xcccccccc); }\n}\n\nfn main() {\n    // Create an unsafe object\n    let x = Unsafe { value: box 1u, marker1: InvariantType };\n    let mut_alias : &mut Box<uint> = unsafe { &mut *x.get() };\n\n    // The behaviour up to here was completely defined.\n    // The unsafe introduced no undefined behaviour\n    // Now, lets introduce some UB\n    let alias : &Box<uint> = &x.value;\n    // Now we have aliased & and &mut pointers\n    // Have fun\n    let internal : &uint = &**alias;\n    println!(\"internal={}\", internal);\n    *mut_alias = box 2;\n    mess_up_memory();\n    println!(\"internal={}\", internal);\n}\n```\n\nThis was confused with some issues with statics in rust-lang/rfcs#177 and #14862, but, as shown here, has nothing to do with them.\n\nThis is not an RFC because I don't have a plan to fix this (and would prefer to first talk about the issue here).\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/15920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/15920/timeline", "performed_via_github_app": null, "state_reason": "completed"}