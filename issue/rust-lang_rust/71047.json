{"url": "https://api.github.com/repos/rust-lang/rust/issues/71047", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71047/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71047/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71047/events", "html_url": "https://github.com/rust-lang/rust/issues/71047", "id": 598393363, "node_id": "MDU6SXNzdWU1OTgzOTMzNjM=", "number": 71047, "title": "cargo fix: after fixes were applied the compiler reported errors", "user": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 66893153, "node_id": "MDU6TGFiZWw2Njg5MzE1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-visibility", "name": "A-visibility", "color": "f7e101", "default": false, "description": "Area: visibility/privacy modifiers such as `pub`"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-12T02:27:44Z", "updated_at": "2023-01-25T19:42:26Z", "closed_at": "2023-01-25T19:42:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code: https://github.com/jyn514/rcc/commit/16d8b2d763320311b59a2a5d48c3cc9390f63463\r\n\r\nI expected to see this happen: Duplicate imports removed\r\n\r\nInstead, this happened: `cargo fix` gave an internal error.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc +nightly --version -v\r\nrustc 1.44.0-nightly (77621317d 2020-03-28)\r\nbinary: rustc\r\ncommit-hash: 77621317d643cc5d13da60b26ab68b057668e688\r\ncommit-date: 2020-03-28\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.44.0-nightly\r\nLLVM version: 9.0\r\n```\r\n\r\n`cargo --version -v`: `cargo 1.44.0-nightly (8a0d4d9c9 2020-03-24)`\r\n\r\nNote the error also occurs with 1.42.0 stable.\r\n\r\n<details><summary>Full output</summary>\r\n<p>\r\n\r\n```\r\ncargo fix\r\n    Checking rcc v0.6.0 (/home/joshua/src/rust/rcc)\r\nwarning: failed to automatically apply fixes suggested by rustc to crate `rcc`\r\n\r\nafter fixes were automatically applied the compiler reported errors within these files:\r\n\r\n  * src/analyze/mod.rs\r\n  * src/analyze/stmt.rs\r\n  * src/data/ast.rs\r\n  * src/ir/expr.rs\r\n  * src/ir/mod.rs\r\n  * src/lib.rs\r\n\r\nThis likely indicates a bug in either rustc or cargo itself,\r\nand we would appreciate a bug report! You're likely to see \r\na number of compiler warnings after this message which cargo\r\nattempted to fix but failed. If you could open an issue at\r\nhttps://github.com/rust-lang/rust/issues\r\nquoting the full output of this command we'd be very appreciative!\r\nNote that you may be able to make some more progress in the near-term\r\nfixing code with the `--broken-code` flag\r\n\r\nThe following errors were reported:\r\nerror[E0365]: `PreProcessor` is private, and cannot be re-exported\r\n  --> src/lib.rs:44:22\r\n   |\r\n44 | pub use lex::{Lexer, PreProcessor};\r\n   |                      ^^^^^^^^^^^^ re-export of private `PreProcessor`\r\n   |\r\n   = note: consider declaring type or module `PreProcessor` with `pub`\r\n\r\nwarning: the item `Expr` is imported redundantly\r\n   --> src/analyze/stmt.rs:100:13\r\n    |\r\n5   |     hir::*,\r\n    |     ------ the item `Expr` is already imported here\r\n...\r\n100 |         use crate::data::hir::Expr;\r\n    |             ^^^^^^^^^^^^^^^^^^^^^^\r\n    |\r\n    = note: `#[warn(unused_imports)]` on by default\r\n\r\nwarning: unused imports: `ComparisonToken`, `self`\r\n  --> src/analyze/mod.rs:14:5\r\n   |\r\n14 |     self,\r\n   |     ^^^^\r\n...\r\n17 |     lex::{ComparisonToken, Keyword},\r\n   |           ^^^^^^^^^^^^^^^\r\n\r\nwarning: the item `HashSet` is imported redundantly\r\n   --> src/analyze/mod.rs:724:21\r\n    |\r\n7   | use std::collections::{HashSet, VecDeque};\r\n    |                        ------- the item `HashSet` is already imported here\r\n...\r\n724 |                 use std::collections::HashSet;\r\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: the item `StorageClass` is imported redundantly\r\n    --> src/analyze/mod.rs:1009:13\r\n     |\r\n18   |     *,\r\n     |     - the item `StorageClass` is already imported here\r\n...\r\n1009 |         use crate::data::StorageClass;\r\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: the item `StorageClass` is imported redundantly\r\n   --> src/ir/expr.rs:500:44\r\n    |\r\n6   | use crate::data::*;\r\n    |     -------------- the item `StorageClass` is already imported here\r\n...\r\n500 |         use crate::data::{hir::Qualifiers, StorageClass};\r\n    |                                            ^^^^^^^^^^^^\r\n\r\nwarning: unused imports: `Expr`, `MetadataRef`\r\n  --> src/ir/mod.rs:26:24\r\n   |\r\n26 |     hir::{Declaration, Expr, Initializer, Metadata, MetadataRef, Scope, Stmt},\r\n   |                        ^^^^                         ^^^^^^^^^^^\r\n\r\nwarning: unused import: `std::fmt::Write`\r\n   --> src/data/ast.rs:476:13\r\n    |\r\n476 |         use std::fmt::Write;\r\n    |             ^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0365`.\r\nOriginal diagnostics will follow.\r\n\r\nwarning: unused imports: `error::Warning`, `self`\r\n --> src/analyze/expr.rs:3:19\r\n  |\r\n3 | use crate::data::{self, error::Warning, hir::*, lex::ComparisonToken, *};\r\n  |                   ^^^^  ^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(unused_imports)]` on by default\r\n\r\nwarning: unused import: `lex::LocationTrait`\r\n --> src/analyze/init.rs:2:54\r\n  |\r\n2 | use crate::data::{ast, error::SemanticError, hir::*, lex::LocationTrait, types, Location, Type};\r\n  |                                                      ^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `LocationTrait`\r\n --> src/analyze/stmt.rs:6:22\r\n  |\r\n6 |     lex::{Locatable, LocationTrait},\r\n  |                      ^^^^^^^^^^^^^\r\n\r\nwarning: the item `Expr` is imported redundantly\r\n   --> src/analyze/stmt.rs:100:13\r\n    |\r\n5   |     hir::*,\r\n    |     ------ the item `Expr` is already imported here\r\n...\r\n100 |         use crate::data::hir::Expr;\r\n    |             ^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `HashMap`\r\n --> src/analyze/mod.rs:7:24\r\n  |\r\n7 | use std::collections::{HashMap, HashSet, VecDeque};\r\n  |                        ^^^^^^^\r\n\r\nwarning: unused import: `std::iter::Peekable`\r\n --> src/analyze/mod.rs:8:5\r\n  |\r\n8 | use std::iter::Peekable;\r\n  |     ^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `crate::arch`\r\n  --> src/analyze/mod.rs:12:5\r\n   |\r\n12 | use crate::arch;\r\n   |     ^^^^^^^^^^^\r\n\r\nwarning: unused imports: `ComparisonToken`, `self`\r\n  --> src/analyze/mod.rs:14:5\r\n   |\r\n14 |     self,\r\n   |     ^^^^\r\n...\r\n17 |     lex::{ComparisonToken, Keyword},\r\n   |           ^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `expr::literal`\r\n  --> src/analyze/mod.rs:22:5\r\n   |\r\n22 | use expr::literal;\r\n   |     ^^^^^^^^^^^^^\r\n\r\nwarning: the item `HashSet` is imported redundantly\r\n   --> src/analyze/mod.rs:226:13\r\n    |\r\n7   | use std::collections::{HashMap, HashSet, VecDeque};\r\n    |                                 ------- the item `HashSet` is already imported here\r\n...\r\n226 |         use std::collections::HashSet;\r\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `std::collections::HashSet`\r\n   --> src/analyze/mod.rs:226:13\r\n    |\r\n226 |         use std::collections::HashSet;\r\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `std::convert::TryFrom`\r\n   --> src/analyze/mod.rs:557:13\r\n    |\r\n557 |         use std::convert::TryFrom;\r\n    |             ^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: the item `HashSet` is imported redundantly\r\n   --> src/analyze/mod.rs:724:21\r\n    |\r\n7   | use std::collections::{HashMap, HashSet, VecDeque};\r\n    |                                 ------- the item `HashSet` is already imported here\r\n...\r\n724 |                 use std::collections::HashSet;\r\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: the item `StorageClass` is imported redundantly\r\n    --> src/analyze/mod.rs:1009:13\r\n     |\r\n18   |     *,\r\n     |     - the item `StorageClass` is already imported here\r\n...\r\n1009 |         use crate::data::StorageClass;\r\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `ExprType`\r\n --> src/data/error.rs:4:24\r\n  |\r\n4 | use super::hir::{Expr, ExprType};\r\n  |                        ^^^^^^^^\r\n\r\nwarning: unused import: `VecDeque`\r\n --> src/data/hir.rs:4:33\r\n  |\r\n4 | use std::collections::{HashMap, VecDeque};\r\n  |                                 ^^^^^^^^\r\n\r\nwarning: unused import: `super::error::CompileError`\r\n  --> src/data/hir.rs:10:5\r\n   |\r\n10 | use super::error::CompileError;\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `AssignmentToken`\r\n  --> src/data/hir.rs:11:18\r\n   |\r\n11 | use super::lex::{AssignmentToken, ComparisonToken, Keyword, Literal, Locatable};\r\n   |                  ^^^^^^^^^^^^^^^\r\n\r\nwarning: unused imports: `Recover`, `RecoverableResult`\r\n --> src/data/mod.rs:9:38\r\n  |\r\n9 | pub(crate) use error::{ErrorHandler, Recover, RecoverableResult};\r\n  |                                      ^^^^^^^  ^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `crate::data::lex::ComparisonToken::*`\r\n  --> src/fold.rs:93:13\r\n   |\r\n93 |         use crate::data::lex::ComparisonToken::*;\r\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `Token`\r\n --> src/ir/expr.rs:9:54\r\n  |\r\n9 |     lex::{AssignmentToken, ComparisonToken, Literal, Token},\r\n  |                                                      ^^^^^\r\n\r\nwarning: the item `StorageClass` is imported redundantly\r\n   --> src/ir/expr.rs:500:44\r\n    |\r\n6   | use crate::data::*;\r\n    |     -------------- the item `StorageClass` is already imported here\r\n...\r\n500 |         use crate::data::{hir::Qualifiers, StorageClass};\r\n    |                                            ^^^^^^^^^^^^\r\n\r\nwarning: unused import: `Metadata`\r\n  --> src/ir/static_init.rs:13:40\r\n   |\r\n13 |     hir::{Expr, ExprType, Initializer, Metadata, MetadataRef},\r\n   |                                        ^^^^^^^^\r\n\r\nwarning: unused imports: `Expr`, `MetadataRef`\r\n  --> src/ir/mod.rs:26:24\r\n   |\r\n26 |     hir::{Declaration, Expr, Initializer, Metadata, MetadataRef, Scope, Stmt},\r\n   |                        ^^^^                         ^^^^^^^^^^^\r\n\r\nwarning: unused import: `std::fmt::Write`\r\n   --> src/data/ast.rs:476:13\r\n    |\r\n476 |         use std::fmt::Write;\r\n    |             ^^^^^^^^^^^^^^^\r\n\r\nwarning: variable does not need to be mutable\r\n   --> src/ir/expr.rs:469:13\r\n    |\r\n469 |         let mut value = value;\r\n    |             ----^^^^^\r\n    |             |\r\n    |             help: remove this `mut`\r\n    |\r\n    = note: `#[warn(unused_mut)]` on by default\r\n\r\nwarning: variable does not need to be mutable\r\n  --> src/ir/static_init.rs:24:20\r\n   |\r\n24 |         &mut self, mut symbol: MetadataRef, init: Option<Initializer>, location: Location,\r\n   |                    ----^^^^^^\r\n   |                    |\r\n   |                    help: remove this `mut`\r\n\r\nwarning: type alias is never used: `SemanticResult`\r\n  --> src/analyze/mod.rs:25:1\r\n   |\r\n25 | type SemanticResult<T> = Result<T, Locatable<SemanticError>>;\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: `#[warn(dead_code)]` on by default\r\n\r\nwarning: field is never read: `declared_compound_type`\r\n    --> src/analyze/mod.rs:1040:5\r\n     |\r\n1040 |     declared_compound_type: bool,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: method is never used: `is_function`\r\n   --> src/data/ast.rs:276:5\r\n    |\r\n276 |     pub(crate) fn is_function(&self) -> bool {\r\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: method is never used: `compare`\r\n   --> src/ir/expr.rs:407:5\r\n    |\r\n407 | /     fn compare(\r\n408 | |         &mut self, left: Expr, right: Expr, token: ComparisonToken, builder: &mut FunctionBuilder,\r\n409 | |     ) -> IrResult {\r\n410 | |         let (left, right) = (\r\n...   |\r\n433 | |         })\r\n434 | |     }\r\n    | |_____^\r\n\r\nwarning: method is never used: `assignment`\r\n   --> src/ir/expr.rs:435:5\r\n    |\r\n435 | /     fn assignment(\r\n436 | |         &mut self, lval: Expr, rval: Expr, token: AssignmentToken, builder: &mut FunctionBuilder,\r\n437 | |     ) -> IrResult {\r\n438 | |         let ctype = lval.ctype.clone();\r\n...   |\r\n495 | |         Ok(value)\r\n496 | |     }\r\n    | |_____^\r\n\r\nwarning: unreachable `pub` item\r\n  --> src/analyze/stmt.rs:16:5\r\n   |\r\n16 |     pub fn parse_stmt(&mut self, stmt: ast::Stmt) -> Stmt {\r\n   |     ---^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |     |\r\n   |     help: consider restricting its visibility: `pub(crate)`\r\n   |\r\nnote: lint level defined here\r\n  --> src/lib.rs:4:9\r\n   |\r\n4  | #![warn(unreachable_pub)]\r\n   |         ^^^^^^^^^^^^^^^\r\n\r\nwarning: unreachable `pub` item\r\n   --> src/data/hir.rs:107:5\r\n    |\r\n107 |     pub fn get(&self, i: MetadataRef) -> Rc<Metadata> {\r\n    |     ---^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    |     |\r\n    |     help: consider restricting its visibility: `pub(crate)`\r\n\r\nwarning: unreachable `pub` item\r\n  --> src/lex/mod.rs:14:1\r\n   |\r\n14 | pub use cpp::PreProcessor;\r\n   | ---^^^^^^^^^^^^^^^^^^^^^^^\r\n   | |\r\n   | help: consider restricting its visibility: `pub(crate)`\r\n   |\r\n   = help: or consider exporting it for use by other crates\r\n\r\nwarning: unreachable `pub` item\r\n  --> src/parse/mod.rs:15:1\r\n   |\r\n15 | pub use crate::analyze::Analyzer;\r\n   | ---^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   | |\r\n   | help: consider restricting its visibility: `pub(crate)`\r\n   |\r\n   = help: or consider exporting it for use by other crates\r\n\r\nwarning: unused imports: `error::Warning`, `self`\r\n --> src/analyze/expr.rs:3:19\r\n  |\r\n3 | use crate::data::{self, error::Warning, hir::*, lex::ComparisonToken, *};\r\n  |                   ^^^^  ^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(unused_imports)]` on by default\r\n\r\nwarning: unused import: `lex::LocationTrait`\r\n --> src/analyze/init.rs:2:54\r\n  |\r\n2 | use crate::data::{ast, error::SemanticError, hir::*, lex::LocationTrait, types, Location, Type};\r\n  |                                                      ^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `LocationTrait`\r\n --> src/analyze/stmt.rs:6:22\r\n  |\r\n6 |     lex::{Locatable, LocationTrait},\r\n  |                      ^^^^^^^^^^^^^\r\n\r\nwarning: the item `Expr` is imported redundantly\r\n   --> src/analyze/stmt.rs:100:13\r\n    |\r\n5   |     hir::*,\r\n    |     ------ the item `Expr` is already imported here\r\n...\r\n100 |         use crate::data::hir::Expr;\r\n    |             ^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `HashMap`\r\n --> src/analyze/mod.rs:7:24\r\n  |\r\n7 | use std::collections::{HashMap, HashSet, VecDeque};\r\n  |                        ^^^^^^^\r\n\r\nwarning: unused import: `std::iter::Peekable`\r\n --> src/analyze/mod.rs:8:5\r\n  |\r\n8 | use std::iter::Peekable;\r\n  |     ^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `crate::arch`\r\n  --> src/analyze/mod.rs:12:5\r\n   |\r\n12 | use crate::arch;\r\n   |     ^^^^^^^^^^^\r\n\r\nwarning: unused imports: `ComparisonToken`, `self`\r\n  --> src/analyze/mod.rs:14:5\r\n   |\r\n14 |     self,\r\n   |     ^^^^\r\n...\r\n17 |     lex::{ComparisonToken, Keyword},\r\n   |           ^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `expr::literal`\r\n  --> src/analyze/mod.rs:22:5\r\n   |\r\n22 | use expr::literal;\r\n   |     ^^^^^^^^^^^^^\r\n\r\nwarning: the item `HashSet` is imported redundantly\r\n   --> src/analyze/mod.rs:226:13\r\n    |\r\n7   | use std::collections::{HashMap, HashSet, VecDeque};\r\n    |                                 ------- the item `HashSet` is already imported here\r\n...\r\n226 |         use std::collections::HashSet;\r\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `std::collections::HashSet`\r\n   --> src/analyze/mod.rs:226:13\r\n    |\r\n226 |         use std::collections::HashSet;\r\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `std::convert::TryFrom`\r\n   --> src/analyze/mod.rs:557:13\r\n    |\r\n557 |         use std::convert::TryFrom;\r\n    |             ^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: the item `HashSet` is imported redundantly\r\n   --> src/analyze/mod.rs:724:21\r\n    |\r\n7   | use std::collections::{HashMap, HashSet, VecDeque};\r\n    |                                 ------- the item `HashSet` is already imported here\r\n...\r\n724 |                 use std::collections::HashSet;\r\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: the item `StorageClass` is imported redundantly\r\n    --> src/analyze/mod.rs:1009:13\r\n     |\r\n18   |     *,\r\n     |     - the item `StorageClass` is already imported here\r\n...\r\n1009 |         use crate::data::StorageClass;\r\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `StructType`\r\n    --> src/analyze/mod.rs:1098:55\r\n     |\r\n1098 |     use crate::data::types::{ArrayType, FunctionType, StructType, Type::*};\r\n     |                                                       ^^^^^^^^^^\r\n\r\nwarning: unused import: `ExprType`\r\n --> src/data/error.rs:4:24\r\n  |\r\n4 | use super::hir::{Expr, ExprType};\r\n  |                        ^^^^^^^^\r\n\r\nwarning: unused import: `VecDeque`\r\n --> src/data/hir.rs:4:33\r\n  |\r\n4 | use std::collections::{HashMap, VecDeque};\r\n  |                                 ^^^^^^^^\r\n\r\nwarning: unused import: `super::error::CompileError`\r\n  --> src/data/hir.rs:10:5\r\n   |\r\n10 | use super::error::CompileError;\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `AssignmentToken`\r\n  --> src/data/hir.rs:11:18\r\n   |\r\n11 | use super::lex::{AssignmentToken, ComparisonToken, Keyword, Literal, Locatable};\r\n   |                  ^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `crate::Parser`\r\n   --> src/data/hir.rs:526:9\r\n    |\r\n526 |     use crate::Parser;\r\n    |         ^^^^^^^^^^^^^\r\n\r\nwarning: unused imports: `Recover`, `RecoverableResult`\r\n --> src/data/mod.rs:9:38\r\n  |\r\n9 | pub(crate) use error::{ErrorHandler, Recover, RecoverableResult};\r\n  |                                      ^^^^^^^  ^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `crate::data::lex::ComparisonToken::*`\r\n  --> src/fold.rs:93:13\r\n   |\r\n93 |         use crate::data::lex::ComparisonToken::*;\r\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `Token`\r\n --> src/ir/expr.rs:9:54\r\n  |\r\n9 |     lex::{AssignmentToken, ComparisonToken, Literal, Token},\r\n  |                                                      ^^^^^\r\n\r\nwarning: the item `StorageClass` is imported redundantly\r\n   --> src/ir/expr.rs:500:44\r\n    |\r\n6   | use crate::data::*;\r\n    |     -------------- the item `StorageClass` is already imported here\r\n...\r\n500 |         use crate::data::{hir::Qualifiers, StorageClass};\r\n    |                                            ^^^^^^^^^^^^\r\n\r\nwarning: unused import: `Metadata`\r\n  --> src/ir/static_init.rs:13:40\r\n   |\r\n13 |     hir::{Expr, ExprType, Initializer, Metadata, MetadataRef},\r\n   |                                        ^^^^^^^^\r\n\r\nwarning: unused imports: `Expr`, `MetadataRef`\r\n  --> src/ir/mod.rs:26:24\r\n   |\r\n26 |     hir::{Declaration, Expr, Initializer, Metadata, MetadataRef, Scope, Stmt},\r\n   |                        ^^^^                         ^^^^^^^^^^^\r\n\r\nerror[E0560]: struct `rcc::Opt` has no field named `filename`\r\n --> benches/examples.rs:9:9\r\n  |\r\n9 |         filename: \"<benchmark>\".into(),\r\n  |         ^^^^^^^^ `rcc::Opt` does not have this field\r\n  |\r\n  = note: available fields are: `debug_lex`, `debug_ast`, `debug_asm`, `no_link`, `max_errors`, `search_path`\r\n\r\nerror[E0061]: this function takes 4 parameters but 2 parameters were supplied\r\n  --> benches/examples.rs:14:29\r\n   |\r\n14 |         b.iter(|| black_box(compile(FIBONACCI, &opts)));\r\n   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^ expected 4 parameters\r\n\r\nerror[E0061]: this function takes 4 parameters but 2 parameters were supplied\r\n  --> benches/examples.rs:20:29\r\n   |\r\n20 |         b.iter(|| black_box(compile(FACTORIAL, &opts)));\r\n   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^ expected 4 parameters\r\n\r\nerror: aborting due to 3 previous errors\r\n\r\nSome errors have detailed explanations: E0061, E0560.\r\nFor more information about an error, try `rustc --explain E0061`.\r\nerror: could not compile `rcc`.\r\nwarning: build failed, waiting for other jobs to finish...\r\n      Fixing src/main.rs (1 fix)\r\nwarning: unused import: `std::fmt::Write`\r\n   --> src/data/ast.rs:476:13\r\n    |\r\n476 |         use std::fmt::Write;\r\n    |             ^^^^^^^^^^^^^^^\r\n\r\nwarning: variable does not need to be mutable\r\n   --> src/ir/expr.rs:469:13\r\n    |\r\n469 |         let mut value = value;\r\n    |             ----^^^^^\r\n    |             |\r\n    |             help: remove this `mut`\r\n    |\r\n    = note: `#[warn(unused_mut)]` on by default\r\n\r\nwarning: variable does not need to be mutable\r\n  --> src/ir/static_init.rs:24:20\r\n   |\r\n24 |         &mut self, mut symbol: MetadataRef, init: Option<Initializer>, location: Location,\r\n   |                    ----^^^^^^\r\n   |                    |\r\n   |                    help: remove this `mut`\r\n\r\nwarning: type alias is never used: `SemanticResult`\r\n  --> src/analyze/mod.rs:25:1\r\n   |\r\n25 | type SemanticResult<T> = Result<T, Locatable<SemanticError>>;\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: `#[warn(dead_code)]` on by default\r\n\r\nwarning: field is never read: `declared_compound_type`\r\n    --> src/analyze/mod.rs:1040:5\r\n     |\r\n1040 |     declared_compound_type: bool,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: function is never used: `assert_extern_decl_display`\r\n    --> src/analyze/mod.rs:1165:8\r\n     |\r\n1165 |     fn assert_extern_decl_display(s: &str) {\r\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: method is never used: `is_function`\r\n   --> src/data/ast.rs:276:5\r\n    |\r\n276 |     pub(crate) fn is_function(&self) -> bool {\r\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: method is never used: `compare`\r\n   --> src/ir/expr.rs:407:5\r\n    |\r\n407 | /     fn compare(\r\n408 | |         &mut self, left: Expr, right: Expr, token: ComparisonToken, builder: &mut FunctionBuilder,\r\n409 | |     ) -> IrResult {\r\n410 | |         let (left, right) = (\r\n...   |\r\n433 | |         })\r\n434 | |     }\r\n    | |_____^\r\n\r\nwarning: method is never used: `assignment`\r\n   --> src/ir/expr.rs:435:5\r\n    |\r\n435 | /     fn assignment(\r\n436 | |         &mut self, lval: Expr, rval: Expr, token: AssignmentToken, builder: &mut FunctionBuilder,\r\n437 | |     ) -> IrResult {\r\n438 | |         let ctype = lval.ctype.clone();\r\n...   |\r\n495 | |         Ok(value)\r\n496 | |     }\r\n    | |_____^\r\n\r\nwarning: unreachable `pub` item\r\n  --> src/analyze/stmt.rs:16:5\r\n   |\r\n16 |     pub fn parse_stmt(&mut self, stmt: ast::Stmt) -> Stmt {\r\n   |     ---^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |     |\r\n   |     help: consider restricting its visibility: `pub(crate)`\r\n   |\r\nnote: lint level defined here\r\n  --> src/lib.rs:4:9\r\n   |\r\n4  | #![warn(unreachable_pub)]\r\n   |         ^^^^^^^^^^^^^^^\r\n\r\nwarning: unreachable `pub` item\r\n   --> src/data/hir.rs:107:5\r\n    |\r\n107 |     pub fn get(&self, i: MetadataRef) -> Rc<Metadata> {\r\n    |     ---^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    |     |\r\n    |     help: consider restricting its visibility: `pub(crate)`\r\n\r\nwarning: unreachable `pub` item\r\n  --> src/lex/mod.rs:14:1\r\n   |\r\n14 | pub use cpp::PreProcessor;\r\n   | ---^^^^^^^^^^^^^^^^^^^^^^^\r\n   | |\r\n   | help: consider restricting its visibility: `pub(crate)`\r\n   |\r\n   = help: or consider exporting it for use by other crates\r\n\r\nwarning: unreachable `pub` item\r\n  --> src/parse/mod.rs:15:1\r\n   |\r\n15 | pub use crate::analyze::Analyzer;\r\n   | ---^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   | |\r\n   | help: consider restricting its visibility: `pub(crate)`\r\n   |\r\n   = help: or consider exporting it for use by other crates\r\n\r\nerror: build failed\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71047/timeline", "performed_via_github_app": null, "state_reason": "completed"}