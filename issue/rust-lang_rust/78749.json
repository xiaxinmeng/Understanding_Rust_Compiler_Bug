{"url": "https://api.github.com/repos/rust-lang/rust/issues/78749", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78749/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78749/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78749/events", "html_url": "https://github.com/rust-lang/rust/issues/78749", "id": 736400294, "node_id": "MDU6SXNzdWU3MzY0MDAyOTQ=", "number": 78749, "title": "Vec::sort violates pointer provenance rules according to Miri", "user": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-11-04T20:24:59Z", "updated_at": "2020-11-22T15:39:58Z", "closed_at": "2020-11-22T15:39:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried miri with -Zmiri-track-raw-pointers on this code:\r\n\r\n```rust\r\nfn main() {\r\n    let mut v = vec![1; 20];\r\n    v.push(0);\r\n    v.sort();\r\n}\r\n```\r\n\r\nI hoped to see everybody happy.\r\n\r\nInstead, this happened (including -Zmiri-track-alloc-id=2016):\r\n```\r\nnote: tracking was triggered\r\n   --> /home/stein/rust/library/alloc/src/alloc.rs:120:14\r\n    |\r\n120 |     unsafe { __rust_realloc(ptr, layout.size(), layout.align(), new_size) }\r\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ created allocation with id 2016\r\n    |\r\n    = note: inside `std::alloc::realloc` at /home/stein/rust/library/alloc/src/alloc.rs:120:14\r\n    = note: inside `std::alloc::Global::grow_impl` at /home/stein/rust/library/alloc/src/alloc.rs:196:31\r\n    = note: inside `<std::alloc::Global as std::alloc::AllocRef>::grow` at /home/stein/rust/library/alloc/src/alloc.rs:249:18\r\n    = note: inside `alloc::raw_vec::finish_grow::<std::alloc::Global>` at /home/stein/rust/library/alloc/src/raw_vec.rs:492:13\r\n    = note: inside `alloc::raw_vec::RawVec::<i32>::grow_amortized` at /home/stein/rust/library/alloc/src/raw_vec.rs:428:19\r\n    = note: inside `alloc::raw_vec::RawVec::<i32>::try_reserve` at /home/stein/rust/library/alloc/src/raw_vec.rs:317:13\r\n    = note: inside `alloc::raw_vec::RawVec::<i32>::reserve` at /home/stein/rust/library/alloc/src/raw_vec.rs:311:24\r\n    = note: inside `std::vec::Vec::<i32>::reserve` at /home/stein/rust/library/alloc/src/vec.rs:505:9\r\n    = note: inside `std::vec::Vec::<i32>::push` at /home/stein/rust/library/alloc/src/vec.rs:1210:13\r\nnote: inside `main` at src/main.rs:3:5\r\n   --> src/main.rs:3:5\r\n    |\r\n3   |     v.push(0);\r\n    |     ^^^^^^^^^\r\n    = note: inside `<fn() as std::ops::FnOnce<()>>::call_once - shim(fn())` at /home/stein/rust/library/core/src/ops/function.rs:227:5\r\n    = note: inside `std::sys_common::backtrace::__rust_begin_short_backtrace::<fn(), ()>` at /home/stein/rust/library/std/src/sys_common/backtrace.rs:125:18\r\n    = note: inside closure at /home/stein/rust/library/std/src/rt.rs:66:18\r\n    = note: inside `std::ops::function::impls::<impl std::ops::FnOnce<()> for &dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>::call_once` at /home/stein/rust/library/core/src/ops/function.rs:259:13\r\n    = note: inside `std::panicking::r#try::do_call::<&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe, i32>` at /home/stein/rust/library/std/src/panicking.rs:381:40\r\n    = note: inside `std::panicking::r#try::<i32, &dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>` at /home/stein/rust/library/std/src/panicking.rs:345:19\r\n    = note: inside `std::panic::catch_unwind::<&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe, i32>` at /home/stein/rust/library/std/src/panic.rs:396:14\r\n    = note: inside `std::rt::lang_start_internal` at /home/stein/rust/library/std/src/rt.rs:51:25\r\n    = note: inside `std::rt::lang_start::<()>` at /home/stein/rust/library/std/src/rt.rs:65:5\r\n\r\nerror: Undefined Behavior: no item granting read access to tag <5348> at alloc2016+0x4c found in borrow stack.\r\n    --> /home/stein/rust/library/core/src/intrinsics.rs:1860:14\r\n     |\r\n1860 |     unsafe { copy_nonoverlapping(src, dst, count) }\r\n     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no item granting read access to tag <5348> at alloc2016+0x4c found in borrow stack.\r\n     |\r\n     = help: this indicates a potential bug in the program: it performed an invalid operation, but the rules it violated are still experimental\r\n     = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\r\n\r\n     = note: inside `std::intrinsics::copy_nonoverlapping::<i32>` at /home/stein/rust/library/core/src/intrinsics.rs:1860:14\r\n     = note: inside `std::ptr::swap::<i32>` at /home/stein/rust/library/core/src/ptr/mod.rs:382:9\r\n     = note: inside `core::slice::<impl [i32]>::reverse` at /home/stein/rust/library/core/src/slice/mod.rs:659:17\r\n     = note: inside `std::slice::merge_sort::<i32, [closure@std::slice::<impl [i32]>::sort::{closure#0}]>` at /home/stein/rust/library/alloc/src/slice.rs:996:21\r\n     = note: inside `std::slice::<impl [i32]>::sort` at /home/stein/rust/library/alloc/src/slice.rs:200:9\r\nnote: inside `main` at src/main.rs:4:5\r\n    --> src/main.rs:4:5\r\n     |\r\n4    |     v.sort();\r\n     |     ^^^^^^^^\r\n     = note: inside `<fn() as std::ops::FnOnce<()>>::call_once - shim(fn())` at /home/stein/rust/library/core/src/ops/function.rs:227:5\r\n     = note: inside `std::sys_common::backtrace::__rust_begin_short_backtrace::<fn(), ()>` at /home/stein/rust/library/std/src/sys_common/backtrace.rs:125:18\r\n     = note: inside closure at /home/stein/rust/library/std/src/rt.rs:66:18\r\n     = note: inside `std::ops::function::impls::<impl std::ops::FnOnce<()> for &dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>::call_once` at /home/stein/rust/library/core/src/ops/function.rs:259:13\r\n     = note: inside `std::panicking::r#try::do_call::<&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe, i32>` at /home/stein/rust/library/std/src/panicking.rs:381:40\r\n     = note: inside `std::panicking::r#try::<i32, &dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>` at /home/stein/rust/library/std/src/panicking.rs:345:19\r\n     = note: inside `std::panic::catch_unwind::<&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe, i32>` at /home/stein/rust/library/std/src/panic.rs:396:14\r\n     = note: inside `std::rt::lang_start_internal` at /home/stein/rust/library/std/src/rt.rs:51:25\r\n     = note: inside `std::rt::lang_start::<()>` at /home/stein/rust/library/std/src/rt.rs:65:5\r\n\r\nerror: aborting due to previous error\r\n ```\r\n\r\n### Meta\r\n\r\n- miri is from rustup's nightly 2020-11-02. \r\n- lib is today's rust master 56293097f7f877f1350a6cd00f79d03132f16515 (and earlier)", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78749/timeline", "performed_via_github_app": null, "state_reason": "completed"}