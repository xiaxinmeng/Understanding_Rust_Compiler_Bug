{"url": "https://api.github.com/repos/rust-lang/rust/issues/33242", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/33242/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/33242/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/33242/events", "html_url": "https://github.com/rust-lang/rust/issues/33242", "id": 151418643, "node_id": "MDU6SXNzdWUxNTE0MTg2NDM=", "number": 33242, "title": "Tracking issue for unsized types within tuples", "user": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-27T15:41:24Z", "updated_at": "2016-09-01T18:56:08Z", "closed_at": "2016-09-01T18:56:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is the **summary issue** for the `UNSIZED_IN_TUPLE`\nfuture-compatibility warning and other related errors. The goal of\nthis page is describe why this change was made and how you can fix\ncode that is affected by it. It also provides a place to ask questions\nor register a complaint if you feel the change should not be made. For\nmore information on the policy around future-compatibility warnings,\nsee our [breaking change policy guidelines](https://github.com/rust-lang/rfcs/pull/1589).\n#### What is the warning for?\n\nAmong other things, Rust's [WF](https://github.com/rust-lang/rfcs/blob/master/text/1214-projections-lifetimes-and-wf.md) rules guarantee that every type in a legal program is representable. For ADTs, this means that the offsets to every field in the ADT must be known, which requires for every field but the last to be `Sized`.\n\nBecause tuples are just anonymous ADTs, this requirement also holds for them. However, that requirement was missing from [RFC 1214](https://github.com/rust-lang/rfcs/pull/1214) and the original implementation. This error was found during the work for PR #33138, and this deficiency is to be fixed in rustc 1.10.\n\nAs these ill-formed tuples result in an ICE when used, this affects user code mostly in trait declarations. An example from the standard library is the (unstable) trait `core::num::bignum::FullOps`:\n\n``` Rust\n/// Arithmetic operations required by bignums.\npub trait FullOps {\n    /// Returns `(carry', v')` such that `carry' * 2^W + v' = self + other + carry`,\n    /// where `W` is the number of bits in `Self`.\n    fn full_add(self, other: Self, carry: bool) -> (bool /*carry*/, Self);\n\n    /// Returns `(carry', v')` such that `carry' * 2^W + v' = self * other + carry`,\n    /// where `W` is the number of bits in `Self`.\n    fn full_mul(self, other: Self, carry: Self) -> (Self /*carry*/, Self);\n\n    /// Returns `(carry', v')` such that `carry' * 2^W + v' = self * other + other2 + carry`,\n    /// where `W` is the number of bits in `Self`.\n    fn full_mul_add(self, other: Self, other2: Self, carry: Self) -> (Self /*carry*/, Self);\n\n    /// Returns `(quo, rem)` such that `borrow * 2^W + self = quo * other + rem`\n    /// and `0 <= rem < other`, where `W` is the number of bits in `Self`.\n    fn full_div_rem(self, other: Self, borrow: Self) -> (Self /*quotient*/, Self /*remainder*/);\n}\n```\n\nHere the function `full_mul` returns a `(Self, Self)` tuple, which is only well-formed when the `Self`-type is `Sized` - for that and other reasons, the trait only makes sense when `Self` is `Sized`. The solution in this case and most others is to add the missing `Sized` supertrait.\n\nNote: at this moment, due to issue #33241, the old `trans` code crashes when translating code that uses unsized tuples even if only the _last field_ is unsized. This should be fixed for MIR trans and should not imply in any way that these tuples are ill-formed.\n#### When will this warning become a hard error?\n\nAt the beginning of each 6-week release cycle, the Rust compiler team\nwill review the set of outstanding future compatibility warnings and\nnominate some of them for **Final Comment Period**. Toward the end of\nthe cycle, we will review any comments and make a final determination\nwhether to convert the warning into a hard error or remove it\nentirely.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/33242/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/33242/timeline", "performed_via_github_app": null, "state_reason": "completed"}