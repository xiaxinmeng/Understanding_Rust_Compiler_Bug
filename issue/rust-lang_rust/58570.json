{"url": "https://api.github.com/repos/rust-lang/rust/issues/58570", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58570/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58570/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58570/events", "html_url": "https://github.com/rust-lang/rust/issues/58570", "id": 411785009, "node_id": "MDU6SXNzdWU0MTE3ODUwMDk=", "number": 58570, "title": "Box::new() doesn't optimize out stack usage", "user": {"login": "upsuper", "id": 333750, "node_id": "MDQ6VXNlcjMzMzc1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/333750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/upsuper", "html_url": "https://github.com/upsuper", "followers_url": "https://api.github.com/users/upsuper/followers", "following_url": "https://api.github.com/users/upsuper/following{/other_user}", "gists_url": "https://api.github.com/users/upsuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/upsuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/upsuper/subscriptions", "organizations_url": "https://api.github.com/users/upsuper/orgs", "repos_url": "https://api.github.com/users/upsuper/repos", "events_url": "https://api.github.com/users/upsuper/events{/privacy}", "received_events_url": "https://api.github.com/users/upsuper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-19T07:37:29Z", "updated_at": "2019-02-19T13:37:48Z", "closed_at": "2019-02-19T13:37:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you feed the compiler with the following code:\r\n```rust\r\n#![feature(box_syntax)]\r\n\r\npub fn foo() -> Box<[i32; 1_000_000]> {\r\n    box [0; 1_000_000]\r\n}\r\n\r\npub fn bar() -> Box<[i32; 1_000_000]> {\r\n    Box::new([0; 1_000_000])\r\n}\r\n```\r\n\r\nThe compiler would output (from playground) in release mode:\r\n<details>\r\n\r\n```asm\r\nplayground::foo: # @playground::foo\r\n# %bb.0:\r\n\tpushq\t%rbx\r\n\tmovl\t$4000000, %edi          # imm = 0x3D0900\r\n\tmovl\t$4, %esi\r\n\tcallq\t*__rust_alloc@GOTPCREL(%rip)\r\n\ttestq\t%rax, %rax\r\n\tje\t.LBB0_1\r\n# %bb.2:\r\n\tmovq\t%rax, %rbx\r\n\tmovl\t$4000000, %edx          # imm = 0x3D0900\r\n\tmovq\t%rax, %rdi\r\n\txorl\t%esi, %esi\r\n\tcallq\t*memset@GOTPCREL(%rip)\r\n\tmovq\t%rbx, %rax\r\n\tpopq\t%rbx\r\n\tretq\r\n\r\n.LBB0_1:\r\n\tmovl\t$4000000, %edi          # imm = 0x3D0900\r\n\tmovl\t$4, %esi\r\n\tcallq\t*alloc::alloc::handle_alloc_error@GOTPCREL(%rip)\r\n\tud2\r\n                                        # -- End function\r\n\r\nplayground::bar: # @playground::bar\r\n# %bb.0:\r\n\tpushq\t%rbx\r\n\tmovl\t$4000000, %eax          # imm = 0x3D0900\r\n\tcallq\t__rust_probestack\r\n\tsubq\t%rax, %rsp\r\n\tmovq\t%rsp, %rdi\r\n\tmovl\t$4000000, %edx          # imm = 0x3D0900\r\n\txorl\t%esi, %esi\r\n\tcallq\t*memset@GOTPCREL(%rip)\r\n\tmovl\t$4000000, %edi          # imm = 0x3D0900\r\n\tmovl\t$4, %esi\r\n\tcallq\t*__rust_alloc@GOTPCREL(%rip)\r\n\ttestq\t%rax, %rax\r\n\tje\t.LBB1_1\r\n# %bb.2:\r\n\tmovq\t%rax, %rbx\r\n\tmovq\t%rsp, %rsi\r\n\tmovl\t$4000000, %edx          # imm = 0x3D0900\r\n\tmovq\t%rax, %rdi\r\n\tcallq\t*memcpy@GOTPCREL(%rip)\r\n\tmovq\t%rbx, %rax\r\n\taddq\t$4000000, %rsp          # imm = 0x3D0900\r\n\tpopq\t%rbx\r\n\tretq\r\n\r\n.LBB1_1:\r\n\tmovl\t$4000000, %edi          # imm = 0x3D0900\r\n\tmovl\t$4, %esi\r\n\tcallq\t*alloc::alloc::handle_alloc_error@GOTPCREL(%rip)\r\n\tud2\r\n                                        # -- End function\r\n```\r\n\r\n</details>\r\n\r\n----\r\n\r\nIt can be seen clearly that `foo` does the allocation first and then runs `memset`, while `bar` clearly runs the `memset` before allocation, and it then `memcpy` the content into the box.\r\n\r\nThis is not very optimal. Users should be able to expect `Box::new()` to have no stack allocation.\r\n\r\nIt seems that `Box::new()` is implemented via `box`-syntax, and it even has `#[inline(always)]`, so they shouldn't really have any difference here...", "closed_by": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58570/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58570/timeline", "performed_via_github_app": null, "state_reason": "completed"}