{"url": "https://api.github.com/repos/rust-lang/rust/issues/72002", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72002/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72002/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72002/events", "html_url": "https://github.com/rust-lang/rust/issues/72002", "id": 614448268, "node_id": "MDU6SXNzdWU2MTQ0NDgyNjg=", "number": 72002, "title": "Index chosen over IndexMut when coercing index type", "user": {"login": "ramosbugs", "id": 8505766, "node_id": "MDQ6VXNlcjg1MDU3NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/8505766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ramosbugs", "html_url": "https://github.com/ramosbugs", "followers_url": "https://api.github.com/users/ramosbugs/followers", "following_url": "https://api.github.com/users/ramosbugs/following{/other_user}", "gists_url": "https://api.github.com/users/ramosbugs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ramosbugs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ramosbugs/subscriptions", "organizations_url": "https://api.github.com/users/ramosbugs/orgs", "repos_url": "https://api.github.com/users/ramosbugs/repos", "events_url": "https://api.github.com/users/ramosbugs/events{/privacy}", "received_events_url": "https://api.github.com/users/ramosbugs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-08T01:52:37Z", "updated_at": "2020-05-19T15:12:08Z", "closed_at": "2020-05-19T15:12:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "We've run into an issue where we have a type that implements both `Index<&str>` and `IndexMut<&str>`. Passing an index value of `&String` causes rustc to choose `Index` instead of `IndexMut`, even if a mutable reference is required. If we first call `String::as_str` and use that as the index, `IndexMut` is chosen, as expected.\r\n\r\nExample repro by @idubrov (see https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=9f0e5d703465d4b87218cac8b1eea608):\r\n\r\n```rust\r\nstruct Indexable;\r\n\r\nimpl Indexable {\r\n    fn boo(&mut self) {\r\n    }\r\n}\r\n\r\nimpl std::ops::Index<&str> for Indexable {\r\n    type Output = Indexable;\r\n    \r\n    fn index(&self, field: &str) -> &Indexable {\r\n        self\r\n    }\r\n}\r\n\r\nimpl std::ops::IndexMut<&str> for Indexable {\r\n    fn index_mut(&mut self, field: &str) -> &mut Indexable {\r\n        self\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let mut v = Indexable;\r\n    let field = \"hello\".to_string();\r\n\r\n    // Works    \r\n    v[field.as_str()].boo();\r\n    \r\n    // Doesn't work    \r\n    v[&field].boo();\r\n}\r\n```\r\n\r\nI expected to see this happen: `v[&field]` should invoke `IndexMut` on `v` since `boo()` expects a mutable reference.\r\n\r\nInstead, this happened: `v[&field]` invoked `Index` and complained that `IndexMut` isn't implemented even though it is:\r\n```\r\nerror[E0596]: cannot borrow data in an index of `Indexable` as mutable\r\n  --> src/main.rs:30:5\r\n   |\r\n30 |     v[&field].boo();\r\n   |     ^^^^^^^^^ cannot borrow as mutable\r\n   |\r\n   = help: trait `IndexMut` is required to modify indexed content, but it is not implemented for `Indexable`\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\nThis is reproducible on stable Rust 1.41.0 and 1.43.0 and `1.45.0-nightly (2020-05-06 1836e3b42a5b2f37fd79)`.\r\n\r\ncc: @estebank", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72002/timeline", "performed_via_github_app": null, "state_reason": "completed"}