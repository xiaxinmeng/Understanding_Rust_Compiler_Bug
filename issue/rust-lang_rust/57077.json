{"url": "https://api.github.com/repos/rust-lang/rust/issues/57077", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57077/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57077/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57077/events", "html_url": "https://github.com/rust-lang/rust/issues/57077", "id": 393741303, "node_id": "MDU6SXNzdWUzOTM3NDEzMDM=", "number": 57077, "title": "Unnecessary memcpy when returning a struct", "user": {"login": "MSxDOS", "id": 15524350, "node_id": "MDQ6VXNlcjE1NTI0MzUw", "avatar_url": "https://avatars.githubusercontent.com/u/15524350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSxDOS", "html_url": "https://github.com/MSxDOS", "followers_url": "https://api.github.com/users/MSxDOS/followers", "following_url": "https://api.github.com/users/MSxDOS/following{/other_user}", "gists_url": "https://api.github.com/users/MSxDOS/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSxDOS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSxDOS/subscriptions", "organizations_url": "https://api.github.com/users/MSxDOS/orgs", "repos_url": "https://api.github.com/users/MSxDOS/repos", "events_url": "https://api.github.com/users/MSxDOS/events{/privacy}", "received_events_url": "https://api.github.com/users/MSxDOS/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}, {"id": 2019962432, "node_id": "MDU6TGFiZWwyMDE5OTYyNDMy", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt-inlining", "name": "A-mir-opt-inlining", "color": "f7e101", "default": false, "description": "Area: MIR inlining"}, {"id": 2061474479, "node_id": "MDU6TGFiZWwyMDYxNDc0NDc5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt-nrvo", "name": "A-mir-opt-nrvo", "color": "f7e101", "default": false, "description": "Fixed by NRVO"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-12-23T11:06:42Z", "updated_at": "2021-03-13T11:15:53Z", "closed_at": "2021-03-13T11:15:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Returning a newly created struct from a function causes an unnecessary memcpy even if the function is inlined:\r\n\r\n```Rust\r\nuse std::mem::uninitialized;\r\n\r\n#[repr(C)]\r\npub struct SomeStruct(u64, u32, u16, u8, usize, u64, u64, u32, usize, u16, u32, usize, isize);\r\n\r\nextern {\r\n    pub fn SomeExternFun(val: *mut SomeStruct);\r\n}\r\n\r\n#[inline(always)]\r\nunsafe fn ret_val() -> SomeStruct {\r\n    let mut val: SomeStruct = uninitialized();\r\n    SomeExternFun(&mut val);\r\n    val\r\n}\r\n\r\n#[inline(always)]\r\nunsafe fn by_ref(val: &mut SomeStruct) {\r\n    SomeExternFun(val);\r\n}\r\n\r\npub unsafe fn call_ret_val() {\r\n     let val = ret_val();\r\n     println!(\"{}\", val.0);\r\n}\r\n\r\npub unsafe fn call_by_ref() {\r\n    let mut val: SomeStruct = uninitialized();\r\n    by_ref(&mut val);\r\n    println!(\"{}\", val.0);\r\n}\r\n```\r\n\r\n```asm\r\nplayground::call_ret_val: # @playground::call_ret_val\r\n# %bb.0:\r\n\tsub\trsp, 184\r\n\tlea\trdi, [rsp + 16]\r\n\tcall\tqword ptr [rip + SomeExternFun@GOTPCREL]\r\n\tmovups\txmm0, xmmword ptr [rsp + 80]\r\n\tmovaps\txmmword ptr [rsp + 160], xmm0\r\n\tmovups\txmm0, xmmword ptr [rsp + 16]\r\n\tmovups\txmm1, xmmword ptr [rsp + 32]\r\n\tmovups\txmm2, xmmword ptr [rsp + 48]\r\n\tmovups\txmm3, xmmword ptr [rsp + 64]\r\n\tmovaps\txmmword ptr [rsp + 144], xmm3\r\n\tmovaps\txmmword ptr [rsp + 128], xmm2\r\n\tmovaps\txmmword ptr [rsp + 112], xmm1\r\n\tmovaps\txmmword ptr [rsp + 96], xmm0\r\n\tlea\trax, [rsp + 96]\r\n\tmov\tqword ptr [rsp], rax\r\n\tmov\trax, qword ptr [rip + core::fmt::num::<impl core::fmt::Display for u64>::fmt@GOTPCREL]\r\n\tmov\tqword ptr [rsp + 8], rax\r\n\tlea\trax, [rip + .Lanon.865785a9e3ffc8ff7f56f0b35003ddee.2]\r\n\tmov\tqword ptr [rsp + 16], rax\r\n\tmov\tqword ptr [rsp + 24], 2\r\n\tlea\trax, [rip + .Lanon.865785a9e3ffc8ff7f56f0b35003ddee.3]\r\n\tmov\tqword ptr [rsp + 32], rax\r\n\tmov\tqword ptr [rsp + 40], 1\r\n\tmov\trax, rsp\r\n\tmov\tqword ptr [rsp + 48], rax\r\n\tmov\tqword ptr [rsp + 56], 1\r\n\tlea\trdi, [rsp + 16]\r\n\tcall\tqword ptr [rip + std::io::stdio::_print@GOTPCREL]\r\n\tadd\trsp, 184\r\n\tret\r\n                                        # -- End function\r\n\r\nplayground::call_by_ref: # @playground::call_by_ref\r\n# %bb.0:\r\n\tpush\trbx\r\n\tsub\trsp, 144\r\n\tlea\trbx, [rsp + 64]\r\n\tmov\trdi, rbx\r\n\tcall\tqword ptr [rip + SomeExternFun@GOTPCREL]\r\n\tmov\tqword ptr [rsp], rbx\r\n\tmov\trax, qword ptr [rip + core::fmt::num::<impl core::fmt::Display for u64>::fmt@GOTPCREL]\r\n\tmov\tqword ptr [rsp + 8], rax\r\n\tlea\trax, [rip + .Lanon.865785a9e3ffc8ff7f56f0b35003ddee.2]\r\n\tmov\tqword ptr [rsp + 16], rax\r\n\tmov\tqword ptr [rsp + 24], 2\r\n\tlea\trax, [rip + .Lanon.865785a9e3ffc8ff7f56f0b35003ddee.3]\r\n\tmov\tqword ptr [rsp + 32], rax\r\n\tmov\tqword ptr [rsp + 40], 1\r\n\tmov\trax, rsp\r\n\tmov\tqword ptr [rsp + 48], rax\r\n\tmov\tqword ptr [rsp + 56], 1\r\n\tlea\trdi, [rsp + 16]\r\n\tcall\tqword ptr [rip + std::io::stdio::_print@GOTPCREL]\r\n\tadd\trsp, 144\r\n\tpop\trbx\r\n\tret\r\n                                        # -- End function\r\n```\r\n[Playground](https://play.rust-lang.org/?version=nightly&mode=release&edition=2018&gist=ec9e61d9ad0658d77ace97604012d8df)", "closed_by": {"login": "MSxDOS", "id": 15524350, "node_id": "MDQ6VXNlcjE1NTI0MzUw", "avatar_url": "https://avatars.githubusercontent.com/u/15524350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSxDOS", "html_url": "https://github.com/MSxDOS", "followers_url": "https://api.github.com/users/MSxDOS/followers", "following_url": "https://api.github.com/users/MSxDOS/following{/other_user}", "gists_url": "https://api.github.com/users/MSxDOS/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSxDOS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSxDOS/subscriptions", "organizations_url": "https://api.github.com/users/MSxDOS/orgs", "repos_url": "https://api.github.com/users/MSxDOS/repos", "events_url": "https://api.github.com/users/MSxDOS/events{/privacy}", "received_events_url": "https://api.github.com/users/MSxDOS/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57077/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57077/timeline", "performed_via_github_app": null, "state_reason": "completed"}