{"url": "https://api.github.com/repos/rust-lang/rust/issues/79408", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79408/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79408/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79408/events", "html_url": "https://github.com/rust-lang/rust/issues/79408", "id": 750675820, "node_id": "MDU6SXNzdWU3NTA2NzU4MjA=", "number": 79408, "title": "Rustc and XCFramework won't work", "user": {"login": "ubamrein", "id": 47777208, "node_id": "MDQ6VXNlcjQ3Nzc3MjA4", "avatar_url": "https://avatars.githubusercontent.com/u/47777208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubamrein", "html_url": "https://github.com/ubamrein", "followers_url": "https://api.github.com/users/ubamrein/followers", "following_url": "https://api.github.com/users/ubamrein/following{/other_user}", "gists_url": "https://api.github.com/users/ubamrein/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubamrein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubamrein/subscriptions", "organizations_url": "https://api.github.com/users/ubamrein/orgs", "repos_url": "https://api.github.com/users/ubamrein/repos", "events_url": "https://api.github.com/users/ubamrein/events{/privacy}", "received_events_url": "https://api.github.com/users/ubamrein/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 38105576, "node_id": "MDU6TGFiZWwzODEwNTU3Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-ios", "name": "O-ios", "color": "6e6ec0", "default": false, "description": "Operating system: iOS"}, {"id": 167285428, "node_id": "MDU6TGFiZWwxNjcyODU0Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-cross", "name": "A-cross", "color": "f7e101", "default": false, "description": "Area: Cross compilation"}, {"id": 632453790, "node_id": "MDU6TGFiZWw2MzI0NTM3OTA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-target-specs", "name": "A-target-specs", "color": "f7e101", "default": false, "description": "Area: compile-target specifications"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-11-25T10:05:10Z", "updated_at": "2021-11-13T23:34:43Z", "closed_at": "2021-08-24T14:55:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi\r\n\r\nWe are currently trying to build a xcframework, which includes a rust static library as a binary target. When we build the xcframework with `xcodebuild  -create-xcframework -library target/aarch64-apple-ios/release/libxcframework_test.a -headers test.h -output test.xcframework` we get `The CodingKeys(stringValue: \"SupportedPlatform\", intValue: nil) is empty in library -arm64.`. \r\n\r\nTo reproduce the failure just build a static lib with a function in it e.g.:\r\n```rust\r\n#[no_mangle]\r\npub unsafe extern \"C\" fn test() {\r\n}\r\n``` \r\n\r\n` cargo build --release --target aarch64-apple-ios`\r\n\r\nInterestingly enough, the binary works when statically linked during the usual build process in XCode (so the code itself seems to be correct).\r\n\r\nFurther, for the darwin binary (target macos) the xcframework creation process succeeds.\r\n\r\nI think with rustc 1.43 the xcframework also worked for the ios platform, but other than that we have no idea what is wrong.\r\n\r\nIt is though certainly somehow linked to rust, as C/C++ libraries work (e.g. libsodium) with exact the same command/folder-structure.\r\n\r\n[EDIT] We found that LC_VERSION_MIN_* is emitted instead of LC_BUILD_VERSION in the load commands of the MachO binary. Apparently this is the newly used command to specify the platform.\r\n\r\n> As of iOS 12 (and I\u2019m not sure which macOS version), the loader looks for LC_BUILD_VERSION instead of LC_VERSION_MIN*.\r\n[1](https://jetforme.org/2020/02/lc_version_min/)\r\n\r\nAs a comparison: \r\nXCODE:\r\n> Load command 1\r\n       cmd LC_BUILD_VERSION\r\n   cmdsize 24\r\n  platform ios\r\n       sdk 14.2\r\n     minos 14.2\r\n    ntools 0\r\n\r\nRUST:\r\n> Load command 1\r\n      cmd LC_VERSION_MIN_IPHONEOS\r\n  cmdsize 16\r\n  version 7.0\r\n      sdk 13.7\r\n\r\n[EDIT 2]\r\nGetting closer found  https://github.com/rust-lang/rust/issues/29664 and made a new target, where I set  the llvm-target to the one with the correct version like this:\r\n\r\n```json\r\n{\r\n  \"abi-return-struct-as-int\": true,\r\n  \"arch\": \"aarch64\",\r\n  \"archive-format\": \"darwin\",\r\n  \"bitcode-llvm-cmdline\": \"-triple\\u0000arm64-apple-ios11.0.0\\u0000-emit-obj\\u0000-disable-llvm-passes\\u0000-target-abi\\u0000darwinpcs\\u0000-Os\\u0000\",\r\n  \"cpu\": \"apple-a7\",\r\n  \"data-layout\": \"e-m:o-i64:64-i128:128-n32:64-S128\",\r\n  \"dll-suffix\": \".dylib\",\r\n  \"dwarf-version\": 2,\r\n  \"eh-frame-header\": false,\r\n  \"eliminate-frame-pointer\": false,\r\n  \"emit-debug-gdb-scripts\": false,\r\n  \"executables\": true,\r\n  \"features\": \"+neon,+fp-armv8,+apple-a7\",\r\n  \"forces-embed-bitcode\": true,\r\n  \"function-sections\": false,\r\n  \"has-rpath\": true,\r\n  \"is-builtin\": true,\r\n  \"is-like-osx\": true,\r\n  \"link-env\": [\r\n    \"ZERO_AR_DATE=1\"\r\n  ],\r\n  \"link-env-remove\": [\r\n    \"MACOSX_DEPLOYMENT_TARGET\"\r\n  ],\r\n  \"llvm-target\": \"arm64-apple-ios9.0\",\r\n  \"max-atomic-width\": 128,\r\n  \"os\": \"ios\",\r\n  \"target-family\": \"unix\",\r\n  \"target-pointer-width\": \"64\",\r\n  \"unsupported-abis\": [\r\n    \"stdcall\",\r\n    \"fastcall\",\r\n    \"vectorcall\",\r\n    \"thiscall\",\r\n    \"win64\",\r\n    \"sysv64\"\r\n  ],\r\n  \"vendor\": \"apple\"\r\n}\r\n```\r\n\r\nNow I can create an xcframework again!", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79408/reactions", "total_count": 2, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79408/timeline", "performed_via_github_app": null, "state_reason": "completed"}