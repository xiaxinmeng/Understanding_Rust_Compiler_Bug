{"url": "https://api.github.com/repos/rust-lang/rust/issues/37871", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/37871/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/37871/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/37871/events", "html_url": "https://github.com/rust-lang/rust/issues/37871", "id": 190479678, "node_id": "MDU6SXNzdWUxOTA0Nzk2Nzg=", "number": 37871, "title": "compiletest: limitation of compile-fail error message collection", "user": {"login": "xen0n", "id": 1175567, "node_id": "MDQ6VXNlcjExNzU1Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/1175567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xen0n", "html_url": "https://github.com/xen0n", "followers_url": "https://api.github.com/users/xen0n/followers", "following_url": "https://api.github.com/users/xen0n/following{/other_user}", "gists_url": "https://api.github.com/users/xen0n/gists{/gist_id}", "starred_url": "https://api.github.com/users/xen0n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xen0n/subscriptions", "organizations_url": "https://api.github.com/users/xen0n/orgs", "repos_url": "https://api.github.com/users/xen0n/repos", "events_url": "https://api.github.com/users/xen0n/events{/privacy}", "received_events_url": "https://api.github.com/users/xen0n/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 120005, "node_id": "MDU6TGFiZWwxMjAwMDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-testsuite", "name": "A-testsuite", "color": "f7e101", "default": false, "description": "Area: The testsuite used to check the correctness of rustc"}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-19T06:16:27Z", "updated_at": "2017-07-26T17:24:08Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Apparently the `compiletest` harness couldn't cope with multiple `#[cfg]`'d items expected to error. During fixing of the testsuite on MIPS I got very frustrated over some of the cases, such as this one:\r\n\r\n```rust\r\n// irrelevant parts omitted\r\n#[cfg(any(target_arch = \"mips\",\r\n          target_arch = \"mips64\"))]\r\nasm!(\"move $0, $1\" : \"=r\"(x) : \"=r\"(5));\r\n#[cfg(any(target_arch = \"x86\",\r\n          target_arch = \"x86_64\",\r\n          target_arch = \"arm\",\r\n          target_arch = \"aarch64\"))]\r\nasm!(\"mov $1, $0\" : \"=r\"(x) : \"=r\"(5));\r\n//~^ ERROR operand constraint contains '='\r\n#[cfg(any(target_arch = \"mips\",\r\n          target_arch = \"mips64\"))]\r\nasm!(\"move $0, $1\" : \"=r\"(x) : \"=r\"(5));\r\n#[cfg(any(target_arch = \"x86\",\r\n          target_arch = \"x86_64\",\r\n          target_arch = \"arm\",\r\n          target_arch = \"aarch64\"))]\r\nasm!(\"mov $1, $0\" : \"=r\"(y) : \"+r\"(5));\r\n//~^ ERROR operand constraint contains '+'\r\n```\r\n\r\n```\r\n---- [compile-fail] compile-fail/asm-in-bad-modifier.rs stdout ----\r\n\r\nerror: /opt/store/src/rust/src/test/compile-fail/asm-in-bad-modifier.rs:23: unexpected \"error\": '23:40: 23:44: input operand constraint contains '=''\r\n\r\nerror: /opt/store/src/rust/src/test/compile-fail/asm-in-bad-modifier.rs:32: unexpected \"error\": '32:40: 32:44: input operand constraint contains '=''\r\n\r\nerror: /opt/store/src/rust/src/test/compile-fail/asm-in-bad-modifier.rs:28: expected error not found: operand constraint contains '='\r\n\r\nerror: /opt/store/src/rust/src/test/compile-fail/asm-in-bad-modifier.rs:37: expected error not found: operand constraint contains '+'\r\n\r\nerror: 2 unexpected errors found, 2 expected errors not found\r\n```\r\n\r\nIf I copy and `cfg` the whole function, the error is even more confusing:\r\n\r\n```rust\r\n#[cfg(any(target_arch = \"x86\",\r\n          target_arch = \"x86_64\",\r\n          target_arch = \"arm\",\r\n          target_arch = \"aarch64\"))]\r\npub fn main() {\r\n    let x: isize;\r\n    unsafe {\r\n        asm!(\"mov $1, $0\" : \"r\"(x) : \"r\"(5)); //~ ERROR output operand constraint lacks '='\r\n    }\r\n    foo(x);\r\n}\r\n\r\n#[cfg(any(target_arch = \"mips\",\r\n          target_arch = \"mips64\"))]\r\npub fn main() {\r\n    let x: isize;\r\n    unsafe {\r\n        asm!(\"move $0, $1\" : \"r\"(x) : \"r\"(5)); //~ ERROR output operand constraint lacks '='\r\n    }\r\n    foo(x);\r\n}\r\n```\r\n\r\n```\r\nerror: /opt/store/src/rust/src/test/compile-fail/asm-out-no-modifier.rs:24: expected error not found: output operand constraint lacks '='\r\n\r\nerror: 0 unexpected errors found, 1 expected errors not found\r\n```\r\n\r\nApart from duplicating the whole test case file, is there any way to fix it in `compiletest` instead? However upon looking at the \"parsing\" code used I realize it's a huge undertake as the proper solution at least needs a proper AST to begin with...", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/37871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/37871/timeline", "performed_via_github_app": null, "state_reason": null}