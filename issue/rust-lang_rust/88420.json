{"url": "https://api.github.com/repos/rust-lang/rust/issues/88420", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88420/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88420/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88420/events", "html_url": "https://github.com/rust-lang/rust/issues/88420", "id": 981792421, "node_id": "MDU6SXNzdWU5ODE3OTI0MjE=", "number": 88420, "title": "Incremental compilation ICE: Found unstable fingerprints for predicates_of(dicom_core[4803]::value::DicomValueType)", "user": {"login": "Enet4", "id": 4738426, "node_id": "MDQ6VXNlcjQ3Mzg0MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4738426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Enet4", "html_url": "https://github.com/Enet4", "followers_url": "https://api.github.com/users/Enet4/followers", "following_url": "https://api.github.com/users/Enet4/following{/other_user}", "gists_url": "https://api.github.com/users/Enet4/gists{/gist_id}", "starred_url": "https://api.github.com/users/Enet4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Enet4/subscriptions", "organizations_url": "https://api.github.com/users/Enet4/orgs", "repos_url": "https://api.github.com/users/Enet4/repos", "events_url": "https://api.github.com/users/Enet4/events{/privacy}", "received_events_url": "https://api.github.com/users/Enet4/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-08-28T09:49:59Z", "updated_at": "2023-05-01T10:16:54Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I triggered ICE through incremental compilation (tracker issue #84970) while working on [DICOM-rs](https://github.com/Enet4/dicom-rs). This could be a similar problem to #88318. Unlike what was reported in #84341, `predicates_of` was called on a trait in the same workspace.\r\n\r\n<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nI was unable to reproduce this a second time in a fresh working space. When the ICE occurred, I saved the state of the project in [this branch](https://github.com/Enet4/dicom-rs/tree/rustc_ice_bug/parser/encoder-update-text-codec). Then I tried to recall all the steps I had done since the previous revision, around this order:\r\n\r\n1. Deprecate `dicom_encoding::text::DynamicTextCodec`\r\n2. Deprecate `dicom_encoding::text::SpecificCharacterSet::codec`\r\n3. Add an `impl TextCodec for SpecificCharacterSet`, methods implemented by matching on self and picking the right text codec type.\r\n4. Add associated const `SpecificCharacterSet::GB18030 = SpecificCharacterSet::Gb18030`\r\n5. Rename the enum variant `GB18030` to `Gb18030`, update the name in the rest of the module\r\n6. Remove the associated const (I had changed my mind regarding its usefulness)\r\n7. Remove uses of `.codec()` in `dicom_encoding::text::tests`\r\n\r\nBut tracing these steps again did not trigger any ICE. Rust-analyzer was running, which suddenly started failing all checking requests. The ICE only occurs on `cargo check`.\r\n\r\n### Meta\r\n\r\nLatest stable. `cargo +beta check` yielded no ICE, but it could just be the consequence of checking the code from scratch.\r\n\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.54.0 (a178d0322 2021-07-26)\r\nbinary: rustc\r\ncommit-hash: a178d0322ce20e33eac124758e837cbd80a6f633\r\ncommit-date: 2021-07-26\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.54.0\r\nLLVM version: 12.0.1\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n    Checking dicom-parser v0.4.0 (/home/enet4/dev/dicom-rs/parser)\r\nwarning: use of deprecated associated function `dicom_encoding::text::SpecificCharacterSet::codec`: this value is a codec in itself\r\n   --> ul/src/pdu/reader.rs:129:10\r\n    |\r\n129 |         .codec()\r\n    |          ^^^^^\r\n    |\r\n    = note: `#[warn(deprecated)]` on by default\r\n\r\nwarning: 1 warning emitted\r\n\r\nwarning: use of deprecated type alias `dicom_encoding::text::DynamicTextCodec`: Use `SpecificCharacterSet` instead\r\n  --> parser/src/stateful/decode.rs:12:70\r\n   |\r\n12 |     validate_da, validate_dt, validate_tm, DefaultCharacterSetCodec, DynamicTextCodec,\r\n   |                                                                      ^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: `#[warn(deprecated)]` on by default\r\n\r\nwarning: use of deprecated type alias `dicom_encoding::text::DynamicTextCodec`: Use `SpecificCharacterSet` instead\r\n   --> parser/src/stateful/decode.rs:746:42\r\n    |\r\n746 | impl<S, D, BD> StatefulDecoder<D, S, BD, DynamicTextCodec>\r\n    |                                          ^^^^^^^^^^^^^^^^\r\n\r\nwarning: use of deprecated type alias `dicom_encoding::text::DynamicTextCodec`: Use `SpecificCharacterSet` instead\r\n   --> parser/src/stateful/decode.rs:844:61\r\n    |\r\n844 | impl<D, S, BD> StatefulDecode for StatefulDecoder<D, S, BD, DynamicTextCodec>\r\n    |                                                             ^^^^^^^^^^^^^^^^\r\n\r\nwarning: use of deprecated type alias `dicom_encoding::text::DynamicTextCodec`: Use `SpecificCharacterSet` instead\r\n   --> parser/src/stateful/decode.rs:221:58\r\n    |\r\n221 | pub struct StatefulDecoder<D, S, BD = BasicDecoder, TC = DynamicTextCodec> {\r\n    |                                                          ^^^^^^^^^^^^^^^^\r\n\r\nerror: internal compiler error: encountered incremental compilation error with predicates_of(dicom_core[4803]::value::DicomValueType)\r\n  |\r\n  = help: This is a known issue with the compiler. Run `cargo clean -p dicom_parser` or `cargo clean` to allow your project to compile\r\n  = note: Please follow the instructions below to create a bug report with the provided information\r\n  = note: See <https://github.com/rust-lang/rust/issues/84970> for more information\r\n\r\nthread 'rustc' panicked at 'Found unstable fingerprints for predicates_of(dicom_core[4803]::value::DicomValueType): GenericPredicates { parent: None, predicates: [(Binder(TraitPredicate(<Self as dicom_core::header::HasLength>), []), /home/enet4/dev/dicom-rs/core/src/value/mod.rs:24:27: 24:36 (#0)), (Binder(TraitPredicate(<Self as dicom_core::value::DicomValueType>), []), /home/enet4/dev/dicom-rs/core/src/value/mod.rs:24:1: 35:2 (#0))] }', /rustc/a178d0322ce20e33eac124758e837cbd80a6f633/compiler/rustc_query_system/src/query/plumbing.rs:620:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.54.0 (a178d0322 2021-07-26) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [predicates_of] computing predicates of `dicom_core::value::DicomValueType`\r\n#1 [typeck] type-checking `dataset::<impl at parser/src/dataset/mod.rs:59:1: 66:2>::fmt`\r\nend of query stack\r\nerror: aborting due to previous error; 4 warnings emitted\r\n\r\nerror: could not compile `dicom-parser`\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Found unstable fingerprints for predicates_of(dicom_core[4803]::value::DicomValueType): GenericPredicates { parent: None, predicates: [(Binder(TraitPredicate(<Self as dicom_core::header::HasLength>), []), /home/enet4/dev/dicom-rs/core/src/value/mod.rs:24:27: 24:36 (#0)), (Binder(TraitPredicate(<Self as dicom_core::value::DicomValueType>), []), /home/enet4/dev/dicom-rs/core/src/value/mod.rs:24:1: 35:2 (#0))] }', /rustc/a178d0322ce20e33eac124758e837cbd80a6f633/compiler/rustc_query_system/src/query/plumbing.rs:620:9\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/a178d0322ce20e33eac124758e837cbd80a6f633/library/std/src/panicking.rs:515:5\r\n   1: std::panicking::begin_panic_fmt\r\n             at /rustc/a178d0322ce20e33eac124758e837cbd80a6f633/library/std/src/panicking.rs:457:5\r\n   2: rustc_query_system::query::plumbing::incremental_verify_ich\r\n   3: rustc_query_system::query::plumbing::load_from_disk_and_cache_in_memory\r\n   4: rustc_query_system::query::plumbing::get_query_impl\r\n   5: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::predicates_of\r\n   6: rustc_middle::ty::generics::GenericPredicates::instantiate_into\r\n   7: rustc_middle::ty::generics::GenericPredicates::instantiate\r\n   8: rustc_typeck::check::method::confirm::ConfirmContext::confirm\r\n   9: rustc_typeck::check::method::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::lookup_method\r\n  10: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  11: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  12: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  13: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  14: <smallvec::SmallVec<A> as core::iter::traits::collect::Extend<<A as smallvec::Array>::Item>>::extend\r\n  15: <T as rustc_middle::ty::context::InternIteratorElement<T,R>>::intern_with\r\n  16: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  17: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  18: rustc_typeck::check::_match::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::demand_scrutinee_type\r\n  19: rustc_typeck::check::_match::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_match\r\n  20: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  21: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  22: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  23: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  24: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  25: rustc_typeck::check::callee::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::confirm_builtin_call\r\n  26: rustc_typeck::check::callee::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n  27: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  28: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  29: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  30: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_method_argument_types\r\n  31: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  32: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  33: rustc_typeck::check::_match::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_match\r\n  34: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  35: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  36: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  37: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  38: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  39: rustc_typeck::check::check::check_fn\r\n  40: rustc_typeck::check::inherited::InheritedBuilder::enter\r\n  41: rustc_typeck::check::typeck\r\n  42: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  43: rustc_data_structures::stack::ensure_sufficient_stack\r\n  44: rustc_query_system::query::plumbing::force_query_with_job\r\n  45: rustc_query_system::query::plumbing::get_query_impl\r\n  46: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  47: rustc_middle::ty::<impl rustc_middle::ty::context::TyCtxt>::par_body_owners\r\n  48: rustc_typeck::check::typeck_item_bodies\r\n  49: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  50: rustc_data_structures::stack::ensure_sufficient_stack\r\n  51: rustc_query_system::query::plumbing::force_query_with_job\r\n  52: rustc_query_system::query::plumbing::get_query_impl\r\n  53: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck_item_bodies\r\n  54: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  55: rustc_typeck::check_crate\r\n  56: rustc_interface::passes::analysis\r\n  57: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  58: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  59: rustc_query_system::dep_graph::graph::DepGraph<K>::with_eval_always_task\r\n  60: rustc_data_structures::stack::ensure_sufficient_stack\r\n  61: rustc_query_system::query::plumbing::force_query_with_job\r\n  62: rustc_query_system::query::plumbing::get_query_impl\r\n  63: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  64: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  65: rustc_span::with_source_map\r\n  66: rustc_interface::interface::create_compiler_and_run\r\n  67: scoped_tls::ScopedKey<T>::set\r\n```\r\n</p>\r\n</details>\r\n\r\n<details><summary><strong>Backtrace from rust-analyzer</strong></summary>\r\n<p>\r\n\r\n```\r\nthread '<unnamed>' panicked at 'index out of bounds: the len is 1 but the index is 1', /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/chalk-ir-0.70.0/src/lib.rs:2752:10\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/a178d0322ce20e33eac124758e837cbd80a6f633/library/std/src/panicking.rs:515:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/a178d0322ce20e33eac124758e837cbd80a6f633/library/core/src/panicking.rs:92:14\r\n   2: core::panicking::panic_bounds_check\r\n             at /rustc/a178d0322ce20e33eac124758e837cbd80a6f633/library/core/src/panicking.rs:69:5\r\n   3: <&chalk_ir::SubstFolder<I,A> as chalk_ir::fold::Folder<I>>::fold_free_var_ty\r\n   4: <chalk_ir::Ty<I> as chalk_ir::fold::SuperFold<I>>::super_fold_with\r\n   5: <chalk_ir::Ty<I> as chalk_ir::fold::SuperFold<I>>::super_fold_with\r\n   6: hir_ty::infer::coerce::<impl hir_ty::infer::InferenceContext>::coerce_inner\r\n   7: hir_ty::infer::coerce::<impl hir_ty::infer::InferenceContext>::coerce\r\n   8: hir_ty::infer::expr::<impl hir_ty::infer::InferenceContext>::check_call_arguments\r\n   9: hir_ty::infer::expr::<impl hir_ty::infer::InferenceContext>::infer_method_call\r\n  10: hir_ty::infer::expr::<impl hir_ty::infer::InferenceContext>::infer_expr_inner\r\n  11: hir_ty::infer::expr::<impl hir_ty::infer::InferenceContext>::infer_expr\r\n  12: hir_ty::infer::expr::<impl hir_ty::infer::InferenceContext>::infer_method_call\r\n  13: hir_ty::infer::expr::<impl hir_ty::infer::InferenceContext>::infer_expr_inner\r\n  14: hir_ty::infer::expr::<impl hir_ty::infer::InferenceContext>::infer_expr_inner\r\n  15: hir_ty::infer::expr::<impl hir_ty::infer::InferenceContext>::infer_expr\r\n  16: hir_ty::infer::expr::<impl hir_ty::infer::InferenceContext>::infer_block\r\n  17: hir_ty::infer::expr::<impl hir_ty::infer::InferenceContext>::infer_expr_inner\r\n  18: hir_ty::infer::expr::<impl hir_ty::infer::InferenceContext>::infer_expr_coerce\r\n  19: hir_ty::infer::infer_query\r\n  20: salsa::runtime::Runtime::execute_query_implementation\r\n  21: salsa::derived::slot::Slot<Q,MP>::read_upgrade\r\n  22: salsa::derived::slot::Slot<Q,MP>::read\r\n  23: <salsa::derived::DerivedStorage<Q,MP> as salsa::plumbing::QueryStorageOps<Q>>::try_fetch\r\n  24: <DB as hir_ty::db::HirDatabase>::infer_query\r\n  25: hir_ty::db::infer_wait\r\n  26: hir::semantics::SemanticsImpl::analyze_impl\r\n  27: hir::semantics::SemanticsImpl::scope\r\n  28: ide::inlay_hints::inlay_hints\r\n  29: std::panicking::try\r\n  30: rust_analyzer::handlers::handle_inlay_hints\r\n  31: rust_analyzer::dispatch::RequestDispatcher::on::{{closure}}::{{closure}}\r\n  32: <F as threadpool::FnBox>::call_box\r\n```\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88420/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88420/timeline", "performed_via_github_app": null, "state_reason": null}