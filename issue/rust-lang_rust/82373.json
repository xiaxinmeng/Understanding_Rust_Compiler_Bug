{"url": "https://api.github.com/repos/rust-lang/rust/issues/82373", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82373/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82373/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82373/events", "html_url": "https://github.com/rust-lang/rust/issues/82373", "id": 812901718, "node_id": "MDU6SXNzdWU4MTI5MDE3MTg=", "number": 82373, "title": "Cargo creates unremovable files when run in a Windows container", "user": {"login": "yodaldevoid", "id": 1204409, "node_id": "MDQ6VXNlcjEyMDQ0MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1204409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yodaldevoid", "html_url": "https://github.com/yodaldevoid", "followers_url": "https://api.github.com/users/yodaldevoid/followers", "following_url": "https://api.github.com/users/yodaldevoid/following{/other_user}", "gists_url": "https://api.github.com/users/yodaldevoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/yodaldevoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yodaldevoid/subscriptions", "organizations_url": "https://api.github.com/users/yodaldevoid/orgs", "repos_url": "https://api.github.com/users/yodaldevoid/repos", "events_url": "https://api.github.com/users/yodaldevoid/events{/privacy}", "received_events_url": "https://api.github.com/users/yodaldevoid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-02-21T17:08:34Z", "updated_at": "2021-02-21T18:05:26Z", "closed_at": "2021-02-21T18:05:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If within a folder mounted from a host within a Windows container and Cargo is used to build a project with a build script or that has a dependency with a build script, the compiled build script is unremovable.\r\n\r\nThe following docker container was used for testing. It contains the bare minimum required to compile Rust on Windows using Rust 1.50.0 and Rustup 1.23.1.\r\n\r\n<details><summary>Dockerfile</summary>\r\n<p>\r\n\r\n```\r\n# escape=`\r\n\r\n# IMAGES BUILT FROM THIS DOCKERFILE ARE NOT TO BE SHARED ON PUBLIC DOCKER HUBs.\r\n#\r\n# WARNING: NON-FREE AND DISTRIBUTION RESTRICTED ENCUMBERED SOFTWARE IN IMAGE.\r\n#\r\n# The VS Build Tools are very encumbered.\r\n#\r\n# IMAGE SHOULD ONLY BE BUILT BY USERS WHO CAN FOLLOW THESE TERMS:\r\n# https://visualstudio.microsoft.com/license-terms/mlt553512/\r\n#\r\n# See the fourth paragraph of this blog post for a warning from a Microsoftie:\r\n# https://blogs.msdn.microsoft.com/vcblog/2018/08/13/using-msvc-in-a-docker-container-for-your-c-projects/\r\n#\r\n# \"\"\"\r\n# The VS Build Tools are licensed as a supplement to your existing Visual Studio license.\r\n# Any images built with these tools should be for your personal use or for use in your\r\n# organization in accordance with your existing Visual Studio and Windows licenses.\r\n# Please don\u2019t share these images on a public Docker hub.\r\n# \"\"\"\r\n#\r\n# That said, this Dockerfile will be built in a CI system for validation and testing in the project\r\n# but most definitely will skip deployment.\r\n\r\nFROM mcr.microsoft.com/windows/servercore:1809\r\n\r\nSHELL [\"powershell.exe\", \"-NoLogo\", \"-ExecutionPolicy\", \"Bypass\", \"-Command\", \"$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';\"]\r\n\r\nRUN $url = 'https://download.visualstudio.microsoft.com/download/pr/20130c62-1bc8-43d6-b4f0-c20bb7c79113/7276a7355219f7988c480d198e23c2973bbb7ab971c4f0415c26cab2955344e5/vs_BuildTools.exe'; `\r\n    $sha256 = '7276A7355219F7988C480D198E23C2973BBB7AB971C4F0415C26CAB2955344E5'; `\r\n    Invoke-WebRequest -Uri $url -OutFile C:\\vs_BuildTools.exe; `\r\n    $actual256 = (Get-FileHash vs_BuildTools.exe -Algorithm sha256).Hash; `\r\n    if ($actual256 -ne $sha256) { `\r\n       Write-Host 'FAILED!'; `\r\n       Write-Host ('expected: {0}' -f $sha256); `\r\n       Write-Host ('got:      {0}' -f $actual256); `\r\n       exit 1; `\r\n    }; `\r\n    Start-Process -filepath C:\\vs_BuildTools.exe -wait -argumentlist ' `\r\n        --quiet --wait --norestart --nocache `\r\n        --installPath C:\\BuildTools `\r\n        --add Microsoft.Component.MSBuild `\r\n        --add Microsoft.VisualStudio.Component.Windows10SDK.17763 `\r\n        --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64'; `\r\n    Remove-Item 'C:\\\\vs_BuildTools.exe'; `\r\n    Remove-Item -Force -Recurse 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\Installer'; `\r\n    [Environment]::SetEnvironmentVariable('__VSCMD_ARG_NO_LOGO', '1', [EnvironmentVariableTarget]::Machine)\r\n\r\nENV RUSTUP_HOME=C:\\rustup `\r\n    CARGO_HOME=C:\\cargo `\r\n    RUST_VERSION=1.50.0\r\n\r\nRUN [Net.ServicePointManager]::SecurityProtocol = [Net.ServicePointManager]::SecurityProtocol -bor [Net.SecurityProtocolType]::Tls12; `\r\n    $url = 'https://static.rust-lang.org/rustup/archive/1.23.1/x86_64-pc-windows-msvc/rustup-init.exe'; `\r\n    $sha256 = 'a586cf9de3e4aa791fd5796b6a5f99ca05591ccef8bb94e53af5b69f0261fb03'; `\r\n    Invoke-WebRequest -Uri $url -OutFile C:\\rustup-init.exe; `\r\n    $actual256 = (Get-FileHash rustup-init.exe -Algorithm sha256).Hash; `\r\n    if ($actual256 -ne $sha256) { `\r\n       Write-Host 'FAILED!'; `\r\n       Write-Host ('expected: {0}' -f $sha256); `\r\n       Write-Host ('got:      {0}' -f $actual256); `\r\n       exit 1; `\r\n    }; `\r\n    New-Item ${env:CARGO_HOME}\\bin -type directory | Out-Null; `\r\n    $newPath = ('{0}\\bin;{1}' -f ${env:CARGO_HOME}, ${env:PATH}); `\r\n    [Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine); `\r\n    [Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Process); `\r\n    C:\\rustup-init.exe -y -v --no-modify-path --default-toolchain ${env:RUST_VERSION} --default-host x86_64-pc-windows-msvc; `\r\n    Remove-Item C:\\rustup-init.exe; `\r\n    rustup -V; `\r\n    cargo -V; `\r\n    rustc -V\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nThe Dockerfile is built as such.\r\n```\r\ndocker build -t rust_build_container .\r\n```\r\n\r\nStarting from a new binary project, we add the simplest build script possible.\r\n```\r\ncargo new rust_build_test\r\n```\r\n\r\n`build.rs`\r\n```rust\r\nfn main() {}\r\n```\r\n\r\nThe container was then run with the following command. This mounts the newly created rust project within the container and then starts the shell within that mounted directory.\r\n```\r\ndocker run -v \"${PWD}:C:\\rust_build_test\" -w \"C:\\rust_build_test\" --name rust_build_test -i rust_build_container\r\n```\r\n\r\nWithin the container, `cargo build` runs without problem, but a subsequent `cargo test` fails to run because it cannot remove the compiled build script. Attempting to remove the compiled build script any other was also doesn't work for the same reason.\r\n```\r\nC:\\rust_build_test>cargo build\r\ncargo build\r\n   Compiling rust_build_test v0.1.0 (C:\\rust_build_test)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.97s\r\n\r\nC:\\rust_build_test>cargo test\r\ncargo test\r\nerror: failed to remove file `C:\\rust_build_test\\target\\debug\\build\\rust_build_test-0b2af87b09108863\\build-script-build.exe`\r\n\r\nCaused by:\r\n  Access is denied. (os error 5)\r\n\r\nC:\\rust_build_test>del C:\\rust_build_test\\target\\debug\\build\\rust_build_test-0b2af87b09108863\\build-script-build.exe\r\ndel C:\\rust_build_test\\target\\debug\\build\\rust_build_test-0b2af87b09108863\\build-script-build.exe\r\nC:\\rust_build_test\\target\\debug\\build\\rust_build_test-0b2af87b09108863\\build-script-build.exe\r\nAccess is denied.\r\n\r\nC:\\rust_build_test>\r\n```\r\n\r\nIf the container is exited and then re-entered, the problematic files can be removed without issue. Similarly, the files can easily be removed from the host's side. Other files created by cargo during the build process can be removed without issue.\r\n\r\nIf the target folder is placed outside of a mounted location, the commands work as expected.\r\n```\r\nC:\\rust_build_test>cargo build --target-dir C:\\target\r\ncargo build --target-dir C:\\target\r\n   Compiling rust_build_test v0.1.0 (C:\\rust_build_test)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.61s\r\n\r\nC:\\rust_build_test>cargo test --target-dir C:\\target\r\ncargo test --target-dir C:\\target\r\n   Compiling rust_build_test v0.1.0 (C:\\rust_build_test)\r\n    Finished test [unoptimized + debuginfo] target(s) in 0.18s\r\n     Running C:\\target\\debug\\deps\\rust_build_test-2ff26d71050a7530.exe\r\n\r\nrunning 0 tests\r\n\r\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\r\n\r\n\r\nC:\\rust_build_test>\r\n```\r\n\r\n---\r\n\r\n`docker version`\r\n<details>\r\n<p>\r\n\r\n```\r\n> docker version\r\nClient: Docker Engine - Community\r\n Cloud integration: 1.0.7\r\n Version:           20.10.2\r\n API version:       1.41\r\n Go version:        go1.13.15\r\n Git commit:        2291f61\r\n Built:             Mon Dec 28 16:14:16 2020\r\n OS/Arch:           windows/amd64\r\n Context:           default\r\n Experimental:      true\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          20.10.2\r\n  API version:      1.41 (minimum version 1.24)\r\n  Go version:       go1.13.15\r\n  Git commit:       8891c58\r\n  Built:            Mon Dec 28 16:26:48 2020\r\n  OS/Arch:          windows/amd64\r\n  Experimental:     false\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n`docker info`\r\n<details>\r\n<p>\r\n\r\n```\r\n> docker info\r\nClient:\r\n Context:    default\r\n Debug Mode: false\r\n Plugins:\r\n  app: Docker App (Docker Inc., v0.9.1-beta3)\r\n  buildx: Build with BuildKit (Docker Inc., v0.5.1-docker)\r\n  scan: Docker Scan (Docker Inc., v0.5.0)\r\n\r\nServer:\r\n Containers: 1\r\n  Running: 0\r\n  Paused: 0\r\n  Stopped: 1\r\n Images: 6\r\n Server Version: 20.10.2\r\n Storage Driver: windowsfilter\r\n  Windows:\r\n Logging Driver: json-file\r\n Plugins:\r\n  Volume: local\r\n  Network: ics internal l2bridge l2tunnel nat null overlay private transparent\r\n  Log: awslogs etwlogs fluentd gcplogs gelf json-file local logentries splunk syslog\r\n Swarm: inactive\r\n Default Isolation: hyperv\r\n Kernel Version: 10.0 19041 (19041.1.amd64fre.vb_release.191206-1406)\r\n Operating System: Windows 10 Pro Version 2004 (OS Build 19041.804)\r\n OSType: windows\r\n Architecture: x86_64\r\n CPUs: 16\r\n Total Memory: 31.95GiB\r\n Name: Monamo\r\n ID: ZSNU:YNGN:TX4M:3TMS:A3K6:HSNL:5NBW:OFI2:EX2A:PYJI:WEBV:FPMD\r\n Docker Root Dir: C:\\ProgramData\\Docker\r\n Debug Mode: false\r\n Registry: https://index.docker.io/v1/\r\n Labels:\r\n Experimental: false\r\n Insecure Registries:\r\n  127.0.0.0/8\r\n Live Restore Enabled: false\r\n Product License: Community Engine\r\n```\r\n\r\n</p>\r\n</details>", "closed_by": {"login": "yodaldevoid", "id": 1204409, "node_id": "MDQ6VXNlcjEyMDQ0MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1204409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yodaldevoid", "html_url": "https://github.com/yodaldevoid", "followers_url": "https://api.github.com/users/yodaldevoid/followers", "following_url": "https://api.github.com/users/yodaldevoid/following{/other_user}", "gists_url": "https://api.github.com/users/yodaldevoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/yodaldevoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yodaldevoid/subscriptions", "organizations_url": "https://api.github.com/users/yodaldevoid/orgs", "repos_url": "https://api.github.com/users/yodaldevoid/repos", "events_url": "https://api.github.com/users/yodaldevoid/events{/privacy}", "received_events_url": "https://api.github.com/users/yodaldevoid/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82373/timeline", "performed_via_github_app": null, "state_reason": "completed"}