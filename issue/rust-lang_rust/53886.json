{"url": "https://api.github.com/repos/rust-lang/rust/issues/53886", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53886/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53886/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53886/events", "html_url": "https://github.com/rust-lang/rust/issues/53886", "id": 356213362, "node_id": "MDU6SXNzdWUzNTYyMTMzNjI=", "number": 53886, "title": "Is it idiomatic to use `impl<T> From<T> for Option<T>` in argument position?", "user": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-01T16:04:18Z", "updated_at": "2018-09-01T16:27:55Z", "closed_at": "2018-09-01T16:27:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See [this question on StackOverflow][2] with no answers so far.\r\n\r\nThis trait is [implemented since 1.12.0][1]:\r\n```rust\r\nimpl<T> From<T> for Option<T> {\r\n    fn from(val: T) -> Option<T> {\r\n        Some(val)\r\n    }\r\n}\r\n```\r\n\r\nHow idiomatic is this as an argument? Consider this example:\r\n\r\n```rust\r\nfn do_things(parameters: &Foo, optional_argument: impl Into<Option<Duration>>) {\r\n    let optional_argument = optional_argument.into();\r\n    // use it...\r\n}\r\n```\r\n\r\nIf you see the documentation, it's (more or less) clear (if you know, that this trait is implemented). But if you see the code, you may be confused:\r\n\r\n```rust\r\ndo_things(params, Duration::from_millis(100));\r\n```\r\nIs this fine to use or should it be avoided?\r\n\r\n\r\n  [1]: https://doc.rust-lang.org/std/option/enum.Option.html#impl-From%3CT%3E\r\n  [2]: https://stackoverflow.com/questions/51886379", "closed_by": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53886/timeline", "performed_via_github_app": null, "state_reason": "completed"}