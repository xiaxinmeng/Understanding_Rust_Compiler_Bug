{"url": "https://api.github.com/repos/rust-lang/rust/issues/72009", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72009/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72009/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72009/events", "html_url": "https://github.com/rust-lang/rust/issues/72009", "id": 614701019, "node_id": "MDU6SXNzdWU2MTQ3MDEwMTk=", "number": 72009, "title": "std::process::Command should probably implement Display", "user": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-08T12:04:40Z", "updated_at": "2020-05-10T13:15:42Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "At the moment, `Command` does not implement `Display`. However, it's often useful to display `Command` for the end user, the most common case being that the command failed, and you want to display an error message. If `cmd.to_string()` returned something like `cargo --metadata --manifest-path ./foo/Cargo.toml`, that would be sweet. \r\n\r\nIt's also instructive to compare it with `Path`s. `Path` deliberately doesn't implement display directly, and the reason for that (I think) is not to make people thing about non-text path when displaing paths, but to make it harder to miss-use string formatting for path operations. IE, we don't want to people doing \r\n```\r\nlet path = PathBuf::from(format!(\"{}/{}\", base, name))\r\n```\r\n, as that doesn't handle bag-of-bytes paths. \r\n\r\nFor `Command`, I don't think `to_string()` can be missused in a similar manner, so adding `Display` seems like a clear win to me. \r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72009/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72009/timeline", "performed_via_github_app": null, "state_reason": null}