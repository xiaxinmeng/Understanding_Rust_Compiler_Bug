{"url": "https://api.github.com/repos/rust-lang/rust/issues/69476", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69476/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69476/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69476/events", "html_url": "https://github.com/rust-lang/rust/issues/69476", "id": 571116775, "node_id": "MDU6SXNzdWU1NzExMTY3NzU=", "number": 69476, "title": "impl_trait_in_bindings doesn't interact well with associated types yet", "user": {"login": "Boscop", "id": 535593, "node_id": "MDQ6VXNlcjUzNTU5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/535593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Boscop", "html_url": "https://github.com/Boscop", "followers_url": "https://api.github.com/users/Boscop/followers", "following_url": "https://api.github.com/users/Boscop/following{/other_user}", "gists_url": "https://api.github.com/users/Boscop/gists{/gist_id}", "starred_url": "https://api.github.com/users/Boscop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Boscop/subscriptions", "organizations_url": "https://api.github.com/users/Boscop/orgs", "repos_url": "https://api.github.com/users/Boscop/repos", "events_url": "https://api.github.com/users/Boscop/events{/privacy}", "received_events_url": "https://api.github.com/users/Boscop/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472505091, "node_id": "MDU6TGFiZWwxNDcyNTA1MDkx", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-impl_trait_in_bindings", "name": "F-impl_trait_in_bindings", "color": "f9c0cc", "default": false, "description": "`#![feature(impl_trait_in_bindings)]`"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-26T07:14:15Z", "updated_at": "2021-11-19T05:25:44Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\n#![allow(incomplete_features)]\r\n#![feature(impl_trait_in_bindings)]\r\n\r\ntrait Trait {\r\n    type R;\r\n}\r\n\r\nstruct A;\r\nimpl Trait for A {\r\n    type R = i32;\r\n}\r\n\r\nstatic ARR: [impl Fn(<A as Trait>::R) -> <A as Trait>::R; 1] = [|x| x];\r\n```\r\nhttps://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=9aed9cb362dff5db78c7af96567f31ee\r\n\r\nI expected to see this happen: It compiles.\r\n\r\nInstead, this happened: Compiler error:\r\n```\r\nerror[E0277]: expected a `std::ops::Fn<(i32,)>` closure, found `impl std::ops::Fn<(<A as Trait>::R,)>`\r\n  --> src/lib.rs:13:13\r\n   |\r\n13 | static ARR: [impl Fn(<A as Trait>::R) -> <A as Trait>::R; 1] = [|x| x];\r\n   |             ^-------------------------------------------^^^^\r\n   |             ||\r\n   |             |required by `ARR::{{opaque}}#0`\r\n   |             expected an `Fn<(i32,)>` closure, found `impl std::ops::Fn<(<A as Trait>::R,)>`\r\n   |\r\n   = help: the trait `std::ops::Fn<(i32,)>` is not implemented for `impl std::ops::Fn<(<A as Trait>::R,)>`\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nBtw, this is an abbreviated version of a real world use case of using [`impl_trait_in_bindings`](https://github.com/rust-lang/rust/issues/63065).\r\n\r\n---\r\n\r\nBtw, this compiles: `static ARR: [impl Fn(i32) -> i32; 1] = [|x| x];`\r\n\r\nBut this `static ARR: [impl Fn(i32) -> i32; 0] = [];` gives another error:\r\n```\r\nerror[E0391]: cycle detected when processing `ARR::{{opaque}}#0`\r\n --> src/lib.rs:4:14\r\n  |\r\n4 | static ARR: [impl Fn(i32) -> i32; 0] = [];\r\n  |              ^^^^^^^^^^^^^^^^^^^\r\n  |\r\nnote: ...which requires borrow-checking `ARR`...\r\n --> src/lib.rs:4:1\r\n  |\r\n4 | static ARR: [impl Fn(i32) -> i32; 0] = [];\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires processing `ARR`...\r\n --> src/lib.rs:4:1\r\n  |\r\n4 | static ARR: [impl Fn(i32) -> i32; 0] = [];\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires const checking `ARR`...\r\n --> src/lib.rs:4:1\r\n  |\r\n4 | static ARR: [impl Fn(i32) -> i32; 0] = [];\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  = note: ...which requires computing whether `[impl std::ops::Fn<(i32,)>; 0]` is freeze...\r\n  = note: ...which requires evaluating trait selection obligation `[impl std::ops::Fn<(i32,)>; 0]: std::marker::Freeze`...\r\n  = note: ...which again requires processing `ARR::{{opaque}}#0`, completing the cycle\r\nnote: cycle used when collecting item types in top-level module\r\n --> src/lib.rs:1:1\r\n  |\r\n1 | / #![allow(incomplete_features)]\r\n2 | | #![feature(impl_trait_in_bindings)]\r\n3 | |\r\n4 | | static ARR: [impl Fn(i32) -> i32; 0] = [];\r\n  | |__________________________________________^\r\n\r\nerror[E0391]: cycle detected when processing `ARR::{{opaque}}#0`\r\n --> src/lib.rs:4:14\r\n  |\r\n4 | static ARR: [impl Fn(i32) -> i32; 0] = [];\r\n  |              ^^^^^^^^^^^^^^^^^^^\r\n  |\r\nnote: ...which requires borrow-checking `ARR`...\r\n --> src/lib.rs:4:1\r\n  |\r\n4 | static ARR: [impl Fn(i32) -> i32; 0] = [];\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires processing `ARR`...\r\n --> src/lib.rs:4:1\r\n  |\r\n4 | static ARR: [impl Fn(i32) -> i32; 0] = [];\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires const checking `ARR`...\r\n --> src/lib.rs:4:1\r\n  |\r\n4 | static ARR: [impl Fn(i32) -> i32; 0] = [];\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  = note: ...which requires evaluating trait selection obligation `[impl std::ops::Fn<(i32,)>; 0]: std::marker::Sync`...\r\n  = note: ...which again requires processing `ARR::{{opaque}}#0`, completing the cycle\r\nnote: cycle used when collecting item types in top-level module\r\n --> src/lib.rs:1:1\r\n  |\r\n1 | / #![allow(incomplete_features)]\r\n2 | | #![feature(impl_trait_in_bindings)]\r\n3 | |\r\n4 | | static ARR: [impl Fn(i32) -> i32; 0] = [];\r\n  | |__________________________________________^\r\n\r\nerror[E0391]: cycle detected when processing `ARR::{{opaque}}#0`\r\n --> src/lib.rs:4:14\r\n  |\r\n4 | static ARR: [impl Fn(i32) -> i32; 0] = [];\r\n  |              ^^^^^^^^^^^^^^^^^^^\r\n  |\r\nnote: ...which requires borrow-checking `ARR`...\r\n --> src/lib.rs:4:1\r\n  |\r\n4 | static ARR: [impl Fn(i32) -> i32; 0] = [];\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires processing `ARR`...\r\n --> src/lib.rs:4:1\r\n  |\r\n4 | static ARR: [impl Fn(i32) -> i32; 0] = [];\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires const checking `ARR`...\r\n --> src/lib.rs:4:1\r\n  |\r\n4 | static ARR: [impl Fn(i32) -> i32; 0] = [];\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  = note: ...which again requires processing `ARR::{{opaque}}#0`, completing the cycle\r\nnote: cycle used when collecting item types in top-level module\r\n --> src/lib.rs:1:1\r\n  |\r\n1 | / #![allow(incomplete_features)]\r\n2 | | #![feature(impl_trait_in_bindings)]\r\n3 | |\r\n4 | | static ARR: [impl Fn(i32) -> i32; 0] = [];\r\n  | |__________________________________________^\r\n\r\nerror: could not find defining uses\r\n --> src/lib.rs:4:14\r\n  |\r\n4 | static ARR: [impl Fn(i32) -> i32; 0] = [];\r\n  |              ^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to 4 previous errors\r\n```\r\nhttps://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=09044d61d101f3ac849534eb9978e7c3\r\n\r\nBut IMO it should also compile.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69476/timeline", "performed_via_github_app": null, "state_reason": null}