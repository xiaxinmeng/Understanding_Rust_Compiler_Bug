{"url": "https://api.github.com/repos/rust-lang/rust/issues/84576", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84576/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84576/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84576/events", "html_url": "https://github.com/rust-lang/rust/issues/84576", "id": 867394478, "node_id": "MDU6SXNzdWU4NjczOTQ0Nzg=", "number": 84576, "title": "(signal: 11, SIGSEGV: invalid memory reference) x86_64-unknown-linux-musl", "user": {"login": "sabirmgd", "id": 11023861, "node_id": "MDQ6VXNlcjExMDIzODYx", "avatar_url": "https://avatars.githubusercontent.com/u/11023861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sabirmgd", "html_url": "https://github.com/sabirmgd", "followers_url": "https://api.github.com/users/sabirmgd/followers", "following_url": "https://api.github.com/users/sabirmgd/following{/other_user}", "gists_url": "https://api.github.com/users/sabirmgd/gists{/gist_id}", "starred_url": "https://api.github.com/users/sabirmgd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sabirmgd/subscriptions", "organizations_url": "https://api.github.com/users/sabirmgd/orgs", "repos_url": "https://api.github.com/users/sabirmgd/repos", "events_url": "https://api.github.com/users/sabirmgd/events{/privacy}", "received_events_url": "https://api.github.com/users/sabirmgd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-04-26T08:01:26Z", "updated_at": "2021-05-09T22:10:58Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nI'm using rust nightly for development, I do my development in a windows machine but testing and package the software takes place in a docker container\r\n-->\r\n\r\nI do my development in windows but test and package the application in alpine, I have issues when creating any type of https client, it particularly fails when the code tries to create an https client of any sort, for example (s3 rusoto client, elasticsearch client)\r\n\r\nI created a small project to actually re-produce this issue:\r\nI'm using docker on alpine, here is my environment:\r\n\r\n```\r\n\r\nFROM alpine:3.13.4\r\n\r\n# <channel>[-<date>][-<host>]\r\n# <channel>       = stable|beta|nightly|<major.minor>|<major.minor.patch>\r\n# <date>          = YYYY-MM-DD\r\n# <host>          = <target-triple>\r\nARG TOOLCHAIN_CHANNEL=nightly\r\nARG TOOLCHAIN_DATE=2021-03-25\r\nARG TOOLCHAIN_HOST=x86_64-unknown-linux-musl\r\n\r\nENV RUSTUP_HOME=/usr/local/rustup \\\r\n    CARGO_HOME=/usr/local/cargo \\\r\n    PATH=/usr/local/cargo/bin:$PATH\r\n\r\nRUN apk upgrade; \\\r\n    apk update; \\ \r\n    apk add util-linux pciutils usbutils coreutils binutils findutils grep \\\r\n            curl bash openssl libressl-dev gcc build-base ca-certificates; \\\r\n    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y -v \\\r\n      --no-modify-path \\\r\n      --default-toolchain ${TOOLCHAIN_CHANNEL}-${TOOLCHAIN_DATE}-${TOOLCHAIN_HOST} \\\r\n      --profile minimal; \\\r\n    chmod -R a+w $RUSTUP_HOME $CARGO_HOME; \\\r\n    rustup --version; \\\r\n    cargo --version; \\\r\n    rustc --version; \\\r\n    rustup component add llvm-tools-preview; \\\r\n    rustup component add clippy; \\\r\n    cargo install grcov --vers 0.6.1;\r\n```\r\n\r\nas you can see, I locked it down to a specific nightly version ( but you can feel free to change it to any, I tried many versions.\r\n\r\nmain.rs:\r\n```\r\nstatic DEFAULT_ELASTIC_SEARCH_ADDRESS: &str =\r\n    \"https://myaddress.com\";\r\n\r\nuse elasticsearch::http::transport::SingleNodeConnectionPool;\r\nuse elasticsearch::http::transport::TransportBuilder;\r\nuse elasticsearch::http::Url;\r\nuse elasticsearch::Error;\r\nuse elasticsearch::{auth::Credentials, Elasticsearch};\r\n\r\nfn main() {\r\n    let _client = create_client();\r\n}\r\n\r\n\r\n#[allow(dead_code)]\r\npub fn create_client() -> Result<Elasticsearch, Error> {\r\n    let username = \"user\".to_string();\r\n    let password = \"password\".to_string();\r\n    let credentials = Credentials::Basic(username, password);\r\n    let endpoint = DEFAULT_ELASTIC_SEARCH_ADDRESS.to_string();\r\n    let url = Url::parse(&endpoint)?;\r\n    let conn_pool = SingleNodeConnectionPool::new(url);\r\n    let transport = TransportBuilder::new(conn_pool).auth(credentials).build()?;\r\n    Ok(Elasticsearch::new(transport))\r\n}\r\n\r\n\r\n#[test]\r\nfn query_studies_within_files() {\r\n    let _client = create_client();\r\n}\r\n```\r\n\r\n\r\nand the cargo.toml file\r\n```\r\n[package]\r\nname = \"test_http\"\r\nversion = \"0.1.0\"\r\nedition = \"2018\"\r\n\r\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\r\n\r\n[dependencies]\r\ndotenv = \"0.15.0\"\r\nelasticsearch = \"7.12.0-alpha.1\"\r\nrusoto_s3 = \"0.46.0\"\r\nrusoto_core = \"0.46.0\"\r\nrusoto_credential = \"0.46.0\"\r\nserde = { version = \"1.0.125\", features = [\"derive\"] }\r\nserde_yaml = \"0.8.17\"\r\nserde_json = \"1.0.64\"\r\njson = \"0.12\"\r\n```\r\n\r\n\r\nI'm not really sure what could possibly be the reason is, it something to do with `https` because if I remove the `https` from the url `static DEFAULT_ELASTIC_SEARCH_ADDRESS: &str =\r\n    \"https://myaddress.com\";` to be `myaddress.com`, the test succeeds. however, of course, it would not get a proper client.\r\n\r\nI just excepted this simple unit test that will create a client to succeed\r\n\r\nInstead, this happened: I get (signal: 11, SIGSEGV: invalid memory reference) x86_64-unknown-linux-musl\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc --version --verbose\r\nrustc 1.53.0-nightly (07e0e2ec2 2021-03-24)\r\nbinary: rustc\r\ncommit-hash: 07e0e2ec268c140e607e1ac7f49f145612d0f597\r\ncommit-date: 2021-03-24\r\nhost: x86_64-unknown-linux-musl\r\nrelease: 1.53.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84576/timeline", "performed_via_github_app": null, "state_reason": null}