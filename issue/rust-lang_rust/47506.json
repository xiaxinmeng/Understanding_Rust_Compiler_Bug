{"url": "https://api.github.com/repos/rust-lang/rust/issues/47506", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47506/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47506/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47506/events", "html_url": "https://github.com/rust-lang/rust/issues/47506", "id": 289105206, "node_id": "MDU6SXNzdWUyODkxMDUyMDY=", "number": 47506, "title": "Should unit tests spawn new processes instead of threads?", "user": {"login": "vlovich", "id": 201287, "node_id": "MDQ6VXNlcjIwMTI4Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/201287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlovich", "html_url": "https://github.com/vlovich", "followers_url": "https://api.github.com/users/vlovich/followers", "following_url": "https://api.github.com/users/vlovich/following{/other_user}", "gists_url": "https://api.github.com/users/vlovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlovich/subscriptions", "organizations_url": "https://api.github.com/users/vlovich/orgs", "repos_url": "https://api.github.com/users/vlovich/repos", "events_url": "https://api.github.com/users/vlovich/events{/privacy}", "received_events_url": "https://api.github.com/users/vlovich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 630810559, "node_id": "MDU6TGFiZWw2MzA4MTA1NTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-libtest", "name": "A-libtest", "color": "f7e101", "default": false, "description": "Area: #[test] related"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-01-17T00:43:33Z", "updated_at": "2023-05-08T19:14:00Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Imagine a (contrived) piece of code like this:\r\n\r\n```\r\nlazy_static!(Q: Mutex<Vec<u32>> = Mutex::new(Vec::new()));\r\n\r\n#[test]\r\nfn test_a() {\r\n   {\r\n     Q.lock().unwrap().push(5);\r\n   }\r\n   assert_eq!(Q.lock().unwrap().len(), 1);\r\n}\r\n\r\nfn test_b() {\r\n   {\r\n     Q.lock().unwrap().clear();\r\n   }\r\n   assert_eq!(Q.lock().unwrap().len(), 0);\r\n\r\n   {\r\n     let q = Q.lock().unwrap();\r\n     q.push(5);\r\n     q.push(6);\r\n   }\r\n   assert_eq!(Q.lock().unwrap().len(), 2);\r\n}\r\n```\r\n\r\nThis is broken by default because cargo test will by default spawn multiple threads for the tests so the global state of Q.  The user would have to know to pass --test-threads=1 or the test author would have to create a global mutex to synchronize each test on.  This seems like a lot of unnecessary boilerplate, not to mention an unnecessary pain point for new developers to discover when they can't figure out why tests are producing weird results.\r\n\r\nThere also doesn't seem to be a solution at the moment that would enable you to achieve the benefits of running tests in parallel at all for shared state between tests.  The global mutex approach effectively reduces the test code to implicitly running with --test-threads=1.  Using separate processes by default (or at least providing a decorator to do it easily) would solve the vast majority of such problems without requiring authors to significantly restructure their code.\r\n\r\nFWIW, [other](https://github.com/google/googletest/blob/master/googletest/docs/FAQ.md#why-dont-google-test-run-the-tests-in-different-threads-to-speed-things-up) [test](https://stackoverflow.com/questions/12304927/is-there-a-way-to-run-c-unit-tests-tests-in-parallel) frameworks go with the process sharding approach instead of threads.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47506/reactions", "total_count": 12, "+1": 12, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47506/timeline", "performed_via_github_app": null, "state_reason": null}