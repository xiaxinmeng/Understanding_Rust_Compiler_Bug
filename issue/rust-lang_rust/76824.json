{"url": "https://api.github.com/repos/rust-lang/rust/issues/76824", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/76824/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/76824/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/76824/events", "html_url": "https://github.com/rust-lang/rust/issues/76824", "id": 703337609, "node_id": "MDU6SXNzdWU3MDMzMzc2MDk=", "number": 76824, "title": "Consider making RUSTC_LOG=warn the default (instead of just error).", "user": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-09-17T07:21:51Z", "updated_at": "2021-10-09T12:41:34Z", "closed_at": "2021-10-09T12:41:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We don't use `error!`/`warn!`/`info!` a lot, but they come in handy for \"debugging `rustc` without a `debug-assertions` build\" situations, e.g. we use `info!` to show the function being codegen'd (as it's low-overhead and really helpful for e.g. LLVM crashes).\r\n\r\nWhile `info!` makes sense for off-by-default debugging helpers like that, `error!`/`warn!` seem closer to user-facing diagnostics, where the main difference is them being usable outside of code which has access to a `Session` (either due to running before the `Session` is created, or just in dependencies that have access to `log`/`tracing` but not any `rustc`-specific diagnostics APIs).\r\n\r\nHowever, one surprising aspect is *only* `error!` is enabled by default, while `warn!` *is not*, meaning that, with the current defaults, one is forced to choose between `error!` (which would output the word \"error\" which sounds more dire than \"warning\") or `warn!` (which may never be seen by an user).\r\n\r\n<hr/>\r\n\r\nMy usecase for `warn!` is in the upcoming `-Z self-profile` support for using hardware performance counters (which needs to be implemented in the separate `measureme` project), e.g. [this `warn!` instructs the user to open an issue](https://gist.github.com/eddyb/269491b0b59605f39f1d0a9dcf535c4a/025ee76590ad4e24a7dce9754080fb7c2b30df85#file-rdpmc-bench-rs-L565-L570) if they have an unrecognized (newer) CPU, but there's nothing preventing `-Z self-profile` from working (if the newer CPUs aren't drastically different), so showing \"error\" seems quite inappropriate.\r\n\r\nSadly, I don't think ~~`log`~~ `env_logger` itself will change this behavior, so even if we change `RUSTC_LOG`'s default, `measureme` might still have to use the less-appropriate `error!` if it wants to account for being used in other projects.\r\n\r\ncc @Mark-Simulacrum @gdhuper @hawkw", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/76824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/76824/timeline", "performed_via_github_app": null, "state_reason": "completed"}