{"url": "https://api.github.com/repos/rust-lang/rust/issues/107093", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107093/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107093/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107093/events", "html_url": "https://github.com/rust-lang/rust/issues/107093", "id": 1550102025, "node_id": "I_kwDOAAsO6M5cZK4J", "number": 107093, "title": "[ICE]: rustdoc: `unexpected const parent in type_of(): TraitRef ..`", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 3921860029, "node_id": "LA_kwDOAAsO6M7pwtW9", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-has-mcve", "name": "S-has-mcve", "color": "862eff", "default": false, "description": "A Minimal Complete and Verifiable Example has been found for this issue"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-01-19T23:29:00Z", "updated_at": "2023-04-30T20:59:04Z", "closed_at": "2023-04-30T20:59:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Code\n\n```Rust\nuse std::ops::Generator;\r\n\r\nfn gen() -> impl Generator<{}> {}\n```\n\n\n### Affected release channels\n\n- [ ] Previous Stable\n- [ ] Current Stable\n- [ ] Current Beta\n- [X] Current Nightly\n\n### Rust Version\n\n```Shell\nrustc 1.68.0-nightly (333ee6c46 2023-01-18)\r\nbinary: rustc\r\ncommit-hash: 333ee6c466972185973d5097f8b5fb0f9fb13fa5\r\ncommit-date: 2023-01-18\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.68.0-nightly\r\nLLVM version: 15.0.6\n```\n\n\n### Current error output\n\n_No response_\n\n### Backtrace\n\n```Shell\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\r\n\r\nerror: internal compiler error: unexpected const parent in type_of(): TraitRef(TraitRef { path: Path { span: a.rs:3:18: 3:31 (#0), res: Def(Trait, DefId(2:2969 ~ core[830d]::ops::generator::Generator)), segments: [PathSegment { ident: Generator#0, hir_id: HirId(DefId(0:6 ~ a[6282]::gen::{opaque#0}).4), res: Def(Trait, DefId(2:2969 ~ core[830d]::ops::generator::Generator)), args: Some(GenericArgs { args: [Const(ConstArg { value: AnonConst { hir_id: HirId(DefId(0:6 ~ a[6282]::gen::{opaque#0}).1), def_id: DefId(0:5 ~ a[6282]::gen::{constant#0}), body: BodyId { hir_id: HirId(DefId(0:6 ~ a[6282]::gen::{opaque#0}).2) } }, span: a.rs:3:28: 3:30 (#0) })], bindings: [], parenthesized: false, span_ext: a.rs:3:27: 3:31 (#0) }), infer_args: false }] }, hir_ref_id: HirId(DefId(0:6 ~ a[6282]::gen::{opaque#0}).5) })\r\n  |\r\n  = note: delayed at    0: <rustc_errors::HandlerInner>::emit_diagnostic\r\n             1: <rustc_errors::Handler>::delay_span_bug::<rustc_span::span_encoding::Span, &str>\r\n             2: <rustc_middle::ty::context::TyCtxt>::ty_error_with_message::<rustc_span::span_encoding::Span>\r\n             3: rustc_hir_analysis::collect::type_of::type_of\r\n             4: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::type_of, rustc_query_impl::plumbing::QueryCtxt, rustc_middle::dep_graph::dep_node::DepKind>\r\n             5: rustdoc::clean::clean_const\r\n             6: <core::iter::adapters::map::Map<core::slice::iter::Iter<rustc_hir::hir::GenericArg>, rustdoc::clean::clean_generic_args::{closure#1}> as core::iter::traits::iterator::Iterator>::fold::<(), core::iter::traits::iterator::Iterator::for_each::call<rustdoc::clean::types::GenericArg, <alloc::vec::Vec<rustdoc::clean::types::GenericArg>>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<rustc_hir::hir::GenericArg>, rustdoc::clean::clean_generic_args::{closure#1}>>::{closure#0}>::{closure#0}>\r\n             7: <alloc::vec::Vec<rustdoc::clean::types::GenericArg> as alloc::vec::spec_from_iter::SpecFromIter<rustdoc::clean::types::GenericArg, core::iter::adapters::map::Map<core::slice::iter::Iter<rustc_hir::hir::GenericArg>, rustdoc::clean::clean_generic_args::{closure#1}>>>::from_iter\r\n             8: rustdoc::clean::clean_generic_args\r\n             9: <thin_vec::ThinVec<rustdoc::clean::types::PathSegment> as core::iter::traits::collect::FromIterator<rustdoc::clean::types::PathSegment>>::from_iter::<core::iter::adapters::map::Map<core::slice::iter::Iter<rustc_hir::hir::PathSegment>, rustdoc::clean::clean_path::{closure#0}>>\r\n            10: rustdoc::clean::clean_poly_trait_ref\r\n            11: rustdoc::clean::clean_generic_bound\r\n            12: <alloc::vec::Vec<rustdoc::clean::types::GenericBound> as alloc::vec::spec_from_iter::SpecFromIter<rustdoc::clean::types::GenericBound, core::iter::adapters::filter_map::FilterMap<core::slice::iter::Iter<rustc_hir::hir::GenericBound>, rustdoc::clean::clean_trait_item::{closure#0}::{closure#1}>>>::from_iter\r\n            13: rustdoc::clean::clean_ty\r\n            14: rustdoc::clean::utils::enter_impl_trait::<rustdoc::clean::clean_function::{closure#0}, (rustdoc::clean::types::Generics, rustdoc::clean::types::FnDecl)>\r\n            15: rustdoc::clean::clean_fn_or_proc_macro\r\n            16: <rustdoc::core::DocContext>::with_param_env::<alloc::vec::Vec<rustdoc::clean::types::Item>, rustdoc::clean::clean_maybe_renamed_item::{closure#1}>\r\n            17: <&mut rustdoc::clean::clean_doc_module::{closure#2} as core::ops::function::FnOnce<(&(&rustc_hir::hir::Item, core::option::Option<rustc_span::symbol::Symbol>, core::option::Option<rustc_hir::hir_id::HirId>),)>>::call_once\r\n            18: <alloc::vec::Vec<rustdoc::clean::types::Item> as alloc::vec::spec_extend::SpecExtend<rustdoc::clean::types::Item, core::iter::adapters::flatten::FlatMap<core::slice::iter::Iter<(&rustc_hir::hir::Item, core::option::Option<rustc_span::symbol::Symbol>, core::option::Option<rustc_hir::hir_id::HirId>)>, alloc::vec::Vec<rustdoc::clean::types::Item>, rustdoc::clean::clean_doc_module::{closure#2}>>>::spec_extend\r\n            19: rustdoc::clean::clean_doc_module\r\n            20: rustdoc::clean::utils::krate\r\n            21: <rustc_session::session::Session>::time::<rustdoc::clean::types::Crate, rustdoc::core::run_global_ctxt::{closure#4}>\r\n            22: rustdoc::core::run_global_ctxt\r\n            23: <rustc_session::session::Session>::time::<(rustdoc::clean::types::Crate, rustdoc::config::RenderOptions, rustdoc::formats::cache::Cache), rustdoc::main_args::{closure#1}::{closure#0}::{closure#1}::{closure#0}>\r\n            24: <rustc_interface::passes::QueryContext>::enter::<rustdoc::main_args::{closure#1}::{closure#0}::{closure#1}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n            25: <rustc_interface::interface::Compiler>::enter::<rustdoc::main_args::{closure#1}::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n            26: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustdoc::main_args::{closure#1}>::{closure#0}::{closure#0}>\r\n            27: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustdoc::main_args::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n            28: std::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustdoc::main_args::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n            29: <<std::thread::Builder>::spawn_unchecked_<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustdoc::main_args::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>::{closure#1} as core::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n            30: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n                       at /rustc/333ee6c466972185973d5097f8b5fb0f9fb13fa5/library/alloc/src/boxed.rs:1988:9\r\n            31: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n                       at /rustc/333ee6c466972185973d5097f8b5fb0f9fb13fa5/library/alloc/src/boxed.rs:1988:9\r\n            32: std::sys::unix::thread::Thread::new::thread_start\r\n                       at /rustc/333ee6c466972185973d5097f8b5fb0f9fb13fa5/library/std/src/sys/unix/thread.rs:108:17\r\n            33: <unknown>\r\n            34: <unknown>\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.68.0-nightly (333ee6c46 2023-01-18) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\nend of query stack\r\nthread panicked while panicking. aborting.\r\n[2]    2838854 IOT instruction (core dumped)  rustdoc a.rs\n```\n\n\n### Anything else?\n\n_No response_", "closed_by": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107093/timeline", "performed_via_github_app": null, "state_reason": "completed"}