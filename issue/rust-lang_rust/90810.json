{"url": "https://api.github.com/repos/rust-lang/rust/issues/90810", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90810/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90810/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90810/events", "html_url": "https://github.com/rust-lang/rust/issues/90810", "id": 1051420061, "node_id": "I_kwDOAAsO6M4-q2Wd", "number": 90810, "title": "Rustc suggests an import that won't work if a crate and a module have the same name", "user": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-11-11T22:42:58Z", "updated_at": "2021-11-11T22:42:58Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Given the following code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=53b3ea413465b7a61e0b2780a07a6a20\r\n\r\n```rust\r\nmod http {}\r\n\r\nfn f() -> http::Parts {}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0412]: cannot find type `Parts` in module `http`\r\n --> src/lib.rs:4:17\r\n  |\r\n4 | fn f() -> http::Parts { loop {} }\r\n  |                 ^^^^^ not found in `http`\r\n  |\r\nhelp: consider importing one of these items\r\n  |\r\n2 | use http::request::Parts;\r\n  |\r\n2 | use http::response::Parts;\r\n  |\r\n2 | use http::uri::Parts;\r\n  |\r\n2 | use hyper::client::conn::Parts;\r\n  |\r\n    and 2 other candidates\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\n\r\n```\r\nerror[E0412]: cannot find type `Parts` in module `http`\r\n --> src/lib.rs:4:17\r\n  |\r\n4 | fn f() -> http::Parts { loop {} }\r\n  |                 ^^^^^ not found in `http`\r\n  |\r\nhelp: consider importing one of these items\r\n  |\r\n2 | use ::http::request::Parts;\r\n  |\r\n2 | use ::http::response::Parts;\r\n  |\r\n2 | use ::http::uri::Parts;\r\n  |\r\n2 | use hyper::client::conn::Parts;\r\n  |\r\n    and 2 other candidates\r\n```\r\n\r\nI couldn't quite replicate it in playground, but locally (in https://github.com/cloudflare/wrangler/commit/886fa42e6588908aa6ab6204944b927b9f4b2028), `use http::request::Parts` does *not* give an error that it's ambiguous between the crate and module; instead it silently resolves to the module, leading to a very confusing error:\r\n\r\n```\r\n 1  error[E0433]: failed to resolve: could not find `request` in `http`\r\n   --> src/commands/dev/gcs/server/mod.rs:21:22\r\n    |\r\n 21 |     mut parts: http::request::Parts,\r\n    |                      ^^^^^^^ could not find `request` in `http`\r\n```\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90810/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90810/timeline", "performed_via_github_app": null, "state_reason": null}