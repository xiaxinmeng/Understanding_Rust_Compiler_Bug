{"url": "https://api.github.com/repos/rust-lang/rust/issues/44868", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44868/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44868/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44868/events", "html_url": "https://github.com/rust-lang/rust/issues/44868", "id": 260742189, "node_id": "MDU6SXNzdWUyNjA3NDIxODk=", "number": 44868, "title": "AsRef/Borrow/BorrowMut need better documentation", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234876, "node_id": "MDU6TGFiZWwyMzQ4NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-hard", "name": "E-hard", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Hard / a lot"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-09-26T19:30:12Z", "updated_at": "2023-06-18T01:07:01Z", "closed_at": "2019-04-04T05:25:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Links: [`AsRef`](https://doc.rust-lang.org/std/convert/trait.AsRef.html), [`Borrow`](https://doc.rust-lang.org/std/borrow/trait.Borrow.html), [`BorrowMut`](https://doc.rust-lang.org/std/borrow/trait.BorrowMut.html).\r\n\r\nThose docs have plenty of text. I've read it dozens of times and felt \"uhhh, what\" every single time. Well, the text sort of makes sense, but, in the end, it doesn't help me in deciding between `AsRef` and `Borrow`. So I just had to dig myself through the APIs and try figuring the mystery by myself. :)\r\n\r\nHere are some notes I've collected afterwards. I wonder if we could get at least some of the following stuff into the official docs...\r\n\r\n| Conversion        | Using `Borrow` | Using `AsRef` |\r\n|-------------------|----------------|---------------|\r\n| `&T -> &T`        | borrows        | (*)           |\r\n| `&Vec<T> -> &[T]` | borrows        | borrows       |\r\n| `&String -> &str` | borrows        | borrows       |\r\n| `&str -> &Path`   |                | converts      |\r\n| `&Path -> &OsStr` |                | converts      |\r\n| `&OsStr -> &Path` |                | converts      |\r\n| `&Path -> &Path`  | borrows        | borrows       |\r\n\r\n(*) should be 'borrows', but cannot be implemented yet due to coherence issues (I believe?)\r\n\r\nKey takeaways:\r\n\r\n* `Borrow` is simple and strict. The hash of the borrowed reference must stay the same.\r\n* `AsRef` converts to a wider range of different types. The hash of the new reference is allowed to change.\r\n\r\n### Exercise 1\r\n\r\nWe want to implement a function that creates a directory. It must accept both `&str` and `&Path` as the argument. Which signature are we looking for?\r\n\r\n```rust\r\nfn mkdir<P: AsRef<Path>>(path: P);\r\nfn mkdir<P: Borrow<Path>>(path: P);\r\n```\r\n\r\nAnswer: In order to go from `&str` to `&Path`, we have to create a value of different type `Path` (`&str` is more primitive - it cannot be borrowed as `Path`). Since `AsRef` can borrow and convert, it is the correct option here.\r\n\r\n### Exercise 2\r\n\r\nWe want to check whether a value exists in a `HashSet`. Even if we have a set of type `HashSet<String>`, we'd like to be able to just do `s.contains(\"foo\")` (passing a `&str`). Which one of the four method signatures is the right one?\r\n\r\n```rust\r\nimpl<T: Eq + Hash> HashSet<T> {\r\n    fn contains<Q: Hash + Eq>(&self, value: &Q) -> bool where T: AsRef<Q>;\r\n    fn contains<Q: Hash + Eq>(&self, value: &Q) -> bool where Q: AsRef<T>;\r\n    fn contains<Q: Hash + Eq>(&self, value: &Q) -> bool where T: Borrow<Q>;\r\n    fn contains<Q: Hash + Eq>(&self, value: &Q) -> bool where Q: Borrow<T>;\r\n}\r\n```\r\n\r\nAnswer: We don't want to convert between totally different types, so the hash and structural equality of the value must be preserved after reference conversion. In other words, we only want simple borrowing. Conversion to a different type might potentially change the hash and is thus out of the question.\r\n\r\nSo `Borrow` is the right one here. But is it `T: Borrow<Q>` or `Q: Borrow<T>`? Well, if `T` is `String` and we're passing a `&str` to the method, we want to borrow `T` as `Q`. So the right bound is `T: Borrow<Q>`. ", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44868/reactions", "total_count": 15, "+1": 15, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44868/timeline", "performed_via_github_app": null, "state_reason": "completed"}