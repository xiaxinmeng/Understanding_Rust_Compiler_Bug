{"url": "https://api.github.com/repos/rust-lang/rust/issues/108636", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108636/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108636/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108636/events", "html_url": "https://github.com/rust-lang/rust/issues/108636", "id": 1606047771, "node_id": "I_kwDOAAsO6M5fulgb", "number": 108636, "title": "\"was supposed to return data\" reports lifetimes backwards with invariance or contravariance", "user": {"login": "QuineDot", "id": 75067664, "node_id": "MDQ6VXNlcjc1MDY3NjY0", "avatar_url": "https://avatars.githubusercontent.com/u/75067664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuineDot", "html_url": "https://github.com/QuineDot", "followers_url": "https://api.github.com/users/QuineDot/followers", "following_url": "https://api.github.com/users/QuineDot/following{/other_user}", "gists_url": "https://api.github.com/users/QuineDot/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuineDot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuineDot/subscriptions", "organizations_url": "https://api.github.com/users/QuineDot/orgs", "repos_url": "https://api.github.com/users/QuineDot/repos", "events_url": "https://api.github.com/users/QuineDot/events{/privacy}", "received_events_url": "https://api.github.com/users/QuineDot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 3675472455, "node_id": "LA_kwDOAAsO6M7bE0JH", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-variance", "name": "A-variance", "color": "f7e101", "default": false, "description": "Area: Variance (https://doc.rust-lang.org/nomicon/subtyping.html)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-03-02T03:31:22Z", "updated_at": "2023-03-02T03:31:24Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "### Code\n\n```Rust\ntrait Slice {\r\n    type S<'a>: Copy\r\n    where\r\n        Self: 'a;\r\n}\r\n\r\nstruct Foo<'a, L: Slice + 'a> {\r\n    foo: L::S<'a>,\r\n}\r\n\r\nimpl<'a, L: Slice + 'a> Foo<'a, L> {\r\n    fn foo(&self) -> L::S<'_> {\r\n        self.foo\r\n    }\r\n}\n```\n\n\n### Current output\n\n```Shell\nerror: lifetime may not live long enough\r\n  --> src/lib.rs:13:9\r\n   |\r\n11 | impl<'a, L: Slice + 'a> Foo<'a, L> {\r\n   |      -- lifetime `'a` defined here\r\n12 |     fn foo(&self) -> L::S<'_> {\r\n   |            - let's call the lifetime of this reference `'1`\r\n13 |         self.foo\r\n   |         ^^^^^^^^ associated function was supposed to return data with lifetime `'a` but it is returning data with lifetime `'1`\n```\n\n\n### Desired output\n\n```Shell\nerror: GAT parameters are invariant\r\n  --> src/lib.rs:13:9\r\n   |\r\n11 | impl<'a, L: Slice + 'a> Foo<'a, L> {\r\n   |      -- lifetime `'a` defined here\r\n12 |     fn foo(&self) -> L::S<'_> {\r\n   |            - let's call the lifetime of this reference `'1`\r\n13 |         self.foo\r\n   |         ^^^^^^^^ associated function was supposed to return data with lifetime `'1` but it is returning data with lifetime `'a`\r\n\r\nerror: could not compile `playground` due to previous error\n```\n\n\n### Rationale and extra context\n\nThe current error seems to assume a typical covariant-situation error where one is trying to return a long-lived value from behind a short-lived reference, and says that:\r\n> lifetime may not live long enough\r\n>\r\n> associated function was supposed to return data with lifetime `'a` but it is returning data with lifetime `'1`\r\n\r\nBut actually the opposite is true: the function was supposed to return data with lifetime `'1` but is returning data with lifetime `'a` because the GAT in question is invariant in `'a`.  You could say that `'1` doesn't live long enough, but in my opinion it would be better to say that `'a` is invariant (and thus doesn't \"live short enough\").\r\n\r\n[Witnessed in this URLO topic by nnotaka.](https://users.rust-lang.org/t/having-trouble-understanding-gat-related-lifetime-issue/90173)\n\n### Other cases\n\n```Rust\n// This one gives better diagnostics w.r.t. variance but\r\n// still gets the \"supposed to return\" lifetimes backwards \r\nstruct Foo2<'a> {\r\n    foo: *mut &'a str,\r\n}\r\n\r\nimpl<'a> Foo2<'a> {\r\n    fn foo(&self) -> *mut &str {\r\n        self.foo\r\n    }\r\n}\r\n\r\n// This contravariant case suggests a bound which is\r\n// effectively invariant, but still gets the lifetimes\r\n// backwards\r\nstruct Foo3<'a> {\r\n    foo: &'a dyn Fn(&'a str),\r\n}\r\n\r\nimpl<'a> Foo3<'a> {\r\n    fn foo<'b>(&'b self) -> &'b dyn Fn(&'b str) {\r\n        self.foo\r\n    }\r\n}\n```\n\n\n### Anything else?\n\n* [Main playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=0d03ea1c1e933db07dce1b786e74d4b4)\r\n* [`*mut` playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=8df1a6ba114ac03acc6fcd3f59619aae)\r\n   ```rust\r\n   error: lifetime may not live long enough\r\n    --> src/lib.rs:7:9\r\n     |\r\n   5 | impl<'a> Foo2<'a> {\r\n     |      -- lifetime `'a` defined here\r\n   6 |     fn foo(&self) -> *mut &str {\r\n     |            - let's call the lifetime of this reference `'1`\r\n   7 |         self.foo\r\n     |         ^^^^^^^^ associated function was supposed to return data with lifetime `'a` but it is returning data with lifetime `'1`\r\n     |\r\n     = note: requirement occurs because of a mutable pointer to `&str`\r\n     = note: mutable pointers are invariant over their type parameter\r\n     = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance\r\n  ```\r\n* [`dyn Fn` playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=280abf36a5603f1eb090dee7fa8dbb16)\r\n   ```\r\n   error: lifetime may not live long enough\r\n    --> src/lib.rs:7:9\r\n     |\r\n   5 | impl<'a> Foo3<'a> {\r\n     |      -- lifetime `'a` defined here\r\n   6 |     fn foo<'b>(&'b self) -> &'b dyn Fn(&'b str) {\r\n     |            -- lifetime `'b` defined here\r\n   7 |         self.foo\r\n     |         ^^^^^^^^ associated function was supposed to return data with lifetime `'a` but it is returning data with lifetime `'b`\r\n     |\r\n     = help: consider adding the following bound: `'b: 'a`\r\n   ```\r\n* [Covariant case where the \"return data\" lifetimes are correct](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=f55deab4e244d845beb98c4d46568531)\r\n   ```\r\n   error: lifetime may not live long enough\r\n    --> src/lib.rs:7:9\r\n     |\r\n   5 | impl<'a> Foo4<'a> {\r\n     |      -- lifetime `'a` defined here\r\n   6 |     fn foo(&self) -> &'a str {\r\n     |            - let's call the lifetime of this reference `'1`\r\n   7 |         self.foo\r\n     |         ^^^^^^^^ associated function was supposed to return data with lifetime `'a` but it is returning data with lifetime `'1`\r\n   ```\r\n\r\n@rustbot label +A-lifetimes +A-variance ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108636/timeline", "performed_via_github_app": null, "state_reason": null}