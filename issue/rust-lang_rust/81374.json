{"url": "https://api.github.com/repos/rust-lang/rust/issues/81374", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81374/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81374/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81374/events", "html_url": "https://github.com/rust-lang/rust/issues/81374", "id": 793239071, "node_id": "MDU6SXNzdWU3OTMyMzkwNzE=", "number": 81374, "title": "Mixed type parameter names shown if a type-def from a third party crate is used", "user": {"login": "weiznich", "id": 1674512, "node_id": "MDQ6VXNlcjE2NzQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1674512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiznich", "html_url": "https://github.com/weiznich", "followers_url": "https://api.github.com/users/weiznich/followers", "following_url": "https://api.github.com/users/weiznich/following{/other_user}", "gists_url": "https://api.github.com/users/weiznich/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiznich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiznich/subscriptions", "organizations_url": "https://api.github.com/users/weiznich/orgs", "repos_url": "https://api.github.com/users/weiznich/repos", "events_url": "https://api.github.com/users/weiznich/events{/privacy}", "received_events_url": "https://api.github.com/users/weiznich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-01-25T10:09:49Z", "updated_at": "2021-03-26T03:36:41Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse diesel::prelude::*;\r\n\r\nlet conn = PgConnection::establish(\"\u2026\").unwrap();\r\nlet t = diesel::dsl::sql_query(\"\u2026\").load(&conn);\r\n```\r\n\r\nI expected to see an error message pointing out that I need to specify the type of `t` because of the definition of `load()` is generic. This could either point at `t` saying that it needs to know the type of this variable or the generic parameter for `load` saying that the user could specify that there as `.load::<SomeTypeHere>()`.\r\n\r\nInstead, I got a \"confusing\" error message telling me something about two different type parameters (`T` and `U`):\r\n\r\n```\r\nerror[E0282]: type annotations needed for `std::result::Result<Vec<T>, diesel::result::Error>`\r\n --> src/main.rs:8:41\r\n  |\r\n8 |     let t = diesel::dsl::sql_query(\"\u2026\").load(&conn);\r\n  |         -                               ^^^^ cannot infer type for type parameter `U` declared on the associated function `load`\r\n  |         |\r\n  |         consider giving `t` the explicit type `std::result::Result<Vec<T>, diesel::result::Error>`, where the type parameter `U` is specified\r\n```\r\n\r\nThe corresponding code in diesel roughly looks like:\r\n\r\n```rust\r\ntype QueryResult<T> = Result<T, \u2026>;\r\n\r\nstruct SqlQuery {\u2026}\r\n\r\nfn sql_query(q: &str) -> SqlQuery {}\r\n\r\ntrait LoadQuery<Conn, U> {\r\n    fn internal_load(self, conn: &Conn) -> QueryResult<Vec<U>>;\r\n}\r\n\r\nimpl<Conn, U> for SqlQuery where // does not matter \r\n{}\r\n\r\ntrait RunQueryDsl<Conn> {\r\n    fn load<U>(self, conn: &Conn) -> QueryResult<Vec<U>>\r\n    where Self: LoadQuery<Conn, U>\r\n    {\r\n        Self::internal_load(conn)\r\n    }\r\n}\r\n\r\nimpl<Conn, T> RunQueryDsl<Conn> for T {}\r\n```\r\n\r\nIt seems like rustc is missing up the generic type `T` from the typedef of `QueryResult` with the concrete generic type `U` from the `load` implementation.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.51.0-nightly (1d0d76f8d 2021-01-24)\r\nbinary: rustc\r\ncommit-hash: 1d0d76f8dd4f5f6ecbeab575b87edaf1c9f56bb8\r\ncommit-date: 2021-01-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.51.0-nightly\r\nLLVM version: 11.0.1\r\n```\r\n\r\n\r\n@rustbot modify labels: +D-confusing +A-diagnostics -C-Bug\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81374/timeline", "performed_via_github_app": null, "state_reason": null}