{"url": "https://api.github.com/repos/rust-lang/rust/issues/67105", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67105/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67105/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67105/events", "html_url": "https://github.com/rust-lang/rust/issues/67105", "id": 534307782, "node_id": "MDU6SXNzdWU1MzQzMDc3ODI=", "number": 67105, "title": "Supertrait method visible in generic but not non-generic code ", "user": {"login": "comex", "id": 47517, "node_id": "MDQ6VXNlcjQ3NTE3", "avatar_url": "https://avatars.githubusercontent.com/u/47517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comex", "html_url": "https://github.com/comex", "followers_url": "https://api.github.com/users/comex/followers", "following_url": "https://api.github.com/users/comex/following{/other_user}", "gists_url": "https://api.github.com/users/comex/gists{/gist_id}", "starred_url": "https://api.github.com/users/comex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comex/subscriptions", "organizations_url": "https://api.github.com/users/comex/orgs", "repos_url": "https://api.github.com/users/comex/repos", "events_url": "https://api.github.com/users/comex/events{/privacy}", "received_events_url": "https://api.github.com/users/comex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-06T23:32:34Z", "updated_at": "2019-12-06T23:42:41Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Suppose you `use` a trait but not its supertrait, then try to call a method from the supertrait using dot syntax.  This works if the receiver is a generic parameter bounded on the child trait, but not if it's a concrete type that implements the child trait.\r\n\r\nExample [(playground link)](https://play.rust-lang.org/?gist=ee809f4bdeec5c6cf7b1751ee1642193&version=stable&mode=debug&edition=2015):\r\n```rust\r\nmod private {\r\n    pub trait Super {\r\n        fn foo(self);\r\n    }\r\n    pub trait Child: Super {}\r\n\r\n    impl Super for u32 {\r\n        fn foo(self) {}\r\n    }\r\n    impl Child for u32 {}\r\n}\r\n\r\nuse private::Child;\r\n\r\nfn huh<T: Child>(x: T) {\r\n    x.foo(); // OK\r\n}\r\n\r\nfn hah(x: u32) {\r\n    huh(x); // OK\r\n    x.foo(); // error: no method named `foo` found\r\n             // for type `u32` in the current scope\r\n}\r\n```\r\n\r\nThis might be intended behavior, but in a quick search I didn't find any documentation of it, and it seems very strange.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67105/timeline", "performed_via_github_app": null, "state_reason": null}