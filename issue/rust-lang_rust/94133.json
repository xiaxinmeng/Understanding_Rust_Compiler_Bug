{"url": "https://api.github.com/repos/rust-lang/rust/issues/94133", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94133/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94133/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94133/events", "html_url": "https://github.com/rust-lang/rust/issues/94133", "id": 1143847632, "node_id": "I_kwDOAAsO6M5ELbrQ", "number": 94133, "title": "If/when LLVM switches to deref-at-point semantics, start applying `dereferenceable` to Box args/returns and loads of dereferenceable types", "user": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 762300676, "node_id": "MDU6TGFiZWw3NjIzMDA2NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-blocked", "name": "S-blocked", "color": "d3dddd", "default": false, "description": "Status: marked as blocked \u274c on something else such as an RFC or other implementation work."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-02-18T22:10:25Z", "updated_at": "2022-06-13T21:21:38Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Latest LLVM issue for context (currently abandoned and may not be revived): https://reviews.llvm.org/D110745\r\n\r\n1. because `dereferenceable` currently means \"dereferenceable everywhere\", we avoid applying `dereferenceable` attribute to `Box`:\r\n\r\nhttps://github.com/rust-lang/rust/blob/b8c56fa8c30821129b0960180f528d4a1a4f9316/compiler/rustc_middle/src/ty/layout.rs#L3074-L3080\r\n\r\n```\r\n// we could apply `dereferenceable_at_point` to the `x` argument\r\nfn foo(x: Box<u64>) -> u64 {\r\n    let value = *x;\r\n    // ...but we can't apply `dereferenceable_globally` to it, because that would allow `x` to be loaded from at this point, after the box is freed\r\n    value + 1\r\n}\r\n```\r\n\r\n2. we could use the same logic to apply `!dereferenceable` metadata to loads, e.g. here:\r\n\r\nhttps://github.com/rust-lang/rust/blob/b8c56fa8c30821129b0960180f528d4a1a4f9316/compiler/rustc_codegen_llvm/src/builder.rs#L476-L531\r\n\r\n```\r\nlet x = Box::new(42);\r\nlet ref1: &&u64 = &x.as_ref();\r\n// we could apply `!dereferenceable_at_point` to this load of `&u64`\r\nlet ref2: &u64 = *ref1;\r\ndbg!(ref2);\r\ndrop(x);\r\n// ...but we can't apply `!dereferenceable_globally` to it, because that would allow `ref2` to be loaded from at this point, after the box is freed\r\n```\r\n\r\n@rustbot label A-llvm T-compiler S-blocked", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94133/timeline", "performed_via_github_app": null, "state_reason": null}