{"url": "https://api.github.com/repos/rust-lang/rust/issues/62567", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62567/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62567/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62567/events", "html_url": "https://github.com/rust-lang/rust/issues/62567", "id": 466463531, "node_id": "MDU6SXNzdWU0NjY0NjM1MzE=", "number": 62567, "title": "Compile times suddenly extremly high", "user": {"login": "fabianvdW", "id": 27965216, "node_id": "MDQ6VXNlcjI3OTY1MjE2", "avatar_url": "https://avatars.githubusercontent.com/u/27965216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianvdW", "html_url": "https://github.com/fabianvdW", "followers_url": "https://api.github.com/users/fabianvdW/followers", "following_url": "https://api.github.com/users/fabianvdW/following{/other_user}", "gists_url": "https://api.github.com/users/fabianvdW/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianvdW/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianvdW/subscriptions", "organizations_url": "https://api.github.com/users/fabianvdW/orgs", "repos_url": "https://api.github.com/users/fabianvdW/repos", "events_url": "https://api.github.com/users/fabianvdW/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianvdW/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2019-07-10T18:50:17Z", "updated_at": "2019-07-18T19:04:47Z", "closed_at": "2019-07-18T19:04:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since one of my latest changes to my project, the compile times have been extremly high (jumping to >1min from about 15secs).\r\n\r\nI tried compiling the lib of this crate (it is to large to post here): \r\nhttps://github.com/fabianvdW/ChessInRust\r\nwith `cargo build--release --lib`\r\n\r\nCompiler output for release build:\r\n```\r\n   Compiling FabChess v0.1.0 (D:\\SchachReworked)\r\nwarning: field is never used: `stm_pieces_without_king`\r\n    --> src\\move_generation\\movegen.rs:1914:5\r\n     |\r\n1914 |     stm_pieces_without_king: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n     |\r\n     = note: #[warn(dead_code)] on by default\r\n\r\nwarning: field is never used: `all_pieces_without_stmking`\r\n    --> src\\move_generation\\movegen.rs:1917:5\r\n     |\r\n1917 |     all_pieces_without_stmking: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: field is never used: `enemy_pawns_westattack`\r\n    --> src\\move_generation\\movegen.rs:1922:5\r\n     |\r\n1922 |     enemy_pawns_westattack: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: field is never used: `enemy_pawns_eastattack`\r\n    --> src\\move_generation\\movegen.rs:1923:5\r\n     |\r\n1923 |     enemy_pawns_eastattack: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: field is never used: `enemy_king_attacks`\r\n    --> src\\move_generation\\movegen.rs:1926:5\r\n     |\r\n1926 |     enemy_king_attacks: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\n    Finished release [optimized] target(s) in 1m 20s\r\n```\r\n\r\nNote that this is with `lto=true`\r\n\r\nTime to investigate with `-Ztime-passes in nightly`:\r\n\r\n```\r\n   Compiling FabChess v0.1.0 (D:\\SchachReworked)\r\n  time: 0.033; rss: 25MB        parsing\r\n  time: 0.000; rss: 26MB        attributes injection\r\n  time: 0.000; rss: 26MB        recursion limit\r\n  time: 0.000; rss: 26MB        crate injection\r\n  time: 0.000; rss: 26MB        plugin loading\r\n  time: 0.000; rss: 26MB        plugin registration\r\n  time: 0.002; rss: 26MB        pre ast expansion lint checks\r\n    time: 0.062; rss: 50MB      expand crate\r\n    time: 0.000; rss: 50MB      check unused macros\r\n  time: 0.062; rss: 50MB        expansion\r\n  time: 0.000; rss: 50MB        maybe building test harness\r\n  time: 0.001; rss: 50MB        AST validation\r\n  time: 0.000; rss: 50MB        maybe creating a macro crate\r\n  time: 0.021; rss: 55MB        name resolution\r\n  time: 0.003; rss: 55MB        complete gated feature checking\r\n  time: 0.016; rss: 63MB        lowering ast -> hir\r\n  time: 0.004; rss: 63MB        early lint checks\r\n    time: 0.004; rss: 66MB      validate hir map\r\n  time: 0.024; rss: 66MB        indexing hir\r\n  time: 0.000; rss: 66MB        load query result cache\r\n  time: 0.000; rss: 66MB        dep graph tcx init\r\n    time: 0.000; rss: 66MB      looking for entry point\r\n    time: 0.000; rss: 67MB      looking for plugin registrar\r\n    time: 0.000; rss: 67MB      looking for derive registrar\r\n  time: 0.007; rss: 67MB        misc checking 1\r\n  time: 0.008; rss: 69MB        type collecting\r\n  time: 0.000; rss: 69MB        impl wf inference\r\n    time: 0.000; rss: 82MB      unsafety checking\r\n    time: 0.000; rss: 82MB      orphan checking\r\n  time: 0.031; rss: 82MB        coherence checking\r\n  time: 0.053; rss: 94MB        wf checking\r\n  time: 0.012; rss: 95MB        item-types checking\r\n  time: 0.442; rss: 113MB       item-bodies checking\r\n    time: 0.035; rss: 114MB     rvalue promotion + match checking\r\n    time: 0.012; rss: 114MB     liveness checking + intrinsic checking\r\n  time: 0.047; rss: 114MB       misc checking 2\r\n  time: 0.000; rss: 114MB       borrow checking\r\n  time: 0.307; rss: 137MB       MIR borrow checking\r\n  time: 0.000; rss: 137MB       dumping chalk-like clauses\r\n  time: 0.000; rss: 137MB       MIR effect checking\r\n  time: 0.000; rss: 137MB       layout testing\r\n    time: 0.005; rss: 137MB     privacy access levels\r\n    time: 0.002; rss: 137MB     private in public\r\nwarning: field is never used: `stm_pieces_without_king`\r\n    --> src\\move_generation\\movegen.rs:1914:5\r\n     |\r\n1914 |     stm_pieces_without_king: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n     |\r\n     = note: #[warn(dead_code)] on by default\r\n\r\nwarning: field is never used: `all_pieces_without_stmking`\r\n    --> src\\move_generation\\movegen.rs:1917:5\r\n     |\r\n1917 |     all_pieces_without_stmking: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: field is never used: `enemy_pawns_westattack`\r\n    --> src\\move_generation\\movegen.rs:1922:5\r\n     |\r\n1922 |     enemy_pawns_westattack: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: field is never used: `enemy_pawns_eastattack`\r\n    --> src\\move_generation\\movegen.rs:1923:5\r\n     |\r\n1923 |     enemy_pawns_eastattack: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: field is never used: `enemy_king_attacks`\r\n    --> src\\move_generation\\movegen.rs:1926:5\r\n     |\r\n1926 |     enemy_king_attacks: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\n    time: 0.019; rss: 137MB     death checking\r\n    time: 0.001; rss: 137MB     unused lib feature checking\r\n      time: 0.013; rss: 138MB   crate lints\r\n      time: 0.006; rss: 138MB   module lints\r\n    time: 0.019; rss: 138MB     lint checking\r\n    time: 0.010; rss: 138MB     privacy checking modules\r\n  time: 0.057; rss: 138MB       misc checking 3\r\n  time: 0.000; rss: 138MB       resolving dependency formats\r\n  time: 0.034; rss: 140MB       metadata encoding and writing\r\n      time: 0.001; rss: 140MB   collecting roots\r\n      time: 0.156; rss: 149MB   collecting mono items\r\n    time: 0.157; rss: 149MB     monomorphization collection\r\n    time: 0.004; rss: 151MB     codegen unit partitioning\r\n    time: 0.014; rss: 159MB     llvm function passes [core.bvutizoj-cgu.0]\r\n    time: 0.019; rss: 168MB     llvm function passes [core.bvutizoj-cgu.13]\r\n    time: 0.014; rss: 172MB     llvm function passes [core.bvutizoj-cgu.7]\r\n    time: 0.013; rss: 179MB     llvm function passes [core.bvutizoj-cgu.8]\r\n    time: 0.304; rss: 184MB     llvm module passes [core.bvutizoj-cgu.13]\r\n    time: 0.213; rss: 184MB     llvm module passes [core.bvutizoj-cgu.8]\r\n    time: 0.011; rss: 184MB     llvm function passes [core.bvutizoj-cgu.15]\r\n    time: 0.335; rss: 185MB     llvm module passes [core.bvutizoj-cgu.7]\r\n    time: 0.011; rss: 186MB     llvm function passes [core.bvutizoj-cgu.1]\r\n    time: 0.012; rss: 186MB     llvm function passes [core.bvutizoj-cgu.4]\r\n    time: 0.229; rss: 187MB     llvm module passes [core.bvutizoj-cgu.15]\r\n    time: 0.200; rss: 187MB     llvm module passes [core.bvutizoj-cgu.1]\r\n    time: 0.012; rss: 185MB     llvm function passes [core.bvutizoj-cgu.3]\r\n    time: 0.218; rss: 186MB     llvm module passes [core.bvutizoj-cgu.4]\r\n    time: 0.010; rss: 186MB     llvm function passes [core.bvutizoj-cgu.11]\r\n    time: 0.698; rss: 186MB     llvm module passes [core.bvutizoj-cgu.0]\r\n    time: 0.008; rss: 186MB     llvm function passes [core.bvutizoj-cgu.5]\r\n    time: 0.008; rss: 183MB     llvm function passes [core.bvutizoj-cgu.14]\r\n    time: 0.133; rss: 183MB     llvm module passes [core.bvutizoj-cgu.3]\r\n    time: 0.006; rss: 184MB     llvm function passes [core.bvutizoj-cgu.6]\r\n    time: 0.096; rss: 184MB     llvm module passes [core.bvutizoj-cgu.5]\r\n    time: 0.006; rss: 184MB     llvm function passes [core.bvutizoj-cgu.9]\r\n    time: 0.228; rss: 184MB     llvm module passes [core.bvutizoj-cgu.11]\r\n    time: 0.005; rss: 185MB     llvm function passes [core.bvutizoj-cgu.2]\r\n    time: 0.122; rss: 185MB     llvm module passes [core.bvutizoj-cgu.9]\r\n    time: 0.308; rss: 185MB     codegen to LLVM IR\r\n    time: 0.000; rss: 185MB     assert dep graph\r\n    time: 0.000; rss: 185MB     serialize dep graph\r\n  time: 1.168; rss: 185MB       codegen\r\n    time: 0.004; rss: 180MB     llvm function passes [core.bvutizoj-cgu.10]\r\n    time: 0.160; rss: 154MB     llvm module passes [core.bvutizoj-cgu.6]\r\n    time: 0.003; rss: 127MB     llvm function passes [core.bvutizoj-cgu.12]\r\n    time: 0.049; rss: 127MB     llvm module passes [core.bvutizoj-cgu.10]\r\n    time: 0.098; rss: 119MB     llvm module passes [core.bvutizoj-cgu.2]\r\n    time: 0.054; rss: 120MB     llvm module passes [core.bvutizoj-cgu.12]\r\n    time: 0.269; rss: 117MB     llvm module passes [core.bvutizoj-cgu.14]\r\n    time: 0.185; rss: 126MB     LTO passes\r\n    time: 0.194; rss: 126MB     LTO passes\r\n    time: 0.330; rss: 137MB     LTO passes\r\n    time: 0.171; rss: 138MB     codegen passes [core.bvutizoj-cgu.8]\r\n    time: 0.190; rss: 138MB     codegen passes [core.bvutizoj-cgu.13]\r\n    time: 0.296; rss: 181MB     codegen passes [core.bvutizoj-cgu.15]\r\n    time: 0.281; rss: 193MB     LTO passes\r\n    time: 0.337; rss: 194MB     LTO passes\r\n    time: 0.202; rss: 200MB     LTO passes\r\n    time: 0.186; rss: 203MB     codegen passes [core.bvutizoj-cgu.4]\r\n    time: 0.136; rss: 201MB     codegen passes [core.bvutizoj-cgu.7]\r\n    time: 0.281; rss: 201MB     codegen passes [core.bvutizoj-cgu.1]\r\n    time: 0.208; rss: 204MB     LTO passes\r\n    time: 0.137; rss: 208MB     LTO passes\r\n    time: 0.123; rss: 221MB     codegen passes [core.bvutizoj-cgu.5]\r\n    time: 0.227; rss: 236MB     codegen passes [core.bvutizoj-cgu.6]\r\n    time: 0.158; rss: 236MB     LTO passes\r\n    time: 0.278; rss: 236MB     LTO passes\r\n    time: 0.100; rss: 236MB     codegen passes [core.bvutizoj-cgu.2]\r\n    time: 0.194; rss: 236MB     codegen passes [core.bvutizoj-cgu.11]\r\n    time: 0.242; rss: 241MB     LTO passes\r\n    time: 0.101; rss: 237MB     LTO passes\r\n    time: 0.943; rss: 237MB     LTO passes\r\n    time: 0.089; rss: 236MB     codegen passes [core.bvutizoj-cgu.10]\r\n    time: 0.080; rss: 236MB     LTO passes\r\n    time: 0.236; rss: 236MB     codegen passes [core.bvutizoj-cgu.9]\r\n    time: 0.079; rss: 238MB     codegen passes [core.bvutizoj-cgu.12]\r\n    time: 0.028; rss: 238MB     LTO passes\r\n    time: 0.033; rss: 238MB     codegen passes [core.bvutizoj-cgu.3]\r\n    time: 1.945; rss: 232MB     codegen passes [core.bvutizoj-cgu.14]\r\n    time: 67.772; rss: 210MB    LTO passes\r\n    time: 10.011; rss: 203MB    codegen passes [core.bvutizoj-cgu.0]\r\n  time: 79.051; rss: 119MB      LLVM passes\r\n  time: 0.000; rss: 116MB       serialize work products\r\n  time: 0.047; rss: 117MB       linking\r\ntime: 80.495; rss: 67MB         total\r\n    Finished release [optimized] target(s) in 1m 20s\r\n```\r\n\r\nThis, to me, suggests turning LTO off. \r\nWith LTO off: \r\n```\r\n   Compiling FabChess v0.1.0 (D:\\SchachReworked)\r\n  time: 0.029; rss: 25MB        parsing\r\n  time: 0.000; rss: 26MB        attributes injection\r\n  time: 0.000; rss: 26MB        recursion limit\r\n  time: 0.000; rss: 26MB        crate injection\r\n  time: 0.000; rss: 26MB        plugin loading\r\n  time: 0.000; rss: 26MB        plugin registration\r\n  time: 0.002; rss: 26MB        pre ast expansion lint checks\r\n    time: 0.065; rss: 50MB      expand crate\r\n    time: 0.000; rss: 50MB      check unused macros\r\n  time: 0.066; rss: 50MB        expansion\r\n  time: 0.000; rss: 50MB        maybe building test harness\r\n  time: 0.001; rss: 50MB        AST validation\r\n  time: 0.000; rss: 50MB        maybe creating a macro crate\r\n  time: 0.022; rss: 55MB        name resolution\r\n  time: 0.003; rss: 55MB        complete gated feature checking\r\n  time: 0.017; rss: 63MB        lowering ast -> hir\r\n  time: 0.004; rss: 63MB        early lint checks\r\n    time: 0.003; rss: 66MB      validate hir map\r\n  time: 0.021; rss: 66MB        indexing hir\r\n  time: 0.000; rss: 66MB        load query result cache\r\n  time: 0.000; rss: 66MB        dep graph tcx init\r\n    time: 0.000; rss: 66MB      looking for entry point\r\n    time: 0.000; rss: 66MB      looking for plugin registrar\r\n    time: 0.000; rss: 66MB      looking for derive registrar\r\n  time: 0.006; rss: 67MB        misc checking 1\r\n  time: 0.010; rss: 69MB        type collecting\r\n  time: 0.001; rss: 69MB        impl wf inference\r\n    time: 0.000; rss: 82MB      unsafety checking\r\n    time: 0.000; rss: 82MB      orphan checking\r\n  time: 0.034; rss: 82MB        coherence checking\r\n  time: 0.053; rss: 94MB        wf checking\r\n  time: 0.012; rss: 95MB        item-types checking\r\n  time: 0.436; rss: 113MB       item-bodies checking\r\n    time: 0.038; rss: 114MB     rvalue promotion + match checking\r\n    time: 0.012; rss: 114MB     liveness checking + intrinsic checking\r\n  time: 0.050; rss: 114MB       misc checking 2\r\n  time: 0.000; rss: 114MB       borrow checking\r\n  time: 0.308; rss: 136MB       MIR borrow checking\r\n  time: 0.000; rss: 136MB       dumping chalk-like clauses\r\n  time: 0.000; rss: 136MB       MIR effect checking\r\n  time: 0.000; rss: 136MB       layout testing\r\n    time: 0.005; rss: 137MB     privacy access levels\r\n    time: 0.002; rss: 137MB     private in public\r\nwarning: field is never used: `stm_pieces_without_king`\r\n    --> src\\move_generation\\movegen.rs:1914:5\r\n     |\r\n1914 |     stm_pieces_without_king: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n     |\r\n     = note: #[warn(dead_code)] on by default\r\n\r\nwarning: field is never used: `all_pieces_without_stmking`\r\n    --> src\\move_generation\\movegen.rs:1917:5\r\n     |\r\n1917 |     all_pieces_without_stmking: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: field is never used: `enemy_pawns_westattack`\r\n    --> src\\move_generation\\movegen.rs:1922:5\r\n     |\r\n1922 |     enemy_pawns_westattack: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: field is never used: `enemy_pawns_eastattack`\r\n    --> src\\move_generation\\movegen.rs:1923:5\r\n     |\r\n1923 |     enemy_pawns_eastattack: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: field is never used: `enemy_king_attacks`\r\n    --> src\\move_generation\\movegen.rs:1926:5\r\n     |\r\n1926 |     enemy_king_attacks: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\n    time: 0.018; rss: 137MB     death checking\r\n    time: 0.001; rss: 137MB     unused lib feature checking\r\n      time: 0.012; rss: 138MB   crate lints\r\n      time: 0.006; rss: 138MB   module lints\r\n    time: 0.018; rss: 138MB     lint checking\r\n    time: 0.010; rss: 138MB     privacy checking modules\r\n  time: 0.055; rss: 138MB       misc checking 3\r\n  time: 0.000; rss: 138MB       resolving dependency formats\r\n  time: 0.036; rss: 139MB       metadata encoding and writing\r\n      time: 0.001; rss: 140MB   collecting roots\r\n      time: 0.161; rss: 149MB   collecting mono items\r\n    time: 0.163; rss: 149MB     monomorphization collection\r\n    time: 0.004; rss: 151MB     codegen unit partitioning\r\n    time: 0.013; rss: 159MB     llvm function passes [core.420y0oqy-cgu.0]\r\n    time: 0.019; rss: 168MB     llvm function passes [core.420y0oqy-cgu.13]\r\n    time: 0.014; rss: 173MB     llvm function passes [core.420y0oqy-cgu.7]\r\n    time: 0.013; rss: 179MB     llvm function passes [core.420y0oqy-cgu.8]\r\n    time: 0.290; rss: 184MB     llvm module passes [core.420y0oqy-cgu.13]\r\n    time: 0.205; rss: 184MB     llvm module passes [core.420y0oqy-cgu.8]\r\n    time: 0.011; rss: 185MB     llvm function passes [core.420y0oqy-cgu.15]\r\n    time: 0.012; rss: 185MB     llvm function passes [core.420y0oqy-cgu.4]\r\n    time: 0.338; rss: 185MB     llvm module passes [core.420y0oqy-cgu.7]\r\n    time: 0.011; rss: 185MB     llvm function passes [core.420y0oqy-cgu.1]\r\n    time: 0.225; rss: 186MB     llvm module passes [core.420y0oqy-cgu.15]\r\n    time: 0.217; rss: 186MB     llvm module passes [core.420y0oqy-cgu.4]\r\n    time: 0.012; rss: 186MB     llvm function passes [core.420y0oqy-cgu.3]\r\n    time: 0.201; rss: 186MB     llvm module passes [core.420y0oqy-cgu.1]\r\n    time: 0.010; rss: 186MB     llvm function passes [core.420y0oqy-cgu.11]\r\n    time: 0.689; rss: 186MB     llvm module passes [core.420y0oqy-cgu.0]\r\n    time: 0.007; rss: 184MB     llvm function passes [core.420y0oqy-cgu.5]\r\n    time: 0.008; rss: 182MB     llvm function passes [core.420y0oqy-cgu.14]\r\n    time: 0.129; rss: 182MB     llvm module passes [core.420y0oqy-cgu.3]\r\n    time: 0.092; rss: 182MB     llvm module passes [core.420y0oqy-cgu.5]\r\n    time: 0.006; rss: 183MB     llvm function passes [core.420y0oqy-cgu.6]\r\n    time: 0.006; rss: 183MB     llvm function passes [core.420y0oqy-cgu.9]\r\n    time: 0.218; rss: 184MB     llvm module passes [core.420y0oqy-cgu.11]\r\n    time: 0.004; rss: 184MB     llvm function passes [core.420y0oqy-cgu.2]\r\n    time: 0.137; rss: 184MB     llvm module passes [core.420y0oqy-cgu.9]\r\n    time: 0.299; rss: 184MB     codegen to LLVM IR\r\n    time: 0.000; rss: 184MB     assert dep graph\r\n    time: 0.000; rss: 184MB     serialize dep graph\r\n  time: 1.170; rss: 184MB       codegen\r\n    time: 0.004; rss: 154MB     llvm function passes [core.420y0oqy-cgu.10]\r\n    time: 0.075; rss: 124MB     llvm module passes [core.420y0oqy-cgu.2]\r\n    time: 0.202; rss: 119MB     llvm module passes [core.420y0oqy-cgu.6]\r\n    time: 0.004; rss: 119MB     llvm function passes [core.420y0oqy-cgu.12]\r\n    time: 0.291; rss: 120MB     llvm module passes [core.420y0oqy-cgu.14]\r\n    time: 0.054; rss: 120MB     llvm module passes [core.420y0oqy-cgu.10]\r\n    time: 0.054; rss: 113MB     llvm module passes [core.420y0oqy-cgu.12]\r\n    time: 0.190; rss: 125MB     LTO passes\r\n    time: 0.194; rss: 125MB     LTO passes\r\n    time: 0.330; rss: 136MB     LTO passes\r\n    time: 0.169; rss: 137MB     codegen passes [core.420y0oqy-cgu.8]\r\n    time: 0.200; rss: 136MB     codegen passes [core.420y0oqy-cgu.13]\r\n    time: 0.282; rss: 179MB     codegen passes [core.420y0oqy-cgu.15]\r\n    time: 0.285; rss: 193MB     LTO passes\r\n    time: 0.349; rss: 192MB     LTO passes\r\n    time: 0.201; rss: 192MB     LTO passes\r\n    time: 0.178; rss: 203MB     codegen passes [core.420y0oqy-cgu.4]\r\n    time: 0.136; rss: 200MB     codegen passes [core.420y0oqy-cgu.7]\r\n    time: 0.311; rss: 206MB     codegen passes [core.420y0oqy-cgu.1]\r\n    time: 0.219; rss: 204MB     LTO passes\r\n    time: 0.136; rss: 209MB     LTO passes\r\n    time: 0.131; rss: 236MB     codegen passes [core.420y0oqy-cgu.5]\r\n    time: 0.212; rss: 232MB     codegen passes [core.420y0oqy-cgu.6]\r\n    time: 0.159; rss: 237MB     LTO passes\r\n    time: 0.251; rss: 238MB     LTO passes\r\n    time: 0.104; rss: 238MB     codegen passes [core.420y0oqy-cgu.2]\r\n    time: 0.189; rss: 235MB     codegen passes [core.420y0oqy-cgu.11]\r\n    time: 0.264; rss: 235MB     LTO passes\r\n    time: 0.104; rss: 235MB     LTO passes\r\n    time: 0.921; rss: 235MB     LTO passes\r\n    time: 0.086; rss: 234MB     codegen passes [core.420y0oqy-cgu.10]\r\n    time: 0.079; rss: 235MB     LTO passes\r\n    time: 0.220; rss: 235MB     codegen passes [core.420y0oqy-cgu.9]\r\n    time: 0.091; rss: 237MB     codegen passes [core.420y0oqy-cgu.12]\r\n    time: 0.031; rss: 237MB     LTO passes\r\n    time: 0.034; rss: 237MB     codegen passes [core.420y0oqy-cgu.3]\r\n    time: 1.912; rss: 231MB     codegen passes [core.420y0oqy-cgu.14]\r\n    time: 69.354; rss: 210MB    LTO passes\r\n    time: 11.056; rss: 200MB    codegen passes [core.420y0oqy-cgu.0]\r\n  time: 81.705; rss: 119MB      LLVM passes\r\n  time: 0.000; rss: 117MB       serialize work products\r\n  time: 0.046; rss: 117MB       linking\r\ntime: 83.154; rss: 67MB         total\r\n    Finished release [optimized] target(s) in 1m 23s\r\n```\r\n\r\nThis all started happening after [this commit](https://github.com/fabianvdW/ChessInRust/commit/563754658c120e5429e5f2d8eca6351c9bf43057) where I made some minor changes.\r\nBefore this commit, even with `lto=true`, it looks like this(and is blazingly fast):\r\n```\r\n   Compiling FabChess v0.1.0 (D:\\SchachTest)\r\n  time: 0.028; rss: 25MB        parsing\r\n  time: 0.000; rss: 25MB        attributes injection\r\n  time: 0.000; rss: 25MB        recursion limit\r\n  time: 0.000; rss: 25MB        crate injection\r\n  time: 0.000; rss: 25MB        plugin loading\r\n  time: 0.000; rss: 25MB        plugin registration\r\n  time: 0.002; rss: 25MB        pre ast expansion lint checks\r\n    time: 0.058; rss: 50MB      expand crate\r\n    time: 0.000; rss: 50MB      check unused macros\r\n  time: 0.059; rss: 50MB        expansion\r\n  time: 0.000; rss: 50MB        maybe building test harness\r\n  time: 0.001; rss: 50MB        AST validation\r\n  time: 0.000; rss: 50MB        maybe creating a macro crate\r\n  time: 0.021; rss: 55MB        name resolution\r\n  time: 0.003; rss: 55MB        complete gated feature checking\r\n  time: 0.017; rss: 63MB        lowering ast -> hir\r\n  time: 0.004; rss: 63MB        early lint checks\r\n    time: 0.003; rss: 66MB      validate hir map\r\n  time: 0.021; rss: 66MB        indexing hir\r\n  time: 0.000; rss: 66MB        load query result cache\r\n  time: 0.000; rss: 66MB        dep graph tcx init\r\n    time: 0.000; rss: 66MB      looking for entry point\r\n    time: 0.000; rss: 66MB      looking for plugin registrar\r\n    time: 0.000; rss: 66MB      looking for derive registrar\r\n  time: 0.005; rss: 67MB        misc checking 1\r\n  time: 0.009; rss: 69MB        type collecting\r\n  time: 0.000; rss: 69MB        impl wf inference\r\n    time: 0.000; rss: 82MB      unsafety checking\r\n    time: 0.000; rss: 82MB      orphan checking\r\n  time: 0.032; rss: 82MB        coherence checking\r\n  time: 0.052; rss: 93MB        wf checking\r\n  time: 0.013; rss: 95MB        item-types checking\r\n  time: 0.478; rss: 112MB       item-bodies checking\r\n    time: 0.039; rss: 113MB     rvalue promotion + match checking\r\n    time: 0.012; rss: 113MB     liveness checking + intrinsic checking\r\n  time: 0.052; rss: 113MB       misc checking 2\r\n  time: 0.000; rss: 113MB       borrow checking\r\n  time: 0.342; rss: 136MB       MIR borrow checking\r\n  time: 0.000; rss: 136MB       dumping chalk-like clauses\r\n  time: 0.000; rss: 136MB       MIR effect checking\r\n  time: 0.000; rss: 136MB       layout testing\r\n    time: 0.006; rss: 136MB     privacy access levels\r\n    time: 0.003; rss: 137MB     private in public\r\nwarning: field is never used: `stm_pieces_without_king`\r\n    --> src\\move_generation\\movegen.rs:1913:5\r\n     |\r\n1913 |     stm_pieces_without_king: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n     |\r\n     = note: #[warn(dead_code)] on by default\r\n\r\nwarning: field is never used: `all_pieces_without_stmking`\r\n    --> src\\move_generation\\movegen.rs:1916:5\r\n     |\r\n1916 |     all_pieces_without_stmking: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: field is never used: `enemy_pawns_westattack`\r\n    --> src\\move_generation\\movegen.rs:1921:5\r\n     |\r\n1921 |     enemy_pawns_westattack: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: field is never used: `enemy_pawns_eastattack`\r\n    --> src\\move_generation\\movegen.rs:1922:5\r\n     |\r\n1922 |     enemy_pawns_eastattack: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: field is never used: `enemy_king_attacks`\r\n    --> src\\move_generation\\movegen.rs:1925:5\r\n     |\r\n1925 |     enemy_king_attacks: u64,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: field is never used: `stm_incheck`\r\n    --> src\\move_generation\\movegen.rs:2097:5\r\n     |\r\n2097 |     stm_incheck: bool,\r\n     |     ^^^^^^^^^^^^^^^^^\r\n\r\nwarning: field is never used: `stm_haslegalmove`\r\n    --> src\\move_generation\\movegen.rs:2098:5\r\n     |\r\n2098 |     stm_haslegalmove: bool,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: field is never used: `additional_bitboards`\r\n    --> src\\move_generation\\movegen.rs:2099:5\r\n     |\r\n2099 |     additional_bitboards: AdditionalBitBoards,\r\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\n    time: 0.027; rss: 137MB     death checking\r\n    time: 0.001; rss: 137MB     unused lib feature checking\r\n      time: 0.015; rss: 137MB   crate lints\r\n      time: 0.007; rss: 138MB   module lints\r\n    time: 0.022; rss: 138MB     lint checking\r\n    time: 0.011; rss: 138MB     privacy checking modules\r\n  time: 0.071; rss: 138MB       misc checking 3\r\n  time: 0.000; rss: 138MB       resolving dependency formats\r\n  time: 0.034; rss: 139MB       metadata encoding and writing\r\n      time: 0.001; rss: 139MB   collecting roots\r\n      time: 0.157; rss: 149MB   collecting mono items\r\n    time: 0.158; rss: 149MB     monomorphization collection\r\n    time: 0.004; rss: 150MB     codegen unit partitioning\r\n    time: 0.014; rss: 159MB     llvm function passes [core.bvutizoj-cgu.0]\r\n    time: 0.020; rss: 167MB     llvm function passes [core.bvutizoj-cgu.13]\r\n    time: 0.016; rss: 171MB     llvm function passes [core.bvutizoj-cgu.4]\r\n    time: 0.012; rss: 177MB     llvm function passes [core.bvutizoj-cgu.15]\r\n    time: 0.402; rss: 183MB     llvm module passes [core.bvutizoj-cgu.0]\r\n    time: 0.350; rss: 183MB     llvm module passes [core.bvutizoj-cgu.13]\r\n    time: 0.258; rss: 181MB     llvm module passes [core.bvutizoj-cgu.15]\r\n    time: 0.012; rss: 181MB     llvm function passes [core.bvutizoj-cgu.1]\r\n    time: 0.014; rss: 183MB     llvm function passes [core.bvutizoj-cgu.3]\r\n    time: 0.378; rss: 183MB     llvm module passes [core.bvutizoj-cgu.4]\r\n    time: 0.013; rss: 183MB     llvm function passes [core.bvutizoj-cgu.8]\r\n    time: 0.013; rss: 184MB     llvm function passes [core.bvutizoj-cgu.5]\r\n    time: 0.145; rss: 184MB     llvm module passes [core.bvutizoj-cgu.3]\r\n    time: 0.010; rss: 184MB     llvm function passes [core.bvutizoj-cgu.11]\r\n    time: 0.206; rss: 184MB     llvm module passes [core.bvutizoj-cgu.1]\r\n    time: 0.007; rss: 184MB     llvm function passes [core.bvutizoj-cgu.7]\r\n    time: 0.214; rss: 184MB     llvm module passes [core.bvutizoj-cgu.8]\r\n    time: 0.008; rss: 184MB     llvm function passes [core.bvutizoj-cgu.14]\r\n    time: 0.231; rss: 184MB     llvm module passes [core.bvutizoj-cgu.5]\r\n    time: 0.085; rss: 185MB     llvm module passes [core.bvutizoj-cgu.7]\r\n    time: 0.006; rss: 185MB     llvm function passes [core.bvutizoj-cgu.6]\r\n    time: 0.006; rss: 185MB     llvm function passes [core.bvutizoj-cgu.9]\r\n    time: 0.230; rss: 185MB     llvm module passes [core.bvutizoj-cgu.11]\r\n    time: 0.005; rss: 182MB     llvm function passes [core.bvutizoj-cgu.2]\r\n    time: 0.128; rss: 182MB     llvm module passes [core.bvutizoj-cgu.9]\r\n    time: 0.343; rss: 183MB     codegen to LLVM IR\r\n    time: 0.000; rss: 183MB     assert dep graph\r\n    time: 0.000; rss: 183MB     serialize dep graph\r\n  time: 1.147; rss: 183MB       codegen\r\n    time: 0.003; rss: 178MB     llvm function passes [core.bvutizoj-cgu.10]\r\n    time: 0.166; rss: 170MB     llvm module passes [core.bvutizoj-cgu.6]\r\n    time: 0.003; rss: 124MB     llvm function passes [core.bvutizoj-cgu.12]\r\n    time: 0.094; rss: 124MB     llvm module passes [core.bvutizoj-cgu.2]\r\n    time: 0.052; rss: 120MB     llvm module passes [core.bvutizoj-cgu.10]\r\n    time: 0.055; rss: 121MB     llvm module passes [core.bvutizoj-cgu.12]\r\n    time: 0.287; rss: 118MB     llvm module passes [core.bvutizoj-cgu.14]\r\n    time: 0.184; rss: 125MB     LTO passes\r\n    time: 0.195; rss: 127MB     LTO passes\r\n    time: 0.337; rss: 134MB     LTO passes\r\n    time: 0.354; rss: 135MB     LTO passes\r\n    time: 0.163; rss: 135MB     codegen passes [core.bvutizoj-cgu.8]\r\n    time: 0.180; rss: 134MB     codegen passes [core.bvutizoj-cgu.13]\r\n    time: 0.274; rss: 146MB     codegen passes [core.bvutizoj-cgu.1]\r\n    time: 0.273; rss: 142MB     codegen passes [core.bvutizoj-cgu.15]\r\n    time: 0.286; rss: 139MB     LTO passes\r\n    time: 0.202; rss: 142MB     LTO passes\r\n    time: 0.220; rss: 142MB     LTO passes\r\n    time: 0.172; rss: 143MB     codegen passes [core.bvutizoj-cgu.5]\r\n    time: 0.118; rss: 140MB     LTO passes\r\n    time: 0.147; rss: 140MB     codegen passes [core.bvutizoj-cgu.4]\r\n    time: 0.201; rss: 141MB     codegen passes [core.bvutizoj-cgu.6]\r\n    time: 0.713; rss: 141MB     LTO passes\r\n    time: 0.105; rss: 146MB     codegen passes [core.bvutizoj-cgu.7]\r\n    time: 0.160; rss: 152MB     LTO passes\r\n    time: 0.286; rss: 153MB     LTO passes\r\n    time: 0.099; rss: 153MB     codegen passes [core.bvutizoj-cgu.2]\r\n    time: 0.188; rss: 166MB     codegen passes [core.bvutizoj-cgu.11]\r\n    time: 0.100; rss: 162MB     LTO passes\r\n    time: 0.306; rss: 162MB     LTO passes\r\n    time: 0.085; rss: 154MB     codegen passes [core.bvutizoj-cgu.10]\r\n    time: 0.727; rss: 150MB     codegen passes [core.bvutizoj-cgu.0]\r\n    time: 0.082; rss: 151MB     LTO passes\r\n    time: 0.030; rss: 151MB     LTO passes\r\n    time: 0.033; rss: 152MB     codegen passes [core.bvutizoj-cgu.3]\r\n    time: 0.906; rss: 152MB     LTO passes\r\n    time: 0.075; rss: 144MB     codegen passes [core.bvutizoj-cgu.12]\r\n    time: 0.218; rss: 139MB     codegen passes [core.bvutizoj-cgu.9]\r\n    time: 1.798; rss: 136MB     codegen passes [core.bvutizoj-cgu.14]\r\n  time: 4.836; rss: 117MB       LLVM passes\r\n  time: 0.000; rss: 115MB       serialize work products\r\n  time: 0.024; rss: 115MB       linking\r\ntime: 6.335; rss: 64MB          total\r\n    Finished release [optimized] target(s) in 6.60s\r\n```\r\nMy **stable** version:\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.36.0 (a53f9df32 2019-07-03)\r\nbinary: rustc\r\ncommit-hash: a53f9df32fbb0b5f4382caaad8f1a46f36ea887c\r\ncommit-date: 2019-07-03\r\nhost: x86_64-pc-windows-gnu\r\nrelease: 1.36.0\r\nLLVM version: 8.0\r\n```\r\n\r\nMy **nightly** version:\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.38.0-nightly (0b680cfce 2019-07-09)\r\nbinary: rustc\r\ncommit-hash: 0b680cfce544ff9a59d720020e397c4bf3346650\r\ncommit-date: 2019-07-09\r\nhost: x86_64-pc-windows-gnu\r\nrelease: 1.38.0-nightly\r\nLLVM version: 8.0\r\n```\r\n\r\n", "closed_by": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62567/timeline", "performed_via_github_app": null, "state_reason": "completed"}