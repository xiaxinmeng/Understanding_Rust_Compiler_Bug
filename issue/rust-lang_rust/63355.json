{"url": "https://api.github.com/repos/rust-lang/rust/issues/63355", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63355/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63355/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63355/events", "html_url": "https://github.com/rust-lang/rust/issues/63355", "id": 478047597, "node_id": "MDU6SXNzdWU0NzgwNDc1OTc=", "number": 63355, "title": "ICE with type_alias_impl_trait: errors selecting obligation during MIR typeck", "user": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-08-07T17:17:05Z", "updated_at": "2021-07-18T10:42:21Z", "closed_at": "2021-07-18T10:42:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```rust\r\n#![feature(type_alias_impl_trait)]\r\n\r\npub trait Foo {}\r\n\r\npub trait Bar {\r\n    type Foo: Foo;\r\n\r\n    fn foo() -> Self::Foo;\r\n}\r\n\r\npub trait Baz {\r\n    type Foo: Foo;\r\n    type Bar: Bar<Foo = Self::Foo>;\r\n\r\n    fn foo() -> Self::Foo;\r\n    fn bar() -> Self::Bar;\r\n}\r\n\r\nimpl Foo for () {}\r\n\r\nimpl Bar for () {\r\n    type Foo = FooImpl;\r\n\r\n    fn foo() -> Self::Foo {\r\n        ()\r\n    }\r\n}\r\n\r\npub type FooImpl = impl Foo;\r\npub type BarImpl = impl Bar<Foo = FooImpl>;\r\n\r\nimpl Baz for () {\r\n    type Foo = FooImpl;\r\n    type Bar = BarImpl;\r\n\r\n    fn foo() -> Self::Foo {\r\n        ()\r\n    }\r\n\r\n    fn bar() -> Self::Bar {\r\n        ()\r\n    }\r\n}\r\n```\r\n\r\n([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=713f4b9c997772f485c6338362e062b3))\r\n\r\n```\r\nerror: internal compiler error: errors selecting obligation during MIR typeck: [FulfillmentError(Obligation(predicate=Binder(ProjectionPredicate(ProjectionTy { substs: [()], item_def_id: DefId(0:14 ~ playground[6e48]::Bar[0]::Foo[0]) }, ())), depth=0),MismatchedProjectionTypes(Sorts(ExpectedFound { expected: FooImpl, found: () })))]\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src/librustc_errors/lib.rs:361:17\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.34/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.34/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:47\r\n   3: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:36\r\n   4: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:200\r\n   5: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:214\r\n   6: rustc::util::common::panic_hook\r\n   7: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:481\r\n   8: std::panicking::begin_panic\r\n   9: <rustc_errors::Handler as core::ops::drop::Drop>::drop\r\n  10: core::ptr::real_drop_in_place\r\n  11: <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop\r\n  12: core::ptr::real_drop_in_place\r\n  13: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  14: std::thread::local::LocalKey<T>::with\r\n  15: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\nchanging `type Foo = FooImpl;` into `type Foo = ();` inside `impl Bar for ()` will successfully compile", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63355/timeline", "performed_via_github_app": null, "state_reason": "completed"}