{"url": "https://api.github.com/repos/rust-lang/rust/issues/107920", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107920/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107920/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107920/events", "html_url": "https://github.com/rust-lang/rust/issues/107920", "id": 1580677346, "node_id": "I_kwDOAAsO6M5eNzji", "number": 107920, "title": "\"internal compiler error: cannot relate constants\" from const generic expression using generic associated types", "user": {"login": "chc4", "id": 1669003, "node_id": "MDQ6VXNlcjE2NjkwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/1669003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chc4", "html_url": "https://github.com/chc4", "followers_url": "https://api.github.com/users/chc4/followers", "following_url": "https://api.github.com/users/chc4/following{/other_user}", "gists_url": "https://api.github.com/users/chc4/gists{/gist_id}", "starred_url": "https://api.github.com/users/chc4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chc4/subscriptions", "organizations_url": "https://api.github.com/users/chc4/orgs", "repos_url": "https://api.github.com/users/chc4/repos", "events_url": "https://api.github.com/users/chc4/events{/privacy}", "received_events_url": "https://api.github.com/users/chc4/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-02-11T05:56:33Z", "updated_at": "2023-02-11T15:07:56Z", "closed_at": "2023-02-11T13:34:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was writing some code that uses traits with generic associated types and hit an ICE when adding const generic bounds to a function.\r\n\r\n### Code\r\n[Playground link](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=86d9ef4c48ad20320fd5c49e597acb95)\r\n\r\nI couldn't easily minimize it much more than this, unfortunately. The bound in question is `Equal<{ core::mem::size_of::<T>() }, { core::mem::size_of::<U>() }>: True`, and goes away if you remove the `TO` and `FROM` functions and definitions in the Tokenize trait. The ICE goes away if you change the left-hand to `core::mem::size_of::<T>() as usize` instead.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.69.0-nightly (2773383a3 2023-02-10)\r\nbinary: rustc\r\ncommit-hash: 2773383a314a4b8f481ce2bed12c32de794ffbe9\r\ncommit-date: 2023-02-10\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.69.0-nightly\r\nLLVM version: 15.0.7\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\r\n\r\nerror: internal compiler error: cannot relate constants (Const { ty: fn() -> usize {std::mem::size_of::<_>}, kind: Value(Branch([])) }, Const { ty: fn() -> usize {std::mem::size_of::<_>}, kind: Value(Branch([])) }) of different types: fn() -> usize {std::mem::size_of::<_>} != fn() -> usize {std::mem::size_of::<_>}\r\n  |\r\n  = note: delayed at    0: <rustc_errors::HandlerInner>::emit_diagnostic\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n0: <rustc_errors::HandlerInner>::emit_diagnostic\r\n             1: <rustc_errors::Handler>::delay_span_bug::<rustc_span::span_encoding::Span, &alloc::string::String>\r\n             2: rustc_middle::ty::relate::super_relate_consts::<rustc_infer::infer::equate::Equate>\r\n             3: <rustc_infer::infer::InferCtxt>::super_combine_consts::<rustc_infer::infer::equate::Equate>\r\n             4: rustc_middle::ty::relate::super_relate_consts::<rustc_infer::infer::equate::Equate>\r\n             5: <rustc_infer::infer::InferCtxt>::super_combine_consts::<rustc_infer::infer::equate::Equate>\r\n             6: <rustc_infer::infer::InferCtxt>::commit_if_ok::<rustc_infer::infer::InferOk<()>, rustc_middle::ty::error::TypeError, <rustc_infer::infer::at::Trace>::eq<rustc_middle::ty::consts::Const>::{closure#0}>\r\n             7: <rustc_infer::infer::at::At>::eq::<rustc_middle::ty::consts::Const>\r\n             8: <rustc_trait_selection::traits::fulfill::FulfillProcessor as rustc_data_structures::obligation_forest::ObligationProcessor>::process_obligation\r\n             9: <rustc_data_structures::obligation_forest::ObligationForest<rustc_trait_selection::traits::fulfill::PendingPredicateObligation>>::process_obligations::<rustc_trait_selection::traits::fulfill::FulfillProcessor>\r\n            10: <rustc_trait_selection::traits::fulfill::FulfillmentContext as rustc_infer::traits::engine::TraitEngine>::select_where_possible\r\n            11: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n            12: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_return_expr\r\n            13: rustc_hir_typeck::check::check_fn\r\n            14: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_closure\r\n            15: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n            16: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_argument_types\r\n            17: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n            18: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_argument_types\r\n            19: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_call\r\n            20: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n            21: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_block_with_expected\r\n            22: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n            23: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_return_expr\r\n            24: rustc_hir_typeck::check::check_fn\r\n            25: rustc_hir_typeck::typeck\r\n            26: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::typeck, rustc_query_impl::plumbing::QueryCtxt>\r\n            27: rustc_data_structures::sync::par_for_each_in::<&[rustc_span::def_id::LocalDefId], <rustc_middle::hir::map::Map>::par_body_owners<rustc_hir_typeck::typeck_item_bodies::{closure#0}>::{closure#0}>\r\n            28: rustc_hir_typeck::typeck_item_bodies\r\n            29: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::typeck_item_bodies, rustc_query_impl::plumbing::QueryCtxt>\r\n            30: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck_item_bodies\r\n            31: <rustc_session::session::Session>::time::<(), rustc_hir_analysis::check_crate::{closure#7}>\r\n            32: rustc_hir_analysis::check_crate\r\n            33: rustc_interface::passes::analysis\r\n            34: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n            35: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n            36: <rustc_middle::ty::context::GlobalCtxt>::enter::<rustc_driver_impl::run_compiler::{closure#1}::{closure#2}::{closure#3}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n            37: <rustc_interface::interface::Compiler>::enter::<rustc_driver_impl::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorGuaranteed>>\r\n            38: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\r\n            39: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n            40: std::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n            41: <<std::thread::Builder>::spawn_unchecked_<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>::{closure#1} as core::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n            42: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n                       at /rustc/2773383a314a4b8f481ce2bed12c32de794ffbe9/library/alloc/src/boxed.rs:1988:9\r\n            43: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n                       at /rustc/2773383a314a4b8f481ce2bed12c32de794ffbe9/library/alloc/src/boxed.rs:1988:9\r\n            44: std::sys::unix::thread::Thread::new::thread_start\r\n                       at /rustc/2773383a314a4b8f481ce2bed12c32de794ffbe9/library/std/src/sys/unix/thread.rs:108:17\r\n            45: start_thread\r\n                       at ./nptl/./nptl/pthread_create.c:442:8\r\n            46: clone3\r\n                       at ./misc/../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107920/timeline", "performed_via_github_app": null, "state_reason": "completed"}