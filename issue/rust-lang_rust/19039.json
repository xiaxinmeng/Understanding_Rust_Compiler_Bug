{"url": "https://api.github.com/repos/rust-lang/rust/issues/19039", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/19039/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/19039/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/19039/events", "html_url": "https://github.com/rust-lang/rust/issues/19039", "id": 49136678, "node_id": "MDU6SXNzdWU0OTEzNjY3OA==", "number": 19039, "title": "ICE: unprocessed lint unused_qualifications at unknown node", "user": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-17T19:47:19Z", "updated_at": "2014-11-17T20:01:07Z", "closed_at": "2014-11-17T20:01:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I get an ICE compiling this function:\n\n``` rust\nuse std::num;\nuse std::num::Int;\n\n/// Iterates the cumulative sum\npub fn cumulative_sum<T, I>(iter: I) -> std::iter::Scan<'static, T, T, I, T>\nwhere T: Clone + num::Int + Add<T, T>, I: Iterator<T> {\n    let z: T = num::Int::zero();\n    iter.scan(z, |acc, x| {\n        *acc = *acc + x;\n        Some(acc.clone())\n    })\n}\n```\n\nI'll grant it's odd and unecessary to have imported `Int` yet still refer to `num::Int`, but apparently this hits a corner case the compiler isn't prepared for.\n\n```\n$ rustc --version\nrustc 0.13.0-dev (88c743def 2014-11-17 14:22:03 +0000)\n$ RUST_BACKTRACE=1 rustc --crate-type lib unused_qual_crash.rs \nunused_qual_crash.rs:6:18: 6:26 error: internal compiler error: unprocessed lint unused_qualifications at unknown node (id=25): unnecessary qualification\nunused_qual_crash.rs:6 where T: Clone + num::Int + Add<T, T>, I: Iterator<T> {\n                                        ^~~~~~~~\nnote: the compiler unexpectedly panicked. this is a bug.\nnote: we would appreciate a bug report: http://doc.rust-lang.org/complement-bugreport.html\nnote: run with `RUST_BACKTRACE=1` for a backtrace\ntask 'rustc' panicked at 'Box<Any>', [...]/rust/src/libsyntax/diagnostic.rs:116\n\nstack backtrace:\n   1:     0x7fb45ed2de90 - rt::backtrace::imp::write::h63476d4ec99e2e5bBSs\n   2:     0x7fb45ed30b20 - failure::on_fail::hef753ccd1a60125cnet\n   3:     0x7fb45f4fb520 - unwind::begin_unwind_inner::h20b00ee5cda00f1eKad\n   4:     0x7fb45dc8d600 - unwind::begin_unwind::h4448905161337545584\n   5:     0x7fb45dc8d590 - diagnostic::SpanHandler::span_bug::hb65fb107581599d5P3F\n   6:     0x7fb4601c17d0 - lint::context::check_crate::he3a56a83f9bf35f1fWL\n   7:     0x7fb45f90b330 - util::common::time::h4558342479339418325\n   8:     0x7fb46016dba0 - driver::driver::phase_3_run_analysis_passes::he8cb5260bcd2aa4cYzD\n   9:     0x7fb460169030 - driver::driver::compile_input::hc51acae736c7c311IgD\n  10:     0x7fb4601e76f0 - driver::run_compiler::h110d0899a23a77f34bH\n  11:     0x7fb4601e75e0 - driver::run::closure.167591\n  12:     0x7fb45f924f40 - task::TaskBuilder<S>::try_future::closure.105067\n  13:     0x7fb45f924d00 - task::TaskBuilder<S>::spawn_internal::closure.105036\n  14:     0x7fb460a4ba60 - task::NativeSpawner.Spawner::spawn::closure.2461\n  15:     0x7fb45f55f0d0 - rust_try_inner\n  16:     0x7fb45f55f0c0 - rust_try\n  17:     0x7fb45f4f8ea0 - unwind::try::h5a55025d92b76095mZc\n  18:     0x7fb45f4f8d00 - task::Task::run::h2394b9dc89bd77b2c5b\n  19:     0x7fb460a4b7c0 - task::NativeSpawner.Spawner::spawn::closure.2385\n  20:     0x7fb45f4fa560 - thread::thread_start::hd6b918d48ba54e58iqc\n  21:     0x7fb45a7a6e20 - start_thread\n  22:     0x7fb45f1c0b59 - clone\n  23:                0x0 - <unknown>\n```\n\nThe flagged qualification can't actually be removed, because it's needed for `zero()`, but things work fine if I change it from `num::Int` to just `Int`.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/19039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/19039/timeline", "performed_via_github_app": null, "state_reason": "completed"}