{"url": "https://api.github.com/repos/rust-lang/rust/issues/74743", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74743/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74743/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74743/events", "html_url": "https://github.com/rust-lang/rust/issues/74743", "id": 665586119, "node_id": "MDU6SXNzdWU2NjU1ODYxMTk=", "number": 74743, "title": "AVR: Miscompilation with Trait Object in Option", "user": {"login": "Rahix", "id": 7566996, "node_id": "MDQ6VXNlcjc1NjY5OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/7566996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rahix", "html_url": "https://github.com/Rahix", "followers_url": "https://api.github.com/users/Rahix/followers", "following_url": "https://api.github.com/users/Rahix/following{/other_user}", "gists_url": "https://api.github.com/users/Rahix/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rahix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rahix/subscriptions", "organizations_url": "https://api.github.com/users/Rahix/orgs", "repos_url": "https://api.github.com/users/Rahix/repos", "events_url": "https://api.github.com/users/Rahix/events{/privacy}", "received_events_url": "https://api.github.com/users/Rahix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1884641928, "node_id": "MDU6TGFiZWwxODg0NjQxOTI4", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-AVR", "name": "O-AVR", "color": "6e6ec0", "default": false, "description": "Target: AVR processors (ATtiny, ATmega, etc.)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-25T13:32:47Z", "updated_at": "2023-04-05T17:36:11Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "While playing around with async I stumbled upon an apparent miscomplation.  I've tried to reduce it as much as possible and am now left with this:\r\n\r\n```rust\r\n#![no_std]\r\n#![no_main]\r\n#![feature(llvm_asm)]\r\n\r\n#[inline(never)]\r\n#[panic_handler]\r\nfn panic(_info: &core::panic::PanicInfo) -> ! {\r\n    loop {\r\n        unsafe { llvm_asm!(\"nop\" :::: \"volatile\") };\r\n    }\r\n}\r\n\r\nfn func() -> () {\r\n    unsafe { llvm_asm!(\"nop\" :::: \"volatile\") };\r\n}\r\n\r\npub struct Func<'a>(pub &'a dyn Fn());\r\n\r\n#[no_mangle]\r\npub extern fn main() -> ! {\r\n    let mut t = Some(Func(&func));\r\n\r\n    loop {\r\n        if let Some(t) = t.take() {\r\n            (t.0)();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nCompiling and running under `simavr`, I see this code panicking:\r\n\r\n```text\r\n#0  core::panicking::panic (expr=...) at /home/rahix/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/panicking.rs:50\r\n#1  0x00000244 in core::ptr::swap_nonoverlapping_one (x=0x800adf, y=0x800ae3) at src/main.rs:25\r\n#2  core::mem::swap (x=0x800adf, y=0x800ae3) at /home/rahix/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/mem/mod.rs:690\r\n#3  core::mem::replace (dest=0x800adf, src=...) at /home/rahix/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/mem/mod.rs:815\r\n#4  core::mem::take (dest=0x800adf) at /home/rahix/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/mem/mod.rs:751\r\n#5  core::option::Option<T>::take (self=0x800adf) at /home/rahix/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/option.rs:892\r\n#6  avr_async::main () at src/main.rs:24\r\n```\r\n\r\nI should also note that while reducing the code, the error manifested itself in many different ways; it was not always panicking like shown above.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.47.0-nightly (5ef299eb9 2020-07-24)\r\nbinary: rustc\r\ncommit-hash: 5ef299eb9805b4c86b227b718b39084e8bf24454\r\ncommit-date: 2020-07-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.47.0-nightly\r\nLLVM version: 10.0\r\n```\r\n\r\ncc @dylanmckay", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74743/timeline", "performed_via_github_app": null, "state_reason": null}