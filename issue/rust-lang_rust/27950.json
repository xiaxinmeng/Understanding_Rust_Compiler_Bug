{"url": "https://api.github.com/repos/rust-lang/rust/issues/27950", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/27950/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/27950/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/27950/events", "html_url": "https://github.com/rust-lang/rust/issues/27950", "id": 102577081, "node_id": "MDU6SXNzdWUxMDI1NzcwODE=", "number": 27950, "title": "Can `derive` be smarter about lifetime parameters?", "user": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235146, "node_id": "MDU6TGFiZWwyMzUxNDY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-syntaxext", "name": "A-syntaxext", "color": "f7e101", "default": false, "description": "Area: Syntax extensions"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-08-23T00:36:08Z", "updated_at": "2017-06-25T16:13:22Z", "closed_at": "2017-06-25T16:13:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "briansmith on IRC ran into trouble using `#[derive(PartialEq)]` on a struct with a lifetime parameter. See the code at http://is.gd/R6Jx2x which fails with:\n\n```\n<anon>:8:59: 8:65 error: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n<anon>:8 fn doesnt_work_with_derived(x: Input, y: Input) -> bool { x == y }\n                                                                   ^~~~~~\n<anon>:8:1: 8:67 help: consider using an explicit lifetime parameter as shown: fn doesnt_work_with_derived<'a>(x: Input<'a>, y: Input<'a>) -> bool\n<anon>:8 fn doesnt_work_with_derived(x: Input, y: Input) -> bool { x == y }\n         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n```\n\nEven though a similar function working directly with byte slices is fine with the lifetime parameters differing. Following the error message's suggestion works, but forces explicit lifetimes where one would expect elision to work (as it does with the byte slices).\n\nThe issue is shown in the expanded code from `derive` pasted below. It's because the `Rhs` type for the impl defaults to `Self`, which is `Input<'a>`, which strictly requires the exact same lifetime.\n\nBelow that, I wrote a modified version of the derived impl showing what we wanted to be generated. It introduces a new lifetime parameter on the impl for each lifetime parameter on the original struct and sets `Rhs` to be the same type as `Self` except with those lifetime parameters substituted. (In this case, just `'a` replaced with `'b`.) This actually works: http://is.gd/1GjWDD\n\nSo, can `derive` do this (seemingly) simple transformation for types with lifetime parameters? Can someone with more experience chip in and explain why this would go horribly wrong? :P\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/27950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/27950/timeline", "performed_via_github_app": null, "state_reason": "completed"}