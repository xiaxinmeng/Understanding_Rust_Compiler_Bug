{"url": "https://api.github.com/repos/rust-lang/rust/issues/48022", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48022/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48022/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48022/events", "html_url": "https://github.com/rust-lang/rust/issues/48022", "id": 294548275, "node_id": "MDU6SXNzdWUyOTQ1NDgyNzU=", "number": 48022, "title": "Discrepancy between docs and implementation of BufReader::fill_buf", "user": {"login": "jonhoo", "id": 176295, "node_id": "MDQ6VXNlcjE3NjI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/176295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonhoo", "html_url": "https://github.com/jonhoo", "followers_url": "https://api.github.com/users/jonhoo/followers", "following_url": "https://api.github.com/users/jonhoo/following{/other_user}", "gists_url": "https://api.github.com/users/jonhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonhoo/subscriptions", "organizations_url": "https://api.github.com/users/jonhoo/orgs", "repos_url": "https://api.github.com/users/jonhoo/repos", "events_url": "https://api.github.com/users/jonhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonhoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-02-05T21:28:09Z", "updated_at": "2018-09-12T11:27:57Z", "closed_at": "2018-09-12T11:27:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would you like to fix this bug? If so, [here's how](https://github.com/rust-lang/rust/issues/48022#issuecomment-392550521).\r\n\r\n--------------------\r\n\r\nThe documentation currently states that `BufRead::fill_buf`:\r\n\r\n> Fills the internal buffer of this object, returning the buffer contents.\r\n\r\nHowever, this is not what `BufReader`'s [implementation](https://doc.rust-lang.org/src/std/io/buffered.rs.html#222-233) of that method does. It will *only* fill the buffer if no data is currently buffered. If data is already present in the buffer, no filling takes place:\r\n\r\n```rust\r\nimpl<R: Read> BufRead for BufReader<R> {\r\n    fn fill_buf(&mut self) -> io::Result<&[u8]> {\r\n        if self.pos >= self.cap {\r\n            self.cap = self.inner.read(&mut self.buf)?;\r\n            self.pos = 0;\r\n        }\r\n        Ok(&self.buf[self.pos..self.cap])\r\n    }\r\n}\r\n```\r\n\r\nI would argue that the current behavior of `BufReader`'s implementation is usually what users would *want* to do, but if does not match the documentation of, nor the name of, `fill_buf`. I don't know what the right solution here is, but I suspect the only safe thing to do would be to update `BufReader`'s implementation to match the docs (i.e., to make it actually fill its buffer), and then to add another method to `BufRead` (perhaps `buf_bytes`?) that gives the currently buffered contents, *regardless* of the amount of buffered data, and *without* reading from the underlying `Read`.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48022/timeline", "performed_via_github_app": null, "state_reason": "completed"}