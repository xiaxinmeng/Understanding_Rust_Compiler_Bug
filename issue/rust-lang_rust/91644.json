{"url": "https://api.github.com/repos/rust-lang/rust/issues/91644", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91644/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91644/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91644/events", "html_url": "https://github.com/rust-lang/rust/issues/91644", "id": 1073876221, "node_id": "I_kwDOAAsO6M5AAgz9", "number": 91644, "title": "`slice::select_nth_unstable` has O(n^2) complexity, docs claim O(n) worst case", "user": {"login": "orlp", "id": 202547, "node_id": "MDQ6VXNlcjIwMjU0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/202547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orlp", "html_url": "https://github.com/orlp", "followers_url": "https://api.github.com/users/orlp/followers", "following_url": "https://api.github.com/users/orlp/following{/other_user}", "gists_url": "https://api.github.com/users/orlp/gists{/gist_id}", "starred_url": "https://api.github.com/users/orlp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orlp/subscriptions", "organizations_url": "https://api.github.com/users/orlp/orgs", "repos_url": "https://api.github.com/users/orlp/repos", "events_url": "https://api.github.com/users/orlp/events{/privacy}", "received_events_url": "https://api.github.com/users/orlp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-12-08T00:28:40Z", "updated_at": "2021-12-08T04:28:41Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "To reproduce, run the following program:\r\n\r\n```rust\r\nuse std::cmp::Ordering;\r\n\r\nfn prepare_worst_case(n: usize) -> Vec<u64> {\r\n    let mut values = vec![None; n];\r\n    let mut indices: Vec<usize> = (0..n).collect();\r\n    let mut ctr = 0;\r\n\r\n    indices.select_nth_unstable_by(n-2, |lhs, rhs| {\r\n        match (values[*lhs], values[*rhs])  {\r\n            (None, None) => {\r\n                values[*lhs] = Some(ctr);\r\n                ctr += 1;\r\n                Ordering::Less\r\n            },\r\n            (None, Some(_)) => Ordering::Greater,\r\n            (Some(_), None) => Ordering::Less,\r\n            (Some(a), Some(b)) => a.cmp(&b),\r\n        }\r\n    });\r\n\r\n    values.into_iter().map(|v| v.unwrap_or(ctr)).collect()\r\n}\r\n\r\nfn main() {\r\n    for n in [1000, 10000, 100000] {\r\n        let mut worst_case = prepare_worst_case(n);\r\n\r\n        // Note: quadratic behavior triggered strictly by previously crafted malicious input,\r\n        // no special comparison function used here.\r\n        let mut calls = 0;\r\n        worst_case.select_nth_unstable_by_key(n - 2, |x| { calls += 1; *x });\r\n        println!(\"{}: {}\", n, calls);\r\n    }\r\n}\r\n```\r\n\r\nRunning this program on the latest stable or nightly Rust we get output:\r\n\r\n```\r\n1000: 195172\r\n10000: 18821756\r\n100000: 1875713006\r\n```\r\n\r\nMultiplying the input size by 10 increases the number of comparisons by a factor of 100 - clearly quadratic.\r\n\r\nLooking into the code, currently the implementation of [`select_nth_unstable`](https://doc.rust-lang.org/std/primitive.slice.html#method.select_nth_unstable) uses pure quickselect, explaining the quadratic behavior. To get guaranteed linear time behavior there needs to be a [median-of-medians](https://en.wikipedia.org/wiki/Median_of_medians) fallback in case the number of iterations of quickselect becomes too large.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91644/timeline", "performed_via_github_app": null, "state_reason": null}