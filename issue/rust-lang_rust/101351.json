{"url": "https://api.github.com/repos/rust-lang/rust/issues/101351", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/101351/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/101351/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/101351/events", "html_url": "https://github.com/rust-lang/rust/issues/101351", "id": 1360675667, "node_id": "I_kwDOAAsO6M5RGkNT", "number": 101351, "title": "rustc should suggest trait bounds when attempting to use associated items on generic parameters.", "user": {"login": "BGR360", "id": 13339928, "node_id": "MDQ6VXNlcjEzMzM5OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/13339928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BGR360", "html_url": "https://github.com/BGR360", "followers_url": "https://api.github.com/users/BGR360/followers", "following_url": "https://api.github.com/users/BGR360/following{/other_user}", "gists_url": "https://api.github.com/users/BGR360/gists{/gist_id}", "starred_url": "https://api.github.com/users/BGR360/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BGR360/subscriptions", "organizations_url": "https://api.github.com/users/BGR360/orgs", "repos_url": "https://api.github.com/users/BGR360/repos", "events_url": "https://api.github.com/users/BGR360/events{/privacy}", "received_events_url": "https://api.github.com/users/BGR360/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}], "state": "open", "locked": false, "assignee": {"login": "fishycs", "id": 18637477, "node_id": "MDQ6VXNlcjE4NjM3NDc3", "avatar_url": "https://avatars.githubusercontent.com/u/18637477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fishycs", "html_url": "https://github.com/fishycs", "followers_url": "https://api.github.com/users/fishycs/followers", "following_url": "https://api.github.com/users/fishycs/following{/other_user}", "gists_url": "https://api.github.com/users/fishycs/gists{/gist_id}", "starred_url": "https://api.github.com/users/fishycs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fishycs/subscriptions", "organizations_url": "https://api.github.com/users/fishycs/orgs", "repos_url": "https://api.github.com/users/fishycs/repos", "events_url": "https://api.github.com/users/fishycs/events{/privacy}", "received_events_url": "https://api.github.com/users/fishycs/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fishycs", "id": 18637477, "node_id": "MDQ6VXNlcjE4NjM3NDc3", "avatar_url": "https://avatars.githubusercontent.com/u/18637477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fishycs", "html_url": "https://github.com/fishycs", "followers_url": "https://api.github.com/users/fishycs/followers", "following_url": "https://api.github.com/users/fishycs/following{/other_user}", "gists_url": "https://api.github.com/users/fishycs/gists{/gist_id}", "starred_url": "https://api.github.com/users/fishycs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fishycs/subscriptions", "organizations_url": "https://api.github.com/users/fishycs/orgs", "repos_url": "https://api.github.com/users/fishycs/repos", "events_url": "https://api.github.com/users/fishycs/events{/privacy}", "received_events_url": "https://api.github.com/users/fishycs/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2022-09-02T23:07:46Z", "updated_at": "2022-09-11T03:34:33Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=b51b816199abf5c9e31ee9252d86d6a2)):\n\n```rust\ntrait Foo {\n    type Associated;\n}\n\nstruct Generic<T> {\n    field: T::Associated,\n}\n```\n\nThe current output is:\n\n```\nerror[E0220]: associated type `Associated` not found for `T`\n --> src/lib.rs:6:15\n  |\n6 |     field: T::Associated,\n  |               ^^^^^^^^^^ associated type `Associated` not found\n```\n\nIdeally the output should look like:\n\n```\nerror[E0220]: associated type `Associated` not found for `T`\n --> src/lib.rs:6:15\n  |\n6 |     field: T::Associated,\n  |               ^^^^^^^^^^ associated type `Associated` not found\n  |\nhelp: items from traits can only be used if the type parameter is bounded by the trait\nhelp: the following trait defines an item `Associated`, perhaps you need to restrict type parameter `T` with it:\n  |\n5 | struct Generic<T: Foo> {\n  |                 +++++\n```\n\nIt already does this for trait methods ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=b5f4ff4ab39fe7d78aff24119cb2002e)):\n\n```rust\npub trait Foo {\n    fn do_it(&self);\n}\n\nfn use_it<T>(input: T) {\n    input.do_it();\n}\n\nfn main() {\n    use_it(42);\n}\n```\n\n```\nerror[E0599]: no method named `do_it` found for type parameter `T` in the current scope\n --> src/main.rs:6:11\n  |\n6 |     input.do_it();\n  |           ^^^^^ method not found in `T`\n  |\n  = help: items from traits can only be used if the type parameter is bounded by the trait\nhelp: the following trait defines an item `do_it`, perhaps you need to restrict type parameter `T` with it:\n  |\n5 | fn use_it<T: Foo>(input: T) {\n  |            +++++\n```\n\nAnd it does it (sorta, the message is more terse) if you qualify with `as Trait` ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=3c2cadae24a587ebaf2092732117f8b6)):\n\n```rust\ntrait Foo {\n    type Associated;\n}\n\nstruct Generic<T> {\n    field: <T as Foo>::Associated,\n}\n```\n\n```\nerror[E0277]: the trait bound `T: Foo` is not satisfied\n --> src/lib.rs:6:12\n  |\n6 |     field: <T as Foo>::Associated,\n  |            ^^^^^^^^^^^^^^^^^^^^^^ the trait `Foo` is not implemented for `T`\n  |\nhelp: consider restricting type parameter `T`\n  |\n5 | struct Generic<T: Foo> {\n  |                 +++++\n```\n\n@rustbot label +D-newcomer-roadblock +D-terse +A-associated-items\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"fishycs\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/101351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/101351/timeline", "performed_via_github_app": null, "state_reason": null}