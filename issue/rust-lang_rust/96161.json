{"url": "https://api.github.com/repos/rust-lang/rust/issues/96161", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96161/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96161/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96161/events", "html_url": "https://github.com/rust-lang/rust/issues/96161", "id": 1206505238, "node_id": "I_kwDOAAsO6M5H6c8W", "number": 96161, "title": "rustdoc-json: Invalid output for function returning public item from private module", "user": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 2682491374, "node_id": "MDU6TGFiZWwyNjgyNDkxMzc0", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-rustdoc-json", "name": "A-rustdoc-json", "color": "f7e101", "default": false, "description": "Area: Rustdoc JSON backend"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-04-17T22:55:00Z", "updated_at": "2022-07-16T23:12:27Z", "closed_at": "2022-07-16T23:12:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```rust\r\n#![feature(no_core)]\r\n#![no_core]\r\nmod secret {\r\n    pub struct Secret;\r\n}\r\n\r\npub fn get_secret() -> secret::Secret {\r\n    secret::Secret\r\n}\r\n```\r\n\r\nProduces (redacted for clairty, [full here](https://gist.github.com/aDotInTheVoid/24b8314ae8e6d83d9ac19ef8cefdfd03))\r\n\r\n```json\r\n{\r\n    \"includes_private\": false,\r\n    \"index\": {\r\n        \"0:0\": {\r\n            \"id\": \"0:0\",\r\n            \"inner\": {\r\n                \"is_crate\": true,\r\n                \"items\": [\r\n                    \"0:4\"\r\n                ]\r\n            },\r\n            \"kind\": \"module\",\r\n            \"name\": \"hashbrown\",\r\n            \"visibility\": \"public\"\r\n        },\r\n        \"0:4\": {\r\n            \"id\": \"0:4\",\r\n            \"inner\": {\r\n                \"decl\": {\r\n                    \"inputs\": [],\r\n                    \"output\": {\r\n                        \"inner\": {\r\n                            \"id\": \"0:2\",\r\n                            \"name\": \"secret::Secret\"\r\n                        },\r\n                        \"kind\": \"resolved_path\"\r\n                    }\r\n                }\r\n            },\r\n            \"kind\": \"function\",\r\n            \"name\": \"get_secret\",\r\n            \"visibility\": \"public\"\r\n        }\r\n    },\r\n    \"root\": \"0:0\"\r\n}\r\n```\r\n\r\nWhere `0:2` is a dangling `Id`.\r\n\r\nThis fails `check_missing_items.py` with output `Type contained an invalid ID: 0:2`\r\n\r\nIMO the best way would be to include these \"Hidden\" items, as the items they have can still be called, even if their is no publicly visable way to write their type. \r\n([eg](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=4a208918bd73f7fcc4a5a7ed0002164a))\r\n\r\nThis would also improve the HTML, which currently doesnt give links to such items. However it's unclear how to document such an item that doesn't appear in a path.\r\n\r\ncc @craftspider\r\n\r\n@rustbot modify labels: +T-rustdoc +A-rustdoc-json", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96161/timeline", "performed_via_github_app": null, "state_reason": "completed"}