{"url": "https://api.github.com/repos/rust-lang/rust/issues/62132", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62132/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62132/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62132/events", "html_url": "https://github.com/rust-lang/rust/issues/62132", "id": 460663260, "node_id": "MDU6SXNzdWU0NjA2NjMyNjA=", "number": 62132, "title": "Rustdoc regression in synstructure: error[E0275]: overflow evaluating the requirement `alloc::raw_vec::RawVec<(syn::Lifetime, syn::token::Add)>: std::marker::Unpin`", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-25T21:56:54Z", "updated_at": "2019-06-25T21:58:54Z", "closed_at": "2019-06-25T21:58:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In a minified package:\r\n\r\n```toml\r\n[package]\r\nname = \"foo\"\r\nversion = \"0.0.0\"\r\n\r\n[dependencies]\r\nsyn = { version = \"=0.15.38\", features = [\"full\"] }\r\nsynstructure = \"=0.10.2\"\r\n```\r\n\r\nRunning `rustup run --install nightly-2019-06-21 cargo doc` completes successfully, but `rustup run --install nightly-2019-06-22 cargo doc` causes the error below. Note that `cargo build` or `cargo check` succeeds with either version.\r\n\r\nRegression range: 1d9981f04...929b48ec9. https://github.com/rust-lang/rust/pull/60293 is in the range and looks relevant. CC @nagisa, @eddyb \r\n\r\n```rust\r\nerror[E0275]: overflow evaluating the requirement `alloc::raw_vec::RawVec<(syn::Lifetime, syn::token::Add)>: std::marker::Unpin`\r\n  |\r\n  = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\r\n  = note: required because it appears within the type `std::vec::Vec<(syn::Lifetime, syn::token::Add)>`\r\n  = note: required because it appears within the type `syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add>`\r\n  = note: required because it appears within the type `syn::LifetimeDef`\r\n  = note: required because it appears within the type `(syn::LifetimeDef, syn::token::Comma)`\r\n  = note: required because it appears within the type `*const (syn::LifetimeDef, syn::token::Comma)`\r\n  = note: required because it appears within the type `std::ptr::Unique<(syn::LifetimeDef, syn::token::Comma)>`\r\n  = note: required because it appears within the type `alloc::raw_vec::RawVec<(syn::LifetimeDef, syn::token::Comma)>`\r\n  = note: required because it appears within the type `std::vec::Vec<(syn::LifetimeDef, syn::token::Comma)>`\r\n  = note: required because it appears within the type `syn::punctuated::Punctuated<syn::LifetimeDef, syn::token::Comma>`\r\n  = note: required because it appears within the type `syn::BoundLifetimes`\r\n  = note: required because it appears within the type `std::option::Option<syn::BoundLifetimes>`\r\n  = note: required because it appears within the type `syn::PredicateType`\r\n  = note: required because it appears within the type `syn::WherePredicate`\r\n  = note: required because it appears within the type `(syn::WherePredicate, syn::token::Comma)`\r\n  = note: required because it appears within the type `*const (syn::WherePredicate, syn::token::Comma)`\r\n  = note: required because it appears within the type `std::ptr::Unique<(syn::WherePredicate, syn::token::Comma)>`\r\n  = note: required because it appears within the type `alloc::raw_vec::RawVec<(syn::WherePredicate, syn::token::Comma)>`\r\n  = note: required because it appears within the type `std::vec::Vec<(syn::WherePredicate, syn::token::Comma)>`\r\n  = note: required because it appears within the type `syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma>`\r\n  = note: required because it appears within the type `syn::WhereClause`\r\n  = note: required because it appears within the type `std::option::Option<syn::WhereClause>`\r\n  = note: required because it appears within the type `syn::Generics`\r\n  = note: required because it appears within the type `syn::ItemType`\r\n  = note: required because it appears within the type `syn::Item`\r\n  = note: required because it appears within the type `syn::Stmt`\r\n  = note: required because it appears within the type `*const syn::Stmt`\r\n  = note: required because it appears within the type `std::ptr::Unique<syn::Stmt>`\r\n  = note: required because it appears within the type `alloc::raw_vec::RawVec<syn::Stmt>`\r\n  = note: required because it appears within the type `std::vec::Vec<syn::Stmt>`\r\n  = note: required because it appears within the type `syn::Block`\r\n  = note: required because it appears within the type `syn::ExprIf`\r\n  = note: required because it appears within the type `syn::Expr`\r\n  = note: required because it appears within the type `syn::TypeArray`\r\n  = note: required because it appears within the type `syn::Type`\r\n  = note: required because it appears within the type `syn::GenericArgument`\r\n  = note: required because it appears within the type `(syn::GenericArgument, syn::token::Comma)`\r\n  = note: required because it appears within the type `*const (syn::GenericArgument, syn::token::Comma)`\r\n  = note: required because it appears within the type `std::ptr::Unique<(syn::GenericArgument, syn::token::Comma)>`\r\n  = note: required because it appears within the type `alloc::raw_vec::RawVec<(syn::GenericArgument, syn::token::Comma)>`\r\n  = note: required because it appears within the type `std::vec::Vec<(syn::GenericArgument, syn::token::Comma)>`\r\n  = note: required because it appears within the type `syn::punctuated::Punctuated<syn::GenericArgument, syn::token::Comma>`\r\n  = note: required because it appears within the type `syn::AngleBracketedGenericArguments`\r\n  = note: required because it appears within the type `syn::PathArguments`\r\n  = note: required because it appears within the type `syn::PathSegment`\r\n  = note: required because it appears within the type `(syn::PathSegment, syn::token::Colon2)`\r\n  = note: required because it appears within the type `*const (syn::PathSegment, syn::token::Colon2)`\r\n  = note: required because it appears within the type `std::ptr::Unique<(syn::PathSegment, syn::token::Colon2)>`\r\n  = note: required because it appears within the type `alloc::raw_vec::RawVec<(syn::PathSegment, syn::token::Colon2)>`\r\n  = note: required because it appears within the type `std::vec::Vec<(syn::PathSegment, syn::token::Colon2)>`\r\n  = note: required because it appears within the type `syn::punctuated::Punctuated<syn::PathSegment, syn::token::Colon2>`\r\n  = note: required because it appears within the type `syn::Path`\r\n  = note: required because it appears within the type `syn::Attribute`\r\n  = note: required because it appears within the type `*const syn::Attribute`\r\n  = note: required because it appears within the type `std::ptr::Unique<syn::Attribute>`\r\n  = note: required because it appears within the type `alloc::raw_vec::RawVec<syn::Attribute>`\r\n  = note: required because it appears within the type `std::vec::Vec<syn::Attribute>`\r\n  = note: required because it appears within the type `syn::TypeParam`\r\n  = note: required because it appears within the type `syn::GenericParam`\r\n  = note: required because it appears within the type `*const syn::GenericParam`\r\n  = note: required because it appears within the type `std::ptr::Unique<syn::GenericParam>`\r\n  = note: required because it appears within the type `alloc::raw_vec::RawVec<syn::GenericParam>`\r\n  = note: required because it appears within the type `std::vec::Vec<syn::GenericParam>`\r\n  = note: required because it appears within the type `Structure<'a>`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0275`.\r\nerror: Could not document `synstructure`.\r\n```", "closed_by": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62132/timeline", "performed_via_github_app": null, "state_reason": "completed"}