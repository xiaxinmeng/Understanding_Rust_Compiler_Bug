{"url": "https://api.github.com/repos/rust-lang/rust/issues/77598", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77598/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77598/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77598/events", "html_url": "https://github.com/rust-lang/rust/issues/77598", "id": 715193681, "node_id": "MDU6SXNzdWU3MTUxOTM2ODE=", "number": 77598, "title": "Tweak E0038 output to be more pedagogic.", "user": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}, {"id": 1659943986, "node_id": "MDU6TGFiZWwxNjU5OTQzOTg2", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-verbose", "name": "D-verbose", "color": "c9f7a3", "default": false, "description": "Too much output caused by a single piece of incorrect code"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-10-05T22:05:41Z", "updated_at": "2020-10-21T13:38:56Z", "closed_at": "2020-10-21T13:38:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[Given](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=c6fb34350d8b5d25ead27aaa03704cb1):\r\n\r\n```rust\r\npub trait Item {\r\n    fn get_category()->String; // error\r\n    fn do_thing_inner(&self);\r\n    fn get_inner_val(&self) -> u32;\r\n}\r\n\r\nimpl dyn Item {\r\n    pub fn do_thing(&self) {\r\n        self.do_thing_inner();\r\n        //etc.\r\n    }\r\n    pub fn get_val(&self) -> u32 {\r\n        self.get_inner_val() + 1\r\n    }\r\n}\r\n```\r\n\r\nWe currently emit\r\n\r\n```\r\nerror[E0038]: the trait `Item` cannot be made into an object\r\n --> src/lib.rs:7:6\r\n  |\r\n1 | pub trait Item {\r\n  |           ---- this trait cannot be made into an object...\r\n2 |     fn get_category()->String; // error\r\n  |        ------------ ...because associated function `get_category` has no `self` parameter\r\n...\r\n7 | impl dyn Item {\r\n  |      ^^^^^^^^ the trait `Item` cannot be made into an object\r\n  |\r\nhelp: consider turning `get_category` into a method by giving it a `&self` argument or constraining it so it does not apply to trait objects\r\n  |\r\n2 |     fn get_category()->String where Self: Sized; // error\r\n  |                               ^^^^^^^^^^^^^^^^^\r\n```\r\n\r\nand two other similar errors.\r\n\r\nIdeally, we would emit only a single error for this case, and produce output closer to\r\n\r\n```\r\nerror[E0038]: the trait `Item` cannot be made into an object\r\n --> src/lib.rs:7:6\r\n  |\r\n7 | impl dyn Item {\r\n  |      ^^^^^^^^ the trait `Item` cannot be made into an object\r\n  |\r\nnote: for a trait to be \"object safe\" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit https://doc.rust-lang.org/reference/items/traits.html#object-safety\r\n  |\r\n1 | pub trait Item {\r\n  |           ---- this trait cannot be made into an object...\r\n2 |     fn get_category()->String; // error\r\n  |        ^^^^^^^^^^^^ ...because associated function `get_category` has no `self` parameter\r\n  |\r\nhelp: consider turning `get_category` into a method by giving it a `&self` argument\r\n  |\r\n2 |     fn get_category(&self)->String; // error\r\n  |                     ^^^^^\r\nhelp: alternatively, consider constraining it so it does not apply to trait objects\r\n  |\r\n2 |     fn get_category()->String where Self: Sized; // error\r\n  |                               ^^^^^^^^^^^^^^^^^\r\n```\r\n\r\n_Taken from https://users.rust-lang.org/t/why-cant-i-impl-dyn-a-trait-with-static-methods-and-whats-the-correct-way-to-achieve-this/49637_", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77598/timeline", "performed_via_github_app": null, "state_reason": "completed"}