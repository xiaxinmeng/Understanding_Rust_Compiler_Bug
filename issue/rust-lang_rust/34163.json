{"url": "https://api.github.com/repos/rust-lang/rust/issues/34163", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/34163/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/34163/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/34163/events", "html_url": "https://github.com/rust-lang/rust/issues/34163", "id": 159178644, "node_id": "MDU6SXNzdWUxNTkxNzg2NDQ=", "number": 34163, "title": "Unbounded recursion trying to decide if a type meets the requirement of being UnwindSafe", "user": {"login": "TyOverby", "id": 573215, "node_id": "MDQ6VXNlcjU3MzIxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/573215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TyOverby", "html_url": "https://github.com/TyOverby", "followers_url": "https://api.github.com/users/TyOverby/followers", "following_url": "https://api.github.com/users/TyOverby/following{/other_user}", "gists_url": "https://api.github.com/users/TyOverby/gists{/gist_id}", "starred_url": "https://api.github.com/users/TyOverby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TyOverby/subscriptions", "organizations_url": "https://api.github.com/users/TyOverby/orgs", "repos_url": "https://api.github.com/users/TyOverby/repos", "events_url": "https://api.github.com/users/TyOverby/events{/privacy}", "received_events_url": "https://api.github.com/users/TyOverby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-06-08T14:31:33Z", "updated_at": "2017-05-04T22:31:18Z", "closed_at": "2017-05-04T22:31:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to use `catch_unwind` to build out a testing framework, and rustc can't seem to figure out if my type is UnwindSafe, even after setting the recursion limit for my crate to 1024.\n\nThe \"note\" list for the compilation looks like this: \n\n```\n[continues on upwards forever]\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `gc::Gc<std::vec::Vec<vm::value::Value>>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `vm::value::Value`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `std::marker::PhantomData<vm::value::Value>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `std::ptr::Unique<vm::value::Value>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `alloc::raw_vec::RawVec<vm::value::Value>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `std::vec::Vec<vm::value::Value>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `gc::gc::GcBox<std::vec::Vec<vm::value::Value>>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `*mut gc::gc::GcBox<std::vec::Vec<vm::value::Value>>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `core::nonzero::NonZero<*mut gc::gc::GcBox<std::vec::Vec<vm::va\nlue::Value>>>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `gc::Gc<std::vec::Vec<vm::value::Value>>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `vm::value::Value`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `std::marker::PhantomData<vm::value::Value>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `std::ptr::Unique<vm::value::Value>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `alloc::raw_vec::RawVec<vm::value::Value>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `std::vec::Vec<vm::value::Value>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `gc::gc::GcBox<std::vec::Vec<vm::value::Value>>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `*mut gc::gc::GcBox<std::vec::Vec<vm::value::Value>>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `core::nonzero::NonZero<*mut gc::gc::GcBox<std::vec::Vec<vm::va\nlue::Value>>>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `gc::Gc<std::vec::Vec<vm::value::Value>>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `vm::value::Value`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `std::marker::PhantomData<vm::value::Value>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `std::ptr::Unique<vm::value::Value>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `alloc::raw_vec::RawVec<vm::value::Value>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `std::vec::Vec<vm::value::Value>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `gc::gc::GcBox<std::vec::Vec<vm::value::Value>>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `*mut gc::gc::GcBox<std::vec::Vec<vm::value::Value>>`\nsrc/test/matrix_driver.rs:54:15: 54:27 note: required because it appears within the type `core::nonzero::NonZero<*mut gc::gc::GcBox<std::vec::Vec<vm::va\nlue::Value>>>`\n[continues on downwards forever]\n```\n\n**rustc -V**: `rustc 1.11.0-nightly (1c975eafa 2016-06-05)`\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/34163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/34163/timeline", "performed_via_github_app": null, "state_reason": "completed"}