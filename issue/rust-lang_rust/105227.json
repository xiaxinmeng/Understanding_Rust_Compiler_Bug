{"url": "https://api.github.com/repos/rust-lang/rust/issues/105227", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105227/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105227/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105227/events", "html_url": "https://github.com/rust-lang/rust/issues/105227", "id": 1474236773, "node_id": "I_kwDOAAsO6M5X3xFl", "number": 105227, "title": "Error suggests adding '_ lifetime but named lifetime is needed", "user": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": {"login": "yanchen4791", "id": 91304157, "node_id": "MDQ6VXNlcjkxMzA0MTU3", "avatar_url": "https://avatars.githubusercontent.com/u/91304157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanchen4791", "html_url": "https://github.com/yanchen4791", "followers_url": "https://api.github.com/users/yanchen4791/followers", "following_url": "https://api.github.com/users/yanchen4791/following{/other_user}", "gists_url": "https://api.github.com/users/yanchen4791/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanchen4791/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanchen4791/subscriptions", "organizations_url": "https://api.github.com/users/yanchen4791/orgs", "repos_url": "https://api.github.com/users/yanchen4791/repos", "events_url": "https://api.github.com/users/yanchen4791/events{/privacy}", "received_events_url": "https://api.github.com/users/yanchen4791/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yanchen4791", "id": 91304157, "node_id": "MDQ6VXNlcjkxMzA0MTU3", "avatar_url": "https://avatars.githubusercontent.com/u/91304157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanchen4791", "html_url": "https://github.com/yanchen4791", "followers_url": "https://api.github.com/users/yanchen4791/followers", "following_url": "https://api.github.com/users/yanchen4791/following{/other_user}", "gists_url": "https://api.github.com/users/yanchen4791/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanchen4791/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanchen4791/subscriptions", "organizations_url": "https://api.github.com/users/yanchen4791/orgs", "repos_url": "https://api.github.com/users/yanchen4791/repos", "events_url": "https://api.github.com/users/yanchen4791/events{/privacy}", "received_events_url": "https://api.github.com/users/yanchen4791/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-12-03T21:10:25Z", "updated_at": "2022-12-09T07:56:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Code:\n\n```rust\nfn chars(v :(&str, &str)) -> impl Iterator<Item = char> {\n\tv.0.chars().chain(v.1.chars())\n}\n```\n\nGives:\n\n```\nerror[[E0700]](https://doc.rust-lang.org/stable/error-index.html#E0700): hidden type for `impl Iterator<Item = char>` captures lifetime that does not appear in bounds\n --> src/lib.rs:2:2\n  |\n1 | fn chars(v :(&str, &str)) -> impl Iterator<Item = char> {\n  |              ---- hidden type `std::iter::Chain<Chars<'_>, Chars<'_>>` captures the anonymous lifetime defined here\n2 |     v.0.chars().chain(v.1.chars())\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: to declare that the `impl Trait` captures `'_`, you can add an explicit `'_` lifetime bound\n  |\n1 | fn chars(v :(&str, &str)) -> impl Iterator<Item = char> + '_ {\n  |                                                         ++++\n\nerror[[E0700]](https://doc.rust-lang.org/stable/error-index.html#E0700): hidden type for `impl Iterator<Item = char>` captures lifetime that does not appear in bounds\n --> src/lib.rs:2:2\n  |\n1 | fn chars(v :(&str, &str)) -> impl Iterator<Item = char> {\n  |                    ---- hidden type `std::iter::Chain<Chars<'_>, Chars<'_>>` captures the anonymous lifetime defined here\n2 |     v.0.chars().chain(v.1.chars())\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: to declare that the `impl Trait` captures `'_`, you can add an explicit `'_` lifetime bound\n  |\n1 | fn chars(v :(&str, &str)) -> impl Iterator<Item = char> + '_ {\n  |                                                         ++++\n\nFor more information about this error, try `rustc --explain E0700`.\n```\n\nBut if you add the `'_` bound, it will still fail:\n\n```rust\nfn chars(v :(&str, &str)) -> impl Iterator<Item = char> + '_ {\n\tv.0.chars().chain(v.1.chars())\n}\n```\n\n```\nerror[[E0106]](https://doc.rust-lang.org/nightly/error-index.html#E0106): missing lifetime specifier\n --> src/lib.rs:1:59\n  |\n1 | fn chars(v :(&str, &str)) -> impl Iterator<Item = char> + '_ {\n  |             ------------                                  ^^ expected named lifetime parameter\n  |\n  = help: this function's return type contains a borrowed value, but the signature does not say which one of `v`'s 2 lifetimes it is borrowed from\nhelp: consider introducing a named lifetime parameter\n  |\n1 | fn chars<'a>(v :(&'a str, &'a str)) -> impl Iterator<Item = char> + 'a {\n  |         ++++      ++       ++                                       ~~\n\nerror: lifetime may not live long enough\n --> src/lib.rs:2:2\n  |\n1 | fn chars(v :(&str, &str)) -> impl Iterator<Item = char> + '_ {\n  |              - let's call the lifetime of this reference `'1`\n2 |     v.0.chars().chain(v.1.chars())\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'1` must outlive `'static`\n\nerror: lifetime may not live long enough\n --> src/lib.rs:2:2\n  |\n1 | fn chars(v :(&str, &str)) -> impl Iterator<Item = char> + '_ {\n  |                    - let's call the lifetime of this reference `'2`\n2 |     v.0.chars().chain(v.1.chars())\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'2` must outlive `'static`\n\nFor more information about this error, try `rustc --explain E0106`.\n```\n\n```Rust\nfn chars<'a>(v :(&'a str, &'a str)) -> impl Iterator<Item = char> + 'a {\n\tv.0.chars().chain(v.1.chars())\n}\n```\n\nThat suggestion *does* work, but you have to first apply the first (erroring) suggestion to get it.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"yanchen4791\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105227/timeline", "performed_via_github_app": null, "state_reason": null}