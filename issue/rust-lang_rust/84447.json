{"url": "https://api.github.com/repos/rust-lang/rust/issues/84447", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84447/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84447/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84447/events", "html_url": "https://github.com/rust-lang/rust/issues/84447", "id": 865399173, "node_id": "MDU6SXNzdWU4NjUzOTkxNzM=", "number": 84447, "title": "Make an internal compiler lint for iterating of a `HashMap`", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 289259951, "node_id": "MDU6TGFiZWwyODkyNTk5NTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-help-wanted", "name": "E-help-wanted", "color": "02E10C", "default": false, "description": "Call for participation: Help is requested to fix this issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2021-04-22T19:34:50Z", "updated_at": "2023-04-16T02:03:59Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The iteration order of a `HashMap` depends on the `Hash` value of the keys. In rustc, the `Hash` value of a key can change between compilation sessions, even if the `HashStable` value remains the same (e.g. `DefId`, `Symbol`, etc.). This means that iterating over a `HashMap` can cause a query to produce different results given the same (as determined by `HashStable`) input. This can be quite subtle, as demonstrated by https://github.com/rust-lang/rust/pull/82272#issuecomment-825124318\n\nTo eliminate this source of issues, we should make an internal rustc-only lint for iterating over a `HashMap` in any way. This will need to cover explicit method calls (e.g. `.keys()` and `.values()`), as well as any usage of the `IntoIterator` impl for `HashMap`.\n\nNote that we don't want to ban the usage of `HashMap`s with unstable keys - as long as they're only used for lookup (and not iteration), it's much more efficient than repeatedly converting to the stable form of a key (e.g. `DefId` -> `DefPathHash` or `Symbol` -> `String`).\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":null}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84447/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84447/timeline", "performed_via_github_app": null, "state_reason": null}