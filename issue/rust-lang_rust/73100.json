{"url": "https://api.github.com/repos/rust-lang/rust/issues/73100", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73100/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73100/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73100/events", "html_url": "https://github.com/rust-lang/rust/issues/73100", "id": 633550005, "node_id": "MDU6SXNzdWU2MzM1NTAwMDU=", "number": 73100, "title": "Creating CString from nul-terminated data", "user": {"login": "r4v3n6101", "id": 30029970, "node_id": "MDQ6VXNlcjMwMDI5OTcw", "avatar_url": "https://avatars.githubusercontent.com/u/30029970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r4v3n6101", "html_url": "https://github.com/r4v3n6101", "followers_url": "https://api.github.com/users/r4v3n6101/followers", "following_url": "https://api.github.com/users/r4v3n6101/following{/other_user}", "gists_url": "https://api.github.com/users/r4v3n6101/gists{/gist_id}", "starred_url": "https://api.github.com/users/r4v3n6101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r4v3n6101/subscriptions", "organizations_url": "https://api.github.com/users/r4v3n6101/orgs", "repos_url": "https://api.github.com/users/r4v3n6101/repos", "events_url": "https://api.github.com/users/r4v3n6101/events{/privacy}", "received_events_url": "https://api.github.com/users/r4v3n6101/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-07T16:22:58Z", "updated_at": "2020-06-15T15:21:36Z", "closed_at": "2020-06-15T15:21:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems there's no idiomatic way to create `CString` from nul-terminated `Vec<u8>`. The only approriate way is to `pop()` last nul and then `from_vec_unchecked` will append a new one. Need the method just passes data as is (e.g. `CString::from_vec_with_nul` such as `CStr::from_bytes_with_nul`). \r\nPossibly, code should be like:\r\n\r\n```rust\r\npub unsafe fn from_vec_with_nul_unchecked(v: Vec<u8>) -> CString {\r\n    CString { inner: v.into_boxed_slice() }\r\n}\r\n```\r\nand safe version: \r\n```rust\r\npub fn from_vec_with_nul(v: Vec<u8>) -> Result<CString, FromBytesWithNulError> {\r\n    let nul_pos = memchr::memchr(0, bytes);\r\n    match nul_pos {\r\n        Some(nul_pos) if nul_pos + 1 == v.len() => Ok(unsafe { CString::from_vec_with_nul_unchecked(v) }),\r\n        Some(nul_pos) => Err(FromBytesWithNulError::interior_nul(nul_pos)),\r\n        None => Err(FromBytesWithNulError::not_nul_terminated()),\r\n    }\r\n}\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73100/reactions", "total_count": 6, "+1": 6, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73100/timeline", "performed_via_github_app": null, "state_reason": "completed"}