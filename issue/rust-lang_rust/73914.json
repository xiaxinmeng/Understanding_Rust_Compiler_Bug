{"url": "https://api.github.com/repos/rust-lang/rust/issues/73914", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73914/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73914/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73914/events", "html_url": "https://github.com/rust-lang/rust/issues/73914", "id": 648795863, "node_id": "MDU6SXNzdWU2NDg3OTU4NjM=", "number": 73914, "title": "Broken MIR in async fn generation", "user": {"login": "mtnmts", "id": 498349, "node_id": "MDQ6VXNlcjQ5ODM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/498349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtnmts", "html_url": "https://github.com/mtnmts", "followers_url": "https://api.github.com/users/mtnmts/followers", "following_url": "https://api.github.com/users/mtnmts/following{/other_user}", "gists_url": "https://api.github.com/users/mtnmts/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtnmts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtnmts/subscriptions", "organizations_url": "https://api.github.com/users/mtnmts/orgs", "repos_url": "https://api.github.com/users/mtnmts/repos", "events_url": "https://api.github.com/users/mtnmts/events{/privacy}", "received_events_url": "https://api.github.com/users/mtnmts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 679846574, "node_id": "MDU6TGFiZWw2Nzk4NDY1NzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-generators", "name": "A-generators", "color": "f7e101", "default": false, "description": "Area: Generators"}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}], "state": "closed", "locked": false, "assignee": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-07-01T08:50:50Z", "updated_at": "2020-07-07T05:03:52Z", "closed_at": "2020-07-07T05:03:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, This code attempts to increment a integer behind a tokio RwLock by 1, This causes a compiler error.\r\n\r\nMinimized example that reproduces the ICE:\r\n\r\n```rust\r\nuse tokio::sync::RwLock;\r\nuse std::io;\r\n\r\n#[tokio::main]\r\nasync fn main() ->  io::Result<()> {\r\n    State::default().crash_compiler().await; Ok(())\r\n}\r\n\r\n#[derive(Default)]\r\nstruct State {\r\n    value: RwLock<u64>,\r\n}\r\n\r\nimpl State {\r\n    async fn crash_compiler(&mut self) {\r\n        let i : u64 = 1;\r\n        *self.value.write().await = *self.value.read().await + i;\r\n    }\r\n}\r\n```\r\n\r\nBut, making this very small modification makes the code not break the compiler\r\n```rust\r\n...\r\n        let v = *self.value.read().await + i;\r\n        *self.value.write().await = v;\r\n...\r\n```\r\n\r\n\r\nmy `Cargo.toml` contains `tokio = {version = \"0.2.21\", features=[\"full\"] }` as a dependency.\r\n\r\nThis code does not compile, and generates the following error (full backtrace in bottom of the issue)\r\n```\r\n   Compiling compiler_bug v0.1.0 (/home/martin/code/compiler_bug)\r\nerror: internal compiler error: src/librustc_mir/transform/generator.rs:715:13: Broken MIR: generator contains type (u64, bool) in MIR, but typeck only knows about for<'r, 's, 't0, 't1, 't2, 't3, 't4, 't5, 't6> {std::future::ResumeTy, &'r mut State, u64, State, &'s tokio::sync::rwlock::RwLock<u64>, tokio::sync::rwlock::RwLock<u64>, impl std::future::Future, (), &'t2 tokio::sync::rwlock::RwLockReadGuard<'t3, u64>, tokio::sync::rwlock::RwLockReadGuard<'t4, u64>, impl std::future::Future}\r\n  --> src/main.rs:15:40\r\n   |\r\n15 |       async fn crash_compiler(&mut self) {\r\n   |  ________________________________________^\r\n16 | |         let i : u64 = 1;\r\n17 | |         *self.value.write().await = *self.value.read().await + i;\r\n18 | |     }\r\n   | |_____^\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/f455e46eae1a227d735091091144601b467e1565/src/libstd/macros.rs:13:23\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.46.0-nightly (f455e46ea 2020-06-20) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `compiler_bug`.\r\n```\r\n\r\n\r\n\r\n\r\n## Meta\r\nrustc --version --verbose\r\n\r\n```\r\nrustc 1.46.0-nightly (f455e46ea 2020-06-20)\r\nbinary: rustc\r\ncommit-hash: f455e46eae1a227d735091091144601b467e1565\r\ncommit-date: 2020-06-20\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.46.0-nightly\r\nLLVM version: 10.0\r\n```\r\n\r\nalso breaks the same way on `stable` (the traces attached are from nightly ^)\r\n\r\nrustup run stable rustc --version -v\r\n```\r\nrustc 1.44.1 (c7087fe00 2020-06-17)\r\nbinary: rustc\r\ncommit-hash: c7087fe00d2ba919df1d813c040a5d47e43b0fe7\r\ncommit-date: 2020-06-17\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.44.1\r\nLLVM version: 9.0\r\n```\r\n\r\n## Backtrace (RUST_BACKTRACE=1)\r\n\r\n```\r\n Compiling compiler_bug v0.1.0 (/home/martin/code/compiler_bug)\r\nerror: internal compiler error: src/librustc_mir/transform/generator.rs:715:13: Broken MIR: generator contains type (u64, bool) in MIR, but typeck only knows about for<'r, 's, 't0, 't1, 't2, 't3, 't4, 't5, 't6> {std::future::ResumeTy, &'r mut State, u64, State, &'s tokio::sync::rwlock::RwLock<u64>, tokio::sync::rwlock::RwLock<u64>, impl std::future::Future, (), &'t2 tokio::sync::rwlock::RwLockReadGuard<'t3, u64>, tokio::sync::rwlock::RwLockReadGuard<'t4, u64>, impl std::future::Future}\r\n  --> src/main.rs:15:40\r\n   |\r\n15 |       async fn crash_compiler(&mut self) {\r\n   |  ________________________________________^\r\n16 | |         let i : u64 = 1;\r\n17 | |         *self.value.write().await = *self.value.read().await + i;\r\n18 | |     }\r\n   | |_____^\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/f455e46eae1a227d735091091144601b467e1565/src/libstd/macros.rs:13:23\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1076\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1537\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:217\r\n  10: rustc_driver::report_ice\r\n  11: <alloc::boxed::Box<F> as core::ops::function::Fn<A>>::call\r\n             at /home/martin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/liballoc/boxed.rs:1090\r\n  12: proc_macro::bridge::client::<impl proc_macro::bridge::Bridge>::enter::{{closure}}::{{closure}}\r\n             at /home/martin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libproc_macro/bridge/client.rs:318\r\n  13: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:477\r\n  14: std::panicking::begin_panic\r\n  15: rustc_errors::HandlerInner::span_bug\r\n  16: rustc_errors::Handler::span_bug\r\n  17: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n  18: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n  19: rustc_middle::ty::context::tls::with_opt\r\n  20: rustc_middle::util::bug::opt_span_bug_fmt\r\n  21: rustc_middle::util::bug::span_bug_fmt\r\n  22: <rustc_mir::transform::generator::StateTransform as rustc_mir::transform::MirPass>::run_pass\r\n  23: rustc_mir::transform::run_passes\r\n  24: rustc_mir::transform::run_optimization_passes\r\n  25: rustc_mir::transform::optimized_mir\r\n  26: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::optimized_mir>::compute\r\n  27: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  28: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  29: rustc_data_structures::stack::ensure_sufficient_stack\r\n  30: rustc_query_system::query::plumbing::get_query_impl\r\n  31: rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt>::layout_raw_uncached\r\n  32: rustc_middle::ty::layout::layout_raw\r\n  33: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::layout_raw>::compute\r\n  34: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  35: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  36: rustc_data_structures::stack::ensure_sufficient_stack\r\n  37: rustc_query_system::query::plumbing::get_query_impl\r\n  38: <rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt> as rustc_target::abi::LayoutOf>::layout_of\r\n  39: <core::iter::adapters::ResultShunt<I,E> as core::iter::traits::iterator::Iterator>::next\r\n  40: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter\r\n  41: <core::iter::adapters::ResultShunt<I,E> as core::iter::traits::iterator::Iterator>::next\r\n  42: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter\r\n  43: rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt>::layout_raw_uncached\r\n  44: rustc_middle::ty::layout::layout_raw\r\n  45: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::layout_raw>::compute\r\n  46: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  47: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  48: rustc_data_structures::stack::ensure_sufficient_stack\r\n  49: rustc_query_system::query::plumbing::get_query_impl\r\n  50: <rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt> as rustc_target::abi::LayoutOf>::layout_of\r\n  51: <core::iter::adapters::ResultShunt<I,E> as core::iter::traits::iterator::Iterator>::next\r\n  52: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter\r\n  53: <core::iter::adapters::ResultShunt<I,E> as core::iter::traits::iterator::Iterator>::next\r\n  54: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter\r\n  55: rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt>::layout_raw_uncached\r\n  56: rustc_middle::ty::layout::layout_raw\r\n  57: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::layout_raw>::compute\r\n  58: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  59: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  60: rustc_data_structures::stack::ensure_sufficient_stack\r\n  61: rustc_query_system::query::plumbing::get_query_impl\r\n  62: <rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt> as rustc_target::abi::LayoutOf>::layout_of\r\n  63: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter\r\n  64: <core::iter::adapters::ResultShunt<I,E> as core::iter::traits::iterator::Iterator>::next\r\n  65: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter\r\n  66: rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt>::layout_raw_uncached\r\n  67: rustc_middle::ty::layout::layout_raw\r\n  68: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::layout_raw>::compute\r\n  69: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  70: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  71: rustc_data_structures::stack::ensure_sufficient_stack\r\n  72: rustc_query_system::query::plumbing::get_query_impl\r\n  73: <rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt> as rustc_target::abi::LayoutOf>::layout_of\r\n  74: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold\r\n  75: <core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::try_fold\r\n  76: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter\r\n  77: rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt>::layout_raw_uncached\r\n  78: rustc_middle::ty::layout::layout_raw\r\n  79: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::layout_raw>::compute\r\n  80: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  81: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  82: rustc_data_structures::stack::ensure_sufficient_stack\r\n  83: rustc_query_system::query::plumbing::get_query_impl\r\n  84: <rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt> as rustc_target::abi::LayoutOf>::layout_of\r\n  85: <rustc_mir::transform::const_prop::ConstPropagator as rustc_middle::mir::visit::MutVisitor>::visit_statement\r\n  86: <rustc_mir::transform::const_prop::ConstPropagator as rustc_middle::mir::visit::MutVisitor>::visit_body\r\n  87: <rustc_mir::transform::const_prop::ConstProp as rustc_mir::transform::MirPass>::run_pass\r\n  88: rustc_mir::transform::run_passes\r\n  89: rustc_mir::transform::run_optimization_passes\r\n  90: rustc_mir::transform::optimized_mir\r\n  91: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::optimized_mir>::compute\r\n  92: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  93: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  94: rustc_data_structures::stack::ensure_sufficient_stack\r\n  95: rustc_query_system::query::plumbing::get_query_impl\r\n  96: rustc_middle::ty::<impl rustc_middle::ty::context::TyCtxt>::instance_mir\r\n  97: rustc_mir::monomorphize::collector::collect_neighbours\r\n  98: rustc_data_structures::stack::ensure_sufficient_stack\r\n  99: rustc_mir::monomorphize::collector::collect_items_rec\r\n 100: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n 101: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n 102: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::collect_and_partition_mono_items>::compute\r\n 103: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n 104: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n 105: rustc_data_structures::stack::ensure_sufficient_stack\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.46.0-nightly (f455e46ea 2020-06-20) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [optimized_mir] optimizing MIR for `State::crash_compiler::{{closure}}#0`\r\n#1 [layout_raw] computing layout of `[static generator@src/main.rs:15:40: 18:6 self:&mut State for<'r, 's, 't0, 't1, 't2, 't3, 't4, 't5, 't6> {std::future::ResumeTy, &'r mut State, u64, State, &'s tokio::sync::rwlock::RwLock<u64>, tokio::sync::rwlock::RwLock<u64>, impl std::future::Future, (), &'t2 tokio::sync::rwlock::RwLockReadGuard<'t3, u64>, tokio::sync::rwlock::RwLockReadGuard<'t4, u64>, impl std::future::Future}]`\r\n#2 [layout_raw] computing layout of `std::future::from_generator::GenFuture<[static generator@src/main.rs:15:40: 18:6 self:&mut State for<'r, 's, 't0, 't1, 't2, 't3, 't4, 't5, 't6> {std::future::ResumeTy, &'r mut State, u64, State, &'s tokio::sync::rwlock::RwLock<u64>, tokio::sync::rwlock::RwLock<u64>, impl std::future::Future, (), &'t2 tokio::sync::rwlock::RwLockReadGuard<'t3, u64>, tokio::sync::rwlock::RwLockReadGuard<'t4, u64>, impl std::future::Future}]>`\r\n#3 [layout_raw] computing layout of `std::mem::ManuallyDrop<std::future::from_generator::GenFuture<[static generator@src/main.rs:15:40: 18:6 self:&mut State for<'r, 's, 't0, 't1, 't2, 't3, 't4, 't5, 't6> {std::future::ResumeTy, &'r mut State, u64, State, &'s tokio::sync::rwlock::RwLock<u64>, tokio::sync::rwlock::RwLock<u64>, impl std::future::Future, (), &'t2 tokio::sync::rwlock::RwLockReadGuard<'t3, u64>, tokio::sync::rwlock::RwLockReadGuard<'t4, u64>, impl std::future::Future}]>>`\r\n#4 [layout_raw] computing layout of `std::mem::MaybeUninit<std::future::from_generator::GenFuture<[static generator@src/main.rs:15:40: 18:6 self:&mut State for<'r, 's, 't0, 't1, 't2, 't3, 't4, 't5, 't6> {std::future::ResumeTy, &'r mut State, u64, State, &'s tokio::sync::rwlock::RwLock<u64>, tokio::sync::rwlock::RwLock<u64>, impl std::future::Future, (), &'t2 tokio::sync::rwlock::RwLockReadGuard<'t3, u64>, tokio::sync::rwlock::RwLockReadGuard<'t4, u64>, impl std::future::Future}]>>`\r\n#5 [layout_raw] computing layout of `[static generator@src/main.rs:4:1: 4:15 for<'r, 's> {std::future::ResumeTy, &'r mut State, State, impl std::future::Future, ()}]`\r\n#6 [optimized_mir] optimizing MIR for `main`\r\n#7 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `compiler_bug`.\r\n```\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73914/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 1, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73914/timeline", "performed_via_github_app": null, "state_reason": "completed"}