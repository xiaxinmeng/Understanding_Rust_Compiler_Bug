{"url": "https://api.github.com/repos/rust-lang/rust/issues/10084", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/10084/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/10084/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/10084/events", "html_url": "https://github.com/rust-lang/rust/issues/10084", "id": 21629222, "node_id": "MDU6SXNzdWUyMTYyOTIyMg==", "number": 10084, "title": "std::rand::distributions::Exp1 is biased", "user": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-10-26T07:06:24Z", "updated_at": "2014-06-16T21:56:41Z", "closed_at": "2013-11-01T09:21:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following program generates 10,000 samples of the sample mean of 100,000 Exponential(1) random variates.\n\n``` rust\nuse std::rand::{StdRng, Rng};\nuse std::rand::distributions::Exp1;\n\nstatic SAMPLES_PER_MEAN: uint = 100_000;\nstatic NUM_MEANS: uint = 10_000;\n\nfn main() {\n    let mut rng = StdRng::new();\n    let n = SAMPLES_PER_MEAN as f64;\n\n    for _ in range(0, NUM_MEANS) {\n        let mut s = 0.;\n        for _ in range(0, SAMPLES_PER_MEAN) {\n            s += *rng.gen::<Exp1>();\n        }\n        println!(\"{:.20}\", s / n)\n    }\n}\n```\n\nThe following plot plots the kernel density estimate of the above (solid) line, against the expected density based on the central limit theorem (dashed). They should match fairly closely with samples of this size. (The vertical line is the expected mean value of the samples, i.e. the peak should lie there.)\n\n![exp-density](https://f.cloud.github.com/assets/1203825/1412868/939a8c94-3df7-11e3-9c14-f2b61db54847.png)\n\nNote that the scale is slightly deceptive and the bias isn't _huge_, the sample mean is converging to approximately 0.9964 rather than 1. However, it is highly unlikely that this is by chance with such large samples (1 billion samples in total), and my experimentation has shown it to be stable, i.e. running it several times with many different values of `NUM_MEANS` and `SAMPLES_PER_MEAN` all give plots similar to the above, with overall means around 0.9964.\n\n(Plot created with R via:\n\n``` R\ndat <- read.table('out.csv')$V1\nx <- seq(0.98, 1.02, by=0.0001)\npng('exp-density.png', width=600, height=600)\nplot(density(dat), main='Density of 10000 means of 100000 samples of Exp(1)', lty=1)\nlines(x, dnorm(x, 1, 1/sqrt(100000)), lty=2)\nlines(c(1.0, 1.0), c(-1000, 1000), lty=3)\nlegend('topright', c('Sample density', 'True density'), lty=c(1,2))\ndev.off()\n```\n\nFWIW, generating a similar sample in R matches the expected density almost exactly.)\n\n---\n\nHaving done a very small amount of investigation, I think this might be an error in the Ziggurat tables for exp, or an error in the implementation of Ziggurat for non-symmetric random variables. (Reasons: the `f64` generator seems to match a uniform(0,1) closely, and the normal generator (which also uses Ziggurat) matches its expected distribution closely too. That said, I didn't check either of these super closely.)\n", "closed_by": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/10084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/10084/timeline", "performed_via_github_app": null, "state_reason": "completed"}