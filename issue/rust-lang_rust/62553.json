{"url": "https://api.github.com/repos/rust-lang/rust/issues/62553", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62553/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62553/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62553/events", "html_url": "https://github.com/rust-lang/rust/issues/62553", "id": 466064409, "node_id": "MDU6SXNzdWU0NjYwNjQ0MDk=", "number": 62553, "title": "CString::into_raw() trigger miri", "user": {"login": "Stargateur", "id": 7503742, "node_id": "MDQ6VXNlcjc1MDM3NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/7503742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stargateur", "html_url": "https://github.com/Stargateur", "followers_url": "https://api.github.com/users/Stargateur/followers", "following_url": "https://api.github.com/users/Stargateur/following{/other_user}", "gists_url": "https://api.github.com/users/Stargateur/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stargateur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stargateur/subscriptions", "organizations_url": "https://api.github.com/users/Stargateur/orgs", "repos_url": "https://api.github.com/users/Stargateur/repos", "events_url": "https://api.github.com/users/Stargateur/events{/privacy}", "received_events_url": "https://api.github.com/users/Stargateur/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 1244499056, "node_id": "MDU6TGFiZWwxMjQ0NDk5MDU2", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-miri", "name": "A-miri", "color": "f7e101", "default": false, "description": "Area: The miri tool"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-07-10T02:28:16Z", "updated_at": "2019-07-14T17:30:01Z", "closed_at": "2019-07-14T17:30:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```rust\r\nuse std::ffi::CString;\r\n\r\nfn main() {\r\n    let _hello = CString::new(\"Hello\")\r\n        .expect(\"CString::new failed\")\r\n        .into_raw();\r\n}\r\n```\r\n\r\nThis simple code should not trigger any error, except a leak of course. But miri report an error before:\r\n\r\n```none\r\nerror[E0080]: Miri evaluation error: trying to reborrow for Unique, but parent tag <2145> does not have an appropriate item in the borrow stack\r\n   --> /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/ffi/c_str.rs:605:13\r\n    |\r\n605 |             result\r\n    |             ^^^^^^ Miri evaluation error: trying to reborrow for Unique, but parent tag <2145> does not have an appropriate item in the borrow stack\r\n    |\r\n    = note: inside call to `std::ffi::CString::into_inner` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/ffi/c_str.rs:440:23\r\nnote: inside call to `std::ffi::CString::into_raw` at src/main.rs:4:18\r\n   --> src/main.rs:4:18\r\n    |\r\n4   |       let _hello = CString::new(\"Hello\")\r\n    |  __________________^\r\n5   | |         .expect(\"CString::new failed\")\r\n6   | |         .into_raw();\r\n    | |___________________^\r\n    = note: inside call to `main` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:64:34\r\n    = note: inside call to closure at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:52:53\r\n    = note: inside call to closure at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:294:40\r\n    = note: inside call to `std::panicking::try::do_call::<[closure@DefId(1:5878 ~ std[82ff]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32>` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:290:5\r\n    = note: inside call to `std::panicking::try::<i32, [closure@DefId(1:5878 ~ std[82ff]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe]>` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:388:9\r\n    = note: inside call to `std::panic::catch_unwind::<[closure@DefId(1:5878 ~ std[82ff]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32>` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:52:25\r\n    = note: inside call to `std::rt::lang_start_internal` at /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:64:5\r\n    = note: inside call to `std::rt::lang_start::<()>`\r\n```\r\n\r\nFirst, I suspected a miri bug but look like the code of `CString` could be the problem, I don't really understand the code of the [`into_inner()`](https://github.com/rust-lang/rust/blob/e7efdf1c33c699def0e594f03337efc78120bd9c/src/libstd/ffi/c_str.rs#L601) call by [`into_raw()`](https://github.com/rust-lang/rust/blob/e7efdf1c33c699def0e594f03337efc78120bd9c/src/libstd/ffi/c_str.rs#L439).\r\n\r\n```rust\r\nfn into_inner(self) -> Box<[u8]> {\r\n    unsafe {\r\n        let result = ptr::read(&self.inner);\r\n        mem::forget(self);\r\n        result\r\n    }\r\n}\r\n```\r\n\r\nIs this code correct and it's a miri bug or the code is incorrect ?\r\n\r\n@matklad as you write the code maybe you want be ping.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62553/timeline", "performed_via_github_app": null, "state_reason": "completed"}