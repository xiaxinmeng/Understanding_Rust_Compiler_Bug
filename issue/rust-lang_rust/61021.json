{"url": "https://api.github.com/repos/rust-lang/rust/issues/61021", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61021/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61021/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61021/events", "html_url": "https://github.com/rust-lang/rust/issues/61021", "id": 446851144, "node_id": "MDU6SXNzdWU0NDY4NTExNDQ=", "number": 61021, "title": "trait bound is reported not satisfied although it is", "user": {"login": "sidgilles", "id": 50890155, "node_id": "MDQ6VXNlcjUwODkwMTU1", "avatar_url": "https://avatars.githubusercontent.com/u/50890155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sidgilles", "html_url": "https://github.com/sidgilles", "followers_url": "https://api.github.com/users/sidgilles/followers", "following_url": "https://api.github.com/users/sidgilles/following{/other_user}", "gists_url": "https://api.github.com/users/sidgilles/gists{/gist_id}", "starred_url": "https://api.github.com/users/sidgilles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sidgilles/subscriptions", "organizations_url": "https://api.github.com/users/sidgilles/orgs", "repos_url": "https://api.github.com/users/sidgilles/repos", "events_url": "https://api.github.com/users/sidgilles/events{/privacy}", "received_events_url": "https://api.github.com/users/sidgilles/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-21T22:22:48Z", "updated_at": "2022-12-28T00:02:20Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nRustc report an unsatisfied trait bound. However, following the compiler suggestion does not help much. Working with tokio.\r\nIs #43580 also relevant for this one ?\r\nThanks.\r\n\r\nSample code.\r\n```rust\r\n\r\nuse tokio::codec::{Encoder, Decoder, LinesCodec, Framed};\r\nuse tokio::io::{AsyncRead, AsyncWrite, Error};\r\n// other uses here...\r\n\r\nstruct DummyServer<T, U>{\r\n    pub stream_instant : Box<Stream<Item=Instant, Error=tokio::timer::Error> + Send>,\r\n    pub stream_line : Box<Framed<T, U>>,\r\n    pub closure_timer : Box<FnMut(bool, &mut Box<Framed<T, U>>, Option<<U as Decoder>::Item>) -> () + Send>,\r\n}\r\n\r\nimpl <T, U> Future for DummyServer<T, U>\r\n    where U : Encoder + Decoder, T : AsyncRead + AsyncWrite\r\n {\r\n    type Item = ();\r\n    type Error = ();\r\n\r\n    fn poll(&mut self) ->  Result<Async<Self::Item>, Self::Error> {\r\n       // some code here...\r\n    }\r\n}\r\n```\r\n\r\nCompiler output.\r\n```\r\nerror[E0277]: the trait bound `U: tokio::codec::Decoder` is not satisfied\r\n  --> driver_com/common/src/main.rs:54:5\r\n   |\r\n54 |     pub closure_timer : Box<FnMut(bool, &mut Box<Framed<T, U>>, Option<<U as Decoder>::Item>) -> () + Send>,\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `tokio::codec::Decoder` is not implemented for `U`\r\n   |\r\n   = help: consider adding a `where U: tokio::codec::Decoder` bound\r\n```\r\n\r\nThis is happening both on stable and nightly, freshly updated.\r\n```\r\n  stable-x86_64-unknown-linux-gnu unchanged - rustc 1.34.2 (6c2484dc3 2019-05-13)\r\n   nightly-x86_64-unknown-linux-gnu updated - rustc 1.36.0-nightly (d35181ad8 2019-05-20)\r\n```\r\n\r\nDependencies.\r\n```\r\n[dependencies]\r\nfutures = { package = \"futures\", version = \"0.1\" }\r\ntokio = { version = \"0.1\" }\r\n```\r\n\r\n\r\n\r\n**Edit:**\r\nThis sample code get compiled.\r\nI would say that:\r\n  1) the message `help: consider adding a 'where U: tokio::codec::Decoder' bound` is misleading as the `where` clause does not apply on struct definition\r\n  2) it would be nice to see this unusual case in the docs, really nice.\r\n\r\n```rust\r\nstruct DummyServer<T, U : Encoder + Decoder>{\r\n    pub stream_instant : Box<Stream<Item=Instant, Error=tokio::timer::Error> + Send>,\r\n    pub stream_line : Box<Framed<T, U>>,\r\n    pub closure_timer : Box<FnMut(bool, &mut Box<Framed<T, U>>, Option<<U as Decoder>::Item>) -> () + Send>,\r\n}\r\n\r\nimpl <T,U> Future for DummyServer<T,U>\r\n    where T : AsyncRead + AsyncWrite, U : Encoder + Decoder\r\n {\r\n    type Item = ();\r\n    type Error = ();\r\n\r\n    fn poll(&mut self) ->  Result<Async<Self::Item>, Self::Error> {\r\n       // some code here...\r\n    }\r\n}\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61021/timeline", "performed_via_github_app": null, "state_reason": null}