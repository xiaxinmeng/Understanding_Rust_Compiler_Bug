{"url": "https://api.github.com/repos/rust-lang/rust/issues/8644", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/8644/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/8644/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/8644/events", "html_url": "https://github.com/rust-lang/rust/issues/8644", "id": 18307253, "node_id": "MDU6SXNzdWUxODMwNzI1Mw==", "number": 8644, "title": "std::rand::{gen_int_range,gen_uint_range}", "user": {"login": "sruggier", "id": 427071, "node_id": "MDQ6VXNlcjQyNzA3MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/427071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sruggier", "html_url": "https://github.com/sruggier", "followers_url": "https://api.github.com/users/sruggier/followers", "following_url": "https://api.github.com/users/sruggier/following{/other_user}", "gists_url": "https://api.github.com/users/sruggier/gists{/gist_id}", "starred_url": "https://api.github.com/users/sruggier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sruggier/subscriptions", "organizations_url": "https://api.github.com/users/sruggier/orgs", "repos_url": "https://api.github.com/users/sruggier/repos", "events_url": "https://api.github.com/users/sruggier/events{/privacy}", "received_events_url": "https://api.github.com/users/sruggier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-08-20T16:52:07Z", "updated_at": "2014-06-16T21:56:35Z", "closed_at": "2013-09-22T15:30:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "The gen_uint_range function in std::rand uses the modulo operator to remap generated numbers from [0, uint::max_value] into the range [start, end). If uint::max_value is not a multiple of (end - start), then this technique will result in random numbers of an uneven probability distribution. For small values of (end - start), the error is negligible, but as the size of (end - start) approaches the size of uint::max_value, there starts to be a non-negligible error.\n\nTo illustrate the problem, imagine if (start, end) were (0, uint::max_value/3*2). All the random numbers above 2/3 of the max_value would be remapped to the range of [0, uint::max_value/3 ], and it would be twice as probable that the final number is within the first half of the requested range.\n", "closed_by": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/8644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/8644/timeline", "performed_via_github_app": null, "state_reason": "completed"}