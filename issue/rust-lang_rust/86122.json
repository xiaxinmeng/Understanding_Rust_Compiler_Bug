{"url": "https://api.github.com/repos/rust-lang/rust/issues/86122", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86122/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86122/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86122/events", "html_url": "https://github.com/rust-lang/rust/issues/86122", "id": 914078762, "node_id": "MDU6SXNzdWU5MTQwNzg3NjI=", "number": 86122, "title": "Can `rustc-dev` be made available for the `wasm32-unknown-unknown` target?", "user": {"login": "thomaseizinger", "id": 5486389, "node_id": "MDQ6VXNlcjU0ODYzODk=", "avatar_url": "https://avatars.githubusercontent.com/u/5486389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomaseizinger", "html_url": "https://github.com/thomaseizinger", "followers_url": "https://api.github.com/users/thomaseizinger/followers", "following_url": "https://api.github.com/users/thomaseizinger/following{/other_user}", "gists_url": "https://api.github.com/users/thomaseizinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomaseizinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomaseizinger/subscriptions", "organizations_url": "https://api.github.com/users/thomaseizinger/orgs", "repos_url": "https://api.github.com/users/thomaseizinger/repos", "events_url": "https://api.github.com/users/thomaseizinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thomaseizinger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 474645165, "node_id": "MDU6TGFiZWw0NzQ2NDUxNjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-wasm", "name": "O-wasm", "color": "6e6ec0", "default": false, "description": "Target: WASM (WebAssembly), http://webassembly.org/"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-06-08T00:15:35Z", "updated_at": "2021-08-21T02:47:39Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a follow-up issue of https://github.com/rust-lang/rustfmt/issues/4845.\r\n\r\nIn summary: It was previously possible to compile rustfmt on wasm32-unknown-unknown. With the switch to rustfmt depending on `rustc-dev` instead of the `ap-*` crates from crates.io, this is no longer possible because the `rustc-dev` component is not available for wasm32-unknown-unknown.\r\n\r\nIs it feasible to make `rustc-dev` available for wasm32-unknown-unknown? Rustfmt only consumes some of the crates available through `rustc-dev`:\r\n\r\n```\r\nextern crate rustc_ast;\r\nextern crate rustc_ast_pretty;\r\nextern crate rustc_data_structures;\r\nextern crate rustc_errors;\r\nextern crate rustc_expand;\r\nextern crate rustc_parse;\r\nextern crate rustc_session;\r\n```\r\n\r\nUnless a component needs to be fully supported on a platform in order to be shipped with rustup, we could conditionally expose only those crates that actually compile on `wasm32-unknown-unknown`.\r\n\r\nI don't know what the best path forward is here. The overall motivation for compiling rustfmt to wasm32-unknown-unknown is to move the [`dprint` plugin](https://dprint.dev/plugins/rustfmt/) back from a process plugin to a wasm plugin that is properly sandboxed.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86122/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86122/timeline", "performed_via_github_app": null, "state_reason": null}