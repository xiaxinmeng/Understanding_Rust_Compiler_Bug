{"url": "https://api.github.com/repos/rust-lang/rust/issues/108999", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108999/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108999/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108999/events", "html_url": "https://github.com/rust-lang/rust/issues/108999", "id": 1619512862, "node_id": "I_kwDOAAsO6M5gh84e", "number": 108999, "title": "trait object: specific use case of variance and/or coercion", "user": {"login": "plafer", "id": 5769562, "node_id": "MDQ6VXNlcjU3Njk1NjI=", "avatar_url": "https://avatars.githubusercontent.com/u/5769562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plafer", "html_url": "https://github.com/plafer", "followers_url": "https://api.github.com/users/plafer/followers", "following_url": "https://api.github.com/users/plafer/following{/other_user}", "gists_url": "https://api.github.com/users/plafer/gists{/gist_id}", "starred_url": "https://api.github.com/users/plafer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plafer/subscriptions", "organizations_url": "https://api.github.com/users/plafer/orgs", "repos_url": "https://api.github.com/users/plafer/repos", "events_url": "https://api.github.com/users/plafer/events{/privacy}", "received_events_url": "https://api.github.com/users/plafer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 125141240, "node_id": "MDU6TGFiZWwxMjUxNDEyNDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-dst", "name": "A-dst", "color": "f7e101", "default": false, "description": "Area: Dynamically Sized Types"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-03-10T19:27:32Z", "updated_at": "2023-04-05T17:25:37Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Filing this as a bug report because that's my best guess for what I believe is an inconsistency. Or perhaps simply the reference would need to be updated to explain the following.\r\n\r\n> Note that I will use `<:` to denote a \"subtype\" relationship.\r\n\r\nI tried this code:\r\n\r\n```rust\r\ntrait Module {}\r\n\r\nstruct Foo {\r\n    module_box: Box<dyn Module + 'static>,\r\n    module_rc: Rc<dyn Module + 'static>,\r\n}\r\n\r\nimpl Foo {\r\n    fn mut_box<'s>(&'s mut self) -> &'s mut (dyn Module + 's) {\r\n        // this works\r\n        self.module_box.as_mut() // : &'s mut (dyn Module + 'static)\r\n    }\r\n\r\n    fn mut_rc<'s>(&'s mut self) -> Option<&'s mut (dyn Module + 's)> {\r\n        // this doesn't work\r\n        Rc::get_mut(&mut self.module_rc) // : Option<&'s mut (dyn Module + 'static)>\r\n        \r\n        // but this does\r\n//      match Rc::get_mut(&mut self.module_rc) {\r\n//        Some(m) => Some(m),\r\n//        None => None,\r\n//      }\r\n    }\r\n}\r\n```\r\n\r\nI have 2 related questions:\r\n\r\n1. why does the `mut_box()` implementation work?\r\n2. why doesn't the `mut_rc()` implement work?\r\n\r\nFor (1), I first assumed that subtyping/variance was the reason, since `(dyn Module + 'static) <: (dyn Module + 's)` (although I wasn't able to 100% confirm). However, [according to the reference](https://doc.rust-lang.org/reference/subtyping.html#variance), `&'a mut T` is invariant over T; so if I'm reading this correctly, `&'s mut (dyn Module + 'static)` is NOT a subtype of `&'s mut (dyn Module + 's)`. I then thought maybe an implicit coercion could then explain why it compiled, but was not able to find one in the [list of coercion types](https://doc.rust-lang.org/reference/type-coercions.html#coercion-types). **Is this a bug?**\r\n\r\nQuestion (2) is very similar, except that the whole thing is wrapped in an `Option`, which seems to be the reason why it fails; the commented-out code unwraps the `Option`, which I believe sends us back to (1). **Do we expect `Rc::get_mut(&mut self.module_rc)` to work, given that (1) works?**\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.68.0 (2c8cc3432 2023-03-06)\r\nbinary: rustc\r\ncommit-hash: 2c8cc343237b8f7d5a3c3703e3a87f2eb2c54a74\r\ncommit-date: 2023-03-06\r\nhost: aarch64-apple-darwin\r\nrelease: 1.68.0\r\nLLVM version: 15.0.6\r\n```\r\n\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nerror: lifetime may not live long enough\r\n  --> fool/src/main.rs:21:9\r\n   |\r\n19 |     fn mut_rc<'s>(&'s mut self) -> Option<&'s mut (dyn Module + 's)> {\r\n   |               -- lifetime `'s` defined here\r\n20 |         // this doesn't work\r\n21 |         Rc::get_mut(&mut self.module_rc) // : Option<&'s mut (dyn Module + 'static)>\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'s` must outlive `'static`\r\n   |\r\n   = note: requirement occurs because of a mutable reference to `dyn Module`\r\n   = note: mutable references are invariant over their type parameter\r\n   = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance\r\n\r\nerror: could not compile `rust` due to previous error\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108999/timeline", "performed_via_github_app": null, "state_reason": null}