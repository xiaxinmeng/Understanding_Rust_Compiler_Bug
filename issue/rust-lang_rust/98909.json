{"url": "https://api.github.com/repos/rust-lang/rust/issues/98909", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98909/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98909/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98909/events", "html_url": "https://github.com/rust-lang/rust/issues/98909", "id": 1293768375, "node_id": "I_kwDOAAsO6M5NHVa3", "number": 98909, "title": "Error Report on Unused Generic Parameters", "user": {"login": "realquantumcookie", "id": 18230652, "node_id": "MDQ6VXNlcjE4MjMwNjUy", "avatar_url": "https://avatars.githubusercontent.com/u/18230652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/realquantumcookie", "html_url": "https://github.com/realquantumcookie", "followers_url": "https://api.github.com/users/realquantumcookie/followers", "following_url": "https://api.github.com/users/realquantumcookie/following{/other_user}", "gists_url": "https://api.github.com/users/realquantumcookie/gists{/gist_id}", "starred_url": "https://api.github.com/users/realquantumcookie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/realquantumcookie/subscriptions", "organizations_url": "https://api.github.com/users/realquantumcookie/orgs", "repos_url": "https://api.github.com/users/realquantumcookie/repos", "events_url": "https://api.github.com/users/realquantumcookie/events{/privacy}", "received_events_url": "https://api.github.com/users/realquantumcookie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-07-05T04:24:32Z", "updated_at": "2022-07-13T07:42:24Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: [code](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=c9d54a17c9086dd4f7d66d00262ddb5d)\r\n\r\n```rust\r\npub trait SomeGenericTrait<Struct>{\r\n    fn do_something(&self,data: &Struct) -> String;\r\n}\r\n\r\npub struct SomeOtherStruct<T: SomeGenericTrait<S>, S>{\r\n    placeholder: PhantomData<S>, //a placeholder variable is required here for the compiler to remain calm\r\n    pub abc: T\r\n}\r\n```\r\n\r\nIf we were to remove the `PhantomData<S>` typed member `placeholder` in `SomeOtherStruct`, the compiler would spit out the following error\r\n```\r\n |\r\n7 | pub struct SomeOtherStruct<T: SomeGenericTrait<S>, S>{\r\n  |                                                    ^ unused parameter\r\n  |\r\n  = help: consider removing `S`, referring to it in a field, or using a marker such as `PhantomData`\r\n  = help: if you intended `S` to be a const parameter, use `const S: usize` instead\r\n```\r\n\r\nBut if we follow the direction of the compiler and further remove the `S` type parameter in `SomeOtherStruct`, we get \r\n\r\n```\r\nerror[[E0412]](https://doc.rust-lang.org/nightly/error-index.html#E0412): cannot find type `S` in this scope\r\n --> src/main.rs:7:48\r\n  |\r\n7 | pub struct SomeOtherStruct<T: SomeGenericTrait<S>>{\r\n  |                                                ^ not found in this scope\r\n\r\nFor more information about this error, try `rustc --explain E0412`.\r\n```\r\n\r\nSo I was wondering if there's a better way for the compiler to either:\r\n1. not output an error since `S` was used as a type parameter for `T`\r\n2. add support to place holder type parameters to enable semantics like `pub struct SomeOtherStruct<T: SomeGenericTrait<_>>{...}`\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98909/timeline", "performed_via_github_app": null, "state_reason": null}