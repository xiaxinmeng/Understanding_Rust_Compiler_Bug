{"url": "https://api.github.com/repos/rust-lang/rust/issues/102640", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102640/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102640/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102640/events", "html_url": "https://github.com/rust-lang/rust/issues/102640", "id": 1395499067, "node_id": "I_kwDOAAsO6M5TLaA7", "number": 102640, "title": "ICE generic_const_exprs when only enabled in lib and not bin", "user": {"login": "SeeSpring", "id": 30735327, "node_id": "MDQ6VXNlcjMwNzM1MzI3", "avatar_url": "https://avatars.githubusercontent.com/u/30735327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SeeSpring", "html_url": "https://github.com/SeeSpring", "followers_url": "https://api.github.com/users/SeeSpring/followers", "following_url": "https://api.github.com/users/SeeSpring/following{/other_user}", "gists_url": "https://api.github.com/users/SeeSpring/gists{/gist_id}", "starred_url": "https://api.github.com/users/SeeSpring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SeeSpring/subscriptions", "organizations_url": "https://api.github.com/users/SeeSpring/orgs", "repos_url": "https://api.github.com/users/SeeSpring/repos", "events_url": "https://api.github.com/users/SeeSpring/events{/privacy}", "received_events_url": "https://api.github.com/users/SeeSpring/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}, {"id": 5226739262, "node_id": "LA_kwDOAAsO6M8AAAABN4m2Pg", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-incomplete-features", "name": "requires-incomplete-features", "color": "76dcde", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-10-04T00:21:29Z", "updated_at": "2023-03-04T23:29:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n// lib.rs\r\n#![feature(portable_simd)]\r\n#![feature(generic_const_exprs)]\r\n\r\nuse core::simd::*;\r\n\r\nfn join<T, const N: usize>([a, b]: [Simd<T, N>; 2]) -> Simd<T, { N * 2 }>\r\nwhere\r\n    T: SimdElement,\r\n    LaneCount<N>: SupportedLaneCount,\r\n    LaneCount<{ N * 2 }>: SupportedLaneCount,\r\n{\r\n    struct S;\r\n    const fn get_swizzle<const N: usize>() -> [Which; N * 2] {\r\n        let out = [Which::First(0); N * 2];\r\n        out\r\n    }\r\n    impl<const N: usize> Swizzle2<N, { N * 2 }> for S {\r\n        const INDEX: [Which; N * 2] = get_swizzle::<N>();\r\n    }\r\n    S::swizzle2(a, b)\r\n}\r\n\r\npub fn test<const N: usize>()\r\nwhere\r\n    LaneCount<N>: SupportedLaneCount,\r\n    LaneCount<{ N * 2 }>: SupportedLaneCount,\r\n{\r\n    let v = Simd::<f32, N>::default();\r\n    join([v, v]);\r\n}\r\n\r\n// main.rs\r\n#![feature(portable_simd)]\r\n// #![feature(generic_const_exprs)]\r\n\r\nfn main() {\r\n    two::test::<8>();\r\n}\r\n```\r\nNote that the code runs fine if combined into one file.\r\nUncomment the line in main.rs for a workaround.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.66.0-nightly (57f097ea2 2022-10-01)\r\nbinary: rustc\r\ncommit-hash: 57f097ea25f2c05f424fc9b9dc50dbd6d399845c\r\ncommit-date: 2022-10-01\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.66.0-nightly\r\nLLVM version: 15.0.2\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler\\rustc_monomorphize\\src\\collector.rs:940:13\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.66.0-nightly (57f097ea2 2022-10-01) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED] -C target-cpu=native  \r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler\\rustc_monomorphize\\src\\collector.rs:940:13\r\nstack backtrace:\r\n   0:     0x7ffeb7ab91c2 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h143df0519cd3d364\r\n   1:     0x7ffeb7af43fb - core::fmt::write::hc14a7656b75d53d0\r\n   2:     0x7ffeb7aab97a - <std::io::IoSlice as core::fmt::Debug>::fmt::h31adba04a0751347\r\n   3:     0x7ffeb7abc8b4 - std::panicking::default_hook::hf6a1a055ecc314ef\r\n   4:     0x7ffeb7abc4ea - std::panicking::default_hook::hf6a1a055ecc314ef\r\n   5:     0x7ffe8f958a1b - rustc_driver[8ce7d65e33148011]::describe_lints\r\n   6:     0x7ffeb7abd2ca - std::panicking::rust_panic_with_hook::h706aa36ef8c2ccfd\r\n   7:     0x7ffeb7abcffa - <std::panicking::begin_panic_handler::StrPanicPayload as core::panic::BoxMeUp>::get::h2fe9501abe7bad3a\r\n   8:     0x7ffeb7ab9ecf - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h143df0519cd3d364\r\n   9:     0x7ffeb7abcd00 - rust_begin_unwind\r\n  10:     0x7ffeb7b2a0b5 - core::panicking::panic_fmt::h2c62a60b41506e53\r\n  11:     0x7ffeb7b29f5c - core::panicking::panic::h7256dca92391a51f\r\n  12:     0x7ffe8ed1072a - <rustc_monomorphize[6d8a1661af88e003]::collector::MirNeighborCollector as rustc_middle[1189f5b771ea6a30]::mir::visit::Visitor>::visit_operand\r\n  13:     0x7ffe8ed06875 - <rustc_monomorphize[6d8a1661af88e003]::collector::MirNeighborCollector as rustc_middle[1189f5b771ea6a30]::mir::visit::Visitor>::visit_operand\r\n  14:     0x7ffe8ed06c6d - <rustc_monomorphize[6d8a1661af88e003]::collector::MirNeighborCollector as rustc_middle[1189f5b771ea6a30]::mir::visit::Visitor>::visit_operand\r\n  15:     0x7ffe8ed06c6d - <rustc_monomorphize[6d8a1661af88e003]::collector::MirNeighborCollector as rustc_middle[1189f5b771ea6a30]::mir::visit::Visitor>::visit_operand\r\n  16:     0x7ffe8d9edc4e - <rustc_monomorphize[6d8a1661af88e003]::collector::MirNeighborCollector as rustc_middle[1189f5b771ea6a30]::mir::visit::Visitor>::visit_constant\r\n  17:     0x7ffe8d9ece2d - <rustc_monomorphize[6d8a1661af88e003]::partitioning::default::DefaultPartitioning as rustc_monomorphize[6d8a1661af88e003]::partitioning::Partitioner>::place_inlined_mono_items\r\n  18:     0x7ffe8d9e6681 - rustc_ty_utils[aef50da447823be1]::instance::provide\r\n  19:     0x7ffe8dc7f485 - <rustc_query_impl[61fb7758d092f186]::queries::is_reachable_non_generic as rustc_query_system[ac3a70e976c77693]::query::config::QueryDescription<rustc_query_impl[61fb7758d092f186]::plumbing::QueryCtxt>>::execute_query \r\n  20:     0x7ffe8dcd7ae3 - <&rustc_index[74bb416820f8ff6f]::vec::IndexVec<rustc_middle[1189f5b771ea6a30]::mir::Promoted, rustc_middle[1189f5b771ea6a30]::mir::Body> as rustc_serialize[a5ed55a1dfcd8690]::serialize::Decodable<rustc_query_impl[61fb7758d092f186]::on_disk_cache::CacheDecoder>>::decode\r\n  21:     0x7ffe8ddae216 - <&rustc_index[74bb416820f8ff6f]::vec::IndexVec<rustc_middle[1189f5b771ea6a30]::mir::Promoted, rustc_middle[1189f5b771ea6a30]::mir::Body> as rustc_serialize[a5ed55a1dfcd8690]::serialize::Decodable<rustc_query_impl[61fb7758d092f186]::on_disk_cache::CacheDecoder>>::decode\r\n  22:     0x7ffe8dded325 - <&rustc_index[74bb416820f8ff6f]::vec::IndexVec<rustc_middle[1189f5b771ea6a30]::mir::Promoted, rustc_middle[1189f5b771ea6a30]::mir::Body> as rustc_serialize[a5ed55a1dfcd8690]::serialize::Decodable<rustc_query_impl[61fb7758d092f186]::on_disk_cache::CacheDecoder>>::decode\r\n  23:     0x7ffe8dc3675a - <rustc_query_impl[61fb7758d092f186]::Queries as rustc_middle[1189f5b771ea6a30]::ty::query::QueryEngine>::try_mark_green\r\n  24:     0x7ffe8d29f34f - <rustc_codegen_llvm[3b0f0ef4628a7e1a]::llvm_::ffi::Type>::i8p_llcx\r\n  25:     0x7ffe8d291527 - <rustc_codegen_llvm[3b0f0ef4628a7e1a]::LlvmCodegenBackend as rustc_codegen_ssa[6a8919630679a748]::traits::backend::CodegenBackend>::codegen_crate\r\n  26:     0x7ffe8d268554 - rustc_interface[752ff9d58021be80]::passes::analysis\r\n  27:     0x7ffe8d2671e9 - <rustc_interface[752ff9d58021be80]::passes::LintStoreExpandImpl as rustc_expand[744b096b6351d8b1]::base::LintStoreExpand>::pre_expansion_lint\r\n  28:     0x7ffe8d25c64c - <rustc_interface[752ff9d58021be80]::queries::Queries>::ongoing_codegen\r\n  29:     0x7ffe8d21a559 - rustc_driver[8ce7d65e33148011]::main\r\n  30:     0x7ffe8d24e66a - <rustc_middle[1189f5b771ea6a30]::ty::SymbolName as core[9a4bff41b36e4617]::fmt::Debug>::fmt    \r\n  31:     0x7ffe8d21b970 - rustc_driver[8ce7d65e33148011]::main\r\n  32:     0x7ffe8d24cca7 - rustc_driver[8ce7d65e33148011]::args::arg_expand_all\r\n  33:     0x7ffe8d23e4c9 - rustc_driver[8ce7d65e33148011]::main\r\n  34:     0x7ffe8d23e92d - rustc_driver[8ce7d65e33148011]::main\r\n  35:     0x7ffeb7acdabc - std::sys::windows::thread::Thread::new::h9e74e9039aaece07\r\n  36:     0x7fff23e47034 - BaseThreadInitThunk\r\n  37:     0x7fff240c2651 - RtlUserThreadStart\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.66.0-nightly (57f097ea2 2022-10-01) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED] -C target-cpu=native  \r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: could not compile `sorting_network`\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102640/timeline", "performed_via_github_app": null, "state_reason": null}