{"url": "https://api.github.com/repos/rust-lang/rust/issues/61338", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61338/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61338/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61338/events", "html_url": "https://github.com/rust-lang/rust/issues/61338", "id": 450114227, "node_id": "MDU6SXNzdWU0NTAxMTQyMjc=", "number": 61338, "title": "ICE when calling one method without self from another with const generic types and incremental compilation", "user": {"login": "carado", "id": 407034, "node_id": "MDQ6VXNlcjQwNzAzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/407034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carado", "html_url": "https://github.com/carado", "followers_url": "https://api.github.com/users/carado/followers", "following_url": "https://api.github.com/users/carado/following{/other_user}", "gists_url": "https://api.github.com/users/carado/gists{/gist_id}", "starred_url": "https://api.github.com/users/carado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carado/subscriptions", "organizations_url": "https://api.github.com/users/carado/orgs", "repos_url": "https://api.github.com/users/carado/repos", "events_url": "https://api.github.com/users/carado/events{/privacy}", "received_events_url": "https://api.github.com/users/carado/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-05-30T03:33:26Z", "updated_at": "2019-10-21T19:46:20Z", "closed_at": "2019-10-21T19:46:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "A new project with the following code:\r\n```rust\r\n#![feature(const_generics)]\r\n\r\nstruct Struct<T>(T);\r\n\r\nimpl<T, const N: usize> Struct<[T; N]> {\r\n\tfn f() {}\r\n\tfn g() { Self::f(); }\r\n}\r\n\r\nfn main() {}\r\n```\r\nCauses the following error:\r\n```\r\n    Checking rust6 v0.1.0 (/home/carado/tmp/rust6)\r\nwarning: the feature `const_generics` is incomplete and may cause the compiler to crash\r\n --> src/main.rs:1:12\r\n  |\r\n1 | #![feature(const_generics)]\r\n  |            ^^^^^^^^^^^^^^\r\n\r\nerror: internal compiler error: src/librustc/infer/canonical/canonicalizer.rs:553: failed to lift `ParamEnvAnd { param_env: ParamEnv { caller_bounds: [Binder(TraitPredicate(<T as std::marker::Sized>))], reveal: UserFacing, def_id: None }, value: AscribeUserType { mir_ty: fn() {Struct::<[T; _]>::f}, def_id: DefId(0:20 ~ rust6[383a]::{{impl}}[0]::f[0]), user_substs: UserSubsts { substs: [^0, Const { ty: _, val: Infer(Canonical(DebruijnIndex(0), 1)) }], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(0:16 ~ rust6[383a]::{{impl}}[0]), self_ty: Struct<[T; _]> }) } } }`, canonicalized from `ParamEnvAnd { param_env: ParamEnv { caller_bounds: [Binder(TraitPredicate(<T as std::marker::Sized>))], reveal: UserFacing, def_id: None }, value: AscribeUserType { mir_ty: fn() {Struct::<[T; _]>::f}, def_id: DefId(0:20 ~ rust6[383a]::{{impl}}[0]::f[0]), user_substs: UserSubsts { substs: [_, Const { ty: _, val: Infer(Var(_#0c)) }], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(0:16 ~ rust6[383a]::{{impl}}[0]), self_ty: Struct<[T; _]> }) } } }`\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:637:9\r\nstack backtrace:\r\n   0:     0x7f346fd87cfa - backtrace::backtrace::libunwind::trace::h27e79239ae132594\r\n                               at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.25/src/backtrace/libunwind.rs:97\r\n   1:     0x7f346fd87cfa - backtrace::backtrace::trace_unsynchronized::h4d06032f1d31ea4f\r\n                               at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.25/src/backtrace/mod.rs:66\r\n   2:     0x7f346fd87cfa - std::sys_common::backtrace::_print::h87f958e4afa789cc\r\n                               at src/libstd/sys_common/backtrace.rs:47\r\n   3:     0x7f346fd87cfa - std::sys_common::backtrace::print::h9701366bda361a82\r\n                               at src/libstd/sys_common/backtrace.rs:36\r\n   4:     0x7f346fd87cfa - std::panicking::default_hook::{{closure}}::hdeb6e1bffcdd7ad2\r\n                               at src/libstd/panicking.rs:197\r\n   5:     0x7f346fd879fb - std::panicking::default_hook::hda59c88c4e0c7e8b\r\n                               at src/libstd/panicking.rs:211\r\n   6:     0x7f346db034c0 - rustc::util::common::panic_hook::h5c18c3a9efba48a4\r\n   7:     0x7f346fd88558 - std::panicking::rust_panic_with_hook::hb309d4b58eca6d76\r\n                               at src/libstd/panicking.rs:478\r\n   8:     0x7f346c776f2c - std::panicking::begin_panic::h7eade2292f31029b\r\n   9:     0x7f346c7930be - rustc_errors::Handler::bug::h1c5624823189268b\r\n  10:     0x7f346d7b4b72 - rustc::util::bug::opt_span_bug_fmt::{{closure}}::h07e1c0d72b0417a3\r\n  11:     0x7f346d7b4979 - rustc::ty::context::tls::with_opt::{{closure}}::h1b6716cf20847d91\r\n  12:     0x7f346d7b4894 - rustc::ty::context::tls::with_context_opt::hff146530e0a4a88d\r\n  13:     0x7f346d7b4926 - rustc::ty::context::tls::with_opt::h9af956ee096d242b\r\n  14:     0x7f346d7b4a87 - rustc::util::bug::opt_span_bug_fmt::had3d583fee4c61ad\r\n  15:     0x7f346d7b49f1 - rustc::util::bug::bug_fmt::ha79344e8985ddc8d\r\n  16:     0x7f346e50d522 - rustc::infer::canonical::canonicalizer::Canonicalizer::canonicalize::{{closure}}::h4c72e42f9213dd11\r\n  17:     0x7f346e50b793 - rustc::infer::canonical::canonicalizer::Canonicalizer::canonicalize::h6679b6bef6064e96\r\n  18:     0x7f346e50e522 - rustc::traits::query::type_op::QueryTypeOp::fully_perform_into::h1c7a9c8df8f0ae25\r\n  19:     0x7f346e3283c7 - <rustc::ty::ParamEnvAnd<Q> as rustc::traits::query::type_op::TypeOp>::fully_perform::h5bff7317f6a4c90b\r\n  20:     0x7f346e5f1aa5 - rustc_mir::borrow_check::nll::type_check::TypeChecker::fully_perform_op::h4acfee346b7c791d\r\n  21:     0x7f346e5ecc77 - rustc_mir::borrow_check::nll::type_check::type_check::hc5f371a7d1e9eb97\r\n  22:     0x7f346e27a68e - rustc_mir::borrow_check::nll::compute_regions::h4278fc7ec4877ea6\r\n  23:     0x7f346e3bcb5c - rustc_mir::borrow_check::do_mir_borrowck::h9fc4396b8511f41f\r\n  24:     0x7f346e6b136b - rustc::ty::context::GlobalCtxt::enter_local::h59db5d38d6335a2a\r\n  25:     0x7f346e3bc196 - rustc_mir::borrow_check::mir_borrowck::h0828765d0bd2d619\r\n  26:     0x7f346f7b4286 - rustc::ty::query::__query_compute::mir_borrowck::h34514b79ec87f9e3\r\n  27:     0x7f346f7ebdd4 - rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::mir_borrowck>::compute::h7bfa182ab296aa77\r\n  28:     0x7f346f81a3a0 - rustc::dep_graph::graph::DepGraph::with_task_impl::h1665deacec9882e5\r\n  29:     0x7f346f7f465b - rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query::h34aab210cf157a65\r\n  30:     0x7f346f7ebac2 - rustc::ty::<impl rustc::ty::context::TyCtxt>::par_body_owners::h723cbe87a89f9fb9\r\n  31:     0x7f346f7b5f77 - rustc::util::common::time::h42aa5289a745a6dc\r\n  32:     0x7f346f761551 - rustc_interface::passes::analysis::h2ed6994fd4b83e0e\r\n  33:     0x7f34700ebcb5 - rustc::ty::query::__query_compute::analysis::h099fddfbefe8be42\r\n  34:     0x7f3470057ad1 - rustc::dep_graph::graph::DepGraph::with_task_impl::he089af1d85a1e53e\r\n  35:     0x7f347004fb46 - rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query::h171199e934f91167\r\n  36:     0x7f3470061775 - rustc::ty::context::tls::enter_global::h3f37dacdb92b2b83\r\n  37:     0x7f3470083716 - rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}::hd921952b93938b11\r\n  38:     0x7f346f7c6734 - rustc_interface::passes::create_global_ctxt::{{closure}}::h02c0671e3a3747e1\r\n  39:     0x7f3470085c49 - rustc_interface::interface::run_compiler_in_existing_thread_pool::hdc9adcf187c1c745\r\n  40:     0x7f34700eea45 - std::thread::local::LocalKey<T>::with::hb4d77454d8f5b39f\r\n  41:     0x7f347009c304 - scoped_tls::ScopedKey<T>::set::hf0af9addd0db626a\r\n  42:     0x7f34700b1103 - syntax::with_globals::hf05470816f33fc03\r\n  43:     0x7f34700dfd2c - std::sys_common::backtrace::__rust_begin_short_backtrace::hfd0071cd5db5cd9e\r\n  44:     0x7f346fd99499 - __rust_maybe_catch_panic\r\n                               at src/libpanic_unwind/lib.rs:85\r\n  45:     0x7f3470069e58 - core::ops::function::FnOnce::call_once{{vtable.shim}}::h101536dc4ddcc287\r\n  46:     0x7f346fd6ba9e - <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once::h08bd7d4edd708d24\r\n                               at /rustc/37d001e4deb206ed954fde5d91690221e8306fc3/src/liballoc/boxed.rs:746\r\n  47:     0x7f346fd9816f - <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once::he2a07dcda49e9385\r\n                               at /rustc/37d001e4deb206ed954fde5d91690221e8306fc3/src/liballoc/boxed.rs:746\r\n  48:     0x7f346fd9816f - std::sys_common::thread::start_thread::h9f229612a1fc41e1\r\n                               at src/libstd/sys_common/thread.rs:13\r\n  49:     0x7f346fd9816f - std::sys::unix::thread::Thread::new::thread_start::h5b2c91946063a815\r\n                               at src/libstd/sys/unix/thread.rs:79\r\n  50:     0x7f346fccffa7 - start_thread\r\n                               at /builddir/glibc-2.29/nptl/pthread_create.c:486\r\n  51:     0x7f346fbf1a1e - __GI___clone\r\n  52:                0x0 - <unknown>\r\nquery stack during panic:\r\n#0 [mir_borrowck] processing `Struct::<[T; _]>::g`\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.37.0-nightly (37d001e4d 2019-05-29) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `rust6`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61338/timeline", "performed_via_github_app": null, "state_reason": "completed"}