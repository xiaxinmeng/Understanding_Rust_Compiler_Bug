{"url": "https://api.github.com/repos/rust-lang/rust/issues/102157", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102157/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102157/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102157/events", "html_url": "https://github.com/rust-lang/rust/issues/102157", "id": 1383047794, "node_id": "I_kwDOAAsO6M5Sb6Jy", "number": 102157, "title": "Fail to compile with WebAssembly atomics and shared memory", "user": {"login": "abrown", "id": 541880, "node_id": "MDQ6VXNlcjU0MTg4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/541880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abrown", "html_url": "https://github.com/abrown", "followers_url": "https://api.github.com/users/abrown/followers", "following_url": "https://api.github.com/users/abrown/following{/other_user}", "gists_url": "https://api.github.com/users/abrown/gists{/gist_id}", "starred_url": "https://api.github.com/users/abrown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abrown/subscriptions", "organizations_url": "https://api.github.com/users/abrown/orgs", "repos_url": "https://api.github.com/users/abrown/repos", "events_url": "https://api.github.com/users/abrown/events{/privacy}", "received_events_url": "https://api.github.com/users/abrown/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 474645165, "node_id": "MDU6TGFiZWw0NzQ2NDUxNjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-wasm", "name": "O-wasm", "color": "6e6ec0", "default": false, "description": "Target: WASM (WebAssembly), http://webassembly.org/"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-09-22T21:40:30Z", "updated_at": "2022-10-13T03:33:55Z", "closed_at": "2022-10-13T03:33:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It is currently impossible to generate a Wasm module that imports/exports a shared memory using a Rust program. Here is the example program I'm using (though this is not a terribly important detail):\r\n\r\n```rust\r\n#[no_mangle]\r\npub extern \"C\" fn foo(buffer: &mut [u8]) {\r\n    buffer[0] = 42;\r\n}\r\n```\r\n\r\nUsing `rustc` we quickly realize that we need the standard library to be re-compiled:\r\n\r\n<details><summary><code>rustc</code> failure</summary><p>\r\n\r\n```console\r\n$ rustc kernel.rs --target wasm32-wasi --crate-type=cdylib -o kernel.wasm -C link-args=\"--shared-memory\" -C target-feature='+atomics,+bulk-memory'\r\nwarning: `extern` fn uses type `[u8]`, which is not FFI-safe\r\n --> kernel.rs:2:31\r\n  |\r\n2 | pub extern \"C\" fn foo(buffer: &mut [u8]) {\r\n  |                               ^^^^^^^^^ not FFI-safe\r\n  |\r\n  = note: `#[warn(improper_ctypes_definitions)]` on by default\r\n  = help: consider using a raw pointer instead\r\n  = note: slices have no C equivalent\r\n\r\nerror: linking with `rust-lld` failed: exit status: 1\r\n  |\r\n  = note: \"rust-lld\" \"-flavor\" \"wasm\" \"--rsp-quoting=posix\" \"--export\" \"foo\" \"--export=__heap_base\" \"--export=__data_end\" \"-z\" \"stack-size=1048576\" \"--stack-first\" \"--allow-undefined\" \"--fatal-warnings\" \"--no-demangle\" \"kernel.kernel.60cb7d37-cgu.0.rcgu.o\" \"kernel.48d2wi2ixzyq818c.rcgu.o\" \"-L\" \"/.../.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-wasi/lib\" \"/.../.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-wasi/lib/libstd-6f7050c4e4ec9320.rlib\" \"/.../.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-wasi/lib/libpanic_abort-78698fb72740e3b3.rlib\" \"/.../.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-wasi/lib/libwasi-b308087294ddc3a3.rlib\" \"/.../.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-wasi/lib/librustc_demangle-c3cb9e7f51bfddcf.rlib\" \"/.../.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-wasi/lib/libstd_detect-86a001d569055eb2.rlib\" \"/.../.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-wasi/lib/libhashbrown-e91bcb3cc72b7036.rlib\" \"/.../.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-wasi/lib/libminiz_oxide-4b07e23d8098c45f.rlib\" \"/.../.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-wasi/lib/libadler-532bcb16b36dcd82.rlib\" \"/.../.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-wasi/lib/librustc_std_workspace_alloc-bbe752709827e6d6.rlib\" \"/.../.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-wasi/lib/libunwind-91f05440fcb54365.rlib\" \"/.../.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-wasi/lib/libcfg_if-a5e499ce0ca89889.rlib\" \"/.../.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-wasi/lib/liblibc-1174a7249caf0203.rlib\" \"-l\" \"c\" \"/.../.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-wasi/lib/liballoc-3540f6751174d304.rlib\" \"/.../.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-wasi/lib/librustc_std_workspace_core-7699117473607845.rlib\" \"/.../.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-wasi/lib/libcore-918655349c5fe03e.rlib\" \"/.../.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-wasi/lib/libcompiler_builtins-b340a4e3801671de.rlib\" \"-L\" \"/.../.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-wasi/lib\" \"-L\" \"/.../.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-wasi/lib/self-contained\" \"-o\" \"kernel.wasm\" \"--gc-sections\" \"--no-entry\" \"-O0\" \"--shared-memory\"\r\n  = note: rust-lld: error: --shared-memory is disallowed by std-6f7050c4e4ec9320.std.91000efc-cgu.0.rcgu.o because it was not compiled with 'atomics' or 'bulk-memory' features.\r\n          \r\n\r\nerror: aborting due to previous error; 1 warning emitted\r\n```\r\n\r\n</p></details>\r\n\r\nTo re-compile the standard library, I stick the kernel into a Cargo project but unfortunately the re-compile fails:\r\n\r\n<details><summary><code>cargo</code> failure</summary><p>\r\n\r\n```console\r\n$ tree kernel\r\nkernel\r\n\u251c\u2500\u2500 Cargo.lock\r\n\u251c\u2500\u2500 Cargo.toml\r\n\u2514\u2500\u2500 src\r\n    \u2514\u2500\u2500 lib.rs -> ../../kernel.rs\r\n\r\n$ cd kernel\r\n\r\n$ cat Cargo.toml | grep cdylib\r\ncrate-type = [\"cdylib\"]\r\n\r\n$ RUSTFLAGS=\"-C target-feature=+atomics,+bulk-memory -C link-args=--shared-memory\" cargo +nightly build --target wasm32-wasi --release -Z build-std\r\n   Compiling std v0.0.0 (/.../.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std)\r\nerror[E0432]: unresolved import `crate::sys::futex`\r\n --> /.../.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/thread_parker/futex.rs:4:17\r\n  |\r\n4 | use crate::sys::futex::{futex_wait, futex_wake};\r\n  |                 ^^^^^ could not find `futex` in `sys`\r\n\r\nerror[E0425]: cannot find function `env_lock` in this scope\r\n   --> /.../.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/wasi/os.rs:149:22\r\n    |\r\n149 |         let _guard = env_lock();\r\n    |                      ^^^^^^^^ not found in this scope\r\n\r\nerror[E0425]: cannot find function `env_lock` in this scope\r\n   --> /.../.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/wasi/os.rs:181:22\r\n    |\r\n181 |         let _guard = env_lock();\r\n    |                      ^^^^^^^^ not found in this scope\r\n\r\nerror[E0425]: cannot find function `env_lock` in this scope\r\n   --> /.../.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/wasi/os.rs:196:22\r\n    |\r\n196 |         let _guard = env_lock();\r\n    |                      ^^^^^^^^ not found in this scope\r\n\r\nerror[E0425]: cannot find function `env_lock` in this scope\r\n   --> /.../.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/wasi/os.rs:205:22\r\n    |\r\n205 |         let _guard = env_lock();\r\n    |                      ^^^^^^^^ not found in this scope\r\n\r\nSome errors have detailed explanations: E0425, E0432.\r\nFor more information about an error, try `rustc --explain E0425`.\r\nerror: could not compile `std` due to 5 previous errors\r\n```\r\n\r\n</p></details>\r\n\r\nI would have expected that to succeed (as documented in https://github.com/rust-lang/rust/issues/77839). I think I've identified the places that would need to be fixed in the standard library but I wanted to document this issue here first; perhaps there is something I missed? Here are the versions I used above:\r\n\r\n```console\r\n$ cargo --version\r\ncargo 1.63.0 (fd9c4297c 2022-07-01)\r\n$ rustc --version\r\nrustc 1.63.0 (4b91a6ea7 2022-08-08)\r\n```\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102157/timeline", "performed_via_github_app": null, "state_reason": "completed"}