{"url": "https://api.github.com/repos/rust-lang/rust/issues/53387", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53387/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53387/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53387/events", "html_url": "https://github.com/rust-lang/rust/issues/53387", "id": 350795361, "node_id": "MDU6SXNzdWUzNTA3OTUzNjE=", "number": 53387, "title": "Unused trait functions are preserved after linking", "user": {"login": "stepancheg", "id": 28969, "node_id": "MDQ6VXNlcjI4OTY5", "avatar_url": "https://avatars.githubusercontent.com/u/28969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stepancheg", "html_url": "https://github.com/stepancheg", "followers_url": "https://api.github.com/users/stepancheg/followers", "following_url": "https://api.github.com/users/stepancheg/following{/other_user}", "gists_url": "https://api.github.com/users/stepancheg/gists{/gist_id}", "starred_url": "https://api.github.com/users/stepancheg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stepancheg/subscriptions", "organizations_url": "https://api.github.com/users/stepancheg/orgs", "repos_url": "https://api.github.com/users/stepancheg/repos", "events_url": "https://api.github.com/users/stepancheg/events{/privacy}", "received_events_url": "https://api.github.com/users/stepancheg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-15T12:42:47Z", "updated_at": "2019-01-27T19:15:11Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## What is it about\r\n\r\nWhen investigating why the binary is large I found it contains functions which are never called (even in release builds).\r\n\r\n## Problem\r\n\r\nA library defines a trait.\r\n\r\nThe trait has two functions, there's a trait implementation.\r\n\r\nOne function is called, and another function is not.\r\n\r\nBut the resulting binary contains both functions.\r\n\r\n```\r\npub trait FooTrait {\r\n    fn foo_trait_fn_proper(&self);\r\n    fn foo_trait_fn_never_called(&self);\r\n}\r\n\r\npub struct BarStruct {}\r\n\r\nimpl FooTrait for BarStruct {\r\n    fn foo_trait_fn_proper(&self) {}\r\n    // this function is never called, but it exists in the resulting binary\r\n    fn foo_trait_fn_never_called(&self) {}\r\n}\r\n\r\npub fn not_a_foo_trait_fn() {\r\n}\r\n\r\n#[inline(never)]\r\nfn zzz(foo: &FooTrait) {\r\n    foo.foo_trait_fn_proper();\r\n}\r\n\r\n#[inline(never)]\r\npub fn some_function() {\r\n    let bs = BarStruct {};\r\n    zzz(&bs);\r\n}\r\n```\r\n\r\n## How to repro\r\n\r\n1. `git clone https://github.com/stepancheg/rust-unused-not-removed`\r\n2. Build it with `cargo build`\r\n\r\n```\r\nnm target/debug/mybin | grep trait_fn\r\n0000000100001510 T __ZN52_$LT$mylib..BarStruct$u20$as$u20$mylib..FooTrait$GT$19foo_trait_fn_proper17he329ac1c72a1b169E\r\n0000000100001520 T __ZN52_$LT$mylib..BarStruct$u20$as$u20$mylib..FooTrait$GT$25foo_trait_fn_never_called17h94443f6f107765deE\r\n```\r\n\r\n`foo_trait_fn_proper` function is called. `foo_trait_fn_never_called` is never called, but both functions are in the resulting binary. (However, non-trait function `not_a_foo_trait_fn` is properly removed).\r\n\r\n(When compiling with `--release`, all functions are erased, I guess it's due to LTO or something like that, and I guess it does not always work reliably, but I cannot reproduce it in the toy example.).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53387/timeline", "performed_via_github_app": null, "state_reason": null}