{"url": "https://api.github.com/repos/rust-lang/rust/issues/66057", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66057/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66057/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66057/events", "html_url": "https://github.com/rust-lang/rust/issues/66057", "id": 516845768, "node_id": "MDU6SXNzdWU1MTY4NDU3Njg=", "number": 66057, "title": "Can't call method on `impl Trait` without explicitly passing generic arguments", "user": {"login": "rodrimati1992", "id": 18036327, "node_id": "MDQ6VXNlcjE4MDM2MzI3", "avatar_url": "https://avatars.githubusercontent.com/u/18036327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodrimati1992", "html_url": "https://github.com/rodrimati1992", "followers_url": "https://api.github.com/users/rodrimati1992/followers", "following_url": "https://api.github.com/users/rodrimati1992/following{/other_user}", "gists_url": "https://api.github.com/users/rodrimati1992/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodrimati1992/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodrimati1992/subscriptions", "organizations_url": "https://api.github.com/users/rodrimati1992/orgs", "repos_url": "https://api.github.com/users/rodrimati1992/repos", "events_url": "https://api.github.com/users/rodrimati1992/events{/privacy}", "received_events_url": "https://api.github.com/users/rodrimati1992/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-03T15:36:23Z", "updated_at": "2021-07-07T04:59:20Z", "closed_at": "2021-07-07T04:59:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The [**next comment**](#issuecomment-602129468)  has a minimal example(the one in this comment is a bit complex).\r\n\r\n### Old example\r\n\r\nThis code:\r\n\r\nhttps://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=d001a5aeff1523dcec587c3e6e7ea81d\r\n\r\n```rust\r\ntrait Hello<Name> {\r\n    fn hello(&self, _: Name){}\r\n}\r\n\r\nstruct A;\r\nstruct B;\r\nstruct C;\r\n\r\nimpl<T0, T1> Hello<A> for (T0, T1) {}\r\nimpl<T0, T1> Hello<B> for (T0, T1) {}\r\nimpl<T0, T1> Hello<C> for (T0, T1) {}\r\n\r\ntrait Tuple2:Hello<A> + Hello<B> + Hello<C>{}\r\n\r\nimpl<This> Tuple2 for This \r\nwhere \r\n    This:Hello<A> + Hello<B> + Hello<C>\r\n{}\r\n\r\n\r\nfn returns_impl() -> impl Tuple2 {\r\n    (0, 10)\r\n}\r\n\r\n\r\nfn main() {\r\n    {\r\n        let tup = returns_impl();\r\n        tup.hello(A); // This is the first one that errors\r\n        tup.hello(B); // This is the second one that errors\r\n        tup.hello(C);\r\n        Hello::<A>::hello(&tup,A);\r\n        Hello::<B>::hello(&tup,B);\r\n        Hello::<C>::hello(&tup,C);\r\n    }\r\n    {// It all works fine with dynamic dispatch\r\n        let tup:&dyn Tuple2= &returns_impl();\r\n        tup.hello(A);\r\n        tup.hello(B);\r\n        tup.hello(C);\r\n        Hello::<A>::hello(tup,A);\r\n        Hello::<B>::hello(tup,B);\r\n        Hello::<C>::hello(tup,C);\r\n    }\r\n}\r\n\r\n```\r\nCauses this error:\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:29:19\r\n   |\r\n29 |         tup.hello(A); // This is the first one that errors\r\n   |                   ^ expected struct `C`, found struct `A`\r\n   |\r\n   = note: expected type `C`\r\n              found type `A`\r\n\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:30:19\r\n   |\r\n30 |         tup.hello(B); // This is the second one that errors\r\n   |                   ^ expected struct `C`, found struct `B`\r\n   |\r\n   = note: expected type `C`\r\n              found type `B`\r\n\r\nerror: aborting due to 2 previous errors\r\n```\r\nOn both the stable (1.38) and nightly (1.40.0 2019-11-02) versions in the playground.\r\n\r\nI expected this code to compile without errors.", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66057/timeline", "performed_via_github_app": null, "state_reason": "completed"}