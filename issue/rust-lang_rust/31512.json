{"url": "https://api.github.com/repos/rust-lang/rust/issues/31512", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/31512/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/31512/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/31512/events", "html_url": "https://github.com/rust-lang/rust/issues/31512", "id": 132467217, "node_id": "MDU6SXNzdWUxMzI0NjcyMTc=", "number": 31512, "title": "extend lint interface with more _post methods", "user": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-09T16:36:46Z", "updated_at": "2016-02-13T10:08:13Z", "closed_at": "2016-02-13T10:08:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For clippy's `regex_macro` lint, I made use of a `Visitor` so I could stop clippy from linting the same macro multiple times while being reasonably fast. However, this unfortunately means the lint ignores `#[allow(_)]` .. `#[deny(_)]` attributes below the crate level.\n\nTo solve this and other related problems, I propose any of\n- allow a lint to check anything from anywhere in the analysis by moving up the parent chain to check the level\n- allow a lint to opt out of `check_*` calls for the duration of a specific node including its child nodes\n- add `after_*` methods to the {Early, Late}LintPass trait, so lints can decide themselves\n\nThe third option is probably the easiest to implement, yet the most flexible. This would bring the trait closer to other stream parser implementations like SAX.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/31512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/31512/timeline", "performed_via_github_app": null, "state_reason": "completed"}