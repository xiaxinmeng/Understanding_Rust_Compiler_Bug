{"url": "https://api.github.com/repos/rust-lang/rust/issues/81686", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81686/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81686/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81686/events", "html_url": "https://github.com/rust-lang/rust/issues/81686", "id": 799786926, "node_id": "MDU6SXNzdWU3OTk3ODY5MjY=", "number": 81686, "title": "Emit warning when using `as` to directly cast function items to any integral type other than usize", "user": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2021-02-02T22:51:55Z", "updated_at": "2022-12-15T22:51:20Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Imagine you have a `u32`. You want to check if it's larger than the maximum value of a `u16`. Of course, you know that the API will give you a `u16`, so you will need to cast it to a `u32`.\r\n\r\nYou write a unit test. 100 million should be above the range of a `u16`, you think.\r\n```rust\r\nlet x = 100_000_000;\r\nlet y = u16::max as u32;\r\nprintln!(\"{}\", x > y);\r\n```\r\nOutput:\r\n```\r\nfalse\r\n```\r\nYou begin to doubt your computer science education. In a fugue, you abandon all worldly possessions. You move to the woods. You raise chickens now; sometimes, though, you wonder if they're truly the ones raising you. It is a simpler life.\r\n\r\n---\r\n\r\n`u16::max` is the UFCS'd form of the default'd `max` method on the prelude'd `Ord` trait. To a first approximation, there is no reason to ever directly cast a function item to anything other than a `usize`. The compiler should emit a warning when attempting to cast a function item to `u8`, `u16`, `u32`, `u64`, `u128`, `i8`, `i16`, `i32`, `i64`, `i128`, and `isize`. This would not apply to transitive casts; `foo as usize as i8` would not warn.\r\n\r\n(If I had realized this existed, I would have renamed `u16::MAX` [back when I had the chance](https://github.com/rust-lang/rfcs/pull/2700).)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81686/reactions", "total_count": 31, "+1": 11, "-1": 0, "laugh": 20, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81686/timeline", "performed_via_github_app": null, "state_reason": null}