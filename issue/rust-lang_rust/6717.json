{"url": "https://api.github.com/repos/rust-lang/rust/issues/6717", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/6717/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/6717/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/6717/events", "html_url": "https://github.com/rust-lang/rust/issues/6717", "id": 14720965, "node_id": "MDU6SXNzdWUxNDcyMDk2NQ==", "number": 6717, "title": "Returning a struct that holds an owned trait object results in a segfault", "user": {"login": "zargony", "id": 5121, "node_id": "MDQ6VXNlcjUxMjE=", "avatar_url": "https://avatars.githubusercontent.com/u/5121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zargony", "html_url": "https://github.com/zargony", "followers_url": "https://api.github.com/users/zargony/followers", "following_url": "https://api.github.com/users/zargony/following{/other_user}", "gists_url": "https://api.github.com/users/zargony/gists{/gist_id}", "starred_url": "https://api.github.com/users/zargony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zargony/subscriptions", "organizations_url": "https://api.github.com/users/zargony/orgs", "repos_url": "https://api.github.com/users/zargony/repos", "events_url": "https://api.github.com/users/zargony/events{/privacy}", "received_events_url": "https://api.github.com/users/zargony/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-05-24T13:12:35Z", "updated_at": "2013-06-23T04:05:07Z", "closed_at": "2013-06-23T04:05:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using rustc 0.6, the compiled executable of the following code results in a segfault. I'm not exactly sure why, but I suppose this shouldn't happen ;).\n\nBtw, using `@Animal` instead of `~Animal` works fine. Using `@Cage` or `~Cage` doesn't matter (both crash). Building `~Cage` directly in `main()` also works fine.\n\n```\npub trait Animal { }\n\nstruct Cage {\n  animal: ~Animal,\n}\n\nfn capture (animal: ~Animal) -> ~Cage {\n  let cage = ~Cage { animal: animal };\n  debug!(\"still alive\");\n  cage\n}\n\nstruct Duck { foo: int }\n\nimpl Animal for Duck { }\n\nfn main () {\n  let duck = ~Duck { foo: 123 };\n  let _ = capture(duck as ~Animal);\n  debug!(\"never reached\");\n}\n\n\nzargony@lina:~$ uname -a\nDarwin lina.fritz.box 12.3.0 Darwin Kernel Version 12.3.0: Sun Jan  6 22:37:10 PST 2013; root:xnu-2050.22.13~1/RELEASE_X86_64 x86_64\nzargony@lina:~$ rustc --version\nrustc 0.6\nhost: x86_64-apple-darwin\n```\n", "closed_by": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/6717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/6717/timeline", "performed_via_github_app": null, "state_reason": "completed"}