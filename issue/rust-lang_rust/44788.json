{"url": "https://api.github.com/repos/rust-lang/rust/issues/44788", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44788/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44788/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44788/events", "html_url": "https://github.com/rust-lang/rust/issues/44788", "id": 260004182, "node_id": "MDU6SXNzdWUyNjAwMDQxODI=", "number": 44788, "title": ".or_insert_default() for collections' Entry", "user": {"login": "lukaslueg", "id": 3148704, "node_id": "MDQ6VXNlcjMxNDg3MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3148704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaslueg", "html_url": "https://github.com/lukaslueg", "followers_url": "https://api.github.com/users/lukaslueg/followers", "following_url": "https://api.github.com/users/lukaslueg/following{/other_user}", "gists_url": "https://api.github.com/users/lukaslueg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaslueg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaslueg/subscriptions", "organizations_url": "https://api.github.com/users/lukaslueg/orgs", "repos_url": "https://api.github.com/users/lukaslueg/repos", "events_url": "https://api.github.com/users/lukaslueg/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaslueg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-23T12:21:43Z", "updated_at": "2017-09-23T13:48:04Z", "closed_at": "2017-09-23T13:45:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`Option` (since 1.0) and `Result`(since 1.16) have a handy `.unwrap_or_default()` for every type that is `Default`. The collection types have `.or_insert()` and `.or_insert_with()` but no `.or_insert_default()`. This would be nice to have and would free people from writing things like `.or_insert_with(HashSet::new)` multiple times.\r\n\r\nSomething along the line of\r\n\r\n```rust\r\nuse std::collections::hash_map::{HashMap, Entry};\r\n\r\nstruct DefaultedEntry<'a, K:'a, V:'a> (Entry<'a, K, V>);\r\n\r\nimpl<'a, K:'a, V:'a + Default> DefaultedEntry<'a, K, V> {\r\n    fn or_insert_default(self) -> &'a mut V {\r\n        match self.0 {\r\n            Entry::Occupied(entry) => entry.into_mut(),\r\n            Entry::Vacant(entry) => entry.insert(Default::default()),\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let foos = [(\"foo\", \"bar\"), (\"foobar\", \"ping\"), (\"foo\", \"barfoo\")];\r\n\r\n    let mut foomap: HashMap<_, Vec<_>> = HashMap::new();\r\n    for &(ref foo, ref bar) in &foos {\r\n        DefaultedEntry(foomap.entry(foo)).or_insert_default().push(bar);\r\n    }\r\n\r\n    println!(\"{:?}\", foomap);\r\n}\r\n\r\n```", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44788/timeline", "performed_via_github_app": null, "state_reason": "completed"}