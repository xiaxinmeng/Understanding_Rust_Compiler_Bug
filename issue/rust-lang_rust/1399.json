{"url": "https://api.github.com/repos/rust-lang/rust/issues/1399", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/1399/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/1399/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/1399/events", "html_url": "https://github.com/rust-lang/rust/issues/1399", "id": 2692753, "node_id": "MDU6SXNzdWUyNjkyNzUz", "number": 1399, "title": "Last use doesn't consider closure bodies properly", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 100522, "node_id": "MDU6TGFiZWwxMDA1MjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-crash", "name": "I-crash", "color": "e10c02", "default": false, "description": "Issue: The compiler crashes (SIGSEGV, SIGABRT, etc). Use I-ICE instead when the compiler panics."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2011-12-31T00:17:28Z", "updated_at": "2012-01-02T14:27:05Z", "closed_at": "2012-01-02T09:23:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following test case will crash (once fixed, something similar should be added to the test suite):\n\n```\nfn invoke_several_times(f: lambda()) {\n    f();\n    f();\n    f();\n}\n\nfn bycopy<K>(+k: K) { log(error,k); }\nfn byref<K>(&&k: K) { log(error,k); }\n\nfn testfn(+k: ~int) {\n    bycopy(k); // <-- gets incorrectly optimized into a move\n    invoke_several_times {||\n        byref(k);\n    }\n    // bycopy(k); <-- (this would be a last use)\n}\n\nfn main() {\n    testfn(~22);\n}\n```\n\nThe reason is that the `bycopy(k)` is considered a last use of `k` as uses via upvar are not considered by the last use analysis.  I think we should probably just disable any 'last use' reasoning about variables that escape into a closure of any kind.  After all, the closure could be stored and invoked any number of times, so it's hard to reason about what a last use is in that context.\n\nThe only place we could try to get smart is around blocks (i.e., closures with proto block), as they cannot escape and so can be tracked more precisely: in the example above, we know that the block passed to `invoke_several_times()` won't leak, so a final call to `bycopy(k)` could safely be considered a last use (as indicated in the example).\n\nAs an aside, there is some code in `lastuse.rs` that seems to try to consider blocks and closures carefully, but so I could not quite figure out what constraints it was trying to enforce.  It didn't seem right to me, but I might be missing something.  The code analyzes blocks twice, presumably to account for the possibility of the block being invoked multiple times: but seeing as upvars are ignored, I don't think this serves its intended purpose.  In addition, it may harm the precision of the analysis for non-upvars within the block?  There is also some special reasoning that delays the visiting of closure arguments to a function until after the rest of the function has been analyzed, though I'm not quite sure why.  Perhaps to simulate the possible execution order?  Removing this special case made no difference in any of my tests.  \n", "closed_by": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/1399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/1399/timeline", "performed_via_github_app": null, "state_reason": "completed"}