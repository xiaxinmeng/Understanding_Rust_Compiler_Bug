{"url": "https://api.github.com/repos/rust-lang/rust/issues/46989", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46989/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46989/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46989/events", "html_url": "https://github.com/rust-lang/rust/issues/46989", "id": 284383756, "node_id": "MDU6SXNzdWUyODQzODM3NTY=", "number": 46989, "title": "Function pointer docs may need updating", "user": {"login": "vermiculus", "id": 2082195, "node_id": "MDQ6VXNlcjIwODIxOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/2082195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vermiculus", "html_url": "https://github.com/vermiculus", "followers_url": "https://api.github.com/users/vermiculus/followers", "following_url": "https://api.github.com/users/vermiculus/following{/other_user}", "gists_url": "https://api.github.com/users/vermiculus/gists{/gist_id}", "starred_url": "https://api.github.com/users/vermiculus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vermiculus/subscriptions", "organizations_url": "https://api.github.com/users/vermiculus/orgs", "repos_url": "https://api.github.com/users/vermiculus/repos", "events_url": "https://api.github.com/users/vermiculus/events{/privacy}", "received_events_url": "https://api.github.com/users/vermiculus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 32, "created_at": "2017-12-24T21:52:20Z", "updated_at": "2023-03-16T16:30:20Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "We may need documentation updated for function pointers when used in enums. I won't pretend I understand half of what's written here, but here's the log from IRC (#rust_beginners) where we debugged this issue:\r\n\r\n1. [Rust Playground (`Sharlin`)](https://play.rust-lang.org/?gist=d25cb785bee399efe590293ab2c1a44a&version=stable)\r\n2. [Rust Playground (`spear2`)](https://play.rust-lang.org/?gist=0cfe1a8e458fa50d5223054f7ff7298c&version=stable])\r\n\r\n```\r\nSharlin    :: vermiculus: okay... wtf [1]\r\n\r\nvermiculus :: Sharlin: Right!?\r\n\r\nSharlin    :: what makes fns with ref arguments not implement Ord or\r\n              anything\r\n\r\nvermiculus :: I 100% need the argument to be mutable, but I can't have it be\r\n              mutable without being a ref, and apparently it's choking on the ref\r\n\r\nspear2     :: maybe it has to do with the reference having an implicit lifetime?\r\n\r\nvermiculus :: ...Ok the '100%' is not completely true, but it's the cleanest option\r\n\r\nSharlin    :: spear2: indeed it seems to be\r\n\r\nspear2     :: [2]\r\n\r\nvermiculus :: spear2: now there's a topic I still don't understand half or less\r\n\r\nSharlin    :: this is definitely something that should be documented in the fn docs :D\r\n\r\nvermiculus feels useful :D\r\n\r\nspear2     :: vermiculus: the way i understand it, every reference has an associated\r\n              lifetime, but most of the time it can be 'inferred' and you don't see it\r\n\r\nSharlin    :: so this is about that higher ranked trait bound thingie\r\n\r\nvermiculus :: spear2: that's the extent of my understanding as well; I get tripped up\r\n              trying to 'infer' the lifetime myself (effectively seeing what the\r\n              compiler would see)\r\n\r\nSharlin    :: `Bar(fn(&i32))` is actually `Bar(for<'a> fn(&'a i32))`\r\n\r\nSharlin    :: which means the fn is not an ordinary function pointer but a higher\r\n              something\r\n\r\nvermiculus :: spooky\r\n\r\nvermiculus :: that makes me wonder if this behavior is intentional or if there's a\r\n              more explicit means to express this idea\r\n\r\nvermiculus :: throwing that explicit lifetime parameter is making the rest of the\r\n              compiler go a little nutty -- wanting lifetime parameters for *everything* :(\r\n\r\nSharlin    :: yeah\r\n\r\nSharlin    :: so it goes\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46989/timeline", "performed_via_github_app": null, "state_reason": null}