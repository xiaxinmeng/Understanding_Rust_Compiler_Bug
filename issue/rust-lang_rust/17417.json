{"url": "https://api.github.com/repos/rust-lang/rust/issues/17417", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/17417/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/17417/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/17417/events", "html_url": "https://github.com/rust-lang/rust/issues/17417", "id": 43325080, "node_id": "MDU6SXNzdWU0MzMyNTA4MA==", "number": 17417, "title": "Pointer-to-pointer + casts in FFI leads to hard-to-debug mysterious problems", "user": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-09-21T02:42:03Z", "updated_at": "2018-11-07T03:56:46Z", "closed_at": "2016-02-11T20:16:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If you have a C API taking a pointer-to-a-pointer, like `void**`, where the function fills in a pointer value, it's very easy to screw up if there is any pointer casting involved:\n\n``` rust\nextern crate libc;\nextern {\n    fn c_func(x: *mut *mut libc::c_void);\n}\n\nfn main() {\n    let x = 0 as *mut u8;\n    c_func(&mut (x as *mut libc::c_void));\n    println!(\"new pointer is {}\", x);\n}\n```\n\nThis will always print `new pointer is 0x0`, no matter what `c_func` does. \n\nReason: the `x as *mut ...` cast is creating a temporary, that's disconnected from the original `x` and thus the modification happens to the anonymous stack slot that stores the result of the cast. The code should be written something like `(&mut x) as *mut _ as *mut *mut libc::c_void`.\n\nThis is really subtle to debug, so we could have a lint that assists in this case: \"did you mean to take a reference to the result of a cast in this FFI call\" (could have it apply to non-FFI things too, and presumably it should only apply when there are `&mut` pointers involved).\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/17417/reactions", "total_count": 6, "+1": 6, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/17417/timeline", "performed_via_github_app": null, "state_reason": "completed"}