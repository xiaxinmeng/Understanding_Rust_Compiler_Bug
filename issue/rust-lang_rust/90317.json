{"url": "https://api.github.com/repos/rust-lang/rust/issues/90317", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90317/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90317/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90317/events", "html_url": "https://github.com/rust-lang/rust/issues/90317", "id": 1036631465, "node_id": "I_kwDOAAsO6M49yb2p", "number": 90317, "title": "Make untracked incr. comp. information inaccessible", "user": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234876, "node_id": "MDU6TGFiZWwyMzQ4NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-hard", "name": "E-hard", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Hard / a lot"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}], "state": "open", "locked": false, "assignee": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 19, "created_at": "2021-10-26T18:52:10Z", "updated_at": "2023-04-05T17:42:32Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When iterating over a collection, be it a Vec, a HashMap or an IndexMap, the order of items influences the value of the resulting hash: `[a, b]` and `[b, a]` have different hashes.\r\n\r\nMeanwhile, there is some information we do *not* want to track. This is the case of the value of `LocalDefId`. Inserting a function in a file will change other functions `LocalDefId`, but it will not change their `DefPathHash`.\r\n\r\nMy concern is about controlling this information flow. In order to do that `ToStableHashKey` trait replaces the iteration order of the collection (which for hash maps is based on the key and the allocated memory capacity and should be irrelevant to the compilation), by the order of a stable hash key (the `DefPathHash` when the key is `LocalDefId`). By sorting the vectors by stable key, we manage the information flow.\r\n\r\nUsing `IndexMap`, the iteration order is the insertion order. Normally, this insertion order *should* only depend on tracked information obtained by depending on another query. For instance, a HIR visitor will create a query dependency on `hir_owner_nodes`, which hashes the in-code declaration order of functions. However, and this is my concern, the order of `LocalDefId` is freely available without using a query and is purposely untracked.\r\n\r\nIn order to make `IndexMap`s safe for incr. comp., we need to ensure untracked information is inaccessible.\r\n\r\nKnown issues:\r\n- [ ]  Stop implementing `PartialOrd` and `Ord` on `DefId`;\r\n- [ ]  Stop implementing `PartialOrd`, `Ord` and `Idx` for `LocalDefId`;\r\n- [ ]  Stop implementing `PartialOrd`, `Ord` and `Idx` for `LocalExpnId`;\r\n- [ ]  Stop implementing `PartialOrd` and `Ord` for `SyntaxContext`;\r\n- [ ]  Enforce that UNTRACKED options are not accessed within a query.\r\n\r\n_Originally posted by @cjgillot in https://github.com/rust-lang/rust/pull/90253#issuecomment-952203213_\r\n\r\n<!-- TRIAGEBOT_START -->\r\n\r\n<!-- TRIAGEBOT_ASSIGN_START -->\r\n\r\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"pierwill\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\r\n\r\n<!-- TRIAGEBOT_ASSIGN_END -->\r\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90317/timeline", "performed_via_github_app": null, "state_reason": null}