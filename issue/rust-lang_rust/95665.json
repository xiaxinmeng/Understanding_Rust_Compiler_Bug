{"url": "https://api.github.com/repos/rust-lang/rust/issues/95665", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95665/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95665/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95665/events", "html_url": "https://github.com/rust-lang/rust/issues/95665", "id": 1192565425, "node_id": "I_kwDOAAsO6M5HFRqx", "number": 95665, "title": "`Unexpected node ForeignItem` with extern generic", "user": {"login": "ahrens", "id": 799124, "node_id": "MDQ6VXNlcjc5OTEyNA==", "avatar_url": "https://avatars.githubusercontent.com/u/799124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahrens", "html_url": "https://github.com/ahrens", "followers_url": "https://api.github.com/users/ahrens/followers", "following_url": "https://api.github.com/users/ahrens/following{/other_user}", "gists_url": "https://api.github.com/users/ahrens/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahrens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahrens/subscriptions", "organizations_url": "https://api.github.com/users/ahrens/orgs", "repos_url": "https://api.github.com/users/ahrens/repos", "events_url": "https://api.github.com/users/ahrens/events{/privacy}", "received_events_url": "https://api.github.com/users/ahrens/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 289259951, "node_id": "MDU6TGFiZWwyODkyNTk5NTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-help-wanted", "name": "E-help-wanted", "color": "02E10C", "default": false, "description": "Call for participation: Help is requested to fix this issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": {"login": "PrestonFrom", "id": 12164367, "node_id": "MDQ6VXNlcjEyMTY0MzY3", "avatar_url": "https://avatars.githubusercontent.com/u/12164367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PrestonFrom", "html_url": "https://github.com/PrestonFrom", "followers_url": "https://api.github.com/users/PrestonFrom/followers", "following_url": "https://api.github.com/users/PrestonFrom/following{/other_user}", "gists_url": "https://api.github.com/users/PrestonFrom/gists{/gist_id}", "starred_url": "https://api.github.com/users/PrestonFrom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PrestonFrom/subscriptions", "organizations_url": "https://api.github.com/users/PrestonFrom/orgs", "repos_url": "https://api.github.com/users/PrestonFrom/repos", "events_url": "https://api.github.com/users/PrestonFrom/events{/privacy}", "received_events_url": "https://api.github.com/users/PrestonFrom/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "PrestonFrom", "id": 12164367, "node_id": "MDQ6VXNlcjEyMTY0MzY3", "avatar_url": "https://avatars.githubusercontent.com/u/12164367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PrestonFrom", "html_url": "https://github.com/PrestonFrom", "followers_url": "https://api.github.com/users/PrestonFrom/followers", "following_url": "https://api.github.com/users/PrestonFrom/following{/other_user}", "gists_url": "https://api.github.com/users/PrestonFrom/gists{/gist_id}", "starred_url": "https://api.github.com/users/PrestonFrom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PrestonFrom/subscriptions", "organizations_url": "https://api.github.com/users/PrestonFrom/orgs", "repos_url": "https://api.github.com/users/PrestonFrom/repos", "events_url": "https://api.github.com/users/PrestonFrom/events{/privacy}", "received_events_url": "https://api.github.com/users/PrestonFrom/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-04-05T03:42:08Z", "updated_at": "2022-06-20T17:01:48Z", "closed_at": "2022-06-20T17:01:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\nhow to create smaller examples.\n\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\n\n-->\n\n### Code\n\n```Rust\npub trait Trait: {}\n\npub struct Struct<T: Trait> {\n    member: T,\n}\n\n// uncomment and bug goes away\n//impl Trait for u8 {}\n\nextern \"C\" {\n    static VAR: Struct<u8>;\n}\n\nfn main() {}\n```\n\n\n### Meta\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\n\n`rustc --version --verbose`:\n```\nrustc 1.61.0-nightly (76d770ac2 2022-04-02)\nbinary: rustc\ncommit-hash: 76d770ac21d9521db6a92a48c7b3d5b2cc535941\ncommit-date: 2022-04-02\nhost: aarch64-apple-darwin\nrelease: 1.61.0-nightly\nLLVM version: 14.0.0\n```\n\nAlso reproduces on 1.58.0 and 1.59.0.\n\n### Error output\n\n```\nerror: internal compiler error: compiler/rustc_typeck/src/hir_wf_check.rs:144:25: Unexpected node ForeignItem(ForeignItem { ident: VAR#0, kind: Static(Ty { hir_id: HirId { owner: DefId(0:8 ~ boom[15c8]::{extern#0}::VAR), local_id: 1 }, kind: Path(Resolved(None, Path { span: boom.rs:12:17: 12:27 (#0), res: Def(Struct, DefId(0:4 ~ boom[15c8]::Struct)), segments: [PathSegment { ident: Struct#0, hir_id: Some(HirId { owner: DefId(0:8 ~ boom[15c8]::{extern#0}::VAR), local_id: 4 }), res: Some(Err), args: Some(GenericArgs { args: [Type(Ty { hir_id: HirId { owner: DefId(0:8 ~ boom[15c8]::{extern#0}::VAR), local_id: 2 }, kind: Path(Resolved(None, Path { span: boom.rs:12:24: 12:26 (#0), res: PrimTy(Uint(U8)), segments: [PathSegment { ident: u8#0, hir_id: Some(HirId { owner: DefId(0:8 ~ boom[15c8]::{extern#0}::VAR), local_id: 3 }), res: Some(Err), args: None, infer_args: false }] })), span: boom.rs:12:24: 12:26 (#0) })], bindings: [], parenthesized: false, span_ext: boom.rs:12:23: 12:27 (#0) }), infer_args: false }] })), span: boom.rs:12:17: 12:27 (#0) }, Not), def_id: DefId(0:8 ~ boom[15c8]::{extern#0}::VAR), span: boom.rs:12:5: 12:28 (#0), vis: Spanned { node: Inherited, span: boom.rs:12:5: 12:5 (#0) } }) \n\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1279:9\n\nquery stack during panic:\n#0 [diagnostic_hir_wf_check] performing HIR wf-checking for predicate Binder(TraitPredicate(<u8 as Trait>, polarity:Positive), []) at item Ty(DefId(0:8 ~ boom[15c8]::{extern#0}::VAR))\n#1 [check_item_well_formed] checking that `` is well-formed\n#2 [analysis] running analysis passes on this crate\nend of query stack\n\n```\n\n<!--\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\n-->\n<details><summary><strong>Backtrace</strong></summary>\n\n<p>\n\n```\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1279:9\nstack backtrace:\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\n   2: <rustc_errors::HandlerInner>::bug\n   3: <rustc_errors::Handler>::bug\n   4: rustc_middle::ty::context::tls::with_opt::<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, ()>\n   5: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>\n   6: rustc_middle::util::bug::bug_fmt\n   7: rustc_typeck::hir_wf_check::diagnostic_hir_wf_check\n   8: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::diagnostic_hir_wf_check, rustc_query_impl::plumbing::QueryCtxt>\n   9: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::diagnostic_hir_wf_check\n  10: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtExt>::report_selection_error\n  11: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtPrivExt>::report_fulfillment_error\n  12: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtExt>::report_fulfillment_errors\n  13: <rustc_typeck::check::fn_ctxt::FnCtxt>::select_all_obligations_or_error\n  14: <rustc_infer::infer::InferCtxtBuilder>::enter::<(), <rustc_typeck::check::inherited::InheritedBuilder>::enter<<rustc_typeck::check::wfcheck::CheckWfFcxBuilder>::with_fcx<rustc_typeck::check::wfcheck::check_item_type::{closure#0}>::{closure#0}, ()>::{closure#0}>\n  15: rustc_typeck::check::wfcheck::check_item_type\n  16: rustc_typeck::check::wfcheck::check_item_well_formed\n  17: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, ()>>\n  18: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::check_item_well_formed, rustc_query_impl::plumbing::QueryCtxt>\n  19: <core::panic::unwind_safe::AssertUnwindSafe<rustc_data_structures::sync::par_for_each_in<&alloc::vec::Vec<rustc_hir::hir::MaybeOwner<&rustc_hir::hir::OwnerInfo>>, <rustc_middle::hir::map::Map>::par_visit_all_item_likes<rustc_typeck::check::wfcheck::CheckTypeWellFormedVisitor>::{closure#0}>::{closure#0}::{closure#0}> as core::ops::function::FnOnce<()>>::call_once\n  20: rustc_data_structures::sync::par_for_each_in::<&alloc::vec::Vec<rustc_hir::hir::MaybeOwner<&rustc_hir::hir::OwnerInfo>>, <rustc_middle::hir::map::Map>::par_visit_all_item_likes<rustc_typeck::check::wfcheck::CheckTypeWellFormedVisitor>::{closure#0}>\n  21: <rustc_session::session::Session>::track_errors::<rustc_typeck::check_crate::{closure#5}, ()>\n  22: rustc_typeck::check_crate\n  23: rustc_interface::passes::analysis\n  24: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorGuaranteed>>>\n  25: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\n  26: <rustc_interface::passes::QueryContext>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}::{closure#3}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\n  27: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorGuaranteed>>\n  28: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\n  29: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\n\nnote: rustc 1.61.0-nightly (76d770ac2 2022-04-02) running on aarch64-apple-darwin\n\nquery stack during panic:\n#0 [diagnostic_hir_wf_check] performing HIR wf-checking for predicate Binder(TraitPredicate(<u8 as Trait>, polarity:Positive), []) at item Ty(DefId(0:8 ~ boom[15c8]::{extern#0}::VAR))\n#1 [check_item_well_formed] checking that `` is well-formed\n#2 [analysis] running analysis passes on this crate\nend of query stack\nerror: aborting due to previous error\n```\n\n</p>\n</details>\n\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"PrestonFrom\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95665/timeline", "performed_via_github_app": null, "state_reason": "completed"}