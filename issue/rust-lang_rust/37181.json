{"url": "https://api.github.com/repos/rust-lang/rust/issues/37181", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/37181/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/37181/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/37181/events", "html_url": "https://github.com/rust-lang/rust/issues/37181", "id": 183154256, "node_id": "MDU6SXNzdWUxODMxNTQyNTY=", "number": 37181, "title": "try!() tries to convert errors to () instead of the error type corresponding to the function's return type", "user": {"login": "Arnavion", "id": 1096010, "node_id": "MDQ6VXNlcjEwOTYwMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1096010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arnavion", "html_url": "https://github.com/Arnavion", "followers_url": "https://api.github.com/users/Arnavion/followers", "following_url": "https://api.github.com/users/Arnavion/following{/other_user}", "gists_url": "https://api.github.com/users/Arnavion/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arnavion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arnavion/subscriptions", "organizations_url": "https://api.github.com/users/Arnavion/orgs", "repos_url": "https://api.github.com/users/Arnavion/repos", "events_url": "https://api.github.com/users/Arnavion/events{/privacy}", "received_events_url": "https://api.github.com/users/Arnavion/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-14T21:27:56Z", "updated_at": "2017-09-06T01:48:28Z", "closed_at": "2017-09-06T01:48:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Rust version: stable (1.12.0), nightly (1.14.0-nightly (6e8f92f11 2016-10-07)) as per playground\n\n``` rust\nenum ErrorKind {\n    NotFound,\n    GenericIO,\n}\n\nstruct Error {\n    kind: ErrorKind,\n}\n\nimpl From<ErrorKind> for Error {\n    fn from(kind: ErrorKind) -> Self {\n        Error { kind: kind }\n    }\n}\n\nimpl From<std::io::Error> for Error {\n    fn from(kind: std::io::Error) -> Self {\n        Error { kind: ErrorKind::GenericIO }\n    }\n}\n\nfn do_main() -> Result<(), Error> {\n    let o: Result<i32, std::io::Error> = Ok(5);\n\n    let file =\n        try!(std::fs::File::open(\"foo.txt\").map_err(|err|\n            match err.kind() {\n                std::io::ErrorKind::NotFound => ErrorKind::NotFound.into(),\n                _ => err.into(),\n            }\n        ));\n\n    Ok(())\n}\n```\n\nThis fails to compile with\n\n```\nerror[E0277]: the trait bound `(): std::convert::From<ErrorKind>` is not satisfied\n  --> <anon>:28:57\n   |\n28 |                std::io::ErrorKind::NotFound => ErrorKind::NotFound.into(),\n   |                                                                    ^^^^\n<anon>:26:3: 31:5 note: in this expansion of try! (defined in <std macros>)\n   |\n   = note: required because of the requirements on the impl of `std::convert::Into<()>` for `ErrorKind`\n\nerror[E0277]: the trait bound `(): std::convert::From<std::io::Error>` is not satisfied\n  --> <anon>:29:14\n   |\n29 |                _ => err.into(),\n   |                         ^^^^\n<anon>:26:3: 31:5 note: in this expansion of try! (defined in <std macros>)\n   |\n   = note: required because of the requirements on the impl of `std::convert::Into<()>` for `std::io::Error`\n\nerror[E0277]: the trait bound `Error: std::convert::From<()>` is not satisfied\n --> <std macros>:6:1\n  |\n6 | $ crate :: convert :: From :: from ( err ) ) } } )\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<anon>:26:3: 31:5 note: in this expansion of try! (defined in <std macros>)\n  |\n  = help: the following implementations were found:\n  = help:   <Error as std::convert::From<ErrorKind>>\n  = help:   <Error as std::convert::From<std::io::Error>>\n  = note: required by `std::convert::From::from`\n\nerror: aborting due to 3 previous errors\n```\n\nI don't understand why it's trying to convert the errors to `()`. It even lists the correct impls in the `help:` messages at the end.\n\n---\n\nExplicitly calling `Error::from` in one of the branches fixes it:\n\n``` rust\n    let file =\n        try!(::std::fs::File::open(\"foo.txt\").map_err(|err|\n            match err.kind() {\n                ::std::io::ErrorKind::NotFound => ErrorKind::NotFound.into(),\n                _ => Error::from(err),\n            }\n        ));\n```\n\nas does not using `try!` at all:\n\n``` rust\n    let file = match ::std::fs::File::open(\"foo.txt\") {\n        Ok(file) => file,\n        Err(err) => match err.kind() {\n            ::std::io::ErrorKind::NotFound => return Err(ErrorKind::NotFound.into()),\n            _ => return Err(err.into()),\n        },\n    };\n```\n", "closed_by": {"login": "Arnavion", "id": 1096010, "node_id": "MDQ6VXNlcjEwOTYwMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1096010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arnavion", "html_url": "https://github.com/Arnavion", "followers_url": "https://api.github.com/users/Arnavion/followers", "following_url": "https://api.github.com/users/Arnavion/following{/other_user}", "gists_url": "https://api.github.com/users/Arnavion/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arnavion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arnavion/subscriptions", "organizations_url": "https://api.github.com/users/Arnavion/orgs", "repos_url": "https://api.github.com/users/Arnavion/repos", "events_url": "https://api.github.com/users/Arnavion/events{/privacy}", "received_events_url": "https://api.github.com/users/Arnavion/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/37181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/37181/timeline", "performed_via_github_app": null, "state_reason": "completed"}