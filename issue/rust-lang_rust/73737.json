{"url": "https://api.github.com/repos/rust-lang/rust/issues/73737", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73737/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73737/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73737/events", "html_url": "https://github.com/rust-lang/rust/issues/73737", "id": 645867788, "node_id": "MDU6SXNzdWU2NDU4Njc3ODg=", "number": 73737, "title": "Typecheck error in body of async fn reported at point-of-use", "user": {"login": "bdonlan", "id": 9473, "node_id": "MDQ6VXNlcjk0NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/9473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdonlan", "html_url": "https://github.com/bdonlan", "followers_url": "https://api.github.com/users/bdonlan/followers", "following_url": "https://api.github.com/users/bdonlan/following{/other_user}", "gists_url": "https://api.github.com/users/bdonlan/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdonlan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdonlan/subscriptions", "organizations_url": "https://api.github.com/users/bdonlan/orgs", "repos_url": "https://api.github.com/users/bdonlan/repos", "events_url": "https://api.github.com/users/bdonlan/events{/privacy}", "received_events_url": "https://api.github.com/users/bdonlan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-25T21:40:50Z", "updated_at": "2020-06-30T17:22:14Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::marker::PhantomData;\r\nuse std::io;\r\n\r\nuse tokio; // 0.2.21\r\nuse tokio_util; // 0.3.1\r\n\r\nuse tokio::io::{AsyncRead, AsyncWrite};\r\nuse tokio::net::TcpStream;\r\nuse tokio_util::codec::{Encoder, Decoder};\r\nuse futures::stream::StreamExt;\r\n\r\nuse bytes::{BytesMut, Bytes};\r\n\r\nstruct Codec;\r\n\r\nstruct Message<'a> { _p: PhantomData<&'a u8> }\r\n\r\nimpl Encoder<Message<'static>> for Codec {\r\n    type Error = io::Error;\r\n    \r\n    fn encode(&mut self, item: Message<'static>, dst: &mut BytesMut) -> Result<(), Self::Error> {\r\n        todo!()\r\n    }\r\n}\r\n\r\nimpl Decoder for Codec {\r\n    type Item = Message<'static>;\r\n    type Error = io::Error;\r\n    \r\n    fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {\r\n        todo!()\r\n    }\r\n}\r\n\r\nasync fn forwarder(sock: impl AsyncRead + AsyncWrite + Send + 'static) {\r\n    let sock = Codec.framed(sock);\r\n    let (sink, stream) = sock.split();\r\n    \r\n    stream.map(|msg| msg).forward(sink).await;\r\n}\r\n\r\npub fn assert_send() {\r\n    let s : TcpStream = todo!();\r\n    let _b : Box<dyn Send> = Box::new(forwarder(s));\r\n}\r\n```\r\n\r\nI expected to see this happen: A diagnostic would be issued at the line with the .forward call (or not at all).\r\n\r\nInstead, this happened: \r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/lib.rs:44:30\r\n   |\r\n44 |     let _b : Box<dyn Send> = Box::new(forwarder(s));\r\n   |                              ^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\r\n   |\r\n   = note: expected type `std::ops::FnOnce<(std::result::Result<Message<'static>, std::io::Error>,)>`\r\n              found type `std::ops::FnOnce<(std::result::Result<Message<'_>, std::io::Error>,)>`\r\n```\r\n\r\nAs you can see, this is reporting a typecheck error occurring in the implementation of forwarder, at the point of use of the async fn (where its implementation should be opaque).\r\n\r\n### Meta\r\n\r\nTested on the playground with both stable and nightly.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73737/timeline", "performed_via_github_app": null, "state_reason": null}