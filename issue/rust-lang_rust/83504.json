{"url": "https://api.github.com/repos/rust-lang/rust/issues/83504", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83504/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83504/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83504/events", "html_url": "https://github.com/rust-lang/rust/issues/83504", "id": 841538664, "node_id": "MDU6SXNzdWU4NDE1Mzg2NjQ=", "number": 83504, "title": "if let compound statement", "user": {"login": "dfarnham", "id": 1884548, "node_id": "MDQ6VXNlcjE4ODQ1NDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1884548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfarnham", "html_url": "https://github.com/dfarnham", "followers_url": "https://api.github.com/users/dfarnham/followers", "following_url": "https://api.github.com/users/dfarnham/following{/other_user}", "gists_url": "https://api.github.com/users/dfarnham/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfarnham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfarnham/subscriptions", "organizations_url": "https://api.github.com/users/dfarnham/orgs", "repos_url": "https://api.github.com/users/dfarnham/repos", "events_url": "https://api.github.com/users/dfarnham/events{/privacy}", "received_events_url": "https://api.github.com/users/dfarnham/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-03-26T02:44:20Z", "updated_at": "2021-04-05T14:01:04Z", "closed_at": "2021-04-05T14:01:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nfn main() {\r\n    let jobj = json::parse(r#\"{ \"config\": [ { \"label\": { \"active\": true } } ] }\"#).unwrap();\r\n\r\n    for obj in jobj[\"config\"].members() {\r\n        for (k, v) in obj.entries().take(1) {\r\n            if let json::JsonValue::Boolean(state) = v[\"active\"] && true {\r\n                if state {\r\n                    println!(\"{}\", k)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.51.0 (2fd73fabe 2021-03-23)\r\nbinary: rustc\r\ncommit-hash: 2fd73fabe469357a12c2c974c140f67e7cdd76d0\r\ncommit-date: 2021-03-23\r\nhost: x86_64-apple-darwin\r\nrelease: 1.51.0\r\nLLVM version: 11.0.1\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n<output>\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n$ RUST_BACKTRACE=1 cargo build\r\n   Compiling bug v0.1.0 (/private/tmp/bug)\r\nerror[E0658]: `let` expressions in this position are experimental\r\n --> src/main.rs:6:16\r\n  |\r\n6 |             if let json::JsonValue::Boolean(state) = v[\"active\"] && true {\r\n  |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\r\n\r\nthread 'rustc' panicked at 'expected `NodeId` to be lowered already for res Local(\r\n    NodeId(44),\r\n)', compiler/rustc_ast_lowering/src/lib.rs:714:17\r\nstack backtrace:\r\n   0: _rust_begin_unwind\r\n   1: std::panicking::begin_panic_fmt\r\n   2: rustc_ast_lowering::LoweringContext::lower_res::{{closure}}::{{closure}}\r\n   3: rustc_ast_lowering::LoweringContext::lower_node_id_generic\r\n   4: rustc_ast_lowering::path::<impl rustc_ast_lowering::LoweringContext>::lower_qpath\r\n   5: rustc_data_structures::stack::ensure_sufficient_stack\r\n   6: rustc_ast_lowering::expr::<impl rustc_ast_lowering::LoweringContext>::lower_expr_if\r\n   7: rustc_data_structures::stack::ensure_sufficient_stack\r\n   8: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut\r\n   9: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::next\r\n  10: <smallvec::SmallVec<A> as core::iter::traits::collect::Extend<<A as smallvec::Array>::Item>>::extend\r\n  11: rustc_arena::cold_path\r\n  12: rustc_ast_lowering::expr::<impl rustc_ast_lowering::LoweringContext>::lower_expr_if\r\n  13: rustc_data_structures::stack::ensure_sufficient_stack\r\n  14: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut\r\n  15: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::next\r\n  16: <smallvec::SmallVec<A> as core::iter::traits::collect::Extend<<A as smallvec::Array>::Item>>::extend\r\n  17: rustc_arena::cold_path\r\n  18: rustc_ast_lowering::expr::<impl rustc_ast_lowering::LoweringContext>::lower_expr_for\r\n  19: rustc_data_structures::stack::ensure_sufficient_stack\r\n  20: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut\r\n  21: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::next\r\n  22: <smallvec::SmallVec<A> as core::iter::traits::collect::Extend<<A as smallvec::Array>::Item>>::extend\r\n  23: rustc_arena::cold_path\r\n  24: rustc_ast_lowering::expr::<impl rustc_ast_lowering::LoweringContext>::lower_expr_for\r\n  25: rustc_data_structures::stack::ensure_sufficient_stack\r\n  26: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut\r\n  27: <core::iter::adapters::flatten::Flatten<I> as core::iter::traits::iterator::Iterator>::next\r\n  28: <smallvec::SmallVec<A> as core::iter::traits::collect::Extend<<A as smallvec::Array>::Item>>::extend\r\n  29: rustc_arena::cold_path\r\n  30: rustc_ast_lowering::item::<impl rustc_ast_lowering::LoweringContext>::lower_block_expr_opt\r\n  31: rustc_ast_lowering::item::<impl rustc_ast_lowering::LoweringContext>::lower_fn_body_block\r\n  32: rustc_ast_lowering::item::<impl rustc_ast_lowering::LoweringContext>::lower_item\r\n  33: rustc_ast_lowering::LoweringContext::with_hir_id_owner\r\n  34: <rustc_ast_lowering::item::ItemLowerer as rustc_ast::visit::Visitor>::visit_mod\r\n  35: rustc_ast_lowering::lower_crate\r\n  36: rustc_interface::passes::BoxedResolver::access::{{closure}}\r\n  37: rustc_interface::passes::configure_and_expand::{{closure}}\r\n  38: rustc_interface::passes::BoxedResolver::access\r\n  39: rustc_interface::queries::Queries::lower_to_hir\r\n  40: rustc_interface::queries::Queries::global_ctxt\r\n  41: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  42: rustc_span::with_source_map\r\n  43: rustc_interface::interface::create_compiler_and_run\r\n  44: rustc_span::with_session_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.51.0 (2fd73fabe 2021-03-23) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0658`.\r\nerror: could not compile `bug`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83504/timeline", "performed_via_github_app": null, "state_reason": "completed"}