{"url": "https://api.github.com/repos/rust-lang/rust/issues/66695", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66695/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66695/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66695/events", "html_url": "https://github.com/rust-lang/rust/issues/66695", "id": 527682891, "node_id": "MDU6SXNzdWU1Mjc2ODI4OTE=", "number": 66695, "title": "Broken MIR after compiler update when indexing statics with async values", "user": {"login": "unneon", "id": 28683906, "node_id": "MDQ6VXNlcjI4NjgzOTA2", "avatar_url": "https://avatars.githubusercontent.com/u/28683906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unneon", "html_url": "https://github.com/unneon", "followers_url": "https://api.github.com/users/unneon/followers", "following_url": "https://api.github.com/users/unneon/following{/other_user}", "gists_url": "https://api.github.com/users/unneon/gists{/gist_id}", "starred_url": "https://api.github.com/users/unneon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unneon/subscriptions", "organizations_url": "https://api.github.com/users/unneon/orgs", "repos_url": "https://api.github.com/users/unneon/repos", "events_url": "https://api.github.com/users/unneon/events{/privacy}", "received_events_url": "https://api.github.com/users/unneon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 679846574, "node_id": "MDU6TGFiZWw2Nzk4NDY1NzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-generators", "name": "A-generators", "color": "f7e101", "default": false, "description": "Area: Generators"}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-11-24T11:14:12Z", "updated_at": "2019-11-30T01:08:40Z", "closed_at": "2019-11-30T01:08:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some code which asynchronously computes an integer, and selects an item from a static slice in the same expression. This used to work (it does on stable), but after a nightly update the compiler ICEs when computing generator layout.\r\n\r\nThe bug stops reproducing if I change the static to a local variable, or extract the index into a separate variable.\r\n\r\n```rust\r\nstatic CODEGEN: &[()] = &[];\r\n\r\nasync fn manual() {\r\n\tCODEGEN[async { 0 }.await];\r\n}\r\n```\r\n\r\n```\r\n    Checking icie v0.6.4 (/home/matcegla/Projects/icie)\r\nwarning: static item is never used: `CODEGEN`\r\n --> src/lib.rs:1:1\r\n  |\r\n1 | static CODEGEN: &[()] = &[];\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(dead_code)]` on by default\r\n\r\nwarning: function is never used: `manual`\r\n --> src/lib.rs:3:10\r\n  |\r\n3 | async fn manual() {\r\n  |          ^^^^^^\r\n\r\nerror: internal compiler error: src/librustc_mir/transform/generator.rs:783: Broken MIR: generator contains type &&[()] in MIR, but typeck only knows about for<'r, 's> {&'r [()], &'s [()], [static generator@src/lib.rs:4:16: 4:21 {}], impl std::future::Future, impl std::future::Future, ()}\r\n --> src/lib.rs:3:19\r\n  |\r\n3 |   async fn manual() {\r\n  |  ___________________^\r\n4 | |     CODEGEN[async { 0 }.await];\r\n5 | | }\r\n  | |_^\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:851:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:84\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:61\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1030\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1412\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:65\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:50\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:188\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:205\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:468\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::span_bug\r\n  14: rustc_errors::Handler::span_bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_opt\r\n  18: rustc::util::bug::opt_span_bug_fmt\r\n  19: rustc::util::bug::span_bug_fmt\r\n  20: rustc_mir::transform::generator::compute_layout\r\n  21: <rustc_mir::transform::generator::StateTransform as rustc_mir::transform::MirPass>::run_pass\r\n  22: rustc_mir::transform::run_passes\r\n  23: rustc_mir::transform::run_optimization_passes\r\n  24: rustc_mir::transform::optimized_mir\r\n  25: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::optimized_mir>::compute\r\n  26: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  27: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  28: rustc::ty::<impl rustc::ty::context::TyCtxt>::generator_layout\r\n  29: <rustc_metadata::rmeta::encoder::EncodeContext as rustc::hir::intravisit::Visitor>::visit_expr\r\n  30: rustc::hir::intravisit::walk_expr\r\n  31: <rustc_metadata::rmeta::encoder::EncodeContext as rustc::hir::intravisit::Visitor>::visit_expr\r\n  32: rustc::hir::intravisit::walk_item\r\n  33: <rustc_metadata::rmeta::encoder::EncodeContext as rustc::hir::intravisit::Visitor>::visit_item\r\n  34: rustc::hir::Crate::visit_all_item_likes\r\n  35: rustc_metadata::rmeta::encoder::EncodeContext::encode_crate_root\r\n  36: rustc::ty::context::tls::with_context::{{closure}}\r\n  37: rustc_metadata::rmeta::encoder::encode_metadata\r\n  38: rustc_metadata::rmeta::decoder::cstore_impl::<impl rustc::middle::cstore::CrateStore for rustc_metadata::cstore::CStore>::encode_metadata\r\n  39: rustc::ty::context::TyCtxt::encode_metadata\r\n  40: rustc_interface::passes::start_codegen::{{closure}}\r\n  41: rustc_interface::passes::start_codegen\r\n  42: rustc::ty::context::tls::enter_global\r\n  43: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  44: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  45: rustc_interface::passes::BoxedGlobalCtxt::enter\r\n  46: rustc_interface::queries::Query<T>::compute\r\n  47: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::ongoing_codegen\r\n  48: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  49: std::thread::local::LocalKey<T>::with\r\n  50: scoped_tls::ScopedKey<T>::set\r\n  51: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.41.0-nightly (0c987c5c0 2019-11-23) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type cdylib --crate-type rlib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [optimized_mir] processing `manual::{{closure}}#0`\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `icie`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n*rustc 1.41.0-nightly (0c987c5c0 2019-11-23)\r\nbinary: rustc\r\ncommit-hash: 0c987c5c02498b4e77f5dfae1f6914ffb9268575\r\ncommit-date: 2019-11-23\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.41.0-nightly\r\nLLVM version: 9.0*\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66695/timeline", "performed_via_github_app": null, "state_reason": "completed"}