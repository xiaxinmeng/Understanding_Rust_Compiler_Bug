{"url": "https://api.github.com/repos/rust-lang/rust/issues/92290", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92290/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92290/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92290/events", "html_url": "https://github.com/rust-lang/rust/issues/92290", "id": 1088745921, "node_id": "I_kwDOAAsO6M5A5PHB", "number": 92290, "title": "Reading /proc/self/cgroup crashes program with segmentation fault", "user": {"login": "ishanjain28", "id": 7921368, "node_id": "MDQ6VXNlcjc5MjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/7921368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishanjain28", "html_url": "https://github.com/ishanjain28", "followers_url": "https://api.github.com/users/ishanjain28/followers", "following_url": "https://api.github.com/users/ishanjain28/following{/other_user}", "gists_url": "https://api.github.com/users/ishanjain28/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishanjain28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishanjain28/subscriptions", "organizations_url": "https://api.github.com/users/ishanjain28/orgs", "repos_url": "https://api.github.com/users/ishanjain28/repos", "events_url": "https://api.github.com/users/ishanjain28/events{/privacy}", "received_events_url": "https://api.github.com/users/ishanjain28/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-12-26T10:49:34Z", "updated_at": "2021-12-26T11:06:46Z", "closed_at": "2021-12-26T11:06:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\nPlay ground link to my program as is, https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=9765bafb238e5df721c608bb04389873\r\n\r\nI expected to see this happen: \r\n\r\n*I should be able to read contents of that file.*\r\n\r\nInstead, this happened: *explanation*\r\n\r\nIt exits instantly with a segmentation fault error.\r\n\r\n### Meta\r\n\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.57.0 (f1edd0429 2021-11-29)\r\nbinary: rustc\r\ncommit-hash: f1edd0429582dd29cccacaf50fd134b05593bd9c\r\ncommit-date: 2021-11-29\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.57.0\r\nLLVM version: 13.0.0\r\n```\r\n\r\nAlso reproducible with,\r\n```\r\nrustc 1.59.0-nightly (efec54529 2021-12-04)\r\nbinary: rustc\r\ncommit-hash: efec545293b9263be9edfb283a7aa66350b3acbf\r\ncommit-date: 2021-12-04\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.59.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n\r\n\r\nBacktrace \r\n```\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n0x000055556f731a32 in ?? ()\r\n(gdb) backtrace\r\n#0  0x000055556f731a32 in ?? ()\r\n#1  0x000055555556d599 in std::sys::unix::fd::FileDesc::write () at library/std/src/sys/unix/fd.rs:120\r\n#2  std::sys::unix::stdio::{impl#3}::write () at library/std/src/sys/unix/stdio.rs:39\r\n#3  std::io::stdio::{impl#1}::write () at library/std/src/io/stdio.rs:127\r\n#4  std::io::buffered::bufwriter::BufWriter::flush_buf<std::io::stdio::StdoutRaw> ()\r\n    at library/std/src/io/buffered/bufwriter.rs:166\r\n#5  0x000055555556e45e in std::io::buffered::linewritershim::{impl#1}::write_all<std::io::stdio::StdoutRaw> ()\r\n    at library/std/src/io/buffered/linewritershim.rs:269\r\n#6  std::io::buffered::linewriter::{impl#1}::write_all<std::io::stdio::StdoutRaw> ()\r\n    at library/std/src/io/buffered/linewriter.rs:206\r\n#7  std::io::stdio::{impl#14}::write_all () at library/std/src/io/stdio.rs:878\r\n#8  0x000055555556f337 in std::io::Write::write_fmt::{impl#0}::write_str<std::io::stdio::StdoutLock> ()\r\n    at library/std/src/io/mod.rs:1686\r\n#9  0x000055555558c01f in core::fmt::write () at library/core/src/fmt/mod.rs:1173\r\n#10 0x000055555556e14e in std::io::Write::write_fmt<std::io::stdio::StdoutLock> () at library/std/src/io/mod.rs:1697\r\n#11 std::io::stdio::{impl#13}::write_fmt () at library/std/src/io/stdio.rs:858\r\n#12 0x000055555556e71c in std::io::stdio::{impl#12}::write_fmt () at library/std/src/io/stdio.rs:832\r\n#13 std::io::stdio::print_to<std::io::stdio::Stdout> () at library/std/src/io/stdio.rs:1200\r\n#14 std::io::stdio::_print () at library/std/src/io/stdio.rs:1213\r\n#15 0x000055555555be7f in aoc2021::main ()\r\n#16 0x000055555555bee3 in std::sys_common::backtrace::__rust_begin_short_backtrace ()\r\n#17 0x000055555555bc09 in std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h84d5cc331b770efe ()\r\n#18 0x0000555555570ff1 in core::ops::function::impls::{impl#2}::call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> ()\r\n    at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf/library/core/src/ops/function.rs:259\r\n#19 std::panicking::try::do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> () at library/std/src/panicking.rs:406\r\n#20 std::panicking::try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> () at library/std/src/panicking.rs:370\r\n#21 std::panic::catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> () at library/std/src/panic.rs:133\r\n#22 std::rt::lang_start_internal::{closure#2} () at library/std/src/rt.rs:128\r\n#23 std::panicking::try::do_call<std::rt::lang_start_internal::{closure#2}, isize> ()\r\n    at library/std/src/panicking.rs:406\r\n#24 std::panicking::try<isize, std::rt::lang_start_internal::{closure#2}> () at library/std/src/panicking.rs:370\r\n#25 std::panic::catch_unwind<std::rt::lang_start_internal::{closure#2}, isize> () at library/std/src/panic.rs:133\r\n#26 std::rt::lang_start_internal () at library/std/src/rt.rs:128\r\n#27 0x000055555555bed2 in main ()\r\n```\r\n\r\n<summary>\r\nSTRACE output\r\n<details>\r\n\r\n\r\n```\r\nexecve(\"./target/release/aoc2021\", [\"./target/release/aoc2021\"], 0x7ffd4c0d0cf0 /* 44 vars */) = 0\r\nbrk(NULL)                               = 0x55ff34b52000\r\narch_prctl(0x3001 /* ARCH_??? */, 0x7ffc2166e220) = -1 EINVAL (Invalid argument)\r\naccess(\"/etc/ld.so.preload\", R_OK)      = -1 ENOENT (No such file or directory)\r\nopenat(AT_FDCWD, \"/etc/ld.so.cache\", O_RDONLY|O_CLOEXEC) = 3\r\nnewfstatat(3, \"\", {st_mode=S_IFREG|0644, st_size=181620, ...}, AT_EMPTY_PATH) = 0\r\nmmap(NULL, 181620, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f1ff7613000\r\nclose(3)                                = 0\r\nopenat(AT_FDCWD, \"/usr/lib/libgcc_s.so.1\", O_RDONLY|O_CLOEXEC) = 3\r\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0 0\\0\\0\\0\\0\\0\\0\"..., 832) = 832\r\nnewfstatat(3, \"\", {st_mode=S_IFREG|0644, st_size=475944, ...}, AT_EMPTY_PATH) = 0\r\nmmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f1ff7611000\r\nmmap(NULL, 107240, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f1ff75f6000\r\nmprotect(0x7f1ff75f9000, 90112, PROT_NONE) = 0\r\nmmap(0x7f1ff75f9000, 73728, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x3000) = 0x7f1ff75f9000\r\nmmap(0x7f1ff760b000, 12288, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x15000) = 0x7f1ff760b000\r\nmmap(0x7f1ff760f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18000) = 0x7f1ff760f000\r\nclose(3)                                = 0\r\nopenat(AT_FDCWD, \"/usr/lib/libpthread.so.0\", O_RDONLY|O_CLOEXEC) = 3\r\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\300\\200\\0\\0\\0\\0\\0\\0\"..., 832) = 832\r\npread64(3, \"\\4\\0\\0\\0@\\0\\0\\0\\5\\0\\0\\0GNU\\0\\2\\0\\0\\300\\4\\0\\0\\0\\3\\0\\0\\0\\0\\0\\0\\0\"..., 80, 792) = 80\r\npread64(3, \"\\4\\0\\0\\0\\24\\0\\0\\0\\3\\0\\0\\0GNU\\0\\7\\310\\371[O2Q\\320\\205P!z\\330\\241\\363\\20\"..., 68, 872) = 68\r\nnewfstatat(3, \"\", {st_mode=S_IFREG|0755, st_size=154040, ...}, AT_EMPTY_PATH) = 0\r\nmmap(NULL, 131472, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f1ff75d5000\r\nmprotect(0x7f1ff75dc000, 81920, PROT_NONE) = 0\r\nmmap(0x7f1ff75dc000, 61440, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7000) = 0x7f1ff75dc000\r\nmmap(0x7f1ff75eb000, 16384, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x16000) = 0x7f1ff75eb000\r\nmmap(0x7f1ff75f0000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1a000) = 0x7f1ff75f0000\r\nmmap(0x7f1ff75f2000, 12688, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f1ff75f2000\r\nclose(3)                                = 0\r\nopenat(AT_FDCWD, \"/usr/lib/libdl.so.2\", O_RDONLY|O_CLOEXEC) = 3\r\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0000\\\"\\0\\0\\0\\0\\0\\0\"..., 832) = 832\r\nnewfstatat(3, \"\", {st_mode=S_IFREG|0755, st_size=22704, ...}, AT_EMPTY_PATH) = 0\r\nmmap(NULL, 24720, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f1ff75ce000\r\nmmap(0x7f1ff75d0000, 8192, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x7f1ff75d0000\r\nmmap(0x7f1ff75d2000, 4096, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4000) = 0x7f1ff75d2000\r\nmmap(0x7f1ff75d3000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4000) = 0x7f1ff75d3000\r\nclose(3)                                = 0\r\nopenat(AT_FDCWD, \"/usr/lib/libc.so.6\", O_RDONLY|O_CLOEXEC) = 3\r\nread(3, \"\\177ELF\\2\\1\\1\\3\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0`|\\2\\0\\0\\0\\0\\0\"..., 832) = 832\r\npread64(3, \"\\6\\0\\0\\0\\4\\0\\0\\0@\\0\\0\\0\\0\\0\\0\\0@\\0\\0\\0\\0\\0\\0\\0@\\0\\0\\0\\0\\0\\0\\0\"..., 784, 64) = 784\r\npread64(3, \"\\4\\0\\0\\0@\\0\\0\\0\\5\\0\\0\\0GNU\\0\\2\\0\\0\\300\\4\\0\\0\\0\\3\\0\\0\\0\\0\\0\\0\\0\"..., 80, 848) = 80\r\npread64(3, \"\\4\\0\\0\\0\\24\\0\\0\\0\\3\\0\\0\\0GNU\\0K@g7\\5w\\10\\300\\344\\306B4Zp<G\"..., 68, 928) = 68\r\nnewfstatat(3, \"\", {st_mode=S_IFREG|0755, st_size=2150424, ...}, AT_EMPTY_PATH) = 0\r\npread64(3, \"\\6\\0\\0\\0\\4\\0\\0\\0@\\0\\0\\0\\0\\0\\0\\0@\\0\\0\\0\\0\\0\\0\\0@\\0\\0\\0\\0\\0\\0\\0\"..., 784, 64) = 784\r\nmmap(NULL, 1880536, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f1ff7402000\r\nmmap(0x7f1ff7428000, 1355776, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x26000) = 0x7f1ff7428000\r\nmmap(0x7f1ff7573000, 311296, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x171000) = 0x7f1ff7573000\r\nmmap(0x7f1ff75bf000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1bc000) = 0x7f1ff75bf000\r\nmmap(0x7f1ff75c5000, 33240, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f1ff75c5000\r\nclose(3)                                = 0\r\nmmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f1ff7400000\r\narch_prctl(ARCH_SET_FS, 0x7f1ff7400bc0) = 0\r\nmprotect(0x7f1ff75bf000, 12288, PROT_READ) = 0\r\nmprotect(0x7f1ff75d3000, 4096, PROT_READ) = 0\r\nmprotect(0x7f1ff75f0000, 4096, PROT_READ) = 0\r\nmprotect(0x7f1ff760f000, 4096, PROT_READ) = 0\r\nmprotect(0x55ff3487f000, 12288, PROT_READ) = 0\r\nmprotect(0x7f1ff766e000, 8192, PROT_READ) = 0\r\nmunmap(0x7f1ff7613000, 181620)          = 0\r\nset_tid_address(0x7f1ff7400e90)         = 4884\r\nset_robust_list(0x7f1ff7400ea0, 24)     = 0\r\nrt_sigaction(SIGRTMIN, {sa_handler=0x7f1ff75dcb70, sa_mask=[], sa_flags=SA_RESTORER|SA_SIGINFO, sa_restorer=0x7f1ff75e8870}, NULL, 8) = 0\r\nrt_sigaction(SIGRT_1, {sa_handler=0x7f1ff75dcc10, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO, sa_restorer=0x7f1ff75e8870}, NULL, 8) = 0\r\nrt_sigprocmask(SIG_UNBLOCK, [RTMIN RT_1], NULL, 8) = 0\r\nprlimit64(0, RLIMIT_STACK, NULL, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}) = 0\r\npoll([{fd=0, events=0}, {fd=1, events=0}, {fd=2, events=0}], 3, 0) = 0 (Timeout)\r\nrt_sigaction(SIGPIPE, {sa_handler=SIG_IGN, sa_mask=[PIPE], sa_flags=SA_RESTORER|SA_RESTART, sa_restorer=0x7f1ff743eda0}, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\nrt_sigaction(SIGSEGV, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\nrt_sigaction(SIGSEGV, {sa_handler=0x55ff34856840, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_SIGINFO, sa_restorer=0x7f1ff75e8870}, NULL, 8) = 0\r\nrt_sigaction(SIGBUS, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\nrt_sigaction(SIGBUS, {sa_handler=0x55ff34856840, sa_mask=[], sa_flags=SA_RESTORER|SA_ONSTACK|SA_SIGINFO, sa_restorer=0x7f1ff75e8870}, NULL, 8) = 0\r\nsigaltstack(NULL, {ss_sp=NULL, ss_flags=SS_DISABLE, ss_size=0}) = 0\r\nmmap(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7f1ff763d000\r\nmprotect(0x7f1ff763d000, 4096, PROT_NONE) = 0\r\nsigaltstack({ss_sp=0x7f1ff763e000, ss_flags=0, ss_size=8192}, NULL) = 0\r\nbrk(NULL)                               = 0x55ff34b52000\r\nbrk(0x55ff34b73000)                     = 0x55ff34b73000\r\nopenat(AT_FDCWD, \"/proc/self/maps\", O_RDONLY|O_CLOEXEC) = 3\r\nprlimit64(0, RLIMIT_STACK, NULL, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}) = 0\r\nnewfstatat(3, \"\", {st_mode=S_IFREG|0444, st_size=0, ...}, AT_EMPTY_PATH) = 0\r\nread(3, \"55ff34835000-55ff3483b000 r--p 0\"..., 1024) = 1024\r\nread(3, \"7f1ff75bf000-7f1ff75c2000 r--p 0\"..., 1024) = 1024\r\nread(3, \"1ff75ef000-7f1ff75f0000 ---p 000\"..., 1024) = 1024\r\nread(3, \"7f1ff763e000-7f1ff7640000 rw-p 0\"..., 1024) = 839\r\nclose(3)                                = 0\r\nsched_getaffinity(4884, 32, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]) = 32\r\nopenat(AT_FDCWD, \"/proc/self/cgroup\", O_RDONLY|O_CLOEXEC) = 3\r\nreadlink(\"/proc/self/fd/3\", \"/proc/4884/cgroup\", 256) = 17\r\nfcntl(3, F_GETFL)                       = 0x8000 (flags O_RDONLY|O_LARGEFILE)\r\n--- SIGSEGV {si_signo=SIGSEGV, si_code=SEGV_MAPERR, si_addr=0x55ff4ea12a32} ---\r\nrt_sigaction(SIGSEGV, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7f1ff75e8870}, NULL, 8) = 0\r\nrt_sigreturn({mask=[]})                 = 94555024206386\r\n--- SIGSEGV {si_signo=SIGSEGV, si_code=SEGV_MAPERR, si_addr=0x55ff4ea12a32} ---\r\n+++ killed by SIGSEGV (core dumped) +++\r\n\r\n```\r\n\r\n</details>\r\n</summary>\r\n\r\nI can only reproduce it on one machine running(AMD 5900x), \r\n\r\n1. `Linux emerald 5.15.10-arch1-1 #1 SMP PREEMPT Fri, 17 Dec 2021 11:17:37 +0000 x86_64 GNU/Linux` (Also tested on `Linux emerald 5.15.11-arch2-1 #1 SMP PREEMPT Wed, 22 Dec 2021 09:23:54 +0000 x86_64 GNU/Linux`)\r\n2. GNU C Library (GNU libc) release release version 2.33.\r\n3. Arch linux distro\r\n\r\n</p>\r\n</details>\r\n\r\n\r\nExtra notes,\r\n\r\n1. A similar program written in go which reads that file and writes the contents to console works perfectly fine. [Link](https://paste.debian.net/plain/1224789)\r\n2. A similar program written in C also works perfectly fine. [Link](https://paste.debian.net/plain/1224791)\r\n3. `cat /proc/self/cgroup` works perfectly fine. \r\n\r\nSections of strace output from Go/C programs and cat\r\n\r\n```\r\nopenat(AT_FDCWD, \"/proc/self/cgroup\", O_RDONLY|O_CLOEXEC) = 3\r\nread(3, \"0::/user.slice/user-1000.slice/s\"..., 512) = 47\r\nread(3, \"\", 465)                        = 0\r\n\r\n\r\nopenat(AT_FDCWD, \"/proc/self/cgroup\", O_RDONLY) = 3\r\nnewfstatat(3, \"\", {st_mode=S_IFREG|0444, st_size=0, ...}, AT_EMPTY_PATH) = 0\r\nread(3, \"0::/user.slice/user-1000.slice/s\"..., 1024) = 47\r\nread(3, \"\", 1024)                       = 0\r\nnewfstatat(1, \"\", {st_mode=S_IFCHR|0620, st_rdev=makedev(0x88, 0x1), ...}, AT_EMPTY_PATH) = 0\r\nwrite(1, \"0::/user.slice/user-1000.slice/s\"..., 470::/user.slice/user-1000.slice/session-2.scope\r\n) = 47\r\nclose(3)                                = 0\r\n\r\n\r\nopenat(AT_FDCWD, \"/proc/self/cgroup\", O_RDONLY) = 3\r\nnewfstatat(3, \"\", {st_mode=S_IFREG|0444, st_size=0, ...}, AT_EMPTY_PATH) = 0\r\nfadvise64(3, 0, 0, POSIX_FADV_SEQUENTIAL) = 0\r\nmmap(NULL, 139264, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f39c5b55000\r\nread(3, \"0::/user.slice/user-1000.slice/s\"..., 131072) = 47\r\nwrite(1, \"0::/user.slice/user-1000.slice/s\"..., 470::/user.slice/user-1000.slice/session-2.scope\r\n) = 47\r\nread(3, \"\", 131072)                     = 0\r\n```", "closed_by": {"login": "ishanjain28", "id": 7921368, "node_id": "MDQ6VXNlcjc5MjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/7921368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishanjain28", "html_url": "https://github.com/ishanjain28", "followers_url": "https://api.github.com/users/ishanjain28/followers", "following_url": "https://api.github.com/users/ishanjain28/following{/other_user}", "gists_url": "https://api.github.com/users/ishanjain28/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishanjain28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishanjain28/subscriptions", "organizations_url": "https://api.github.com/users/ishanjain28/orgs", "repos_url": "https://api.github.com/users/ishanjain28/repos", "events_url": "https://api.github.com/users/ishanjain28/events{/privacy}", "received_events_url": "https://api.github.com/users/ishanjain28/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92290/timeline", "performed_via_github_app": null, "state_reason": "completed"}