{"url": "https://api.github.com/repos/rust-lang/rust/issues/79468", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79468/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79468/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79468/events", "html_url": "https://github.com/rust-lang/rust/issues/79468", "id": 752277733, "node_id": "MDU6SXNzdWU3NTIyNzc3MzM=", "number": 79468, "title": "ICE: rustdoc on issue-56762.rs: generic static must be rejected", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-11-27T14:06:45Z", "updated_at": "2022-02-19T12:29:33Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\ncode from `./src/test/ui/issues/issue-56762.rs`\r\n```Rust\r\n// only-x86_64\r\n\r\n// FIXME https://github.com/rust-lang/rust/issues/59774\r\n// normalize-stderr-test \"thread.*panicked.*Metadata module not compiled.*\\n\" -> \"\"\r\n// normalize-stderr-test \"note:.*RUST_BACKTRACE=1.*\\n\" -> \"\"\r\nconst HUGE_SIZE: usize = !0usize / 8;\r\n\r\n\r\npub struct TooBigArray {\r\n    arr: [u8; HUGE_SIZE],\r\n}\r\n\r\nimpl TooBigArray {\r\n    pub const fn new() -> Self {\r\n        TooBigArray { arr: [0x00; HUGE_SIZE], }\r\n    }\r\n}\r\n\r\nstatic MY_TOO_BIG_ARRAY_1: TooBigArray = TooBigArray::new();\r\n//~^ ERROR values of the type `[u8; 2305843009213693951]` are too big\r\nstatic MY_TOO_BIG_ARRAY_2: [u8; HUGE_SIZE] = [0x00; HUGE_SIZE];\r\n//~^ ERROR values of the type `[u8; 2305843009213693951]` are too big\r\n\r\nfn main() { }\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustdoc 1.50.0-nightly (1c389ffef 2020-11-24)\r\nbinary: rustdoc\r\ncommit-hash: 1c389ffeff814726dec325f0f2b0c99107df2673\r\ncommit-date: 2020-11-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.50.0-nightly\r\n```\r\n\r\n### Error output\r\n`rustdoc ./src/test/ui/issues/issue-56762.rs`\r\n```\r\nerror: internal compiler error: generic static must be rejected\r\n  --> ./src/test/ui/issues/issue-56762.rs:19:1\r\n   |\r\n19 | static MY_TOO_BIG_ARRAY_1: TooBigArray = TooBigArray::new();\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at compiler/rustc_typeck/src/check/check.rs:426:22\r\n\r\nerror: internal compiler error: generic static must be rejected\r\n  --> ./src/test/ui/issues/issue-56762.rs:21:1\r\n   |\r\n21 | static MY_TOO_BIG_ARRAY_2: [u8; HUGE_SIZE] = [0x00; HUGE_SIZE];\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at compiler/rustc_typeck/src/check/check.rs:426:22\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', compiler/rustc_errors/src/lib.rs:974:13\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (1c389ffef 2020-11-24) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: generic static must be rejected\r\n  --> ./src/test/ui/issues/issue-56762.rs:19:1\r\n   |\r\n19 | static MY_TOO_BIG_ARRAY_1: TooBigArray = TooBigArray::new();\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at compiler/rustc_typeck/src/check/check.rs:426:22\r\n\r\nerror: internal compiler error: generic static must be rejected\r\n  --> ./src/test/ui/issues/issue-56762.rs:21:1\r\n   |\r\n21 | static MY_TOO_BIG_ARRAY_2: [u8; HUGE_SIZE] = [0x00; HUGE_SIZE];\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at compiler/rustc_typeck/src/check/check.rs:426:22\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', compiler/rustc_errors/src/lib.rs:974:13\r\nstack backtrace:\r\n   0:     0x7f253286be30 - std::backtrace_rs::backtrace::libunwind::trace::h746c3e9529d524bc\r\n                               at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/std/src/../../backtrace/src/backtrace/libunwind.rs:90:5\r\n   1:     0x7f253286be30 - std::backtrace_rs::backtrace::trace_unsynchronized::h86340908ff889faa\r\n                               at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f253286be30 - std::sys_common::backtrace::_print_fmt::h43f85f9b18230404\r\n                               at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x7f253286be30 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hc132ae1a5b5aa7cd\r\n                               at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x7f25328dec4c - core::fmt::write::hdf023a0036d2a25f\r\n                               at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/core/src/fmt/mod.rs:1078:17\r\n   5:     0x7f253285d9a2 - std::io::Write::write_fmt::h8580846154bcb66a\r\n                               at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/std/src/io/mod.rs:1519:15\r\n   6:     0x7f253286fa95 - std::sys_common::backtrace::_print::h7ee55fed88d107a3\r\n                               at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x7f253286fa95 - std::sys_common::backtrace::print::h54a7d3e52a524177\r\n                               at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x7f253286fa95 - std::panicking::default_hook::{{closure}}::h60921e857bf55a40\r\n                               at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/std/src/panicking.rs:208:50\r\n   9:     0x7f253286f5ea - std::panicking::default_hook::hf0f9afb1017317fc\r\n                               at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/std/src/panicking.rs:225:9\r\n  10:     0x7f25330fcbb8 - rustc_driver::report_ice::ha25ae86a5858acc3\r\n  11:     0x7f2532870396 - std::panicking::rust_panic_with_hook::h8d66bf42b407aaea\r\n                               at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/std/src/panicking.rs:595:17\r\n  12:     0x7f253286feb7 - std::panicking::begin_panic_handler::{{closure}}::hde71edcd925d0c5e\r\n                               at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/std/src/panicking.rs:497:13\r\n  13:     0x7f253286c2ec - std::sys_common::backtrace::__rust_end_short_backtrace::h8a3c7d6cea578919\r\n                               at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/std/src/sys_common/backtrace.rs:141:18\r\n  14:     0x7f253286fe19 - rust_begin_unwind\r\n                               at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/std/src/panicking.rs:493:5\r\n  15:     0x7f253286fdcb - std::panicking::begin_panic_fmt::hee67ce14b77d0396\r\n                               at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/std/src/panicking.rs:435:5\r\n  16:     0x7f253625ff11 - rustc_errors::HandlerInner::flush_delayed::h336555a5d5079cda\r\n  17:     0x7f253625c3d1 - <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop::he52694f8b8fafc7c\r\n  18:     0x558cdcb87226 - core::ptr::drop_in_place::he12f0fc8a3bb0500\r\n  19:     0x558cdcb8b2b6 - <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop::hc65b7dbe435be8b6\r\n  20:     0x558cdcb0ce0c - rustdoc::main_options::h8a5cda9c1c8c625b\r\n  21:     0x558cdcc53a68 - rustc_span::with_session_globals::h7a83fbbd64fb6823\r\n  22:     0x558cdcb3a30e - std::sys_common::backtrace::__rust_begin_short_backtrace::h50722f4a01515f7b\r\n  23:     0x558cdcc6c03a - core::ops::function::FnOnce::call_once{{vtable.shim}}::h22276985fb540191\r\n  24:     0x7f253287f65a - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hea1090dbdcecbf5a\r\n                               at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/alloc/src/boxed.rs:1318:9\r\n  25:     0x7f253287f65a - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h8d5723d3912bd325\r\n                               at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/alloc/src/boxed.rs:1318:9\r\n  26:     0x7f253287f65a - std::sys::unix::thread::Thread::new::thread_start::hc17a425ca2995724\r\n                               at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/std/src/sys/unix/thread.rs:71:17\r\n  27:     0x7f253275b3e9 - start_thread\r\n  28:     0x7f2532541293 - __GI___clone\r\n  29:                0x0 - <unknown>\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (1c389ffef 2020-11-24) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79468/timeline", "performed_via_github_app": null, "state_reason": null}