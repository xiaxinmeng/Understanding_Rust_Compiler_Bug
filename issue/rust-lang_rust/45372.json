{"url": "https://api.github.com/repos/rust-lang/rust/issues/45372", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45372/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45372/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45372/events", "html_url": "https://github.com/rust-lang/rust/issues/45372", "id": 266615181, "node_id": "MDU6SXNzdWUyNjY2MTUxODE=", "number": 45372, "title": "MIR-borrowck: have a script and a repo for tracking MIR borrowck output", "user": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-18T19:32:23Z", "updated_at": "2017-12-21T23:19:16Z", "closed_at": "2017-11-01T20:18:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "One important thing with MIR borrowck is to have some parity of diagnostics with AST borrowck. At least during the transition period, we want to have an eye on how MIR borrowck diagnostics look on our test suite.\r\n\r\n@pnkfelix had done some manual regression runs, but these obviously don't scale - I want to be able to see which diagnostics I change on each commit I make, automatically, and to have a list of all \"bad\" diagnostics.\r\n\r\nI think the best way to write such a script, let's call it `borrowck-checker` is as follows:\r\n1. Have a directory database of \"blessed outputs\". In it, you should be able to have (maybe multiple?) known-good outputs for each compile-fail or run-pass test.\r\n2. You should be able to run the script on a given compiler and commit.\r\n3. When run, the script should:\r\n 3.a. run \"all\" testsuites (at least compile-fail, run-pass and ui) using the selected compiler in both AST and MIR borrowck modes (you can use `src/tools/compiletest` aka \"compiletest\" for that).\r\n 3.b. for each test, if the results differ between AST and MIR borrowck AND the result differs from the \"blessed output\", report that.\r\n4. So (I think) the script output should look like\r\n    ```\r\n    $MIR_BORROWCK_DATA/blessed-results/test-name.err\r\n    $MIR_BORROWCK_DATA/runs/$COMMIT_NAME/ast-results/test-name.err\r\n    $MIR_BORROWCK_DATA/runs/$COMMIT_NAME/mir-results/test-name.err\r\n    $MIR_BORROWCK_DATA/runs/$COMMIT_NAME/discrepancies\r\n    ```\r\n    I think that this script can do well with only accessing the filesystem, and leave syncing the repo to the user.\r\n\r\n\r\nBonus steps:\r\n1. Have a way for the script to verify that the git repository is up to date and in sync with the rustc and then get the commit hash from the git repo, to avoid manual data entry and errors.\r\n2. Currently, running rustc MIR borrowck always outputs errors for both AST and MIR borrowck - and this means that while we can ignore all the tests that don't use borrowck, every test that uses borrowck will always be a discrepancy and need to be manually blessed. If you could add a mode that *only* does a MIR borrowck while ignoring AST borrowck (or only the errors it emits), you could \"auto ignore\" borrowck tests where we give the exact same output.\r\n\r\nThings I was able to find:\r\n1. compiletest stores test output in `build/x86_64-unknown-linux-gnu/test/compile-fail/` etc., you can use that as a basis for comparison. If you want to make it forget a particular test output, remove the corresponding `.stamp` file (e.g. `build/x86_64-unknown-linux-gnu/test/compile-fail/writing-to-immutable-vec.rs-stage2-x86_64-unknown-linux-gnu.stamp`\r\n2. You can run compiletest with special arguments by doing `x.py test --stage 1 test/name --test-args 'foo bar', but I think you want to *change the value* of compiletest's `--target-rustcflags` and `--build-base` arguments, so you might be better off changing bootstrap to allow passing specific values to these flags (both options should be ok, and @alexcrichton should be able to help you with them).\r\n\r\nI would like the script and database should be available on some personal github repo. I'll import it under the `rustc-dev` user (which I have write access to) afterwards.", "closed_by": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45372/timeline", "performed_via_github_app": null, "state_reason": "completed"}