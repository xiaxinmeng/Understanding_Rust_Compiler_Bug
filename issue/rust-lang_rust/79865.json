{"url": "https://api.github.com/repos/rust-lang/rust/issues/79865", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79865/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79865/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79865/events", "html_url": "https://github.com/rust-lang/rust/issues/79865", "id": 760632041, "node_id": "MDU6SXNzdWU3NjA2MzIwNDE=", "number": 79865, "title": "Miscompilation of AVX2 code under --release", "user": {"login": "tarcieri", "id": 797, "node_id": "MDQ6VXNlcjc5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tarcieri", "html_url": "https://github.com/tarcieri", "followers_url": "https://api.github.com/users/tarcieri/followers", "following_url": "https://api.github.com/users/tarcieri/following{/other_user}", "gists_url": "https://api.github.com/users/tarcieri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tarcieri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tarcieri/subscriptions", "organizations_url": "https://api.github.com/users/tarcieri/orgs", "repos_url": "https://api.github.com/users/tarcieri/repos", "events_url": "https://api.github.com/users/tarcieri/events{/privacy}", "received_events_url": "https://api.github.com/users/tarcieri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 631737389, "node_id": "MDU6TGFiZWw2MzE3MzczODk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-simd", "name": "A-simd", "color": "f7e101", "default": false, "description": "Area: SIMD (Single Instruction Multiple Data)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 27, "created_at": "2020-12-09T20:05:03Z", "updated_at": "2022-03-10T17:48:24Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Apologies for not having a minimal reproduction, but this was an extremely difficult bug to even isolate occurring inside some complicated AVX2 code.\r\n\r\nThe bug is causing the wrong values to be computed. Whether or not it occurs depends on the following conditions:\r\n\r\n- With `target-cpu` unset, the bug does NOT occur in debug builds, but DOES occur with `--release`\r\n- With `target-cpu=haswell`, the bug does NOT occur in `--release` builds and both debug and release builds are OK\r\n\r\nI can attempt to further isolate and reduce the problem, but there's a lot of spooky-action-at-a-distance happening making that rather difficult.\r\n\r\n~~For now, here is the best reproduction I can provide:~~\r\n\r\nEDIT: I've deleted the `poly1305/avx2-bug` branch as there is now a [much smaller repro](https://github.com/rust-lang/rust/issues/79865#issuecomment-748537875), but so long as GitHub hasn't GC'd it here's the original commit:\r\n\r\nhttps://github.com/RustCrypto/universal-hashes/commit/7485010991dedefd5a3053d26001c9266fd6e227\r\n\r\n```\r\ngit clone https://github.com/RustCrypto/universal-hashes\r\ncd universal-hashes/poly1305\r\ngit checkout poly1305/avx2-bug\r\n```\r\n\r\nNOTE: if you `git show` from here, I've included lots of notes in the latest commit about the bug in the commit message. The commit also contains comments indicating lines you can comment or uncomment to make the tests succeed or fail.\r\n\r\n## Commands to run which DON'T trigger the bug\r\n\r\n- `cargo test donna_self_test1 -- --nocapture`\r\n- `RUSTFLAGS=\"-Ctarget-cpu=haswell\" cargo test donna_self_test1 --release -- --nocapture`\r\n\r\n## Commands to run which DO trigger the bug\r\n\r\nNOTE: as this is a bug in the AVX2 backend, you'll need to run it on an AVX2-capable host to trigger the bug.\r\n\r\n- `cargo test donna_self_test1 --release -- --nocapture`\r\n\r\nThis test fails with a miscomputed result (as do all of the tests across the board if you run the whole suite):\r\n\r\n```\r\nthread 'donna_self_test1' panicked at 'assertion failed: `(left == right)`\r\n  left: `[3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]`,\r\n right: `[254, 255, 255, 255, 255, 255, 239, 255, 255, 63, 0, 0, 0, 254, 255, 255]`', poly1305/tests/lib.rs:47:5\r\n```\r\n\r\n## Things which mysteriously make the tests pass\r\n\r\nThe aforementioned `cargo test ... --release ...` will pass if any of the following things which are documented in the 74850109 commit (`git show`) message and comments introduced in that commit are changed:\r\n\r\n- A commented out `dbg!` statement near the first observation of the miscompilation is uncommented (heisenbug!)\r\n- The `#[target_feature(enable = \"avx2\")]` attribute on the `finalize` function is commented out. This function is in a completely different module, hence my descriptions of \"spooky action at a distance\" (the function in which the bug is occurring is annotated `#[inline(always)]`, but the bug still occurs if that attribute is commented out)\r\n\r\n## Meta\r\n\r\nThis bug is easily reproducible and occurs on all versions of the Rust compiler and all operating systems I've tried. I've reproduced it locally on macOS and it also occurred on Linux/Ubuntu via GitHub Actions.\r\n\r\nHere are some compiler versions I've tried:\r\n\r\n```\r\nrustc 1.48.0 (7eac88abb 2020-11-16)\r\n```\r\n\r\nLatest nightly as of opening this ticket:\r\n\r\n```\r\nrustc 1.50.0-nightly (1700ca07c 2020-12-08)\r\n```\r\n\r\nIt also broke in CI which tests it under the MSRV of 1.41.0.", "closed_by": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79865/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79865/timeline", "performed_via_github_app": null, "state_reason": null}