{"url": "https://api.github.com/repos/rust-lang/rust/issues/64033", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64033/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64033/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64033/events", "html_url": "https://github.com/rust-lang/rust/issues/64033", "id": 487757470, "node_id": "MDU6SXNzdWU0ODc3NTc0NzA=", "number": 64033, "title": "Help with enum of Box through FFI", "user": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-31T10:47:38Z", "updated_at": "2019-08-31T10:59:58Z", "closed_at": "2019-08-31T10:59:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello everyone!\r\n\r\nI am having an issue understanding how to share an Enum, where some variants holds a Box, through FFI boundary.\r\nThe Enum looks like this:\r\n```Rust\r\n#[derive(Debug)]\r\n#[repr(C)]\r\npub enum SchemeType {\r\n    Ip,\r\n    Bytes,\r\n    Int,\r\n    Bool,\r\n    Array(Box<SchemeType>),\r\n    Map(Box<SchemeType>),\r\n}\r\n```\r\nAt the beginning I thought it would not possible to share this type with C directly, but then I found https://github.com/rust-lang/rfcs/blob/master/text/2195-really-tagged-unions.md\r\nSo after reading that RFC, I thought that the C type equivalent type would be something like:\r\n```C\r\ntypedef enum {\r\n    SCHEME_TYPE_TAG_IP,\r\n    SCHEME_TYPE_TAG_BYTES,\r\n    SCHEME_TYPE_TAG_INT,\r\n    SCHEME_TYPE_TAG_BOOL,\r\n    SCHEME_TYPE_TAG_ARRAY,\r\n    SCHEME_TYPE_TAG_MAP,\r\n} scheme_type_tag_t;\r\n\r\ntypedef struct {\r\n    scheme_type_tag_t tag;\r\n    void *data;\r\n} scheme_type_t;\r\n```\r\nYou can find the code here: https://github.com/marmeladema/rust-ffi-enum-box/commit/8d614500edd8413fea27b7ff5cccd47f8f658687\r\n\r\nThis did not worked well, and crashed in the test functions with `Illegal instruction`. \r\nI read this issue https://github.com/rust-lang/rust/issues/52976 but its still not clear at all if `Box<T>` can be represented directly with a pointer. Its currently not `#[repr(transparent)]` so I guess until it is, it cannot safely be done.\r\n\r\nAfter trying different things, i figured that adding 8 bytes padding to the end of `scheme_type_t` worked, at least on `x86_64`: https://github.com/marmeladema/rust-ffi-enum-box/commit/2bc030e806ce8cf2beba8c852ed97e95485afd85\r\n\r\nBut this does not work at all on `aarch64`.\r\n\r\nThe question is then, how should I approach this issue?\r\nI figured the best way might be add a FFI-compatible `SchemeTypeFFI` wrapper, (storing a raw pointer instead of a `Box<T>` and convert back and forth from and to real Rust `SchemeType` type:\r\n```Rust\r\npub enum SchemeTypeFFI {\r\n    Ip,\r\n    Bytes,\r\n    Int,\r\n    Bool,\r\n    Array(*mut SchemeType),\r\n    Map(*mut SchemeType),\r\n}\r\n```\r\n\r\nThank you in advance for your help!", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64033/timeline", "performed_via_github_app": null, "state_reason": "completed"}