{"url": "https://api.github.com/repos/rust-lang/rust/issues/52442", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52442/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52442/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52442/events", "html_url": "https://github.com/rust-lang/rust/issues/52442", "id": 341630558, "node_id": "MDU6SXNzdWUzNDE2MzA1NTg=", "number": 52442, "title": "ICE: No kind for cast", "user": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-16T18:37:51Z", "updated_at": "2018-07-23T03:06:26Z", "closed_at": "2018-07-23T03:06:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following only ICE's on stable, beta and nightly:\r\n\r\n```Rust\r\nfn main() {\r\n    let f = [();  { &loop { break } as *const _ as usize } ];\r\n}\r\n```\r\nplayground: https://play.rust-lang.org/?gist=b35ac8a560e0cc448e95e2a62598208a&version=stable&mode=release&edition=2015\r\nBacktrace (stable):\r\n```\r\nerror[E0019]: constant contains unimplemented expression type\r\n   --> src\\lib.rs:164:26\r\n    |\r\n164 |         let f = [();  { &loop { break } as *const _ as usize } ];\r\n    |                          ^^^^^^^^^^^^^^\r\n\r\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: EvalError { kind: a raw memory access tried to access part of a pointer value as raw bytes, backtrace: None }', libcore\\result.rs:945:5\r\nstack backtrace:\r\n   0: <u128 as compiler_builtins::int::Int>::min_value\r\n   1: core::alloc::<impl core::alloc::::Opaque>::null_mut\r\n   2: std::panicking::take_hook\r\n   3: std::panicking::take_hook\r\n   4: rustc::ty::structural_impls::<impl rustc::ty::context::Lift<'tcx> for rustc::middle::const_val::ErrKind<'a>>::lift_to_tcx\r\n   5: std::panicking::rust_panic_with_hook\r\n   6: std::panicking::begin_panic_fmt\r\n   7: rust_begin_unwind\r\n   8: core::panicking::panic_fmt\r\n   9: <rustc::util::common::ProfileQueriesMsg as core::fmt::Debug>::fmt\r\n  10: rustc::ty::maps::on_disk_cache::<impl serialize::serialize::SpecializedDecoder<rustc::ty::maps::on_disk_cache::IntEncodedWithFixedSize> for serialize::opaque::Decoder<'enc>>::specialized_decode\r\n  11: rustc::ty::maps::on_disk_cache::<impl serialize::serialize::SpecializedDecoder<rustc::ty::maps::on_disk_cache::IntEncodedWithFixedSize> for serialize::opaque::Decoder<'enc>>::specialized_decode\r\n  12: <rustc::infer::combine::Generalizer<'cx, 'gcx, 'tcx> as rustc::ty::relate::TypeRelation<'cx, 'gcx, 'tcx>>::tys\r\n  13: rustc::ich::caching_codemap_view::CachingCodemapView::byte_pos_to_line_and_col\r\n  14: <rustc::infer::sub::Sub<'combine, 'infcx, 'gcx, 'tcx> as rustc::ty::relate::TypeRelation<'infcx, 'gcx, 'tcx>>::tys\r\n  15: rustc_typeck::hir_trait_to_predicates\r\n  16: rustc_typeck::hir_trait_to_predicates\r\n  17: <rustc::hir::HirId as rustc_typeck::check::writeback::Locatable>::to_span\r\n  18: rustc_typeck::hir_trait_to_predicates\r\n  19: <unknown>\r\n  20: <unknown>\r\n  21: <unknown>\r\n  22: <rustc_typeck::outlives::implicit_infer::InferVisitor<'cx, 'tcx> as rustc::hir::itemlikevisit::ItemLikeVisitor<'tcx>>::visit_impl_item\r\n  23: <rustc_typeck::outlives::implicit_infer::InferVisitor<'cx, 'tcx> as rustc::hir::itemlikevisit::ItemLikeVisitor<'tcx>>::visit_impl_item\r\n  24: <rustc_typeck::outlives::implicit_infer::InferVisitor<'cx, 'tcx> as rustc::hir::itemlikevisit::ItemLikeVisitor<'tcx>>::visit_impl_item\r\n  25: <rustc_typeck::outlives::implicit_infer::InferVisitor<'cx, 'tcx> as rustc::hir::itemlikevisit::ItemLikeVisitor<'tcx>>::visit_impl_item\r\n  26: <rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx> as rustc_typeck::astconv::AstConv<'gcx, 'tcx>>::record_ty\r\n  27: <rustc_typeck::check::GatherLocalsVisitor<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_pat\r\n  28: <rustc_typeck::collect::has_late_bound_regions::LateBoundRegionsDetector<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_lifetime\r\n  29: <rustc_typeck::check::CheckItemTypesVisitor<'a, 'tcx> as rustc::hir::itemlikevisit::ItemLikeVisitor<'tcx>>::visit_item\r\n  30: rustc::ty::maps::<impl rustc::ty::maps::config::QueryConfig<'tcx> for rustc::ty::maps::queries::typeck_tables_of<'tcx>>::compute\r\n  31: rustc::ty::context::tls::track_diagnostic\r\n  32: rustc::dep_graph::graph::DepGraph::assert_ignored\r\n  33: rustc::ty::context::tls::track_diagnostic\r\n  34: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_mark_green_and_read\r\n  35: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_mark_green_and_read\r\n  36: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_mark_green_and_read\r\n  37: <rustc_typeck::check::Diverges as core::fmt::Debug>::fmt\r\n  38: <rustc_typeck::check::CheckItemTypesVisitor<'a, 'tcx> as rustc::hir::itemlikevisit::ItemLikeVisitor<'tcx>>::visit_item\r\n  39: rustc::ty::context::tls::track_diagnostic\r\n  40: rustc::dep_graph::graph::DepGraph::assert_ignored\r\n  41: rustc::ty::context::tls::track_diagnostic\r\n  42: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_mark_green_and_read\r\n  43: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_mark_green_and_read\r\n  44: rustc_typeck::check_crate\r\n  45: <humantime::duration::Error as std::error::Error>::cause\r\n  46: <rustc_driver::pretty::UserIdentifiedItem as core::fmt::Debug>::fmt\r\n  47: <unknown>\r\n  48: rustc_driver::driver::compile_input\r\n  49: rustc_driver::run_compiler\r\n  50: rustc_driver::driver::build_output_filenames\r\n  51: <unknown>\r\n  52: rustc_driver::driver::build_output_filenames\r\n  53: _rust_maybe_catch_panic\r\n  54: rustc_driver::profile::trace::write_style\r\n  55: rustc_driver::main\r\n  56: <unknown>\r\n  57: std::panicking::update_panic_count\r\n  58: _rust_maybe_catch_panic\r\n  59: std::rt::lang_start_internal\r\n  60: <unknown>\r\n  61: <unknown>\r\n  62: BaseThreadInitThunk\r\n  63: RtlUserThreadStart\r\nquery stack during panic:\r\n#0 [typeck_tables_of] processing `internal_compiler_errors::no_kind_for_cast`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0019`.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.27.1 (5f2b325f6 2018-07-07) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `test_bugs`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\n\r\nThe backtrace on nightly is verry different:\r\n```\r\nwarning: unreachable expression\r\n   --> src\\lib.rs:164:25\r\n    |\r\n164 |         let f = [();  { &loop { break } as *const _ as usize } ];\r\n    |                         ^^^^^^^^^^^^^^^\r\n    |\r\n    = note: #[warn(unreachable_code)] on by default\r\n\r\nerror: internal compiler error: no kind for cast\r\n   --> src\\lib.rs:164:25\r\n    |\r\n164 |         let f = [();  { &loop { break } as *const _ as usize } ];\r\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: Could not compile `test_bugs`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52442/timeline", "performed_via_github_app": null, "state_reason": "completed"}