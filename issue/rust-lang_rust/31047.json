{"url": "https://api.github.com/repos/rust-lang/rust/issues/31047", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/31047/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/31047/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/31047/events", "html_url": "https://github.com/rust-lang/rust/issues/31047", "id": 127672727, "node_id": "MDU6SXNzdWUxMjc2NzI3Mjc=", "number": 31047, "title": "Concurrency example in TRPL is not obvious/convincing", "user": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-20T12:32:30Z", "updated_at": "2016-01-20T14:20:28Z", "closed_at": "2016-01-20T14:20:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is the example of a racy code used in [shared state](https://doc.rust-lang.org/book/concurrency.html#safe-shared-mutable-state) section:\n\n``` Rust\nuse std::thread;\n\nfn main() {\n    let mut data = vec![1, 2, 3];\n\n    for i in 0..3 {\n        thread::spawn(move || {\n            data[i] += 1;\n        });\n    }\n\n    thread::sleep_ms(50);\n}\n```\n\nThe first problem with the example is that the race condition is not obvious ([proof](https://users.rust-lang.org/t/question-about-concurrency-example-in-rust-book/4365)).\n\nThe second problem is that in reality you'd better avoid indices here, and use a combination of iterators and scoped threads to solve the problem without any locks and Arcs (like [here](https://gist.github.com/matklad/5327876d6e9ae400361e#file-libs-rs-L13-L26)).\n\nI think this example is better:\n\n``` Rust\nuse std::thread;\n\nfn main() {\n    let mut data = vec![];\n\n    for i in 0..3 {\n        thread::spawn(move || {\n            data.push(i)\n        });\n    }\n\n    thread::sleep_ms(50);\n}\n```\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/31047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/31047/timeline", "performed_via_github_app": null, "state_reason": "completed"}