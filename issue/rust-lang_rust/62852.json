{"url": "https://api.github.com/repos/rust-lang/rust/issues/62852", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62852/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62852/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62852/events", "html_url": "https://github.com/rust-lang/rust/issues/62852", "id": 470786962, "node_id": "MDU6SXNzdWU0NzA3ODY5NjI=", "number": 62852, "title": "Codegen issue (endless recursion) with custom target and +soft-float", "user": {"login": "phil-opp", "id": 1131315, "node_id": "MDQ6VXNlcjExMzEzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1131315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phil-opp", "html_url": "https://github.com/phil-opp", "followers_url": "https://api.github.com/users/phil-opp/followers", "following_url": "https://api.github.com/users/phil-opp/following{/other_user}", "gists_url": "https://api.github.com/users/phil-opp/gists{/gist_id}", "starred_url": "https://api.github.com/users/phil-opp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phil-opp/subscriptions", "organizations_url": "https://api.github.com/users/phil-opp/orgs", "repos_url": "https://api.github.com/users/phil-opp/repos", "events_url": "https://api.github.com/users/phil-opp/events{/privacy}", "received_events_url": "https://api.github.com/users/phil-opp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-21T14:21:05Z", "updated_at": "2019-10-30T19:41:14Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following function causes endless recursion and a stack overflow on our bare metal target, which uses the `soft-float` feature:\r\n\r\n```rust\r\n#[no_mangle]\r\npub extern \"C\" fn _start() -> ! {\r\n    foo(1);\r\n\r\n    loop {}\r\n}\r\n\r\nfn foo(x: isize) -> f64 {\r\n    5 as f64 / x as f64\r\n}\r\n```\r\n\r\nThe target specification looks like this:\r\n\r\n```json\r\n{\r\n    \"llvm-target\": \"x86_64-unknown-none\",\r\n    \"data-layout\": \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\",\r\n    \"arch\": \"x86_64\",\r\n    \"target-endian\": \"little\",\r\n    \"target-pointer-width\": \"64\",\r\n    \"target-c-int-width\": \"32\",\r\n    \"os\": \"none\",\r\n    \"executables\": true,\r\n    \"linker-flavor\": \"ld.lld\",\r\n    \"linker\": \"rust-lld\",\r\n    \"panic-strategy\": \"abort\",\r\n    \"disable-redzone\": true,\r\n    \"features\": \"-mmx,-sse,+soft-float\"\r\n  }\r\n```\r\n\r\nThe following code is generated:\r\n\r\n```\r\n0000000000201000 <_start>:\r\n  201000:\t50                   \tpush   rax\r\n  201001:\tbf 01 00 00 00       \tmov    edi,0x1\r\n  201006:\te8 15 00 00 00       \tcall   201020 <_ZN10playground3foo17hf4a4b11a35677989E>\r\n  [\u2026]  \r\n\r\n0000000000201020 <_ZN10playground3foo17hf4a4b11a35677989E>:\r\n  201020:\t50                   \tpush   rax\r\n  201021:\t48 89 3c 24          \tmov    QWORD PTR [rsp],rdi\r\n  201025:\t48 8b 3c 24          \tmov    rdi,QWORD PTR [rsp]\r\n  201029:\te8 22 00 00 00       \tcall   201050 <__floatdidf>\r\n  [\u2026]\r\n\r\n0000000000201050 <__floatdidf>:\r\n  201050:\t50                   \tpush   rax\r\n  201051:\te8 fa ff ff ff       \tcall   201050 <__floatdidf>\r\n  201056:\t59                   \tpop    rcx\r\n  [\u2026]  \r\n```\r\n\r\nThe `__floatdidf` function is just an endless recursion that leads to a stack overflow.\r\n\r\nI tried debugging it on godbolt, but I don't know how to make it use a custom target. I created a small test project and documented the steps to reproduce at https://github.com/phil-opp/__floatdidf-issue.\r\n\r\ncc @adeadman", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62852/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62852/timeline", "performed_via_github_app": null, "state_reason": null}