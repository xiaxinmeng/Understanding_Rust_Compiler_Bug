{"url": "https://api.github.com/repos/rust-lang/rust/issues/30220", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/30220/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/30220/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/30220/events", "html_url": "https://github.com/rust-lang/rust/issues/30220", "id": 120547245, "node_id": "MDU6SXNzdWUxMjA1NDcyNDU=", "number": 30220, "title": "concurrent rustdoc usage can lead to bad times", "user": {"login": "letheed", "id": 5330692, "node_id": "MDQ6VXNlcjUzMzA2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5330692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/letheed", "html_url": "https://github.com/letheed", "followers_url": "https://api.github.com/users/letheed/followers", "following_url": "https://api.github.com/users/letheed/following{/other_user}", "gists_url": "https://api.github.com/users/letheed/gists{/gist_id}", "starred_url": "https://api.github.com/users/letheed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/letheed/subscriptions", "organizations_url": "https://api.github.com/users/letheed/orgs", "repos_url": "https://api.github.com/users/letheed/repos", "events_url": "https://api.github.com/users/letheed/events{/privacy}", "received_events_url": "https://api.github.com/users/letheed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-12-05T11:01:35Z", "updated_at": "2022-01-18T22:10:01Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed that the documentation generated by `cargo doc` was not exactly the same depending on if I ran `cargo test` or `cargo build` first.\n\nRunning:\n\n``` shell\n$ cargo clean\n$ cargo doc\n$ mv target/doc tdoc\n$ cargo clean\n$ cargo test # or cargo build\n$ cargo doc\n$ diff -r tdoc target/doc\n```\n- in `search-index.js`: the indexes for my two targets (a [lib] and a [[bin]]) are swapped. The two lines are identical but since they're swapped git detects a file modification when my script copies the doc over to the gh-pages branch, and the file is commited for nothing.\n\n``` diff\ndiff -r tdoc/search-index.js target/doc/search-index.js\n2d1\n< searchIndex['takuzu'] = {\"items\":[[0,\"\",\"takuzu\",\"A Takuzu (a.k.a. Binairo) solving library.\",null,null],[3,\"Grid\",\"\",\"A container for takuzu grid manipulation.\",null,null],[4,\"GridError\",\"\",\"An error returned when checking if the grid is well-sized and legal.\",null,null],[13,\"BadSize\",\"\",\"The grid does not have the right size.\",0,null],[13,\"Illegal\",\"\",\"The grid is illegal, that is it infringes at least one of the rules.\",0,null],[4,\"GridParseError\",\"\",\"An error returned when parsing a string to create a grid failed.\",null,null],[13,\"CreationError\",\"\",\"A `Grid` cannot be created from this `Array`.\",1,null],[13,\"UnexpectedCharacter\",\"\",\"At least one character other than `0`, `1`, `.` or '\\\\n'\\nwas found in the string.\",1,null],[4,\"GridSizeError\",\"\",\"An error returned when the grid is not properly sized.\",null,null],[13,\"Empty\",\"\",\"The grid is empty.\",2,null],[13,\"NotASquare\",\"\",\"The grid is not a square.\\nThe field contains the line number that triggered the error.\",2,null],[13,\"OddRowNumber\",\"\",\"The grid has an odd number of rows.\",2,null],[4,\"SourceError\",\"\",\"An error returned by the `source` method when either reading or parsing failed.\",null,null],[13,\"IO\",\"\",\"Reading from the source failed.\",3,null],[13,\"Parsing\",\"\",\"Parsing failed.\",3,null],[11,\"eq\",\"\",\"\",0,{\"inputs\":[{\"name\":\"griderror\"},{\"name\":\"griderror\"}],\"output\":{\"name\":\"bool\"}}],[11,\"ne\",\"\",\"\",0,{\"inputs\":[{\"name\":\"griderror\"},{\"name\":\"griderror\"}],\"output\":{\"name\":\"bool\"}}],[11,\"hash\",\"\",\"\",0,null],[11,\"fmt\",\"\",\"\",0,{\"inputs\":[{\"name\":\"griderror\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"clone\",\"\",\"\",0,{\"inputs\":[{\"name\":\"griderror\"}],\"output\":{\"name\":\"griderror\"}}],[11,\"fmt\",\"\",\"\",0,{\"inputs\":[{\"name\":\"griderror\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"description\",\"\",\"\",0,{\"inputs\":[{\"name\":\"griderror\"}],\"output\":{\"name\":\"str\"}}],[11,\"cause\",\"\",\"\",0,{\"inputs\":[{\"name\":\"griderror\"}],\"output\":{\"name\":\"option\"}}],[11,\"from\",\"\",\"\",0,{\"inputs\":[{\"name\":\"griderror\"},{\"name\":\"gridsizeerror\"}],\"output\":{\"name\":\"self\"}}],[11,\"eq\",\"\",\"\",1,{\"inputs\":[{\"name\":\"gridparseerror\"},{\"name\":\"gridparseerror\"}],\"output\":{\"name\":\"bool\"}}],[11,\"ne\",\"\",\"\",1,{\"inputs\":[{\"name\":\"gridparseerror\"},{\"name\":\"gridparseerror\"}],\"output\":{\"name\":\"bool\"}}],[11,\"hash\",\"\",\"\",1,null],[11,\"fmt\",\"\",\"\",1,{\"inputs\":[{\"name\":\"gridparseerror\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"clone\",\"\",\"\",1,{\"inputs\":[{\"name\":\"gridparseerror\"}],\"output\":{\"name\":\"gridparseerror\"}}],[11,\"fmt\",\"\",\"\",1,{\"inputs\":[{\"name\":\"gridparseerror\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"description\",\"\",\"\",1,{\"inputs\":[{\"name\":\"gridparseerror\"}],\"output\":{\"name\":\"str\"}}],[11,\"cause\",\"\",\"\",1,{\"inputs\":[{\"name\":\"gridparseerror\"}],\"output\":{\"name\":\"option\"}}],[11,\"eq\",\"\",\"\",2,{\"inputs\":[{\"name\":\"gridsizeerror\"},{\"name\":\"gridsizeerror\"}],\"output\":{\"name\":\"bool\"}}],[11,\"ne\",\"\",\"\",2,{\"inputs\":[{\"name\":\"gridsizeerror\"},{\"name\":\"gridsizeerror\"}],\"output\":{\"name\":\"bool\"}}],[11,\"hash\",\"\",\"\",2,null],[11,\"fmt\",\"\",\"\",2,{\"inputs\":[{\"name\":\"gridsizeerror\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"clone\",\"\",\"\",2,{\"inputs\":[{\"name\":\"gridsizeerror\"}],\"output\":{\"name\":\"gridsizeerror\"}}],[11,\"fmt\",\"\",\"\",2,{\"inputs\":[{\"name\":\"gridsizeerror\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"description\",\"\",\"\",2,{\"inputs\":[{\"name\":\"gridsizeerror\"}],\"output\":{\"name\":\"str\"}}],[11,\"eq\",\"\",\"\",4,{\"inputs\":[{\"name\":\"grid\"},{\"name\":\"grid\"}],\"output\":{\"name\":\"bool\"}}],[11,\"ne\",\"\",\"\",4,{\"inputs\":[{\"name\":\"grid\"},{\"name\":\"grid\"}],\"output\":{\"name\":\"bool\"}}],[11,\"hash\",\"\",\"\",4,null],[11,\"fmt\",\"\",\"\",4,{\"inputs\":[{\"name\":\"grid\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"clone\",\"\",\"\",4,{\"inputs\":[{\"name\":\"grid\"}],\"output\":{\"name\":\"grid\"}}],[11,\"fmt\",\"\",\"\",4,{\"inputs\":[{\"name\":\"grid\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"from_str\",\"\",\"\",4,{\"inputs\":[{\"name\":\"grid\"},{\"name\":\"str\"}],\"output\":{\"name\":\"result\"}}],[11,\"index\",\"\",\"\",4,null],[11,\"index_mut\",\"\",\"\",4,null],[11,\"new\",\"\",\"Creates a `Grid` from a preexisting array.\",4,{\"inputs\":[{\"name\":\"grid\"},{\"name\":\"array\"}],\"output\":{\"name\":\"result\"}}],[11,\"size\",\"\",\"Returns the size of the grid.\",4,{\"inputs\":[{\"name\":\"grid\"}],\"output\":{\"name\":\"usize\"}}],[11,\"into_inner\",\"\",\"Consumes a `Grid` and returns the underlying array.\",4,{\"inputs\":[{\"name\":\"grid\"}],\"output\":{\"name\":\"array\"}}],[11,\"is_filled\",\"\",\"Returns `true` if the grid contains no empty cell.\",4,{\"inputs\":[{\"name\":\"grid\"}],\"output\":{\"name\":\"bool\"}}],[11,\"is_legal\",\"\",\"Verifies that the grid does not currently violate any of the rules.\\nReturns `true` if the grid is legal.\",4,{\"inputs\":[{\"name\":\"grid\"}],\"output\":{\"name\":\"bool\"}}],[11,\"is_cell_legal\",\"\",\"Verifies that a certain cell does not violate any of the rules.\\nReturns `true` if the value is legal.\",4,{\"inputs\":[{\"name\":\"grid\"},{\"name\":\"usize\"},{\"name\":\"usize\"}],\"output\":{\"name\":\"bool\"}}],[11,\"next_empty\",\"\",\"Returns the index of the first empty cell or None if the grid is filled.\",4,{\"inputs\":[{\"name\":\"grid\"}],\"output\":{\"name\":\"option\"}}],[11,\"apply_rules\",\"\",\"Skims through the grid once for each rule and fills in the blanks\\nwhere the value is unambiguous.\\nReturns `true` if the grid was modified.\",4,{\"inputs\":[{\"name\":\"grid\"}],\"output\":{\"name\":\"bool\"}}],[11,\"solve\",\"\",\"Solves the grid using both rules logic and a backtracking algorithm,\\nand returns an array containing the solution(s).\\nIf no solution exists, an empty array is returned.\",4,{\"inputs\":[{\"name\":\"grid\"}],\"output\":{\"name\":\"vec\"}}],[11,\"to_string_diff\",\"\",\"Suitable for terminals.\",4,{\"inputs\":[{\"name\":\"grid\"},{\"name\":\"grid\"}],\"output\":{\"name\":\"string\"}}],[11,\"fmt\",\"\",\"\",3,{\"inputs\":[{\"name\":\"sourceerror\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"fmt\",\"\",\"\",3,{\"inputs\":[{\"name\":\"sourceerror\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"description\",\"\",\"\",3,{\"inputs\":[{\"name\":\"sourceerror\"}],\"output\":{\"name\":\"str\"}}],[11,\"cause\",\"\",\"\",3,{\"inputs\":[{\"name\":\"sourceerror\"}],\"output\":{\"name\":\"option\"}}],[11,\"from\",\"\",\"\",3,{\"inputs\":[{\"name\":\"sourceerror\"},{\"name\":\"ioerror\"}],\"output\":{\"name\":\"self\"}}],[11,\"from\",\"\",\"\",3,{\"inputs\":[{\"name\":\"sourceerror\"},{\"name\":\"gridparseerror\"}],\"output\":{\"name\":\"self\"}}],[6,\"Array\",\"\",\"A raw takuzu grid representation.\",null,null],[8,\"Source\",\"\",\"The `Source` trait allows to use any implementor of the `Read` trait\\nas an input source for the grid string format with no additional effort.\",null,null],[11,\"source\",\"\",\"Creates a `Grid` from a readable source.\\nReads from the source until EOF, parses the data as a string,\\nthen checks the array for size and legality and converts it to a `Grid`\",5,{\"inputs\":[{\"name\":\"source\"}],\"output\":{\"name\":\"result\"}}],[11,\"source\",\"\",\"Creates a `Grid` from a readable source.\\nReads from the source until EOF, parses the data as a string,\\nthen checks the array for size and legality and converts it to a `Grid`\",5,{\"inputs\":[{\"name\":\"source\"}],\"output\":{\"name\":\"result\"}}]],\"paths\":[[4,\"GridError\"],[4,\"GridParseError\"],[4,\"GridSizeError\"],[4,\"SourceError\"],[3,\"Grid\"],[8,\"Source\"]]};\n3a3\n> searchIndex['takuzu'] = {\"items\":[[0,\"\",\"takuzu\",\"A Takuzu (a.k.a. Binairo) solving library.\",null,null],[3,\"Grid\",\"\",\"A container for takuzu grid manipulation.\",null,null],[4,\"GridError\",\"\",\"An error returned when checking if the grid is well-sized and legal.\",null,null],[13,\"BadSize\",\"\",\"The grid does not have the right size.\",0,null],[13,\"Illegal\",\"\",\"The grid is illegal, that is it infringes at least one of the rules.\",0,null],[4,\"GridParseError\",\"\",\"An error returned when parsing a string to create a grid failed.\",null,null],[13,\"CreationError\",\"\",\"A `Grid` cannot be created from this `Array`.\",1,null],[13,\"UnexpectedCharacter\",\"\",\"At least one character other than `0`, `1`, `.` or '\\\\n'\\nwas found in the string.\",1,null],[4,\"GridSizeError\",\"\",\"An error returned when the grid is not properly sized.\",null,null],[13,\"Empty\",\"\",\"The grid is empty.\",2,null],[13,\"NotASquare\",\"\",\"The grid is not a square.\\nThe field contains the line number that triggered the error.\",2,null],[13,\"OddRowNumber\",\"\",\"The grid has an odd number of rows.\",2,null],[4,\"SourceError\",\"\",\"An error returned by the `source` method when either reading or parsing failed.\",null,null],[13,\"IO\",\"\",\"Reading from the source failed.\",3,null],[13,\"Parsing\",\"\",\"Parsing failed.\",3,null],[11,\"eq\",\"\",\"\",0,{\"inputs\":[{\"name\":\"griderror\"},{\"name\":\"griderror\"}],\"output\":{\"name\":\"bool\"}}],[11,\"ne\",\"\",\"\",0,{\"inputs\":[{\"name\":\"griderror\"},{\"name\":\"griderror\"}],\"output\":{\"name\":\"bool\"}}],[11,\"hash\",\"\",\"\",0,null],[11,\"fmt\",\"\",\"\",0,{\"inputs\":[{\"name\":\"griderror\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"clone\",\"\",\"\",0,{\"inputs\":[{\"name\":\"griderror\"}],\"output\":{\"name\":\"griderror\"}}],[11,\"fmt\",\"\",\"\",0,{\"inputs\":[{\"name\":\"griderror\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"description\",\"\",\"\",0,{\"inputs\":[{\"name\":\"griderror\"}],\"output\":{\"name\":\"str\"}}],[11,\"cause\",\"\",\"\",0,{\"inputs\":[{\"name\":\"griderror\"}],\"output\":{\"name\":\"option\"}}],[11,\"from\",\"\",\"\",0,{\"inputs\":[{\"name\":\"griderror\"},{\"name\":\"gridsizeerror\"}],\"output\":{\"name\":\"self\"}}],[11,\"eq\",\"\",\"\",1,{\"inputs\":[{\"name\":\"gridparseerror\"},{\"name\":\"gridparseerror\"}],\"output\":{\"name\":\"bool\"}}],[11,\"ne\",\"\",\"\",1,{\"inputs\":[{\"name\":\"gridparseerror\"},{\"name\":\"gridparseerror\"}],\"output\":{\"name\":\"bool\"}}],[11,\"hash\",\"\",\"\",1,null],[11,\"fmt\",\"\",\"\",1,{\"inputs\":[{\"name\":\"gridparseerror\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"clone\",\"\",\"\",1,{\"inputs\":[{\"name\":\"gridparseerror\"}],\"output\":{\"name\":\"gridparseerror\"}}],[11,\"fmt\",\"\",\"\",1,{\"inputs\":[{\"name\":\"gridparseerror\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"description\",\"\",\"\",1,{\"inputs\":[{\"name\":\"gridparseerror\"}],\"output\":{\"name\":\"str\"}}],[11,\"cause\",\"\",\"\",1,{\"inputs\":[{\"name\":\"gridparseerror\"}],\"output\":{\"name\":\"option\"}}],[11,\"eq\",\"\",\"\",2,{\"inputs\":[{\"name\":\"gridsizeerror\"},{\"name\":\"gridsizeerror\"}],\"output\":{\"name\":\"bool\"}}],[11,\"ne\",\"\",\"\",2,{\"inputs\":[{\"name\":\"gridsizeerror\"},{\"name\":\"gridsizeerror\"}],\"output\":{\"name\":\"bool\"}}],[11,\"hash\",\"\",\"\",2,null],[11,\"fmt\",\"\",\"\",2,{\"inputs\":[{\"name\":\"gridsizeerror\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"clone\",\"\",\"\",2,{\"inputs\":[{\"name\":\"gridsizeerror\"}],\"output\":{\"name\":\"gridsizeerror\"}}],[11,\"fmt\",\"\",\"\",2,{\"inputs\":[{\"name\":\"gridsizeerror\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"description\",\"\",\"\",2,{\"inputs\":[{\"name\":\"gridsizeerror\"}],\"output\":{\"name\":\"str\"}}],[11,\"eq\",\"\",\"\",4,{\"inputs\":[{\"name\":\"grid\"},{\"name\":\"grid\"}],\"output\":{\"name\":\"bool\"}}],[11,\"ne\",\"\",\"\",4,{\"inputs\":[{\"name\":\"grid\"},{\"name\":\"grid\"}],\"output\":{\"name\":\"bool\"}}],[11,\"hash\",\"\",\"\",4,null],[11,\"fmt\",\"\",\"\",4,{\"inputs\":[{\"name\":\"grid\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"clone\",\"\",\"\",4,{\"inputs\":[{\"name\":\"grid\"}],\"output\":{\"name\":\"grid\"}}],[11,\"fmt\",\"\",\"\",4,{\"inputs\":[{\"name\":\"grid\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"from_str\",\"\",\"\",4,{\"inputs\":[{\"name\":\"grid\"},{\"name\":\"str\"}],\"output\":{\"name\":\"result\"}}],[11,\"index\",\"\",\"\",4,null],[11,\"index_mut\",\"\",\"\",4,null],[11,\"new\",\"\",\"Creates a `Grid` from a preexisting array.\",4,{\"inputs\":[{\"name\":\"grid\"},{\"name\":\"array\"}],\"output\":{\"name\":\"result\"}}],[11,\"size\",\"\",\"Returns the size of the grid.\",4,{\"inputs\":[{\"name\":\"grid\"}],\"output\":{\"name\":\"usize\"}}],[11,\"into_inner\",\"\",\"Consumes a `Grid` and returns the underlying array.\",4,{\"inputs\":[{\"name\":\"grid\"}],\"output\":{\"name\":\"array\"}}],[11,\"is_filled\",\"\",\"Returns `true` if the grid contains no empty cell.\",4,{\"inputs\":[{\"name\":\"grid\"}],\"output\":{\"name\":\"bool\"}}],[11,\"is_legal\",\"\",\"Verifies that the grid does not currently violate any of the rules.\\nReturns `true` if the grid is legal.\",4,{\"inputs\":[{\"name\":\"grid\"}],\"output\":{\"name\":\"bool\"}}],[11,\"is_cell_legal\",\"\",\"Verifies that a certain cell does not violate any of the rules.\\nReturns `true` if the value is legal.\",4,{\"inputs\":[{\"name\":\"grid\"},{\"name\":\"usize\"},{\"name\":\"usize\"}],\"output\":{\"name\":\"bool\"}}],[11,\"next_empty\",\"\",\"Returns the index of the first empty cell or None if the grid is filled.\",4,{\"inputs\":[{\"name\":\"grid\"}],\"output\":{\"name\":\"option\"}}],[11,\"apply_rules\",\"\",\"Skims through the grid once for each rule and fills in the blanks\\nwhere the value is unambiguous.\\nReturns `true` if the grid was modified.\",4,{\"inputs\":[{\"name\":\"grid\"}],\"output\":{\"name\":\"bool\"}}],[11,\"solve\",\"\",\"Solves the grid using both rules logic and a backtracking algorithm,\\nand returns an array containing the solution(s).\\nIf no solution exists, an empty array is returned.\",4,{\"inputs\":[{\"name\":\"grid\"}],\"output\":{\"name\":\"vec\"}}],[11,\"to_string_diff\",\"\",\"Suitable for terminals.\",4,{\"inputs\":[{\"name\":\"grid\"},{\"name\":\"grid\"}],\"output\":{\"name\":\"string\"}}],[11,\"fmt\",\"\",\"\",3,{\"inputs\":[{\"name\":\"sourceerror\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"fmt\",\"\",\"\",3,{\"inputs\":[{\"name\":\"sourceerror\"},{\"name\":\"formatter\"}],\"output\":{\"name\":\"result\"}}],[11,\"description\",\"\",\"\",3,{\"inputs\":[{\"name\":\"sourceerror\"}],\"output\":{\"name\":\"str\"}}],[11,\"cause\",\"\",\"\",3,{\"inputs\":[{\"name\":\"sourceerror\"}],\"output\":{\"name\":\"option\"}}],[11,\"from\",\"\",\"\",3,{\"inputs\":[{\"name\":\"sourceerror\"},{\"name\":\"ioerror\"}],\"output\":{\"name\":\"self\"}}],[11,\"from\",\"\",\"\",3,{\"inputs\":[{\"name\":\"sourceerror\"},{\"name\":\"gridparseerror\"}],\"output\":{\"name\":\"self\"}}],[6,\"Array\",\"\",\"A raw takuzu grid representation.\",null,null],[8,\"Source\",\"\",\"The `Source` trait allows to use any implementor of the `Read` trait\\nas an input source for the grid string format with no additional effort.\",null,null],[11,\"source\",\"\",\"Creates a `Grid` from a readable source.\\nReads from the source until EOF, parses the data as a string,\\nthen checks the array for size and legality and converts it to a `Grid`\",5,{\"inputs\":[{\"name\":\"source\"}],\"output\":{\"name\":\"result\"}}],[11,\"source\",\"\",\"Creates a `Grid` from a readable source.\\nReads from the source until EOF, parses the data as a string,\\nthen checks the array for size and legality and converts it to a `Grid`\",5,{\"inputs\":[{\"name\":\"source\"}],\"output\":{\"name\":\"result\"}}]],\"paths\":[[4,\"GridError\"],[4,\"GridParseError\"],[4,\"GridSizeError\"],[4,\"SourceError\"],[3,\"Grid\"],[8,\"Source\"]]};\n```\n- in `fn.solve_from.html` (which is a public function in the [[bin]] crate): the trait bound on the parametric type does not link over to its own documentation in the [lib] crate any more:\n\n``` diff\ndiff -r tdoc/tackle/fn.solve_from.html target/doc/tackle/fn.solve_from.html\n49c49\n< <pre class='rust fn'>pub fn solve_from&lt;T: Source + ?<a class='trait' href='https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a>&gt;(source: &amp;mut T)</pre><div class='docblock'><p>Reads a grid from a source, triggers the solving algorithm\n\n---\n> <pre class='rust fn'>pub fn solve_from&lt;T: <a class='trait' href='../takuzu/source/trait.Source.html' title='takuzu::source::Source'>Source</a> + ?<a class='trait' href='https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a>&gt;(source: &amp;mut T)</pre><div class='docblock'><p>Reads a grid from a source, triggers the solving algorithm\n```\n\nThe first point is not that big of a problem but the second one is clearly a bug.\n\nAs suggested by @alexcrichton, using the `--jobs 1` flag on both `cargo doc` and `cargo build/test` solves the problem by making the process deterministic, at the expense of compile/docgen time obviously.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/30220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/30220/timeline", "performed_via_github_app": null, "state_reason": null}