{"url": "https://api.github.com/repos/rust-lang/rust/issues/62013", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62013/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62013/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62013/events", "html_url": "https://github.com/rust-lang/rust/issues/62013", "id": 458970561, "node_id": "MDU6SXNzdWU0NTg5NzA1NjE=", "number": 62013, "title": "if/while Some(n) = &mut foo sugar will leak a temporary mutable borrow to current scope in particular situation", "user": {"login": "CGQAQ", "id": 15936231, "node_id": "MDQ6VXNlcjE1OTM2MjMx", "avatar_url": "https://avatars.githubusercontent.com/u/15936231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CGQAQ", "html_url": "https://github.com/CGQAQ", "followers_url": "https://api.github.com/users/CGQAQ/followers", "following_url": "https://api.github.com/users/CGQAQ/following{/other_user}", "gists_url": "https://api.github.com/users/CGQAQ/gists{/gist_id}", "starred_url": "https://api.github.com/users/CGQAQ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CGQAQ/subscriptions", "organizations_url": "https://api.github.com/users/CGQAQ/orgs", "repos_url": "https://api.github.com/users/CGQAQ/repos", "events_url": "https://api.github.com/users/CGQAQ/events{/privacy}", "received_events_url": "https://api.github.com/users/CGQAQ/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2019-06-21T01:59:15Z", "updated_at": "2021-10-18T06:31:58Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "[Same Code in the Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=b8592ca63a5f3b37a838cf65f3e665be)\r\n```rust \r\npub struct Demo {\r\n    foo: Option<Box<Demo>>,\r\n}\r\n\r\n// Compiles\r\npub fn foo1(mut a: &mut Demo) {\r\n    if let Some(ref mut b) = a.foo {\r\n        a = b;\r\n    }\r\n    a.foo = None;\r\n}\r\n\r\n// Does not compile\r\npub fn foo2(mut a: &mut Demo) {\r\n    if let Some(b) = &mut a.foo {\r\n        a = b;\r\n    }\r\n    a.foo = None;\r\n}\r\n\r\n// Same Error with foo2\r\npub fn foo3(mut a: &mut Demo) {\r\n    if let Some(ref mut b) = &mut a.foo {\r\n        a = b;\r\n    }\r\n    a.foo = None;\r\n}\r\n```\r\n\r\nWhat is exactly difference between foo1 and foo2\r\n\r\n>ADD: I think foo1 will desuger something like this:\r\n```rust\r\npub fn foo1_desugered(mut a: &mut Demo) {\r\n    match a.foo {\r\n        Some(ref mut _1) => a = _1 ,\r\n        None => ()\r\n    }\r\n    a.foo = None;\r\n}\r\n```\r\nand foo2 will be like: \r\n```rust\r\npub fn foo2_desugered(mut a: &mut Demo) {\r\n    let mut _t1 = &mut a.foo;\r\n    match _t1 {\r\n        Some(_1) => a = _1 ,\r\n        None => ()\r\n    }\r\n    a.foo = None;\r\n}\r\n```\r\n>ADD#2 And if I explicit add a scope: \r\n```rust\r\n// Does not compile\r\npub fn foo2(mut a: &mut Demo) {\r\n    {\r\n        if let Some(b) = &mut a.foo {\r\n            a = b;\r\n        }\r\n    }\r\n    a.foo = None;\r\n}\r\n\r\npub fn foo2_desugered(mut a: &mut Demo) {\r\n    {\r\n        let mut _t1 = &mut a.foo;\r\n        match _t1 {\r\n            Some(_1) => a = _1 ,\r\n            None => ()\r\n        }\r\n    }\r\n    a.foo = None;\r\n}\r\n```\r\nsame error :(", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62013/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62013/timeline", "performed_via_github_app": null, "state_reason": null}