{"url": "https://api.github.com/repos/rust-lang/rust/issues/30810", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/30810/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/30810/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/30810/events", "html_url": "https://github.com/rust-lang/rust/issues/30810", "id": 125827620, "node_id": "MDU6SXNzdWUxMjU4Mjc2MjA=", "number": 30810, "title": "Incomplete Documentation regarding ToString trait", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-01-10T15:55:59Z", "updated_at": "2016-01-10T17:02:57Z", "closed_at": "2016-01-10T16:04:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was just wondering, as I was looking through the Rust book I saw a function called `to_string()` associated to an error type (in this specific case `ParseIntError`) which is, however, not documented in the API.\n\n``` rust\nuse std::env;\n\nfn double_arg(mut argv: env::Args) -> Result<i32, String> {\n    argv.nth(1)\n        .ok_or(\"Please give at least one argument\".to_owned())\n        .and_then(|arg| arg.parse::<i32>().map_err(|err| err.to_string()))\n}\n\nfn main() {\n    match double_arg(env::args()) {\n        Ok(n) => println!(\"{}\", n),\n        Err(err) => println!(\"Error: {}\", err),\n    }\n}\n```\n\nI found the code here: https://doc.rust-lang.org/book/error-handling.html#composing-option-and-result\n\nI looked through the documentation and neither `std::Err` nor `ParseIntError` have `to_string` listed as one of their methods. `ParseIntError`'s documentation also not states implementing the `collections::string::ToString` trait. Have I overlooked something or is the documentation actually inaccurate?\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/30810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/30810/timeline", "performed_via_github_app": null, "state_reason": "completed"}