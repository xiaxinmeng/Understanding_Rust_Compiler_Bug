{"url": "https://api.github.com/repos/rust-lang/rust/issues/42065", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42065/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42065/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42065/events", "html_url": "https://github.com/rust-lang/rust/issues/42065", "id": 229469039, "node_id": "MDU6SXNzdWUyMjk0NjkwMzk=", "number": 42065, "title": "closure errors should explain **why** a closure is `FnOnce` etc", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-17T19:55:30Z", "updated_at": "2017-05-31T23:53:18Z", "closed_at": "2017-05-31T23:53:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In #41772 we were discussing improving [how we could improve closure error messages by identifying an upvar that forced the closure to be `FnOnce`](https://github.com/rust-lang/rust/pull/41772#discussion_r115312082); this may apply to other messages too. \r\n\r\nThe idea is that the `src/test/ui/fn_once-moved.rs` test (shown below):\r\n\r\n```rust\r\nuse std::collections::HashMap;\r\n\r\nfn main() {\r\n    let dict: HashMap<i32, i32> = HashMap::new();\r\n    let debug_dump_dict = || {\r\n        for (key, value) in dict {\r\n            println!(\"{:?} - {:?}\", key, value);\r\n        }\r\n    };\r\n    debug_dump_dict();\r\n    debug_dump_dict();\r\n}\r\n```\r\n\r\nought to give an error like:\r\n\r\n```\r\nerror[E0382]: use of moved value: `debug_dump_dict`\r\n  --> $DIR/fn_once-moved.rs:21:5\r\n   |\r\n16 |         for (key, value) in dict {\r\n   |                             ^^^^ dict moved here\r\n20 |     debug_dump_dict();\r\n   |     --------------- value moved here\r\n21 |     debug_dump_dict();\r\n   |     ^^^^^^^^^^^^^^^ value used here after move\r\n   |\r\n   = help: closure cannot be invoked twice because it moves the variable dict out of its environment\r\n```\r\n\r\nThe compiler will, however, require some refactoring to track this information.\r\n\r\n### Rough mentoring instructions\r\n\r\nThe part of the code you have to look at a bit is in librustc_typeck/check/upvar.rs. This code basically walks the AST and observes what happens, gradually \"bumping up\" the closure-kind to be something more specific based on what it observes. Ultimately, these bumps occur by calls to adjust_closure_kind(). Right now, that method takes zero context as to why the bump occurred.\r\n\r\nWe would want to extend it with a span, I think. Then we could extend the temp_closure_kinds table to carry not only the closure kind but also the span that caused us to change it (and maybe a bit more info). We'd have to trace back to the callers to encode this span.\r\n\r\nWe'll also have to change the closure_kinds field of TypeckTables so that it maps not only to a ClosureKind but also the Span (and whatever else) that we are tracing through. This is a bit of a shame, since this info is only relevant in the local crate; I'm wondering then if we want to consider storing the span in some other place. But TypeckTables is realy going to be the most convenient place, so I think that's ultimately where I'd put it.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42065/timeline", "performed_via_github_app": null, "state_reason": "completed"}