{"url": "https://api.github.com/repos/rust-lang/rust/issues/63618", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63618/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63618/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63618/events", "html_url": "https://github.com/rust-lang/rust/issues/63618", "id": 481364947, "node_id": "MDU6SXNzdWU0ODEzNjQ5NDc=", "number": 63618, "title": "object lifetime bound defaults in trait bindings are incompletely implemented", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-15T22:27:52Z", "updated_at": "2020-05-04T20:12:28Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In https://github.com/rust-lang/rust/pull/63376, we fixed the behavior of default object lifetime bounds in \"binding arguments\", as described in [this gist](https://gist.github.com/nikomatsakis/e0ac0276744d10b952cf4ea3d3d8a814). For example the following type;\r\n\r\n```rust\r\ndyn Foo<Bar = dyn Baz>\r\n```\r\n\r\nwill now default `dyn Baz` to `dyn Baz + 'static`.\r\n\r\nHowever, the rules were incompletely implemented. If the trait has a lifetime parameter, we currently require an explicit lifetime bound. The expected behavior is to use the bounds declared on the associated type to set the default. So, given `Foo` like so:\r\n\r\n```rust\r\ntrait Foo<'a> {\r\n  type Bar: 'a + ?Sized;\r\n}\r\n```\r\n\r\nthen `dyn Foo<'x, Bar = dyn Baz>` would default to `dyn Baz + 'a`. Presently, however, it gives an error.\r\n\r\nNB. There is one \"design decision\" to be made; does a where clause like `where Self::Bar: 'x` adjust the default? And how does that work when extended to GATs? My personal opinion is that we should limit ourselves to bounds declared on the associated type itself (and hence `where Self::Bar: 'x` would not count towards the default object lifetime bound), but this merits a bit of further discussion. This is largely because the complexity to specify and implement the behavior around where clauses and with GATs is kind feels out of proportion with the benefit.\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63618/timeline", "performed_via_github_app": null, "state_reason": null}