{"url": "https://api.github.com/repos/rust-lang/rust/issues/99250", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99250/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99250/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99250/events", "html_url": "https://github.com/rust-lang/rust/issues/99250", "id": 1305039637, "node_id": "I_kwDOAAsO6M5NyVMV", "number": 99250, "title": "Unintuitive error when recursing with generic Fn closure borrow", "user": {"login": "rob9315", "id": 20371518, "node_id": "MDQ6VXNlcjIwMzcxNTE4", "avatar_url": "https://avatars.githubusercontent.com/u/20371518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rob9315", "html_url": "https://github.com/rob9315", "followers_url": "https://api.github.com/users/rob9315/followers", "following_url": "https://api.github.com/users/rob9315/following{/other_user}", "gists_url": "https://api.github.com/users/rob9315/gists{/gist_id}", "starred_url": "https://api.github.com/users/rob9315/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rob9315/subscriptions", "organizations_url": "https://api.github.com/users/rob9315/orgs", "repos_url": "https://api.github.com/users/rob9315/repos", "events_url": "https://api.github.com/users/rob9315/events{/privacy}", "received_events_url": "https://api.github.com/users/rob9315/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-07-14T16:44:35Z", "updated_at": "2022-12-27T16:35:54Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\ni understand why this error happens, it might just be nice to have some sort of system to detect\r\nwhen this kind of recursion is happening and try to prevent it or at least hint at what the error\r\ncould be better.\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=1974b5d37cb10e1214937db3c0e779dc\r\n\r\nThe current output is:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror: reached the recursion limit while instantiating `<iter::adapters::GenericShunt<Ma...terator>::collect::<Vec<String>>`\r\n     |\r\nnote: `collect` defined here\r\n     = note: the full type name has been written to '/playground/target/debug/deps/playground-f30fbb6d88a6f004.long-type.txt'\r\n\r\nerror: could not compile `playground` due to previous error\r\n```\r\n`/playground/target/debug/deps/playground-f30fbb6d88a6f004.long-type.txt`:\r\n`<iter::adapters::GenericShunt<Map<std::vec::IntoIter<String>, &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&[closure@error/src/main.rs:9:41: 14:6]>, Result<Infallible, ()>> as Iterator>::collect::<Vec<String>>`\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\n\r\n```\r\n |\r\n |    .map(|input| weird_recursive(input, &f))\r\n |                                        ^^\r\n = note: borrow of generic argument in loop when recursing,\r\n = note: consider changing your function signature\r\n```\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99250/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99250/timeline", "performed_via_github_app": null, "state_reason": null}