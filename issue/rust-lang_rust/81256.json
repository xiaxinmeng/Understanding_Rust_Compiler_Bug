{"url": "https://api.github.com/repos/rust-lang/rust/issues/81256", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81256/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81256/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81256/events", "html_url": "https://github.com/rust-lang/rust/issues/81256", "id": 791641945, "node_id": "MDU6SXNzdWU3OTE2NDE5NDU=", "number": 81256, "title": "interrupted by signal 4: SIGILL", "user": {"login": "742362144", "id": 22267033, "node_id": "MDQ6VXNlcjIyMjY3MDMz", "avatar_url": "https://avatars.githubusercontent.com/u/22267033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/742362144", "html_url": "https://github.com/742362144", "followers_url": "https://api.github.com/users/742362144/followers", "following_url": "https://api.github.com/users/742362144/following{/other_user}", "gists_url": "https://api.github.com/users/742362144/gists{/gist_id}", "starred_url": "https://api.github.com/users/742362144/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/742362144/subscriptions", "organizations_url": "https://api.github.com/users/742362144/orgs", "repos_url": "https://api.github.com/users/742362144/repos", "events_url": "https://api.github.com/users/742362144/events{/privacy}", "received_events_url": "https://api.github.com/users/742362144/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-01-22T02:19:59Z", "updated_at": "2021-01-22T11:53:50Z", "closed_at": "2021-01-22T11:53:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "i try to use generator_trait and build rust project as dylib,like this:\r\nlib.rs\r\n```rust\r\n#![crate_type = \"dylib\"]\r\n#![forbid(unsafe_code)]\r\n#![feature(generators, generator_trait)]\r\n// #![allow(bare_trait_objects)]\r\nextern crate redis;\r\n\r\nuse std::ops::Generator;\r\nuse std::pin::Pin;\r\n\r\n// use mylib::print_hello;\r\n\r\n// use bytes::{Bytes, BytesMut, BufMut, Buf};\r\n\r\n// use redis_module::{ThreadSafeContext, DetachedFromClient};\r\nuse std::sync::{Arc, Mutex};\r\nuse std::sync::mpsc::{Sender, Receiver};\r\nuse runtime::policy::Policy;\r\nuse std::thread;\r\nuse std::time::Duration;\r\n// use redismodule::executor::Policy;\r\n// use log::{info, trace, warn};\r\n\r\n\r\n#[no_mangle]\r\n#[allow(unreachable_code)]\r\n#[allow(unused_assignments)]\r\npub fn init(policy: Arc<Mutex<String>>) -> Pin<Box<Generator<Yield=u64, Return=u64> + 'static>> {\r\n// pub fn init() -> Pin<Box<Generator<Yield=u64, Return=u64> + 'static>> {\r\n//     print_hello();\r\n//     println!(\"{}\", \"enter\");\r\n    // let ctx = tctx.clone();\r\n    // let tx = ctx.lock();\r\n\r\n    // println!(\"{}\", \"gen init\");\r\n    // let mut p = policy.clone();\r\n    Box::pin(move || {\r\n        let i:u64 = 1;\r\n        // p.lock().unwrap().set(\"A\", \"111\");\r\n        // println!(\"{}\", \"compute step 1 running\");\r\n        thread::sleep(Duration::from_millis(1000));\r\n        // tx.call(\"SET\", &[\"A\", \"1\"]).unwrap();\r\n        yield i;\r\n        // tx.call(\"SET\", &[\"B\", \"2\"]).unwrap();\r\n        // println!(\"{}\", \"compute step 2 running\");\r\n        thread::sleep(Duration::from_millis(1000));\r\n        yield i;\r\n        // tx.call(\"SET\", &[\"B\", \"2\"]).unwrap();\r\n        // println!(\"{}\", \"compute step 3 running\");\r\n        thread::sleep(Duration::from_millis(1000));\r\n        yield i;\r\n        // tx.call(\"SET\", &[\"B\", \"2\"]).unwrap();\r\n        // println!(\"{}\", \"compute step 4 running\");\r\n        thread::sleep(Duration::from_millis(1000));\r\n        yield i;\r\n        // tx.call(\"SET\", &[\"B\", \"2\"]).unwrap();\r\n        // println!(\"{}\", \"compute step 5 running\");\r\n        thread::sleep(Duration::from_millis(1000));\r\n        1111\r\n    })\r\n}\r\n```\r\n\r\n\r\nmain.rs\r\n\r\n```rust\r\n#![feature(generators)]\r\n#![feature(generator_trait)]\r\nuse std::ops::{GeneratorState, Generator};\r\nuse std::pin::Pin;\r\nuse libloading::os::unix::{Library, Symbol};\r\nuse runtime::policy::Policy;\r\nuse std::sync::{Mutex, Arc};\r\n\r\n\r\nfn main() {\r\n    type Proc = unsafe extern \"C\" fn(Arc<Mutex<String>>) -> Pin<Box<Generator<Yield=u64, Return=u64>>>;\r\n    let library_path = String::from(\"/home/coder/IdeaProjects/add/target/debug/libadd.so\");\r\n    println!(\"Loading add() from {}\", library_path);\r\n\r\n    let lib = Library::new(library_path).unwrap();\r\n\r\n\r\n    println!(\"{}\", \"1\");\r\n    unsafe {\r\n        println!(\"{}\", \"2\");\r\n        let func: Symbol<Proc> = lib.get(b\"init\").unwrap();\r\n        println!(\"{}\", \"3\");\r\n        let mut generator = func(Arc::new(Mutex::new(String::from(\"hello\"))));\r\n        println!(\"{}\", \"4\");\r\n\r\n        // println!(\"1\");\r\n        // Pin::new(&mut generator).resume(());\r\n        // println!(\"3\");\r\n        // let Some(GeneratorState<res1, res2>) = Pin::new(&mut generator).resume(());\r\n        // println!(\"5\");\r\n\r\n        // db.set(String::from(\"c\"), Bytes::from(\"dadada\"), None);\r\n        match generator.as_mut().resume(()) {\r\n            GeneratorState::Yielded(1) => println!(\"Yielded\"),\r\n            _ => panic!(\"unexpected return from resume\"),\r\n        }\r\n        match generator.as_mut().resume(()) {\r\n            GeneratorState::Complete(1111) => println!(\"Completed\"),\r\n            _ => panic!(\"unexpected return from resume\"),\r\n        }\r\n    }\r\n    assert!(1 != 2, \"true\");\r\n}\r\n```\r\n\r\nwhen i try to load dylib use libloading crate, error occur\uff1a\r\n\r\nthread panicked while processing panic. aborting.\r\n\r\nProcess finished with exit code 132 (interrupted by signal 4: SIGILL)\r\n\r\n\r\n-----------------gdb-------------------------------\r\n(gdb) run\r\nStarting program: /home/coder/IdeaProjects/add/target/debug/main \r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\nthread panicked while processing panic. aborting.\r\n\r\nProgram received signal SIGILL, Illegal instruction.\r\n0x0000555555581f42 in std::panicking::rust_panic_with_hook () at /rustc/bc39d4d9c514e5fdb40a5782e6ca08924f979c35/library/core/src/fmt/mod.rs:314\r\n314     /rustc/bc39d4d9c514e5fdb40a5782e6ca08924f979c35/library/core/src/fmt/mod.rs: No such file or directory.\r\n\r\n--------------------rust version------------------\r\nDefault host: x86_64-unknown-linux-gnu\r\nrustup home:  /home/coder/.rustup\r\n\r\ninstalled toolchains\r\n--------------------\r\n\r\nstable-x86_64-unknown-linux-gnu\r\nnightly-x86_64-unknown-linux-gnu (default)\r\n\r\nactive toolchain\r\n----------------\r\n\r\nnightly-x86_64-unknown-linux-gnu (default)\r\nrustc 1.51.0-nightly (bc39d4d9c 2021-01-15)\r\n\r\n\r\nwhat happened? i try to use other rust version, error still have.\r\n plz help me, very thanks.", "closed_by": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81256/timeline", "performed_via_github_app": null, "state_reason": "completed"}