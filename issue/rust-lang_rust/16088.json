{"url": "https://api.github.com/repos/rust-lang/rust/issues/16088", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16088/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16088/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16088/events", "html_url": "https://github.com/rust-lang/rust/issues/16088", "id": 39044259, "node_id": "MDU6SXNzdWUzOTA0NDI1OQ==", "number": 16088, "title": "Option to have silent failure", "user": {"login": "SiegeLord", "id": 480550, "node_id": "MDQ6VXNlcjQ4MDU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/480550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SiegeLord", "html_url": "https://github.com/SiegeLord", "followers_url": "https://api.github.com/users/SiegeLord/followers", "following_url": "https://api.github.com/users/SiegeLord/following{/other_user}", "gists_url": "https://api.github.com/users/SiegeLord/gists{/gist_id}", "starred_url": "https://api.github.com/users/SiegeLord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SiegeLord/subscriptions", "organizations_url": "https://api.github.com/users/SiegeLord/orgs", "repos_url": "https://api.github.com/users/SiegeLord/repos", "events_url": "https://api.github.com/users/SiegeLord/events{/privacy}", "received_events_url": "https://api.github.com/users/SiegeLord/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-07-29T22:47:37Z", "updated_at": "2014-08-01T12:04:28Z", "closed_at": "2014-08-01T12:04:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As far as I can tell, any call to `fail!()` prints a diagnostic message to stderr. This is less than ideal for processes which would like to have tight control over the contents of stderr. There should be some task-local option to enable silent failure. Some possible ways this option might be implemented:\n1. Having an option for this in the TaskBuilder.\n2. Having a function to set it direction in the calling task. This is more convenient, but you might worry about a rogue library turning it on after you turned it off.\n3. Instead of disabling it, perhaps have an option to set a special failure writer instead of stderr.\n\nIn particular, I think that `task::try()` should fail silently as in principle the failure message is returned by that function.\n", "closed_by": {"login": "SiegeLord", "id": 480550, "node_id": "MDQ6VXNlcjQ4MDU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/480550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SiegeLord", "html_url": "https://github.com/SiegeLord", "followers_url": "https://api.github.com/users/SiegeLord/followers", "following_url": "https://api.github.com/users/SiegeLord/following{/other_user}", "gists_url": "https://api.github.com/users/SiegeLord/gists{/gist_id}", "starred_url": "https://api.github.com/users/SiegeLord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SiegeLord/subscriptions", "organizations_url": "https://api.github.com/users/SiegeLord/orgs", "repos_url": "https://api.github.com/users/SiegeLord/repos", "events_url": "https://api.github.com/users/SiegeLord/events{/privacy}", "received_events_url": "https://api.github.com/users/SiegeLord/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16088/timeline", "performed_via_github_app": null, "state_reason": "completed"}