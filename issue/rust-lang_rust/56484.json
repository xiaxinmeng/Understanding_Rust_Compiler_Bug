{"url": "https://api.github.com/repos/rust-lang/rust/issues/56484", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56484/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56484/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56484/events", "html_url": "https://github.com/rust-lang/rust/issues/56484", "id": 387043585, "node_id": "MDU6SXNzdWUzODcwNDM1ODU=", "number": 56484, "title": "`order_dependent_trait_impls` future compatibility lint", "user": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 630636017, "node_id": "MDU6TGFiZWw2MzA2MzYwMTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-future-compatibility", "name": "C-future-compatibility", "color": "f5f1fd", "default": false, "description": "Category: future compatibility lints"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-03T22:58:54Z", "updated_at": "2020-02-08T01:23:21Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is the **summary issue** for the `order_dependent_trait_impls`\r\nfuture-compatibility warning and other related errors. The goal of\r\nthis page is describe why this change was made and how you can fix\r\ncode that is affected by it. It also provides a place to ask questions\r\nor register a complaint if you feel the change should not be made. For\r\nmore information on the policy around future-compatibility warnings,\r\nsee our [breaking change policy guidelines][guidelines].\r\n\r\n[guidelines]: https://github.com/rust-lang/rfcs/blob/master/text/1122-language-semver.md\r\n\r\n#### What is the warning for?\r\n\r\nAs in issue #33140, rustc sometimes treats \"seemingly-identical\" trait object types as different. For example, `Send + Sync` and `Sync + Send` are treated as different types.\r\n\r\nThis occurs because the first trait in a trait object is treated specially in the compiler, which means that `Send + Sync` has its \"first trait\" being `Send` and `Sync + Send` has its \"first trait\" being `Sync`. That is a bug that we want to fix.\r\n\r\nHowever, because the compiler made this distinction, it was possible to implement a trait separately for each of these types, for example:\r\n\r\n```Rust\r\ntrait Foo {\r\n    fn xyz();\r\n}\r\n\r\nimpl Foo for dyn Send + Sync {\r\n    fn xyz() {\r\n        println!(\"Hi I'm Send + Sync\");\r\n    }\r\n}\r\n\r\nimpl Foo for dyn Sync + Send {\r\n//~^ ERROR conflicting implementations\r\n    fn xyz() {\r\n        println!(\"Hi I'm Sync + Send\");\r\n    }\r\n}\r\n\r\nfn main() {\r\n    <dyn Send + Sync>::xyz();\r\n    <dyn Sync + Send>::xyz();\r\n}\r\n```\r\n\r\nThis obviously can't work if `Send + Sync` & `Sync + Send` are the same type! Therefore, it is being made into a coherence error.\r\n\r\nTo fix the warnings, remove all but one of the impls - e.g. the `Sync + Send` impl.\r\n\r\n#### When will this warning become a hard error?\r\n                    \r\nAt the beginning of each 6-week release cycle, the Rust compiler team\r\nwill review the set of outstanding future compatibility warnings and\r\nnominate some of them for **Final Comment Period**. Toward the end of\r\nthe cycle, we will review any comments and make a final determination\r\nwhether to convert the warning into a hard error or remove it\r\nentirely.\r\n\r\n#### Status\r\n\r\n - The warning will be introduced by #56481", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56484/timeline", "performed_via_github_app": null, "state_reason": null}