{"url": "https://api.github.com/repos/rust-lang/rust/issues/103095", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103095/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103095/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103095/events", "html_url": "https://github.com/rust-lang/rust/issues/103095", "id": 1410281074, "node_id": "I_kwDOAAsO6M5UDy5y", "number": 103095, "title": "borrowck: no entry for key (only panic for some types)", "user": {"login": "EqualMa", "id": 34654503, "node_id": "MDQ6VXNlcjM0NjU0NTAz", "avatar_url": "https://avatars.githubusercontent.com/u/34654503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EqualMa", "html_url": "https://github.com/EqualMa", "followers_url": "https://api.github.com/users/EqualMa/followers", "following_url": "https://api.github.com/users/EqualMa/following{/other_user}", "gists_url": "https://api.github.com/users/EqualMa/gists{/gist_id}", "starred_url": "https://api.github.com/users/EqualMa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EqualMa/subscriptions", "organizations_url": "https://api.github.com/users/EqualMa/orgs", "repos_url": "https://api.github.com/users/EqualMa/repos", "events_url": "https://api.github.com/users/EqualMa/events{/privacy}", "received_events_url": "https://api.github.com/users/EqualMa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-10-15T20:22:08Z", "updated_at": "2022-12-19T03:36:32Z", "closed_at": "2022-12-19T03:36:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\ntrait FnOnceForGenericRef<T>: FnOnce(&T) -> Self::FnOutput {\r\n    type FnOutput;\r\n}\r\n\r\nimpl<T, R, F: FnOnce(&T) -> R> FnOnceForGenericRef<T> for F {\r\n    type FnOutput = R;\r\n}\r\n\r\nstruct Data<T, D: FnOnceForGenericRef<T>> {\r\n    value: Option<T>,\r\n    output: Option<D::FnOutput>,\r\n}\r\n\r\nimpl<T, D: FnOnceForGenericRef<T>> Data<T, D> {\r\n    fn new(value: T, f: D) -> Self {\r\n        let output = f(&value);\r\n        Self {\r\n            value: Some(value),\r\n            output: Some(output),\r\n        }\r\n    }\r\n}\r\n\r\nfn test() {\r\n    Data::new(String::new(), |_| {});\r\n\r\n    // It is very weird that the following code doesn't panic but\r\n    // emit error as expected: \"implementation of `FnOnce` is not general enough\"\r\n    // Data::new(1, |_| {});\r\n}\r\n```\r\n\r\nHere is the playground: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=aba30e89981874a854cb8252c652b7f2\r\n\r\nThis might be related to #99665 and #102800 .\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.64.0 (a55dd71d5 2022-09-19)\r\nbinary: rustc\r\ncommit-hash: a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\r\ncommit-date: 2022-09-19\r\nhost: aarch64-unknown-linux-gnu\r\nrelease: 1.64.0\r\nLLVM version: 14.0.6\r\n```\r\n\r\nThe bug also exists for `rustc 1.66.0-nightly (bf15a9e52 2022-10-14)`\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'no entry found for key', compiler/rustc_borrowck/src/region_infer/mod.rs:2237:9\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'no entry found for key', compiler/rustc_borrowck/src/region_infer/mod.rs:2237:9\r\nstack backtrace:\r\n   0:     0x7f9c41ebf510 - std::backtrace_rs::backtrace::libunwind::trace::hc83d2ca9877ed15f\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   1:     0x7f9c41ebf510 - std::backtrace_rs::backtrace::trace_unsynchronized::h761490c78a8d3c90\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f9c41ebf510 - std::sys_common::backtrace::_print_fmt::h74c2d9c05b36a5cb\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/std/src/sys_common/backtrace.rs:66:5\r\n   3:     0x7f9c41ebf510 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hb42a8b90000bb024\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/std/src/sys_common/backtrace.rs:45:22\r\n   4:     0x7f9c41f1b52e - core::fmt::write::h5ee7341ed55b8805\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/core/src/fmt/mod.rs:1209:17\r\n   5:     0x7f9c41eaf7d5 - std::io::Write::write_fmt::hacce97c59cf194e4\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/std/src/io/mod.rs:1680:15\r\n   6:     0x7f9c41ec2143 - std::sys_common::backtrace::_print::h6884fdd5ab3f424d\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/std/src/sys_common/backtrace.rs:48:5\r\n   7:     0x7f9c41ec2143 - std::sys_common::backtrace::print::hb66e100356b39aaa\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/std/src/sys_common/backtrace.rs:35:9\r\n   8:     0x7f9c41ec2143 - std::panicking::default_hook::{{closure}}::h437804d1a6836d5e\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/std/src/panicking.rs:267:22\r\n   9:     0x7f9c41ec1e1a - std::panicking::default_hook::h65e830729b214390\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/std/src/panicking.rs:286:9\r\n  10:     0x7f9c448083c4 - rustc_driver[f331bf04a31a4474]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n  11:     0x7f9c41ec2a79 - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::hef73fb3e3355d020\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/alloc/src/boxed.rs:1952:9\r\n  12:     0x7f9c41ec2a79 - std::panicking::rust_panic_with_hook::hcab2853c64105b40\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/std/src/panicking.rs:692:13\r\n  13:     0x7f9c41ec27f7 - std::panicking::begin_panic_handler::{{closure}}::hd9c5ea26691d8270\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/std/src/panicking.rs:579:13\r\n  14:     0x7f9c41ebf9bc - std::sys_common::backtrace::__rust_end_short_backtrace::hd8a22d71267b4b61\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/std/src/sys_common/backtrace.rs:138:18\r\n  15:     0x7f9c41ec2512 - rust_begin_unwind\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/std/src/panicking.rs:575:5\r\n  16:     0x7f9c41f17f13 - core::panicking::panic_fmt::h4c6b07d94019a3f0\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/core/src/panicking.rs:65:14\r\n  17:     0x7f9c41f18061 - core::panicking::panic_display::hafe927c06584f593\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/core/src/panicking.rs:139:5\r\n  18:     0x7f9c41f1800b - core::panicking::panic_str::hab929c599078f017\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/core/src/panicking.rs:123:5\r\n  19:     0x7f9c41f17c86 - core::option::expect_failed::ha0bacc385d0a2f07\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/core/src/option.rs:1876:5\r\n  20:     0x7f9c44e9bebe - <rustc_borrowck[8ef346bc23d797c8]::region_infer::RegionInferenceContext>::universe_info\r\n  21:     0x7f9c43681b7e - rustc_borrowck[8ef346bc23d797c8]::do_mir_borrowck\r\n  22:     0x7f9c4367c9d0 - rustc_borrowck[8ef346bc23d797c8]::mir_borrowck\r\n  23:     0x7f9c4367c361 - <rustc_borrowck[8ef346bc23d797c8]::provide::{closure#0} as core[2c5081d8f0108272]::ops::function::FnOnce<(rustc_middle[3d73d7ef627e8bf]::ty::context::TyCtxt, rustc_span[c16ea33475d6785f]::def_id::LocalDefId)>>::call_once\r\n  24:     0x7f9c43dfcd75 - rustc_query_system[5f73ab021976280c]::query::plumbing::try_execute_query::<rustc_query_impl[84f7ded2d44823f6]::plumbing::QueryCtxt, rustc_query_system[5f73ab021976280c]::query::caches::DefaultCache<rustc_span[c16ea33475d6785f]::def_id::LocalDefId, &rustc_middle[3d73d7ef627e8bf]::mir::query::BorrowCheckResult>>\r\n  25:     0x7f9c4470db8e - <rustc_query_impl[84f7ded2d44823f6]::Queries as rustc_middle[3d73d7ef627e8bf]::ty::query::QueryEngine>::mir_borrowck\r\n  26:     0x7f9c441f72d3 - rustc_data_structures[5f783117a6880793]::sync::par_for_each_in::<&[rustc_span[c16ea33475d6785f]::def_id::LocalDefId], <rustc_middle[3d73d7ef627e8bf]::hir::map::Map>::par_body_owners<rustc_interface[24040f739c3f95dc]::passes::analysis::{closure#2}::{closure#0}>::{closure#0}>\r\n  27:     0x7f9c441f7033 - <rustc_session[665a57f624cd1b0d]::session::Session>::time::<(), rustc_interface[24040f739c3f95dc]::passes::analysis::{closure#2}>\r\n  28:     0x7f9c441f62a5 - rustc_interface[24040f739c3f95dc]::passes::analysis\r\n  29:     0x7f9c4459a284 - rustc_query_system[5f73ab021976280c]::query::plumbing::try_execute_query::<rustc_query_impl[84f7ded2d44823f6]::plumbing::QueryCtxt, rustc_query_system[5f73ab021976280c]::query::caches::DefaultCache<(), core[2c5081d8f0108272]::result::Result<(), rustc_errors[3e7e0c00279b1c89]::ErrorGuaranteed>>>\r\n  30:     0x7f9c44599fb7 - rustc_query_system[5f73ab021976280c]::query::plumbing::get_query::<rustc_query_impl[84f7ded2d44823f6]::queries::analysis, rustc_query_impl[84f7ded2d44823f6]::plumbing::QueryCtxt>\r\n  31:     0x7f9c434c0f93 - <rustc_interface[24040f739c3f95dc]::passes::QueryContext>::enter::<rustc_driver[f331bf04a31a4474]::run_compiler::{closure#1}::{closure#2}::{closure#3}, core[2c5081d8f0108272]::result::Result<(), rustc_errors[3e7e0c00279b1c89]::ErrorGuaranteed>>\r\n  32:     0x7f9c434b9db8 - rustc_interface[24040f739c3f95dc]::interface::create_compiler_and_run::<core[2c5081d8f0108272]::result::Result<(), rustc_errors[3e7e0c00279b1c89]::ErrorGuaranteed>, rustc_driver[f331bf04a31a4474]::run_compiler::{closure#1}>\r\n  33:     0x7f9c434b8be2 - <scoped_tls[fdb5e1dcf3b8ea2]::ScopedKey<rustc_span[c16ea33475d6785f]::SessionGlobals>>::set::<rustc_interface[24040f739c3f95dc]::interface::run_compiler<core[2c5081d8f0108272]::result::Result<(), rustc_errors[3e7e0c00279b1c89]::ErrorGuaranteed>, rustc_driver[f331bf04a31a4474]::run_compiler::{closure#1}>::{closure#0}, core[2c5081d8f0108272]::result::Result<(), rustc_errors[3e7e0c00279b1c89]::ErrorGuaranteed>>\r\n  34:     0x7f9c434b80bf - std[eb0ada501a1276bc]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[24040f739c3f95dc]::util::run_in_thread_pool_with_globals<rustc_interface[24040f739c3f95dc]::interface::run_compiler<core[2c5081d8f0108272]::result::Result<(), rustc_errors[3e7e0c00279b1c89]::ErrorGuaranteed>, rustc_driver[f331bf04a31a4474]::run_compiler::{closure#1}>::{closure#0}, core[2c5081d8f0108272]::result::Result<(), rustc_errors[3e7e0c00279b1c89]::ErrorGuaranteed>>::{closure#0}, core[2c5081d8f0108272]::result::Result<(), rustc_errors[3e7e0c00279b1c89]::ErrorGuaranteed>>\r\n  35:     0x7f9c4462582f - <<std[eb0ada501a1276bc]::thread::Builder>::spawn_unchecked_<rustc_interface[24040f739c3f95dc]::util::run_in_thread_pool_with_globals<rustc_interface[24040f739c3f95dc]::interface::run_compiler<core[2c5081d8f0108272]::result::Result<(), rustc_errors[3e7e0c00279b1c89]::ErrorGuaranteed>, rustc_driver[f331bf04a31a4474]::run_compiler::{closure#1}>::{closure#0}, core[2c5081d8f0108272]::result::Result<(), rustc_errors[3e7e0c00279b1c89]::ErrorGuaranteed>>::{closure#0}, core[2c5081d8f0108272]::result::Result<(), rustc_errors[3e7e0c00279b1c89]::ErrorGuaranteed>>::{closure#1} as core[2c5081d8f0108272]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  36:     0x7f9c41ecc593 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hb87d6f0b287ef99f\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/alloc/src/boxed.rs:1938:9\r\n  37:     0x7f9c41ecc593 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h57e28d10de971273\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/alloc/src/boxed.rs:1938:9\r\n  38:     0x7f9c41ecc593 - std::sys::unix::thread::Thread::new::thread_start::h4ee249ae8a0419de\r\n                               at /rustc/bf15a9e5263fcea065a7ae9c179b2d24c2deb670/library/std/src/sys/unix/thread.rs:108:17\r\n  39:     0x7f9c41d9e609 - start_thread\r\n  40:     0x7f9c41cc1133 - clone\r\n  41:                0x0 - <unknown>\r\n\r\nerror: internal compiler error: unexpected panic\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103095/timeline", "performed_via_github_app": null, "state_reason": "completed"}