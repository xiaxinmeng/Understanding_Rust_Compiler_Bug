{"url": "https://api.github.com/repos/rust-lang/rust/issues/40552", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40552/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40552/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40552/events", "html_url": "https://github.com/rust-lang/rust/issues/40552", "id": 214484951, "node_id": "MDU6SXNzdWUyMTQ0ODQ5NTE=", "number": 40552, "title": "Enable --remap-path-prefix for absolute paths by default", "user": {"login": "mzji", "id": 23279426, "node_id": "MDQ6VXNlcjIzMjc5NDI2", "avatar_url": "https://avatars.githubusercontent.com/u/23279426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzji", "html_url": "https://github.com/mzji", "followers_url": "https://api.github.com/users/mzji/followers", "following_url": "https://api.github.com/users/mzji/following{/other_user}", "gists_url": "https://api.github.com/users/mzji/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzji/subscriptions", "organizations_url": "https://api.github.com/users/mzji/orgs", "repos_url": "https://api.github.com/users/mzji/repos", "events_url": "https://api.github.com/users/mzji/events{/privacy}", "received_events_url": "https://api.github.com/users/mzji/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 31, "created_at": "2017-03-15T18:30:22Z", "updated_at": "2023-06-16T16:37:48Z", "closed_at": "2023-06-16T16:37:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to #40374 , a part of private information is leaked by the path string living in the compiled binaries. To protect privacy and help debugging, I think we can let rustc to mangle the path. Here is my solution:\r\n\r\nBasically, we can hide the 'insignificant' part of the path (which usually contains some private and/or unrelated info), leave 'significant' part untouched. Then what is the 'significant' part of a path? Here is an example: Assume that we have a project `foobar` which is in user's home directory (here I use a windows path, on *nix things work similarly):\r\n```\r\nC:\\Users\\username\\Documents\\foobar\r\n```\r\nIn this case, the useful part is the crate name and the part after the crate name, i.e.\r\n```\r\n\\foobar\\lib.rs\r\n```\r\nAssuming we have a mod called 'somemod', then after mangling, the new path looks like:\r\n```\r\n[crate]\\foobar\\somemod\\mod.rs\r\n```\r\nwhich not only saves the relatitionship information between sources files, but also protects the privacy of the user (since no more user name or aboslute path exists) !\r\n\r\nThe next question is how to process all paths under this rule. From what I know, all compiled code of a crate comes from 4 sources:\r\n* crates.io or mirrors of crates.io, or some independent 3rd party repo, in which the code is cached and lives in the cargo cache directory\r\n* remote git repositories\r\n* local filesystem\r\n* the crate itself (which may locate at any place)\r\n\r\nWe could specify different root names for these sources to indicate their origin:\r\n* For code from crates.io or mirrors, the root name is `[crates.io]`. Example:\r\n`C:\\Users\\username\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-0.2.8\\` will be mangled to `[crate.io]\\winapi-0.2.8\\`\r\n* For code from remote git repository, the root name is `[username@git server name]`. Example: `https://github.com/rust-lang/rust` will be manged to `[rust-lang@github.com]/rust`\r\n* For code from local filesystem, the root name is `[local]`. Example: `D:\\workspaces\\foobarng\\` will be mangled to `[local]\\foobarng\\`\r\n* For code from the crate itself, the root name is `crate`. Example: `C:\\Users\\username\\Documents\\foobar\\` will be mangled to `[crate]\\foobar\\`\r\n\r\nAnd for helping debuggers, all paths in debugging information won't be modified. Thus, users still know where the debugging code is, and won't worry about leaking privacy (just need stripping out debugging information before packaging on *nix, or not distributing .pdb files on windows).", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40552/reactions", "total_count": 78, "+1": 78, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40552/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}