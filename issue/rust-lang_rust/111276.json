{"url": "https://api.github.com/repos/rust-lang/rust/issues/111276", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111276/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111276/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111276/events", "html_url": "https://github.com/rust-lang/rust/issues/111276", "id": 1698433588, "node_id": "I_kwDOAAsO6M5lPAo0", "number": 111276, "title": "\"unconstrained generic constant\" when adding numbers", "user": {"login": "nazar-pc", "id": 928965, "node_id": "MDQ6VXNlcjkyODk2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/928965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nazar-pc", "html_url": "https://github.com/nazar-pc", "followers_url": "https://api.github.com/users/nazar-pc/followers", "following_url": "https://api.github.com/users/nazar-pc/following{/other_user}", "gists_url": "https://api.github.com/users/nazar-pc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nazar-pc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nazar-pc/subscriptions", "organizations_url": "https://api.github.com/users/nazar-pc/orgs", "repos_url": "https://api.github.com/users/nazar-pc/repos", "events_url": "https://api.github.com/users/nazar-pc/events{/privacy}", "received_events_url": "https://api.github.com/users/nazar-pc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-05-06T04:21:44Z", "updated_at": "2023-05-06T12:28:48Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\n#![feature(generic_const_exprs)]\r\n\r\nconst B: u8 = 1;\r\nconst BU: usize = B as usize;\r\n\r\nfn works<const A: u8>()\r\nwhere\r\n    [(); A as usize + BU]:,\r\n{\r\n    ().t::<{ A as usize }, BU>();\r\n}\r\n\r\nfn doesnt<const A: u8>()\r\nwhere\r\n    [(); A as usize + B as usize]:,\r\n{\r\n    ().t::<{ A as usize }, { B as usize }>();\r\n}\r\n\r\ntrait T {\r\n    fn t<const A: usize, const B: usize>(&mut self)\r\n    where\r\n        [(); A + B]:,\r\n    {\r\n    }\r\n}\r\n\r\nimpl T for () {}\r\n```\r\n\r\nI expected to see this happen: Code compiles\r\n\r\nInstead, this happened:\r\n\r\n```\r\nerror: unconstrained generic constant\r\n  --> src/lib.rs:17:8\r\n   |\r\n17 |     ().t::<{ A as usize }, { B as usize }>();\r\n   |        ^\r\n   |\r\n   = help: try adding a `where` bound using this expression: `where [(); A + B]:`\r\nnote: required by a bound in `T::t`\r\n  --> src/lib.rs:23:14\r\n   |\r\n21 |     fn t<const A: usize, const B: usize>(&mut self)\r\n   |        - required by a bound in this associated function\r\n22 |     where\r\n23 |         [(); A + B]:,\r\n   |              ^^^^^ required by this bound in `T::t`\r\n```\r\n\r\nNote that both functions are essentially the same, the only difference is that in case when it works, second number is already `usize`, but in case where it doesn't, number casting happens in-place. I was not able to get second version to work with any trait bounds suggested by the compiler.\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.71.0-nightly (f9a6b7158 2023-05-05)\r\n```\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111276/timeline", "performed_via_github_app": null, "state_reason": null}