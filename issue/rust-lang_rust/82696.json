{"url": "https://api.github.com/repos/rust-lang/rust/issues/82696", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82696/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82696/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82696/events", "html_url": "https://github.com/rust-lang/rust/issues/82696", "id": 819863614, "node_id": "MDU6SXNzdWU4MTk4NjM2MTQ=", "number": 82696, "title": "Better error messages for sending `format!` uses across thread boundaries.", "user": {"login": "teymour-aldridge", "id": 42674621, "node_id": "MDQ6VXNlcjQyNjc0NjIx", "avatar_url": "https://avatars.githubusercontent.com/u/42674621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teymour-aldridge", "html_url": "https://github.com/teymour-aldridge", "followers_url": "https://api.github.com/users/teymour-aldridge/followers", "following_url": "https://api.github.com/users/teymour-aldridge/following{/other_user}", "gists_url": "https://api.github.com/users/teymour-aldridge/gists{/gist_id}", "starred_url": "https://api.github.com/users/teymour-aldridge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teymour-aldridge/subscriptions", "organizations_url": "https://api.github.com/users/teymour-aldridge/orgs", "repos_url": "https://api.github.com/users/teymour-aldridge/repos", "events_url": "https://api.github.com/users/teymour-aldridge/events{/privacy}", "received_events_url": "https://api.github.com/users/teymour-aldridge/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-03-02T10:11:42Z", "updated_at": "2021-03-02T10:11:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur. \r\n-->\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\nfn main() {\r\n    let format = format_args!(\"{}\", 1);\r\n    std::thread::spawn(move || {\r\n        format;\r\n    })\r\n    .join()\r\n    .unwrap();\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0277]: `core::fmt::Opaque` cannot be shared between threads safely\r\n   --> src/main.rs:3:5\r\n    |\r\n3   |     std::thread::spawn(move || {\r\n    |     ^^^^^^^^^^^^^^^^^^ `core::fmt::Opaque` cannot be shared between threads safely\r\n    |\r\n    = help: within `[ArgumentV1<'_>]`, the trait `Sync` is not implemented for `core::fmt::Opaque`\r\n    = note: required because it appears within the type `&core::fmt::Opaque`\r\n    = note: required because it appears within the type `ArgumentV1<'_>`\r\n    = note: required because it appears within the type `[ArgumentV1<'_>]`\r\n    = note: required because of the requirements on the impl of `Send` for `&[ArgumentV1<'_>]`\r\n    = note: required because it appears within the type `Arguments<'_>`\r\n    = note: required because it appears within the type `[closure@src/main.rs:3:24: 5:6]`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like: I think it would be more helpful to point out which variable is being across a thread boundary. So something like,\r\n\r\n```\r\nfn main() {\r\n    let format = format_args!(\"{}\", 1);\r\n         ^^^ format is of type `core::fmt::Opaque` which is not `Sync`\r\n    std::thread::spawn(move || {\r\n                                   ^^^ `format` is moved into this closure here, but in order to do so it must be `Sync` because it is being sent accross a thread boundary\r\n        format;\r\n    })\r\n    .join()\r\n    .unwrap();\r\n}\r\n```\r\n\r\nI think it would also be helpful to point out that `ArgumentV1<'_>` comes from a `format!` invocation because it is not immediately obvious. I did run into this bug a few weeks ago, and I was only able to work this out after an internet search result returned some of `rustc`'s tests.\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82696/timeline", "performed_via_github_app": null, "state_reason": null}