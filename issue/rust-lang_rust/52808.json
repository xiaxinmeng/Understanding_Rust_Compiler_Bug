{"url": "https://api.github.com/repos/rust-lang/rust/issues/52808", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52808/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52808/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52808/events", "html_url": "https://github.com/rust-lang/rust/issues/52808", "id": 345461372, "node_id": "MDU6SXNzdWUzNDU0NjEzNzI=", "number": 52808, "title": "Compiler panic when using associated constants for array length", "user": {"login": "nikolads", "id": 6366825, "node_id": "MDQ6VXNlcjYzNjY4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6366825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikolads", "html_url": "https://github.com/nikolads", "followers_url": "https://api.github.com/users/nikolads/followers", "following_url": "https://api.github.com/users/nikolads/following{/other_user}", "gists_url": "https://api.github.com/users/nikolads/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikolads/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikolads/subscriptions", "organizations_url": "https://api.github.com/users/nikolads/orgs", "repos_url": "https://api.github.com/users/nikolads/repos", "events_url": "https://api.github.com/users/nikolads/events{/privacy}", "received_events_url": "https://api.github.com/users/nikolads/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1405345617, "node_id": "MDU6TGFiZWwxNDA1MzQ1NjE3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lazy-normalization", "name": "A-lazy-normalization", "color": "f7e101", "default": false, "description": "Area: lazy normalization (tracking issue: #60471)"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-28T16:31:31Z", "updated_at": "2020-09-30T20:36:38Z", "closed_at": "2019-11-14T12:10:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code causes a compiler panic:\r\n\r\n```rust\r\nstruct Foo<'a>([&'a (); 2]);\r\n\r\nimpl<'a> Foo<'a> {\r\n    const LEN: usize = 2;\r\n\r\n    fn new() -> Self {\r\n        Foo({\r\n            let arr: [_; Self::LEN] = [&(), &()];\r\n            arr\r\n        })\r\n    }\r\n}\r\n```\r\n\r\nError:\r\n```\r\nthread 'main' panicked at 'assertion failed: `(left == right)`\r\n  left: `Some(NodeId(15))`,\r\n right: `None`: free_scope: DefId(0/0:4 ~ rustc_ice[3d2b]::{{impl}}[0]) not recognized by the region scope tree for None / Some(DefId(0/0:6 ~ rustc_ice[3d2b]::{{impl}}[0]::new[0]))', librustc/middle/region.rs:734:13\r\n```\r\n\r\nUsing the constant on the right hand side as in `let arr = [&(); Self::LEN];` causes the same error. \r\n\r\nThe lifetimes are required. If I replace the struct with `struct Foo([&'static (); 2])` the code compiles fine. \r\n\r\nRustc version: `rustc 1.29.0-nightly (6a1c0637c 2018-07-23)`. \r\nAlso panics on 1.27.2-stable.\r\n\r\nBacktrace:\r\n```\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:479\r\n   6: std::panicking::continue_panic_fmt\r\n             at libstd/panicking.rs:390\r\n   7: std::panicking::begin_panic_fmt\r\n             at libstd/panicking.rs:345\r\n   8: rustc::middle::region::ScopeTree::early_free_scope\r\n   9: rustc::middle::free_region::RegionRelations::is_subregion_of\r\n  10: rustc::infer::lexical_region_resolve::resolve\r\n  11: rustc::infer::InferCtxt::resolve_regions_and_report_errors_inner\r\n  12: rustc_typeck::check::regionck::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::regionck_expr\r\n  13: rustc::ty::context::tls::with_related_context\r\n  14: rustc::infer::InferCtxtBuilder::enter\r\n  15: rustc_typeck::check::typeck_tables_of\r\n  16: rustc::ty::query::__query_compute::typeck_tables_of\r\n  17: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::typeck_tables_of<'tcx>>::compute\r\n  18: rustc::ty::context::tls::with_context\r\n  19: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  20: rustc::ty::context::tls::with_related_context\r\n  21: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  22: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  23: rustc::ty::query::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_tables_of\r\n  24: rustc_mir::interpret::const_eval::const_eval_provider\r\n  25: rustc::ty::query::__query_compute::const_eval\r\n  26: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::const_eval<'tcx>>::compute\r\n  27: rustc::ty::context::tls::with_context\r\n  28: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  29: rustc::ty::context::tls::with_related_context\r\n  30: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  31: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  32: <rustc::traits::project::AssociatedTypeNormalizer<'a, 'b, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_const\r\n  33: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable<'tcx> for &'tcx rustc::ty::TyS<'tcx>>::super_fold_with\r\n  34: <rustc::traits::project::AssociatedTypeNormalizer<'a, 'b, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  35: rustc::infer::InferCtxt::partially_normalize_associated_types_in\r\n  36: <rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx> as rustc_typeck::astconv::AstConv<'gcx, 'tcx>>::normalize_ty\r\n  37: <(dyn rustc_typeck::astconv::AstConv<'gcx, 'tcx> + 'o)>::ast_ty_to_ty\r\n  38: <rustc_typeck::check::GatherLocalsVisitor<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_local\r\n  39: rustc::hir::intravisit::walk_expr\r\n  40: rustc::hir::intravisit::walk_expr\r\n  41: rustc_typeck::check::check_fn\r\n  42: rustc::ty::context::tls::with_related_context\r\n  43: rustc::infer::InferCtxtBuilder::enter\r\n  44: rustc_typeck::check::typeck_tables_of\r\n  45: rustc::ty::query::__query_compute::typeck_tables_of\r\n  46: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::typeck_tables_of<'tcx>>::compute\r\n  47: rustc::ty::context::tls::with_context\r\n  48: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  49: rustc::ty::context::tls::with_related_context\r\n  50: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  51: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  52: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::ensure_query\r\n  53: rustc_typeck::check::typeck_item_bodies\r\n  54: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::typeck_item_bodies<'tcx>>::compute\r\n  55: rustc::ty::context::tls::with_context\r\n  56: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  57: rustc::ty::context::tls::with_related_context\r\n  58: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  59: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  60: rustc::util::common::time\r\n  61: rustc_typeck::check_crate\r\n  62: rustc::ty::context::tls::enter_context\r\n  63: <std::thread::local::LocalKey<T>>::with\r\n  64: rustc::ty::context::TyCtxt::create_and_enter\r\n  65: rustc_driver::driver::compile_input\r\n  66: rustc_driver::run_compiler_with_pool\r\n  67: <scoped_tls::ScopedKey<T>>::set\r\n  68: <scoped_tls::ScopedKey<T>>::set\r\n  69: syntax::with_globals\r\n  70: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  71: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:106\r\n  72: rustc_driver::run\r\n  73: rustc_driver::main\r\n  74: std::rt::lang_start::{{closure}}\r\n  75: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  76: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:106\r\n  77: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:392\r\n             at libstd/rt.rs:58\r\n  78: main\r\n  79: __libc_start_main\r\n  80: <unknown>\r\nquery stack during panic:\r\n#0 [typeck_tables_of] processing `Foo::new::{{constant}}`\r\n#1 [const_eval] const-evaluating `Foo::new::{{constant}}`\r\n#2 [typeck_tables_of] processing `Foo::new`\r\n#3 [typeck_item_bodies] type-checking all item bodies\r\nend of query stack\r\n```", "closed_by": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52808/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52808/timeline", "performed_via_github_app": null, "state_reason": "completed"}