{"url": "https://api.github.com/repos/rust-lang/rust/issues/33014", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/33014/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/33014/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/33014/events", "html_url": "https://github.com/rust-lang/rust/issues/33014", "id": 148778292, "node_id": "MDU6SXNzdWUxNDg3NzgyOTI=", "number": 33014, "title": "gdb needs to know what traits a type implements", "user": {"login": "tromey", "id": 1557670, "node_id": "MDQ6VXNlcjE1NTc2NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tromey", "html_url": "https://github.com/tromey", "followers_url": "https://api.github.com/users/tromey/followers", "following_url": "https://api.github.com/users/tromey/following{/other_user}", "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}", "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tromey/subscriptions", "organizations_url": "https://api.github.com/users/tromey/orgs", "repos_url": "https://api.github.com/users/tromey/repos", "events_url": "https://api.github.com/users/tromey/events{/privacy}", "received_events_url": "https://api.github.com/users/tromey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203130, "node_id": "MDU6TGFiZWwyMDMxMzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-debuginfo", "name": "A-debuginfo", "color": "f7e101", "default": false, "description": "Area: Debugging information in compiled programs (DWARF, PDB, etc.)"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-15T21:52:57Z", "updated_at": "2020-04-21T22:51:47Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'd like to make operator overloading work for Rust in gdb.  That is, I'd like something like `print x+y` to call the appropriate method on the `Add` trait.  I'd also like to make ordinary method calls work, where the method is defined in some trait that is impl'd for the concrete type of the object.\n\nRight now I think this can't be done.  There is no information in the debug info about what traits are implemented by a type.\n\nConsider:\n\n```\npub trait What {\n    fn what(&self);\n}\n\nimpl What for i32 {\n    fn what(&self) {\n        println!(\"{}\", self);\n    }\n}\n\nfn main() {\n    let v = 23;\n    let x = &v as &What;\n\n    x.what();\n    ()\n}\n```\n\nHere `i32` is described as just a base type:\n\n```\n <1><5e7>: Abbrev Number: 16 (DW_TAG_base_type)\n    <5e8>   DW_AT_name        : (indirect string, offset: 0x46a): i32\n    <5ec>   DW_AT_encoding    : 5   (signed)\n    <5ed>   DW_AT_byte_size   : 4\n```\n\nI think this might be a good spot to list all the impl'd traits.  Perhaps they can be represented as DWARF interfaces; or maybe some Rust extension to DWARF would be preferable.\n\n`i32.What` is emitted as a namespace:\n\n```\n <2><2f>: Abbrev Number: 2 (DW_TAG_namespace)\n    <30>   DW_AT_name        : (indirect string, offset: 0x48): i32.What\n```\n\n... but this isn't directly useful as it would require an iteration over all the namespace DIEs looking for matches.  Maybe I could do this; but I'd rather not as it is very inefficient.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/33014/reactions", "total_count": 10, "+1": 10, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/33014/timeline", "performed_via_github_app": null, "state_reason": null}