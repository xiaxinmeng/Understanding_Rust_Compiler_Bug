{"url": "https://api.github.com/repos/rust-lang/rust/issues/51446", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51446/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51446/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51446/events", "html_url": "https://github.com/rust-lang/rust/issues/51446", "id": 330822466, "node_id": "MDU6SXNzdWUzMzA4MjI0NjY=", "number": 51446, "title": "Associated type equality fails with trait bound on struct", "user": {"login": "stephaneyfx", "id": 24405066, "node_id": "MDQ6VXNlcjI0NDA1MDY2", "avatar_url": "https://avatars.githubusercontent.com/u/24405066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephaneyfx", "html_url": "https://github.com/stephaneyfx", "followers_url": "https://api.github.com/users/stephaneyfx/followers", "following_url": "https://api.github.com/users/stephaneyfx/following{/other_user}", "gists_url": "https://api.github.com/users/stephaneyfx/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephaneyfx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephaneyfx/subscriptions", "organizations_url": "https://api.github.com/users/stephaneyfx/orgs", "repos_url": "https://api.github.com/users/stephaneyfx/repos", "events_url": "https://api.github.com/users/stephaneyfx/events{/privacy}", "received_events_url": "https://api.github.com/users/stephaneyfx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-08T22:39:49Z", "updated_at": "2021-04-11T07:36:31Z", "closed_at": "2021-04-11T07:36:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This may be related/identical to #47897 and #37883.\r\n\r\nThe following code fails to compile with a dubious error. This is a simplified reproduction example based on @DutchGhost's code on IRC. Note that commenting the `where` clause in the definition of `struct B` makes the code compile. [playground](https://play.rust-lang.org/?gist=acf234aa96b57ec5b27359c8ef44c326&version=stable&mode=debug)\r\n\r\n```rust\r\ntrait Foo {\r\n    type Item;\r\n    fn get(&self) -> Self::Item;\r\n}\r\n\r\nfn blah<T, F>(x: T, f: F) -> B<T::Item, impl Fn(T::Item)>\r\nwhere\r\n    T: Foo,\r\n    F: Fn(T::Item),\r\n{\r\n    B {x: x.get(), f}\r\n}\r\n\r\nstruct B<T, F>\r\n// Comment the 2 following lines to make the compiler happy\r\nwhere\r\n    F: Fn(T),\r\n{\r\n    x: T,\r\n    f: F,\r\n}\r\n\r\nimpl Foo for i32 {\r\n    type Item = i32;\r\n    fn get(&self) -> i32 {*self}\r\n}\r\n\r\nfn main() {\r\n    let _ = blah(0, |_| ());\r\n}\r\n```\r\n\r\n```\r\nerror[E0277]: the trait bound `impl std::ops::Fn<(<i32 as Foo>::Item,)>: std::ops::Fn<(i32,)>` is not satisfied\r\n  --> src/main.rs:29:13\r\n   |\r\n29 |     let _ = blah(0, |_| ());\r\n   |             ^^^^^^^^^^^^^^^ the trait `std::ops::Fn<(i32,)>` is not implemented for `impl std::ops::Fn<(<i32 as Foo>::Item,)>`\r\n   |\r\nnote: required by `B`\r\n  --> src/main.rs:14:1\r\n   |\r\n14 | / struct B<T, F>\r\n15 | | // Comment the 2 following lines to make the compiler happy\r\n16 | | where\r\n17 | |     F: Fn(T),\r\n...  |\r\n20 | |     f: F,\r\n21 | | }\r\n   | |_^\r\n\r\nerror: aborting due to previous error\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51446/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51446/timeline", "performed_via_github_app": null, "state_reason": "completed"}