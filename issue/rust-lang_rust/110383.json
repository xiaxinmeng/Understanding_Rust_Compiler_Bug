{"url": "https://api.github.com/repos/rust-lang/rust/issues/110383", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110383/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110383/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110383/events", "html_url": "https://github.com/rust-lang/rust/issues/110383", "id": 1669645669, "node_id": "I_kwDOAAsO6M5jhMVl", "number": 110383, "title": "build_script_build.exe in a Windows Sandbox shared folder is filled with zero bytes", "user": {"login": "voltagex", "id": 83080728, "node_id": "MDQ6VXNlcjgzMDgwNzI4", "avatar_url": "https://avatars.githubusercontent.com/u/83080728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/voltagex", "html_url": "https://github.com/voltagex", "followers_url": "https://api.github.com/users/voltagex/followers", "following_url": "https://api.github.com/users/voltagex/following{/other_user}", "gists_url": "https://api.github.com/users/voltagex/gists{/gist_id}", "starred_url": "https://api.github.com/users/voltagex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/voltagex/subscriptions", "organizations_url": "https://api.github.com/users/voltagex/orgs", "repos_url": "https://api.github.com/users/voltagex/repos", "events_url": "https://api.github.com/users/voltagex/events{/privacy}", "received_events_url": "https://api.github.com/users/voltagex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123109, "node_id": "MDU6TGFiZWwxMjMxMDk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows", "name": "O-windows", "color": "6e6ec0", "default": false, "description": "Operating system: Windows"}, {"id": 266005765, "node_id": "MDU6TGFiZWwyNjYwMDU3NjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows-msvc", "name": "O-windows-msvc", "color": "6e6ec0", "default": false, "description": "Toolchain: MSVC, Operating system: Windows"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-04-16T02:52:42Z", "updated_at": "2023-04-20T08:53:40Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\n\r\nTesting this on Windows 10.0.19045.2846, Windows Sandbox and Hyper-V enabled.\r\n\r\n* First, create a .wsb file with the following contents:\r\n\r\n```xml\r\n<Configuration>\r\n  <MappedFolders>\r\n    <MappedFolder> \r\n      <HostFolder>C:\\test</HostFolder> \r\n      <SandboxFolder>C:\\test</SandboxFolder> \r\n    </MappedFolder>\r\n  </MappedFolders>\r\n</Configuration>\r\n```\r\n\r\n* Create c:\\test on your host PC.\r\n* Double click the wsb file to launch the sandbox.\r\n* Confirm you have c:\\test inside the sandbox.\r\n\r\nThe next steps should be done inside the sandbox.\r\n\r\n\r\n* Install Rust via rustup-init.exe. This will also pull down a \"minimal\" Visual Studio (sidenote: you can add a flag to your VS setup invocation to make it run without user input, but still show what it's doing)\r\n\r\n* Close the Visual Studio windows that are launched (?) so that rustup-init continues.\r\n\r\n\r\n* Then try creating a new application and add proc-macro2 to its dependencies (this does *not* just impact this package, it'll be anything that uses build_script_build.exe IMO). Note that I am using the shared folder here.\r\n\r\n\r\n```\r\nPS C:\\Users\\WDAGUtilityAccount> cd c:\\test\r\nPS C:\\test> cargo new build-test\r\n     Created binary (application) `build-test` package\r\nPS C:\\test> cd .\\build-test\\\r\nPS C:\\test\\build-test> cargo add proc-macro2\r\n    Updating crates.io index\r\n      Adding proc-macro2 v1.0.56 to dependencies.\r\n             Features:\r\n             + proc-macro\r\n             - nightly\r\n             - span-locations\r\n    Updating crates.io index\r\nPS C:\\test\\build-test> cargo build\r\n  Downloaded proc-macro2 v1.0.56\r\n  Downloaded unicode-ident v1.0.8\r\n  Downloaded 2 crates (86.4 KB) in 0.78s\r\n   Compiling proc-macro2 v1.0.56\r\n   Compiling unicode-ident v1.0.8\r\nerror: failed to run custom build command for `proc-macro2 v1.0.56`\r\nCaused by:\r\n  could not execute process `C:\\test\\build-test\\target\\debug\\build\\proc-macro2-367b58302398b1c3\\build-script-build` (never executed)\r\n\r\nCaused by:\r\n  The file or directory is corrupted and unreadable. (os error 1392)\r\n```\r\n\r\nIf I create a *new* directory that IS NOT shared and create a new application\r\n\r\n```\r\nPS C:\\test2> cargo add proc-macro2; cargo build\r\n    Updating crates.io index\r\n      Adding proc-macro2 v1.0.56 to dependencies.\r\n             Features:\r\n             + proc-macro\r\n             - nightly\r\n             - span-locations\r\n    Updating crates.io index\r\n   Compiling proc-macro2 v1.0.56\r\n   Compiling unicode-ident v1.0.8\r\n   Compiling test2 v0.1.0 (C:\\test2)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 1.57s\r\n```\r\n\r\nNow, the most interesting part of this:\r\n\r\n.exe files created in the shared folder, e.g. `C:\\test\\build-test\\target\\debug\\build\\proc-macro2-367b58302398b1c3` are zeroed. the .d file and the .pdb seem to be fine though!\r\n\r\n[build-test.zip](https://github.com/rust-lang/rust/files/11241102/build-test.zip)\r\n[cargo-build-msvc-link.zip - procmon trace, stable](https://github.com/rust-lang/rust/files/11241257/cargo-build-msvc-link.zip)\r\n\r\nI first noticed this on stable, reproduced here with \r\n\r\n```\r\nrustc 1.71.0-nightly (5cdb7886a 2023-04-15)\r\ncargo 1.71.0-nightly (84b7041fd 2023-04-13)\r\n```\r\n\r\nI believe this to be an issue with the way Windows Sandbox shared folders work but it needs someone with more experience in both Windows and Rust to have a look.\r\n\r\nThis may need to be re-tested on Windows 11 as well.\r\n\r\n__[Edit: I can't reproduce this with the GNU toolchain!]__", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110383/timeline", "performed_via_github_app": null, "state_reason": null}