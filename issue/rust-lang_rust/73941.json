{"url": "https://api.github.com/repos/rust-lang/rust/issues/73941", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73941/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73941/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73941/events", "html_url": "https://github.com/rust-lang/rust/issues/73941", "id": 649295014, "node_id": "MDU6SXNzdWU2NDkyOTUwMTQ=", "number": 73941, "title": "missing struct declaration type leads to confusing type ascription diagnostic", "user": {"login": "rmustacc", "id": 613773, "node_id": "MDQ6VXNlcjYxMzc3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/613773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmustacc", "html_url": "https://github.com/rmustacc", "followers_url": "https://api.github.com/users/rmustacc/followers", "following_url": "https://api.github.com/users/rmustacc/following{/other_user}", "gists_url": "https://api.github.com/users/rmustacc/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmustacc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmustacc/subscriptions", "organizations_url": "https://api.github.com/users/rmustacc/orgs", "repos_url": "https://api.github.com/users/rmustacc/repos", "events_url": "https://api.github.com/users/rmustacc/events{/privacy}", "received_events_url": "https://api.github.com/users/rmustacc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-01T20:22:51Z", "updated_at": "2020-07-01T23:20:16Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "While trying to get started with rust, I was attempting to declare a global instance of a struct for various reasons (integrating into a device driver framework). This was based on the nightly toolchain because of some other nightly features. Having written a lot of C, but not a lot of rust, I mistakenly declared a structure leaving out the type on the right hand side of the equals sign. This led to a relatively confusing message about type ascription. Here's a reduced version of the code that generates this as of version `rustc 1.46.0-nightly (16957bd4d 2020-06-30)` though I first encountered this on `rustc 1.44.0-nightly (b77aefb76 2020-04-14)`.\r\n\r\n```rust\r\n#![crate_type=\"staticlib\"]\r\n#![feature(extern_types)]\r\n#![feature(lang_items)]\r\n#![no_std]\r\n\r\nuse core::panic::PanicInfo;\r\n\r\nconst MODREV_1: i32 = 1;\r\n\r\n#[repr(C)]\r\nstruct IllumosModLinkage {\r\n    ml_rev: i32,\r\n}\r\n\r\n#[no_mangle]\r\nstatic RMOD_MODLINKAGE: IllumosModLinkage = {\r\n        ml_rev: MODREV_1,\r\n};\r\n\r\n#[lang = \"eh_personality\"]\r\nextern fn eh_personality() {}\r\n#[panic_handler]\r\nfn panic(_info: &PanicInfo) -> ! {\r\n    loop {}\r\n}\r\n```\r\n\r\nWhen building this with a nightly rustc you receive the following error message:\r\n\r\n```\r\n$ rustc example.rs \r\nerror: expected one of `!`, `(`, `.`, `::`, `;`, `<`, `?`, or `}`, found `,`\r\n  --> example.rs:17:25\r\n   |\r\n17 |         ml_rev: MODREV_1,\r\n   |               -         ^ expected one of 8 possible tokens\r\n   |               |\r\n   |               tried to parse a type due to this type ascription\r\n   |\r\n   = note: `#![feature(type_ascription)]` lets you annotate an expression with a type: `<expr>: <type>`\r\n   = note: see issue #23416 <https://github.com/rust-lang/rust/issues/23416> for more information\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nWhile I now understand that this was trying to use type ascription incidentally, this sent me initially down the path of trying to figure out what type ascription was and a number of wrong paths. I know at one point I did try to add the feature there, as it seems to be suggesting that, but that didn't change anything. Upon better understanding the problem and what I did wrong, I wouldn't expect adding the feature to have changed anything, but when getting started these messages are usually pretty helpful in indicating what to change or what's going on which is what led me to try it.\r\n\r\nIf there's some way to indicate that someone might have left a type declaration out in this case, that might be useful and help save someone else who's learning some time in the future.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73941/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73941/timeline", "performed_via_github_app": null, "state_reason": null}