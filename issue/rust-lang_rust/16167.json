{"url": "https://api.github.com/repos/rust-lang/rust/issues/16167", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16167/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16167/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16167/events", "html_url": "https://github.com/rust-lang/rust/issues/16167", "id": 39283181, "node_id": "MDU6SXNzdWUzOTI4MzE4MQ==", "number": 16167, "title": "Add a way to reset MemWriter", "user": {"login": "SiegeLord", "id": 480550, "node_id": "MDQ6VXNlcjQ4MDU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/480550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SiegeLord", "html_url": "https://github.com/SiegeLord", "followers_url": "https://api.github.com/users/SiegeLord/followers", "following_url": "https://api.github.com/users/SiegeLord/following{/other_user}", "gists_url": "https://api.github.com/users/SiegeLord/gists{/gist_id}", "starred_url": "https://api.github.com/users/SiegeLord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SiegeLord/subscriptions", "organizations_url": "https://api.github.com/users/SiegeLord/orgs", "repos_url": "https://api.github.com/users/SiegeLord/repos", "events_url": "https://api.github.com/users/SiegeLord/events{/privacy}", "received_events_url": "https://api.github.com/users/SiegeLord/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-08-01T11:54:19Z", "updated_at": "2015-02-16T19:49:57Z", "closed_at": "2015-02-16T19:49:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "MemWriter recently lost its ability to seek due to speed concerns, which removed any way of resetting/truncating it (i.e. seeking backwards). Could this be added? A possible API/implementation would be:\n\n``` rust\n// Does nothing if new_len is greater than current length\npub fn truncate(&mut self, new_len: uint) { self.buf.truncate(new_len); }\n```\n\nAlternatively, perhaps a new constructor could be added which would wrap an existing `Vec` which would allow me to do this:\n\n``` rust\nlet writer = MemWriter::new();\nlet mut vec = writer.unwrap();\nvec.truncate(new_len);\nlet writer = MemWriter::wrap(vec);\n```\n\n@erickt, I recall talking to you about this on IRC, so you may have some thoughts.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16167/timeline", "performed_via_github_app": null, "state_reason": "completed"}