{"url": "https://api.github.com/repos/rust-lang/rust/issues/80536", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80536/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80536/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80536/events", "html_url": "https://github.com/rust-lang/rust/issues/80536", "id": 776668321, "node_id": "MDU6SXNzdWU3NzY2NjgzMjE=", "number": 80536, "title": "MIR body serialization may be a bottleneck", "user": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13242248, "node_id": "MDU6TGFiZWwxMzI0MjI0OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-metadata", "name": "A-metadata", "color": "f7e101", "default": false, "description": "Area: crate metadata"}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}, {"id": 2019962432, "node_id": "MDU6TGFiZWwyMDE5OTYyNDMy", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt-inlining", "name": "A-mir-opt-inlining", "color": "f7e101", "default": false, "description": "Area: MIR inlining"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-12-30T22:57:16Z", "updated_at": "2023-04-05T17:41:33Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "During MIR inlining, we end up producing larger MIR bodies each, as inlining often causes an increase in MIR for non-trivial functions being inlined. [This perf run](https://perf.rust-lang.org/compare.html?start=bbcaed03bf5505f3fed351887769ed1531599502&end=8fe9cff5eef9b4a216c991f66db2e749426888f3) shows that in the incremental cases, we lose some time to `optimized_mir` as expected but this is often offset by wins in `codegen`. \r\n\r\nHowever the other place we regress is time spent dealing with the incremental cache. That suggests to me that our MIR is larger due to inlining which causes more time to be spent during serialization/deserialization. \r\n\r\nIt might be worth exploring if there's any optimizations we can make to the serialized `Body` representation.\r\n\r\n_Originally posted by @wesleywiser in https://github.com/rust-lang/rust/issues/68828#issuecomment-752782277_", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80536/timeline", "performed_via_github_app": null, "state_reason": null}