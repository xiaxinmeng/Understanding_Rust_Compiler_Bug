{"url": "https://api.github.com/repos/rust-lang/rust/issues/42703", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42703/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42703/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42703/events", "html_url": "https://github.com/rust-lang/rust/issues/42703", "id": 236547149, "node_id": "MDU6SXNzdWUyMzY1NDcxNDk=", "number": 42703, "title": "properly handle anonymous regions appearing in return type- named-anon conflicts", "user": {"login": "gaurikholkar-zz", "id": 9420877, "node_id": "MDQ6VXNlcjk0MjA4Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/9420877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar-zz", "html_url": "https://github.com/gaurikholkar-zz", "followers_url": "https://api.github.com/users/gaurikholkar-zz/followers", "following_url": "https://api.github.com/users/gaurikholkar-zz/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar-zz/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar-zz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar-zz/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar-zz/orgs", "repos_url": "https://api.github.com/users/gaurikholkar-zz/repos", "events_url": "https://api.github.com/users/gaurikholkar-zz/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar-zz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 693664741, "node_id": "MDU6TGFiZWw2OTM2NjQ3NDE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mentor", "name": "E-needs-mentor", "color": "02e10c", "default": false, "description": "Call for participation: This issue is in need of a mentor."}, {"id": 693665463, "node_id": "MDU6TGFiZWw2OTM2NjU0NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-diagnostics", "name": "WG-diagnostics", "color": "c2e0c6", "default": false, "description": "Working group: diagnostics"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-06-16T17:35:06Z", "updated_at": "2022-12-28T00:06:54Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "These cases, going by the way #42669 for one named and other anonymous lifetime parameter , the error message generated would suggest ` consider changing type of self` to `&'a i32`. In the first case, this is fine but the second case, with `self.field` not being the return value, the message is wrong and should only suggest changing the return type. We need to differentiate both the cases and fix the error message for the second case.\r\n```rust\r\nfn foo<'a>(&self, x: &'a i32) -> &i32 {\r\n // Preferred message:\r\n //     fn foo<'a>(&self, x: &'a i32) -> &i32 {\r\n //                 -----                 ---- consider changing to `&'a i32`\r\n //                 |\r\n //                 consider changing to `&'a self`\r\n    if true { &self.field } else { x }\r\n  }\r\n```\r\n```rust\r\nfn foo<'a>(&self, x: &'a i32) -> &i32 {\r\n//       preferred error\r\n//       fn foo<'a>(&self, x: &'a i32) -> &i32 {             \r\n//                                         ---- consider changing to `&'a i32`\r\n    x\r\n\r\n// error[E0611]: explicit lifetime required in the type of `self`\r\n//    |\r\n// 33 |     fn foo<'a>(&self, x: &'a i32) -> &i32 {\r\n//    |                 ^^^^^ consider changing the type of `self` to `&'a Foo`\r\n// 34 |         //                             \r\n// 35 |         x\r\n//    |         - lifetime `'a` required\r\n  }\r\n```\r\ncc @nikomatsakis ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42703/timeline", "performed_via_github_app": null, "state_reason": null}