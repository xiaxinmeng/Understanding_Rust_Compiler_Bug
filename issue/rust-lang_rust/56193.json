{"url": "https://api.github.com/repos/rust-lang/rust/issues/56193", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56193/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56193/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56193/events", "html_url": "https://github.com/rust-lang/rust/issues/56193", "id": 383966894, "node_id": "MDU6SXNzdWUzODM5NjY4OTQ=", "number": 56193, "title": "Implement `CoerceUnsized` and `DispatchFromDyn` for `ManuallyDrop`", "user": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-24T07:24:00Z", "updated_at": "2020-06-23T21:09:21Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Add the following impls:\r\n\r\n```rust\r\nimpl<T: ?Sized, U: ?Sized> CoerceUnsized<ManuallyDrop<T>> for ManuallyDrop<U>\r\nwhere\r\n    T: CoerceUnsized<U>,\r\n{}\r\n\r\nimpl<T: ?Sized, U: ?Sized> DispatchFromDyn<ManuallyDrop<T>> for ManuallyDrop<U>\r\nwhere\r\n    T: DispatchFromDyn<U>,\r\n{}\r\n```\r\n\r\nAnd add a test case that is allowed by these impls.\r\n\r\nThis will allow `ManuallyDrop<Box<T>>` to be unsized to `ManuallyDrop<Box<dyn Trait>>`, and allow `ManuallyDrop<Box<Self>>` to be used as a trait-object-safe method receiver with the `arbitrary_self_types` feature. And similarly for other pointer types besides `Box`.\r\n\r\nExample test case:\r\n\r\n```rust\r\ntrait Trait {\r\n    fn foo(self: ManuallyDrop<Box<Self>>) -> i32;\r\n}\r\n\r\nimpl Trait for i32 {\r\n    fn foo(self: ManuallyDrop<Box<Self>>) -> i32 {\r\n        self\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let x = ManuallyDrop::new(Box::new(5i32)) as ManuallyDrop<Box<dyn Trait>>;\r\n    assert_eq!(x.foo(), 5);\r\n}\r\n```\r\n\r\nThis affects stable code, by allowing unsize coercions that were not previously allowed (e.g. from `ManuallyDrop<Box<T>` to `ManuallyDrop<Box<U>>` where `T: Unsize<U>`), so I guess it requires an FCP.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56193/timeline", "performed_via_github_app": null, "state_reason": null}