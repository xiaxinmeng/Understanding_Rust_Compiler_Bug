{"url": "https://api.github.com/repos/rust-lang/rust/issues/63172", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63172/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63172/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63172/events", "html_url": "https://github.com/rust-lang/rust/issues/63172", "id": 475321948, "node_id": "MDU6SXNzdWU0NzUzMjE5NDg=", "number": 63172, "title": "TcpListener does not listen any requests", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-31T19:39:19Z", "updated_at": "2019-08-02T16:14:06Z", "closed_at": "2019-08-01T11:38:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wrote this code for build a simple TCP server:\r\n```rust\r\nuse std::io::prelude::*;\r\nuse std::net::{TcpListener, TcpStream};\r\n\r\nfn main() {\r\n    let server = TcpListener::bind(\"127.0.0.1:5600\").unwrap();\r\n\t\r\n    println!(\"Server is working.\");\r\n\t\r\n    for stream in server.incoming() {\r\n\tlet stream = stream.unwrap();\r\n\t\t\r\n\tprintln!(\"Connection established.\");\r\n\t\t\r\n\thandle(stream);\r\n    }\r\n}\r\n\r\nfn handle(mut stream: TcpStream) {\r\n     let mut buffer = [0; 512];\r\n\t\r\n    stream.read(&mut buffer).unwrap();\r\n\t\r\n    let request = String::from_utf8_lossy(&buffer[..]);\r\n\t\r\n    println!(\"Received: {}\", request);\r\n\t\r\n    stream.write(request.as_bytes()).unwrap();\r\n\t\r\n    stream.flush().unwrap();\r\n\t\r\n    let response = &request;\r\n\t\r\n    println!(\"Sent: {}\", response);\r\n}\r\n```\r\nand tested it with this code: \r\n```rust\r\nuse std::io::prelude::*;\r\nuse std::net::TcpStream;\r\n\r\nfn main() {\r\n    let mut stream = TcpStream::connect(\"127.0.0.1:5600\").unwrap();\r\n\t\r\n    let request = \"Hello!\";\r\n\r\n    stream.write(request.as_bytes()).unwrap();\r\n\t\r\n    println!(\"Sent: {}\", request);\r\n\t\r\n    let mut buffer = [0; 512];\r\n\t\r\n    stream.read(&mut buffer).unwrap();\r\n\t\r\n    let response = String::from_utf8_lossy(&buffer[..]);\r\n\t\r\n    println!(\"Received: {}\", response);\r\n}\r\n```\r\nThe result at client-side:\r\n```\r\nSent: Hello!\r\n```\r\nat server-side:\r\n```\r\nServer is working.\r\n```\r\nand an infinite wait at both results.\r\n\r\nMy version:\r\n```\r\nrustc 1.38.0-nightly (dddb7fca0 2019-07-30)\r\nbinary: rustc\r\ncommit-hash: dddb7fca09dc817ba275602b950bb81a9032fb6d\r\ncommit-date: 2019-07-30\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.38.0-nightly\r\nLLVM version: 9.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63172/timeline", "performed_via_github_app": null, "state_reason": "completed"}