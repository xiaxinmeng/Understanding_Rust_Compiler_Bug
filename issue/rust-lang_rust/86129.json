{"url": "https://api.github.com/repos/rust-lang/rust/issues/86129", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86129/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86129/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86129/events", "html_url": "https://github.com/rust-lang/rust/issues/86129", "id": 914417685, "node_id": "MDU6SXNzdWU5MTQ0MTc2ODU=", "number": 86129, "title": "Allow the import of type-associated consts", "user": {"login": "Ben-Lichtman", "id": 15235153, "node_id": "MDQ6VXNlcjE1MjM1MTUz", "avatar_url": "https://avatars.githubusercontent.com/u/15235153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ben-Lichtman", "html_url": "https://github.com/Ben-Lichtman", "followers_url": "https://api.github.com/users/Ben-Lichtman/followers", "following_url": "https://api.github.com/users/Ben-Lichtman/following{/other_user}", "gists_url": "https://api.github.com/users/Ben-Lichtman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ben-Lichtman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ben-Lichtman/subscriptions", "organizations_url": "https://api.github.com/users/Ben-Lichtman/orgs", "repos_url": "https://api.github.com/users/Ben-Lichtman/repos", "events_url": "https://api.github.com/users/Ben-Lichtman/events{/privacy}", "received_events_url": "https://api.github.com/users/Ben-Lichtman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-06-08T06:28:57Z", "updated_at": "2021-06-08T10:09:59Z", "closed_at": "2021-06-08T09:30:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently there is no way to bring an associated const for a type into the current scope in the same way as pretty much anything else that is namespaced in rust can be.\r\n\r\n- Enum variants may be brought into scope (such as Some, None, Ok and Err)\r\n- consts may be brought into scope from modules\r\n\r\nThis poses an issue for things like bindings libraries where the library consumer does not have much choice over the naming of consts or other variables.\r\n\r\nThe following code should compile:\r\n\r\n```rust\r\nstruct VeryLongNamedFlagsStruct(u32);\r\n\r\nimpl VeryLongNamedFlagsStruct {\r\n    pub const SUPER_LONG_NAMED_CONST: Self = Self(5);\r\n}\r\n\r\nuse VeryLongNamedFlagsStruct::SUPER_LONG_NAMED_CONST;\r\n\r\nfn main() {\r\n    // Using const name to avoid having to type very long type name also\r\n    let x = SUPER_LONG_NAMED_CONST;\r\n    \r\n    println!(\"{}\", x.0);\r\n}\r\n```\r\n\r\nCurrenly this code fails to compile with: \r\n\r\n> `VeryLongNamedFlagsStruct` is a struct, not a module\r\n\r\nThis has resulted in ergonomics issues for the windows-rs crate: https://github.com/microsoft/windows-rs/issues/835 - this crate has MANY \"flag\" type structs with consts, and these must be placed in the parent module to the type definition, resulting in more challenging library usage since each one of these consts must be both bound-to using the compile-time codegen, and brought into scope to be used in consuming libraries.\r\n\r\nI propose allowing the import of assocated consts.", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86129/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86129/timeline", "performed_via_github_app": null, "state_reason": "completed"}