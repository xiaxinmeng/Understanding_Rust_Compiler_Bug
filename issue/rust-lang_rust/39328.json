{"url": "https://api.github.com/repos/rust-lang/rust/issues/39328", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39328/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39328/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39328/events", "html_url": "https://github.com/rust-lang/rust/issues/39328", "id": 203508676, "node_id": "MDU6SXNzdWUyMDM1MDg2NzY=", "number": 39328, "title": "Allow crates defining type T to implement external traits for [T]", "user": {"login": "rnewman", "id": 91722, "node_id": "MDQ6VXNlcjkxNzIy", "avatar_url": "https://avatars.githubusercontent.com/u/91722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rnewman", "html_url": "https://github.com/rnewman", "followers_url": "https://api.github.com/users/rnewman/followers", "following_url": "https://api.github.com/users/rnewman/following{/other_user}", "gists_url": "https://api.github.com/users/rnewman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rnewman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rnewman/subscriptions", "organizations_url": "https://api.github.com/users/rnewman/orgs", "repos_url": "https://api.github.com/users/rnewman/repos", "events_url": "https://api.github.com/users/rnewman/events{/privacy}", "received_events_url": "https://api.github.com/users/rnewman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-26T22:31:18Z", "updated_at": "2017-05-20T02:43:48Z", "closed_at": "2017-05-20T02:43:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Scenario:\r\n\r\n* A third-party library defines types that work with slices of other libraries' types.\r\n* It [uses `format` all over the place with those types](https://github.com/Marwes/combine/blob/b156a7c/src/primitives.rs#L159https://github.com/Marwes/combine/blob/b156a7c/src/primitives.rs#L159).\r\n* There is no derived implementation of `Display` for `[T]`.\r\n\r\nExpected:\r\n* I can implement `Display` for `[T]`, just as I can for `T`, allowing third-party libraries to call Display-requiring methods with both slices and individual values.\r\n\r\nActual:\r\n* `[T]` is a type that isn't defined in my crate. `Display` is a trait that isn't defined in my crate. The compiler refuses to allow me to implement it.\r\n\r\nExample playground:\r\n\r\nhttps://is.gd/lLsx57https://is.gd/lLsx57\r\n\r\nThe stated workaround (from IRC; thanks talchas) is to define some kind of wrapper type, `MySlice`, that I own. This wrapper contains a reference to the real slice, and implements every necessary trait as a passthrough to the slice. That fixes the ownership of the type, allowing implementation of `Display`.\r\n\r\nThis workaround presupposes that it's possible to get the third-party library to accept a `MySlice` wherever it calls arbitrary traits, rather than it getting a `&[T]` out of something else. I haven't assessed whether that's feasible for something like `combine`, which naturally ends up taking sub-slices of inputs.", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39328/timeline", "performed_via_github_app": null, "state_reason": "completed"}