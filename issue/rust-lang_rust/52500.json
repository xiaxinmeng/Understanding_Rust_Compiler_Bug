{"url": "https://api.github.com/repos/rust-lang/rust/issues/52500", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52500/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52500/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52500/events", "html_url": "https://github.com/rust-lang/rust/issues/52500", "id": 342418062, "node_id": "MDU6SXNzdWUzNDI0MTgwNjI=", "number": 52500, "title": "Compiler panic on removing `extern crate winit;` while testing 2018 edition", "user": {"login": "icefoxen", "id": 1335133, "node_id": "MDQ6VXNlcjEzMzUxMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1335133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/icefoxen", "html_url": "https://github.com/icefoxen", "followers_url": "https://api.github.com/users/icefoxen/followers", "following_url": "https://api.github.com/users/icefoxen/following{/other_user}", "gists_url": "https://api.github.com/users/icefoxen/gists{/gist_id}", "starred_url": "https://api.github.com/users/icefoxen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/icefoxen/subscriptions", "organizations_url": "https://api.github.com/users/icefoxen/orgs", "repos_url": "https://api.github.com/users/icefoxen/repos", "events_url": "https://api.github.com/users/icefoxen/events{/privacy}", "received_events_url": "https://api.github.com/users/icefoxen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-18T17:15:12Z", "updated_at": "2020-03-10T09:20:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I managed to make the compiler panic while testing out the 2018 edition on the `ggez` crate.  Full code is available in this branch: https://github.com/icefoxen/ggez/tree/devel-2018  The codebase is relatively large, I'll try to make a more minimal reproduction.\r\n\r\n# To trigger\r\n\r\nComment out `extern crate winit;` on line 46 of `src/lib.rs` and try to build via `cargo +nightly build`.  All other non-macro-using crates have had their `extern crate` declarations removed and it works fine without them.\r\n\r\n# Meta\r\n\r\nFull error text:\r\n\r\n```\r\nerror: internal compiler error: no type-dependent def for method call] 189/190: ggez                       \r\n   --> src/event.rs:191:58\r\n    |\r\n191 |                         state.key_up_event(ctx, keycode, modifiers.into());\r\n    |                                                          ^^^^^^^^^^^^^^^^\r\n\r\nthread 'main' panicked at 'called `Option::unwrap()` on a `None` value', libcore/option.rs:345:21\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\nerror: aborting due to previous error\r\n\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.29.0-nightly (4f3c7a472 2018-07-17) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `ggez`.\r\n```\r\n\r\n`rustc --version --verbose`:\r\n\r\n```\r\nrustc 1.29.0-nightly (4f3c7a472 2018-07-17)\r\nbinary: rustc\r\ncommit-hash: 4f3c7a472b77ba3f3afbc12d004b9d1bbcee7fe7\r\ncommit-date: 2018-07-17\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.29.0-nightly\r\nLLVM version: 7.0\r\n```\r\n\r\nBacktrace:\r\n\r\n```\r\nthread 'main' panicked at 'called `Option::unwrap()` on a `None` value', libcore/option.rs:345:21\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:479\r\n   6: std::panicking::continue_panic_fmt\r\n             at libstd/panicking.rs:390\r\n   7: rust_begin_unwind\r\n             at libstd/panicking.rs:325\r\n   8: core::panicking::panic_fmt\r\n             at libcore/panicking.rs:77\r\n   9: core::panicking::panic\r\n             at libcore/panicking.rs:52\r\n  10: <rustc_privacy::NamePrivacyVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_pat\r\n  11: rustc::hir::intravisit::walk_expr\r\n  12: rustc::hir::intravisit::walk_expr\r\n  13: <rustc_privacy::NamePrivacyVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_nested_body\r\n  14: rustc::hir::intravisit::walk_impl_item\r\n  15: <rustc_privacy::NamePrivacyVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_impl_item\r\n  16: rustc::hir::intravisit::walk_impl_item_ref\r\n  17: rustc::hir::intravisit::walk_item\r\n  18: <rustc_privacy::NamePrivacyVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_item\r\n  19: rustc::hir::intravisit::walk_item\r\n  20: <rustc_privacy::NamePrivacyVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_item\r\n  21: rustc_privacy::privacy_access_levels\r\n  22: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::privacy_access_levels<'tcx>>::compute\r\n  23: rustc::ty::context::tls::with_context\r\n  24: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  25: rustc::ty::context::tls::with_related_context\r\n  26: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  27: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  28: rustc::util::common::time\r\n  29: rustc::ty::context::tls::enter_context\r\n  30: <std::thread::local::LocalKey<T>>::with\r\n  31: rustc::ty::context::TyCtxt::create_and_enter\r\n  32: rustc_driver::driver::compile_input\r\n  33: rustc_driver::run_compiler_with_pool\r\n  34: <scoped_tls::ScopedKey<T>>::set\r\n  35: <scoped_tls::ScopedKey<T>>::set\r\n  36: syntax::with_globals\r\n  37: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  38: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:106\r\n  39: rustc_driver::run\r\n  40: rustc_driver::main\r\n  41: std::rt::lang_start::{{closure}}\r\n  42: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  43: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:106\r\n  44: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:392\r\n             at libstd/rt.rs:58\r\n  45: main\r\n  46: __libc_start_main\r\n  47: <unknown>\r\nquery stack during panic:\r\n#0 [privacy_access_levels] privacy access levels\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nerror: internal compiler error: unexpected panic\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52500/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52500/timeline", "performed_via_github_app": null, "state_reason": null}