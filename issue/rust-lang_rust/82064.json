{"url": "https://api.github.com/repos/rust-lang/rust/issues/82064", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82064/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82064/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82064/events", "html_url": "https://github.com/rust-lang/rust/issues/82064", "id": 807785812, "node_id": "MDU6SXNzdWU4MDc3ODU4MTI=", "number": 82064, "title": "Move collection of items accessible directly or through reexports from `rustc_privacy` to `rustc_resolve`", "user": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 66893153, "node_id": "MDU6TGFiZWw2Njg5MzE1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-visibility", "name": "A-visibility", "color": "f7e101", "default": false, "description": "Area: visibility/privacy modifiers such as `pub`"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": {"login": "lambinoo", "id": 57440804, "node_id": "MDQ6VXNlcjU3NDQwODA0", "avatar_url": "https://avatars.githubusercontent.com/u/57440804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambinoo", "html_url": "https://github.com/lambinoo", "followers_url": "https://api.github.com/users/lambinoo/followers", "following_url": "https://api.github.com/users/lambinoo/following{/other_user}", "gists_url": "https://api.github.com/users/lambinoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambinoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambinoo/subscriptions", "organizations_url": "https://api.github.com/users/lambinoo/orgs", "repos_url": "https://api.github.com/users/lambinoo/repos", "events_url": "https://api.github.com/users/lambinoo/events{/privacy}", "received_events_url": "https://api.github.com/users/lambinoo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lambinoo", "id": 57440804, "node_id": "MDQ6VXNlcjU3NDQwODA0", "avatar_url": "https://avatars.githubusercontent.com/u/57440804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambinoo", "html_url": "https://github.com/lambinoo", "followers_url": "https://api.github.com/users/lambinoo/followers", "following_url": "https://api.github.com/users/lambinoo/following{/other_user}", "gists_url": "https://api.github.com/users/lambinoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambinoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambinoo/subscriptions", "organizations_url": "https://api.github.com/users/lambinoo/orgs", "repos_url": "https://api.github.com/users/lambinoo/repos", "events_url": "https://api.github.com/users/lambinoo/events{/privacy}", "received_events_url": "https://api.github.com/users/lambinoo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2021-02-13T17:00:47Z", "updated_at": "2022-01-12T06:45:54Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Directly accessible item `AccessLevel::Public` is an item with a fully public path from a crate root making it nameable from other crates.\r\n`AccessLevel::Exported` item is an item with a fully public chain of reexports or modules making it nameable from other crates.\r\nAll such items can be found either by visiting the crate repeatedly and marking new and new items as `Public`/`Exported` until no items can be marked anymore, or doing the same thing by maintaining an item queue and pushing/popping things to/from it for processing until the queue is empty.\r\n\r\nSets of directly accessible and reexported items are build in `rustc_privacy` (`EmbargoVisitor`).\r\nThe problem is that information about reexport chains is lost at that point, so the produced sets do not contain all the necessary items.\r\n`fn update_visibility_of_intermediate_use_statements` hack tries to mitigate that issue a bit, but it doesn't work correctly in presence of glob imports (see PR https://github.com/rust-lang/rust/pull/57922 for more details).\r\n\r\nWhat we need to do is to move the logic for determining `AccessLevel::{Public,Exported}`s to `rustc_resolve` where all the information about reexport chains is still available.\r\nThat logic should run either as a part of `fn finalize_imports` or after it.\r\nIt should build a table `NodeId` -> `AccessLevel` in `Resolver`, and that table should later move to `struct ResolverOutputs` and then to `GlobalCtxt` like all other `ResolverOutputs` fields.\r\n\r\nLater in `rustc_privacy` the resolver-based table should be used as a seed for `EmbargoVisitor` which will then assign type-based accessibility levels like `AccessLevel::Reachable` etc.\r\n`fn update_visibility_of_intermediate_use_statements` will need to be removed.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"lambinoo\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82064/timeline", "performed_via_github_app": null, "state_reason": null}