{"url": "https://api.github.com/repos/rust-lang/rust/issues/73328", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73328/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73328/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73328/events", "html_url": "https://github.com/rust-lang/rust/issues/73328", "id": 638222147, "node_id": "MDU6SXNzdWU2MzgyMjIxNDc=", "number": 73328, "title": "Document guarantees (or lack thereof) regarding sign, quietness, and payload of `NaN`s", "user": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 2139259423, "node_id": "MDU6TGFiZWwyMTM5MjU5NDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-floating-point", "name": "A-floating-point", "color": "f7e101", "default": false, "description": "Area: Floating point numbers and arithmetic"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 40, "created_at": "2020-06-13T20:00:34Z", "updated_at": "2021-10-30T01:15:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Several issues have been filed about surprising behavior of NaNs.\r\n\r\n- #55131, in which the sign of the result of `0.0 / 0.0` changed depending on whether the right-hand side came from a function argument or a literal.\r\n- #73288/#46948, in which the result of `f32::from_bits(x).to_bits()` was not always equal to `x`.\r\r\n\r\nThe root cause of these issues is that LLVM [does not guarantee that NaN payload bits are preserved](https://reviews.llvm.org/D54353). Empirically, this applies to the signaling/quiet bit as well as (surprisingly) the sign bit. At least one LLVM developer  seems [open to changing this](http://lists.llvm.org/pipermail/llvm-dev/2018-November/127670.html), although doing so may not be easy.\r\n\r\nUnless we are prepared to guarantee more, we should do a better job of documenting that, besides having all 1s in the exponent and a non-zero significand, the bitwise value of a NaN is unspecified and may change at any point during program execution. In particular, the [`from_bits`](https://doc.rust-lang.org/std/primitive.f32.html#method.from_bits) method on `f32` and `f64` types currently states:\r\n\r\n> This is currently identical to transmute::<u32, f32>(v) on all platforms.\r\n\r\nand \r\n\r\n> this implementation favors preserving the exact bits. This means that any payloads encoded in NaNs will be preserved\r\n\r\nThese statements are misleading and should be changed.\r\n\r\nWe may also want to add documentation to `{f32,f64}::NAN` to this effect, see https://github.com/rust-lang/rust/issues/52897#issuecomment-496672336.\r\n\r\ncc #10186?\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73328/reactions", "total_count": 5, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 2, "heart": 0, "rocket": 0, "eyes": 3}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73328/timeline", "performed_via_github_app": null, "state_reason": null}