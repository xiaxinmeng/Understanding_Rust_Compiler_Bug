{"url": "https://api.github.com/repos/rust-lang/rust/issues/3430", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/3430/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/3430/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/3430/events", "html_url": "https://github.com/rust-lang/rust/issues/3430", "id": 6731418, "node_id": "MDU6SXNzdWU2NzMxNDE4", "number": 3430, "title": "path::normalize and //", "user": {"login": "jesse99", "id": 425055, "node_id": "MDQ6VXNlcjQyNTA1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/425055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jesse99", "html_url": "https://github.com/jesse99", "followers_url": "https://api.github.com/users/jesse99/followers", "following_url": "https://api.github.com/users/jesse99/following{/other_user}", "gists_url": "https://api.github.com/users/jesse99/gists{/gist_id}", "starred_url": "https://api.github.com/users/jesse99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jesse99/subscriptions", "organizations_url": "https://api.github.com/users/jesse99/orgs", "repos_url": "https://api.github.com/users/jesse99/repos", "events_url": "https://api.github.com/users/jesse99/events{/privacy}", "received_events_url": "https://api.github.com/users/jesse99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-09-08T13:56:58Z", "updated_at": "2012-09-14T02:53:42Z", "closed_at": "2012-09-14T02:53:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Posix pahs like \"/foo//bar\" should be normalized to \"/foo/bar\". (WIndows likely has similar issues). Here is a test case:\n\n```\n// rustc --test normalize.rs && ./normalize\nuse std;\nuse Path = path::Path;\n\nmacro_rules! assert_equal (($expected: expr, $actual: expr) => \n{\n    let a = $actual;        // only evaluate the expressions once\n    let e = $expected;\n    if a != e\n    {\n        fail fmt!(\"Found '%?', but expected '%?'\", a, e);\n    }\n})\n\n// TODO: add a windows version of this\n#[cfg(unix)]\nfn root() -> Path\n{\n    path::from_str(~\"/tmp/\")\n}\n\n#[test]\nfn tester()\n{\n    let path = root();\n    let path = path.push(\"/hmm\");\n    let path = path.normalize();\n    assert_equal!(~\"/tmp/hmm\", path.to_str());\n}\n```\n", "closed_by": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/3430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/3430/timeline", "performed_via_github_app": null, "state_reason": "completed"}