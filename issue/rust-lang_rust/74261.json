{"url": "https://api.github.com/repos/rust-lang/rust/issues/74261", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74261/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74261/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74261/events", "html_url": "https://github.com/rust-lang/rust/issues/74261", "id": 655357549, "node_id": "MDU6SXNzdWU2NTUzNTc1NDk=", "number": 74261, "title": "ICE on closures of trait bounds with indefinite lifetime parameters", "user": {"login": "hjgz", "id": 68181373, "node_id": "MDQ6VXNlcjY4MTgxMzcz", "avatar_url": "https://avatars.githubusercontent.com/u/68181373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjgz", "html_url": "https://github.com/hjgz", "followers_url": "https://api.github.com/users/hjgz/followers", "following_url": "https://api.github.com/users/hjgz/following{/other_user}", "gists_url": "https://api.github.com/users/hjgz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjgz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjgz/subscriptions", "organizations_url": "https://api.github.com/users/hjgz/orgs", "repos_url": "https://api.github.com/users/hjgz/repos", "events_url": "https://api.github.com/users/hjgz/events{/privacy}", "received_events_url": "https://api.github.com/users/hjgz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-12T08:37:51Z", "updated_at": "2021-11-06T04:15:20Z", "closed_at": "2021-11-06T04:15:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nIt seems that a trait bound like `for<'a> FnOnce(<TT as A<'a>>::B)`, when applied to a closure, will cause an internal compiler error.\r\n\r\n### Code\r\n\r\n```Rust\r\nuse std::marker::PhantomData;\r\n\r\ntrait A<'a> {\r\n    type B;\r\n    fn b(self) -> Self::B;\r\n}\r\n\r\nstruct T;\r\nstruct S<'a>(PhantomData<&'a ()>);\r\n\r\nimpl<'a> A<'a> for T {\r\n    type B = S<'a>;\r\n    fn b(self) -> Self::B {\r\n        S(PhantomData)\r\n    }\r\n}\r\n\r\nfn s<TT, F>(t: TT, f: F) \r\nwhere \r\n    TT: for<'a> A<'a>, \r\n    F: for<'a> FnOnce(<TT as A<'a>>::B)\r\n{\r\n    f(t.b());\r\n}\r\n\r\nfn main() {\r\n    s(T, |_| {});\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\nTested on the playground with stable, beta and nightly versions:\r\n```\r\nrustc 1.44.1 (c7087fe00 2020-06-17) running on x86_64-unknown-linux-gnu\r\nrustc 1.45.0-beta.3 (8196407f0 2020-06-27) running on x86_64-unknown-linux-gnu\r\nrustc 1.46.0-nightly (346aec9b0 2020-07-11) running on x86_64-unknown-linux-gnu\r\n```\r\n\r\nThis error also occurs on my local pc.\r\n\r\n### Error output\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror: internal compiler error: src/librustc_trait_selection/traits/codegen/mod.rs:62:17: Encountered error `OutputTypeParameterMismatch(Binder(<[closure@src/main.rs:27:10: 27:16] as std::ops::FnOnce<(<T as A<'_>>::B,)>>), Binder(<[closure@src/main.rs:27:10: 27:16] as std::ops::FnOnce<(S,)>>), Sorts(ExpectedFound { expected: S, found: <T as A<'_>>::B }))` selecting `Binder(<[closure@src/main.rs:27:10: 27:16] as std::ops::FnOnce<(S,)>>)` during codegen\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:916:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.46.0-nightly (346aec9b0 2020-07-11) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror: internal compiler error: src/librustc_trait_selection/traits/codegen/mod.rs:62:17: Encountered error `OutputTypeParameterMismatch(Binder(<[closure@src/main.rs:27:10: 27:16] as std::ops::FnOnce<(<T as A<'_>>::B,)>>), Binder(<[closure@src/main.rs:27:10: 27:16] as std::ops::FnOnce<(S,)>>), Sorts(ExpectedFound { expected: S, found: <T as A<'_>>::B }))` selecting `Binder(<[closure@src/main.rs:27:10: 27:16] as std::ops::FnOnce<(S,)>>)` during codegen\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:916:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1076\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1537\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:217\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:530\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc_middle::ty::context::tls::with_opt\r\n  18: rustc_middle::util::bug::opt_span_bug_fmt\r\n  19: rustc_middle::util::bug::bug_fmt\r\n  20: rustc_infer::infer::InferCtxtBuilder::enter\r\n  21: rustc_trait_selection::traits::codegen::codegen_fulfill_obligation\r\n  22: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::codegen_fulfill_obligation>::compute\r\n  23: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  24: rustc_data_structures::stack::ensure_sufficient_stack\r\n  25: rustc_query_system::query::plumbing::get_query_impl\r\n  26: rustc_ty::instance::resolve_instance\r\n  27: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::resolve_instance>::compute\r\n  28: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  29: rustc_data_structures::stack::ensure_sufficient_stack\r\n  30: rustc_query_system::query::plumbing::get_query_impl\r\n  31: rustc_middle::ty::instance::Instance::resolve\r\n  32: <rustc_mir::monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor>::visit_terminator\r\n  33: rustc_mir::monomorphize::collector::collect_neighbours\r\n  34: rustc_mir::monomorphize::collector::collect_items_rec\r\n  35: rustc_mir::monomorphize::collector::collect_items_rec\r\n  36: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  37: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  38: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  39: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::collect_and_partition_mono_items>::compute\r\n  40: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  41: rustc_query_system::query::plumbing::get_query_impl\r\n  42: rustc_codegen_ssa::base::codegen_crate\r\n  43: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  44: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  45: rustc_interface::passes::start_codegen\r\n  46: rustc_middle::ty::context::tls::enter_global\r\n  47: rustc_interface::queries::Queries::ongoing_codegen\r\n  48: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  49: rustc_span::with_source_map\r\n  50: rustc_interface::interface::create_compiler_and_run\r\n  51: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.46.0-nightly (346aec9b0 2020-07-11) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [codegen_fulfill_obligation] checking if `std::ops::FnOnce` fulfills its obligations\r\n#1 [resolve_instance] resolving instance `<[closure@src/main.rs:27:10: 27:16] as std::ops::FnOnce<(S,)>>::call_once`\r\n#2 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74261/timeline", "performed_via_github_app": null, "state_reason": "completed"}