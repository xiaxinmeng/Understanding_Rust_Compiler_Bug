{"url": "https://api.github.com/repos/rust-lang/rust/issues/17770", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/17770/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/17770/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/17770/events", "html_url": "https://github.com/rust-lang/rust/issues/17770", "id": 44886670, "node_id": "MDU6SXNzdWU0NDg4NjY3MA==", "number": 17770, "title": "Docs somewhat unclear regarding C-like enum discriminators", "user": {"login": "voithos", "id": 744228, "node_id": "MDQ6VXNlcjc0NDIyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/744228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/voithos", "html_url": "https://github.com/voithos", "followers_url": "https://api.github.com/users/voithos/followers", "following_url": "https://api.github.com/users/voithos/following{/other_user}", "gists_url": "https://api.github.com/users/voithos/gists{/gist_id}", "starred_url": "https://api.github.com/users/voithos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/voithos/subscriptions", "organizations_url": "https://api.github.com/users/voithos/orgs", "repos_url": "https://api.github.com/users/voithos/repos", "events_url": "https://api.github.com/users/voithos/events{/privacy}", "received_events_url": "https://api.github.com/users/voithos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-10-04T15:59:04Z", "updated_at": "2015-02-02T09:51:34Z", "closed_at": "2015-02-02T09:51:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [reference](http://doc.rust-lang.org/reference.html) states pretty clearly that the memory layout of `struct`s is undefined by default, and presumably the same thing can be said of complex enum variants.\n\nHowever, for C-like enums (simple enums which correspond to some integer type), it doesn't seem to be clear whether implicit discriminators are well defined. [One resource](https://gist.github.com/brson/9dec4195a88066fa42e6#enumerations) (no longer in the actual docs, it seems) says that they _are_ well defined (starts with 0, increases by 1 for each variant). But I couldn't find any other docs that comment on this (the reference _does_ state that an enum with `#[repr(C)]` will have the default C ABI enum size - but also that enum representation in C is undefined? Is that referring to the implicit discriminators?).\n\nIn essence, can we assume that implicit discriminators start with 0 and increase by 1 per variant, or is this never an assumption we can make?\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/17770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/17770/timeline", "performed_via_github_app": null, "state_reason": "completed"}