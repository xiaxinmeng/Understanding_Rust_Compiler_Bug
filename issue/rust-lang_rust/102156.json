{"url": "https://api.github.com/repos/rust-lang/rust/issues/102156", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102156/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102156/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102156/events", "html_url": "https://github.com/rust-lang/rust/issues/102156", "id": 1383028634, "node_id": "I_kwDOAAsO6M5Sb1ea", "number": 102156, "title": "ICE: None in compiler/rustc_passes/src/check_const.rs", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2022-09-22T21:20:25Z", "updated_at": "2022-10-01T06:37:17Z", "closed_at": "2022-10-01T06:37:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\nhow to create smaller examples.\n\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\n\n-->\n\n### Code\ncode from rustc_codegen_cranelift/build_sysroot/sysroot_src/library/alloc/src/boxed.rs\n```Rust\n#![feature(allocator_api)]\n\n#![feature(const_trait_impl)]\nuse core::convert::{From, TryFrom};\nuse std::pin::Pin;\nuse std::alloc::Allocator;\nimpl<T: ?Sized, A: Allocator> const From<Box<T, A>> for Pin<Box<T, A>>\nwhere\n    A: 'static,\n{}\n\npub fn main() {}\n\n```\n\n\n### Meta\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\n\n`rustc --version --verbose`:\n```\nrustc 1.66.0-nightly (e7119a030 2022-09-22)\nbinary: rustc\ncommit-hash: e7119a0300b87a3d670408ee8e847c6821b3ae80\ncommit-date: 2022-09-22\nhost: x86_64-unknown-linux-gnu\nrelease: 1.66.0-nightly\nLLVM version: 15.0.0\n```\n\n### Error output\n\n```\nerror[E0433]: failed to resolve: maybe a missing crate `core`?\n --> ./alloc/src/boxed.rs:4:5\n  |\n4 | use core::convert::{From, TryFrom};\n  |     ^^^^ maybe a missing crate `core`?\n  |\n  = help: consider adding `extern crate core` to use the `core` crate\n```\n\n<!--\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\n-->\n<details><summary><strong>Backtrace</strong></summary>\n<p>\n\n```\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler/rustc_passes/src/check_const.rs:202:26\nstack backtrace:\n   0:     0x7fe48be4aff0 - std::backtrace_rs::backtrace::libunwind::trace::hf4e04b2e4313927b\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   1:     0x7fe48be4aff0 - std::backtrace_rs::backtrace::trace_unsynchronized::h2771cf061d4680d1\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   2:     0x7fe48be4aff0 - std::sys_common::backtrace::_print_fmt::h2e413508900ead1c\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/std/src/sys_common/backtrace.rs:66:5\n   3:     0x7fe48be4aff0 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hb886319318f6b897\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/std/src/sys_common/backtrace.rs:45:22\n   4:     0x7fe48bea5e1e - core::fmt::write::hd7350cb51945e18c\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/core/src/fmt/mod.rs:1202:17\n   5:     0x7fe48be3baf5 - std::io::Write::write_fmt::ha7bc763f922fc662\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/std/src/io/mod.rs:1679:15\n   6:     0x7fe48be4dd73 - std::sys_common::backtrace::_print::h7ad0003e1b032609\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/std/src/sys_common/backtrace.rs:48:5\n   7:     0x7fe48be4dd73 - std::sys_common::backtrace::print::h6f247b59322d4826\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/std/src/sys_common/backtrace.rs:35:9\n   8:     0x7fe48be4dd73 - std::panicking::default_hook::{{closure}}::h71a394bfa368bc38\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/std/src/panicking.rs:267:22\n   9:     0x7fe48be4da5f - std::panicking::default_hook::h353829743ca9a29f\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/std/src/panicking.rs:286:9\n  10:     0x7fe48e663ef1 - <rustc_driver[7857f239df018eab]::DEFAULT_HOOK::{closure#0}::{closure#0} as core[cde1ce9e21f08391]::ops::function::FnOnce<(&core[cde1ce9e21f08391]::panic::panic_info::PanicInfo,)>>::call_once::{shim:vtable#0}\n  11:     0x7fe48be4e5ab - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::h5c7ac9f6a4be07e2\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/alloc/src/boxed.rs:1954:9\n  12:     0x7fe48be4e5ab - std::panicking::rust_panic_with_hook::h6ad4960c15699d95\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/std/src/panicking.rs:673:13\n  13:     0x7fe48be4e3c1 - std::panicking::begin_panic_handler::{{closure}}::h21fce9af2d027685\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/std/src/panicking.rs:558:13\n  14:     0x7fe48be4b49c - std::sys_common::backtrace::__rust_end_short_backtrace::h218f1ce3892987af\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/std/src/sys_common/backtrace.rs:138:18\n  15:     0x7fe48be4e122 - rust_begin_unwind\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/std/src/panicking.rs:556:5\n  16:     0x7fe48bea29f3 - core::panicking::panic_fmt::h06680f628054808f\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/core/src/panicking.rs:142:14\n  17:     0x7fe48bea283d - core::panicking::panic::he9930d5c71b64ea9\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/core/src/panicking.rs:48:5\n  18:     0x7fe48d967b48 - <rustc_middle[33a3dc3ec8228005]::hir::map::Map>::visit_item_likes_in_module::<rustc_passes[de3676249625e36f]::check_const::CheckConstVisitor>\n  19:     0x7fe48d967a1c - rustc_passes[de3676249625e36f]::check_const::check_mod_const_bodies\n  20:     0x7fe48d602996 - rustc_query_system[d3b2657d85679091]::query::plumbing::try_execute_query::<rustc_query_impl[542bbd4b66bfb449]::plumbing::QueryCtxt, rustc_query_system[d3b2657d85679091]::query::caches::DefaultCache<rustc_span[4a0a9e8ceb64f0f4]::def_id::LocalDefId, ()>>\n  21:     0x7fe48e0e93d9 - rustc_query_system[d3b2657d85679091]::query::plumbing::get_query::<rustc_query_impl[542bbd4b66bfb449]::queries::check_mod_const_bodies, rustc_query_impl[542bbd4b66bfb449]::plumbing::QueryCtxt>\n  22:     0x7fe48da432ea - <core[cde1ce9e21f08391]::panic::unwind_safe::AssertUnwindSafe<rustc_data_structures[bf19c7e493ef6519]::sync::par_for_each_in<&[rustc_span[4a0a9e8ceb64f0f4]::def_id::LocalDefId], <rustc_middle[33a3dc3ec8228005]::hir::map::Map>::par_for_each_module<rustc_interface[f2560d97934cc6f6]::passes::analysis::{closure#0}::{closure#1}::{closure#0}>::{closure#0}>::{closure#0}::{closure#0}> as core[cde1ce9e21f08391]::ops::function::FnOnce<()>>::call_once\n  23:     0x7fe48da42c48 - rustc_data_structures[bf19c7e493ef6519]::sync::par_for_each_in::<&[rustc_span[4a0a9e8ceb64f0f4]::def_id::LocalDefId], <rustc_middle[33a3dc3ec8228005]::hir::map::Map>::par_for_each_module<rustc_interface[f2560d97934cc6f6]::passes::analysis::{closure#0}::{closure#1}::{closure#0}>::{closure#0}>\n  24:     0x7fe48da42ad2 - <core[cde1ce9e21f08391]::panic::unwind_safe::AssertUnwindSafe<rustc_interface[f2560d97934cc6f6]::passes::analysis::{closure#0}::{closure#1}> as core[cde1ce9e21f08391]::ops::function::FnOnce<()>>::call_once\n  25:     0x7fe48da420d9 - <rustc_session[fa757ff4c2b8954a]::session::Session>::time::<(), rustc_interface[f2560d97934cc6f6]::passes::analysis::{closure#0}>\n  26:     0x7fe48da4103e - rustc_interface[f2560d97934cc6f6]::passes::analysis\n  27:     0x7fe48e432e34 - rustc_query_system[d3b2657d85679091]::query::plumbing::try_execute_query::<rustc_query_impl[542bbd4b66bfb449]::plumbing::QueryCtxt, rustc_query_system[d3b2657d85679091]::query::caches::DefaultCache<(), core[cde1ce9e21f08391]::result::Result<(), rustc_errors[354c2d440e1385ac]::ErrorGuaranteed>>>\n  28:     0x7fe48e432b67 - rustc_query_system[d3b2657d85679091]::query::plumbing::get_query::<rustc_query_impl[542bbd4b66bfb449]::queries::analysis, rustc_query_impl[542bbd4b66bfb449]::plumbing::QueryCtxt>\n  29:     0x7fe48d3fa0c3 - <rustc_interface[f2560d97934cc6f6]::passes::QueryContext>::enter::<rustc_driver[7857f239df018eab]::run_compiler::{closure#1}::{closure#2}::{closure#3}, core[cde1ce9e21f08391]::result::Result<(), rustc_errors[354c2d440e1385ac]::ErrorGuaranteed>>\n  30:     0x7fe48d3f4a0c - rustc_interface[f2560d97934cc6f6]::interface::create_compiler_and_run::<core[cde1ce9e21f08391]::result::Result<(), rustc_errors[354c2d440e1385ac]::ErrorGuaranteed>, rustc_driver[7857f239df018eab]::run_compiler::{closure#1}>\n  31:     0x7fe48d3f3342 - <scoped_tls[8ee1aa185b4607e2]::ScopedKey<rustc_span[4a0a9e8ceb64f0f4]::SessionGlobals>>::set::<rustc_interface[f2560d97934cc6f6]::interface::run_compiler<core[cde1ce9e21f08391]::result::Result<(), rustc_errors[354c2d440e1385ac]::ErrorGuaranteed>, rustc_driver[7857f239df018eab]::run_compiler::{closure#1}>::{closure#0}, core[cde1ce9e21f08391]::result::Result<(), rustc_errors[354c2d440e1385ac]::ErrorGuaranteed>>\n  32:     0x7fe48d3f302f - std[35bb8192b5670ad2]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[f2560d97934cc6f6]::util::run_in_thread_pool_with_globals<rustc_interface[f2560d97934cc6f6]::interface::run_compiler<core[cde1ce9e21f08391]::result::Result<(), rustc_errors[354c2d440e1385ac]::ErrorGuaranteed>, rustc_driver[7857f239df018eab]::run_compiler::{closure#1}>::{closure#0}, core[cde1ce9e21f08391]::result::Result<(), rustc_errors[354c2d440e1385ac]::ErrorGuaranteed>>::{closure#0}, core[cde1ce9e21f08391]::result::Result<(), rustc_errors[354c2d440e1385ac]::ErrorGuaranteed>>\n  33:     0x7fe48e4c8980 - <<std[35bb8192b5670ad2]::thread::Builder>::spawn_unchecked_<rustc_interface[f2560d97934cc6f6]::util::run_in_thread_pool_with_globals<rustc_interface[f2560d97934cc6f6]::interface::run_compiler<core[cde1ce9e21f08391]::result::Result<(), rustc_errors[354c2d440e1385ac]::ErrorGuaranteed>, rustc_driver[7857f239df018eab]::run_compiler::{closure#1}>::{closure#0}, core[cde1ce9e21f08391]::result::Result<(), rustc_errors[354c2d440e1385ac]::ErrorGuaranteed>>::{closure#0}, core[cde1ce9e21f08391]::result::Result<(), rustc_errors[354c2d440e1385ac]::ErrorGuaranteed>>::{closure#1} as core[cde1ce9e21f08391]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  34:     0x7fe48be58393 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hbe492c93bea3125c\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/alloc/src/boxed.rs:1940:9\n  35:     0x7fe48be58393 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h1c6cb812ee67c431\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/alloc/src/boxed.rs:1940:9\n  36:     0x7fe48be58393 - std::sys::unix::thread::Thread::new::thread_start::hcd53b5f11cecf106\n                               at /rustc/e7119a0300b87a3d670408ee8e847c6821b3ae80/library/std/src/sys/unix/thread.rs:108:17\n  37:     0x7fe48bbb078d - <unknown>\n  38:     0x7fe48bc318e4 - clone\n  39:                0x0 - <unknown>\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\n\nnote: rustc 1.66.0-nightly (e7119a030 2022-09-22) running on x86_64-unknown-linux-gnu\n\nquery stack during panic:\n#0 [check_mod_const_bodies] checking consts in top-level module\n#1 [analysis] running analysis passes on this crate\nend of query stack\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n```\n\n</p>\n</details>\n\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"mucinoab\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102156/timeline", "performed_via_github_app": null, "state_reason": "completed"}