{"url": "https://api.github.com/repos/rust-lang/rust/issues/94258", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94258/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94258/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94258/events", "html_url": "https://github.com/rust-lang/rust/issues/94258", "id": 1146896956, "node_id": "I_kwDOAAsO6M5EXEI8", "number": 94258, "title": "[ER] array::reshape ?", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-02-22T13:13:38Z", "updated_at": "2022-02-23T15:03:31Z", "closed_at": "2022-02-23T15:03:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here I propose to add a new commonly useful array method related to slice::as_chunks_unchecked_mut and similar ones and also related to Iterator::flatten. (But this one is safe). Its purpose is to replace std::mem::transmute in a common and provably safe group of cases. That is to reshape arrays. From 3x2 => 2x3 => 6x1, etc. This means the number of input dimensions could be different from the number of output dimensions, but the number of items must be the same.\r\n\r\nPerhaps Rust allows to create a single array function that works for any number of dimensions, despite the lack of const-variadics. This is better and cleaner. But I think in most cases 4 dimensions could suffice:\r\n\r\n```rust\r\narray::reshape_1d::<const N0: usize>() -> &[T; N0];\r\narray::reshape_2d::<const N0: usize, const N1: usize>() -> &[[T; N0]; N1];\r\narray::reshape_3d::<const N0: usize, const N1: usize, const N2: usize>() -> &[[[T; N0]; N1]; N2];\r\narray::reshape_4d::<const N0: usize, const N1: usize, const N2: usize, const N3: usize>() -> &[[[[T; N0]; N1]; N2]; N3];\r\n\r\narray::reshape_1d_mut::<const N0: usize>() -> &mut [T; N0];\r\narray::reshape_2d_mut::<const N0: usize, const N1: usize>() -> &mut [[T; N0]; N1];\r\narray::reshape_3d_mut::<const N0: usize, const N1: usize, const N2: usize>() -> &mut [[[T; N0]; N1]; N2];\r\narray::reshape_4d_mut::<const N0: usize, const N1: usize, const N2: usize, const N3: usize>() -> &mut [[[[T; N0]; N1]; N2]; N3];\r\n```", "closed_by": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94258/timeline", "performed_via_github_app": null, "state_reason": "completed"}