{"url": "https://api.github.com/repos/rust-lang/rust/issues/97751", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/97751/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/97751/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/97751/events", "html_url": "https://github.com/rust-lang/rust/issues/97751", "id": 1260947203, "node_id": "I_kwDOAAsO6M5LKIcD", "number": 97751, "title": "Heap allocation of Arc not optimized out compared to Rc", "user": {"login": "veber-alex", "id": 29788806, "node_id": "MDQ6VXNlcjI5Nzg4ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/29788806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/veber-alex", "html_url": "https://github.com/veber-alex", "followers_url": "https://api.github.com/users/veber-alex/followers", "following_url": "https://api.github.com/users/veber-alex/following{/other_user}", "gists_url": "https://api.github.com/users/veber-alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/veber-alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/veber-alex/subscriptions", "organizations_url": "https://api.github.com/users/veber-alex/orgs", "repos_url": "https://api.github.com/users/veber-alex/repos", "events_url": "https://api.github.com/users/veber-alex/events{/privacy}", "received_events_url": "https://api.github.com/users/veber-alex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-06-05T03:09:52Z", "updated_at": "2022-06-05T03:14:07Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::rc::Rc;\r\nuse std::sync::Arc;\r\n\r\nstruct Data {\r\n    a: u64,\r\n    b: u64,\r\n}\r\n\r\nfn add_numbers(p: &Data) -> u64 {\r\n    p.a + p.b\r\n}\r\n\r\npub fn add_two_numbers_arc(a: u64, b: u64) -> u64 {\r\n    let x = Arc::new(Data { a, b });\r\n    add_numbers(&x)\r\n}\r\n\r\npub fn add_two_numbers_rc(a: u64, b: u64) -> u64 {\r\n    let x = Rc::new(Data { a, b });\r\n    add_numbers(&x)\r\n}\r\n```\r\n\r\n[godbolt link](https://godbolt.org/z/vTqToedE1)\r\n\r\nI expected to see this happen: The heap allocation of both the `Rc` and the `Arc` should be optimized out.\r\n\r\nInstead, this happened: Only `Rc` got the optimization.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/97751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/97751/timeline", "performed_via_github_app": null, "state_reason": null}