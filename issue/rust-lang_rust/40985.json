{"url": "https://api.github.com/repos/rust-lang/rust/issues/40985", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40985/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40985/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40985/events", "html_url": "https://github.com/rust-lang/rust/issues/40985", "id": 218667765, "node_id": "MDU6SXNzdWUyMTg2Njc3NjU=", "number": 40985, "title": "Diagnostics for ambiguous number types could be better", "user": {"login": "Rufflewind", "id": 6571068, "node_id": "MDQ6VXNlcjY1NzEwNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/6571068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rufflewind", "html_url": "https://github.com/Rufflewind", "followers_url": "https://api.github.com/users/Rufflewind/followers", "following_url": "https://api.github.com/users/Rufflewind/following{/other_user}", "gists_url": "https://api.github.com/users/Rufflewind/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rufflewind/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rufflewind/subscriptions", "organizations_url": "https://api.github.com/users/Rufflewind/orgs", "repos_url": "https://api.github.com/users/Rufflewind/repos", "events_url": "https://api.github.com/users/Rufflewind/events{/privacy}", "received_events_url": "https://api.github.com/users/Rufflewind/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 693665463, "node_id": "MDU6TGFiZWw2OTM2NjU0NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-diagnostics", "name": "WG-diagnostics", "color": "c2e0c6", "default": false, "description": "Working group: diagnostics"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-01T04:08:14Z", "updated_at": "2018-01-08T01:38:03Z", "closed_at": "2018-01-08T01:38:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Ambiguous integer or float type variable can lead to some rather confusing error messages.  Consider:\r\n\r\n```rust\r\nfn main() {\r\n    println!(\"{:?}\", 2.0.powi(2));\r\n    println!(\"{:?}\", 2.0 as u32);\r\n}\r\n```\r\n\r\n## Method calls on an ambiguous number type\r\n\r\nThe first error says that `{float}` doesn't have a method called `powi`, but taken naively that's not true: both `f32` and `f64` have methods `powi`.  The actual problem is that the type inference doesn't know which floating point type the user wants.\r\n\r\nThe `help` is even more confusing, because it suggests the user to use a deprecated trait that's not even documented anymore.\r\n\r\n```\r\nrustc 1.18.0-nightly (5c94997b6 2017-03-30)\r\nerror: no method named `powi` found for type `{float}` in the current scope\r\n --> <anon>:2:26\r\n  |\r\n2 |     println!(\"{:?}\", 2.0.powi(2));\r\n  |                          ^^^^\r\n  |\r\n  = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:\r\n  = help: candidate #1: `use core::num::Float;`\r\n```\r\n\r\n## Casting an ambiguous number type\r\n\r\nLikewise, when casting one could again run into the same problem.  Here, it complains that the cast is \"non-scalar\" but naively `{float}` sounds like a perfectly scalar type!  In reality the problem is that casting requires the source type to be non-ambiguous.\r\n\r\n```\r\nerror: non-scalar cast: `{float}` as `u32`\r\n --> <anon>:3:22\r\n  |\r\n3 |     println!(\"{:?}\", 2.0 as u32);\r\n  |                      ^^^^^^^^^^\r\n\r\nerror: aborting due to 2 previous errors\r\n```\r\n\r\n## Suggestion\r\n\r\nTentative PR: https://github.com/rust-lang/rust/compare/master...Rufflewind:ambiguous-number-type\r\n\r\nTweak the error messages a bit when the type is `{float}` or `{integer}`.  Also, perhaps suggestions for deprecated traits could be suppressed?\r\n\r\n```\r\nrustc 1.18.0-nightly (5c94997b6 2017-03-30)\r\nerror: no method named `powi` found for the ambiguous type `{float}` in the current scope\r\n --> <anon>:2:26\r\n  |\r\n2 |     println!(\"{:?}\", 2.0.powi(2));\r\n  |                          ^^^^\r\n  |\r\n  = help: if you meant to call the `powi` method of, say, `f64`, consider adding some type annotations to clarify that `{float}` should be `f64`\r\n\r\nerror: casting from an ambiguous type: `{float}` as `u32`\r\n --> <anon>:3:22\r\n  |\r\n3 |     println!(\"{:?}\", 2.0 as u32);\r\n  |                      ^^^^^^^^^^\r\n\r\nerror: aborting due to 2 previous errors\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40985/timeline", "performed_via_github_app": null, "state_reason": "completed"}