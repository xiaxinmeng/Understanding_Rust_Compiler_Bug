{"url": "https://api.github.com/repos/rust-lang/rust/issues/96703", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96703/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96703/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96703/events", "html_url": "https://github.com/rust-lang/rust/issues/96703", "id": 1225386140, "node_id": "I_kwDOAAsO6M5JCeic", "number": 96703, "title": "ICE: collect_and_partition_mono_items", "user": {"login": "spookyvision", "id": 45840, "node_id": "MDQ6VXNlcjQ1ODQw", "avatar_url": "https://avatars.githubusercontent.com/u/45840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spookyvision", "html_url": "https://github.com/spookyvision", "followers_url": "https://api.github.com/users/spookyvision/followers", "following_url": "https://api.github.com/users/spookyvision/following{/other_user}", "gists_url": "https://api.github.com/users/spookyvision/gists{/gist_id}", "starred_url": "https://api.github.com/users/spookyvision/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spookyvision/subscriptions", "organizations_url": "https://api.github.com/users/spookyvision/orgs", "repos_url": "https://api.github.com/users/spookyvision/repos", "events_url": "https://api.github.com/users/spookyvision/events{/privacy}", "received_events_url": "https://api.github.com/users/spookyvision/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-05-04T13:36:49Z", "updated_at": "2022-08-31T15:37:06Z", "closed_at": "2022-08-31T15:37:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nOhai! Unfortunately I wasn't able to reduce this further, it must be some `warp` voodoo causing this\u2026\r\n\r\n### Code\r\n\r\n```Rust\r\n/* Cargo.toml:\r\n\r\n[package]\r\nname = \"ice-ice-baby\"\r\nversion = \"0.1.0\"\r\nedition = \"2021\"\r\n\r\n[dependencies]\r\ntokio = { version = \"1\", features = [\"full\"] }\r\nwarp = \"0.3\"\r\nhyper = \"0.14\"\r\n\r\n*/\r\nuse std::{convert::Infallible, net::SocketAddr, sync::Arc};\r\n\r\nuse hyper::server::Server;\r\nuse tokio::sync::RwLock;\r\nuse warp::Filter;\r\n\r\ntype State = Arc<RwLock<usize>>;\r\n\r\n#[tokio::main]\r\nasync fn main() -> Result<(), Box<dyn std::error::Error>> {\r\n    let state = State::default();\r\n    let state = warp::any().map(move || state.clone());\r\n\r\n    let ws = warp::path(\"ws\")\r\n        .and(warp::ws())\r\n        .and(state)\r\n        .map(|ws: warp::ws::Ws, users| ws.on_upgrade(move |_socket| handle(users)));\r\n\r\n    let index = warp::path::end().map(|| warp::reply::html(INDEX_HTML));\r\n    let routes = index.or(ws);\r\n\r\n    let cors = warp::cors().build();\r\n    let service = warp::service(routes.with(cors));\r\n\r\n    let make_svc = hyper::service::make_service_fn(|_: _| {\r\n        let svc = service.clone();\r\n        async move { Ok::<_, Infallible>(svc) }\r\n    });\r\n\r\n    let sa: SocketAddr = \"0.0.0.0:3030\".parse().unwrap();\r\n    let server = Server::bind(&sa);\r\n    server.serve(make_svc).await?;\r\n\r\n    Ok(())\r\n}\r\n\r\nasync fn handle(state: State) {\r\n    state.write().await;\r\n}\r\n\r\nstatic INDEX_HTML: &str = \"\";\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.62.0-nightly (e1b71feb5 2022-05-03)\r\nbinary: rustc\r\ncommit-hash: e1b71feb592ba64805689e2b15b9fa570182c442\r\ncommit-date: 2022-05-03\r\nhost: x86_64-apple-darwin\r\nrelease: 1.62.0-nightly\r\nLLVM version: 14.0.1\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nCompiling ice-ice-baby v0.1.0 (/Users/ace/play/laserver_ice)\r\nerror: internal compiler error: compiler/rustc_monomorphize/src/collector.rs:1053:22: unexpected unsized tail: hyper::server::conn::spawn_all::State<hyper::server::conn::AddrStream, std::future::from_generator::GenFuture<[static generator@src/main.rs:40:20: 40:48]>, warp::filter::service::FilteredService<warp::cors::internal::CorsFilter<warp::filter::or::Or<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::path::end::{closure#0}]>, [closure@src/main.rs:32:39: 32:71]>, warp::filter::map::Map<warp::filter::and::And<warp::filter::and::And<warp::path::Exact<warp::path::internal::Opaque<&str>>, warp::filter::map::Map<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::get::{closure#0}]>::{closure#0}]>, warp::filter::untuple_one::UntupleOne<warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::header::header2<headers::common::connection::Connection>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<headers::common::connection::Connection, warp::Rejection>>>::{closure#0}]>, [closure@warp::ws::{closure#0}]>>>, warp::filter::FilterFn<[closure@warp::header::exact_ignore_case::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::header::exact::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::header::header2<headers::common::sec_websocket_key::SecWebsocketKey>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<headers::common::sec_websocket_key::SecWebsocketKey, warp::Rejection>>>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::ws::on_upgrade::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<hyper::upgrade::OnUpgrade>, warp::Rejection>>>::{closure#0}]>>, [closure@warp::ws::{closure#1}]>>, warp::filter::map::Map<warp::filters::any::Any, [closure@src/main.rs:25:33: 25:54]>>, [closure@src/main.rs:30:14: 30:83]>>>>, hyper::common::exec::Exec, hyper::server::conn::spawn_all::NoopWatcher>\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/e1b71feb592ba64805689e2b15b9fa570182c442/compiler/rustc_errors/src/lib.rs:1324:9\r\nstack backtrace:\r\n(see below)\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.62.0-nightly (e1b71feb5 2022-05-03) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C split-debuginfo=unpacked -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: could not compile `ice-ice-baby`\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner>::bug::<&alloc::string::String>\r\n   3: <rustc_errors::Handler>::bug::<&alloc::string::String>\r\n   4: rustc_middle::ty::context::tls::with_opt::<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, ()>\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: rustc_monomorphize::collector::find_vtable_types_for_unsizing\r\n   8: <rustc_monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor>::visit_rvalue\r\n   9: rustc_monomorphize::collector::collect_neighbours\r\n  10: rustc_monomorphize::collector::collect_items_rec\r\n  11: rustc_monomorphize::collector::collect_items_rec\r\n  12: rustc_monomorphize::collector::collect_items_rec\r\n  13: rustc_monomorphize::collector::collect_items_rec\r\n  14: rustc_monomorphize::collector::collect_items_rec\r\n  15: rustc_monomorphize::collector::collect_items_rec\r\n  16: rustc_monomorphize::collector::collect_items_rec\r\n  17: rustc_monomorphize::collector::collect_items_rec\r\n  18: rustc_monomorphize::collector::collect_items_rec\r\n  19: rustc_monomorphize::collector::collect_items_rec\r\n  20: rustc_monomorphize::collector::collect_items_rec\r\n  21: rustc_monomorphize::collector::collect_items_rec\r\n  22: rustc_monomorphize::collector::collect_items_rec\r\n  23: rustc_monomorphize::collector::collect_items_rec\r\n  24: rustc_monomorphize::collector::collect_items_rec\r\n  25: rustc_monomorphize::collector::collect_items_rec\r\n  26: rustc_monomorphize::collector::collect_items_rec\r\n  27: <rustc_session::session::Session>::time::<(), rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}>\r\n  28: rustc_monomorphize::collector::collect_crate_mono_items\r\n  29: rustc_monomorphize::partitioning::collect_and_partition_mono_items\r\n  30: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>\r\n  31: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>>\r\n  32: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt>\r\n  33: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::collect_and_partition_mono_items\r\n  34: rustc_codegen_ssa::base::codegen_crate::<rustc_codegen_llvm::LlvmCodegenBackend>\r\n  35: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  36: <rustc_session::session::Session>::time::<alloc::boxed::Box<dyn core::any::Any>, rustc_interface::passes::start_codegen::{closure#0}>\r\n  37: <rustc_interface::passes::QueryContext>::enter::<<rustc_interface::queries::Queries>::ongoing_codegen::{closure#0}::{closure#0}, core::result::Result<alloc::boxed::Box<dyn core::any::Any>, rustc_errors::ErrorGuaranteed>>\r\n  38: <rustc_interface::queries::Queries>::ongoing_codegen\r\n  39: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorGuaranteed>>\r\n  40: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  41: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>\r\n  42: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96703/timeline", "performed_via_github_app": null, "state_reason": "completed"}