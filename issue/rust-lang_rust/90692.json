{"url": "https://api.github.com/repos/rust-lang/rust/issues/90692", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90692/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90692/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90692/events", "html_url": "https://github.com/rust-lang/rust/issues/90692", "id": 1047413801, "node_id": "I_kwDOAAsO6M4-bkQp", "number": 90692, "title": "Duplicated error messages", "user": {"login": "weiznich", "id": 1674512, "node_id": "MDQ6VXNlcjE2NzQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1674512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiznich", "html_url": "https://github.com/weiznich", "followers_url": "https://api.github.com/users/weiznich/followers", "following_url": "https://api.github.com/users/weiznich/following{/other_user}", "gists_url": "https://api.github.com/users/weiznich/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiznich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiznich/subscriptions", "organizations_url": "https://api.github.com/users/weiznich/orgs", "repos_url": "https://api.github.com/users/weiznich/repos", "events_url": "https://api.github.com/users/weiznich/events{/privacy}", "received_events_url": "https://api.github.com/users/weiznich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1659943986, "node_id": "MDU6TGFiZWwxNjU5OTQzOTg2", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-verbose", "name": "D-verbose", "color": "c9f7a3", "default": false, "description": "Too much output caused by a single piece of incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-11-08T12:53:13Z", "updated_at": "2021-11-13T02:10:49Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\n#[macro_use]\r\nextern crate diesel;\r\n\r\nuse diesel::expression::exists::Exists;\r\nuse diesel::expression::subselect::ValidSubselect;\r\nuse diesel::pg::Pg;\r\nuse diesel::query_builder::{SelectQuery, SelectStatement};\r\nuse diesel::query_dsl::methods::BoxedDsl;\r\nuse diesel::query_dsl::LoadQuery;\r\nuse diesel::*;\r\n\r\nfn check_exists<'a, T>(\r\n    conn: &PgConnection,\r\n    check: dsl::IntoBoxed<'a, T, Pg>,\r\n) -> Result<(), diesel::result::Error>\r\nwhere\r\n    T: BoxedDsl<'a, Pg>,\r\n{\r\n    use diesel::dsl::{exists, select};\r\n\r\n    select(exists(check))\r\n        .get_result::<bool>(conn)?\r\n        .then(|| {})\r\n        .expect(\"Does not exist\");\r\n\r\n    Ok(())\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n(as of `rustc 1.56.1 (59eed8a2a 2021-11-01)`)\r\n\r\n```\r\nerror[E0277]: the trait bound `<T as BoxedDsl<'a, Pg>>::Output: SelectQuery` is not satisfied\r\n   --> src/main.rs:21:12\r\n    |\r\n21  |     select(exists(check))\r\n    |            ^^^^^^^^^^^^^ the trait `SelectQuery` is not implemented for `<T as BoxedDsl<'a, Pg>>::Output`\r\n    |\r\n    = note: required because of the requirements on the impl of `diesel::Expression` for `Subselect<<T as BoxedDsl<'a, Pg>>::Output, ()>`\r\n    = note: 1 redundant requirements hidden\r\n    = note: required because of the requirements on the impl of `diesel::Expression` for `Exists<<T as BoxedDsl<'a, Pg>>::Output>`\r\nnote: required by a bound in `diesel::select`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.8/src/query_builder/functions.rs:375:8\r\n    |\r\n375 |     T: Expression,\r\n    |        ^^^^^^^^^^ required by this bound in `diesel::select`\r\nhelp: consider further restricting the associated type\r\n    |\r\n17  |     T: BoxedDsl<'a, Pg>, <T as BoxedDsl<'a, Pg>>::Output: SelectQuery\r\n    |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nerror[E0277]: the trait bound `<T as BoxedDsl<'a, Pg>>::Output: ValidSubselect<()>` is not satisfied\r\n   --> src/main.rs:21:12\r\n    |\r\n21  |     select(exists(check))\r\n    |            ^^^^^^^^^^^^^ the trait `ValidSubselect<()>` is not implemented for `<T as BoxedDsl<'a, Pg>>::Output`\r\n    |\r\n    = note: required because of the requirements on the impl of `SelectableExpression<()>` for `Subselect<<T as BoxedDsl<'a, Pg>>::Output, ()>`\r\n    = note: 1 redundant requirements hidden\r\n    = note: required because of the requirements on the impl of `SelectableExpression<()>` for `Exists<<T as BoxedDsl<'a, Pg>>::Output>`\r\n    = note: required because of the requirements on the impl of `SelectDsl<Exists<<T as BoxedDsl<'a, Pg>>::Output>>` for `diesel::query_builder::SelectStatement<()>`\r\nnote: required by a bound in `diesel::select`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.8/src/query_builder/functions.rs:376:26\r\n    |\r\n376 |     SelectStatement<()>: SelectDsl<T>,\r\n    |                          ^^^^^^^^^^^^ required by this bound in `diesel::select`\r\nhelp: consider further restricting the associated type\r\n    |\r\n17  |     T: BoxedDsl<'a, Pg>, <T as BoxedDsl<'a, Pg>>::Output: ValidSubselect<()>\r\n    |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nerror[E0277]: the trait bound `diesel::query_builder::SelectStatement<(), query_builder::select_clause::SelectClause<Exists<<T as BoxedDsl<'a, Pg>>::Output>>>: QueryFragment<_>` is not satisfied\r\n  --> src/main.rs:22:10\r\n   |\r\n22 |         .get_result::<bool>(conn)?\r\n   |          ^^^^^^^^^^ the trait `QueryFragment<_>` is not implemented for `diesel::query_builder::SelectStatement<(), query_builder::select_clause::SelectClause<Exists<<T as BoxedDsl<'a, Pg>>::Output>>>`\r\n   |\r\n   = help: the following implementations were found:\r\n             <diesel::query_builder::SelectStatement<(), S, D, W, O, L, Of, G, LC> as QueryFragment<DB>>\r\n             <diesel::query_builder::SelectStatement<F, S, D, W, O, L, Of, G, LC> as QueryFragment<DB>>\r\n   = note: required because of the requirements on the impl of `LoadQuery<_, bool>` for `diesel::query_builder::SelectStatement<(), query_builder::select_clause::SelectClause<Exists<<T as BoxedDsl<'a, Pg>>::Output>>>`\r\n\r\nerror[E0277]: the trait bound `<T as BoxedDsl<'a, Pg>>::Output: SelectQuery` is not satisfied\r\n  --> src/main.rs:22:10\r\n   |\r\n22 |         .get_result::<bool>(conn)?\r\n   |          ^^^^^^^^^^ the trait `SelectQuery` is not implemented for `<T as BoxedDsl<'a, Pg>>::Output`\r\n   |\r\n   = note: required because of the requirements on the impl of `diesel::Expression` for `Subselect<<T as BoxedDsl<'a, Pg>>::Output, ()>`\r\n   = note: 1 redundant requirements hidden\r\n   = note: required because of the requirements on the impl of `diesel::Expression` for `Exists<<T as BoxedDsl<'a, Pg>>::Output>`\r\n   = note: required because of the requirements on the impl of `LoadQuery<_, bool>` for `diesel::query_builder::SelectStatement<(), query_builder::select_clause::SelectClause<Exists<<T as BoxedDsl<'a, Pg>>::Output>>>`\r\nhelp: consider further restricting the associated type\r\n   |\r\n17 |     T: BoxedDsl<'a, Pg>, <T as BoxedDsl<'a, Pg>>::Output: SelectQuery\r\n   |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nerror[E0277]: the trait bound `<T as BoxedDsl<'a, Pg>>::Output: ValidSubselect<()>` is not satisfied\r\n  --> src/main.rs:22:10\r\n   |\r\n22 |         .get_result::<bool>(conn)?\r\n   |          ^^^^^^^^^^ the trait `ValidSubselect<()>` is not implemented for `<T as BoxedDsl<'a, Pg>>::Output`\r\n   |\r\n   = note: required because of the requirements on the impl of `SelectableExpression<()>` for `Subselect<<T as BoxedDsl<'a, Pg>>::Output, ()>`\r\n   = note: 1 redundant requirements hidden\r\n   = note: required because of the requirements on the impl of `SelectableExpression<()>` for `Exists<<T as BoxedDsl<'a, Pg>>::Output>`\r\n   = note: required because of the requirements on the impl of `query_builder::select_clause::SelectClauseExpression<()>` for `query_builder::select_clause::SelectClause<Exists<<T as BoxedDsl<'a, Pg>>::Output>>`\r\n   = note: required because of the requirements on the impl of `LoadQuery<_, bool>` for `diesel::query_builder::SelectStatement<(), query_builder::select_clause::SelectClause<Exists<<T as BoxedDsl<'a, Pg>>::Output>>>`\r\nhelp: consider further restricting the associated type\r\n   |\r\n17 |     T: BoxedDsl<'a, Pg>, <T as BoxedDsl<'a, Pg>>::Output: ValidSubselect<()>\r\n   |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nerror[E0277]: the trait bound `<T as BoxedDsl<'a, Pg>>::Output: QueryId` is not satisfied\r\n  --> src/main.rs:22:10\r\n   |\r\n22 |         .get_result::<bool>(conn)?\r\n   |          ^^^^^^^^^^ the trait `QueryId` is not implemented for `<T as BoxedDsl<'a, Pg>>::Output`\r\n   |\r\n   = note: required because of the requirements on the impl of `QueryId` for `Exists<<T as BoxedDsl<'a, Pg>>::Output>`\r\n   = note: 2 redundant requirements hidden\r\n   = note: required because of the requirements on the impl of `QueryId` for `diesel::query_builder::SelectStatement<(), query_builder::select_clause::SelectClause<Exists<<T as BoxedDsl<'a, Pg>>::Output>>>`\r\n   = note: required because of the requirements on the impl of `LoadQuery<_, bool>` for `diesel::query_builder::SelectStatement<(), query_builder::select_clause::SelectClause<Exists<<T as BoxedDsl<'a, Pg>>::Output>>>`\r\nhelp: consider further restricting the associated type\r\n   |\r\n17 |     T: BoxedDsl<'a, Pg>, <T as BoxedDsl<'a, Pg>>::Output: QueryId\r\n   |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nerror[E0277]: the trait bound `diesel::query_builder::SelectStatement<()>: SelectDsl<Exists<<T as BoxedDsl<'a, Pg>>::Output>>` is not satisfied\r\n  --> src/main.rs:21:5\r\n   |\r\n21 |     select(exists(check))\r\n   |     ^^^^^^ the trait `SelectDsl<Exists<<T as BoxedDsl<'a, Pg>>::Output>>` is not implemented for `diesel::query_builder::SelectStatement<()>`\r\n   |\r\nhelp: consider extending the `where` bound, but there might be an alternative better way to express this requirement\r\n   |\r\n17 |     T: BoxedDsl<'a, Pg>, diesel::query_builder::SelectStatement<()>: SelectDsl<Exists<<T as BoxedDsl<'a, Pg>>::Output>>\r\n   |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n```\r\n\r\nNote that the third, fourth and fifth error message all point to the same line and all have a `= note: required because of the requirements on the impl of LoadQuery<_, bool> for diesel::query_builder::SelectStatement<(), query_builder::select_clause::SelectClause<Exists<<T as BoxedDsl<'a, Pg>>::Output>>>` line in their output.\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\n\r\n```\r\nerror[E0277]: the trait bound `<T as BoxedDsl<'a, Pg>>::Output: SelectQuery` is not satisfied\r\n   --> src/main.rs:21:12\r\n    |\r\n21  |     select(exists(check))\r\n    |            ^^^^^^^^^^^^^ the trait `SelectQuery` is not implemented for `<T as BoxedDsl<'a, Pg>>::Output`\r\n    |\r\n    = note: required because of the requirements on the impl of `diesel::Expression` for `Subselect<<T as BoxedDsl<'a, Pg>>::Output, ()>`\r\n    = note: 1 redundant requirements hidden\r\n    = note: required because of the requirements on the impl of `diesel::Expression` for `Exists<<T as BoxedDsl<'a, Pg>>::Output>`\r\nnote: required by a bound in `diesel::select`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.8/src/query_builder/functions.rs:375:8\r\n    |\r\n375 |     T: Expression,\r\n    |        ^^^^^^^^^^ required by this bound in `diesel::select`\r\nhelp: consider further restricting the associated type\r\n    |\r\n17  |     T: BoxedDsl<'a, Pg>, <T as BoxedDsl<'a, Pg>>::Output: SelectQuery\r\n    |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nerror[E0277]: the trait bound `<T as BoxedDsl<'a, Pg>>::Output: ValidSubselect<()>` is not satisfied\r\n   --> src/main.rs:21:12\r\n    |\r\n21  |     select(exists(check))\r\n    |            ^^^^^^^^^^^^^ the trait `ValidSubselect<()>` is not implemented for `<T as BoxedDsl<'a, Pg>>::Output`\r\n    |\r\n    = note: required because of the requirements on the impl of `SelectableExpression<()>` for `Subselect<<T as BoxedDsl<'a, Pg>>::Output, ()>`\r\n    = note: 1 redundant requirements hidden\r\n    = note: required because of the requirements on the impl of `SelectableExpression<()>` for `Exists<<T as BoxedDsl<'a, Pg>>::Output>`\r\n    = note: required because of the requirements on the impl of `SelectDsl<Exists<<T as BoxedDsl<'a, Pg>>::Output>>` for `diesel::query_builder::SelectStatement<()>`\r\nnote: required by a bound in `diesel::select`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.8/src/query_builder/functions.rs:376:26\r\n    |\r\n376 |     SelectStatement<()>: SelectDsl<T>,\r\n    |                          ^^^^^^^^^^^^ required by this bound in `diesel::select`\r\nhelp: consider further restricting the associated type\r\n    |\r\n17  |     T: BoxedDsl<'a, Pg>, <T as BoxedDsl<'a, Pg>>::Output: ValidSubselect<()>\r\n    |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nerror[E0277]: the trait bound `diesel::query_builder::SelectStatement<(), query_builder::select_clause::SelectClause<Exists<<T as BoxedDsl<'a, Pg>>::Output>>>: LoadQuery<PgConnection, bool>` is not satisfied\r\n  --> src/main.rs:22:10\r\n   |\r\n22 |         .get_result::<bool>(conn)?\r\n   |          ^^^^^^^^^^ the trait `LoadQuery<PgConnection, bool>` is not implemented for `diesel::query_builder::SelectStatement<(), query_builder::select_clause::SelectClause<Exists<<T as BoxedDsl<'a, Pg>>::Output>>>`\r\n   |\r\nhelp:  consider extending the `where` bound, but there might be an alternative better way to express this requirement\r\n   |\r\n17 |     T: BoxedDsl<'a, Pg>, diesel::query_builder::SelectStatement<(), query_builder::select_clause::SelectClause<Exists<<T as BoxedDsl<'a, Pg>>::Output>>>: LoadQuery<PgConnection, bool>\r\n   |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nerror[E0277]: the trait bound `diesel::query_builder::SelectStatement<()>: SelectDsl<Exists<<T as BoxedDsl<'a, Pg>>::Output>>` is not satisfied\r\n  --> src/main.rs:21:5\r\n   |\r\n21 |     select(exists(check))\r\n   |     ^^^^^^ the trait `SelectDsl<Exists<<T as BoxedDsl<'a, Pg>>::Output>>` is not implemented for `diesel::query_builder::SelectStatement<()>`\r\n   |\r\nhelp: consider extending the `where` bound, but there might be an alternative better way to express this requirement\r\n   |\r\n17 |     T: BoxedDsl<'a, Pg>, diesel::query_builder::SelectStatement<()>: SelectDsl<Exists<<T as BoxedDsl<'a, Pg>>::Output>>\r\n   |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n```\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\nFor reference a fixed version of this function looks like:\r\n```rust\r\n\r\nfn check_exists<'a, T>(\r\n    conn: &PgConnection,\r\n    check: dsl::IntoBoxed<'a, T, Pg>,\r\n) -> Result<(), diesel::result::Error>\r\nwhere\r\n    T: BoxedDsl<'a, Pg>,\r\n    dsl::IntoBoxed<'a, T, Pg>: SelectQuery + ValidSubselect<()>,\r\n    dsl::Select<SelectStatement<()>, Exists<dsl::IntoBoxed<'a, T, Pg>>>: LoadQuery<PgConnection, bool>,\r\n{\r\n    use diesel::dsl::{exists, select};\r\n\r\n    select(exists(check))\r\n        .get_result::<bool>(conn)?\r\n        .then(|| {})\r\n        .expect(\"Does not exist\");\r\n\r\n    Ok(())\r\n}\r\n```\r\n\r\nSee https://github.com/diesel-rs/diesel/discussions/2936#discussioncomment-1604902 for a longer discussion of the corresponding error messages.\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90692/timeline", "performed_via_github_app": null, "state_reason": null}