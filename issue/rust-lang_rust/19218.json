{"url": "https://api.github.com/repos/rust-lang/rust/issues/19218", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/19218/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/19218/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/19218/events", "html_url": "https://github.com/rust-lang/rust/issues/19218", "id": 49804669, "node_id": "MDU6SXNzdWU0OTgwNDY2OQ==", "number": 19218, "title": "Formatting numbers is slow", "user": {"login": "mahkoh", "id": 1882250, "node_id": "MDQ6VXNlcjE4ODIyNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1882250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahkoh", "html_url": "https://github.com/mahkoh", "followers_url": "https://api.github.com/users/mahkoh/followers", "following_url": "https://api.github.com/users/mahkoh/following{/other_user}", "gists_url": "https://api.github.com/users/mahkoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahkoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahkoh/subscriptions", "organizations_url": "https://api.github.com/users/mahkoh/orgs", "repos_url": "https://api.github.com/users/mahkoh/repos", "events_url": "https://api.github.com/users/mahkoh/events{/privacy}", "received_events_url": "https://api.github.com/users/mahkoh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}], "state": "closed", "locked": true, "assignee": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2014-11-22T21:09:01Z", "updated_at": "2015-04-11T19:23:52Z", "closed_at": "2015-04-11T19:23:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\ntest fast_u64_format   ... bench:     19385 ns/iter (+/- 442)\ntest stdlib_u16_format ... bench:     79955 ns/iter (+/- 251)\n```\n\n``` rust\n#[inline(never)]\nfn utoa(mut n: u64, buf: &mut [u8]) -> Result<uint, uint> {\n    let num_digits = match n {\n        0u64                    ... 9u64                    => 1,\n        10u64                   ... 99u64                   => 2,\n        100u64                  ... 999u64                  => 3,\n        1000u64                 ... 9999u64                 => 4,\n        10000u64                ... 99999u64                => 5,\n        100000u64               ... 999999u64               => 6,\n        1000000u64              ... 9999999u64              => 7,\n        10000000u64             ... 99999999u64             => 8,\n        100000000u64            ... 999999999u64            => 9,\n        1000000000u64           ... 9999999999u64           => 10,\n        10000000000u64          ... 99999999999u64          => 11,\n        100000000000u64         ... 999999999999u64         => 12,\n        1000000000000u64        ... 9999999999999u64        => 13,\n        10000000000000u64       ... 99999999999999u64       => 14,\n        100000000000000u64      ... 999999999999999u64      => 15,\n        1000000000000000u64     ... 9999999999999999u64     => 16,\n        10000000000000000u64    ... 99999999999999999u64    => 17,\n        100000000000000000u64   ... 999999999999999999u64   => 18,\n        1000000000000000000u64  ... 9999999999999999999u64  => 19,\n        10000000000000000000u64 ... 18446744073709551615u64 => 20,\n        _ => 0u,\n    };\n\n    if buf.len() < num_digits {\n        return Err(num_digits);\n    }\n\n    for d in buf.slice_to_mut(num_digits).iter_mut().rev() {\n        let rem = n % 10;\n        n /= 10;\n        *d = rem as u8 + b'0';\n    }\n\n    Ok(num_digits)\n}\n\n#[bench]\nfn stdlib_u16_format(b: &mut test::Bencher) {\n    let mut buf = [0, ..20];\n    b.iter(|| {\n        for i in range(0u16, 1000) {\n            let mut bw = std::io::BufWriter::new(&mut buf);\n            (write!(bw, \"{}\", i)).ok();\n        }\n    });\n}\n\n#[bench]\nfn fast_u64_format(b: &mut test::Bencher) {\n    let mut buf = [0, ..20];\n    let mut dst = [0, ..20];\n    b.iter(|| {\n        for i in range(0u64, 1000) {\n            let len = utoa(i, &mut buf).unwrap();\n            let mut bw = std::io::BufWriter::new(&mut dst);\n            bw.write(buf.slice_to(len)).ok();\n        }\n    });\n}\n```\n", "closed_by": {"login": "mahkoh", "id": 1882250, "node_id": "MDQ6VXNlcjE4ODIyNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1882250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahkoh", "html_url": "https://github.com/mahkoh", "followers_url": "https://api.github.com/users/mahkoh/followers", "following_url": "https://api.github.com/users/mahkoh/following{/other_user}", "gists_url": "https://api.github.com/users/mahkoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahkoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahkoh/subscriptions", "organizations_url": "https://api.github.com/users/mahkoh/orgs", "repos_url": "https://api.github.com/users/mahkoh/repos", "events_url": "https://api.github.com/users/mahkoh/events{/privacy}", "received_events_url": "https://api.github.com/users/mahkoh/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/19218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/19218/timeline", "performed_via_github_app": null, "state_reason": "completed"}