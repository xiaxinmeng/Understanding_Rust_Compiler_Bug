{"url": "https://api.github.com/repos/rust-lang/rust/issues/75835", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75835/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75835/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75835/events", "html_url": "https://github.com/rust-lang/rust/issues/75835", "id": 684173947, "node_id": "MDU6SXNzdWU2ODQxNzM5NDc=", "number": 75835, "title": "Tracking Issue for the #[cmse_nonsecure_entry] attribute", "user": {"login": "hug-dev", "id": 29229160, "node_id": "MDQ6VXNlcjI5MjI5MTYw", "avatar_url": "https://avatars.githubusercontent.com/u/29229160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hug-dev", "html_url": "https://github.com/hug-dev", "followers_url": "https://api.github.com/users/hug-dev/followers", "following_url": "https://api.github.com/users/hug-dev/following{/other_user}", "gists_url": "https://api.github.com/users/hug-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/hug-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hug-dev/subscriptions", "organizations_url": "https://api.github.com/users/hug-dev/orgs", "repos_url": "https://api.github.com/users/hug-dev/repos", "events_url": "https://api.github.com/users/hug-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/hug-dev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234948, "node_id": "MDU6TGFiZWwyMzQ5NDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-attributes", "name": "A-attributes", "color": "f7e101", "default": false, "description": "Area: #[attributes(..)]"}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 55301954, "node_id": "MDU6TGFiZWw1NTMwMTk1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-Arm", "name": "O-Arm", "color": "6e6ec0", "default": false, "description": "Target: 32-bit Arm processors (armv6, armv7, thumb...), including 64-bit Arm in AArch32 state"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 2683926511, "node_id": "MDU6TGFiZWwyNjgzOTI2NTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-cmse_nonsecure_entry", "name": "F-cmse_nonsecure_entry", "color": "f9c0cc", "default": false, "description": "`#![feature(cmse_nonsecure_entry)]`"}, {"id": 3537216018, "node_id": "LA_kwDOAAsO6M7S1aIS", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-design-concerns", "name": "S-tracking-design-concerns", "color": "4682b4", "default": false, "description": "Blocking design concerns"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-08-23T12:24:29Z", "updated_at": "2023-04-13T08:30:43Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a tracking issue for the PR #75810. It was deemed in that PR that a RFC was not necessary because the changes were small.\r\nThe feature gate for the issue is `#![feature(cmse_nonsecure_entry)]`.\r\n\r\n## Description\r\n\r\nThe `cmse_nonsecure_entry` attribute is a target-dependent attribute available for `thumbv8m` targets. It directly maps to the attribute of the same name in LLVM.\r\n\r\nIt is to be used under the [TrustZone-M technology for Armv8-M architecture](https://developer.arm.com/documentation/100690/latest/).\r\n\r\nIt will modify code generation of Secure entry functions:\r\n* add a special symbol on the function which is the `__acle_se_` prefix and the\r\n  standard function name\r\n* constrain the number of parameters to avoid using the Non-Secure stack\r\n* before returning from the function, clear registers that might contain Secure\r\n  information\r\n* use the `BXNS` instruction to return\r\n\r\nSee [section 5.4 of ARMv8-M Security Extensions: Requirements on Development Tools - Engineering Specification](https://developer.arm.com/documentation/ecm0359818/latest/) for more details.\r\n\r\n## Example \r\n\r\nHaving a Secure entry function named `entry_function`:\r\n```rust\r\n#![feature(cmse_nonsecure_entry)]\r\n\r\n#[no_mangle]\r\n#[cmse_nonsecure_entry]\r\npub extern \"C\" fn entry_function(in: u32) -> u32 {\r\n    in + 6\r\n}\r\n```\r\n\r\nWith those commands:\r\n\r\n```text\r\n$ rustc --emit obj --crate-type lib --target thumbv8m.main-none-eabi function.rs\r\n$ arm-none-eabi-objdump -D function.o\r\n```\r\n\r\nit will emit the following assembly:\r\n\r\n```text\r\n00000000 <entry_function>:\r\n   0:   b580            push    {r7, lr}\r\n   2:   466f            mov     r7, sp\r\n   4:   b082            sub     sp, #8\r\n   6:   9001            str     r0, [sp, #4]\r\n   8:   1d81            adds    r1, r0, #6\r\n   a:   460a            mov     r2, r1\r\n   c:   4281            cmp     r1, r0\r\n   e:   9200            str     r2, [sp, #0]\r\n  10:   d30b            bcc.n   2a <entry_function+0x2a>\r\n  12:   e7ff            b.n     14 <entry_function+0x14>\r\n  14:   9800            ldr     r0, [sp, #0]\r\n  16:   b002            add     sp, #8\r\n  18:   e8bd 4080       ldmia.w sp!, {r7, lr}\r\n  1c:   4671            mov     r1, lr\r\n  1e:   4672            mov     r2, lr\r\n  20:   4673            mov     r3, lr\r\n  22:   46f4            mov     ip, lr\r\n  24:   f38e 8800       msr     CPSR_f, lr\r\n  28:   4774            bxns    lr\r\n  2a:   f240 0000       movw    r0, #0\r\n  2e:   f2c0 0000       movt    r0, #0\r\n  32:   f240 0200       movw    r2, #0\r\n  36:   f2c0 0200       movt    r2, #0\r\n  3a:   211c            movs    r1, #28\r\n  3c:   f7ff fffe       bl      0 <_ZN4core9panicking5panic17h5c028258ca2fb3f5E>\r\n  40:   defe            udf     #254    ; 0xfe\r\n```\r\n\r\nYou can see from `1c` to `24` the clearing of the registers and the `BXNS` instruction used on `28`.\r\n\r\n## Steps\r\n\r\n* [X] Initial implementation: #75810\r\n* [ ] ABI compliance should be checked by rustc instead of LLVM: https://github.com/rust-lang/rust/issues/81347", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75835/timeline", "performed_via_github_app": null, "state_reason": null}