{"url": "https://api.github.com/repos/rust-lang/rust/issues/93127", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93127/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93127/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93127/events", "html_url": "https://github.com/rust-lang/rust/issues/93127", "id": 1109722068, "node_id": "I_kwDOAAsO6M5CJQPU", "number": 93127, "title": "Audit uses of filesystem APIs for race conditions and the like within the standard library", "user": {"login": "briansmith", "id": 16816, "node_id": "MDQ6VXNlcjE2ODE2", "avatar_url": "https://avatars.githubusercontent.com/u/16816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briansmith", "html_url": "https://github.com/briansmith", "followers_url": "https://api.github.com/users/briansmith/followers", "following_url": "https://api.github.com/users/briansmith/following{/other_user}", "gists_url": "https://api.github.com/users/briansmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/briansmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briansmith/subscriptions", "organizations_url": "https://api.github.com/users/briansmith/orgs", "repos_url": "https://api.github.com/users/briansmith/repos", "events_url": "https://api.github.com/users/briansmith/events{/privacy}", "received_events_url": "https://api.github.com/users/briansmith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}, {"id": 2238437210, "node_id": "MDU6TGFiZWwyMjM4NDM3MjEw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-io", "name": "A-io", "color": "f7e101", "default": false, "description": "Area: std::io, std::fs, std::net and std::path"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-01-20T20:11:26Z", "updated_at": "2023-04-09T03:52:26Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "One consequence of https://blog.rust-lang.org/2022/01/20/cve-2022-21658.html is that many people will now be auditing the use of `std::fs::{metdata,symlink_metadata,File::metadata,Metadata}` looking for similar race condition bugs. We should have some coordinated effort to ensure we have the comprehensive results of doing said audit; i.e. we should coordinate such an audit ourselves and publish the results.\r\n\r\nI spent a few minutes thinking about this and started looking myself. Besides race conditions due to metadata checks, there are also checks as to whether a file exists (e.g. in `resolve_exe`) that seem questionable, and also uses of `set_permission` that seem racy or at least under-specified/documented (https://github.com/rust-lang/rust/issues/93126). My conclusion from looking at just a few functions is that, at minimum, we need to document (in the code and in the rustdoc documentation) more clearly what kinds of racy behavior we intentionally allow, and/or eliminate the racy behaviors.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93127/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93127/timeline", "performed_via_github_app": null, "state_reason": null}