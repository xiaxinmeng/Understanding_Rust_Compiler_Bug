{"url": "https://api.github.com/repos/rust-lang/rust/issues/38071", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/38071/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/38071/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/38071/events", "html_url": "https://github.com/rust-lang/rust/issues/38071", "id": 192298159, "node_id": "MDU6SXNzdWUxOTIyOTgxNTk=", "number": 38071, "title": "`where` clause shadows information about higher `impl`s", "user": {"login": "Twey", "id": 101639, "node_id": "MDQ6VXNlcjEwMTYzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/101639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Twey", "html_url": "https://github.com/Twey", "followers_url": "https://api.github.com/users/Twey/followers", "following_url": "https://api.github.com/users/Twey/following{/other_user}", "gists_url": "https://api.github.com/users/Twey/gists{/gist_id}", "starred_url": "https://api.github.com/users/Twey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Twey/subscriptions", "organizations_url": "https://api.github.com/users/Twey/orgs", "repos_url": "https://api.github.com/users/Twey/repos", "events_url": "https://api.github.com/users/Twey/events{/privacy}", "received_events_url": "https://api.github.com/users/Twey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-29T14:37:04Z", "updated_at": "2023-03-20T11:36:09Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "It appears that the typechecker, on encountering a `where` clause, will assume the `impl` information given in the `where` bound and stop looking for `impl`s, thus missing additional information that may be available about the `impl` outside the item.\r\n\r\nFor example, this code doesn't typecheck:\r\n```rust\r\npub trait Id { type Id; }\r\nimpl<T> Id for T { type Id = T; }\r\n\r\npub fn foo<A>(a: A) -> <A as Id>::Id\r\nwhere A: Id\r\n{ a }\r\n```\r\ngiving the error:\r\n```\r\nhkt-mwe.rs:6:3: 6:4 error: mismatched types [E0308]\r\nhkt-mwe.rs:6 { a }\r\n               ^\r\nhkt-mwe.rs:6:3: 6:4 help: run `rustc --explain E0308` to see a detailed explanation\r\nhkt-mwe.rs:6:3: 6:4 note: expected type `<A as Id>::Id`\r\nhkt-mwe.rs:6:3: 6:4 note:    found type `A`\r\n```\r\nbut the same code without the `where`-bound, which should be entirely redundant since it provides only information already known to the type-checker, compiles.\r\n\r\nThis makes putting emulated HKTs into traits difficult, as a type that depends on such a thing must have a `where` clause in the trait that, though redundant, must appear in the `impl` to avoid E0195.\r\n\r\nEdit: Current error:\r\n```\r\nerror[[E0308]](https://doc.rust-lang.org/stable/error_codes/E0308.html): mismatched types\r\n --> src/lib.rs:6:3\r\n  |\r\n4 | pub fn foo<A>(a: A) -> <A as Id>::Id\r\n  |            -           ------------- expected `<A as Id>::Id` because of return type\r\n  |            |\r\n  |            this type parameter\r\n5 | where A: Id\r\n6 | { a }\r\n  |   ^ expected associated type, found type parameter `A`\r\n  |\r\n  = note: expected associated type `<A as Id>::Id`\r\n              found type parameter `A`\r\nhelp: consider further restricting this bound\r\n  |\r\n5 | where A: Id + Id<Id = A>\r\n  |             ++++++++++++\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: could not compile `playground` due to previous error\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/38071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/38071/timeline", "performed_via_github_app": null, "state_reason": null}