{"url": "https://api.github.com/repos/rust-lang/rust/issues/91497", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91497/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91497/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91497/events", "html_url": "https://github.com/rust-lang/rust/issues/91497", "id": 1070825478, "node_id": "I_kwDOAAsO6M4_04AG", "number": 91497, "title": "`Vec::retain()` is significantly slower than `into_iter().filter().collect()`", "user": {"login": "kageru", "id": 21066028, "node_id": "MDQ6VXNlcjIxMDY2MDI4", "avatar_url": "https://avatars.githubusercontent.com/u/21066028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kageru", "html_url": "https://github.com/kageru", "followers_url": "https://api.github.com/users/kageru/followers", "following_url": "https://api.github.com/users/kageru/following{/other_user}", "gists_url": "https://api.github.com/users/kageru/gists{/gist_id}", "starred_url": "https://api.github.com/users/kageru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kageru/subscriptions", "organizations_url": "https://api.github.com/users/kageru/orgs", "repos_url": "https://api.github.com/users/kageru/repos", "events_url": "https://api.github.com/users/kageru/events{/privacy}", "received_events_url": "https://api.github.com/users/kageru/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 166999014, "node_id": "MDU6TGFiZWwxNjY5OTkwMTQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-collections", "name": "A-collections", "color": "f7e101", "default": false, "description": "Area: std::collections."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 889209675, "node_id": "MDU6TGFiZWw4ODkyMDk2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-iterators", "name": "A-iterators", "color": "f7e101", "default": false, "description": "Area: Iterators"}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2021-12-03T17:54:36Z", "updated_at": "2021-12-16T10:51:29Z", "closed_at": "2021-12-16T10:51:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed today that using `Vec::retain` is much slower than filtering and allocating a new Vector.\r\nI realize the former is probably more memory efficient, but I still found it surprising that it would be that much slower (or really slower at all).\r\n\r\nWhen testing with this code:\r\n```rs\r\n#![feature(test)]\r\nextern crate test;\r\n\r\nfn main() {\r\n    let xs: Vec<i32> = (0..1000).collect();\r\n    assert_eq!(even_with_retain(xs.clone()), even_with_filter(xs.clone()));\r\n}\r\n\r\npub fn even_with_retain(mut xs: Vec<i32>) -> Vec<i32> {\r\n    xs.retain(|x| x & 1 == 0);\r\n    xs\r\n}\r\n\r\npub fn even_with_filter(xs: Vec<i32>) -> Vec<i32> {\r\n    xs.into_iter().filter(|x| x & 1 == 0).collect()\r\n}\r\n\r\n#[bench]\r\nfn bench_retain(b: &mut test::Bencher) {\r\n    let xs: Vec<i32> = (0..1000).collect();\r\n    b.iter(|| assert_eq!(even_with_retain(test::black_box(xs.clone())).len(), 500));\r\n}\r\n\r\n#[bench]\r\nfn bench_filter_collect(b: &mut test::Bencher) {\r\n    let xs: Vec<i32> = (0..1000).collect();\r\n    b.iter(|| assert_eq!(even_with_filter(test::black_box(xs.clone())).len(), 500));\r\n}\r\n```\r\non 1.59.0-nightly (48a5999fc 2021-12-01), I get these benchmark results:\r\n```\r\ntest bench_filter_collect ... bench:         383 ns/iter (+/- 4)\r\ntest bench_retain         ... bench:       1,891 ns/iter (+/- 17)\r\n```\r\non a Ryzen 5900X running Linux. Testing on a different machine (Xeon E3-1271 v3), I get similar numbers:\r\n```\r\ntest bench_filter_collect ... bench:         498 ns/iter (+/- 29)\r\ntest bench_retain         ... bench:       1,800 ns/iter (+/- 44)\r\n```\r\n\r\n`Vec::retain` seemed like the obvious choice to me, so it being slower is either a bug or should be documented somewhere.\r\n\r\n[Godbolt](https://godbolt.org/z/M199d5Gz8)\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"the8472\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91497/reactions", "total_count": 8, "+1": 8, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91497/timeline", "performed_via_github_app": null, "state_reason": "completed"}