{"url": "https://api.github.com/repos/rust-lang/rust/issues/38882", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/38882/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/38882/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/38882/events", "html_url": "https://github.com/rust-lang/rust/issues/38882", "id": 199257666, "node_id": "MDU6SXNzdWUxOTkyNTc2NjY=", "number": 38882, "title": "Some way to perform in-place sorting in iterator chains?", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-06T18:30:10Z", "updated_at": "2017-11-18T20:33:05Z", "closed_at": "2017-11-18T20:33:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the Python language sort() doesn't return the sorted items, probably to better remind the programmer that sort is a procedure that works in-place (there is a sorted() function, that returns the sorted items, but it copies the input, so it's not in-place):\r\n\r\n    >>> a = [10, 5, 1, 6]\r\n    >>> a.sort()\r\n    >>> a\r\n    [1, 5, 6, 10]\r\n    >>> sorted([10, 5, 1, 6])\r\n    [1, 5, 6, 10]\r\n\r\n\r\nIn D language the chains of ranges (similar to the Rust chains of iterators) are quite common, so the D standard library uses an intermediate solution:\r\n\r\n    void main() {\r\n        import std.stdio, std.algorithm;\r\n        writeln([10, 5, 1, 6].sort().release());\r\n    }\r\n\r\n\r\nIn D sort() doesn't return the sorted items, but a SortedRange struct that denotes that the items it refers to are sorted (and this struct allows nice binary searches and other quite useful things, that are not possible equally nicely in Rust) and you can pull out the sorted items using the SortedRange.release() method. This allows to both use sort() in range chains and avoid bugs.\r\n\r\nCurrently in Rust you can't use sort() in iterator chains():\r\n\r\n    fn main() {\r\n        let mut arr = [10, 5, 1, 6];\r\n        arr.sort();\r\n        println!(\"{:?}\", arr);\r\n    }\r\n\r\nCan we improve this situation in some way?\r\n- Changing the return type of sort() is probably a breaking change now.\r\n- Adding iterator methods like sorted() and sorted_by_key() (that internally create a vector of items, sort it and return it) could help, but it doesn't solve the general problem.\r\n- So a solution is to add some new sort methods (and deprecate the old ones in Rust 2.0).", "closed_by": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/38882/reactions", "total_count": 9, "+1": 9, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/38882/timeline", "performed_via_github_app": null, "state_reason": "completed"}