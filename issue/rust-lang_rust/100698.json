{"url": "https://api.github.com/repos/rust-lang/rust/issues/100698", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/100698/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/100698/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/100698/events", "html_url": "https://github.com/rust-lang/rust/issues/100698", "id": 1342251415, "node_id": "I_kwDOAAsO6M5QASGX", "number": 100698, "title": "`Result<u32, u32>` uses less efficient ABI than `Result<i32, u32>`", "user": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1944310735, "node_id": "MDU6TGFiZWwxOTQ0MzEwNzM1", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-layout", "name": "A-layout", "color": "f7e101", "default": false, "description": "Area: Memory layout of types"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-08-17T20:18:14Z", "updated_at": "2022-08-31T04:30:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed this while writing a codegen test for https://github.com/rust-lang/rust/issues/37939#issuecomment-1218345560.\r\nIt seems that `Result<u32, u32>` and `Result<i32, i32>` are passed as two 32-bit numbers, while `Result<i32, u32>` and `Result<u32, i32>` are passed as a single 64-bit number.\r\n\r\nCompiler: `rustc 1.65.0-nightly (86c6ebee8 2022-08-16)`\r\n\r\n<details>\r\n<summary>Code</summary>\r\n\r\n```rust\r\npub fn result_nop_match_i32(x: Result<i32, i32>) -> Result<i32, i32> {\r\n    match x {\r\n        Ok(x) => Ok(x),\r\n        Err(x) => Err(x),\r\n    }\r\n}\r\npub fn result_nop_match_u32(x: Result<u32, u32>) -> Result<u32, u32> {\r\n    match x {\r\n        Ok(x) => Ok(x),\r\n        Err(x) => Err(x),\r\n    }\r\n}\r\npub fn result_nop_match_i32_u32(x: Result<i32, u32>) -> Result<i32, u32> {\r\n    match x {\r\n        Ok(x) => Ok(x),\r\n        Err(x) => Err(x),\r\n    }\r\n}\r\npub fn result_nop_match_u32_i32(x: Result<u32, i32>) -> Result<u32, i32> {\r\n    match x {\r\n        Ok(x) => Ok(x),\r\n        Err(x) => Err(x),\r\n    }\r\n}\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>LLVM IR</summary>\r\n\r\n```llvm-ir\r\ndefine { i32, i32 } @_ZN7example20result_nop_match_i3217h90973337e0ea1f0bE(i32 noundef %0, i32 %1) unnamed_addr #0 !dbg !6 {\r\n  %2 = insertvalue { i32, i32 } undef, i32 %0, 0, !dbg !11\r\n  %3 = insertvalue { i32, i32 } %2, i32 %1, 1, !dbg !11\r\n  ret { i32, i32 } %3, !dbg !11\r\n}\r\n\r\ndefine { i32, i32 } @_ZN7example20result_nop_match_u3217ha367bf54ac4241a2E(i32 noundef %0, i32 %1) unnamed_addr #0 !dbg !12 {\r\n  %2 = insertvalue { i32, i32 } undef, i32 %0, 0, !dbg !13\r\n  %3 = insertvalue { i32, i32 } %2, i32 %1, 1, !dbg !13\r\n  ret { i32, i32 } %3, !dbg !13\r\n}\r\n\r\ndefine i64 @_ZN7example24result_nop_match_i32_u3217h0912c9953cfa7e17E(i64 returned %0) unnamed_addr #0 !dbg !14 {\r\n  ret i64 %0, !dbg !15\r\n}\r\n\r\ndefine i64 @_ZN7example24result_nop_match_u32_i3217h8fc452067b26b8ddE(i64 returned %0) unnamed_addr #0 !dbg !16 {\r\n  ret i64 %0, !dbg !17\r\n}\r\n```\r\n</details>\r\n\r\nhttps://rust.godbolt.org/z/n91oWdjMh\r\n\r\nI'm not sure if there's something stopping `Result<u32, u32>` from being coerced to a single 64-bit number (maybe some heuristic for auto-vectorization?), but this seemed a bit odd to me. It's also a bit surprising to me that `Result<u32, u32>` is represented as `define { i32, i32 }`, but I don't really know a lot about the Rust ABI.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/100698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/100698/timeline", "performed_via_github_app": null, "state_reason": null}