{"url": "https://api.github.com/repos/rust-lang/rust/issues/107296", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107296/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107296/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107296/events", "html_url": "https://github.com/rust-lang/rust/issues/107296", "id": 1556810883, "node_id": "I_kwDOAAsO6M5cywyD", "number": 107296, "title": "Use `free_aligned_sized()` on UNIX systems if available (C23)", "user": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}, {"id": 2635899341, "node_id": "MDU6TGFiZWwyNjM1ODk5MzQx", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-unix", "name": "O-unix", "color": "6e6ec0", "default": false, "description": "Operating system: Unix-like"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-01-25T15:07:31Z", "updated_at": "2023-01-25T16:04:31Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See https://www.open-std.org/jtc1/sc22/wg14/www/docs/n2699.htm and quoting from there the main rationale\r\n\r\n> Several heap allocators[1](https://www.open-std.org/jtc1/sc22/wg14/www/docs/n2699.htm#fn1) (hereafter, \"allocators\") expose as extensions variants of free that accept, in addition to the address of the allocation, an additional argument \"reminding\" the allocator of the size of that allocation. These extensions can reduce deallocation cost by 30%, allow extra security-hardening functionality, and currently ship in several implementations. We propose standardizing these functions, so that these improvements are available portably.\r\n\r\nWhile not standardized yet and at least not provided by any glibc release yet, once it becomes available this seems like a free potential performance and/or safety improvement when using the default allocator as the extra information required in addition to what `free()` needs is directly available as part of the `Layout` struct.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107296/reactions", "total_count": 3, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 3}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107296/timeline", "performed_via_github_app": null, "state_reason": null}