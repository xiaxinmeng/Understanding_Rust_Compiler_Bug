{"url": "https://api.github.com/repos/rust-lang/rust/issues/72242", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72242/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72242/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72242/events", "html_url": "https://github.com/rust-lang/rust/issues/72242", "id": 619177741, "node_id": "MDU6SXNzdWU2MTkxNzc3NDE=", "number": 72242, "title": "Internal compiler error: cannot convert `ReEarlyBound(0, 'a)` to a region vid", "user": {"login": "petervaro", "id": 2691101, "node_id": "MDQ6VXNlcjI2OTExMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/2691101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petervaro", "html_url": "https://github.com/petervaro", "followers_url": "https://api.github.com/users/petervaro/followers", "following_url": "https://api.github.com/users/petervaro/following{/other_user}", "gists_url": "https://api.github.com/users/petervaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/petervaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petervaro/subscriptions", "organizations_url": "https://api.github.com/users/petervaro/orgs", "repos_url": "https://api.github.com/users/petervaro/repos", "events_url": "https://api.github.com/users/petervaro/events{/privacy}", "received_events_url": "https://api.github.com/users/petervaro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-15T19:00:23Z", "updated_at": "2020-05-15T19:03:21Z", "closed_at": "2020-05-15T19:03:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "During the compilation of the below code:\r\n\r\n```rust\r\nuse std::marker::PhantomData;\r\n\r\nstruct S<'a>\r\n{\r\n    m1: PhantomData<&'a u8>,\r\n    m2: [u8; S::size()],\r\n}\r\n\r\nimpl<'a> S<'a>\r\n{\r\n    const fn size() -> usize { 1 }\r\n\r\n    fn new() -> Self\r\n    {\r\n        Self\r\n        {\r\n            m1: PhantomData,\r\n            m2: [0; Self::size()],\r\n        }\r\n    }\r\n}\r\n```\r\nThe compiler panicked with the following error(s):\r\n\r\n**Stable:**\r\n```none\r\nerror: internal compiler error: src/librustc_mir/borrow_check/universal_regions.rs:754: cannot convert `ReEarlyBound(0, 'a)` to a region vid\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:875:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.1 (8d69840ab 2020-05-04) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\n**Nightly:**\r\n```none\r\nerror: internal compiler error: free_scope: DefId(0:9 ~ bugr[a70b]::{{impl}}[0]) not recognized by the region scope tree for None / Some(DefId(0:12 ~ bugr[a70b]::{{impl}}[0]::new[0]))\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src/librustc_errors/lib.rs:366:17\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.45.0-nightly (a74d1862d 2020-05-14) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n```\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n\r\n**Stable:**\r\n```none\r\nrustc 1.43.1 (8d69840ab 2020-05-04)\r\nbinary: rustc\r\ncommit-hash: 8d69840ab92ea7f4d323420088dd8c9775f180cd\r\ncommit-date: 2020-05-04\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.43.1\r\nLLVM version: 9.0\r\n```\r\n\r\n**Nightly:**\r\n```none\r\nrustc 1.45.0-nightly (a74d1862d 2020-05-14)\r\nbinary: rustc\r\ncommit-hash: a74d1862d4d87a56244958416fd05976c58ca1a8\r\ncommit-date: 2020-05-14\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.45.0-nightly\r\nLLVM version: 9.0\r\n```\r\n\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n**Stable:**\r\n```none\r\nerror: internal compiler error: src/librustc_mir/borrow_check/universal_regions.rs:754: cannot convert `ReEarlyBound(0, 'a)` to a region vid\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:875:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1063\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1426\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:474\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_opt\r\n  18: rustc::util::bug::opt_span_bug_fmt\r\n  19: rustc::util::bug::bug_fmt\r\n  20: rustc_mir::borrow_check::universal_regions::UniversalRegionIndices::to_region_vid::{{closure}}\r\n  21: rustc_mir::borrow_check::type_check::constraint_conversion::ConstraintConversion::convert_all\r\n  22: rustc_mir::borrow_check::type_check::type_check\r\n  23: rustc_mir::borrow_check::nll::compute_regions\r\n  24: rustc_mir::borrow_check::do_mir_borrowck\r\n  25: rustc::ty::context::GlobalCtxt::enter_local\r\n  26: rustc_mir::borrow_check::mir_borrowck\r\n  27: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::mir_borrowck>::compute\r\n  28: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  29: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::force_query\r\n  30: rustc::ty::query::force_from_dep_node\r\n  31: rustc::dep_graph::graph::DepGraph::try_mark_previous_green\r\n  32: rustc::dep_graph::graph::DepGraph::try_mark_green\r\n  33: rustc::dep_graph::graph::DepGraph::try_mark_green_and_read\r\n  34: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  35: rustc_mir::interpret::eval_context::InterpCx<M>::load_mir\r\n  36: rustc_mir::const_eval::eval_queries::const_eval_raw_provider\r\n  37: rustc::ty::query::__query_compute::const_eval_raw\r\n  38: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval_raw>::compute\r\n  39: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  40: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  41: rustc_mir::const_eval::eval_queries::const_eval_validated_provider\r\n  42: rustc::ty::query::__query_compute::const_eval_validated\r\n  43: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval_validated>::compute\r\n  44: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  45: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  46: rustc_mir::const_eval::eval_queries::const_eval_validated_provider\r\n  47: rustc::ty::query::__query_compute::const_eval_validated\r\n  48: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval_validated>::compute\r\n  49: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  50: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  51: rustc::mir::interpret::queries::<impl rustc::ty::context::TyCtxt>::const_eval_poly\r\n  52: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  53: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  54: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_coercable_to_type\r\n  55: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  56: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  57: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  58: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  59: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  60: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_return_expr\r\n  61: rustc_typeck::check::check_fn\r\n  62: rustc::ty::context::GlobalCtxt::enter_local\r\n  63: rustc_typeck::check::typeck_tables_of\r\n  64: rustc::ty::query::__query_compute::typeck_tables_of\r\n  65: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_tables_of>::compute\r\n  66: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  67: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  68: rustc::ty::<impl rustc::ty::context::TyCtxt>::par_body_owners\r\n  69: rustc_typeck::check::typeck_item_bodies\r\n  70: rustc::ty::query::__query_compute::typeck_item_bodies\r\n  71: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  72: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  73: rustc_typeck::check_crate\r\n  74: rustc_interface::passes::analysis\r\n  75: rustc::ty::query::__query_compute::analysis\r\n  76: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  77: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  78: rustc::ty::context::tls::enter_global\r\n  79: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.1 (8d69840ab 2020-05-04) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [mir_borrowck] borrow-checking `S::<'a>::new::{{constant}}#0`\r\n#1 [optimized_mir] processing `S::<'a>::new::{{constant}}#0`\r\n#2 [const_eval_raw] const-evaluating `S::<'a>::new::{{constant}}#0`\r\n#3 [const_eval_validated] const-evaluating + checking `S::<'a>::new::{{constant}}#0`\r\n#4 [const_eval_validated] const-evaluating + checking `S::<'a>::new::{{constant}}#0`\r\n#5 [typeck_tables_of] type-checking `S::<'a>::new`\r\n#6 [typeck_item_bodies] type-checking all item bodies\r\n#7 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n```\r\n\r\n**Nightly:**\r\n```none\r\nerror: internal compiler error: free_scope: DefId(0:9 ~ bugr[a70b]::{{impl}}[0]) not recognized by the region scope tree for None / Some(DefId(0:12 ~ bugr[a70b]::{{impl}}[0]::new[0]))\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src/librustc_errors/lib.rs:366:17\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1069\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1537\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:218\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:481\r\n  12: std::panicking::begin_panic\r\n  13: <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop\r\n  14: core::ptr::drop_in_place\r\n  15: <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop\r\n  16: core::ptr::drop_in_place\r\n  17: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  18: scoped_tls::ScopedKey<T>::set\r\n  19: rustc_ast::attr::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.45.0-nightly (a74d1862d 2020-05-14) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72242/timeline", "performed_via_github_app": null, "state_reason": "completed"}