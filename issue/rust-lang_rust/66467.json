{"url": "https://api.github.com/repos/rust-lang/rust/issues/66467", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66467/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66467/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66467/events", "html_url": "https://github.com/rust-lang/rust/issues/66467", "id": 523825958, "node_id": "MDU6SXNzdWU1MjM4MjU5NTg=", "number": 66467, "title": "ICE with proc-macro expanding to illegal type syntax", "user": {"login": "jfrimmel", "id": 31166235, "node_id": "MDQ6VXNlcjMxMTY2MjM1", "avatar_url": "https://avatars.githubusercontent.com/u/31166235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfrimmel", "html_url": "https://github.com/jfrimmel", "followers_url": "https://api.github.com/users/jfrimmel/followers", "following_url": "https://api.github.com/users/jfrimmel/following{/other_user}", "gists_url": "https://api.github.com/users/jfrimmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfrimmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfrimmel/subscriptions", "organizations_url": "https://api.github.com/users/jfrimmel/orgs", "repos_url": "https://api.github.com/users/jfrimmel/repos", "events_url": "https://api.github.com/users/jfrimmel/events{/privacy}", "received_events_url": "https://api.github.com/users/jfrimmel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-16T10:10:25Z", "updated_at": "2019-11-16T13:11:40Z", "closed_at": "2019-11-16T13:11:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've written a proc macro, that consistently produces an ICE. You'll find the code and the backtrace below. Note, that the ICE occurs with any type, that originates in an external crate, that is not included in the `Cargo.toml` (tested with `regex::Regex` and `spin::Once`).\r\n\r\n<details>\r\n  <summary>`proc-macro-ice` Source code</summary>\r\n\r\nCargo.toml\r\n```toml\r\n[package]\r\nname = \"proc-macro-ice\"\r\nversion = \"0.1.0\"\r\nedition = \"2018\"\r\n\r\n[lib]\r\nproc-macro = true\r\n\r\n[dependencies]\r\nquote = \"1.0\"\r\n```\r\nsrc/lib.rs\r\n```rust\r\nextern crate proc_macro;\r\n\r\nuse proc_macro::TokenStream;\r\nuse quote::quote;\r\n\r\n#[proc_macro_attribute]\r\npub fn y(_: TokenStream, _: TokenStream) -> TokenStream {\r\n    let expanded = quote! {\r\n        struct A(regex::Regex);\r\n        static X: A(regex::Regex) = A(regex::Regex::new(\"a\"));\r\n    };\r\n    expanded.into()\r\n}\r\n```\r\ntests/ice.rs\r\n ```rust\r\n#[proc_macro_ice::y]\r\nstruct S;\r\n```\r\n</details>\r\n\r\nBacktrace on `cargo test`:\r\n```\r\nerror[E0433]: failed to resolve: use of undeclared type or module `regex`\r\n --> tests/ice.rs:1:1\r\n  |\r\n1 | #[proc_macro_ice::y]\r\n  | ^^^^^^^^^^^^^^^^^^^^ use of undeclared type or module `regex`\r\n\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', /rustc/4f03f4a989d1c8346c19dfb417a77c09b34408b8/src/libcore/macros.rs:41:40\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:77\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:61\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1030\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1412\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:65\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:50\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:188\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:205\r\n  10: rustc_driver::report_ice\r\n  11: <alloc::boxed::Box<F> as core::ops::function::Fn<A>>::call\r\n             at /rustc/4f03f4a989d1c8346c19dfb417a77c09b34408b8/src/liballoc/boxed.rs:956\r\n  12: proc_macro::bridge::client::<impl proc_macro::bridge::Bridge>::enter::{{closure}}::{{closure}}\r\n             at /rustc/4f03f4a989d1c8346c19dfb417a77c09b34408b8/src/libproc_macro/bridge/client.rs:305\r\n  13: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:468\r\n  14: std::panicking::continue_panic_fmt\r\n             at src/libstd/panicking.rs:373\r\n  15: rust_begin_unwind\r\n             at src/libstd/panicking.rs:302\r\n  16: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:141\r\n  17: core::panicking::panic\r\n             at src/libcore/panicking.rs:72\r\n  18: rustc::hir::lowering::LoweringContext::lower_path_segment\r\n  19: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold\r\n  20: <rustc::hir::ptr::P<[T]> as core::iter::traits::collect::FromIterator<T>>::from_iter\r\n  21: rustc::hir::lowering::LoweringContext::lower_qpath\r\n  22: rustc::hir::lowering::LoweringContext::lower_path_ty\r\n  23: rustc::hir::lowering::LoweringContext::lower_ty_direct\r\n  24: rustc::hir::lowering::item::<impl rustc::hir::lowering::LoweringContext>::lower_item_kind\r\n  25: rustc::hir::lowering::item::<impl rustc::hir::lowering::LoweringContext>::lower_item\r\n  26: rustc::hir::lowering::LoweringContext::with_hir_id_owner\r\n  27: <rustc::hir::lowering::item::ItemLowerer as syntax::visit::Visitor>::visit_mod\r\n  28: rustc::hir::lowering::lower_crate\r\n  29: rustc_interface::passes::BoxedResolver::access::{{closure}}\r\n  30: rustc_interface::passes::configure_and_expand::{{closure}}\r\n  31: rustc_data_structures::box_region::PinnedGenerator<I,A,R>::access\r\n  32: rustc_interface::queries::Query<T>::compute\r\n  33: rustc_interface::queries::Query<T>::compute\r\n  34: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::global_ctxt\r\n  35: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  36: std::thread::local::LocalKey<T>::with\r\n  37: scoped_tls::ScopedKey<T>::set\r\n  38: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.40.0-nightly (4f03f4a98 2019-11-12) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0433`.\r\nerror: could not compile `proc-macro-ice`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```", "closed_by": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66467/timeline", "performed_via_github_app": null, "state_reason": "completed"}