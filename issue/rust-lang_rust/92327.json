{"url": "https://api.github.com/repos/rust-lang/rust/issues/92327", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92327/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92327/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92327/events", "html_url": "https://github.com/rust-lang/rust/issues/92327", "id": 1089430652, "node_id": "I_kwDOAAsO6M5A72R8", "number": 92327, "title": "Potential optimization: Bounds check hoisting", "user": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2021-12-27T19:22:27Z", "updated_at": "2022-05-29T23:04:51Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It'd be nice if we had a MIR-level optimization pass that could rewrite bounds checks. Here's an example of something Rust couldn't optimize, from https://twitter.com/dougallj/status/1475236088096571392:\r\n\r\n> I wanted to explore this for bounds checking, where Rust (last I checked) couldn't optimise the checks for `a[i]; a[i+1]; a[i+2]; a[i+9]` to `len > 9 && i < len-9` because it needs to fail at exactly the right place.\r\n\r\nThis seems like something that MIR could optimize, since we're responsible for the bounds checks at the language/core library level. However, there's some question as to what the right semantics are: is it OK to fail early? Should we hoist bounds checks only if we detect there's no state in between where the bounds check \"should\" be and where we hoist it to that could be visible to other threads?\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"JakobDegen\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92327/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92327/timeline", "performed_via_github_app": null, "state_reason": null}