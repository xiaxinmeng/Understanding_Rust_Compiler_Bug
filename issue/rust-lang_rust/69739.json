{"url": "https://api.github.com/repos/rust-lang/rust/issues/69739", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69739/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69739/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69739/events", "html_url": "https://github.com/rust-lang/rust/issues/69739", "id": 576364173, "node_id": "MDU6SXNzdWU1NzYzNjQxNzM=", "number": 69739, "title": "rustc_span footgun: ensure_source_file_source_present has to be manually called.", "user": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-05T16:07:39Z", "updated_at": "2020-03-05T16:09:39Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Methods like `SourceFile::get_line` always succeed for files from the current crate, but if the file is imported cross-crate (which will include macros after #66364), they will silently fail unless `SourceMap::ensure_source_file_source_present` was called with that `SourceFile` ahead of time.\r\n\r\nThe reason this isn't more automated is because a `SourceFile` by itself can't load files on demand.\r\nWe could perhaps work around this by moving all APIs that access `src` and/or `external_src` to `SourceMap`, which would allow fully automatic on-demand loading.\r\n\r\n(An extreme version of this would be replacing `Rc<SourceFile>` with `newtype_index!` `SourceFile` and `IndexMap<SourceFile, SourceFileData` in `SourceMap`, but we needn't do that now)\r\n\r\nAs it stands, there is probably a bunch of code in the compiler (typically around diagnostics, especially suggestions) which is getting source code from a `SourceFile` without ever calling `ensure_source_file_source_present`, so if we don't automate it, we'd need to do an audit.\r\n\r\ncc @rust-lang/wg-diagnostics @petrochenkov ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69739/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69739/timeline", "performed_via_github_app": null, "state_reason": null}