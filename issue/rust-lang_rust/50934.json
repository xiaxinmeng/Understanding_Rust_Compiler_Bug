{"url": "https://api.github.com/repos/rust-lang/rust/issues/50934", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50934/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50934/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50934/events", "html_url": "https://github.com/rust-lang/rust/issues/50934", "id": 324906363, "node_id": "MDU6SXNzdWUzMjQ5MDYzNjM=", "number": 50934, "title": "optimize the way that loans are killed in borrowck dataflow", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 867466241, "node_id": "MDU6TGFiZWw4Njc0NjYyNDE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-performant", "name": "NLL-performant", "color": "f799ea", "default": false, "description": "Working towards the \"performance is good\" goal"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-21T12:56:29Z", "updated_at": "2018-05-30T11:35:18Z", "closed_at": "2018-05-30T11:35:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Profiling reveals that `kill_loans_out_of_scope_at_location` is a pretty major hot spot. It is pretty naive right now: for each point, it iterates over *all* borrows to check if that point is included. In fact, it seems to do that *twice* (@davidtwco opened https://github.com/rust-lang/rust/pull/50891 to deal with that). \r\n\r\nI am not sure the best way to handle this computation. One option that is not theoretically better but seems likely to be much better in practice would be:\r\n\r\n- Iterate over each borrow expression B, with associated region `'a`:\r\n  - For each borrow B, do a depth-first search starting at the location of the borrow\r\n  - When this DFS reaches a point P that is not in `'a`, end the walk, but add `B` to `kill` set for P\r\n\r\nThis is still O(n^2), but I think it seems likely to be much better in practice, and I can't think of a better way. \r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50934/timeline", "performed_via_github_app": null, "state_reason": "completed"}