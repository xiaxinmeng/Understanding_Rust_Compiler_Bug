{"url": "https://api.github.com/repos/rust-lang/rust/issues/83539", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83539/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83539/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83539/events", "html_url": "https://github.com/rust-lang/rust/issues/83539", "id": 842351048, "node_id": "MDU6SXNzdWU4NDIzNTEwNDg=", "number": 83539, "title": "ICE: panicked at 'called `Result::unwrap()` on an `Err` value: MoveData...compiler/rustc_mir/src/transform/rustc_peek.rs:37:70", "user": {"login": "chengniansun", "id": 4554271, "node_id": "MDQ6VXNlcjQ1NTQyNzE=", "avatar_url": "https://avatars.githubusercontent.com/u/4554271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chengniansun", "html_url": "https://github.com/chengniansun", "followers_url": "https://api.github.com/users/chengniansun/followers", "following_url": "https://api.github.com/users/chengniansun/following{/other_user}", "gists_url": "https://api.github.com/users/chengniansun/gists{/gist_id}", "starred_url": "https://api.github.com/users/chengniansun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chengniansun/subscriptions", "organizations_url": "https://api.github.com/users/chengniansun/orgs", "repos_url": "https://api.github.com/users/chengniansun/repos", "events_url": "https://api.github.com/users/chengniansun/events{/privacy}", "received_events_url": "https://api.github.com/users/chengniansun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1568304854, "node_id": "MDU6TGFiZWwxNTY4MzA0ODU0", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-rustc_attrs", "name": "F-rustc_attrs", "color": "f9c0cc", "default": false, "description": "Internal rustc attributes gated on the `#[rustc_attrs]` feature gate."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 5352452905, "node_id": "LA_kwDOAAsO6M8AAAABPwfzKQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-internal-features", "name": "requires-internal-features", "color": "76dcde", "default": false, "description": "This issue requires the use of internal features"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-03-26T23:11:55Z", "updated_at": "2023-04-05T05:42:10Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "\r\n<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(rustc_attrs)]\r\nstruct S;\r\n#[rustc_mir()]\r\nfn foo(x: &S) {\r\n    let ret;\r\n    *x;\r\n    ret\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.53.0-nightly (52e3dffa5 2021-03-25)\r\nbinary: rustc\r\ncommit-hash: 52e3dffa50cfffdcfa145c0cc0ba48b49abc0c07\r\ncommit-date: 2021-03-25\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.53.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'called `Result::unwrap()` on an `Err` value: (MoveData { move_paths: [MovePath { place: _0 }, MovePath { place: _1 }, MovePath { place: _2 }, MovePath { place: _3 }], moves: [mp3@bb0[3], mp2@bb0[5]], loc_map: LocationMap { map: [[[], [], [], [mo0], [], [mo1], []]] }, path_map: [[], [], [mo1], [mo0]], rev_lookup: MovePathLookup { locals: [mp0, mp1, mp2, mp3], projections: {} }, inits: [mp1@Argument(_1) (Deep), mp3@Statement(bb0[2]) (Deep), mp0@Statement(bb0[4]) (Deep)], init_loc_map: LocationMap { map: [[[], [], [in1], [], [in2], [], []]] }, init_path_map: [[in2], [in0], [], [in1]] }, [((*_1), IllegalMove { cannot_move_out_of: IllegalMoveOrigin { location: bb0[2], kind: BorrowedContent { target_place: (*_1) } } })])', compiler/rustc_mir/src/transform/rustc_peek.rs:37:70\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (52e3dffa5 2021-03-25) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type staticlib\r\n\r\nquery stack during panic:\r\n#0 [mir_const] processing MIR for `foo`\r\n#1 [mir_promoted] processing `foo`\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'called `Result::unwrap()` on an `Err` value: (MoveData { move_paths: [MovePath { place: _0 }, MovePath { place: _1 }, MovePath { place: _2 }, MovePath { place: _3 }], moves: [mp3@bb0[3], mp2@bb0[5]], loc_map: LocationMap { map: [[[], [], [], [mo0], [], [mo1], []]] }, path_map: [[], [], [mo1], [mo0]], rev_lookup: MovePathLookup { locals: [mp0, mp1, mp2, mp3], projections: {} }, inits: [mp1@Argument(_1) (Deep), mp3@Statement(bb0[2]) (Deep), mp0@Statement(bb0[4]) (Deep)], init_loc_map: LocationMap { map: [[[], [], [in1], [], [in2], [], []]] }, init_path_map: [[in2], [in0], [], [in1]] }, [((*_1), IllegalMove { cannot_move_out_of: IllegalMoveOrigin { location: bb0[2], kind: BorrowedContent { target_place: (*_1) } } })])', compiler/rustc_mir/src/transform/rustc_peek.rs:37:70\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/52e3dffa50cfffdcfa145c0cc0ba48b49abc0c07/library/std/src/panicking.rs:493:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/52e3dffa50cfffdcfa145c0cc0ba48b49abc0c07/library/core/src/panicking.rs:92:14\r\n   2: core::result::unwrap_failed\r\n             at /rustc/52e3dffa50cfffdcfa145c0cc0ba48b49abc0c07/library/core/src/result.rs:1355:5\r\n   3: <rustc_mir::transform::rustc_peek::SanityCheck as rustc_mir::transform::MirPass>::run_pass\r\n   4: rustc_mir::transform::run_passes\r\n   5: rustc_mir::transform::mir_const\r\n   6: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n   7: rustc_query_system::query::plumbing::force_query_with_job\r\n   8: rustc_query_system::query::plumbing::get_query_impl\r\n   9: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_const\r\n  10: rustc_mir::transform::mir_promoted\r\n  11: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  12: rustc_query_system::query::plumbing::force_query_with_job\r\n  13: rustc_query_system::query::plumbing::get_query_impl\r\n  14: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_promoted\r\n  15: rustc_mir::borrow_check::mir_borrowck\r\n  16: core::ops::function::FnOnce::call_once\r\n  17: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  18: rustc_query_system::query::plumbing::force_query_with_job\r\n  19: rustc_query_system::query::plumbing::get_query_impl\r\n  20: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_borrowck\r\n  21: rustc_middle::ty::<impl rustc_middle::ty::context::TyCtxt>::par_body_owners\r\n  22: rustc_interface::passes::analysis\r\n  23: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  24: rustc_data_structures::stack::ensure_sufficient_stack\r\n  25: rustc_query_system::query::plumbing::force_query_with_job\r\n  26: rustc_query_system::query::plumbing::get_query_impl\r\n  27: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  28: rustc_interface::passes::QueryContext::enter\r\n  29: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  30: rustc_span::with_source_map\r\n  31: rustc_interface::interface::create_compiler_and_run\r\n  32: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (52e3dffa5 2021-03-25) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type staticlib\r\n\r\nquery stack during panic:\r\n#0 [mir_const] processing MIR for `foo`\r\n#1 [mir_promoted] processing `foo`\r\n#2 [mir_borrowck] borrow-checking `foo`\r\n#3 [analysis] running analysis passes on this crate\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83539/timeline", "performed_via_github_app": null, "state_reason": null}