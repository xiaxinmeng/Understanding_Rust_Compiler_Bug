{"url": "https://api.github.com/repos/rust-lang/rust/issues/33972", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/33972/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/33972/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/33972/events", "html_url": "https://github.com/rust-lang/rust/issues/33972", "id": 157561704, "node_id": "MDU6SXNzdWUxNTc1NjE3MDQ=", "number": 33972, "title": "Index trait compiler error could be more helpful", "user": {"login": "jedahan", "id": 32407, "node_id": "MDQ6VXNlcjMyNDA3", "avatar_url": "https://avatars.githubusercontent.com/u/32407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedahan", "html_url": "https://github.com/jedahan", "followers_url": "https://api.github.com/users/jedahan/followers", "following_url": "https://api.github.com/users/jedahan/following{/other_user}", "gists_url": "https://api.github.com/users/jedahan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedahan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedahan/subscriptions", "organizations_url": "https://api.github.com/users/jedahan/orgs", "repos_url": "https://api.github.com/users/jedahan/repos", "events_url": "https://api.github.com/users/jedahan/events{/privacy}", "received_events_url": "https://api.github.com/users/jedahan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-05-30T22:12:18Z", "updated_at": "2022-11-11T04:26:04Z", "closed_at": "2022-11-11T04:25:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to implement the Index trait (in my first real rust project), and was running in circles, with an implementation that started like:\n\n``` rust\nimpl Index<u16> for Interconnect {\n    type Output = u8;\n\n    fn index<'a>(&'a self, index: u16) -> u8 {\n```\n\nThere were two things I needed to learn from @Kimundi on #rust-beginners. The first was that Index requires returning an lvalue, not a primitive. So I tried\n\n``` rust\nimpl Index<u16> for Interconnect {\n    type Output = &u8;\n\n    fn index<'a>(&'a self, index: u16) -> &u8 {\n```\n\nAnd then I started running in circles annotating lifetimes going nowhere fast.\n\nThe second thing I learned from @Kimundi is that the signature should look more like:\n\n``` rust\nimpl Index<u16> for Interconnect {\n    type Output = u8;\n\n    fn index<'a>(&'a self, index: u16) -> &Self::Output {\n```\n\nThis made a lot more sense to me, and it was not clear the relationship by looking at http://doc.rust-lang.org/std/ops/trait.Index.html#examples .\n\nSo I am wondering two things:\n1. Can we update http://doc.rust-lang.org/std/ops/trait.Index.html#examples to more clearly show the relationship, or is that not possible because of the fact the example requires a lifetime specifier?\n2. Can the compiler error make another suggestion / explanation when the type of Output and return value of index are the same thing?\n", "closed_by": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/33972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/33972/timeline", "performed_via_github_app": null, "state_reason": "completed"}