{"url": "https://api.github.com/repos/rust-lang/rust/issues/66442", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66442/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66442/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66442/events", "html_url": "https://github.com/rust-lang/rust/issues/66442", "id": 523428187, "node_id": "MDU6SXNzdWU1MjM0MjgxODc=", "number": 66442, "title": "ICE using unknown variable for array length in const generic function", "user": {"login": "Michael-F-Bryan", "id": 17380079, "node_id": "MDQ6VXNlcjE3MzgwMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/17380079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Michael-F-Bryan", "html_url": "https://github.com/Michael-F-Bryan", "followers_url": "https://api.github.com/users/Michael-F-Bryan/followers", "following_url": "https://api.github.com/users/Michael-F-Bryan/following{/other_user}", "gists_url": "https://api.github.com/users/Michael-F-Bryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Michael-F-Bryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Michael-F-Bryan/subscriptions", "organizations_url": "https://api.github.com/users/Michael-F-Bryan/orgs", "repos_url": "https://api.github.com/users/Michael-F-Bryan/repos", "events_url": "https://api.github.com/users/Michael-F-Bryan/events{/privacy}", "received_events_url": "https://api.github.com/users/Michael-F-Bryan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-15T11:54:35Z", "updated_at": "2019-11-15T12:19:39Z", "closed_at": "2019-11-15T12:19:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found this while playing around with someone's const-generic array concatentation function [on Reddit](https://www.reddit.com/r/rust/comments/dwcazz/implementing_arrayvec_using_const_generics/f7kmvw5?utm_source=share&utm_medium=web2x).\r\n\r\n([playground](https://play.rust-lang.org/?version=nightly&mode=release&edition=2018&gist=fc91d966c3b8b0d92dabf997925e9b9e))\r\n\r\n```rust\r\n#![allow(incomplete_features)]\r\n#![feature(const_generics)]\r\n\r\nfn concat<const N: usize, const M: usize>(\r\n    a: &[i32; N],\r\n    b: &[i32; M],\r\n) -> [i32; N+M] {\r\n    // i32 is safely zeroable.\r\n    let mut res: [i32; NM] = unsafe { std::mem::zeroed() };  // <-- note NM, not N+M\r\n    for i in 0..N {\r\n        res[i] = a[i]\r\n    }\r\n    let mut j = N;\r\n    for i in 0..M {\r\n        res[j] = b[i];\r\n        j += 1;\r\n    }\r\n    res\r\n}\r\n\r\nfn main() {\r\n    println!(\"{:?}\", concat(&[1, 2, 3], &[4, 5, 6]));\r\n}\r\n```\r\n\r\nBacktrace:\r\n\r\n```\r\n Compiling playground v0.0.1 (/playground)\r\nerror[E0425]: cannot find value `NM` in this scope\r\n --> src/main.rs:9:24\r\n  |\r\n4 | fn concat<const N: usize, const M: usize>(\r\n  |                                 - similarly named const parameter `M` defined here\r\n...\r\n9 |     let mut res: [i32; NM] = unsafe { std::mem::zeroed() };\r\n  |                        ^^ help: a const parameter with a similar name exists: `M`\r\n\r\nerror: internal compiler error: src/librustc/ty/subst.rs:650: const parameter `N/#0` (Const { ty: usize, val: Param(N/#0) }/0) out of range when substituting substs=[]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:896:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:84\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:61\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1030\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1412\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:65\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:50\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:188\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:205\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:468\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::span_bug\r\n  14: rustc_errors::Handler::span_bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_context_opt\r\n  18: rustc::ty::context::tls::with_opt\r\n  19: rustc::util::bug::opt_span_bug_fmt\r\n  20: rustc::util::bug::span_bug_fmt\r\n  21: <rustc::ty::subst::SubstFolder as rustc::ty::fold::TypeFolder>::fold_const\r\n  22: rustc::traits::codegen::<impl rustc::ty::context::TyCtxt>::subst_and_normalize_erasing_regions\r\n  23: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_operand\r\n  24: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_rvalue_into_place\r\n  25: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::run\r\n  26: rustc_mir::const_eval::const_eval_raw_provider\r\n  27: rustc::ty::query::__query_compute::const_eval_raw\r\n  28: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval_raw>::compute\r\n  29: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  30: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  31: rustc_mir::const_eval::const_eval_provider\r\n  32: rustc::ty::query::__query_compute::const_eval\r\n  33: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval>::compute\r\n  34: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  35: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  36: rustc_mir::const_eval::const_eval_provider\r\n  37: rustc::ty::query::__query_compute::const_eval\r\n  38: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval>::compute\r\n  39: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  40: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  41: rustc::ty::sty::Const::eval\r\n  42: <rustc::traits::project::AssocTypeNormalizer as rustc::ty::fold::TypeFolder>::fold_ty\r\n  43: <smallvec::SmallVec<A> as core::iter::traits::collect::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  44: rustc::ty::fold::TypeFoldable::fold_with\r\n  45: rustc::traits::project::normalize\r\n  46: rustc_typeck::check::FnCtxt::normalize_associated_types_in\r\n  47: rustc::ty::context::GlobalCtxt::enter_local\r\n  48: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  49: rustc::ty::query::__query_compute::check_item_well_formed\r\n  50: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::check_item_well_formed>::compute\r\n  51: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  52: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  53: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::ensure_query\r\n  54: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:81\r\n  55: rustc_data_structures::sync::par_for_each_in\r\n  56: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:81\r\n  57: rustc::hir::Crate::par_visit_all_item_likes\r\n  58: rustc::util::common::time\r\n  59: rustc_typeck::check_crate\r\n  60: rustc_interface::passes::analysis\r\n  61: rustc::ty::query::__query_compute::analysis\r\n  62: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  63: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  64: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  65: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  66: rustc_interface::passes::BoxedGlobalCtxt::enter\r\n  67: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  68: std::thread::local::LocalKey<T>::with\r\n  69: scoped_tls::ScopedKey<T>::set\r\n  70: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.41.0-nightly (82cf3a448 2019-11-14) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C opt-level=3 -C codegen-units=1 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [const_eval_raw] const-evaluating `concat::{{constant}}#2`\r\n#1 [const_eval] const-evaluating + checking `concat::{{constant}}#2`\r\n#2 [const_eval] const-evaluating + checking `concat::{{constant}}#2`\r\n#3 [check_item_well_formed] processing `concat`\r\n#4 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to 2 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0425`.\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```", "closed_by": {"login": "Michael-F-Bryan", "id": 17380079, "node_id": "MDQ6VXNlcjE3MzgwMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/17380079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Michael-F-Bryan", "html_url": "https://github.com/Michael-F-Bryan", "followers_url": "https://api.github.com/users/Michael-F-Bryan/followers", "following_url": "https://api.github.com/users/Michael-F-Bryan/following{/other_user}", "gists_url": "https://api.github.com/users/Michael-F-Bryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Michael-F-Bryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Michael-F-Bryan/subscriptions", "organizations_url": "https://api.github.com/users/Michael-F-Bryan/orgs", "repos_url": "https://api.github.com/users/Michael-F-Bryan/repos", "events_url": "https://api.github.com/users/Michael-F-Bryan/events{/privacy}", "received_events_url": "https://api.github.com/users/Michael-F-Bryan/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66442/timeline", "performed_via_github_app": null, "state_reason": "completed"}