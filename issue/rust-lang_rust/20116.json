{"url": "https://api.github.com/repos/rust-lang/rust/issues/20116", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/20116/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/20116/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/20116/events", "html_url": "https://github.com/rust-lang/rust/issues/20116", "id": 52607564, "node_id": "MDU6SXNzdWU1MjYwNzU2NA==", "number": 20116, "title": "transmute safety guidelines handle fat pointers incorrectly", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-21T22:02:50Z", "updated_at": "2014-12-30T20:01:48Z", "closed_at": "2014-12-30T20:01:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The code incorrectly assumes that a type parameter which is not _known_ to meet `Sized` _will not_ meet `Sized`. So this code fails:\n\n``` rust\nuse std::mem::transmute;\n\nfn foo<T, Sized? U>(x: &[T]) -> &U {\n    unsafe { transmute(x) }\n}\n\nfn main() {\n    let x = [1, 2, 3];\n    foo::<int, int>(&x);\n}\n```\n\nI'm overhauling how we handle `Sized` and will fix this to be more conservative, I guess.\n\nHowever, I think that long term this approach of baking in weird rules around the `transmute` intrinsic is not good. It might be better (and perhaps just as easy or easier?) to have transmute reference a \"magic\" trait `SameSize`. This would allow generic code to expose and \"bubble up\" the transmutable requirement to its parents. It would also be useful for some of the in-place vec methods.\n", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/20116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/20116/timeline", "performed_via_github_app": null, "state_reason": "completed"}