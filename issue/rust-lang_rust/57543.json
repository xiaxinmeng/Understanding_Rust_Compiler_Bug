{"url": "https://api.github.com/repos/rust-lang/rust/issues/57543", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57543/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57543/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57543/events", "html_url": "https://github.com/rust-lang/rust/issues/57543", "id": 398552401, "node_id": "MDU6SXNzdWUzOTg1NTI0MDE=", "number": 57543, "title": "Float `signum` returns +/-1 for zeros, mismatching integers (and convention)", "user": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 2139259423, "node_id": "MDU6TGFiZWwyMTM5MjU5NDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-floating-point", "name": "A-floating-point", "color": "f7e101", "default": false, "description": "Area: Floating point numbers and arithmetic"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-01-12T13:02:28Z", "updated_at": "2023-04-19T11:14:04Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The sign/signum function is almost always defined to have signum(x) = 0 if x = 0, e.g. \r\n\r\n- mathematical convention: https://en.wikipedia.org/wiki/Sign_function,\r\n- Java (`java.lang.Math.signum`): https://docs.oracle.com/javase/10/docs/api/java/lang/Math.html#signum(double), \r\n- numpy (`numpy.sign`): https://docs.scipy.org/doc/numpy/reference/generated/numpy.sign.html,\r\n- Rust integers: `0i32.signum() == 0`.\r\n\r\nCurrently, `f32::signum` and `f64::signum` do not satisfy this:\r\n\r\nhttps://github.com/rust-lang/rust/blob/79d8a0fcefa5134db2a94739b1d18daa01fc6e9f/src/libstd/f32.rs#L1219-L1220\r\n\r\nhttps://github.com/rust-lang/rust/blob/79d8a0fcefa5134db2a94739b1d18daa01fc6e9f/src/libstd/f64.rs#L1167-L1168\r\n\r\nThe sign of the signed zeroes can still be reflected when returning zero: `(-0.0).signum()` could return `-0.0` like the Java APIs.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57543/reactions", "total_count": 9, "+1": 9, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57543/timeline", "performed_via_github_app": null, "state_reason": null}