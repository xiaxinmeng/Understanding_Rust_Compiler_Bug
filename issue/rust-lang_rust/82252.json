{"url": "https://api.github.com/repos/rust-lang/rust/issues/82252", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82252/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82252/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82252/events", "html_url": "https://github.com/rust-lang/rust/issues/82252", "id": 810962617, "node_id": "MDU6SXNzdWU4MTA5NjI2MTc=", "number": 82252, "title": "Rust incorrectly concludes that trait is not implemented", "user": {"login": "survived", "id": 14890036, "node_id": "MDQ6VXNlcjE0ODkwMDM2", "avatar_url": "https://avatars.githubusercontent.com/u/14890036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/survived", "html_url": "https://github.com/survived", "followers_url": "https://api.github.com/users/survived/followers", "following_url": "https://api.github.com/users/survived/following{/other_user}", "gists_url": "https://api.github.com/users/survived/gists{/gist_id}", "starred_url": "https://api.github.com/users/survived/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/survived/subscriptions", "organizations_url": "https://api.github.com/users/survived/orgs", "repos_url": "https://api.github.com/users/survived/repos", "events_url": "https://api.github.com/users/survived/events{/privacy}", "received_events_url": "https://api.github.com/users/survived/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-02-18T10:22:34Z", "updated_at": "2023-04-05T17:39:46Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nSuppose I have a function:\r\n\r\n```rust\r\nfn cast<T>(n: U64) -> T // U64 is my own defined type\r\nwhere \r\n    for<'a> T: TryFrom<&'a U64>,\r\n    for<'a> <T as TryFrom<&'a U64>>::Error: Debug,\r\n{\r\n    T::try_from(&n).unwrap()\r\n}\r\n```\r\n\r\nHere, for some reason, Rust refuses to infer that `<T as TryFrom<&'a U64>>::Error` implements Debug. Can be checked by adding more code:\r\n\r\n```rust\r\nstruct U32(u32);\r\nstruct U64(u64);\r\n#[derive(Debug)]\r\nstruct TooLargeErr;\r\n\r\nimpl TryFrom<&U64> for U32 {\r\n    type Error = TooLargeErr;\r\n    fn try_from(n: &U64) -> Result<U32, Self::Error> {\r\n        u32::try_from(n.0).map(U32).map_err(|_| TooLargeErr)\r\n    }\r\n}\r\n\r\nfn main() {\r\n    // This fails to compile because: `<_ as TryFrom<&'a U64>>::Error` ... doesn't implement `Debug`\r\n    // However, `TooLargeErr` does implement Debug.\r\n    let n: U32 = cast(U64(1));\r\n    assert_eq!(n.0, 1);\r\n}\r\n```\r\n\r\nIf we replace main function with:\r\n\r\n```rust\r\nfn main() {\r\n    let n = U32::try_from(&U64(1)).unwrap();\r\n    assert_eq!(n.0, 1);\r\n}\r\n```\r\n\r\nthen it will be compiled, so Rust is able to infer that TooLargeErr implements Debug, but it doesn't do the same in generic bounds.\r\n\r\n[Here's a link on playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=467c25c9a89aa74eb75209a2a3d7caab)\r\n\r\n### Meta\r\nReproduces at Rust 1.50.0 stable, beta, nightly\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82252/timeline", "performed_via_github_app": null, "state_reason": null}