{"url": "https://api.github.com/repos/rust-lang/rust/issues/46807", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46807/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46807/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46807/events", "html_url": "https://github.com/rust-lang/rust/issues/46807", "id": 282850589, "node_id": "MDU6SXNzdWUyODI4NTA1ODk=", "number": 46807, "title": "Confusing error message: the trait `std::convert::Into` cannot be made into an object", "user": {"login": "vext01", "id": 604955, "node_id": "MDQ6VXNlcjYwNDk1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/604955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vext01", "html_url": "https://github.com/vext01", "followers_url": "https://api.github.com/users/vext01/followers", "following_url": "https://api.github.com/users/vext01/following{/other_user}", "gists_url": "https://api.github.com/users/vext01/gists{/gist_id}", "starred_url": "https://api.github.com/users/vext01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vext01/subscriptions", "organizations_url": "https://api.github.com/users/vext01/orgs", "repos_url": "https://api.github.com/users/vext01/repos", "events_url": "https://api.github.com/users/vext01/events{/privacy}", "received_events_url": "https://api.github.com/users/vext01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-18T11:42:12Z", "updated_at": "2023-02-03T15:51:54Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've tried to make a function which will make a new thread, accepting either an `&str` or a `String` for the new thread's name:\r\n\r\n```rust\r\n/// Test helper to spawn a named thread.\r\n///\r\n/// The thread executes the work in the `f` closure.\r\n#[cfg(test)]\r\nfn named_thread<'s, F>(name: Into<String>, f: F) -> JoinHandle<()>\r\n               where F: FnOnce(), F: Send + 'static {\r\n    let thr = thread::Builder::new()\r\n                              .name(String::from(name))\r\n                              .spawn(f)\r\n                              .unwrap();\r\n    thr\r\n}\r\n```\r\n\r\nThis gives:\r\n```\r\nerror[E0038]: the trait `std::convert::Into` cannot be made into an object\r\n   --> src/lib.rs:377:1\r\n    |\r\n377 | / fn named_thread<'s, F>(name: Into<String>, f: F) -> JoinHandle<()>\r\n378 | |                where F: FnOnce(), F: Send + 'static {\r\n379 | |     let name = name.into();\r\n380 | |     let thr = thread::Builder::new()\r\n...   |\r\n384 | |     thr\r\n385 | | }\r\n    | |_^ the trait `std::convert::Into` cannot be made into an object\r\n    |\r\n    = note: the trait cannot require that `Self : Sized`\r\n```\r\n\r\nWhich, from a user POV, is confusing on a few levels:\r\n\r\n * I don't have any mention of `Sized` in my code (must be implicit).\r\n * Who is `Self` here?\r\n * Even if I knew where `Sized` came from, and who `Self` was, the error message doesn't tell me what I did wrong.\r\n\r\nI'd be interested to know what I did wrong, even if the error message can't be improved.\r\n\r\nThanks", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46807/timeline", "performed_via_github_app": null, "state_reason": null}