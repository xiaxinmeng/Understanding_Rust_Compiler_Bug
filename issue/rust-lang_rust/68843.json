{"url": "https://api.github.com/repos/rust-lang/rust/issues/68843", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68843/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68843/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68843/events", "html_url": "https://github.com/rust-lang/rust/issues/68843", "id": 560112893, "node_id": "MDU6SXNzdWU1NjAxMTI4OTM=", "number": 68843, "title": "mir\\interpret\\place ice: Layout mismatch when copying!", "user": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-05T03:10:51Z", "updated_at": "2020-02-05T10:28:26Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With [this patch to rustc](https://github.com/CAD97/rust/tree/0ff88240fd70a273ee6db1144f905b969c6f80b5), I get an ICE compiling stage 1 core:\r\n\r\n```text\r\n   Compiling core v0.0.0 (D:\\repos\\rust-lang\\rust\\src\\libcore)\r\nthread 'rustc' panicked at 'Layout mismatch when copying!\r\nsrc: OpTy {\r\n    op: Immediate(\r\n        Scalar(\r\n            0xffffffffffffffff,\r\n        ),\r\n    ),\r\n    layout: TyLayout {\r\n        ty: isize,\r\n        details: LayoutDetails {\r\n            variants: Single {\r\n                index: 0,\r\n            },\r\n            fields: Union(\r\n                0,\r\n            ),\r\n            abi: Scalar(\r\n                Scalar {\r\n                    value: Int(\r\n                        I64,\r\n                        true,\r\n                    ),\r\n                    valid_range: 0..=18446744073709551615,\r\n                },\r\n            ),\r\n            largest_niche: None,\r\n            align: AbiAndPrefAlign {\r\n                abi: Align {\r\n                    pow2: 3,\r\n                },\r\n                pref: Align {\r\n                    pow2: 3,\r\n                },\r\n            },\r\n            size: Size {\r\n                raw: 8,\r\n            },\r\n        },\r\n    },\r\n}\r\ndest: PlaceTy {\r\n    place: Ptr(\r\n        MemPlace {\r\n            ptr: alloc0+0,\r\n            align: Align {\r\n                pow2: 3,\r\n            },\r\n            meta: None,\r\n        },\r\n    ),\r\n    layout: TyLayout {\r\n        ty: isize,\r\n        details: LayoutDetails {\r\n            variants: Single {\r\n                index: 0,\r\n            },\r\n            fields: Union(\r\n                0,\r\n            ),\r\n            abi: Scalar(\r\n                Scalar {\r\n                    value: Int(\r\n                        I64,\r\n                        true,\r\n                    ),\r\n                    valid_range: 0..=18446744073709551615,\r\n                },\r\n            ),\r\n            largest_niche: None,\r\n            align: AbiAndPrefAlign {\r\n                abi: Align {\r\n                    pow2: 3,\r\n                },\r\n                pref: Align {\r\n                    pow2: 3,\r\n                },\r\n            },\r\n            size: Size {\r\n                raw: 8,\r\n            },\r\n        },\r\n    },\r\n}', src\\librustc_mir\\interpret\\place.rs:855:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::trace_unsynchronized\r\n   1: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n   2: core::fmt::write\r\n   3: std::io::Write::write_fmt\r\n   4: std::panicking::take_hook\r\n   5: std::panicking::take_hook\r\n   6: rustc_driver::report_ice\r\n   7: std::panicking::rust_panic_with_hook\r\n   8: rust_begin_unwind\r\n   9: std::panicking::begin_panic_fmt\r\n  10: rustc_mir::interpret::place::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::mplace_array_fields\r\n  11: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_rvalue_into_place\r\n  12: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::run\r\n  13: rustc_mir::const_eval::eval_queries::const_eval_raw_provider\r\n  14: rustc::ty::query::__query_compute::const_eval_raw\r\n  15: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  16: rustc_mir::const_eval::eval_queries::const_eval_validated_provider\r\n  17: rustc::ty::query::__query_compute::const_eval_validated\r\n  18: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  19: rustc_mir::const_eval::eval_queries::const_eval_validated_provider\r\n  20: rustc::ty::query::__query_compute::const_eval_validated\r\n  21: <rustc::traits::Vtable<N> as core::clone::Clone>::clone\r\n  22: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  23: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  24: rustc::mir::interpret::queries::<impl rustc::ty::context::TyCtxt>::const_eval_poly\r\n  25: <rustc_typeck::collect::CollectItemTypesVisitor as rustc_hir::intravisit::Visitor>::visit_item\r\n  26: rustc::hir::map::Map::visit_item_likes_in_module\r\n  27: rustc_typeck::collect::collect_mod_item_types\r\n  28: rustc::ty::query::__query_compute::collect_mod_item_types\r\n  29: rustc::ty::fold::<impl rustc::ty::context::TyCtxt>::anonymize_late_bound_regions\r\n  30: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  31: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  32: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::ensure_query\r\n  33: rustc_typeck::check_crate\r\n  34: rustc_interface::passes::create_global_ctxt\r\n  35: rustc::ty::query::__query_compute::analysis\r\n  36: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  37: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  38: rustc::ty::context::tls::enter_global\r\n  39: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  40: scoped_tls::ScopedKey<T>::set\r\n  41: syntax::attr::with_globals\r\n  42: rustc_data_structures::cold_path\r\n  43: _rust_maybe_catch_panic\r\n  44: core::fmt::Write::write_fmt\r\n  45: <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once\r\n  46: std::sys_common::thread::start_thread\r\n  47: std::sys::windows::thread::Thread::new\r\n  48: BaseThreadInitThunk\r\n  49: RtlUserThreadStart\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.0-dev running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -Z external-macro-backtrace -Z binary-dep-depinfo -Z force-unstable-if-unmarked -C opt-level=3 -C debuginfo=0 -C target-feature=+crt-static -C prefer-dynamic -C debug-assertions=n --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [const_eval_raw] const-evaluating `cmp::Ordering::Less::{{constant}}#0`\r\n#1 [const_eval_validated] const-evaluating + checking `cmp::Ordering::Less::{{constant}}#0`\r\n#2 [const_eval_validated] const-evaluating + checking `cmp::Ordering::Less::{{constant}}#0`\r\n#3 [collect_mod_item_types] collecting item types in module `cmp`\r\n#4 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: could not compile `core`.\r\n```\r\n\r\nAs this is an ICE compiling core I'm not exactly sure how to minimize it.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68843/timeline", "performed_via_github_app": null, "state_reason": null}