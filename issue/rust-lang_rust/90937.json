{"url": "https://api.github.com/repos/rust-lang/rust/issues/90937", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90937/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90937/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90937/events", "html_url": "https://github.com/rust-lang/rust/issues/90937", "id": 1054296980, "node_id": "I_kwDOAAsO6M4-10uU", "number": 90937, "title": "`must_not_suspend` should trigger for temporary in match expression (but does not)", "user": {"login": "qutesy", "id": 40312724, "node_id": "MDQ6VXNlcjQwMzEyNzI0", "avatar_url": "https://avatars.githubusercontent.com/u/40312724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qutesy", "html_url": "https://github.com/qutesy", "followers_url": "https://api.github.com/users/qutesy/followers", "following_url": "https://api.github.com/users/qutesy/following{/other_user}", "gists_url": "https://api.github.com/users/qutesy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qutesy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qutesy/subscriptions", "organizations_url": "https://api.github.com/users/qutesy/orgs", "repos_url": "https://api.github.com/users/qutesy/repos", "events_url": "https://api.github.com/users/qutesy/events{/privacy}", "received_events_url": "https://api.github.com/users/qutesy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-11-16T00:42:44Z", "updated_at": "2021-11-29T16:52:31Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n\r\n#![feature(must_not_suspend)]\r\n#![deny(must_not_suspend)]\r\n\r\nuse std::cell::RefCell;\r\n\r\nstruct S (RefCell<Inner>);\r\n\r\nstruct Inner {\r\n}\r\n\r\nimpl Inner {\r\n    async fn do_stuff(&self) {\r\n        futures::future::ready(()).await;\r\n    }\r\n}\r\n\r\n#[tokio::main]\r\nasync fn main() {\r\n    let s = S ( RefCell::new(Inner {}) );\r\n    println!(\"OUTside of match\");\r\n    match s.0.borrow_mut().do_stuff().await {\r\n        () => {\r\n          // The next line `panic()`-s.\r\n          s.0.borrow_mut();\r\n          println!(\"INside of match\")\r\n        }\r\n    };\r\n}\r\n```\r\n\r\nI expected to see this happen: compile-time error. Something like\r\n\r\n```\r\nerror: `RefMut` held across a suspend point, but should not be\r\n```\r\n\r\nInstead, this happened: run-time panic (see below)\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`: nightly on playground (1.58.0-nightly, 2021-11-14 ad442399...)\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nthread 'main' panicked at 'already borrowed: BorrowMutError', src/main.rs:24:15\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/std/src/panicking.rs:498:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/core/src/panicking.rs:106:14\r\n   2: core::result::unwrap_failed\r\n             at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/core/src/result.rs:1613:5\r\n   3: core::result::Result<T,E>::expect\r\n             at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/core/src/result.rs:1255:23\r\n   4: core::cell::RefCell<T>::borrow_mut\r\n             at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/core/src/cell.rs:946:9\r\n   5: playground::main::{{closure}}\r\n             at ./src/main.rs:24:11\r\n[...]\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90937/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90937/timeline", "performed_via_github_app": null, "state_reason": null}