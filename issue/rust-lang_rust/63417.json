{"url": "https://api.github.com/repos/rust-lang/rust/issues/63417", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63417/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63417/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63417/events", "html_url": "https://github.com/rust-lang/rust/issues/63417", "id": 479093581, "node_id": "MDU6SXNzdWU0NzkwOTM1ODE=", "number": 63417, "title": "Building LLVM with Clang fails", "user": {"login": "LunarLambda", "id": 38919842, "node_id": "MDQ6VXNlcjM4OTE5ODQy", "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LunarLambda", "html_url": "https://github.com/LunarLambda", "followers_url": "https://api.github.com/users/LunarLambda/followers", "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}", "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}", "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions", "organizations_url": "https://api.github.com/users/LunarLambda/orgs", "repos_url": "https://api.github.com/users/LunarLambda/repos", "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}", "received_events_url": "https://api.github.com/users/LunarLambda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 25, "created_at": "2019-08-09T17:33:27Z", "updated_at": "2020-09-17T08:27:28Z", "closed_at": "2019-08-17T15:32:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "In `config.toml`, under `[target.x86_64-unknown-linux-gnu]`, one can set `cc` and `cxx` to configure the C/C++ compiler used for building LLVM.\r\n\r\nWhen using clang/clang++, regardless of whether `use-libcxx` is set under `[llvm]`, the `LLVM_LIBSTDCXX_MIN` compile test fails due to a #include error.\r\n\r\nThe error happens because passing `--target=x86_64-unknown-linux-gnu` to clang/clang++ changes the default header search paths. See https://github.com/rust-lang/rust/issues/63417#issuecomment-520510331\r\n\r\nMy system uses LLVM 8.0.0 Release. (`clang version 8.0.0 (tags/RELEASE_800/final) | Target: x86_64-solus-linux`)\r\n\r\nOriginal Issue Text:\r\n\r\n> I am currently trying to build rust on a Solus 4 machine.\r\n> \r\n> The error happens in stage 0 when building LLVM, where it complains about an incompatible version of libstdc++, even if `use-libcxx = true` is set under `[llvm]`.\r\n> \r\n> Dependencies (g++ clang++ python make cmake curl git):\r\n> \r\n> ```\r\n> g++ (Solus) 8.3.1 20190320\r\n> clang version 8.0.0 (tags/RELEASE_800/final)\r\n> Python 2.7.16\r\n> GNU Make 4.2.1\r\n> cmake version 3.15.1\r\n> curl 7.65.3 (x86_64-solus-linux-gnu) libcurl/7.65.3 OpenSSL/1.0.2r zlib/1.2.11 libssh2/1.7.0_DEV nghttp2/1.36.0\r\n> git version 2.22.0\r\n> ```\r\n> \r\n> x.py build --stage 0 output:\r\n> ```\r\n> Updating only changed submodules\r\n> Submodules updated in 0.02 seconds\r\n>     Finished dev [unoptimized] target(s) in 0.09s\r\n> Building stage0 std artifacts (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\r\n>     Finished release [optimized] target(s) in 0.11s\r\n> Copying stage0 std from stage0 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)\r\n> Building stage0 test artifacts (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\r\n>     Finished release [optimized] target(s) in 0.08s\r\n> Copying stage0 test from stage0 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)\r\n> Building stage0 compiler artifacts (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\r\n>     Finished release [optimized] target(s) in 0.10s\r\n> Copying stage0 rustc from stage0 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)\r\n> Building LLVM for x86_64-unknown-linux-gnu\r\n> running: \"cmake\" \"/home/luna/shared/projects/rust/src/llvm-project/llvm\" \"-DLLVM_ENABLE_ASSERTIONS=ON\" \"-DLLVM_TARGETS_TO_BUILD=AArch64;ARM;Hexagon;MSP430;Mips;NVPTX;PowerPC;RISCV;Sparc;SystemZ;WebAssembly;X86\" \"-DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD=\" \"-DLLVM_INCLUDE_EXAMPLES=OFF\" \"-DLLVM_INCLUDE_TESTS=OFF\" \"-DLLVM_INCLUDE_DOCS=OFF\" \"-DLLVM_INCLUDE_BENCHMARKS=OFF\" \"-DLLVM_ENABLE_ZLIB=OFF\" \"-DWITH_POLLY=OFF\" \"-DLLVM_ENABLE_TERMINFO=OFF\" \"-DLLVM_ENABLE_LIBEDIT=OFF\" \"-DLLVM_ENABLE_Z3_SOLVER=OFF\" \"-DLLVM_PARALLEL_COMPILE_JOBS=4\" \"-DLLVM_TARGET_ARCH=x86_64\" \"-DLLVM_DEFAULT_TARGET_TRIPLE=x86_64-unknown-linux-gnu\" \"-DLLVM_OCAML_INSTALL_PATH=usr/lib/ocaml\" \"-DLLVM_LINK_LLVM_DYLIB=ON\" \"-DLLVM_ENABLE_LIBXML2=OFF\" \"-DLLVM_VERSION_SUFFIX=-rust-1.38.0-dev-f2b0c6766\" \"-DPYTHON_EXECUTABLE=/usr/bin/python2.7\" \"-DCMAKE_INSTALL_MESSAGE=LAZY\" \"-DCMAKE_C_COMPILER=clang\" \"-DCMAKE_CXX_COMPILER=clang++\" \"-DCMAKE_C_FLAGS=-ffunction-sections -fdata-sections -fPIC --target=x86_64-unknown-linux-gnu\" \"-DCMAKE_CXX_FLAGS=-ffunction-sections -fdata-sections -fPIC --target=x86_64-unknown-linux-gnu\" \"-DCMAKE_INSTALL_PREFIX=/home/luna/shared/projects/rust/build/x86_64-unknown-linux-gnu/llvm\" \"-DCMAKE_BUILD_TYPE=Release\"\r\n> -- Could NOT find Z3: Found unsuitable version \"0.0.0\", but required is at least \"4.7.1\" (found Z3_LIBRARIES-NOTFOUND)\r\n> CMake Error at cmake/modules/CheckCompilerVersion.cmake:83 (message):\r\n>   libstdc++ version must be at least 4.8.\r\n> Call Stack (most recent call first):\r\n>   cmake/config-ix.cmake:13 (include)\r\n>   CMakeLists.txt:618 (include)\r\n> \r\n> \r\n> -- Configuring incomplete, errors occurred!\r\n> See also \"/home/luna/shared/projects/rust/build/x86_64-unknown-linux-gnu/llvm/build/CMakeFiles/CMakeOutput.log\".\r\n> See also \"/home/luna/shared/projects/rust/build/x86_64-unknown-linux-gnu/llvm/build/CMakeFiles/CMakeError.log\".\r\n> thread 'main' panicked at '\r\n> command did not execute successfully, got: exit code: 1\r\n> \r\n> build script failed, must exit now', /home/luna/.cargo/registry/src/github.com-1ecc6299db9ec823/cmake-0.1.38/src/lib.rs:813:5\r\n> note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\r\n> \tfinished in 0.027\r\n> failed to run: /home/luna/shared/projects/rust/build/bootstrap/debug/bootstrap build --stage 0\r\n> Build completed unsuccessfully in 0:00:01\r\n> ``` \r\n> \r\n> `config.toml` and `build/x86_64-unknown-linux-gnu/llvm/build/CMakeFiles/CMakeOutput.log`: https://gist.github.com/LunarLambda/9b6674731bb1d8f123bca143d546d94e\r\n> \r\n> I would like to avoid having to setup an Ubuntu/Debian system or having to compile GCC 4.8 manually just to build Rust. Any help is appreciated", "closed_by": {"login": "LunarLambda", "id": 38919842, "node_id": "MDQ6VXNlcjM4OTE5ODQy", "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LunarLambda", "html_url": "https://github.com/LunarLambda", "followers_url": "https://api.github.com/users/LunarLambda/followers", "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}", "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}", "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions", "organizations_url": "https://api.github.com/users/LunarLambda/orgs", "repos_url": "https://api.github.com/users/LunarLambda/repos", "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}", "received_events_url": "https://api.github.com/users/LunarLambda/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63417/timeline", "performed_via_github_app": null, "state_reason": "completed"}