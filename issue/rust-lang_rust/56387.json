{"url": "https://api.github.com/repos/rust-lang/rust/issues/56387", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56387/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56387/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56387/events", "html_url": "https://github.com/rust-lang/rust/issues/56387", "id": 386351998, "node_id": "MDU6SXNzdWUzODYzNTE5OTg=", "number": 56387, "title": "ICE with OsStr::new in match clause", "user": {"login": "ColonelThirtyTwo", "id": 692896, "node_id": "MDQ6VXNlcjY5Mjg5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/692896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColonelThirtyTwo", "html_url": "https://github.com/ColonelThirtyTwo", "followers_url": "https://api.github.com/users/ColonelThirtyTwo/followers", "following_url": "https://api.github.com/users/ColonelThirtyTwo/following{/other_user}", "gists_url": "https://api.github.com/users/ColonelThirtyTwo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColonelThirtyTwo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColonelThirtyTwo/subscriptions", "organizations_url": "https://api.github.com/users/ColonelThirtyTwo/orgs", "repos_url": "https://api.github.com/users/ColonelThirtyTwo/repos", "events_url": "https://api.github.com/users/ColonelThirtyTwo/events{/privacy}", "received_events_url": "https://api.github.com/users/ColonelThirtyTwo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-30T21:12:58Z", "updated_at": "2018-12-14T16:47:15Z", "closed_at": "2018-12-14T16:47:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example code:\r\n\r\n```rust\r\nuse std::ffi::OsStr;\r\n\r\nfn main() {\r\n\tlet s = None;\r\n\tmatch s {\r\n\t\tSome(OsStr::new(\"png\")) => {},\r\n\t};\r\n}\r\n\r\n```\r\n\r\nBuilding:\r\n\r\n```plain\r\n> env RUST_BACKTRACE=1 cargo build\r\n   Compiling rust-crash v0.1.0 (/home/col/Downloads/rust-crash)\r\nthread 'main' panicked at 'expected fn type', libcore/option.rs:1000:5                        \r\nstack backtrace:                                                                              \r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace                               \r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49                                 \r\n   1: std::sys_common::backtrace::print                                                       \r\n             at libstd/sys_common/backtrace.rs:71                                             \r\n             at libstd/sys_common/backtrace.rs:59                                             \r\n   2: std::panicking::default_hook::{{closure}}                                               \r\n             at libstd/panicking.rs:211                                                       \r\n   3: std::panicking::default_hook                                                            \r\n             at libstd/panicking.rs:227                                                       \r\n   4: rustc::util::common::panic_hook                                                         \r\n   5: std::panicking::rust_panic_with_hook                                                    \r\n             at libstd/panicking.rs:481                                                       \r\n   6: std::panicking::continue_panic_fmt                                                      \r\n             at libstd/panicking.rs:391                                                       \r\n   7: rust_begin_unwind                                                                       \r\n             at libstd/panicking.rs:326                                                       \r\n   8: core::panicking::panic_fmt                                                              \r\n             at libcore/panicking.rs:77                                                       \r\n   9: core::option::expect_failed                                                             \r\n             at libcore/option.rs:1000                                                        \r\n  10: rustc_typeck::check::_match::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::check_pat_tuple_struct\r\n  11: rustc_typeck::check::_match::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::check_pat_walk\r\n  12: rustc_typeck::check::_match::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::check_pat_tuple_struct\r\n  13: rustc_typeck::check::_match::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::check_pat_walk\r\n  14: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter                         \r\n  15: rustc_typeck::check::FnCtxt::check_expr_kind                                            \r\n  16: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_needs                      \r\n  17: rustc_typeck::check::FnCtxt::check_block_with_expected                                  \r\n  18: rustc_typeck::check::FnCtxt::check_expr_kind                                            \r\n  19: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_needs                      \r\n  20: rustc_typeck::check::FnCtxt::check_return_expr                                          \r\n  21: rustc_typeck::check::check_fn                                                           \r\n  22: rustc::ty::context::tls::with_related_context                                           \r\n  23: rustc::infer::InferCtxtBuilder::enter                                                   \r\n  24: rustc_typeck::check::typeck_tables_of                                                   \r\n  25: rustc::ty::query::__query_compute::typeck_tables_of                                     \r\n  26: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::typeck_tables_of<'tcx>>::compute\r\n  27: rustc::ty::context::tls::with_context                                                   \r\n  28: rustc::dep_graph::graph::DepGraph::with_task_impl                                       \r\n  29: rustc::ty::context::tls::with_related_context                                           \r\n  30: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  31: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  32: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::ensure_query\r\n  33: rustc_typeck::check::typeck_item_bodies                                                 \r\n  34: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::typeck_item_bodies<'tcx>>::compute\r\n  35: rustc::ty::context::tls::with_context                                                   \r\n  36: rustc::dep_graph::graph::DepGraph::with_task_impl                                       \r\n  37: rustc::ty::context::tls::with_related_context                                           \r\n  38: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  39: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  40: rustc_typeck::check_crate                                                               \r\n  41: rustc::ty::context::tls::enter_context                                                  \r\n  42: <std::thread::local::LocalKey<T>>::with                                                 \r\n  43: rustc::ty::context::TyCtxt::create_and_enter                                            \r\n  44: rustc_driver::driver::compile_input                                                     \r\n  45: rustc_driver::run_compiler_with_pool                                                    \r\n  46: rustc_driver::driver::spawn_thread_pool                                                 \r\n  47: rustc_driver::run_compiler                                                              \r\n  48: <scoped_tls::ScopedKey<T>>::set                                                         \r\n  49: syntax::with_globals                                                                    \r\n  50: __rust_maybe_catch_panic                                                                \r\n             at libpanic_unwind/lib.rs:103                                                    \r\n  51: rustc_driver::run                                                                       \r\n  52: rustc_driver::main                                                                      \r\n  53: std::rt::lang_start::{{closure}}                                                        \r\n  54: std::panicking::try::do_call                                                            \r\n             at libstd/rt.rs:59                                                               \r\n             at libstd/panicking.rs:310                                                       \r\n  55: __rust_maybe_catch_panic                                                                \r\n             at libpanic_unwind/lib.rs:103                                                    \r\n  56: std::rt::lang_start_internal                                                            \r\n             at libstd/panicking.rs:289                                                       \r\n             at libstd/panic.rs:392                                                           \r\n             at libstd/rt.rs:58                                                               \r\n  57: main                                                                                    \r\n  58: __libc_start_main                                                                       \r\n  59: <unknown>                                                                               \r\nquery stack during panic:                                                                     \r\n#0 [typeck_tables_of] processing `main`                                                       \r\n#1 [typeck_item_bodies] type-checking all item bodies                                         \r\nend of query stack                                                                            \r\n                                                                                              \r\nerror: internal compiler error: unexpected panic                                              \r\n                                                                                              \r\nnote: the compiler unexpectedly panicked. this is a bug.                                      \r\n                                                                                              \r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n                                                                                              \r\nnote: rustc 1.30.1 (1433507eb 2018-11-07) running on x86_64-unknown-linux-gnu                 \r\n                                                                                              \r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin                          \r\n                                                                                              \r\nnote: some of the compiler flags provided by cargo are hidden                                 \r\n                                                                                              \r\nerror: Could not compile `rust-crash`.                                                        \r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n", "closed_by": {"login": "ColonelThirtyTwo", "id": 692896, "node_id": "MDQ6VXNlcjY5Mjg5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/692896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColonelThirtyTwo", "html_url": "https://github.com/ColonelThirtyTwo", "followers_url": "https://api.github.com/users/ColonelThirtyTwo/followers", "following_url": "https://api.github.com/users/ColonelThirtyTwo/following{/other_user}", "gists_url": "https://api.github.com/users/ColonelThirtyTwo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColonelThirtyTwo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColonelThirtyTwo/subscriptions", "organizations_url": "https://api.github.com/users/ColonelThirtyTwo/orgs", "repos_url": "https://api.github.com/users/ColonelThirtyTwo/repos", "events_url": "https://api.github.com/users/ColonelThirtyTwo/events{/privacy}", "received_events_url": "https://api.github.com/users/ColonelThirtyTwo/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56387/timeline", "performed_via_github_app": null, "state_reason": "completed"}