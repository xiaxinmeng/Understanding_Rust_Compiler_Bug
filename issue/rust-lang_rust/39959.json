{"url": "https://api.github.com/repos/rust-lang/rust/issues/39959", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39959/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39959/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39959/events", "html_url": "https://github.com/rust-lang/rust/issues/39959", "id": 208717980, "node_id": "MDU6SXNzdWUyMDg3MTc5ODA=", "number": 39959, "title": "error[E0275]: overflow evaluating the requirement `_: std::marker::Sized`", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2017-02-19T13:37:17Z", "updated_at": "2023-03-18T02:54:13Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Reduced test case:\r\n\r\n```rust\r\n#![recursion_limit = \"5\"]\r\n\r\nfn main() {}\r\n\r\ntrait Serialize {}\r\n\r\nstruct Ser<'a, T: 'a>(&'a T);\r\n\r\nimpl<'a, T> Ser<'a, T> where Ser<'a, T>: Serialize {\r\n    pub fn new(value: &'a T) -> Self {\r\n        Ser(value)\r\n    }\r\n}\r\n\r\nimpl<'a, T> Serialize for Ser<'a, Option<T>> where Ser<'a, T>: Serialize {}\r\n\r\nfn serialize<'a, T>(value: &'a T) where Ser<'a, T>: Serialize {\r\n    Ser::new(value);\r\n}\r\n```\r\n\r\nOutput in rustc 1.17.0-nightly (536a900c4 2017-02-17):\r\n\r\n```rust\r\nerror[E0275]: overflow evaluating the requirement `_: std::marker::Sized`\r\n  --> a.rs:20:5\r\n   |\r\n20 |     Ser::new(value);\r\n   |     ^^^^^^^^\r\n   |\r\n   = note: consider adding a `#![recursion_limit=\"10\"]` attribute to your crate\r\n   = note: required because of the requirements on the impl of `Serialize` for `Ser<'_, std::option::Option<_>>`\r\n   = note: required because of the requirements on the impl of `Serialize` for `Ser<'_, std::option::Option<std::option::Option<_>>>`\r\n   = note: required because of the requirements on the impl of `Serialize` for `Ser<'_, std::option::Option<std::option::Option<std::option::Option<_>>>>`\r\n   = note: required because of the requirements on the impl of `Serialize` for `Ser<'_, std::option::Option<std::option::Option<std::option::Option<std::option::Option<_>>>>>`\r\n   = note: required because of the requirements on the impl of `Serialize` for `Ser<std::option::Option<std::option::Option<std::option::Option<std::option::Option<std::option::Option<_>>>>>>`\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nWithout `#![recursion_limit = \"5\"]`, the error message is similar but much larger. If this isn\u2019t a bug, at least the diagnostic should be improved.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39959/reactions", "total_count": 16, "+1": 16, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39959/timeline", "performed_via_github_app": null, "state_reason": null}