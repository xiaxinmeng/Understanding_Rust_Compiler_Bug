{"url": "https://api.github.com/repos/rust-lang/rust/issues/55261", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55261/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55261/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55261/events", "html_url": "https://github.com/rust-lang/rust/issues/55261", "id": 372499712, "node_id": "MDU6SXNzdWUzNzI0OTk3MTI=", "number": 55261, "title": "ICE: '!impl_self_ty.has_infer_types()' in MIR from const underneath `impl<T> { ... }`", "user": {"login": "mexus", "id": 3609357, "node_id": "MDQ6VXNlcjM2MDkzNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/3609357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mexus", "html_url": "https://github.com/mexus", "followers_url": "https://api.github.com/users/mexus/followers", "following_url": "https://api.github.com/users/mexus/following{/other_user}", "gists_url": "https://api.github.com/users/mexus/gists{/gist_id}", "starred_url": "https://api.github.com/users/mexus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mexus/subscriptions", "organizations_url": "https://api.github.com/users/mexus/orgs", "repos_url": "https://api.github.com/users/mexus/repos", "events_url": "https://api.github.com/users/mexus/events{/privacy}", "received_events_url": "https://api.github.com/users/mexus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-22T12:28:04Z", "updated_at": "2018-10-23T13:51:11Z", "closed_at": "2018-10-23T13:51:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\nstruct TestStruct<T>(T);\r\n\r\nimpl<T> TestStruct<T> {\r\n    const SOME_CONST: u8 = 1;\r\n\r\n    fn call(&mut self) {\r\n        let item = self.0;\r\n        something(&item, &Self::SOME_CONST);\r\n    }\r\n}\r\n\r\nfn something<T1, T2>(_: T1, _: T2) {\r\n    unimplemented!()\r\n}\r\n```\r\n\r\nI expected to see this happen: `cannot move out of borrowed content` for the `let item = self.0;` line..\r\n\r\nInstead, this happened:\r\n```\r\nthread 'main' panicked at 'assertion failed: !impl_self_ty.has_infer_types()', librustc_mir/borrow_check/nll/type_check/mod.rs:1033:21                                    \r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.                                                                                                                        \r\n                                                                                                                                                                          \r\nerror: internal compiler error: unexpected panic                                                                                                                          \r\n```\r\n\r\nI also tried `CARGO_INCREMENTAL=0` but it didn't affect the build (apart from the `-C incremental` argument to disappear).\r\n\r\nMy rust version:\r\n```\r\nrustc 1.31.0-nightly (424a749a0 2018-10-21)\r\nbinary: rustc\r\ncommit-hash: 424a749a01224239ba2c8850f16007d57db0a242\r\ncommit-date: 2018-10-21\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.31.0-nightly\r\nLLVM version: 8.0\r\n```\r\n\r\nHere's a run with backtrace enabled:\r\n\r\n```\r\n     Running `rustc --crate-name ice src/lib.rs --color always --crate-type lib --emit=dep-info,metadata -C debuginfo=2 -C metadata=2a9b80ba2717f3bb -C extra-filename=-2a9b80ba2717f3bb --out-dir /home/mexus/test/rust/ice/target/debug/deps -C incremental=/home/mexus/test/rust/ice/target/debug/incremental -L dependency=/home/mexus/test/rust/ice/target/debug/deps`\r\nthread 'main' panicked at 'assertion failed: !impl_self_ty.has_infer_types()', librustc_mir/borrow_check/nll/type_check/mod.rs:1033:21                                    \r\nstack backtrace:                                                                                                                                                          \r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace                                                                                                           \r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49                                                                                                             \r\n   1: std::sys_common::backtrace::print                                                                                                                                   \r\n             at libstd/sys_common/backtrace.rs:71                                                                                                                         \r\n             at libstd/sys_common/backtrace.rs:59                                                                                                                         \r\n   2: std::panicking::default_hook::{{closure}}                                                                                                                           \r\n             at libstd/panicking.rs:211                                                                                                                                   \r\n   3: std::panicking::default_hook                                                                                                                                        \r\n             at libstd/panicking.rs:227                                                                                                                                   \r\n   4: rustc::util::common::panic_hook                                                                                                                                     \r\n   5: std::panicking::rust_panic_with_hook                                                                                                                                \r\n             at libstd/panicking.rs:480                                                                                                                                   \r\n   6: std::panicking::begin_panic                                                                                                                                         \r\n   7: rustc_mir::borrow_check::nll::type_check::TypeChecker::relate_type_and_user_type                                                                                    \r\n   8: <rustc_mir::borrow_check::nll::type_check::TypeVerifier<'a, 'b, 'gcx, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_constant                                    \r\n   9: <rustc_mir::borrow_check::nll::type_check::TypeVerifier<'a, 'b, 'gcx, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_rvalue                                      \r\n  10: <rustc_mir::borrow_check::nll::type_check::TypeVerifier<'a, 'b, 'gcx, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_mir                                         \r\n  11: rustc_mir::borrow_check::nll::type_check::type_check_internal                                                                                                       \r\n  12: rustc::ty::context::tls::with_related_context                                                                                                                       \r\n  13: rustc::infer::InferCtxtBuilder::enter                                                                                                                               \r\n  14: <rustc_mir::borrow_check::nll::type_check::TypeckMir as rustc_mir::transform::MirPass>::run_pass                                                                    \r\n  15: rustc_mir::transform::mir_const::{{closure}}                                                                                                                        \r\n  16: rustc_mir::transform::mir_const                                                                                                                                     \r\n  17: rustc::ty::query::__query_compute::mir_const                                                                                                                        \r\n  18: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::mir_const<'tcx>>::compute                                     \r\n  19: rustc::ty::context::tls::with_context                                                                                                                               \r\n  20: rustc::dep_graph::graph::DepGraph::with_task_impl                                                                                                                   \r\n  21: rustc::ty::context::tls::with_related_context                                                                                                                       \r\n  22: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job                                                                 \r\n  23: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query                                                                            \r\n  24: rustc::ty::query::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::mir_const                                                                                      \r\n  25: rustc_mir::transform::mir_validated                                                                                                                                 \r\n  26: rustc::ty::query::__query_compute::mir_validated                                                                                                                    \r\n  27: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::mir_validated<'tcx>>::compute                                 \r\n  28: rustc::ty::context::tls::with_context                                                                                                                               \r\n  29: rustc::dep_graph::graph::DepGraph::with_task_impl                                                                                                                   \r\n  30: rustc::ty::context::tls::with_related_context                                                                                                                       \r\n  31: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job                                                                 \r\n  32: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query                                                                            \r\n  33: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::ensure_query                                                                         \r\n  34: rustc_borrowck::borrowck::borrowck                                                                                                                                  \r\n  35: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::borrowck<'tcx>>::compute                                      \r\n  36: rustc::ty::context::tls::with_context                                                                                                                               \r\n  37: rustc::dep_graph::graph::DepGraph::with_task_impl                                                                                                                   \r\n  38: rustc::ty::context::tls::with_related_context                                                                                                                       \r\n  39: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job                                                                 \r\n  40: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query                                                                            \r\n  41: rustc::ty::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::par_body_owners                                                                                       \r\n  42: rustc_borrowck::borrowck::check_crate                                                                                                                               \r\n  43: rustc::util::common::time                                                                                                                                           \r\n  44: rustc::ty::context::tls::enter_context                                                                                                                              \r\n  45: <std::thread::local::LocalKey<T>>::with                                                                                                                             \r\n  46: rustc::ty::context::TyCtxt::create_and_enter                                                                                                                        \r\n  47: rustc_driver::driver::compile_input                                                                                                                                 \r\n  48: rustc_driver::run_compiler_with_pool                                                                                                                                \r\n  49: rustc_driver::driver::spawn_thread_pool                                                                                                                             \r\n  50: rustc_driver::run_compiler                                                                                                                                          \r\n  51: <scoped_tls::ScopedKey<T>>::set                                                                                                                                     \r\n  52: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once                                                                                     \r\n  53: __rust_maybe_catch_panic                                                                                                                                            \r\n             at libpanic_unwind/lib.rs:102                                                                                                                                \r\n  54: rustc_driver::run                                                                                                                                                   \r\n  55: rustc_driver::main                                                                                                                                                  \r\n  56: std::rt::lang_start::{{closure}}                                                                                                                                    \r\n  57: std::panicking::try::do_call                                                                                                                                        \r\n             at libstd/rt.rs:59                                                                                                                                           \r\n             at libstd/panicking.rs:310                                                                                                                                   \r\n  58: __rust_maybe_catch_panic                                                                                                                                            \r\n             at libpanic_unwind/lib.rs:102                                                                                                                                \r\n  59: std::rt::lang_start_internal                                                                                                                                        \r\n             at libstd/panicking.rs:289                                                                                                                                   \r\n             at libstd/panic.rs:392                                                                                                                                       \r\n             at libstd/rt.rs:58                                                                                                                                           \r\n  60: main                                                                                                                                                                \r\n  61: __libc_start_main                                                                                                                                                   \r\n  62: <unknown>                                                                                                                                                           \r\nquery stack during panic:                                                                                                                                                 \r\n#0 [mir_const] processing `<TestStruct<T>>::call`                                                                                                                         \r\n#1 [mir_validated] processing `<TestStruct<T>>::call`                                                                                                                     \r\n#2 [borrowck] processing `<TestStruct<T>>::call`                                                                                                                          \r\nend of query stack                                                                                                                                                        \r\n                                                                                                                                                                          \r\nerror: internal compiler error: unexpected panic                                                                                                                          \r\n                                                                                                                                                                          \r\nnote: the compiler unexpectedly panicked. this is a bug.                                                                                                                  \r\n                                                                                                                                                                          \r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports                                                         \r\n                                                                                                                                                                          \r\nnote: rustc 1.31.0-nightly (424a749a0 2018-10-21) running on x86_64-unknown-linux-gnu                                                                                     \r\n                                                                                                                                                                          \r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib                                                                                                      \r\n                                                                                                                                                                          \r\nnote: some of the compiler flags provided by cargo are hidden                                                                                                             \r\n                                                                                                                                                                          \r\nerror: Could not compile `ice`.                                                                                                                                           \r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --crate-name ice src/lib.rs --color always --crate-type lib --emit=dep-info,metadata -C debuginfo=2 -C metadata=2a9b80ba2717f3bb -C extra-filename=-2a9b80ba2717f3bb --out-dir /home/mexus/test/rust/ice/target/debug/deps -C incremental=/home/mexus/test/rust/ice/target/debug/incremental -L dependency=/home/mexus/test/rust/ice/target/debug/deps` (exit code: 101)\r\n```\r\n\r\nHere's a playground link with the examples:\r\nhttps://play.rust-lang.org/?version=nightly&mode=debug&edition=2015&gist=3a4690e53464d2c8f0a4824b9f31d31d", "closed_by": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55261/timeline", "performed_via_github_app": null, "state_reason": "completed"}