{"url": "https://api.github.com/repos/rust-lang/rust/issues/108406", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108406/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108406/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108406/events", "html_url": "https://github.com/rust-lang/rust/issues/108406", "id": 1597410420, "node_id": "I_kwDOAAsO6M5fNox0", "number": 108406, "title": "Support restricting core/std to a particular version (for msrv purposes)", "user": {"login": "mqudsi", "id": 606923, "node_id": "MDQ6VXNlcjYwNjkyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mqudsi", "html_url": "https://github.com/mqudsi", "followers_url": "https://api.github.com/users/mqudsi/followers", "following_url": "https://api.github.com/users/mqudsi/following{/other_user}", "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions", "organizations_url": "https://api.github.com/users/mqudsi/orgs", "repos_url": "https://api.github.com/users/mqudsi/repos", "events_url": "https://api.github.com/users/mqudsi/events{/privacy}", "received_events_url": "https://api.github.com/users/mqudsi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-02-23T19:28:37Z", "updated_at": "2023-02-24T23:06:45Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since all library types/functions are tagged with the particulars of the rust release that saw their stabilization, I propose that it should be possible to pass a value to `rustc` to have it \"pretend\" to be an older version by refusing to compile with any features that wouldn't have been available as of a particular msrv version.\r\n\r\nCurrently projects use a `rust-toolchain.toml` or the `RUSTUP_TOOLCHAIN` environment variable in conjunction with a rustup-provided `rustc` shim to make sure that a project is developed/tested with a particular version (or branch) of the toolchain but this has a number of drawbacks, not the least of which is heavily penalizing OSS developers that contribute to multiple projects each using `rust-toolchain.toml` to enforce some MSRV by requiring them to install each and every rust msrv version.\r\n\r\nObviously this is not intended to be a stand-in for actually compiling and testing code w/ older rust releases to ensure that other issues, deprecations, subtle changes in implementation, etc. all don't affect the code but it would be great if testing (or enforcing) compatibility with a particular version of rust were as simple as using `rustc --msrv xx.yy ..` instead of requiring installation of a separate toolchain altogether.\r\n\r\nThere's an argument to be made for also allowing the nightly toolchain to pretend to be stable (by disallowing feature gates, etc.) but I imagine the distance between \"actual previous-release behavior\" and \"mock msrv behavior\" would necessarily be larger if trying to pretend that rustc-nightly was actually rustc-xx.yy-stable, so I'd be content with just the former :)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108406/timeline", "performed_via_github_app": null, "state_reason": null}