{"url": "https://api.github.com/repos/rust-lang/rust/issues/38127", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/38127/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/38127/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/38127/events", "html_url": "https://github.com/rust-lang/rust/issues/38127", "id": 193065659, "node_id": "MDU6SXNzdWUxOTMwNjU2NTk=", "number": 38127, "title": "Rust compiler macro_rules! problem", "user": {"login": "vityafx", "id": 1146369, "node_id": "MDQ6VXNlcjExNDYzNjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1146369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vityafx", "html_url": "https://github.com/vityafx", "followers_url": "https://api.github.com/users/vityafx/followers", "following_url": "https://api.github.com/users/vityafx/following{/other_user}", "gists_url": "https://api.github.com/users/vityafx/gists{/gist_id}", "starred_url": "https://api.github.com/users/vityafx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vityafx/subscriptions", "organizations_url": "https://api.github.com/users/vityafx/orgs", "repos_url": "https://api.github.com/users/vityafx/repos", "events_url": "https://api.github.com/users/vityafx/events{/privacy}", "received_events_url": "https://api.github.com/users/vityafx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-02T09:02:11Z", "updated_at": "2016-12-02T14:20:13Z", "closed_at": "2016-12-02T09:11:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I had a code which worked okay:\r\n\r\n        let date_start;\r\n        if let Ok(ds) = remove(&mut map, \"date_start\") {\r\n            if ds.is_string() {\r\n                date_start = Some(DateTime::parse_from_str(ds.as_str().unwrap(),\r\n                                                           \"%Y-%m-%d\")?.date()); // safe\r\n            } else {\r\n                date_start = None;\r\n            }\r\n        } else {\r\n            date_start = None;\r\n        }\r\n\r\nAs soon as I have a lot of such fields in my json map I decided to make a macro for this:\r\n\r\n```\r\nmacro_rules! parse_optional_string {\r\n    // Parse optional value with decoding it from json.\r\n    // $json_map must be of type `BTreeMap<String, serde_json::Value>`\r\n    ($field: ident, $path: expr, $json_map: ident, $decoder: expr) => {\r\n        if let Ok(_temp_field_) = remove(&mut $json_map, $path) {\r\n            if _temp_field_.is_string() {\r\n                $field = Some($decoder(_temp_field_.as_str().unwrap_or(\"\")));\r\n            } else {\r\n                $field = None;\r\n            }\r\n        } else {\r\n            $field = None;\r\n        }\r\n    };\r\n}\r\n```\r\n\r\nAnd tried to use it but it gives weird errors:\r\n\r\n**Attempt 1 - forgot to unpack result**\r\n\r\n        parse_optional_string!(date_end, \"date_end\", map,\r\n                               |s| DateTime::parse_from_str(s, \"%Y-%m-%d\").date());\r\n\r\n```\r\nerror: no method named `date` found for type `std::result::Result<chrono::DateTime<chrono::FixedOffset>, chrono::ParseError>` in the current scope\r\n   --> src/tournaments.rs:377:76\r\n    |\r\n376 |         parse_optional_string!(date_end, \"date_end\", map,\r\n    |         - in this macro invocation\r\n377 |                                |s| DateTime::parse_from_str(s, \"%Y-%m-%d\").date());\r\n    |                                                                            ^^^^\r\n\r\n\r\n```\r\n\r\nOkay, not a problem! **Attempt 2: adding ?**\r\n\r\n        parse_optional_string!(date_end, \"date_end\", map,\r\n                               |s| DateTime::parse_from_str(s, \"%Y-%m-%d\")?.date());\r\n\r\n```\r\nerror[E0277]: the trait bound `chrono::Date<chrono::FixedOffset>: std::ops::Carrier` is not satisfied\r\n   --> src/tournaments.rs:377:36\r\n    |\r\n376 |         parse_optional_string!(date_end, \"date_end\", map,\r\n    |         - in this macro invocation\r\n377 |                                |s| DateTime::parse_from_str(s, \"%Y-%m-%d\")?.date());\r\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ trait `chrono::Date<chrono::FixedOffset>: std::ops::Carrier` not satisfied\r\n    |\r\n    = note: required by `std::ops::Carrier::from_error`\r\n```\r\n\r\n**Attempt 3: trying to use old style `try!` (assuming it would work):**\r\n\r\n        parse_optional_string!(date_end, \"date_end\", map,\r\n                               |s| try!(DateTime::parse_from_str(s, \"%Y-%m-%d\")).date());\r\n\r\n```\r\n\r\nerror[E0308]: mismatched types\r\n   --> src/tournaments.rs:377:36\r\n    |\r\n376 |         parse_optional_string!(date_end, \"date_end\", map,\r\n    |         - in this macro invocation\r\n377 |                                |s| try!(DateTime::parse_from_str(s, \"%Y-%m-%d\")).date());\r\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::result::Result`, found struct `chrono::Date`\r\n    |\r\n    = note: expected type `std::result::Result<_, _>`\r\n    = note:    found type `chrono::Date<chrono::FixedOffset>`\r\n```\r\n\r\nSooooo, I know the way it will work 100%, **Attempt 4: using unwrap()**:\r\n\r\n        parse_optional_string!(date_end, \"date_end\", map,\r\n                               |s| DateTime::parse_from_str(s, \"%Y-%m-%d\").unwrap().date());\r\n\r\nAnd only the last way works. What is the problem here?\r\n\r\n    serde_json = \"0.8.3\"\r\n    chrono = \"0.2.25\"\r\n    rustc version is rustc 1.13.0 (2c6933acc 2016-11-07)\r\n", "closed_by": {"login": "vityafx", "id": 1146369, "node_id": "MDQ6VXNlcjExNDYzNjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1146369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vityafx", "html_url": "https://github.com/vityafx", "followers_url": "https://api.github.com/users/vityafx/followers", "following_url": "https://api.github.com/users/vityafx/following{/other_user}", "gists_url": "https://api.github.com/users/vityafx/gists{/gist_id}", "starred_url": "https://api.github.com/users/vityafx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vityafx/subscriptions", "organizations_url": "https://api.github.com/users/vityafx/orgs", "repos_url": "https://api.github.com/users/vityafx/repos", "events_url": "https://api.github.com/users/vityafx/events{/privacy}", "received_events_url": "https://api.github.com/users/vityafx/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/38127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/38127/timeline", "performed_via_github_app": null, "state_reason": "completed"}