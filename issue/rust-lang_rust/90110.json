{"url": "https://api.github.com/repos/rust-lang/rust/issues/90110", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90110/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90110/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90110/events", "html_url": "https://github.com/rust-lang/rust/issues/90110", "id": 1031720624, "node_id": "I_kwDOAAsO6M49fs6w", "number": 90110, "title": "Compiler crash: \"receiver when `Self = (dyn Parser<D> + 'static)` should have a ScalarPair ABI\"", "user": {"login": "harrybraviner", "id": 1665826, "node_id": "MDQ6VXNlcjE2NjU4MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1665826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harrybraviner", "html_url": "https://github.com/harrybraviner", "followers_url": "https://api.github.com/users/harrybraviner/followers", "following_url": "https://api.github.com/users/harrybraviner/following{/other_user}", "gists_url": "https://api.github.com/users/harrybraviner/gists{/gist_id}", "starred_url": "https://api.github.com/users/harrybraviner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harrybraviner/subscriptions", "organizations_url": "https://api.github.com/users/harrybraviner/orgs", "repos_url": "https://api.github.com/users/harrybraviner/repos", "events_url": "https://api.github.com/users/harrybraviner/events{/privacy}", "received_events_url": "https://api.github.com/users/harrybraviner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 3921860029, "node_id": "LA_kwDOAAsO6M7pwtW9", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-has-mcve", "name": "S-has-mcve", "color": "862eff", "default": false, "description": "A Minimal Complete and Verifiable Example has been found for this issue"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-10-20T18:41:30Z", "updated_at": "2023-03-18T15:57:41Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nuse std::fs::File;\r\nuse std::io::{BufReader, BufRead};\r\nuse std::str::Split;\r\nuse std::path::Path;\r\n\r\npub trait Parser<D>\r\nwhere dyn Parser<D>: Sized\r\n{\r\n    fn new(split_header: Split<&str>) -> Self where Self: Sized;\r\n    fn parse_line(&self, split_line: &Split<&str>) -> D;\r\n}\r\n\r\n\r\npub struct CsvReader<D> {\r\n    parser: Box<dyn Parser<D>>,\r\n\r\n    reader: BufReader<File>,\r\n    buf: String,    // Buffer we will read into. Avoids re-allocation on each line.\r\n    path: String,   // Record this so we can return more informative error messages.\r\n    line: usize,    // Same motivation for this.\r\n}\r\n\r\nimpl<D> CsvReader<D>\r\nwhere dyn Parser<D>: Sized \r\n{\r\n    fn new<F>(path: &str, make_parser: F) -> CsvReader<D>\r\n    where F: Fn(Split<char>) -> dyn Parser<D> {\r\n        let file = match File::open(Path::new(path)) {\r\n            Err(err) => panic!(\"Couldn't read {}: {}\", path, err),\r\n            Ok(file) => file,\r\n        };\r\n\r\n        let mut reader = BufReader::new(file);\r\n\r\n        let mut buf = String::new();\r\n\r\n        let parser = Box::new(match reader.read_line(&mut buf) {\r\n            Err(err) => panic!(\"Failed to read the header line from {}: {}\", path, err),\r\n            Ok(_) => {\r\n                let split_header = buf.split(',');\r\n                make_parser(split_header)\r\n            },\r\n        });\r\n\r\n        CsvReader {\r\n            parser: parser,\r\n            reader,\r\n            buf,\r\n            path: path.to_string(),\r\n            line: 2,\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.55.0 (c8dfcfe04 2021-09-06)\r\nbinary: rustc\r\ncommit-hash: c8dfcfe046a7680554bf4eb612bad840e7631c4b\r\ncommit-date: 2021-09-06\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.55.0\r\nLLVM version: 12.0.1\r\n```\r\n\r\nThis crash also happens with `1.58.0-nightly (1f12ac872 2021-10-17)`.\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling csv_bug_repro v0.1.0 (/home/harry/coding/rust_sandbox/csv_bug_repro)\r\nwarning: struct is never constructed: `CsvReader`\r\n  --> src/csv_reader.rs:14:12\r\n   |\r\n14 | pub struct CsvReader<D> {\r\n   |            ^^^^^^^^^\r\n   |\r\n   = note: `#[warn(dead_code)]` on by default\r\n\r\nwarning: associated function is never used: `new`\r\n  --> src/csv_reader.rs:26:8\r\n   |\r\n26 |     fn new<F>(path: &str, make_parser: F) -> CsvReader<D>\r\n   |        ^^^\r\n\r\nwarning: Error finalizing incremental compilation session directory `/home/harry/coding/rust_sandbox/csv_bug_repro/target/debug/incremental/csv_bug_repro-t1krx8ndn25r/s-g3h06ix8xp-1apzozo-working`: No such file or directory (os error 2)\r\n\r\nerror: internal compiler error: receiver when `Self = (dyn Parser<D> + 'static)` should have a ScalarPair ABI; found Some(Scalar(Scalar { value: Pointer, valid_range: 1..=18446744073709551615 }))\r\n  --> src/csv_reader.rs:10:5\r\n   |\r\n10 |     fn parse_line(&self, split_line: &Split<&str>) -> D;\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at compiler/rustc_trait_selection/src/traits/object_safety.rs:507:30\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', compiler/rustc_errors/src/lib.rs:1050:13\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.55.0 (c8dfcfe04 2021-09-06) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nwarning: `csv_bug_repro` (bin \"csv_bug_repro\") generated 3 warnings\r\nerror: could not compile `csv_bug_repro`; 3 warnings emitted\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', compiler/rustc_errors/src/lib.rs:1050:13\r\nstack backtrace:\r\n   0:     0x7efecd3aeb40 - std::backtrace_rs::backtrace::libunwind::trace::ha0ad43e8a952bfe7\r\n                               at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/std/src/../../backtrace/src/backtrace/libunwind.rs:90:5\r\n   1:     0x7efecd3aeb40 - std::backtrace_rs::backtrace::trace_unsynchronized::h6830419c0c4130dc\r\n                               at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7efecd3aeb40 - std::sys_common::backtrace::_print_fmt::h8f3516631ffa1ef5\r\n                               at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x7efecd3aeb40 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::he1640d5f0d93f618\r\n                               at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x7efecd41c6bc - core::fmt::write::h88012e1f01caeebf\r\n                               at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/core/src/fmt/mod.rs:1115:17\r\n   5:     0x7efecd3a02d5 - std::io::Write::write_fmt::h360fa85b30182555\r\n                               at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/std/src/io/mod.rs:1665:15\r\n   6:     0x7efecd3b289b - std::sys_common::backtrace::_print::ha1f00492f406a015\r\n                               at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x7efecd3b289b - std::sys_common::backtrace::print::hd54561b13feb6af3\r\n                               at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x7efecd3b289b - std::panicking::default_hook::{{closure}}::h84fe124cd0864662\r\n                               at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/std/src/panicking.rs:208:50\r\n   9:     0x7efecd3b2371 - std::panicking::default_hook::h5a8e74a76ce290a7\r\n                               at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/std/src/panicking.rs:225:9\r\n  10:     0x7efecdb8b251 - rustc_driver::DEFAULT_HOOK::{{closure}}::{{closure}}::h6de3be617154114e\r\n  11:     0x7efecd3b30c9 - std::panicking::rust_panic_with_hook::h67c812a4fe9d4c91\r\n                               at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/std/src/panicking.rs:626:17\r\n  12:     0x7efecd3b2b87 - std::panicking::begin_panic_handler::{{closure}}::h33f9c1b96af300d7\r\n                               at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/std/src/panicking.rs:519:13\r\n  13:     0x7efecd3af03c - std::sys_common::backtrace::__rust_end_short_backtrace::h51bae64be5921f0e\r\n                               at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/std/src/sys_common/backtrace.rs:141:18\r\n  14:     0x7efecd3b2ae9 - rust_begin_unwind\r\n                               at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/std/src/panicking.rs:515:5\r\n  15:     0x7efecd37baab - std::panicking::begin_panic_fmt::h7ab3d84aa4ae32a2\r\n                               at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/std/src/panicking.rs:457:5\r\n  16:     0x7efecffecd69 - rustc_errors::HandlerInner::flush_delayed::h3cf13f1d614b970c\r\n  17:     0x7efecffeb7cd - <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop::h1ba213c91f42b705\r\n  18:     0x7efecf69fa76 - core::ptr::drop_in_place<rustc_session::parse::ParseSess>::hf39666c9be42225f\r\n  19:     0x7efecf6a1e8e - <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop::h7cb2a8407593b01a\r\n  20:     0x7efecf67703d - core::ptr::drop_in_place<rustc_interface::interface::Compiler>::haa98f3f95730172a\r\n  21:     0x7efecf676623 - rustc_span::with_source_map::hc5adfd8eb2dd5236\r\n  22:     0x7efecf687c8a - rustc_interface::interface::create_compiler_and_run::h976ed8e22b4f89b8\r\n  23:     0x7efecf67ae89 - scoped_tls::ScopedKey<T>::set::h4a2887b4d5b96c48\r\n  24:     0x7efecf6779aa - std::sys_common::backtrace::__rust_begin_short_backtrace::h220030c0c75c9d89\r\n  25:     0x7efecf676df5 - core::ops::function::FnOnce::call_once{{vtable.shim}}::hd62830e2741d6b63\r\n  26:     0x7efecd3bf657 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h6bff7798948b1075\r\n                               at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/alloc/src/boxed.rs:1572:9\r\n  27:     0x7efecd3bf657 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hc2d25ac38f6b2342\r\n                               at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/alloc/src/boxed.rs:1572:9\r\n  28:     0x7efecd3bf657 - std::sys::unix::thread::Thread::new::thread_start::hbba5bc368baac205\r\n                               at /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/std/src/sys/unix/thread.rs:74:17\r\n  29:     0x7efecd0ff6db - start_thread\r\n  30:     0x7efecca1ca3f - __clone\r\n  31:                0x0 - <unknown>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90110/timeline", "performed_via_github_app": null, "state_reason": null}