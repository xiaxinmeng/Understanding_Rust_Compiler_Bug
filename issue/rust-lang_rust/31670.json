{"url": "https://api.github.com/repos/rust-lang/rust/issues/31670", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/31670/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/31670/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/31670/events", "html_url": "https://github.com/rust-lang/rust/issues/31670", "id": 133648272, "node_id": "MDU6SXNzdWUxMzM2NDgyNzI=", "number": 31670, "title": "std::sync::RwLock upgrade a ReadGuard to WriteGuard.", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-02-15T08:05:28Z", "updated_at": "2022-08-30T09:38:57Z", "closed_at": "2016-02-15T18:28:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm writing a library implementing transactions on an memory-mapped file.\nTransactions can be mutable and non-mutable, with rules slightly different from the usual Rust model:\n- All transactions can read memory\n- There can be only one mutable transaction started at any time\n- Mutable transactions do not exclude non-mutable ones, except for a very short synchronization time at the end\n\nRight now, I'm using a mutex to prevent two mutable transactions at the same time, and an RwLock for the step of mutable transactions.\n\nUsing just an RwLock would require mutable transactions to first drop their ReadGuard before acquiring a WriteGuard, which means that another mutable transaction could be started at the same time.\n\nBeing able to atomically upgrade a ReadGuard into a WriteGuard would achieve the same effect with just one RwLock instead of RwLock + Mutex.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/31670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/31670/timeline", "performed_via_github_app": null, "state_reason": "completed"}