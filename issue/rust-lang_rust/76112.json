{"url": "https://api.github.com/repos/rust-lang/rust/issues/76112", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/76112/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/76112/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/76112/events", "html_url": "https://github.com/rust-lang/rust/issues/76112", "id": 688758973, "node_id": "MDU6SXNzdWU2ODg3NTg5NzM=", "number": 76112, "title": "Cannot infer type when indexing an array inside closure with an argument", "user": {"login": "YaLTeR", "id": 1794388, "node_id": "MDQ6VXNlcjE3OTQzODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1794388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YaLTeR", "html_url": "https://github.com/YaLTeR", "followers_url": "https://api.github.com/users/YaLTeR/followers", "following_url": "https://api.github.com/users/YaLTeR/following{/other_user}", "gists_url": "https://api.github.com/users/YaLTeR/gists{/gist_id}", "starred_url": "https://api.github.com/users/YaLTeR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YaLTeR/subscriptions", "organizations_url": "https://api.github.com/users/YaLTeR/orgs", "repos_url": "https://api.github.com/users/YaLTeR/repos", "events_url": "https://api.github.com/users/YaLTeR/events{/privacy}", "received_events_url": "https://api.github.com/users/YaLTeR/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-30T17:33:12Z", "updated_at": "2022-03-23T06:56:30Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=25b1f2e69b52049319de33877b9b4981)):\r\n\r\n```rust\r\nfn main() {\r\n    let a: [i64; 1] = [0];\r\n    let f = |p| {\r\n        a[p].pow(1)\r\n    };\r\n    let c: i64 = f(0);\r\n}\r\n```\r\n\r\nI expected to see this happen: no errors\r\n\r\nInstead, this happened:\r\n```\r\nerror[E0282]: type annotations needed\r\n --> src/main.rs:4:9\r\n  |\r\n4 |         a[p].pow(1)\r\n  |         ^^^^ cannot infer type\r\n  |\r\n  = note: type must be known at this point\r\n```\r\n\r\nReplacing it with `a[0]` compiles, removing `.pow(1)` also compiles. Extracting `a[p]` into a variable as so:\r\n```rust\r\nlet x = a[p];\r\nx.pow(1)\r\n```\r\nalso results in an error suggesting giving `x` an explicit type. Giving `x` an explicit `i64` type also compiles.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.46.0 (04488afe3 2020-08-24)\r\nbinary: rustc\r\ncommit-hash: 04488afe34512aa4c33566eb16d8c912a3ae04f9\r\ncommit-date: 2020-08-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.46.0\r\nLLVM version: 10.0\r\n```\r\n\r\nSame issue on beta and nightly.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/76112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/76112/timeline", "performed_via_github_app": null, "state_reason": null}