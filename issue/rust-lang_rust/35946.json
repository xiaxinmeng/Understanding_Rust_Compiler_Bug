{"url": "https://api.github.com/repos/rust-lang/rust/issues/35946", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/35946/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/35946/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/35946/events", "html_url": "https://github.com/rust-lang/rust/issues/35946", "id": 172771160, "node_id": "MDU6SXNzdWUxNzI3NzExNjA=", "number": 35946, "title": "Improve `?` error messages per RFC 1859", "user": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 693664741, "node_id": "MDU6TGFiZWw2OTM2NjQ3NDE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mentor", "name": "E-needs-mentor", "color": "02e10c", "default": false, "description": "Call for participation: This issue is in need of a mentor."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 34, "created_at": "2016-08-23T18:25:00Z", "updated_at": "2020-04-27T05:47:07Z", "closed_at": "2020-04-27T05:47:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "RFC 1859 laid out [specific error messages](https://github.com/rust-lang/rfcs/blob/master/text/1859-try-trait.md#error-messages) for the `?` operator, but currently they are not implemented (and instead the compiler's internal desugaring is revealed).\r\n\r\nUPDATE: Many parts of this are done, but not all. [Here is a post with examples that are not yet great.](https://github.com/rust-lang/rust/issues/35946#issuecomment-364183576)\r\n\r\nUPDATE 2: to close this ticket we need [to improve the output of a single case left](https://play.rust-lang.org/?gist=110a357512f6b3287055963dcdbb951d&version=nightly) to [point at the return type to explain where `usize` is coming from](https://github.com/rust-lang/rust/issues/35946#issuecomment-617465813).\r\n\r\n-----\r\n\r\n**Original text:**\r\n\r\n`try!` in main has long been an issue, to the point of trying to adjust the language to support it: https://github.com/rust-lang/rfcs/issues/1176\r\n\r\nI was trying out `?` today, and hit this error:\r\n\r\n``` rust\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:5:13\r\n  |\r\n5 |     let f = File::open(\"hello.txt\")?;\r\n  |             ^^^^^^^^^^^^^^^^^^^^^^^^ expected (), found enum `std::result::Result`\r\n  |\r\n  = note: expected type `()`\r\n  = note:    found type `std::result::Result<_, _>`\r\n```\r\n\r\nThat's the only line, inside of a `main()` function. Even though I know about this pitfall, and have been using Rust for a long time, I asked a question about it on IRC.\r\n\r\nCan we print a better diagnostic here that points out it's the _return type_ of the function that's looking for `()`?\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/35946/reactions", "total_count": 24, "+1": 24, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/35946/timeline", "performed_via_github_app": null, "state_reason": "completed"}