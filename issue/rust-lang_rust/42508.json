{"url": "https://api.github.com/repos/rust-lang/rust/issues/42508", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42508/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42508/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42508/events", "html_url": "https://github.com/rust-lang/rust/issues/42508", "id": 234232600, "node_id": "MDU6SXNzdWUyMzQyMzI2MDA=", "number": 42508, "title": "region inference sometimes fails to recognize implied bound in closure ", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-06-07T14:39:12Z", "updated_at": "2019-12-27T19:18:41Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Following a bug sample from @jdm, I encountered this bug. [The compiler errors out in this code](https://is.gd/xTZO0h):\r\n\r\n```rust\r\nstruct Parser<'i: 't, 't> {\r\n  data: &'t mut Vec<&'i String>\r\n}\r\n\r\nfn callback1<'i, 't, F>(parser: &mut Parser<'i, 't>, f: F)\r\n    where F: for<'tt1> FnMut(&mut Parser<'i, 'tt1>)\r\n{\r\n    panic!()\r\n}\r\n\r\nfn callback2<'i, 't, F>(parser: &mut Parser<'i, 't>, mut f: F)\r\n    where F: for<'tt2> FnMut(&mut Parser<'i, 'tt2>)\r\n{\r\n    callback1(parser, |input| {\r\n        f(input)\r\n    });\r\n}\r\n\r\nfn main() {\r\n}\r\n```\r\n\r\nspecifically it reports a \"cannot infer\" lifetime error, complaining about how the lifetime `'tt2` in the call `f(input)` must be some lifetime `'x` where `'i: 'x` and `'x: 'tt1` (where `'tt1` is the lifetime that appears in the type of `input` in the closure). The compiler is upset because it does not know that `'i: 'tt1`. Those constraints are correct, but in fact the compiler should be able to deduce that `'i: 'tt1` based on the type of `input`, which is is `&mut Parser<'i, 'tt1>`. The implied bounds for this type suggest that `'i: 'tt1`. But we fail to see it.\r\n\r\nThe problem is an interaction with inference. When we call `callback1()` here, we do not specify the lifetime, and so we create a variable `'x` -- that is, the actual type of `input` is `&mut Parser<'x, 'tt2>`, where `'x` is the inference variable. We then recognize that this means `'x: 'tt2`, and we add a \"given\", which is this hacky bit of code in region inference. Then we infer that `'x` must be `'i`. But when we go to check that `'x: 'tt2`, we substitute `'x` to `'i`, and then report an error, because we never added anything that tells us that `'i: 'tt2`. [If you specify `callback::<'i>` manually, it will work fine.](https://is.gd/QxHOqn)\r\n\r\nThe most straightforward fix is to use the given logic here too. The better fix is to retool this part of region inference to be more robust, which I am in the process of trying to plan out right now for other reasons anyhow.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42508/timeline", "performed_via_github_app": null, "state_reason": null}