{"url": "https://api.github.com/repos/rust-lang/rust/issues/83026", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83026/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83026/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83026/events", "html_url": "https://github.com/rust-lang/rust/issues/83026", "id": 829450285, "node_id": "MDU6SXNzdWU4Mjk0NTAyODU=", "number": 83026, "title": "[rustdoc] doesn't document method implemented in `const` item blocks.", "user": {"login": "rustonaut", "id": 7632017, "node_id": "MDQ6VXNlcjc2MzIwMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/7632017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustonaut", "html_url": "https://github.com/rustonaut", "followers_url": "https://api.github.com/users/rustonaut/followers", "following_url": "https://api.github.com/users/rustonaut/following{/other_user}", "gists_url": "https://api.github.com/users/rustonaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustonaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustonaut/subscriptions", "organizations_url": "https://api.github.com/users/rustonaut/orgs", "repos_url": "https://api.github.com/users/rustonaut/repos", "events_url": "https://api.github.com/users/rustonaut/events{/privacy}", "received_events_url": "https://api.github.com/users/rustonaut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-03-11T19:18:34Z", "updated_at": "2022-12-22T11:06:49Z", "closed_at": "2022-12-22T11:06:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Rustdoc doesn't document method implemented in `const _:() = {}` blocks.\r\n\r\n(They don't show up at all.)\r\n\r\nMinified example:\r\n\r\n```rust\r\npub struct A(u8);\r\n\r\n// this brakes rustdoc but is valid and useful in larger impl helper macros to limit imports to the macro body.\r\nconst _: () = {\r\n    impl A {\r\n        // YES THIS LINE IS NO doc comment, the method doesn't even show up at all\r\n        pub fn new(inner: u8) -> Self {\r\n            Self(inner)\r\n        }\r\n    }\r\n};\r\n\r\n// just to show the method is implemented\r\n#[cfg(test)]\r\nmod tests {\r\n    use super::*;\r\n\r\n    #[test]\r\n    fn a_has_new() {\r\n        let _ = A::new(12);\r\n    }\r\n}\r\n```\r\n\r\nI expected to see this happen:  `A::new` to show up in rustdoc (without any doc comment)\r\n\r\nInstead, this happened: `A::new` is not visible at all in the generated documentation.\r\n\r\n### Why is it important that rustdoc documents such items.\r\n\r\n`const _:() = {}` blocks are currently the only way to have scopes on top-level items which are necessary\r\nfor producing cleaner code by e.g. grouping imports with impl. blocks or easily feature gating multiple\r\nimpl's and imports without needing to repeat the `#[cfg(...)]` on each item (making changes easy to accidentally partial brake code by forgetting a place where it changed).\r\n\r\nI personally did run into this when I had a large amount of methods and traits implemented very similar on two types, where for various reasons a shared trait was not possible (and not appropriate either).  I used `const _:()={}` to make sure the imports for the many method and trait impl.s do stay inside of the macro and do not pollute the outer scope.  As far as I know this trick is also not uncommon for proc-macros.\r\n\r\n### Meta\r\n\r\nappears on 1.47, stable, beta,  nightly:\r\n\r\n```\r\nrustc 1.47.0 (18bf6b4f0 2020-10-07)\r\nbinary: rustc\r\ncommit-hash: 18bf6b4f01a6feaf7259ba7cdae58031af1b7b39\r\ncommit-date: 2020-10-07\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.47.0\r\nLLVM version: 11.0\r\n```\r\n\r\n```\r\nrustc 1.50.0 (cb75ad5db 2021-02-10)\r\nbinary: rustc\r\ncommit-hash: cb75ad5db02783e8b0222fee363c5f63f7e2cf5b\r\ncommit-date: 2021-02-10\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.50.0\r\n```\r\n\r\n```\r\nrustc 1.51.0-beta.4 (4d25f4607 2021-03-05)\r\nbinary: rustc\r\ncommit-hash: 4d25f4607015a56d18d7c6c649441608a9298845\r\ncommit-date: 2021-03-05\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.51.0-beta.4\r\nLLVM version: 11.0.1\r\n```\r\n\r\n```\r\nrustc 1.52.0-nightly (8f349be27 2021-03-08)\r\nbinary: rustc\r\ncommit-hash: 8f349be27815d43d462a32faeb270a22a68486b6\r\ncommit-date: 2021-03-08\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.52.0-nightly\r\nLLVM version: 12.0.0\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83026/timeline", "performed_via_github_app": null, "state_reason": "completed"}