{"url": "https://api.github.com/repos/rust-lang/rust/issues/102923", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102923/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102923/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102923/events", "html_url": "https://github.com/rust-lang/rust/issues/102923", "id": 1404920075, "node_id": "I_kwDOAAsO6M5TvWEL", "number": 102923, "title": "Better diagnostics for proc macro attributes", "user": {"login": "afetisov", "id": 12111996, "node_id": "MDQ6VXNlcjEyMTExOTk2", "avatar_url": "https://avatars.githubusercontent.com/u/12111996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afetisov", "html_url": "https://github.com/afetisov", "followers_url": "https://api.github.com/users/afetisov/followers", "following_url": "https://api.github.com/users/afetisov/following{/other_user}", "gists_url": "https://api.github.com/users/afetisov/gists{/gist_id}", "starred_url": "https://api.github.com/users/afetisov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afetisov/subscriptions", "organizations_url": "https://api.github.com/users/afetisov/orgs", "repos_url": "https://api.github.com/users/afetisov/repos", "events_url": "https://api.github.com/users/afetisov/events{/privacy}", "received_events_url": "https://api.github.com/users/afetisov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": {"login": "mejrs", "id": 59372212, "node_id": "MDQ6VXNlcjU5MzcyMjEy", "avatar_url": "https://avatars.githubusercontent.com/u/59372212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mejrs", "html_url": "https://github.com/mejrs", "followers_url": "https://api.github.com/users/mejrs/followers", "following_url": "https://api.github.com/users/mejrs/following{/other_user}", "gists_url": "https://api.github.com/users/mejrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/mejrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mejrs/subscriptions", "organizations_url": "https://api.github.com/users/mejrs/orgs", "repos_url": "https://api.github.com/users/mejrs/repos", "events_url": "https://api.github.com/users/mejrs/events{/privacy}", "received_events_url": "https://api.github.com/users/mejrs/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mejrs", "id": 59372212, "node_id": "MDQ6VXNlcjU5MzcyMjEy", "avatar_url": "https://avatars.githubusercontent.com/u/59372212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mejrs", "html_url": "https://github.com/mejrs", "followers_url": "https://api.github.com/users/mejrs/followers", "following_url": "https://api.github.com/users/mejrs/following{/other_user}", "gists_url": "https://api.github.com/users/mejrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/mejrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mejrs/subscriptions", "organizations_url": "https://api.github.com/users/mejrs/orgs", "repos_url": "https://api.github.com/users/mejrs/repos", "events_url": "https://api.github.com/users/mejrs/events{/privacy}", "received_events_url": "https://api.github.com/users/mejrs/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-10-11T16:27:12Z", "updated_at": "2023-01-26T09:14:04Z", "closed_at": "2023-01-26T09:14:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the following code: \n\n```rust\n#[proc_macro]\npub fn mac() {}\n\n#[proc_macro_attribute]\npub fn attrib() {}\n\n#[proc_macro_derive(D)]\npub fn derive() {}\n```\n\nThe current output is:\n\n```\nerror[E0593]: function is expected to take 1 argument, but it takes 0 arguments\n   --> mac/src/lib.rs:9:1\n    |\n9   | pub fn mac() {}\n    | ------------^^^\n    | |\n    | expected function that takes 1 argument\n    | takes 0 arguments\n    |\nnote: required by a bound in `ProcMacro::bang`\n   --> /home/user/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/proc_macro/src/bridge/client.rs:506:22\n    |\n506 |         expand: impl Fn(crate::TokenStream) -> crate::TokenStream + Copy,\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `ProcMacro::bang`\n\nerror[E0593]: function is expected to take 2 arguments, but it takes 0 arguments\n   --> mac/src/lib.rs:12:1\n    |\n12  | pub fn attrib() {}\n    | -------------^^^\n    | |\n    | expected function that takes 2 arguments\n    | takes 0 arguments\n    |\nnote: required by a bound in `ProcMacro::attr`\n   --> /home/user/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/proc_macro/src/bridge/client.rs:499:22\n    |\n499 |         expand: impl Fn(crate::TokenStream, crate::TokenStream) -> crate::TokenStream + Copy,\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `ProcMacro::attr`\n\nerror[E0593]: function is expected to take 1 argument, but it takes 0 arguments\n   --> mac/src/lib.rs:15:1\n    |\n15  | pub fn derive() {}\n    | ---------------^^^\n    | |\n    | expected function that takes 1 argument\n    | takes 0 arguments\n    |\nnote: required by a bound in `ProcMacro::custom_derive`\n   --> /home/user/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/proc_macro/src/bridge/client.rs:492:22\n    |\n492 |         expand: impl Fn(crate::TokenStream) -> crate::TokenStream + Copy,\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `ProcMacro::custom_derive`\n```\n\nThe compiler knows the meaning of `#[proc_macro*]` attributes, so it could provide more helpful error messages. The `ProcMacro::custom_derive` etc types are not part of the API that the users normally work with, so listing them is unhelpful. Since the signatures of proc macro functions are fixed, the compiler can directly list them:\n\n```\nerror[E0???]: function is expected to take 1 argument, but it takes 0 arguments\n   --> mac/src/lib.rs:9:1\n    |\n9   | pub fn mac() {}\n    | ----------^^^\n    | |\n    | functions annotated with `#[proc_macro]` must have the signature \n    |     `pub fn mac(item: TokenStream) -> TokenStream`\n\nerror[E0???]: function is expected to take 2 arguments, but it takes 0 arguments\n   --> mac/src/lib.rs:12:1\n    |\n12  | pub fn attrib() {}\n    | ----------^^^\n    | |\n    | functions annotated with `#[proc_macro_attribute]` must have the signature \n    |     `pub fn attrib(attr: TokenStream, item: TokenStream) -> TokenStream`\n\nerror[E0???]: function is expected to take 1 argument, but it takes 0 arguments\n   --> mac/src/lib.rs:15:1\n    |\n15  | pub fn derive() {}\n    | ----------^^^\n    | |\n    | functions annotated with `#[proc_macro_derive(..)]` must have the signature \n    |     `pub fn derive(item: TokenStream) -> TokenStream`\n```\n\nNote that the signature includes the function name and argument names, allowing the proper signature to be copy-pasted in code. This also disambiguates arguments for attribute proc macros, where there may be confusion w.r.t. order of arguments.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"mejrs\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102923/timeline", "performed_via_github_app": null, "state_reason": "completed"}