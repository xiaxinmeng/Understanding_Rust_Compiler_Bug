{"url": "https://api.github.com/repos/rust-lang/rust/issues/106688", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/106688/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/106688/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/106688/events", "html_url": "https://github.com/rust-lang/rust/issues/106688", "id": 1527715021, "node_id": "I_kwDOAAsO6M5bDxTN", "number": 106688, "title": "Mut borrow persists after await", "user": {"login": "andrewbaxter", "id": 597549, "node_id": "MDQ6VXNlcjU5NzU0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/597549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewbaxter", "html_url": "https://github.com/andrewbaxter", "followers_url": "https://api.github.com/users/andrewbaxter/followers", "following_url": "https://api.github.com/users/andrewbaxter/following{/other_user}", "gists_url": "https://api.github.com/users/andrewbaxter/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewbaxter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewbaxter/subscriptions", "organizations_url": "https://api.github.com/users/andrewbaxter/orgs", "repos_url": "https://api.github.com/users/andrewbaxter/repos", "events_url": "https://api.github.com/users/andrewbaxter/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewbaxter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-01-10T16:53:13Z", "updated_at": "2023-01-11T06:12:34Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\nstruct A;\r\nstruct B<'b>(&'b mut A);\r\n\r\nasync fn m(_b: &mut B<'_>) {}\r\n\r\nasync fn tx<\r\n    'f,\r\n    'b: 'f,\r\n    'a: 'b,\r\n    F: std::future::Future<Output=()> + 'f,\r\n    N: FnOnce(&'b mut B<'a>) -> F,\r\n>(a: &'a mut A, n: N) {\r\n    let mut b = B(a);\r\n    n(&mut b).await;\r\n}\r\n\r\n#[tokio::main]\r\npub async fn main() {\r\n    tx(\r\n        &mut A, \r\n        |b| async { m(b).await; },\r\n    ).await;\r\n}\r\n```\r\n\r\nI expected to see this happen: Compile fine.\r\n\r\nInstead, this happened: Compile fails with error:\r\n\r\n```\r\nCompiling playground v0.0.1 (/playground)\r\nerror[[E0597]](https://doc.rust-lang.org/nightly/error-index.html#E0597): `b` does not live long enough\r\n  --> src/main.rs:14:7\r\n   |\r\n8  |     'b: 'f,\r\n   |     -- lifetime `'b` defined here\r\n...\r\n14 |     n(&mut b).await;\r\n   |     --^^^^^^-\r\n   |     | |\r\n   |     | borrowed value does not live long enough\r\n   |     argument requires that `b` is borrowed for `'b`\r\n15 | }\r\n   | - `b` dropped here while still borrowed\r\n\r\nFor more information about this error, try `rustc --explain E0597`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\n### Meta\r\nPlayground versions:\r\n```\r\nStable channel\r\nBuild using the Stable version: 1.66.0\r\n\r\n\r\nBeta channel\r\nBuild using the Beta version: 1.67.0-beta.6\r\n\r\n(2022-12-31 51b03459a49d03dbad7d)\r\n\r\n\r\nNightly channel\r\nBuild using the Nightly version: 1.68.0-nightly\r\n\r\n(2023-01-09 3020239de947ec52677e)\r\n```\r\n\r\n### Notes\r\n\r\nI admit I'm still wobbly with a lot that has to do with lifetimes and futures, but it's my understanding that `await` consumes the future so no borrows should exist after that.\r\n\r\nThe error seems very similar to https://github.com/rust-lang/rust/issues/98077 but that only discusses drops and not awaits, and implies that await resolves the issue (where here await does nothing).  This problem is discussed here: https://stackoverflow.com/questions/70538177/rust-async-borrow-lifetimes where it's suggested HRTBs solve the problem, but I couldn't get the example working.  There's a similar discussion here: https://www.reddit.com/r/rust/comments/m1sj3b/problems_with_lifetimes_and_async_fns/ which failed to find a solution.\r\n\r\nWithout `'f` and `'b` compiling `tx` passes but instead there's a lifetime error in the closure about the future outliving the parameter.\r\n\r\nMy use case is specifically about wrapping transactions in databases, where a user passes in a function and when their function is done executing the transaction (b) is committed or rolled back (I've hit this trying to come up with a transaction wrapper with multiple DB libraries now).\r\n\r\nI can work around the issue by moving b into the callback and having the callback return b at the end, but this renders `?` useless and results in a lot more boilerplate.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/106688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/106688/timeline", "performed_via_github_app": null, "state_reason": null}