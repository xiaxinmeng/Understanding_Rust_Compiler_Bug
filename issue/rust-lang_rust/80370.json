{"url": "https://api.github.com/repos/rust-lang/rust/issues/80370", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80370/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80370/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80370/events", "html_url": "https://github.com/rust-lang/rust/issues/80370", "id": 774797665, "node_id": "MDU6SXNzdWU3NzQ3OTc2NjU=", "number": 80370, "title": "Some internal compiler error during playing with rust-by-example (doc.rs)", "user": {"login": "vni", "id": 996203, "node_id": "MDQ6VXNlcjk5NjIwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/996203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vni", "html_url": "https://github.com/vni", "followers_url": "https://api.github.com/users/vni/followers", "following_url": "https://api.github.com/users/vni/following{/other_user}", "gists_url": "https://api.github.com/users/vni/gists{/gist_id}", "starred_url": "https://api.github.com/users/vni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vni/subscriptions", "organizations_url": "https://api.github.com/users/vni/orgs", "repos_url": "https://api.github.com/users/vni/repos", "events_url": "https://api.github.com/users/vni/events{/privacy}", "received_events_url": "https://api.github.com/users/vni/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-12-25T23:40:23Z", "updated_at": "2020-12-25T23:57:44Z", "closed_at": "2020-12-25T23:57:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I'm reading rust-by-example.\r\nhttps://doc.rust-lang.org/rust-by-example/meta/doc.html\r\n\r\nwith this doc.rs I get the next error.\r\nSorry if this bug report isn't filled as it should be.\r\n\r\nThe example below runs pretty well with (as in rust-by-example)\r\n```\r\nrustdoc --test  --extern doc=\"libdoc.rlib\" doc.rs\r\n```\r\n\r\nand fails with\r\n```\r\nrustdoc  --extern doc=\"libdoc.rlib\" doc.rs\r\n```\r\n\r\n### Code\r\n\r\n```Rust\r\n#![crate_name = \"doc\"]\r\n\r\n/// A human being is represented here\r\npub struct Person {\r\n  /// A person must have a name, no matter how much Juliet may hate it\r\n  name: String\r\n}\r\n\r\nimpl Person {\r\n  /// Returns a person with the name given them\r\n  ///\r\n  /// # Arguments\r\n  ///\r\n  /// * `name` - A string slice that holds the name of the person\r\n  ///\r\n  /// # Examples\r\n  /// ```\r\n  /// // You can have rust code ...\r\n  /// // if you pass --test to `rustdoc`, it will even test it for you!\r\n  /// use doc::Person;\r\n  /// let person = Person::new(\"name\");\r\n  /// ```\r\n  pub fn new(name: &str) -> Person {\r\n    Person {\r\n      name: name.to_string()\r\n    }\r\n  }\r\n\r\n  /// Gives a friendly hello!\r\n  ///\r\n  /// Says \"Hello, [name]\" to the `Person` it is called on.\r\n  pub fn hello(&self) {\r\n    println!(\"Hello, {}!\", self.name);\r\n  }\r\n}\r\n\r\nfn main() {\r\n  let john = Person::new(\"John\");\r\n  john.hello();\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0-nightly (0edce6f4b 2020-12-24)\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nrustdoc  --extern doc=\"libdoc.rlib\" doc.rs\r\n```\r\n```\r\nthread 'rustc' panicked at 'Unable to resolve external crate doc', src/librustdoc/core.rs:439:25\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/0edce6f4bbb4514482537f569f0b8ef48e71e0a0/library/std/src/panicking.rs:493:5\r\n   1: std::panicking::begin_panic_fmt\r\n             at /rustc/0edce6f4bbb4514482537f569f0b8ef48e71e0a0/library/std/src/panicking.rs:435:5\r\n   2: rustdoc::core::create_resolver::{{closure}}::{{closure}}::{{closure}}\r\n   3: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n   4: rustc_interface::passes::BoxedResolver::access::{{closure}}\r\n   5: rustc_interface::passes::configure_and_expand::{{closure}}\r\n   6: rustdoc::core::create_resolver\r\n   7: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n   8: rustc_span::with_source_map\r\n   9: rustdoc::main_options\r\n  10: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (0edce6f4b 2020-12-24) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n0: rust_begin_unwind\r\n             at /rustc/0edce6f4bbb4514482537f569f0b8ef48e71e0a0/library/std/src/panicking.rs:493:5\r\n   1: std::panicking::begin_panic_fmt\r\n             at /rustc/0edce6f4bbb4514482537f569f0b8ef48e71e0a0/library/std/src/panicking.rs:435:5\r\n   2: rustdoc::core::create_resolver::{{closure}}::{{closure}}::{{closure}}\r\n   3: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n   4: rustc_interface::passes::BoxedResolver::access::{{closure}}\r\n   5: rustc_interface::passes::configure_and_expand::{{closure}}\r\n   6: rustdoc::core::create_resolver\r\n   7: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n   8: rustc_span::with_source_map\r\n   9: rustdoc::main_options\r\n  10: scoped_tls::ScopedKey<T>::set\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80370/timeline", "performed_via_github_app": null, "state_reason": "completed"}