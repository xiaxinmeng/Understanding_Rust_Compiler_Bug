{"url": "https://api.github.com/repos/rust-lang/rust/issues/91864", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91864/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91864/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91864/events", "html_url": "https://github.com/rust-lang/rust/issues/91864", "id": 1078766063, "node_id": "I_kwDOAAsO6M5ATKnv", "number": 91864, "title": "Consider shipping compiler source code as a rustup component (\"rustc-src\"?).", "user": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-12-13T16:59:23Z", "updated_at": "2021-12-13T17:55:04Z", "closed_at": "2021-12-13T17:12:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Right now the `rust-src` component only contains `Cargo.lock`, `library` and `src/llvm-project/libunwind`, but none of `compiler` or `src/tools` etc.\r\n\r\nIt wouldn't (IMO) be fair to burden everyone with downloading more source code through `rust-src`, so if we do start shipping the `compiler` source dir (or any other), it should probably be opt-in, just like `rustc-dev` is (and `rustc-src` seems like the appropriate name).\r\n\r\nAs for the usecase, I'm not sure this is that substantial yet - I mainly wish I could get RA functionality for, and be able to navigate to the source of, `rustc_*` crates, while working on `rustc_codegen_spirv` (which is out-of-tree with a pinned nightly).\r\n\r\nWhile it might be possible to pull the `git` hash out of `rustc -vV` and download the source code manually, or maybe there's even some RA feature I missed, there are some advantages to having it available through `rustup` (again, not sure if they balance out the costs here).", "closed_by": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91864/timeline", "performed_via_github_app": null, "state_reason": "completed"}