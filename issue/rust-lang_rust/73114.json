{"url": "https://api.github.com/repos/rust-lang/rust/issues/73114", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73114/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73114/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73114/events", "html_url": "https://github.com/rust-lang/rust/issues/73114", "id": 634096854, "node_id": "MDU6SXNzdWU2MzQwOTY4NTQ=", "number": 73114, "title": "Crash when building with lastest rustc\uff0cbut normal build with rustc 1.44.0-nightly (b2e36e6c2 2020-04-22) running on x86_64-pc-windows-gnu", "user": {"login": "vmosone", "id": 37605322, "node_id": "MDQ6VXNlcjM3NjA1MzIy", "avatar_url": "https://avatars.githubusercontent.com/u/37605322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmosone", "html_url": "https://github.com/vmosone", "followers_url": "https://api.github.com/users/vmosone/followers", "following_url": "https://api.github.com/users/vmosone/following{/other_user}", "gists_url": "https://api.github.com/users/vmosone/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmosone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmosone/subscriptions", "organizations_url": "https://api.github.com/users/vmosone/orgs", "repos_url": "https://api.github.com/users/vmosone/repos", "events_url": "https://api.github.com/users/vmosone/events{/privacy}", "received_events_url": "https://api.github.com/users/vmosone/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-08T04:08:15Z", "updated_at": "2022-01-10T15:03:40Z", "closed_at": "2022-01-10T15:03:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nSorry\uff0cdon't know which one\uff0cjust use the latest rustc.\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.46.0-nightly (0262de554 2020-06-07)\r\nbinary: rustc\r\ncommit-hash: 0262de554b4c4c5af346137bbb1664a3f6cf4df2\r\ncommit-date: 2020-06-07\r\nhost: x86_64-pc-windows-gnu\r\nrelease: 1.46.0-nightly\r\nLLVM version: 10.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: src\\librustc_mir\\transform\\generator.rs:706: Broken MIR: generator contains type [httparse::Header; _] in MIR, but typeck only knows about for<'r, 's, 't0, 't1, 't2, 't3, 't4, 't5, 't6, 't7, 't8, 't9, 't10, 't11, 't12, 't13, 't14, 't15, 't16, 't17, 't18, 't19, 't20, 't21> {std::future::ResumeTy, tcp::util::ContextHandle<connect::HttpConnect<S, W, <<P as virtual_host::VirtualHostPool<S, W>>::Host as service::ServiceFactory<S, W>>::Service>>, &'r mut tcp::util::ContextHandle<connect::HttpConnect<S, W, <<P as virtual_host::VirtualHostPool<S, W>>::Host as service::ServiceFactory<S, W>>::Service>>, std::option::Option<&'s mut connect::HttpConnect<S, W, <<P as virtual_host::VirtualHostPool<S, W>>::Host as service::ServiceFactory<S, W>>::Service>>, &'t0 mut connect::HttpConnect<S, W, <<P as virtual_host::VirtualHostPool<S, W>>::Host as service::ServiceFactory<S, W>>::Service>, [httparse::Header<'t1>; _], httparse::Request<'t2, 't3>, https::HeaderMap, &'t4 tcp::driver::SocketHandle<S>, tcp::driver::SocketHandle<S>, &'t5 W, W, impl futures::Future, (), std::option::Option<(httparse::Request<'t8, 't9>, https::HeaderMap, std::vec::Vec<u8>, usize)>, std::vec::Vec<u8>, usize, &'t10 https::HeaderMap, https::header::HeaderName, std::option::Option<&'t11 https::HeaderValue>, &'t12 https::HeaderValue, std::result::Result<&'t13 str, https::header::ToStrError>, &'t14 str, std::option::Option<&'t15 str>, &'t16 std::option::Option<&'t17 str>, std::string::String, &'t18 std::string::String, https::Version, &'t19 std::vec::Vec<u8>, std::ops::RangeFrom<usize>, [u8], &'t20 [u8], std::option::Option<request::HttpRequest<S, W>>, request::HttpRequest<S, W>, impl futures::Future}\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/0262de554b4c4c5af346137bbb1664a3f6cf4df2\\src\\libstd\\macros.rs:13:23\r\nstack backtrace:\r\n   0:         0x694a73eb - mingw_set_invalid_parameter_handler\r\n   1:         0x694d324c - mingw_set_invalid_parameter_handler\r\n   2:         0x69498ff5 - mingw_set_invalid_parameter_handler\r\n   3:         0x694abdb0 - mingw_set_invalid_parameter_handler\r\n   4:         0x694aba39 - mingw_set_invalid_parameter_handler\r\n   5:         0x6bb773e5 - mingw_set_invalid_parameter_handler\r\n   6:         0x694ac455 - mingw_set_invalid_parameter_handler\r\n   7:         0x6cfc51e5 - mingw_set_invalid_parameter_handler\r\n   8:         0x6ce236d9 - mingw_set_invalid_parameter_handler\r\n   9:         0x6ce23a62 - mingw_set_invalid_parameter_handler\r\n  10:         0x6cce6487 - mingw_set_invalid_parameter_handler\r\n  11:         0x6cce5340 - mingw_set_invalid_parameter_handler\r\n  12:         0x6cce52e3 - mingw_set_invalid_parameter_handler\r\n  13:         0x6cce635f - mingw_set_invalid_parameter_handler\r\n  14:         0x6cce6307 - mingw_set_invalid_parameter_handler\r\n  15:         0x6cf1bba4 - mingw_set_invalid_parameter_handler\r\n  16:         0x6d0e3128 - mingw_set_invalid_parameter_handler\r\n  17:         0x6d0e47c6 - mingw_set_invalid_parameter_handler\r\n  18:         0x6d0e4a6b - mingw_set_invalid_parameter_handler\r\n  19:         0x6e25afe1 - mingw_set_invalid_parameter_handler\r\n  20:         0x6e4e5ce6 - mingw_set_invalid_parameter_handler\r\n  21:         0x6e056835 - mingw_set_invalid_parameter_handler\r\n  22:         0x6e2eb229 - mingw_set_invalid_parameter_handler\r\n  23:         0x6e14a3f4 - mingw_set_invalid_parameter_handler\r\n  24:         0x6df88524 - mingw_set_invalid_parameter_handler\r\n  25:         0x6df85863 - mingw_set_invalid_parameter_handler\r\n  26:         0x6dfbe8a9 - mingw_set_invalid_parameter_handler\r\n  27:         0x6e4ea67a - mingw_set_invalid_parameter_handler\r\n  28:         0x6e050655 - mingw_set_invalid_parameter_handler\r\n  29:         0x6e2ee98d - mingw_set_invalid_parameter_handler\r\n  30:         0x6e106820 - mingw_set_invalid_parameter_handler\r\n  31:         0x6df936e8 - mingw_set_invalid_parameter_handler\r\n  32:         0x6cd2c1d9 - mingw_set_invalid_parameter_handler\r\n  33:         0x6cd2be2f - mingw_set_invalid_parameter_handler\r\n  34:         0x6cd29764 - mingw_set_invalid_parameter_handler\r\n  35:         0x6d0e3128 - mingw_set_invalid_parameter_handler\r\n  36:         0x6d0e47c6 - mingw_set_invalid_parameter_handler\r\n  37:         0x6d0e4a6b - mingw_set_invalid_parameter_handler\r\n  38:         0x6d499891 - mingw_set_invalid_parameter_handler\r\n  39:         0x6d57a256 - mingw_set_invalid_parameter_handler\r\n  40:         0x6d6654b2 - mingw_set_invalid_parameter_handler\r\n  41:         0x6d680efc - mingw_set_invalid_parameter_handler\r\n  42:         0x6d625890 - mingw_set_invalid_parameter_handler\r\n  43:         0x6d4b6e11 - mingw_set_invalid_parameter_handler\r\n  44:         0x6d4ba8fb - mingw_set_invalid_parameter_handler\r\n  45:         0x6d69a979 - mingw_set_invalid_parameter_handler\r\n  46:         0x6d4bf4b0 - mingw_set_invalid_parameter_handler\r\n  47:         0x6d5e841d - mingw_set_invalid_parameter_handler\r\n  48:         0x6d4d89b3 - mingw_set_invalid_parameter_handler\r\n  49:         0x6e251531 - mingw_set_invalid_parameter_handler\r\n  50:         0x6be5dd76 - mingw_set_invalid_parameter_handler\r\n  51:         0x6bd6a480 - mingw_set_invalid_parameter_handler\r\n  52:         0x6bd54a07 - mingw_set_invalid_parameter_handler\r\n  53:         0x6bb7bea9 - mingw_set_invalid_parameter_handler\r\n  54:         0x6bbf780e - mingw_set_invalid_parameter_handler\r\n  55:         0x6bb79b2c - mingw_set_invalid_parameter_handler\r\n  56:         0x6bbaa474 - mingw_set_invalid_parameter_handler\r\n  57:         0x6bb62c3a - mingw_set_invalid_parameter_handler\r\n  58:         0x694ba9d8 - mingw_set_invalid_parameter_handler\r\n  59:     0x7ff9a52e7974 - mingw_set_invalid_parameter_handler\r\n  60:     0x7ff9a5c3a271 - mingw_set_invalid_parameter_handler\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73114/timeline", "performed_via_github_app": null, "state_reason": "completed"}