{"url": "https://api.github.com/repos/rust-lang/rust/issues/100486", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/100486/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/100486/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/100486/events", "html_url": "https://github.com/rust-lang/rust/issues/100486", "id": 1337907426, "node_id": "I_kwDOAAsO6M5Pvtji", "number": 100486, "title": "Tracking Issue for Vec::push_within_capacity", "user": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-08-13T08:55:19Z", "updated_at": "2023-06-19T23:44:54Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Feature gate: `#![feature(vec_push_within_capacity)]`\r\n\r\nThis is a tracking issue for `Vec::push_within_capacity`\r\n\r\nIt enables pushing into a Vec if there is any capacity left and otherwise returns the value. I.e. it avoids implicit resizing. This can be useful when one wants to explicitly control it (e.g. via `try_reserve`) or uses a Vec in an unsafe manner where moving the elements would be a problem.\r\n\r\n### Public API\r\n\r\n```rust\r\n// alloc::Vec\r\n\r\nimpl Vec<T, A> {\r\n    pub fn push_within_capacity(&mut self, value: T) -> Result<(), T>;\r\n}\r\n```\r\n\r\n### Steps / History\r\n\r\n<!--\r\nFor larger features, more steps might be involved.\r\nIf the feature is changed later, please add those PRs here as well.\r\n-->\r\n\r\n- [x] Implementation: #89123\r\n- [ ] Final comment period (FCP)[^1]\r\n- [ ] Stabilization PR\r\n\r\n<!--\r\nOnce the feature has gone through a few release cycles and there are no\r\nunresolved questions left, the feature might be ready for stabilization.\r\n\r\nIf this feature didn't go through the RFC process, a final comment period\r\n(FCP) is always needed before stabilization. This works as follows:\r\n\r\nA library API team member can kick off the stabilization process, at which point\r\nthe rfcbot will ask all the team members to verify they agree with\r\nstabilization. Once enough members agree and there are no concerns, the final\r\ncomment period begins: this issue will be marked as such and will be listed\r\nin the next This Week in Rust newsletter. If no blocking concerns are raised in\r\nthat period of 10 days, a stabilzation PR can be opened by anyone.\r\n-->\r\n\r\n### Unresolved Questions\r\n\r\n- [ ] naming (e.g. `push_in_capacity`)\r\n- [ ] may become redundant due to larger-scale work in https://github.com/rust-lang/rfcs/pull/3271\r\n\r\n[^1]: https://std-dev-guide.rust-lang.org/feature-lifecycle/stabilization.html\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/100486/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/100486/timeline", "performed_via_github_app": null, "state_reason": null}