{"url": "https://api.github.com/repos/rust-lang/rust/issues/24305", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/24305/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/24305/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/24305/events", "html_url": "https://github.com/rust-lang/rust/issues/24305", "id": 67690282, "node_id": "MDU6SXNzdWU2NzY5MDI4Mg==", "number": 24305, "title": "rustdoc: Pain points of reexports", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 37977651, "node_id": "MDU6TGFiZWwzNzk3NzY1MQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/metabug", "name": "metabug", "color": "5319e7", "default": false, "description": "Issues about issues themselves (\"bugs about bugs\")"}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 2311820664, "node_id": "MDU6TGFiZWwyMzExODIwNjY0", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-cross-crate-reexports", "name": "A-cross-crate-reexports", "color": "f7e101", "default": false, "description": "Area: Documentation that has been re-exported from a different crate"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-04-10T21:45:26Z", "updated_at": "2022-01-18T21:36:11Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "There's a lot of pain points that come up over time about rustdoc and reexports, and there's a lot of open issues as well, so this is going to serve as a metabug connecting all of them:\r\n- [x] When a name is reexported across crates, the source crate does not show where it was reexported as (often the more canonical location). #13414\r\n- [x] Lifetime parameters on functions can be lost. #14462\r\n- [x] Private implementors are showing up. #14586\r\n- [ ] Search results return more than one instance. #15723\r\n- [ ] Information about type aliases is lost across crates. #15823\r\n- [x] Methods can be missing from the search index. #20246\r\n- [x] Macro source looks... interesting. #21311\r\n- [ ] Incoming hyperlinks go to the source crate, not the \"canonical location\". #22083\r\n- [ ] Some `Self: Sized` bounds are lost. #24183\r\n- [x] Sometimes reexports just don't show at all #24296\r\n- [ ] Inclusion changes order of impl blocks #32290 \r\n- [x] Only type namespace shows up when processing re-export of private module #34843\r\n- [x] Re-exported enum variants don't show up in documentation #35488\r\n- [x] Many times re-exported type shows wrong documentation page #37608\r\n\r\nThis is just a list of the _current set_ of bugs, there have been countless others that have been fixed over time. Some of these are fundamental limitations, some of these are just bug fixes. I think that a huge part of \"truly fixing this\" will be tracking where the \"canonical location\" for a type is. For example rustdoc should understand that `Vec` traditionally comes from the standard library, not `libcollections`, and all incoming links, references, etc, should go there.\r\n\r\nI'll try to keep this updated over time!\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/24305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/24305/timeline", "performed_via_github_app": null, "state_reason": null}