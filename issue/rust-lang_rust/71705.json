{"url": "https://api.github.com/repos/rust-lang/rust/issues/71705", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71705/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71705/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71705/events", "html_url": "https://github.com/rust-lang/rust/issues/71705", "id": 609849265, "node_id": "MDU6SXNzdWU2MDk4NDkyNjU=", "number": 71705, "title": "slice -> array conversion function", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-30T11:28:31Z", "updated_at": "2020-04-30T11:39:07Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "See the discussion here:\r\nhttps://internals.rust-lang.org/t/more-about-slice-array-conversions/12251\r\n\r\nI suggest to add two related functions (mutable and not mutable versions) that allows to replace code similar to this:\r\n```\r\nrow.get_mut(8*x .. 8*x + 8).unwrap().try_into().unwrap()\r\n```\r\nIn a shorter, simpler and less bug-prone way, and with only one unwrap (in this specific case there's no need to specify the length as const generic value because it's inferred by the result. In other cases you specify it with a turbofish):\r\n```\r\nrow.array_from_mut(8 * x).unwrap()\r\n```\r\nThe two slice methods could be like (currently they can't be const fn):\r\n```\r\npub fn array_from<const LEN: usize>(&self, pos: usize) -> Option<&[T; LEN]> {\r\n    if let Some(piece) = self.get(pos .. pos + LEN) {\r\n        let temp_ptr: *const [T] = piece;\r\n        unsafe {\r\n            Some( std::mem::transmute(temp_ptr as *const [T; LEN]) )\r\n        }\r\n    } else {\r\n        None\r\n    }\r\n}\r\n\r\npub fn array_from_mut<const LEN: usize>(&mut self, pos: usize) -> Option<&mut [T; LEN]> {\r\n    if let Some(piece) = self.get_mut(pos .. pos + LEN) {\r\n        let temp_ptr: *mut [T] = piece;\r\n        unsafe {\r\n            Some( std::mem::transmute(temp_ptr as *mut [T; LEN]) )\r\n        }\r\n    } else {\r\n        None\r\n    }\r\n}\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71705/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71705/timeline", "performed_via_github_app": null, "state_reason": null}