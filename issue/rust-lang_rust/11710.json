{"url": "https://api.github.com/repos/rust-lang/rust/issues/11710", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/11710/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/11710/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/11710/events", "html_url": "https://github.com/rust-lang/rust/issues/11710", "id": 26048500, "node_id": "MDU6SXNzdWUyNjA0ODUwMA==", "number": 11710, "title": "Possible codegen bug flagged by valgrind", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-01-21T22:00:54Z", "updated_at": "2014-07-31T14:33:52Z", "closed_at": "2014-01-26T12:02:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm not sure if this is a false positive, a codegen bug, or an LLVM bug.\n\n``` rust\nfn main() { do spawn {} }\n```\n\nThat will generate a warning in valgrind about a jump based on an uninitialized value.\n\nI've simplified it to:\n\n``` rust\nuse std::util;                                                     \nenum Option<T> {                                                   \n  None,                                                            \n  Some(T),                                                         \n}                                                                  \n#[inline(never)]                                                   \nfn function(slot: &mut Option<proc(proc()) -> proc()>, f: proc()) {\n  let a = util::replace(slot, None);                               \n  let a = match a {                                                \n    Some(a) => bar(a, f),                                          \n    None => f,                                                     \n  };                                                               \n  foo(a);                                                          \n}                                                                  \n\n#[inline(never)]                                                   \nfn bar(f: proc(proc()) -> proc(), g: proc()) -> proc() {           \n  f(g)                                                             \n}                                                                  \n\n#[inline(never)]                                                   \nfn foo(_f: proc()) {                                               \n}                                                                  \n\n#[start]                                                           \nfn main(_: int, _: **u8) -> int {                                  \n  let mut slot = None;                                             \n  function(&mut slot, proc() {});                                  \n  0                                                                \n}                                                                  \n```\n\nI tried to make this test case have as little dependence on libstd as possible, but it didn't really help much with the output IR. The function `function` is the one that has the valgrind warning inside it, but I can't quite figure out where.\n\nThe output assembly is https://gist.github.com/alexcrichton/8549277 and the suspicious instruction is `0x405235`\n", "closed_by": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/11710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/11710/timeline", "performed_via_github_app": null, "state_reason": "completed"}