{"url": "https://api.github.com/repos/rust-lang/rust/issues/37468", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/37468/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/37468/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/37468/events", "html_url": "https://github.com/rust-lang/rust/issues/37468", "id": 186095385, "node_id": "MDU6SXNzdWUxODYwOTUzODU=", "number": 37468, "title": "Abysmal compile times for functions with many assertions (slow item-bodies checking and borrow checking).", "user": {"login": "koute", "id": 246574, "node_id": "MDQ6VXNlcjI0NjU3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/246574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koute", "html_url": "https://github.com/koute", "followers_url": "https://api.github.com/users/koute/followers", "following_url": "https://api.github.com/users/koute/following{/other_user}", "gists_url": "https://api.github.com/users/koute/gists{/gist_id}", "starred_url": "https://api.github.com/users/koute/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koute/subscriptions", "organizations_url": "https://api.github.com/users/koute/orgs", "repos_url": "https://api.github.com/users/koute/repos", "events_url": "https://api.github.com/users/koute/events{/privacy}", "received_events_url": "https://api.github.com/users/koute/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-10-29T19:09:20Z", "updated_at": "2018-04-21T09:46:07Z", "closed_at": "2018-04-21T09:46:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Please consider the following code:\n\n```\nfn main() {\n    let i = 0;\n    assert_eq!(i, 0);\n    assert_eq!(i, 0);\n    assert_eq!(i, 0);\n    // ... 997 more such asserts follow\n}\n```\n\nThis takes 1 minute and 34 seconds to compile on my machine.\n\nAnd here are the time passes:\n\n```\n$ rustc -Ztime-passes test.rs \ntime: 0.004; rss: 55MB  parsing\ntime: 0.000; rss: 55MB  recursion limit\ntime: 0.000; rss: 55MB  crate injection\ntime: 0.000; rss: 55MB  plugin loading\ntime: 0.000; rss: 55MB  plugin registration\ntime: 0.443; rss: 104MB expansion\ntime: 0.000; rss: 104MB maybe building test harness\ntime: 0.004; rss: 104MB maybe creating a macro crate\ntime: 0.000; rss: 104MB checking for inline asm in case the target doesn't support it\ntime: 0.007; rss: 104MB complete gated feature checking\ntime: 0.013; rss: 104MB early lint checks\ntime: 0.005; rss: 104MB AST validation\ntime: 0.037; rss: 106MB name resolution\ntime: 0.030; rss: 118MB lowering ast -> hir\ntime: 0.006; rss: 122MB indexing hir\ntime: 0.005; rss: 122MB attribute checking\ntime: 0.004; rss: 100MB language item collection\ntime: 0.009; rss: 100MB lifetime resolution\ntime: 0.000; rss: 100MB looking for entry point\ntime: 0.000; rss: 100MB looking for plugin registrar\ntime: 0.023; rss: 106MB region resolution\ntime: 0.004; rss: 106MB loop checking\ntime: 0.004; rss: 106MB static item recursion checking\ntime: 0.040; rss: 107MB compute_incremental_hashes_map\ntime: 0.000; rss: 107MB load_dep_graph\ntime: 0.006; rss: 109MB type collecting\ntime: 0.001; rss: 109MB variance inference\ntime: 0.007; rss: 108MB coherence checking\ntime: 0.021; rss: 108MB wf checking\ntime: 0.114; rss: 109MB item-types checking\ntime: 22.015; rss: 133MB    item-bodies checking\ntime: 0.000; rss: 133MB drop-impl checking\ntime: 0.086; rss: 134MB const checking\ntime: 0.015; rss: 134MB privacy checking\ntime: 0.005; rss: 134MB stability index\ntime: 0.009; rss: 134MB intrinsic checking\ntime: 0.009; rss: 134MB effect checking\ntime: 0.011; rss: 134MB match checking\ntime: 0.722; rss: 129MB liveness checking\ntime: 0.057; rss: 129MB rvalue checking\ntime: 0.190; rss: 176MB MIR dump\n  time: 0.019; rss: 178MB   SimplifyCfg\n  time: 0.034; rss: 179MB   QualifyAndPromoteConstants\n  time: 0.079; rss: 179MB   TypeckMir\n  time: 0.002; rss: 179MB   SimplifyBranches\n  time: 0.005; rss: 179MB   SimplifyCfg\ntime: 0.138; rss: 179MB MIR passes\ntime: 69.413; rss: 177MB    borrow checking\ntime: 0.000; rss: 177MB reachability checking\ntime: 0.022; rss: 177MB death checking\ntime: 0.016; rss: 177MB stability checking\ntime: 0.000; rss: 177MB unused lib feature checking\ntime: 0.098; rss: 180MB lint checking\ntime: 0.001; rss: 180MB resolving dependency formats\n  time: 0.002; rss: 180MB   NoLandingPads\n  time: 0.004; rss: 180MB   SimplifyCfg\n  time: 0.036; rss: 182MB   EraseRegions\n  time: 0.003; rss: 182MB   AddCallGuards\n  time: 0.136; rss: 183MB   ElaborateDrops\n  time: 0.001; rss: 183MB   NoLandingPads\n  time: 0.005; rss: 181MB   SimplifyCfg\n  time: 0.016; rss: 181MB   InstCombine\n  time: 0.002; rss: 181MB   Deaggregator\n  time: 0.001; rss: 181MB   CopyPropagation\n  time: 0.002; rss: 181MB   AddCallGuards\n  time: 0.001; rss: 181MB   PreTrans\ntime: 0.209; rss: 181MB Prepare MIR codegen passes\n  time: 0.000; rss: 181MB   write metadata\n  time: 0.028; rss: 182MB   translation item collection\n  time: 0.004; rss: 184MB   codegen unit partitioning\n  time: 0.002; rss: 195MB   internalize symbols\ntime: 0.294; rss: 154MB translation\ntime: 0.000; rss: 154MB assert dep graph\ntime: 0.000; rss: 154MB serialize dep graph\n  time: 0.037; rss: 100MB   llvm function passes [0]\n  time: 0.009; rss: 98MB    llvm module passes [0]\n  time: 0.385; rss: 102MB   codegen passes [0]\n  time: 0.001; rss: 102MB   codegen passes [0]\ntime: 0.433; rss: 102MB LLVM passes\ntime: 0.000; rss: 102MB serialize work products\n  time: 0.178; rss: 87MB    running linker\ntime: 0.180; rss: 87MB  linking\n```\n\nI've hit this when autogenerating tests with another program, hence the huge amount of assertions.\n\nIf I do something like this:\n\n```\nfn assert_eq(a: usize, b: usize) {\n    assert_eq!(a, b);\n}\n```\n\nand replace the `assert_eq!` with `assert_eq` then it compiles fast again.\n\n```\nrustc 1.14.0-nightly (3f4408347 2016-10-27)\nbinary: rustc\ncommit-hash: 3f4408347d2109803edbf53c89c8bce575de4b67\ncommit-date: 2016-10-27\nhost: x86_64-unknown-linux-gnu\nrelease: 1.14.0-nightly\nLLVM version: 3.9\n```\n\nCompile times with other rustc versions:\n\n1.14.0-nightly - 1m34s\n1.11.0 - 1m44s\n1.10.0 - 1m49s\n1.9.0 - 2m3s\n1.8.0 - 2m5s\n", "closed_by": {"login": "ishitatsuyuki", "id": 12389383, "node_id": "MDQ6VXNlcjEyMzg5Mzgz", "avatar_url": "https://avatars.githubusercontent.com/u/12389383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishitatsuyuki", "html_url": "https://github.com/ishitatsuyuki", "followers_url": "https://api.github.com/users/ishitatsuyuki/followers", "following_url": "https://api.github.com/users/ishitatsuyuki/following{/other_user}", "gists_url": "https://api.github.com/users/ishitatsuyuki/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishitatsuyuki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishitatsuyuki/subscriptions", "organizations_url": "https://api.github.com/users/ishitatsuyuki/orgs", "repos_url": "https://api.github.com/users/ishitatsuyuki/repos", "events_url": "https://api.github.com/users/ishitatsuyuki/events{/privacy}", "received_events_url": "https://api.github.com/users/ishitatsuyuki/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/37468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/37468/timeline", "performed_via_github_app": null, "state_reason": "completed"}