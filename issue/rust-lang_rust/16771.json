{"url": "https://api.github.com/repos/rust-lang/rust/issues/16771", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16771/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16771/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16771/events", "html_url": "https://github.com/rust-lang/rust/issues/16771", "id": 41220881, "node_id": "MDU6SXNzdWU0MTIyMDg4MQ==", "number": 16771, "title": "deriving PartialEq generates unused match", "user": {"login": "seanmonstar", "id": 51479, "node_id": "MDQ6VXNlcjUxNDc5", "avatar_url": "https://avatars.githubusercontent.com/u/51479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seanmonstar", "html_url": "https://github.com/seanmonstar", "followers_url": "https://api.github.com/users/seanmonstar/followers", "following_url": "https://api.github.com/users/seanmonstar/following{/other_user}", "gists_url": "https://api.github.com/users/seanmonstar/gists{/gist_id}", "starred_url": "https://api.github.com/users/seanmonstar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seanmonstar/subscriptions", "organizations_url": "https://api.github.com/users/seanmonstar/orgs", "repos_url": "https://api.github.com/users/seanmonstar/repos", "events_url": "https://api.github.com/users/seanmonstar/events{/privacy}", "received_events_url": "https://api.github.com/users/seanmonstar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-26T20:54:55Z", "updated_at": "2015-03-03T16:59:00Z", "closed_at": "2015-03-03T16:59:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` rust\n#[deriving(PartialEq)]\npub enum Foo {\n  Bar,\n  Baz,\n  Quux\n}\n```\n\nGenerates:\n\n``` rust\n// rustc --pretty expanded test.rs\n#![feature(phase)]\n#![no_std]\n#![feature(globs)]\n#[phase(plugin, link)]\nextern crate std = \"std\";\nextern crate rt = \"native\";\n#[prelude_import]\nuse std::prelude::*;\npub enum Foo { Bar, Baz, Quux, }\n#[automatically_derived]\nimpl ::std::cmp::PartialEq for Foo {\n    #[inline]\n    fn eq(&self, __arg_0: &Foo) -> ::bool {\n        match (&*self, &*__arg_0) {\n            (&Bar, &Bar) => true,\n            (&Baz, &Baz) => true,\n            (&Quux, &Quux) => true,\n            _ => {\n                let __self_vi =\n                    match *self {\n                        Bar(..) => 0u,\n                        Baz(..) => 1u,\n                        Quux(..) => 2u,\n                    };\n                let __arg_1_vi =\n                    match *__arg_0 {\n                        Bar(..) => 0u,\n                        Baz(..) => 1u,\n                        Quux(..) => 2u,\n                    };\n                false\n            }\n        }\n    }\n    #[inline]\n    fn ne(&self, __arg_0: &Foo) -> ::bool {\n        match (&*self, &*__arg_0) {\n            (&Bar, &Bar) => false,\n            (&Baz, &Baz) => false,\n            (&Quux, &Quux) => false,\n            _ => {\n                let __self_vi =\n                    match *self {\n                        Bar(..) => 0u,\n                        Baz(..) => 1u,\n                        Quux(..) => 2u,\n                    };\n                let __arg_1_vi =\n                    match *__arg_0 {\n                        Bar(..) => 0u,\n                        Baz(..) => 1u,\n                        Quux(..) => 2u,\n                    };\n                true\n            }\n        }\n    }\n}\n```\n\nThe following code copied from above is unused:\n\n``` rust\nlet __self_vi =\n                    match *self {\n                        Bar(..) => 0u,\n                        Baz(..) => 1u,\n                        Quux(..) => 2u,\n                    };\n                let __arg_1_vi =\n                    match *__arg_0 {\n                        Bar(..) => 0u,\n                        Baz(..) => 1u,\n                        Quux(..) => 2u,\n                    };\n```\n", "closed_by": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16771/timeline", "performed_via_github_app": null, "state_reason": "completed"}