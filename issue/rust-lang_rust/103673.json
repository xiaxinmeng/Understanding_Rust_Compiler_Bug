{"url": "https://api.github.com/repos/rust-lang/rust/issues/103673", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103673/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103673/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103673/events", "html_url": "https://github.com/rust-lang/rust/issues/103673", "id": 1426687793, "node_id": "I_kwDOAAsO6M5VCYcx", "number": 103673, "title": "Android NDK r25b changes will break developers using r22b or older", "user": {"login": "alex-pinkus", "id": 62194897, "node_id": "MDQ6VXNlcjYyMTk0ODk3", "avatar_url": "https://avatars.githubusercontent.com/u/62194897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-pinkus", "html_url": "https://github.com/alex-pinkus", "followers_url": "https://api.github.com/users/alex-pinkus/followers", "following_url": "https://api.github.com/users/alex-pinkus/following{/other_user}", "gists_url": "https://api.github.com/users/alex-pinkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-pinkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-pinkus/subscriptions", "organizations_url": "https://api.github.com/users/alex-pinkus/orgs", "repos_url": "https://api.github.com/users/alex-pinkus/repos", "events_url": "https://api.github.com/users/alex-pinkus/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-pinkus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 262252628, "node_id": "MDU6TGFiZWwyNjIyNTI2Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-beta", "name": "regression-from-stable-to-beta", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to beta."}], "state": "closed", "locked": false, "assignee": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/98", "html_url": "https://github.com/rust-lang/rust/milestone/98", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/98/labels", "id": 8433853, "node_id": "MI_kwDOAAsO6M4AgLC9", "number": 98, "title": "1.66.0", "description": null, "creator": {"login": "rustbot", "id": 47979223, "node_id": "MDQ6VXNlcjQ3OTc5MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47979223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustbot", "html_url": "https://github.com/rustbot", "followers_url": "https://api.github.com/users/rustbot/followers", "following_url": "https://api.github.com/users/rustbot/following{/other_user}", "gists_url": "https://api.github.com/users/rustbot/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustbot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustbot/subscriptions", "organizations_url": "https://api.github.com/users/rustbot/orgs", "repos_url": "https://api.github.com/users/rustbot/repos", "events_url": "https://api.github.com/users/rustbot/events{/privacy}", "received_events_url": "https://api.github.com/users/rustbot/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 895, "state": "closed", "created_at": "2022-09-17T19:34:06Z", "updated_at": "2023-03-02T23:44:32Z", "due_on": null, "closed_at": "2022-12-21T14:13:48Z"}, "comments": 52, "created_at": "2022-10-28T05:13:48Z", "updated_at": "2023-03-02T23:44:32Z", "closed_at": "2023-03-02T23:44:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Discussion continued from #102332.\n\n## Background\nChanges that were merged in #102332, slated for 1.66.0, will update the CI build scripts so that all Android targets[^1] use the `r25b` release[^2] of the Android NDK to build Rust binaries, moving from `r15c`. The `r25b` release is the newest version of the NDK at time of writing (Oct 2022), and is a Long Term Support release (LTS)[^3]. `r15c` predates LTS designation, is over five years old, and is past the end of its support life. Rust's Android platform support document[^4], merged on 24 September 2022, indicates support for the most recent LTS release of the NDK, so the changes in #102332 are in line with that document.\n\nCurrently, Rust developers who wish to use an `android-ndk` toolchain newer than `r22b` must use build-time hacks to do so. This is because the Rust standard library uses `libgcc` for its unwinder implementation on Android, but `libgcc` is not included in new versions of the NDK. When using `r23b` or newer in a Rust library, a developer will see `ld: error: unable to find library -lgcc`. #85806 added logic to _select between `libgcc` or `libunwind`_, but this logic runs when building Rust itself, not when compiling the downstream application, so it is mainly useful with the nightly flag `-Z build-std`. Since older versions of the NDK do not have `libunwind`, and newer versions do not have `libgcc`, support for `r23` (and newer) is mutually exclusive from support for `r22` (and older), unless a developer applies a manual workaround[^5]. This workaround, for building `r25b`, with a binary release that uses `libgcc`[^6], involves a fake `libgcc.a` containing `INPUT(-lunwind)`. One common form of this workaround[^7] is used in the `ring` crate and referenced from setup scripts for `flutter_rust_bridge`; a slightly modified form can be found in `cargo-apk`.\n\n## Problem\nWhen the updated CI script lands in a stable release, the Rust binary releases for Android targets will compute `has_unwind=true`, and link against `libunwind` instead of `libgcc`, causing every project that builds using NDK version `r22b` or older to fail with the message `error: cannot find -lunwind`. **Because building with `r23b` or newer requires either nightly Rust or a build-script workaround, it is likely that most Android projects using Rust today are using `r22b` or older and will therefore be broken by this change**. One comment notes that Firefox will be broken[^8]; a quick GitHub search also uncovers libraries like [`openssl-src`](https://github.com/alexcrichton/openssl-src-rs/blob/main/ci/docker/aarch64-linux-android/Dockerfile#L13) among others that build using older NDK versions on CI.\n\nDepending on the version that a project must be upgraded _from_, going to `r23b` can be a non-trivial effort. The process for obtaining a toolchain changed in `r19`[^9], so a developer must rewrite their CI compilation scripts. One commenter noted seeing compilation issues in a codebase containing C++ headers[^10], although they were able to resolve the issues. These are not reasons to _never upgrade_, but they indicate that a surprise NDK upgrade may be unwelcome work requiring more than just a version number bump.\n\n## Options\nCurrently, an undetermined (but probably large) subset of the Android Rust ecosystem will find itself broken on December 15th, when Rust version 1.66.0 comes out. What should be done about it? Some ideas, in no particular order:\n\n### 1. Roll back to version r15c by reverting the change\nReverting the change is the simplest option, and buys an indefinite amount of time to define a more graceful deprecation strategy. Doing so, however, prolongs the usage of a build tool that's well past end of life, and means that any features introduced in the last 5 years aren't available to Rust developers.\n\n### 2. Downgrade to a newer toolchain that is older than `r23`\nWith a net-new change to use `r21e` (newest compatible previous LTS version, released January 2021) or `r22b` (released March 2021)[^11], the binaries produced by CI could take advantage of a significantly newer toolchain and retain compatibility with older toolchains downstream. A Rust binary compiled using `r22b` can be linked into an application using a toolchain as old as `r10e` (and likely older, but I didn't have an older NDK at hand).\n\nHowever, both `r21e` and `r22b` are still considered obsolete and unsupported. Upgrading to one of these versions means that breakage will still occur later, when we do decide to upgrade.\n\n### 3. Warn users about breakage over a longer time period\nOn the `r25b` pull request, @jonhoo mentioned that a blog post would help alert users to the change. @jonhoo compared this to the change in minimum linux-gnu versions that happened in August[^12] and the accompanying announcement[^13]. That change was pre-warned over several releases; in order to take a similar action here, the `r25b` PR would need to be reverted. While this impacts just the Android targets, rather than tier-1 linux targets as the glibc bump did, the impact on those developers is much more severe. By raising awareness of the issue and defining a timeline for the change, the blog post would help to reduce impact and limit unpleasant surprises.\n\n### 4. Make no change, but still warn users about the looming breakage\nEven if no action is taken to delay this change, a blog post will be a prudent way to alert developers that the change is happening in six weeks. If it is safe to recommend the `INPUT(-lunwind)` workaround for broad use, the blog post could recommend immediate migration to `r23` or newer before the change hits stable.\n\n----\n\n## Conclusion\nAs time marches on, developer tools evolve, and long-term support versions fade into unsupported obsolescence. It's natural and expected for Rust to drop support for older releases of the Android NDK, as with any other toolchain or environment that has passed end of life.\n\nHowever, the current implementation will require a big-bang migration to `r23+` for any project wishing to adopt `1.66.0`. Some developers may have adopted `r23`, if they are attentive to Rust community workarounds, or brave enough to run their CI only on nightly. **It's likely that many have not.** In the interest of preserving existing project compatibility, it may be prudent to attempt a graceful migration to `libunwind` wherever possible, which can be done after still upgrading to a version that's newer than the current one. By giving developers ample warning that allows them to adopt today's workaround, the Rust project can keep the ecosystem current without causing sudden surprises.\n\n[^1]: Android targets: `arm-linux-androideabi`, `armv7-linux-androideabi`, `thumbv7neon-linux-androideabi-ndk`, `i686-linux-android-ndk`, `aarch64-linux-android`, `x86_64-linux-android`\n[^2]: Android NDK r25 [revision history](https://developer.android.com/ndk/downloads/revision_history).\n[^3]: NDK [release process](https://github.com/android/ndk/wiki/NDK-Release-Process), detailing the implications of LTS releases.\n[^4]: [Platform support](https://github.com/rust-lang/rust/blob/master/src/doc/rustc/src/platform-support/android.md) for `*-linux-android` and `*-linux-androideabi` and PR: #101780\n[^5]: `libunwind` availability in the Android NDK:  <img width=\"631\" alt=\"Screen Shot 2022-10-27 at 9 18 15 PM\" src=\"https://user-images.githubusercontent.com/62194897/198501597-45577e0b-1a71-49e3-bbc5-7341336e96ab.png\">\n[^6]: Apparent [first attestation](https://github.com/termux/termux-packages/pull/7339#issuecomment-921581430) of the `INPUT(-lunwind)` workaround\n[^7]: `echo \"INPUT(-lunwind)\"` [search results on GitHub](https://github.com/search?q=%22echo+%22INPUT%28-lunwind%29%22%22&type=code)\n[^8]: [Comment](https://github.com/rust-lang/rust/pull/102332#issuecomment-1291687111) from @glandium indicating Firefox breakage\n[^9]: [Standalone toolchain (deprecated)](https://developer.android.com/ndk/guides/standalone_toolchain) documentation\n[^10]: [Comment](https://github.com/termux/termux-packages/pull/7339#issuecomment-950194409) reporting compilation errors caused by the upgrade\n[^11]: In order to use `r22b`, the logic in [`library/unwind/build.rs`](https://github.com/rust-lang/rust/blob/master/library/unwind/build.rs#L19) will also need to prefer `libgcc` over `libunwind`, since `r22b` includes `libunwind.a` within the C++ STL in `arm-linux-androideabi` only, for reasons that are not clear.\n[^12]: https://github.com/rust-lang/rust/pull/95026\n[^13]: [Increasing the glibc and Linux kernel requirements](https://blog.rust-lang.org/2022/08/01/Increasing-glibc-kernel-requirements.html)\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"pnkfelix\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103673/reactions", "total_count": 8, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 8, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103673/timeline", "performed_via_github_app": null, "state_reason": "completed"}