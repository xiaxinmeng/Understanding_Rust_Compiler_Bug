{"url": "https://api.github.com/repos/rust-lang/rust/issues/78722", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78722/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78722/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78722/events", "html_url": "https://github.com/rust-lang/rust/issues/78722", "id": 735915314, "node_id": "MDU6SXNzdWU3MzU5MTUzMTQ=", "number": 78722, "title": "ICE: type_alias_impl_trait + impl_trait_in_bindings 'called `Option::unwrap()` on a `None` value'", "user": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 1472505091, "node_id": "MDU6TGFiZWwxNDcyNTA1MDkx", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-impl_trait_in_bindings", "name": "F-impl_trait_in_bindings", "color": "f9c0cc", "default": false, "description": "`#![feature(impl_trait_in_bindings)]`"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-11-04T08:29:01Z", "updated_at": "2020-11-16T15:34:47Z", "closed_at": "2020-11-16T15:34:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(type_alias_impl_trait)]\r\n#![feature(impl_trait_in_bindings)]\r\n\r\ntype F = impl core::future::Future<Output = u8>;\r\n\r\nstruct Bug {\r\n    V1: [(); {\r\n        fn concrete_use() -> F {\r\n            async {}\r\n        }\r\n        let f: F = async { 1 };\r\n        1\r\n    }],\r\n}\r\n\r\nfn main() {\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.49.0-nightly (338f939a8 2020-11-02)\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler/rustc_middle/src/ty/mod.rs:2976:62\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler/rustc_middle/src/ty/mod.rs:2976:62\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/338f939a8d77061896cd0a1ca87a2c6d1f4ec359/library/std/src/panicking.rs:495:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/338f939a8d77061896cd0a1ca87a2c6d1f4ec359/library/core/src/panicking.rs:92:14\r\n   2: core::panicking::panic\r\n             at /rustc/338f939a8d77061896cd0a1ca87a2c6d1f4ec359/library/core/src/panicking.rs:50:5\r\n   3: rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt>::layout_raw_uncached\r\n   4: rustc_middle::ty::layout::layout_raw\r\n   5: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::layout_raw>::compute\r\n   6: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n   7: rustc_data_structures::stack::ensure_sufficient_stack\r\n   8: rustc_query_system::query::plumbing::get_query_impl\r\n   9: <rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt> as rustc_target::abi::LayoutOf>::layout_of\r\n  10: <alloc::vec::Vec<T> as alloc::vec::SpecFromIter<T,I>>::from_iter\r\n  11: <core::iter::adapters::ResultShunt<I,E> as core::iter::traits::iterator::Iterator>::next\r\n  12: <alloc::vec::Vec<T> as alloc::vec::SpecFromIter<T,I>>::from_iter\r\n  13: rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt>::layout_raw_uncached\r\n  14: rustc_middle::ty::layout::layout_raw\r\n  15: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::layout_raw>::compute\r\n  16: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  17: rustc_data_structures::stack::ensure_sufficient_stack\r\n  18: rustc_query_system::query::plumbing::get_query_impl\r\n  19: <rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::query::TyCtxtAt> as rustc_target::abi::LayoutOf>::layout_of\r\n  20: rustc_mir::interpret::eval_context::InterpCx<M>::layout_of_local\r\n  21: rustc_mir::interpret::place::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_place\r\n  22: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::run\r\n  23: rustc_mir::const_eval::eval_queries::eval_to_allocation_raw_provider\r\n  24: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_allocation_raw>::compute\r\n  25: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  26: rustc_data_structures::stack::ensure_sufficient_stack\r\n  27: rustc_query_system::query::plumbing::get_query_impl\r\n  28: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  29: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_const_value_raw>::compute\r\n  30: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  31: rustc_data_structures::stack::ensure_sufficient_stack\r\n  32: rustc_query_system::query::plumbing::get_query_impl\r\n  33: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  34: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_const_value_raw>::compute\r\n  35: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  36: rustc_data_structures::stack::ensure_sufficient_stack\r\n  37: rustc_query_system::query::plumbing::get_query_impl\r\n  38: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_global_id\r\n  39: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_resolve\r\n  40: rustc_middle::ty::consts::Const::eval\r\n  41: rustc_middle::ty::structural_impls::<impl rustc_middle::ty::fold::TypeFoldable for &rustc_middle::ty::TyS>::super_fold_with\r\n  42: <rustc_trait_selection::traits::project::AssocTypeNormalizer as rustc_middle::ty::fold::TypeFolder>::fold_ty\r\n  43: rustc_data_structures::stack::ensure_sufficient_stack\r\n  44: rustc_trait_selection::traits::project::normalize\r\n  45: <rustc_infer::infer::InferCtxt as rustc_trait_selection::infer::InferCtxtExt>::partially_normalize_associated_types_in\r\n  46: rustc_typeck::check::inherited::Inherited::normalize_associated_types_in\r\n  47: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold\r\n  48: rustc_infer::infer::InferCtxtBuilder::enter\r\n  49: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  50: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::check_item_well_formed>::compute\r\n  51: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  52: rustc_data_structures::stack::ensure_sufficient_stack\r\n  53: rustc_query_system::query::plumbing::get_query_impl\r\n  54: rustc_query_system::query::plumbing::ensure_query_impl\r\n  55: rustc_data_structures::sync::par_for_each_in\r\n  56: rustc_hir::hir::Crate::par_visit_all_item_likes\r\n  57: rustc_session::session::Session::track_errors\r\n  58: rustc_typeck::check_crate\r\n  59: rustc_interface::passes::analysis\r\n  60: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  61: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  62: rustc_data_structures::stack::ensure_sufficient_stack\r\n  63: rustc_query_system::query::plumbing::get_query_impl\r\n  64: rustc_interface::passes::QueryContext::enter\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.49.0-nightly (338f939a8 2020-11-02) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [layout_raw] computing layout of `[static generator@src/main.rs:9:19: 9:21]`\r\n#1 [layout_raw] computing layout of `std::future::from_generator::GenFuture<[static generator@src/main.rs:9:19: 9:21]>`\r\n#2 [eval_to_allocation_raw] const-evaluating + checking `Bug::V1::{constant#0}`\r\n#3 [eval_to_const_value_raw] simplifying constant for the type system `Bug::V1::{constant#0}`\r\n#4 [eval_to_const_value_raw] simplifying constant for the type system `Bug::V1::{constant#0}`\r\n#5 [check_item_well_formed] checking that `Bug` is well-formed\r\n#6 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to 3 previous errors; 1 warning emitted\r\n\r\nSome errors have detailed explanations: E0271, E0493.\r\nFor more information about an error, try `rustc --explain E0271`.\r\nerror: could not compile `playground`\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78722/timeline", "performed_via_github_app": null, "state_reason": "completed"}