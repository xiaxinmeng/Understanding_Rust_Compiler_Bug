{"url": "https://api.github.com/repos/rust-lang/rust/issues/92466", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92466/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92466/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92466/events", "html_url": "https://github.com/rust-lang/rust/issues/92466", "id": 1091686055, "node_id": "I_kwDOAAsO6M5BEc6n", "number": 92466, "title": "Uses non-existent FreeBSD 11 syscall ABI for FreeBSD RISC-V", "user": {"login": "jrtc27", "id": 816232, "node_id": "MDQ6VXNlcjgxNjIzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/816232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrtc27", "html_url": "https://github.com/jrtc27", "followers_url": "https://api.github.com/users/jrtc27/followers", "following_url": "https://api.github.com/users/jrtc27/following{/other_user}", "gists_url": "https://api.github.com/users/jrtc27/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrtc27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrtc27/subscriptions", "organizations_url": "https://api.github.com/users/jrtc27/orgs", "repos_url": "https://api.github.com/users/jrtc27/repos", "events_url": "https://api.github.com/users/jrtc27/events{/privacy}", "received_events_url": "https://api.github.com/users/jrtc27/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311417404, "node_id": "MDU6TGFiZWwzMTE0MTc0MDQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-freebsd", "name": "O-freebsd", "color": "6e6ec0", "default": false, "description": "Operating system: FreeBSD"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1210355734, "node_id": "MDU6TGFiZWwxMjEwMzU1NzM0", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-riscv", "name": "O-riscv", "color": "6e6ec0", "default": false, "description": "Target: RISC-V architecture"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-12-31T23:14:59Z", "updated_at": "2022-06-09T20:51:54Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "All FreeBSD targets are currently hard-coded to use the FreeBSD 11 syscall ABI. For most targets this is \"fine\", since the default kernel configs include COMPAT_FREEBSD11. However, the current RISC-V FreeBSD port post-dates FreeBSD 11 (see https://www.freebsd.org/cgi/man.cgi?query=arch), so the syscalls that were removed in FreeBSD 12 never existed for RISC-V, and so the kernel does not, and should not (as one of the primary RISC-V developers I will veto any such change), enable COMPAT_FREEBSD11. Any attempt to use them will deliver a fatal-by-default SIGSYS to the process, and given FreeBSD 11->12 was the ino64 transition, this affects basically anything you could actually want to do.\r\n\r\nAs well as multiple places hard-coding the FreeBSD ABI version, this information is not communicated to other crates. Notably FreeBSD 12 added the ext field to struct kevent, which breaks mio's kqueue.rs, as I discovered when I hacked up rustc and libc to hard-code FreeBSD 12 for RISC-V (and thus ended up with https://reviews.freebsd.org/P525 to make it work). Ideally this information would be communicated to build.rs somehow, if not available as default cfg predicates.\r\n\r\nThis was all totally glossed over when the changes were upstreamed, despite my cries within FreeBSD to engage with you all upstream and sort this mess out. I still don't have time to do that engaging myself, but at least this makes you aware of the actual problem. Maybe you have ideas for a decent way to communicate the FreeBSD version to crates so we can at least just hard-code RISC-V as minimum FreeBSD 12 in rustc and have that propagate everywhere; it's not ideal, but at least then it'd be centralised.\r\n\r\nFor what it's worth, https://reviews.freebsd.org/P522, https://reviews.freebsd.org/P523, https://reviews.freebsd.org/P524 and https://reviews.freebsd.org/P525 is the complete set of patches I hacked up to get a working rustc+cargo capable of compiling a hello world natively on a stock RISC-V GENERIC kernel, that then got picked up by others and had the FreeBSD 12 ABI parts dropped from.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92466/timeline", "performed_via_github_app": null, "state_reason": null}