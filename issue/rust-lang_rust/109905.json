{"url": "https://api.github.com/repos/rust-lang/rust/issues/109905", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/109905/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/109905/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/109905/events", "html_url": "https://github.com/rust-lang/rust/issues/109905", "id": 1652653425, "node_id": "I_kwDOAAsO6M5igX1x", "number": 109905, "title": "cannot infer type of the type parameter `'a` declared on the trait `Baz`", "user": {"login": "JustinLovinger", "id": 7183441, "node_id": "MDQ6VXNlcjcxODM0NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/7183441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JustinLovinger", "html_url": "https://github.com/JustinLovinger", "followers_url": "https://api.github.com/users/JustinLovinger/followers", "following_url": "https://api.github.com/users/JustinLovinger/following{/other_user}", "gists_url": "https://api.github.com/users/JustinLovinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/JustinLovinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JustinLovinger/subscriptions", "organizations_url": "https://api.github.com/users/JustinLovinger/orgs", "repos_url": "https://api.github.com/users/JustinLovinger/repos", "events_url": "https://api.github.com/users/JustinLovinger/events{/privacy}", "received_events_url": "https://api.github.com/users/JustinLovinger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1624891239, "node_id": "MDU6TGFiZWwxNjI0ODkxMjM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-incorrect", "name": "D-incorrect", "color": "c9f7a3", "default": false, "description": "A diagnostic that is giving misleading or incorrect information"}], "state": "closed", "locked": false, "assignee": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-04-03T19:34:07Z", "updated_at": "2023-04-07T02:23:11Z", "closed_at": "2023-04-07T02:23:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\nhow to create smaller examples.\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\n-->\n\n### Code\n\n```Rust\nuse std::{borrow::Borrow, marker::PhantomData};\n\npub struct Foo<Borrowed, B> {\n    borrowed: PhantomData<Borrowed>,\n    y: B,\n}\n\npub struct Bar<A, Borrowed, B, C> {\n    x: PhantomData<A>,\n    borrowed: PhantomData<Borrowed>,\n    y: PhantomData<B>,\n    z: C,\n}\n\npub trait Baz<'a, D, B> {\n    fn baz(&'a self) -> &'a B;\n}\n\nimpl<'a, A, Borrowed, B, C> Baz<'a, Bar<A, Borrowed, B, C>, Borrowed> for C\nwhere\n    B: Borrow<Borrowed> + 'a,\n    C: Borrow<Foo<Borrowed, B>>,\n{\n    fn baz(&'a self) -> &'a Borrowed {\n        self.borrow().y.borrow()\n    }\n}\n\n// fn foobar<Borrowed, B>(foo: &Foo<Borrowed, B>)\n// where\n//     B: Borrow<Borrowed>,\n// {\n//     foo.baz();\n// }\n\nfn foobar<'a, Borrowed, B>(foo: &'a Foo<Borrowed, B>)\nwhere\n    B: Borrow<Borrowed>,\n{\n    <Foo<Borrowed, B> as Baz<'a, _, _>>::baz(foo);\n}\n\n```\n\n\n### Meta\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\n\n`rustc --version --verbose`:\n```\nrustc 1.66.1 (90743e729 2023-01-10)\nbinary: rustc\ncommit-hash: 90743e7298aca107ddaa0c202a4d3604e29bfeb6\ncommit-date: 2023-01-10\nhost: x86_64-unknown-linux-gnu\nrelease: 1.66.1\nLLVM version: 15.0.2\n```\n\nThis was also tried on with `1.70.0-nightly (2023-04-02 3a8a131e9509c478ece1)` on Rust Playground, with the same error.\n\n### Error output\n\n```\nerror[E0282]: type annotations needed\n  --> src/lib.rs:40:5\n   |\n40 |     <Foo<Borrowed, B> as Baz<'a, _, _>>::baz(foo);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `'a` declared on the trait `Baz`\n```\n\n<!--\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\n-->\n<details><summary><strong>Backtrace</strong></summary>\n<p>\n\n```\nerror[E0282]: type annotations needed\n  --> src/lib.rs:40:5\n   |\n40 |     <Foo<Borrowed, B> as Baz<'a, _, _>>::baz(foo);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `'a` declared on the trait `Baz`\n```\n\n</p>\n</details>\n\n### Note\n\nWithout the fully qualified path, see commented code, the error is `error[E0282]: type annotations needed`.\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"fmease\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/109905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/109905/timeline", "performed_via_github_app": null, "state_reason": "completed"}