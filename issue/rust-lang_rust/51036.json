{"url": "https://api.github.com/repos/rust-lang/rust/issues/51036", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51036/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51036/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51036/events", "html_url": "https://github.com/rust-lang/rust/issues/51036", "id": 326167743, "node_id": "MDU6SXNzdWUzMjYxNjc3NDM=", "number": 51036, "title": "NLL lets borrowck observe drop order for `let (a, b);`", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 867466592, "node_id": "MDU6TGFiZWw4Njc0NjY1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-sound", "name": "NLL-sound", "color": "f799ea", "default": false, "description": "Working towards the \"invalid code does not compile\" goal"}, {"id": 923282386, "node_id": "MDU6TGFiZWw5MjMyODIzODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/finished-final-comment-period", "name": "finished-final-comment-period", "color": "f9e189", "default": false, "description": "The final comment period is finished for this PR / Issue."}, {"id": 943968375, "node_id": "MDU6TGFiZWw5NDM5NjgzNzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/disposition-close", "name": "disposition-close", "color": "dd0000", "default": false, "description": "This PR / issue is in PFCP or FCP with a disposition to close it."}], "state": "closed", "locked": false, "assignee": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/55", "html_url": "https://github.com/rust-lang/rust/milestone/55", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/55/labels", "id": 3463307, "node_id": "MDk6TWlsZXN0b25lMzQ2MzMwNw==", "number": 55, "title": "Rust 2018 Release", "description": "See https://internals.rust-lang.org/t/rust-2018-the-home-stretch/7810", "creator": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 66, "state": "closed", "created_at": "2018-06-29T18:51:49Z", "updated_at": "2018-12-08T10:44:16Z", "due_on": "2018-12-06T08:00:00Z", "closed_at": "2018-12-08T10:44:16Z"}, "comments": 10, "created_at": "2018-05-24T15:12:26Z", "updated_at": "2018-07-23T13:30:43Z", "closed_at": "2018-07-23T13:30:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "NLL is built on MIR-borrowck. MIR-borrowck operates on the control-flow graph encoded in the MIR.\r\n\r\nWe didn't (and still do not) want to let borrowck depend on details of how we choose to codegen the MIR from a given AST (in particular for `match` expressions), and so we put some effort into trying to obscure those details from the view of MIR-borrowck.\r\n\r\nBut there was a case that we (potentially) overlooked: MIR encodes the order in which the variables `a` and `b` are dropped in `let (a, b);`, and now NLL/MIR-borrowck takes advantage of that knowledge when checking code.\r\n * I say \"potentially\" here because, as @nikomatsakis pointed out to me, the dynamic drop order was of course always *observable* (unlike say the particular details of the order in which we consider match arms when compiling `match`). So ths arguably does not fall into the same bucket as the previous motivation for `FalseEdges` in the MIR.\r\n\r\nIn particular, in the following [example](https://play.rust-lang.org/?gist=95e23f7283c6c555186e7bc5a44e92c3&version=nightly&mode=debug) (adapted from [ui/dropck-eyepatch.rs](https://github.com/rust-lang/rust/blob/master/src/test/ui/dropck/dropck-eyepatch.rs)):\r\n\r\n```rust\r\n#![feature(nll)]\r\n\r\n// The types in this file follow a pattern, D{t,r}, where:\r\n//\r\n// - D means \"I implement Drop\"\r\n//\r\n// - t suffix is used when the first generic is a type\r\n//\r\n// - r suffix is used when the first generic is a lifetime.\r\n\r\nuse std::fmt;\r\n\r\nstruct Dt<A: fmt::Debug>(&'static str, A);\r\nstruct Dr<'a, B:'a+fmt::Debug>(&'static str, &'a B);\r\n\r\nimpl<A: fmt::Debug> Drop for Dt<A> {\r\n    fn drop(&mut self) { println!(\"drop {} {:?}\", self.0, self.1); }\r\n}\r\nimpl<'a, B: fmt::Debug> Drop for Dr<'a, B> {\r\n    fn drop(&mut self) { println!(\"drop {} {:?}\", self.0, self.1); }\r\n}\r\n\r\nfn main() {\r\n    use std::cell::Cell;\r\n    let c_long;\r\n    let (c, mut dt, mut dr): (Cell<_>, Dt<_>, Dr<_>);\r\n    c_long = Cell::new(1);\r\n    c = Cell::new(1);\r\n\r\n    // No error: sufficiently long-lived state can be referenced in dtors\r\n    dt = Dt(\"dt\", &c_long);\r\n    dr = Dr(\"dr\", &c_long);\r\n    println!(\"{:?}\", (dt.0, dr.0));\r\n    \r\n    // Error: destructor order imprecisely modelled\r\n    dt = Dt(\"dt\", &c);\r\n    //~^ ERROR `c` does not live long enough\r\n    dr = Dr(\"dr\", &c);\r\n    //~^ ERROR `c` does not live long enough\r\n    println!(\"{:?}\", (dt.0, dr.0));\r\n}\r\n```\r\n\r\nUsing AST-borrowck (by commenting out the `#![feature(nll)]` at the top) emits the following errors:\r\n\r\n```\r\nerror[E0597]: `c` does not live long enough\r\n  --> src/main.rs:36:20\r\n   |\r\n36 |     dt = Dt(\"dt\", &c);\r\n   |                    ^ borrowed value does not live long enough\r\n...\r\n41 | }\r\n   | - `c` dropped here while still borrowed\r\n   |\r\n   = note: values in a scope are dropped in the opposite order they are created\r\n\r\nerror[E0597]: `c` does not live long enough\r\n  --> src/main.rs:38:20\r\n   |\r\n38 |     dr = Dr(\"dr\", &c);\r\n   |                    ^ borrowed value does not live long enough\r\n...\r\n41 | }\r\n   | - `c` dropped here while still borrowed\r\n   |\r\n   = note: values in a scope are dropped in the opposite order they are created\r\n```\r\n\r\nUsing NLL compiles *successfully*, because NLL/MIR-borrowck only sees a more precise model of the relative drop order of the variables declared via `let (c, dt, dr);`, and takes advantage of it.\r\n\r\n----\r\n\r\nThe question is: Are we okay with this side-effect of NLL?\r\n\r\nI don't think it was explicitly documented as an intended effect.\r\n\r\nHowever, I think the fact that we used to use an imprecise model for the drop-order in `let (c, dt, dr);` previously was more due to the *weaknesses* of AST-borrowck. Under NLL, we can encode the more precise relationships needed to check the borrowing behavior in this program and validate that it is safe to let `dt` and `dr` hold references to `c` here.", "closed_by": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51036/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51036/timeline", "performed_via_github_app": null, "state_reason": "completed"}