{"url": "https://api.github.com/repos/rust-lang/rust/issues/39262", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39262/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39262/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39262/events", "html_url": "https://github.com/rust-lang/rust/issues/39262", "id": 202674880, "node_id": "MDU6SXNzdWUyMDI2NzQ4ODA=", "number": 39262, "title": "sample doc code for custom allocators uses libc in a no_std crate", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 129836139, "node_id": "MDU6TGFiZWwxMjk4MzYxMzk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-allocators", "name": "A-allocators", "color": "f7e101", "default": false, "description": "Area: Custom and system allocators"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-23T22:52:35Z", "updated_at": "2017-04-25T08:23:31Z", "closed_at": "2017-04-25T08:23:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Look at the documentation for custom allocators: https://doc.rust-lang.org/book/custom-allocators.html\r\n\r\nIt gives a bare-bones set of hooks into libc's malloc/realloc/free functions (noting that the implementation is failing to uphold alignment guarantees in the comments).\r\n\r\nHowever, if one were to try to use the `crates.io` version of the `libc` crate, one runs into the problem that the `libc` crate by default does not declare itself to be `#![no_std]`.\r\n\r\nIf the allocator is the *only* client of `libc`, or if all such clients can be locally enumerated in one's project, then one can work around this problem by using this in the `Cargo.toml` for all the `libc` clients (including the allocator):\r\n\r\n```\r\n[dependencies]\r\nlibc = { version = \"0.2.17\", default-features = false }\r\n```\r\n\r\nHowever, as soon as one client of `libc` lets the default-features through, it falls apart and you get a build error complaining that your allocator crate depends on a crate that depends on `alloc`.\r\n\r\n * (The error reporting is also not great, in that it is not feasible to track down which crates are causing the problem to arise.)\r\n\r\n----\r\n\r\nAnyway, from a conversation with @alexcrichton , my understanding is that the long term plan here is to change the `libc` crate to be a `#![no_std]` crate. But this is a breaking change, so it needs to wait until the libs team decides to do a major version bump on `libc`.\r\n\r\nI just wanted to jot down this issue so that I or others can refer to it when discussing this problem with trying to adapt the existing custom allocator code.", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39262/timeline", "performed_via_github_app": null, "state_reason": "completed"}