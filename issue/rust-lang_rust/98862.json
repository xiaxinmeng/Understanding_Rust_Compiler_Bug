{"url": "https://api.github.com/repos/rust-lang/rust/issues/98862", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98862/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98862/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98862/events", "html_url": "https://github.com/rust-lang/rust/issues/98862", "id": 1292411228, "node_id": "I_kwDOAAsO6M5NCKFc", "number": 98862, "title": "Make mem::uninitialized inaccessible in future editions", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 65, "created_at": "2022-07-03T20:17:49Z", "updated_at": "2022-12-22T03:03:15Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "We have reached the end of what we can do in https://github.com/rust-lang/rust/issues/66151 (making `mem::uninitialized` panic when it is used incorrectly) without enormous amounts of crater failures. However, there is still one more thing we can do: we can make `mem::uninitialized()` inaccessible in future editions. We seem to have the support of at least [one lang-team member](https://rust-lang.zulipchat.com/#narrow/stream/213817-t-lang/topic/Making.20mem.3A.3Auninitialized.20detect.20more.20UB.20only.20in.20new.20edition/near/276909362) as well. :) Cc @joshtriplett \r\n\r\n@bstrie mentioned they have a patch doing this, though the [RFC got closed](https://github.com/rust-lang/rfcs/pull/3088). Reading the [Zulip discussion](https://rust-lang.zulipchat.com/#narrow/stream/268952-edition-2021/topic/denying.20edition.202015.20deprecated.20APIs), it looks like some libs team members were concerned, though the concern seems to have been mostly around hiding things from the docs. I am not talking about the docs here, I just want edition 2024 code to not compile when it calls `mem::uninitialized`. @m-ou-se I wonder if you would be fine with that?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98862/reactions", "total_count": 7, "+1": 7, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98862/timeline", "performed_via_github_app": null, "state_reason": null}