{"url": "https://api.github.com/repos/rust-lang/rust/issues/36598", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/36598/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/36598/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/36598/events", "html_url": "https://github.com/rust-lang/rust/issues/36598", "id": 178081714, "node_id": "MDU6SXNzdWUxNzgwODE3MTQ=", "number": 36598, "title": "Misplaced \"type of this value must be known ...\" error", "user": {"login": "bnordbo", "id": 696788, "node_id": "MDQ6VXNlcjY5Njc4OA==", "avatar_url": "https://avatars.githubusercontent.com/u/696788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnordbo", "html_url": "https://github.com/bnordbo", "followers_url": "https://api.github.com/users/bnordbo/followers", "following_url": "https://api.github.com/users/bnordbo/following{/other_user}", "gists_url": "https://api.github.com/users/bnordbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnordbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnordbo/subscriptions", "organizations_url": "https://api.github.com/users/bnordbo/orgs", "repos_url": "https://api.github.com/users/bnordbo/repos", "events_url": "https://api.github.com/users/bnordbo/events{/privacy}", "received_events_url": "https://api.github.com/users/bnordbo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-20T14:47:38Z", "updated_at": "2018-02-07T20:50:38Z", "closed_at": "2018-02-07T20:50:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "In a transformation sequence, I got a type inference error on the first function call, while the error was actually later (and below) in the chain. This was very confusing, in particular since the offending line was not shown in the error message. This could be a duplicate of #36495, or a more general issue not related to type inference.\n\nAs it should, rustc 1.11.0 on OS X fails to build the following code:\n\n```\nfn fail(v: Vec<u32>) -> Option<Box<Vec<u32>>> {\n    v.iter()\n        .map(|x| Some(*x))\n        .collect()\n        .map(Box::new)\n}\n\nfn main() {\n    fail(vec![1, 2, 3]);\n}\n```\n\nThe error message is:\n\n```\n/tmp/err.rs:2:5: 5:23 error: the type of this value must be known in this context\n/tmp/err.rs:2     v.iter()\n                  ^\nerror: aborting due to previous error\n```\n\nOn nightly the error report is nicer, but no more helpful. The fix, which is obvious once one decides to ignore the line indication from rustc, is to add a type annotation to `collect()`:\n\n```\nfn fail(v: Vec<u32>) -> Option<Box<Vec<u32>>> {\n    v.iter()\n        .map(|x| Some(*x))\n        .collect::<Option<_>>()\n        .map(Box::new)\n}\n\nfn main() {\n    fail(vec![1, 2, 3]);\n}\n```\n\nAfter poking around a bit, I suspect that this may be a more general issue related to how rustc determines the offending line number. For instance, the error message from the compiler has the same problem, while the error is \"mismatched types\":\n\n```\nfn fail(v: Vec<u32>) -> Option<Vec<u32>> {\n    v.iter()\n        .map(|x| Some(*x))\n}\n\nfn main() {\n    fail(vec![1, 2, 3]);\n}\n```\n\n```\n/tmp/err.rs:2:5: 3:27 error: mismatched types [E0308]\n/tmp/err.rs:2     v.iter()\n                  ^\n\n[...]\n```\n\nWhile this is the kind of thing that only bites you once, it can utterly confuse a beginner. It is particularly perplexing in more complex, multi-line expressions. One could of course argue that the error location is _correct_ as it points to the flawed expression, but that does not really help. Perhaps indicating where in the expression the error lies would be better, e.g (using the new and much better error message style from nightly)?\n\n```\nerror: the type of this value must be known in this context\n --> /tmp/err.rs:2:5\n  |\n2 |     v.iter()\n3 |         .map(|x| Some(*x))\n4 |         .collect()\n  |         ^\n\nerror: aborting due to previous error\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/36598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/36598/timeline", "performed_via_github_app": null, "state_reason": "completed"}