{"url": "https://api.github.com/repos/rust-lang/rust/issues/101373", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/101373/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/101373/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/101373/events", "html_url": "https://github.com/rust-lang/rust/issues/101373", "id": 1360815017, "node_id": "I_kwDOAAsO6M5RHGOp", "number": 101373, "title": "Suggest arithmetic promotion conversion using `as` where appropriate", "user": {"login": "Rageking8", "id": 106309953, "node_id": "U_kgDOBlYpQQ", "avatar_url": "https://avatars.githubusercontent.com/u/106309953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rageking8", "html_url": "https://github.com/Rageking8", "followers_url": "https://api.github.com/users/Rageking8/followers", "following_url": "https://api.github.com/users/Rageking8/following{/other_user}", "gists_url": "https://api.github.com/users/Rageking8/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rageking8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rageking8/subscriptions", "organizations_url": "https://api.github.com/users/Rageking8/orgs", "repos_url": "https://api.github.com/users/Rageking8/repos", "events_url": "https://api.github.com/users/Rageking8/events{/privacy}", "received_events_url": "https://api.github.com/users/Rageking8/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-09-03T10:08:37Z", "updated_at": "2022-09-03T11:39:04Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: [link](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=3e712bd6fac9179444a638e8adadab31)\r\n\r\n```rust\r\nfn main() {\r\n    let a = 12;\r\n    let b : f32 = 3.4;\r\n    let c : f64 = 5.6;\r\n    println!(\"Ex 1 : {}\", a + b);\r\n    println!(\"Ex 2 : {}\", a + c);\r\n    println!(\"Ex 3 : {}\", b + c);\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nCompiling playground v0.0.1 (/playground)\r\nerror[[E0277]](https://doc.rust-lang.org/nightly/error-index.html#E0277): cannot add `f32` to `{integer}`\r\n --> src/main.rs:5:29\r\n  |\r\n5 |     println!(\"Ex 1 : {}\", a + b);\r\n  |                             ^ no implementation for `{integer} + f32`\r\n  |\r\n  = help: the trait `Add<f32>` is not implemented for `{integer}`\r\n  = help: the following other types implement trait `Add<Rhs>`:\r\n            <&'a f32 as Add<f32>>\r\n            <&'a f64 as Add<f64>>\r\n            <&'a i128 as Add<i128>>\r\n            <&'a i16 as Add<i16>>\r\n            <&'a i32 as Add<i32>>\r\n            <&'a i64 as Add<i64>>\r\n            <&'a i8 as Add<i8>>\r\n            <&'a isize as Add<isize>>\r\n          and 48 others\r\n\r\nerror[[E0277]](https://doc.rust-lang.org/nightly/error-index.html#E0277): cannot add `f64` to `{integer}`\r\n --> src/main.rs:6:29\r\n  |\r\n6 |     println!(\"Ex 2 : {}\", a + c);\r\n  |                             ^ no implementation for `{integer} + f64`\r\n  |\r\n  = help: the trait `Add<f64>` is not implemented for `{integer}`\r\n  = help: the following other types implement trait `Add<Rhs>`:\r\n            <&'a f32 as Add<f32>>\r\n            <&'a f64 as Add<f64>>\r\n            <&'a i128 as Add<i128>>\r\n            <&'a i16 as Add<i16>>\r\n            <&'a i32 as Add<i32>>\r\n            <&'a i64 as Add<i64>>\r\n            <&'a i8 as Add<i8>>\r\n            <&'a isize as Add<isize>>\r\n          and 48 others\r\n\r\nerror[[E0308]](https://doc.rust-lang.org/nightly/error-index.html#E0308): mismatched types\r\n --> src/main.rs:7:31\r\n  |\r\n7 |     println!(\"Ex 3 : {}\", b + c);\r\n  |                               ^ expected `f32`, found `f64`\r\n\r\nerror[[E0277]](https://doc.rust-lang.org/nightly/error-index.html#E0277): cannot add `f64` to `f32`\r\n --> src/main.rs:7:29\r\n  |\r\n7 |     println!(\"Ex 3 : {}\", b + c);\r\n  |                             ^ no implementation for `f32 + f64`\r\n  |\r\n  = help: the trait `Add<f64>` is not implemented for `f32`\r\n  = help: the following other types implement trait `Add<Rhs>`:\r\n            <&'a f32 as Add<f32>>\r\n            <&'a f64 as Add<f64>>\r\n            <&'a i128 as Add<i128>>\r\n            <&'a i16 as Add<i16>>\r\n            <&'a i32 as Add<i32>>\r\n            <&'a i64 as Add<i64>>\r\n            <&'a i8 as Add<i8>>\r\n            <&'a isize as Add<isize>>\r\n          and 48 others\r\n\r\nSome errors have detailed explanations: E0277, E0308.\r\nFor more information about an error, try `rustc --explain E0277`.\r\nerror: could not compile `playground` due to 4 previous errors\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should suggest using `as` to do a promoting conversion  (i.e. convert one of the type to something of a larger size, e.g f32 -> f64) if it can resolve the error at hand, where appropriate. On the other hand, I think the second help in the current diagnostics showing other types implementing the trait `Add<Rhs>` is a little verbose (maybe collapsing an additional line or two). This suggestion can be ignored if unnecessary or not desirable.\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/101373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/101373/timeline", "performed_via_github_app": null, "state_reason": null}