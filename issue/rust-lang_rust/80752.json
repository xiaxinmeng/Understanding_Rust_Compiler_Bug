{"url": "https://api.github.com/repos/rust-lang/rust/issues/80752", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80752/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80752/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80752/events", "html_url": "https://github.com/rust-lang/rust/issues/80752", "id": 780545165, "node_id": "MDU6SXNzdWU3ODA1NDUxNjU=", "number": 80752, "title": "box (for arrays and slices) uses rust_alloc + memset instead of rust_alloc_zeroed", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-01-06T13:15:38Z", "updated_at": "2021-01-06T21:06:33Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "```rust\r\n#![feature(box_syntax)]\r\n\r\nuse std::convert::TryInto;\r\n\r\nconst N: usize = 100_000;\r\n\r\npub fn foo1() -> Vec<u32> {\r\n    vec![0; N]\r\n}\r\n\r\npub fn foo2() -> Box<[u32]> {\r\n    box [0; N]\r\n}\r\n\r\npub fn foo3() -> Box<[u32; N]> {\r\n    box [0; N]\r\n}\r\n\r\npub fn foo4() -> Box<[u32; N]> {\r\n    vec![0; N].into_boxed_slice().try_into().unwrap()\r\n}\r\n```\r\n\r\nGives (rustc 1.51.0-nightly 80184183b 2021-01-03):\r\n\r\n```asm\r\n.LCPI0_0:\r\n    .quad   100000\r\n    .quad   100000\r\nfoo1:\r\n    push    rbx\r\n    mov     rbx, rdi\r\n    mov     edi, 400000\r\n    mov     esi, 4\r\n    call    qword ptr [rip + __rust_alloc_zeroed@GOTPCREL]\r\n    test    rax, rax\r\n    je      .LBB0_1\r\n    mov     qword ptr [rbx], rax\r\n    vmovaps xmm0, xmmword ptr [rip + .LCPI0_0]\r\n    vmovups xmmword ptr [rbx + 8], xmm0\r\n    mov     rax, rbx\r\n    pop     rbx\r\n    ret\r\n.LBB0_1:\r\n    mov     edi, 400000\r\n    mov     esi, 4\r\n    call    qword ptr [rip + alloc::alloc::handle_alloc_error@GOTPCREL]\r\n    ud2\r\n\r\n\r\nfoo2:\r\n    push    rbx\r\n    mov     edi, 400000\r\n    mov     esi, 4\r\n    call    qword ptr [rip + __rust_alloc@GOTPCREL]\r\n    test    rax, rax\r\n    je      .LBB1_1\r\n    mov     rbx, rax\r\n    mov     edx, 400000\r\n    mov     rdi, rax\r\n    xor     esi, esi\r\n    call    qword ptr [rip + memset@GOTPCREL]\r\n    mov     edx, 100000\r\n    mov     rax, rbx\r\n    pop     rbx\r\n    ret\r\n.LBB1_1:\r\n    mov     edi, 400000\r\n    mov     esi, 4\r\n    call    qword ptr [rip + alloc::alloc::handle_alloc_error@GOTPCREL]\r\n    ud2\r\n\r\n\r\nfoo3:\r\n    push    rbx\r\n    mov     edi, 400000\r\n    mov     esi, 4\r\n    call    qword ptr [rip + __rust_alloc@GOTPCREL]\r\n    test    rax, rax\r\n    je      .LBB2_1\r\n    mov     rbx, rax\r\n    mov     edx, 400000\r\n    mov     rdi, rax\r\n    xor     esi, esi\r\n    call    qword ptr [rip + memset@GOTPCREL]\r\n    mov     rax, rbx\r\n    pop     rbx\r\n    ret\r\n.LBB2_1:\r\n    mov     edi, 400000\r\n    mov     esi, 4\r\n    call    qword ptr [rip + alloc::alloc::handle_alloc_error@GOTPCREL]\r\n    ud2\r\n\r\n\r\nfoo4:\r\n    push    rax\r\n    mov     edi, 400000\r\n    mov     esi, 4\r\n    call    qword ptr [rip + __rust_alloc_zeroed@GOTPCREL]\r\n    test    rax, rax\r\n    je      .LBB3_1\r\n    pop     rcx\r\n    ret\r\n.LBB3_1:\r\n    mov     edi, 400000\r\n    mov     esi, 4\r\n    call    qword ptr [rip + alloc::alloc::handle_alloc_error@GOTPCREL]\r\n    ud2    \r\n```\r\n\r\nI think box should use rust_alloc_zeroed instead.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80752/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80752/timeline", "performed_via_github_app": null, "state_reason": null}