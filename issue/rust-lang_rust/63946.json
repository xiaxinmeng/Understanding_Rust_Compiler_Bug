{"url": "https://api.github.com/repos/rust-lang/rust/issues/63946", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63946/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63946/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63946/events", "html_url": "https://github.com/rust-lang/rust/issues/63946", "id": 485769643, "node_id": "MDU6SXNzdWU0ODU3Njk2NDM=", "number": 63946, "title": "`Ref` methods unnecessary?", "user": {"login": "Coder-256", "id": 10134823, "node_id": "MDQ6VXNlcjEwMTM0ODIz", "avatar_url": "https://avatars.githubusercontent.com/u/10134823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Coder-256", "html_url": "https://github.com/Coder-256", "followers_url": "https://api.github.com/users/Coder-256/followers", "following_url": "https://api.github.com/users/Coder-256/following{/other_user}", "gists_url": "https://api.github.com/users/Coder-256/gists{/gist_id}", "starred_url": "https://api.github.com/users/Coder-256/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Coder-256/subscriptions", "organizations_url": "https://api.github.com/users/Coder-256/orgs", "repos_url": "https://api.github.com/users/Coder-256/repos", "events_url": "https://api.github.com/users/Coder-256/events{/privacy}", "received_events_url": "https://api.github.com/users/Coder-256/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-27T12:08:03Z", "updated_at": "2019-08-27T15:18:01Z", "closed_at": "2019-08-27T15:18:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm a bit confused about the methods on `std::cell::Ref`. Are there any use cases for the `clone`, `map`, and `map_split` methods? I understand the value for `RefMut` (since there can only be one mutable borrow, you can change what it points to split one borrow into multiple references), but for `Ref`, is there any reason that those operations can't already be done after dereferencing? (i.e. `ref_cell.borrow().deref().clone()` vs `ref_cell.borrow().clone().deref()`). It seems like both `map` methods simply call the provided closure and that `clone` simply clones the inner reference. Sorry if I'm missing something.\r\n\r\nFor example, look at the doctests:\r\n\r\n`Ref::map`:\r\n```rust\r\nuse std::cell::{RefCell, Ref};\r\n\r\nlet c = RefCell::new((5, 'b'));\r\nlet b1: Ref<(u32, char)> = c.borrow();\r\n// Why not: let b2: &u32 = &b1.0;\r\nlet b2: Ref<u32> = Ref::map(b1, |t| &t.0);\r\nassert_eq!(*b2, 5)\r\n```\r\n\r\n`Ref::map_split`:\r\n```rust\r\nuse std::cell::{Ref, RefCell};\r\n\r\nlet cell = RefCell::new([1, 2, 3, 4]);\r\nlet borrow = cell.borrow();\r\n// Why not: let (begin, end) = borrow.split_at(2);\r\nlet (begin, end) = Ref::map_split(borrow, |slice| slice.split_at(2));\r\nassert_eq!(*begin, [1, 2]);\r\nassert_eq!(*end, [3, 4]);\r\n```\r\n\r\nI know that they have to remain for backward compatibility anyway but my question is what is/was their purpose? I can't seem to find anything about it.", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63946/timeline", "performed_via_github_app": null, "state_reason": "completed"}