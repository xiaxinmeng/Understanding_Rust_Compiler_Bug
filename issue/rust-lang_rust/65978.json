{"url": "https://api.github.com/repos/rust-lang/rust/issues/65978", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65978/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65978/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65978/events", "html_url": "https://github.com/rust-lang/rust/issues/65978", "id": 514906905, "node_id": "MDU6SXNzdWU1MTQ5MDY5MDU=", "number": 65978, "title": "Symbols in optimized async programs are often not useful", "user": {"login": "cbiffle", "id": 45247, "node_id": "MDQ6VXNlcjQ1MjQ3", "avatar_url": "https://avatars.githubusercontent.com/u/45247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbiffle", "html_url": "https://github.com/cbiffle", "followers_url": "https://api.github.com/users/cbiffle/followers", "following_url": "https://api.github.com/users/cbiffle/following{/other_user}", "gists_url": "https://api.github.com/users/cbiffle/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbiffle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbiffle/subscriptions", "organizations_url": "https://api.github.com/users/cbiffle/orgs", "repos_url": "https://api.github.com/users/cbiffle/repos", "events_url": "https://api.github.com/users/cbiffle/events{/privacy}", "received_events_url": "https://api.github.com/users/cbiffle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203130, "node_id": "MDU6TGFiZWwyMDMxMzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-debuginfo", "name": "A-debuginfo", "color": "f7e101", "default": false, "description": "Area: Debugging information in compiled programs (DWARF, PDB, etc.)"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-10-30T18:54:52Z", "updated_at": "2023-01-21T21:15:43Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "(As observed on `rustc 1.40.0-nightly (4a8c5b20c 2019-10-23)` targeting `thumbv7em-none-eabihf`; CC @tmandry)\r\n\r\nI'm making my first aggressive use of `async fn` in an application. It's a deeply-embedded performance-sensitive application, and I wind up inspecting the disassembly output a lot (using `objdump`).\r\n\r\nThis is complicated by the fact that basically all of my functions are named `poll_with_tls_context`. (Some of them aren't -- some of them are named after future combinators.)\r\n\r\nFor example, here is my function called `poll_with_tls_context` calling another one, also named `poll_with_tls_context`:\r\n\r\n```\r\n; This is an ARMv-7M Thumb-2 listing.\r\n080003b8 <core::future::poll_with_tls_context>:\r\n 80003b8:       b570            push    {r4, r5, r6, lr}\r\n 80003ba:       4604            mov     r4, r0\r\n   ; irrelevant setup omitted...\r\n 80003f4:       f000 fa3c       bl      8000870 <core::future::poll_with_tls_context> ; note different addr\r\n 80003f8:       2101            movs    r1, #1\r\n 80003fa:       2800            cmp     r0, #0\r\n  ; ...and so on\r\n```\r\n\r\n(The observant reader will note `poll_with_tls_context` does not appear in libcore. That's correct -- I've hacked `async` in a `#[no_std]` environment. I'm pretty sure the hack is not the problem.)\r\n\r\nI understand *why* this is happening: `poll_with_tls_context` is an implementation detail of the current lowering of `async fn`, and it is being specialized to the future type it's given, hence many such functions. But I also don't think it's ideal.\r\n\r\n(For what it's worth, I can change the situation by forcing `poll_with_tls_context` to inline, though this produces unacceptable code bloat in my application (and this option isn't available for people who aren't open to using a patched libstd). By default, `poll_with_tls_context` doesn't inline, but `get_task_context` *does*, which seems like the right result for size/speed.)\r\n\r\nI am compiling at `opt-level = 3` with an override for `debug = true` in my release profile.", "closed_by": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65978/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65978/timeline", "performed_via_github_app": null, "state_reason": null}