{"url": "https://api.github.com/repos/rust-lang/rust/issues/39412", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39412/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39412/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39412/events", "html_url": "https://github.com/rust-lang/rust/issues/39412", "id": 204121745, "node_id": "MDU6SXNzdWUyMDQxMjE3NDU=", "number": 39412, "title": "Tracking issue: declarative macros 2.0", "user": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 89436934, "node_id": "MDU6TGFiZWw4OTQzNjkzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-RFC-approved", "name": "B-RFC-approved", "color": "d304cb", "default": false, "description": "Approved by a merged RFC but not yet implemented."}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 1578491841, "node_id": "MDU6TGFiZWwxNTc4NDkxODQx", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-decl_macro", "name": "F-decl_macro", "color": "f9c0cc", "default": false, "description": "`#![feature(decl_macro)]`"}, {"id": 3537216018, "node_id": "LA_kwDOAAsO6M7S1aIS", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-design-concerns", "name": "S-tracking-design-concerns", "color": "4682b4", "default": false, "description": "Blocking design concerns"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 57, "created_at": "2017-01-30T20:33:24Z", "updated_at": "2022-11-13T22:59:15Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Tracking issue for declarative macros 2.0 (aka `macro` aka decl_macro aka macros-by-example).\r\n\r\nRFC: https://github.com/rust-lang/rfcs/blob/master/text/1584-macros.md\r\n\r\nRFC PR: https://github.com/rust-lang/rfcs/pull/1584\r\n\r\ncc @rust-lang/compiler \r\n\r\n---\r\n\r\n## Tasks\r\n\r\n - [ ] Complete the draft hygiene [prototype](https://github.com/jseyfried/rust/tree/hygiene) and [RFC](https://github.com/jseyfried/rfcs/blob/hygiene/text/0000-hygiene.md).\r\n   - [x] Hygiene for items, explicit imports, lexical scopes, and module scopes.\r\n   - [x] Hygiene for globs and trait methods (w.r.t. extension trait candidates in scope for a method call).\r\n   - [x] Hygiene for type directed name resolutions (i.e. methods, associated types, and fields).\r\n   - [x] Support `macro` in blocks as well as modules.\r\n   - [x] Implement inter-crate hygiene, except for nested `macro`s.\r\n   - [ ] Implement \"hygiene bending\" for when users want a name from macro def to \"escape\".\r\n       - Examples: https://github.com/rust-lang/rust/issues/91249, https://github.com/rust-lang/rust/issues/46342\r\n   - [ ] Implement inter-crate hygiene for nested `macro`s (pending macro def encoding).\r\n   - [ ] Make `private_in_public` hygienic?\r\n   - [ ] Make `unsafe` and lints hygienic (if appropriate)?\r\n - [x] Add variant `ast::ItemKind::MacroDef` for `macro_rules!` items and `macro` items (PR #40220).\r\n - [x] Encode `macro`s in the crate metadata using `TokenStream`, not `String`.\r\n - [x] Fix #30476 (`private_in_public` details).\r\n - [x] Fix span issues #30506 and #39450 (PR #40597).\r\n - [x] Land `macro` behind a feature gate (PR #40847).\r\n - [ ] Future-proof matchers (e.g. `$e:expr`) by employing a simpler, more general grammar.\r\n - [ ] Allow fragments (e.g. `$e` where `$e:expr`) to be parsed in more contexts (c.f. #26361).\r\n - [ ] Decide whether we want macro invocations in identifier positions and/or eager expansion.\r\n - [x] ~Remove $:meta matcher (#49629)~\r\n\r\nPotentially blocking issues:\r\n- https://github.com/rust-lang/rust/issues/71614", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39412/reactions", "total_count": 260, "+1": 32, "-1": 0, "laugh": 1, "hooray": 116, "confused": 1, "heart": 50, "rocket": 22, "eyes": 38}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39412/timeline", "performed_via_github_app": null, "state_reason": null}