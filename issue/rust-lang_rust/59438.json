{"url": "https://api.github.com/repos/rust-lang/rust/issues/59438", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/59438/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/59438/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/59438/events", "html_url": "https://github.com/rust-lang/rust/issues/59438", "id": 425371750, "node_id": "MDU6SXNzdWU0MjUzNzE3NTA=", "number": 59438, "title": "Reserve additional elements in Vec does not reserve additional elements", "user": {"login": "CasualX", "id": 2324759, "node_id": "MDQ6VXNlcjIzMjQ3NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2324759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CasualX", "html_url": "https://github.com/CasualX", "followers_url": "https://api.github.com/users/CasualX/followers", "following_url": "https://api.github.com/users/CasualX/following{/other_user}", "gists_url": "https://api.github.com/users/CasualX/gists{/gist_id}", "starred_url": "https://api.github.com/users/CasualX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CasualX/subscriptions", "organizations_url": "https://api.github.com/users/CasualX/orgs", "repos_url": "https://api.github.com/users/CasualX/repos", "events_url": "https://api.github.com/users/CasualX/events{/privacy}", "received_events_url": "https://api.github.com/users/CasualX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-26T11:49:23Z", "updated_at": "2019-03-26T12:21:05Z", "closed_at": "2019-03-26T12:21:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a loop which appends to a Vec of u8, I append to the vector by reserving enough additional capacity, writing in the buffer reserved by the capacity and calling set_len when done. However using `reserve` in certain cases does not grow the vector! violating the documented behavior that the resulting capacity should have at least the specified additional elements.\r\n\r\nI tried this code: [playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=e365a5aeb5f5248d983428982ef9bd4a)\r\n\r\n```rust\r\nfn main() {\r\n\tlet sizes = &[220, 224, 248, 216];\r\n\tlet mut vec = Vec::<u8>::new();\r\n\tfor &size in sizes {\r\n\t\tlet vec_len = vec.len();\r\n\t\tlet vec_cap = vec.capacity();\r\n\t\tif vec_len + size > vec_cap {\r\n\t\t\tlet additional = vec_len + size - vec_cap;\r\n\t\t\tvec.reserve(additional); // This fails to reserve additional elements!\r\n\t\t\t//vec.reserve_exact(additional); // This works!\r\n\t\t\tassert!(vec.capacity() >= vec_len + size,\r\n\t\t\t\t\"vec_len: {}, vec_cap: {}, size: {}, additional: {}, vec.capacity(): {}\",\r\n\t\t\t\t vec_len,     vec_cap,     size,     additional,     vec.capacity());\r\n\t\t}\r\n\t\tunsafe { vec.set_len(vec_len + size) };\r\n\t}\r\n}\r\n```\r\n\r\nI expected to see this happen: Code works as expected and at every iteration there is enough capacity\r\n\r\nInstead, this happened: In the last iteration it tries to ensure at least 216 bytes are present, but the capacity didn't change! The assert triggers with the following message, you can observe how the capacity hasn't changed even though 20 additional elements were requested.\r\n\r\n`thread 'main' panicked at 'vec_len: 692, vec_cap: 888, size: 216, additional: 20, vec.capacity(): 888'`\r\n\r\n## Meta\r\n\r\nLatest stable, see playground. Appears to be a problem in std lib implementation of reserve as it breaks on playground (linux os, I imagine) and on my computer (x64_86 windows msvc).", "closed_by": {"login": "CasualX", "id": 2324759, "node_id": "MDQ6VXNlcjIzMjQ3NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2324759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CasualX", "html_url": "https://github.com/CasualX", "followers_url": "https://api.github.com/users/CasualX/followers", "following_url": "https://api.github.com/users/CasualX/following{/other_user}", "gists_url": "https://api.github.com/users/CasualX/gists{/gist_id}", "starred_url": "https://api.github.com/users/CasualX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CasualX/subscriptions", "organizations_url": "https://api.github.com/users/CasualX/orgs", "repos_url": "https://api.github.com/users/CasualX/repos", "events_url": "https://api.github.com/users/CasualX/events{/privacy}", "received_events_url": "https://api.github.com/users/CasualX/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/59438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/59438/timeline", "performed_via_github_app": null, "state_reason": "completed"}