{"url": "https://api.github.com/repos/rust-lang/rust/issues/108622", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108622/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108622/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108622/events", "html_url": "https://github.com/rust-lang/rust/issues/108622", "id": 1605442524, "node_id": "I_kwDOAAsO6M5fsRvc", "number": 108622, "title": "Get rid of `llvm.allow-old-toolchain` option", "user": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}, {"id": 762300676, "node_id": "MDU6TGFiZWw3NjIzMDA2NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-blocked", "name": "S-blocked", "color": "d3dddd", "default": false, "description": "Status: marked as blocked \u274c on something else such as an RFC or other implementation work."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-03-01T18:13:45Z", "updated_at": "2023-03-01T18:17:53Z", "closed_at": "2023-03-01T18:17:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This was added in https://github.com/rust-lang/rust/commit/320640060f38957028141ea30bc4d5577d1e53b0 as a temporary workaround for a CI failure. We're no longer using it, so I don't think we should continue to support the option - people can use `llvm.build-config` to define custom CMake flags if they really need to.\r\n\r\nI have code for removing this that *almost* works, but the suggested fix in CHANGELOG.md doesn't actually work because of https://github.com/rust-lang/rust/issues/108621.\r\n\r\n<details>\r\n\r\n```diff\r\ndiff --git a/config.toml.example b/config.toml.example\r\nindex e9fc119ebb2..418e46f8627 100644\r\n--- a/config.toml.example\r\n+++ b/config.toml.example\r\n@@ -140,9 +140,6 @@ changelog-seen = 2\r\n # The value specified here will be passed as `-DLLVM_USE_LINKER` to CMake.\r\n #use-linker = <none> (path)\r\n \r\n-# Whether or not to specify `-DLLVM_TEMPORARILY_ALLOW_OLD_TOOLCHAIN=YES`\r\n-#allow-old-toolchain = false\r\n-\r\n # Whether to include the Polly optimizer.\r\n #polly = false\r\n \r\ndiff --git a/src/bootstrap/CHANGELOG.md b/src/bootstrap/CHANGELOG.md\r\nindex 4105fa5ec96..256e876a745 100644\r\n--- a/src/bootstrap/CHANGELOG.md\r\n+++ b/src/bootstrap/CHANGELOG.md\r\n@@ -9,6 +9,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\r\n \r\n - Vendoring is no longer done automatically when building from git sources. To use vendoring, run `cargo vendor` manually, or use the pre-vendored `rustc-src` tarball.\r\n - `llvm-libunwind` now accepts `in-tree` (formerly true), `system` or `no` (formerly false) [#77703](https://github.com/rust-lang/rust/pull/77703)\r\n+- The `llvm.allow-old-toolchain` option has been removed. If you need to enable it, use `llvm.build_config.LLVM_TEMPORARILY_ALLOW_OLD_TOOLCHAIN=YES`.\r\n - The options `infodir`, `localstatedir`, and `gpg-password-file` are no longer allowed in config.toml. Previously, they were ignored without warning. Note that `infodir` and `localstatedir` are still accepted by `./configure`, with a warning. [#82451](https://github.com/rust-lang/rust/pull/82451)\r\n - Change the names for `dist` commands to match the component they generate. [#90684](https://github.com/rust-lang/rust/pull/90684)\r\n - The `build.fast-submodules` option has been removed. Fast submodule checkouts are enabled unconditionally. Automatic submodule handling can still be disabled with `build.submodules = false`.\r\ndiff --git a/src/bootstrap/config.rs b/src/bootstrap/config.rs\r\nindex 8eef3da1726..b5c3e9ad427 100644\r\n--- a/src/bootstrap/config.rs\r\n+++ b/src/bootstrap/config.rs\r\n@@ -131,7 +131,6 @@ pub struct Config {\r\n     pub llvm_link_jobs: Option<u32>,\r\n     pub llvm_version_suffix: Option<String>,\r\n     pub llvm_use_linker: Option<String>,\r\n-    pub llvm_allow_old_toolchain: bool,\r\n     pub llvm_polly: bool,\r\n     pub llvm_clang: bool,\r\n     pub llvm_from_ci: bool,\r\n@@ -686,7 +685,6 @@ struct Llvm {\r\n         ldflags: Option<String> = \"ldflags\",\r\n         use_libcxx: Option<bool> = \"use-libcxx\",\r\n         use_linker: Option<String> = \"use-linker\",\r\n-        allow_old_toolchain: Option<bool> = \"allow-old-toolchain\",\r\n         polly: Option<bool> = \"polly\",\r\n         clang: Option<bool> = \"clang\",\r\n         download_ci_llvm: Option<StringOrBool> = \"download-ci-llvm\",\r\n@@ -1186,7 +1184,6 @@ fn parse_inner<'a>(args: &[String], get_toml: impl 'a + Fn(&Path) -> TomlConfig)\r\n             config.llvm_ldflags = llvm.ldflags.clone();\r\n             set(&mut config.llvm_use_libcxx, llvm.use_libcxx);\r\n             config.llvm_use_linker = llvm.use_linker.clone();\r\n-            config.llvm_allow_old_toolchain = llvm.allow_old_toolchain.unwrap_or(false);\r\n             config.llvm_polly = llvm.polly.unwrap_or(false);\r\n             config.llvm_clang = llvm.clang.unwrap_or(false);\r\n             config.llvm_build_config = llvm.build_config.clone().unwrap_or(Default::default());\r\n@@ -1226,7 +1223,6 @@ fn parse_inner<'a>(args: &[String], get_toml: impl 'a + Fn(&Path) -> TomlConfig)\r\n                 check_ci_llvm!(llvm.ldflags);\r\n                 check_ci_llvm!(llvm.use_libcxx);\r\n                 check_ci_llvm!(llvm.use_linker);\r\n-                check_ci_llvm!(llvm.allow_old_toolchain);\r\n                 check_ci_llvm!(llvm.polly);\r\n                 check_ci_llvm!(llvm.clang);\r\n                 check_ci_llvm!(llvm.build_config);\r\ndiff --git a/src/bootstrap/native.rs b/src/bootstrap/native.rs\r\nindex 37f6720150e..7562d55e250 100644\r\n--- a/src/bootstrap/native.rs\r\n+++ b/src/bootstrap/native.rs\r\n@@ -785,10 +785,6 @@ fn configure_llvm(builder: &Builder<'_>, target: TargetSelection, cfg: &mut cmak\r\n     if let Some(ref linker) = builder.config.llvm_use_linker {\r\n         cfg.define(\"LLVM_USE_LINKER\", linker);\r\n     }\r\n-\r\n-    if builder.config.llvm_allow_old_toolchain {\r\n-        cfg.define(\"LLVM_TEMPORARILY_ALLOW_OLD_TOOLCHAIN\", \"YES\");\r\n-    }\r\n }\r\n \r\n // Adapted from https://github.com/alexcrichton/cc-rs/blob/fba7feded71ee4f63cfe885673ead6d7b4f2f454/src/lib.rs#L2347-L2365\r\n```\r\n\r\n</details>\r\n", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108622/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}