{"url": "https://api.github.com/repos/rust-lang/rust/issues/99635", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99635/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99635/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99635/events", "html_url": "https://github.com/rust-lang/rust/issues/99635", "id": 1315618338, "node_id": "I_kwDOAAsO6M5Oar4i", "number": 99635, "title": "Function signature probably shouldn't be reported if an argument type mismatch is 'trivial'", "user": {"login": "zesterer", "id": 3268430, "node_id": "MDQ6VXNlcjMyNjg0MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/3268430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zesterer", "html_url": "https://github.com/zesterer", "followers_url": "https://api.github.com/users/zesterer/followers", "following_url": "https://api.github.com/users/zesterer/following{/other_user}", "gists_url": "https://api.github.com/users/zesterer/gists{/gist_id}", "starred_url": "https://api.github.com/users/zesterer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zesterer/subscriptions", "organizations_url": "https://api.github.com/users/zesterer/orgs", "repos_url": "https://api.github.com/users/zesterer/repos", "events_url": "https://api.github.com/users/zesterer/events{/privacy}", "received_events_url": "https://api.github.com/users/zesterer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-07-23T09:50:46Z", "updated_at": "2022-08-14T09:21:44Z", "closed_at": "2022-08-14T09:21:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've been recently doing a large amount of refactoring on my compiler. Although this has broadly been a pleasant experience, recent diagnostic changes have put a little pressure on my scroll wheel. Diagnostics that I (and I think many others, even newcomers) would consider trivial can sometimes take up many dozens of lines of compiler output. I definitely appreciate the verbosity, but I don't think it's always called for (at least, by default). As an example, I recently encountered the following error message:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n    --> analysis/src/infer.rs:1959:66\r\n     |\r\n1959 | ...                   .for_each(|(x, y)| self.derive_links(x, y, self_ty, ty_links, eff_links)),\r\n     |                                               ------------ ^ expected struct `tao_util::index::Id`, found reference\r\n     |                                               |\r\n     |                                               arguments to this function are incorrect\r\n     |\r\n     = note: expected struct `tao_util::index::Id<(tao_syntax::Span, ty::Ty)>`\r\n             found reference `&tao_util::index::Id<(tao_syntax::Span, ty::Ty)>`\r\nnote: associated function defined here\r\n    --> analysis/src/infer.rs:1866:8\r\n     |\r\n1866 |     fn derive_links(\r\n     |        ^^^^^^^^^^^^\r\n1867 |         &mut self,\r\n     |         ---------\r\n1868 |         member: TyId,\r\n     |         ------------\r\n1869 |         ty: TyVar,\r\n     |         ---------\r\n1870 |         self_ty: Option<TyVar>,\r\n     |         ----------------------\r\n1871 |         ty_links: &mut HashMap<usize, TyVar>,\r\n     |         ------------------------------------\r\n1872 |         eff_links: &mut HashMap<usize, EffectVar>,\r\n     |         -----------------------------------------\r\nhelp: consider dereferencing the borrow\r\n     |\r\n1959 |                             .for_each(|(x, y)| self.derive_links(*x, y, self_ty, ty_links, eff_links)),\r\n     |                                                                  +\r\n```\r\n\r\nThat's 31 lines of terminal output to inform me that I forgot a `*`. As I say, I do appreciate the verbosity! But in cases like this, where the compiler can determine that the mismatch is trivial and the intended result is obvious (i.e: dereference the reference), I feel that the compiler should omit some of the more verbose parts of the message, such as the signature of the function.\r\n\r\nI realise that this is, to some extent, bikeshedding: but there is a very real trade-off between the assistance provided by a compiler error and redundant information in the error message that makes the cycle of fixing error messages slower and more inconvenient.\r\n\r\nIn my view, an output like the following where the original signature has been omitted has a much better tradeoff between verbosity and the time required to read the message and get to the heart of what the compiler is suggesting:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n    --> analysis/src/infer.rs:1959:66\r\n     |\r\n1959 | ...                   .for_each(|(x, y)| self.derive_links(x, y, self_ty, ty_links, eff_links)),\r\n     |                                               ------------ ^ expected struct `tao_util::index::Id`, found reference\r\n     |                                               |\r\n     |                                               arguments to this function are incorrect\r\n     |\r\n     = note: expected struct `tao_util::index::Id<(tao_syntax::Span, ty::Ty)>`\r\n             found reference `&tao_util::index::Id<(tao_syntax::Span, ty::Ty)>`\r\nhelp: consider dereferencing the borrow\r\n     |\r\n1959 |                             .for_each(|(x, y)| self.derive_links(*x, y, self_ty, ty_links, eff_links)),\r\n     |                                                                  +\r\n```\r\n\r\nI am happy to make a PR for this myself, but I've not worked on rustc diagnostics before and may need pointing to the relevant code.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99635/timeline", "performed_via_github_app": null, "state_reason": "completed"}