{"url": "https://api.github.com/repos/rust-lang/rust/issues/10922", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/10922/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/10922/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/10922/events", "html_url": "https://github.com/rust-lang/rust/issues/10922", "id": 24130674, "node_id": "MDU6SXNzdWUyNDEzMDY3NA==", "number": 10922, "title": "New `#[pkgid]`-based library naming is problematic", "user": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2013-12-11T19:21:31Z", "updated_at": "2014-01-07T07:03:28Z", "closed_at": "2014-01-07T07:03:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This change to using `#[pkgid]` is causing a serious problem. Library names are now completely different. And I don't mean the hash. I mean the actual name on-disk. Not only that, but libraries without a `#[pkgid]` will potentially be named completely incorrectly and collide on-disk.\n\nThe library name on disk is `lib<name>-<hash>...`. Previously, `<name>` came from the link args, so `#[link(name=\"foo\")];` produced `libfoo-<hash>...`. Now, it's apparently based off of the last path component of the `#[pkgid]`. So if my library doesn't have a `#[pkgid]`, and the root file is named `lib.rs`, then I'll end up with `liblib-<hash>...`. And since the hash is also based off of the `#[pkgid]`, then every single non-`#[pkgid]` library with the same root source file will result in the same full filename (as both the library name and the hash are identical). That's really bad.\n\nIf I go ahead and add a `#[pkgid]`, and use the recommended approach of using my github path as the pkgid, then I end up with a library that's potentially named incorrectly. For example, my [github.com/kballard/rust-lua](https://github.com/kballard/rust-lua) library wants to produce `liblua-<hash>...` but instead with the `#[pkgid]` it's now `librust-lua-<hash>...`.\n", "closed_by": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/10922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/10922/timeline", "performed_via_github_app": null, "state_reason": "completed"}