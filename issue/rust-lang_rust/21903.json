{"url": "https://api.github.com/repos/rust-lang/rust/issues/21903", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/21903/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/21903/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/21903/events", "html_url": "https://github.com/rust-lang/rust/issues/21903", "id": 56417228, "node_id": "MDU6SXNzdWU1NjQxNzIyOA==", "number": 21903, "title": "Trait bounds are not yet enforced in type definitions", "user": {"login": "Marwes", "id": 957312, "node_id": "MDQ6VXNlcjk1NzMxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/957312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Marwes", "html_url": "https://github.com/Marwes", "followers_url": "https://api.github.com/users/Marwes/followers", "following_url": "https://api.github.com/users/Marwes/following{/other_user}", "gists_url": "https://api.github.com/users/Marwes/gists{/gist_id}", "starred_url": "https://api.github.com/users/Marwes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Marwes/subscriptions", "organizations_url": "https://api.github.com/users/Marwes/orgs", "repos_url": "https://api.github.com/users/Marwes/repos", "events_url": "https://api.github.com/users/Marwes/events{/privacy}", "received_events_url": "https://api.github.com/users/Marwes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 234876, "node_id": "MDU6TGFiZWwyMzQ4NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-hard", "name": "E-hard", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Hard / a lot"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 178802147, "node_id": "MDU6TGFiZWwxNzg4MDIxNDc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-needs-decision", "name": "I-needs-decision", "color": "e11d21", "default": false, "description": "Issues in need of decision."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630636017, "node_id": "MDU6TGFiZWw2MzA2MzYwMTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-future-compatibility", "name": "C-future-compatibility", "color": "f5f1fd", "default": false, "description": "Category: future compatibility lints"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 27, "created_at": "2015-02-03T18:30:41Z", "updated_at": "2022-06-10T18:51:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Opening an issue since I could not find any information on when/if this will be enforced. Would be really useful for some generalizing I am trying for parser-combinators which I can't do currently without complicating the API.\n\nSpecifically I'd like to use a trait bound in a type definition to access an associated type to avoid passing it seperately but due to this issue I simply get a compiler error.\n\nSimplified code which exhibits the error:\n\n``` rust\ntrait Stream {\n    type Item;\n}\n\ntrait Parser {\n    type Input: Stream;\n}\n\nfn test<T>(u: T) -> T\n    where T: Parser {\n    panic!()\n}\n\ntype Res<I: Stream> = (I, <I as Stream>::Item);\n\nimpl <'a> Stream for &'a str { type Item = char; }\nimpl <I> Parser for fn (I) -> Res<I> where I: Stream { type Input = I; }\n\n//Works\n//fn f(_: &str) -> (&str, char) {\n\n//Errors\nfn f(_: &str) -> Res<&str> {\n    panic!()\n}\n\nfn main() {\n    let _ = test(f as fn (_) -> _);\n}\n\n```\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/21903/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/21903/timeline", "performed_via_github_app": null, "state_reason": null}