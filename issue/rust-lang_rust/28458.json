{"url": "https://api.github.com/repos/rust-lang/rust/issues/28458", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/28458/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/28458/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/28458/events", "html_url": "https://github.com/rust-lang/rust/issues/28458", "id": 106977747, "node_id": "MDU6SXNzdWUxMDY5Nzc3NDc=", "number": 28458, "title": "Ambiguous explanation of Sync in the book", "user": {"login": "critiqjo", "id": 1436441, "node_id": "MDQ6VXNlcjE0MzY0NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1436441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/critiqjo", "html_url": "https://github.com/critiqjo", "followers_url": "https://api.github.com/users/critiqjo/followers", "following_url": "https://api.github.com/users/critiqjo/following{/other_user}", "gists_url": "https://api.github.com/users/critiqjo/gists{/gist_id}", "starred_url": "https://api.github.com/users/critiqjo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/critiqjo/subscriptions", "organizations_url": "https://api.github.com/users/critiqjo/orgs", "repos_url": "https://api.github.com/users/critiqjo/repos", "events_url": "https://api.github.com/users/critiqjo/events{/privacy}", "received_events_url": "https://api.github.com/users/critiqjo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-17T12:55:56Z", "updated_at": "2015-09-20T11:28:56Z", "closed_at": "2015-09-20T11:28:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "> When a type `T` implements `Sync`, it indicates to the compiler that something of this type has no possibility of introducing memory unsafety when used from multiple threads concurrently.\n\nThe term \"used\" should be elaborated: \"when used by immutable reference from ...\"\nIt will not occur to a reader that a primitive type implements `Sync`.\n\n> For example, sharing immutable data with an atomic reference count is threadsafe. Rust provides a type like this, `Arc<T>`, and it implements `Sync`, so it is safe to share between threads.\n\nThis might leave an impression that `usize` does not implement `Sync` but when wrapped with `Arc`, `Arc<usize>` will have `Sync`!! (This really was my impression until recently!).\nBesides, saying `Arc<T>` implements `Sync` itself is incorrect -- it should say \"`Arc<T>` implements `Sync` if and only if `T` implements `Sync`\", or better, don't mention `Arc` at all...\n\nPlease word this section more carefully, so that confusion is eliminated in future...\nRef: [section 4.6](http://doc.rust-lang.org/book/concurrency.html#sync)\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/28458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/28458/timeline", "performed_via_github_app": null, "state_reason": "completed"}