{"url": "https://api.github.com/repos/rust-lang/rust/issues/42951", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42951/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42951/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42951/events", "html_url": "https://github.com/rust-lang/rust/issues/42951", "id": 239224974, "node_id": "MDU6SXNzdWUyMzkyMjQ5NzQ=", "number": 42951, "title": "Spec request. Hasher: is write_u32 eqivalent to 4 calls of write_u8?", "user": {"login": "stepancheg", "id": 28969, "node_id": "MDQ6VXNlcjI4OTY5", "avatar_url": "https://avatars.githubusercontent.com/u/28969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stepancheg", "html_url": "https://github.com/stepancheg", "followers_url": "https://api.github.com/users/stepancheg/followers", "following_url": "https://api.github.com/users/stepancheg/following{/other_user}", "gists_url": "https://api.github.com/users/stepancheg/gists{/gist_id}", "starred_url": "https://api.github.com/users/stepancheg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stepancheg/subscriptions", "organizations_url": "https://api.github.com/users/stepancheg/orgs", "repos_url": "https://api.github.com/users/stepancheg/repos", "events_url": "https://api.github.com/users/stepancheg/events{/privacy}", "received_events_url": "https://api.github.com/users/stepancheg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 178802147, "node_id": "MDU6TGFiZWwxNzg4MDIxNDc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-needs-decision", "name": "I-needs-decision", "color": "e11d21", "default": false, "description": "Issues in need of decision."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 419557634, "node_id": "MDU6TGFiZWw0MTk1NTc2MzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-medium", "name": "E-medium", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Medium / intermediate"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-06-28T16:39:28Z", "updated_at": "2021-03-22T19:41:05Z", "closed_at": "2021-02-03T21:03:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently `Hasher::write_u32` is implemented as `self.write(&unsafe { mem::transmute::<_, [u8; 4]>(i) })`. The question is: is it a requirement for all `Hasher` implementations?\r\n\r\nIn other words, is is true, that for each hasher implementation, call\r\n\r\n```\r\nhasher.write_32(0x01020304);\r\n```\r\n\r\nmust be equivalent to\r\n\r\n```\r\nhasher.write_8(0x04);\r\nhasher.write_8(0x03);\r\nhasher.write_8(0x02);\r\nhasher.write_8(0x01);\r\n```\r\n\r\n?\r\n\r\n(assuming host is little-endian).\r\n\r\nWhy is it important.\r\n\r\nSuppose, you want to implement very simple hasher with state updated like `state = state * 31 + update`.\r\n\r\nIf `Hasher` does not have requirement as above, hasher can be implemented by simply casting any operand to `u64` and avoiding dealing with unaligned/smaller than u64 integers:\r\n\r\n```\r\nimpl Hasher for MyHasher {\r\n    fn write_u8(&mut self, v: u8) {\r\n        self.write_u64(v as u64);\r\n    }\r\n\r\n    fn write_u64(&mut self, v: u64) {\r\n        self.state = (self.state * 31).wrapping_add(v);\r\n    }\r\n}\r\n```", "closed_by": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42951/timeline", "performed_via_github_app": null, "state_reason": "completed"}