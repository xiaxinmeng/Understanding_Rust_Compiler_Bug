{"url": "https://api.github.com/repos/rust-lang/rust/issues/58082", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58082/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58082/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58082/events", "html_url": "https://github.com/rust-lang/rust/issues/58082", "id": 406016032, "node_id": "MDU6SXNzdWU0MDYwMTYwMzI=", "number": 58082, "title": "Field ordering still causes extra memcpy", "user": {"login": "jrmuizel", "id": 332653, "node_id": "MDQ6VXNlcjMzMjY1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/332653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrmuizel", "html_url": "https://github.com/jrmuizel", "followers_url": "https://api.github.com/users/jrmuizel/followers", "following_url": "https://api.github.com/users/jrmuizel/following{/other_user}", "gists_url": "https://api.github.com/users/jrmuizel/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrmuizel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrmuizel/subscriptions", "organizations_url": "https://api.github.com/users/jrmuizel/orgs", "repos_url": "https://api.github.com/users/jrmuizel/repos", "events_url": "https://api.github.com/users/jrmuizel/events{/privacy}", "received_events_url": "https://api.github.com/users/jrmuizel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}, {"id": 2061474479, "node_id": "MDU6TGFiZWwyMDYxNDc0NDc5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt-nrvo", "name": "A-mir-opt-nrvo", "color": "f7e101", "default": false, "description": "Fixed by NRVO"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-02T19:50:30Z", "updated_at": "2021-03-13T15:46:59Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is similar to #56356 except this time with more fields:\r\n\r\n```rust\r\nuse std::mem;\r\n\r\nstruct SV {\r\n    capacity: usize,\r\n    disc: usize,\r\n    data: [usize; 40],\r\n}\r\n\r\nimpl SV {\r\n    fn new() -> SV {\r\n        SV { data: unsafe { mem::uninitialized() },\r\n            disc: 0,\r\n            capacity: 0 }\r\n    }\r\n}\r\n\r\npub struct L {\r\n    a: SV,\r\n    b: SV\r\n}\r\n\r\npub struct Allocation<T> {\r\n    f: *mut T,\r\n}\r\n\r\nimpl<T> Allocation<T> {\r\n    pub fn init(self, value: T) {\r\n        use std::ptr;\r\n        unsafe {\r\n        ptr::write(self.f, value);\r\n        }\r\n    }\r\n}\r\n\r\n#[inline(never)]\r\npub fn foo(a: Allocation<L>) {\r\n    a.init(L {\r\n        a: SV::new(),\r\n        b: SV::new()\r\n    });\r\n}\r\n```\r\n\r\ngives:\r\n```asm\r\nexample::foo:\r\n        sub     rsp, 680\r\n        xorps   xmm0, xmm0\r\n        movaps  xmmword ptr [rsp], xmm0\r\n        movaps  xmmword ptr [rsp + 336], xmm0\r\n        mov     rsi, rsp\r\n        mov     edx, 672\r\n        call    qword ptr [rip + memcpy@GOTPCREL]\r\n        add     rsp, 680\r\n        ret\r\n```\r\nvs  moving capacity to the end of the struct:\r\n```asm\r\nexample::foo:\r\n        mov     qword ptr [rdi], 0\r\n        xorps   xmm0, xmm0\r\n        movups  xmmword ptr [rdi + 328], xmm0\r\n        mov     qword ptr [rdi + 664], 0\r\n        ret\r\n```\r\n\r\nThe problem is reproducible with C++ so I'll file a new llvm bug too.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58082/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58082/timeline", "performed_via_github_app": null, "state_reason": null}