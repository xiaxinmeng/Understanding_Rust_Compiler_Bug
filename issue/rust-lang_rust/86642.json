{"url": "https://api.github.com/repos/rust-lang/rust/issues/86642", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86642/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86642/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86642/events", "html_url": "https://github.com/rust-lang/rust/issues/86642", "id": 930611808, "node_id": "MDU6SXNzdWU5MzA2MTE4MDg=", "number": 86642, "title": "Error using `impl_trait_in_bindings`", "user": {"login": "TomerAberbach", "id": 23299544, "node_id": "MDQ6VXNlcjIzMjk5NTQ0", "avatar_url": "https://avatars.githubusercontent.com/u/23299544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomerAberbach", "html_url": "https://github.com/TomerAberbach", "followers_url": "https://api.github.com/users/TomerAberbach/followers", "following_url": "https://api.github.com/users/TomerAberbach/following{/other_user}", "gists_url": "https://api.github.com/users/TomerAberbach/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomerAberbach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomerAberbach/subscriptions", "organizations_url": "https://api.github.com/users/TomerAberbach/orgs", "repos_url": "https://api.github.com/users/TomerAberbach/repos", "events_url": "https://api.github.com/users/TomerAberbach/events{/privacy}", "received_events_url": "https://api.github.com/users/TomerAberbach/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472505091, "node_id": "MDU6TGFiZWwxNDcyNTA1MDkx", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-impl_trait_in_bindings", "name": "F-impl_trait_in_bindings", "color": "f9c0cc", "default": false, "description": "`#![feature(impl_trait_in_bindings)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-06-26T04:22:11Z", "updated_at": "2021-07-23T15:14:54Z", "closed_at": "2021-07-23T15:14:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\n#![feature(impl_trait_in_bindings)]\r\n#![allow(incomplete_features)]\r\n\r\nmacro_rules! seq {\r\n    ($( $x:expr ),*) => {\r\n        move |source| {\r\n            $(\r\n                let source = $x(source)?;\r\n            )*\r\n            Ok(source)\r\n        }\r\n    };\r\n}\r\n\r\nmacro_rules! alt {\r\n    ($first:expr, $( $rest:expr ),*) => {\r\n        move |source| {\r\n            let res = $first(source);\r\n            $(\r\n                let res = res.or($rest(source));\r\n            )*\r\n            res\r\n        }\r\n    };\r\n}\r\n\r\nstatic x: impl Fn(&str) -> Result<&str, ()> = alt!(seq!(), seq!());\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.54.0-nightly (ed597e7e1 2021-06-08)\r\nbinary: rustc\r\ncommit-hash: ed597e7e19d0fe716d9f81b1e840a5abbfd7c28d\r\ncommit-date: 2021-06-08\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.54.0-nightly\r\nLLVM version: 12.0.1\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0282]: type annotations needed for `Result<&str, E>`\r\n  --> src/lib.rs:10:13\r\n   |\r\n10 |             Ok(source)\r\n   |             ^^ cannot infer type for type parameter `E` declared on the enum `Result`\r\n...\r\n18 |             let res = $first(source);\r\n   |                 --- consider giving `res` the explicit type `Result<&str, E>`, where the type parameter `E` is specified\r\n...\r\n27 | static x: impl Fn(&str) -> Result<&str, ()> = alt!(seq!(), seq!());\r\n   |                                                    ------ in this macro invocation\r\n   |\r\n   = note: this error originates in the macro `seq` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: internal compiler error: compiler/rustc_mir/src/borrow_check/universal_regions.rs:533:26: expected defining type for `DefId(0:8 ~ playground[61eb]::x::{closure#0}::{closure#0})`: `[type error]`\r\n  --> src/lib.rs:6:9\r\n   |\r\n6  | /         move |source| {\r\n7  | |             $(\r\n8  | |                 let source = $x(source)?;\r\n9  | |             )*\r\n10 | |             Ok(source)\r\n11 | |         }\r\n   | |_________^\r\n...\r\n27 |   static x: impl Fn(&str) -> Result<&str, ()> = alt!(seq!(), seq!());\r\n   |                                                      ------ in this macro invocation\r\n   |\r\n   = note: this error: internal compiler error originates in the macro `seq` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/e6b4c252ea33e9f80ab8b8d7b3f6393e54166127/compiler/rustc_errors/src/lib.rs:953:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: std::panic::panic_any\r\n   2: rustc_errors::HandlerInner::span_bug\r\n   3: rustc_errors::Handler::span_bug\r\n   4: rustc_middle::ty::context::tls::with_opt\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt\r\n   6: rustc_middle::util::bug::span_bug_fmt\r\n   7: rustc_mir::borrow_check::universal_regions::UniversalRegions::new\r\n   8: rustc_mir::borrow_check::nll::replace_regions_in_mir\r\n   9: rustc_mir::borrow_check::do_mir_borrowck\r\n  10: rustc_infer::infer::InferCtxtBuilder::enter\r\n  11: rustc_mir::borrow_check::mir_borrowck\r\n  12: core::ops::function::FnOnce::call_once\r\n  13: rustc_query_system::query::plumbing::get_query_impl\r\n  14: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_borrowck\r\n  15: rustc_typeck::collect::type_of::find_opaque_ty_constraints::ConstraintLocator::check\r\n  16: <rustc_typeck::collect::type_of::find_opaque_ty_constraints::ConstraintLocator as rustc_hir::intravisit::Visitor>::visit_expr\r\n  17: rustc_hir::intravisit::walk_expr\r\n  18: rustc_hir::intravisit::walk_local\r\n  19: rustc_hir::intravisit::walk_block\r\n  20: rustc_hir::intravisit::Visitor::visit_nested_body\r\n  21: rustc_hir::intravisit::walk_expr\r\n  22: rustc_hir::intravisit::Visitor::visit_nested_body\r\n  23: rustc_typeck::collect::type_of::type_of\r\n  24: rustc_query_system::query::plumbing::get_query_impl\r\n  25: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::type_of\r\n  26: <rustc_trait_selection::traits::query::normalize::QueryNormalizer as rustc_middle::ty::fold::TypeFolder>::fold_ty\r\n  27: <rustc_infer::infer::at::At as rustc_trait_selection::traits::query::normalize::AtExt>::normalize\r\n  28: rustc_infer::infer::InferCtxtBuilder::enter\r\n  29: core::ops::function::FnOnce::call_once\r\n  30: rustc_query_system::query::plumbing::get_query_impl\r\n  31: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::normalize_generic_arg_after_erasing_regions\r\n  32: <rustc_middle::ty::normalize_erasing_regions::NormalizeAfterErasingRegionsFolder as rustc_middle::ty::fold::TypeFolder>::fold_ty\r\n  33: <rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt> as rustc_target::abi::LayoutOf>::layout_of\r\n  34: rustc_typeck::check::check::check_static_inhabited\r\n  35: rustc_typeck::check::check::check_item_type\r\n  36: rustc_middle::hir::map::Map::visit_item_likes_in_module\r\n  37: rustc_typeck::check::check::check_mod_item_types\r\n  38: rustc_query_system::query::plumbing::get_query_impl\r\n  39: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::check_mod_item_types\r\n  40: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  41: rustc_typeck::check_crate\r\n  42: rustc_interface::passes::analysis\r\n  43: rustc_query_system::query::plumbing::get_query_impl\r\n  44: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  45: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  46: rustc_span::with_source_map\r\n  47: rustc_interface::interface::create_compiler_and_run\r\n  48: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.55.0-nightly (e6b4c252e 2021-06-25) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [mir_borrowck] borrow-checking `x::{closure#0}::{closure#0}`\r\n#1 [type_of] computing type of `x::{opaque#0}`\r\n#2 [normalize_generic_arg_after_erasing_regions] normalizing `impl for<'r> std::ops::Fn<(&'r str,)>`\r\n#3 [check_mod_item_types] checking item types in top-level module\r\n#4 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to 2 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0282`.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86642/timeline", "performed_via_github_app": null, "state_reason": "completed"}