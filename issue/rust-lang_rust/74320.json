{"url": "https://api.github.com/repos/rust-lang/rust/issues/74320", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74320/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74320/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74320/events", "html_url": "https://github.com/rust-lang/rust/issues/74320", "id": 656566787, "node_id": "MDU6SXNzdWU2NTY1NjY3ODc=", "number": 74320, "title": "WebAssembly backend doesn't inline normal functions into SIMD functions", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 474645165, "node_id": "MDU6TGFiZWw0NzQ2NDUxNjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-wasm", "name": "O-wasm", "color": "6e6ec0", "default": false, "description": "Target: WASM (WebAssembly), http://webassembly.org/"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-14T12:15:32Z", "updated_at": "2021-03-19T15:14:52Z", "closed_at": "2021-03-19T15:14:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[Upstream LLVM bug](https://bugs.llvm.org/show_bug.cgi?id=46812)\r\n\r\nGiven a program such as:\r\n\r\n```rust\r\n#![feature(wasm_target_feature)]\r\n\r\n#[target_feature(enable = \"simd128\")]\r\n#[no_mangle]\r\npub unsafe extern \"C\" fn bar() {\r\n    inline_me();\r\n}\r\n\r\nfn inline_me() {\r\n    unsafe { foo() } // or anything else that's \"side effectful\"\r\n}\r\n\r\nextern \"C\" {\r\n    fn foo();\r\n}\r\n```\r\n\r\nLLVM generates this IR:\r\n\r\n```\r\n$ rustc +nightly foo.rs --target wasm32-unknown-unknown --crate-type cdylib --emit llvm-ir -O\r\n$ cat foo.ll\r\n; ModuleID = 'foo.3a1fbbbh-cgu.0'\r\nsource_filename = \"foo.3a1fbbbh-cgu.0\"\r\ntarget datalayout = \"e-m:e-p:32:32-i64:64-n32:64-S128\"\r\ntarget triple = \"wasm32-unknown-unknown\"\r\n\r\n; Function Attrs: nounwind\r\ndefine void @bar() unnamed_addr #0 {\r\nstart:\r\n; call foo::inline_me\r\n  tail call fastcc void @_ZN3foo9inline_me17h0a001429f3373a4bE()\r\n  ret void\r\n}\r\n\r\n; foo::inline_me\r\n; Function Attrs: nounwind\r\ndefine internal fastcc void @_ZN3foo9inline_me17h0a001429f3373a4bE() unnamed_addr #1 {\r\nstart:\r\n  tail call void @foo()\r\n  ret void\r\n}\r\n\r\n; Function Attrs: nounwind\r\ndeclare void @foo() unnamed_addr #1\r\n\r\nattributes #0 = { nounwind \"target-cpu\"=\"generic\" \"target-features\"=\"+simd128\" }\r\nattributes #1 = { nounwind \"target-cpu\"=\"generic\" }\r\n```\r\n\r\nHere the `inline_me` function is not inlined in to `bar`, even though it should be a candidate for doing so. This is a bug in LLVM rather than rustc, but I wanted to file an issue here since I'm about to write documentation referencing this issue. I also figured it's good for us to track this at least!", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74320/timeline", "performed_via_github_app": null, "state_reason": "completed"}