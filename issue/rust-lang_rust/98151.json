{"url": "https://api.github.com/repos/rust-lang/rust/issues/98151", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98151/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98151/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98151/events", "html_url": "https://github.com/rust-lang/rust/issues/98151", "id": 1272813096, "node_id": "I_kwDOAAsO6M5L3ZYo", "number": 98151, "title": "riscv codegen oddity: emits (hopefully no-op) signext for a u32 param.", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1210355734, "node_id": "MDU6TGFiZWwxMjEwMzU1NzM0", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-riscv", "name": "O-riscv", "color": "6e6ec0", "default": false, "description": "Target: RISC-V architecture"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-06-15T22:22:12Z", "updated_at": "2022-07-03T07:26:21Z", "closed_at": "2022-07-03T07:23:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n// compile-flags: --target riscv64gc-unknown-none-elf -C no-prepopulate-passes --emit=llvm-ir\r\n\r\n#![feature(no_core, lang_items)]\r\n#![crate_type = \"lib\"]\r\n#![no_std]\r\n#![no_core]\r\n\r\n#[lang=\"sized\"] trait Sized { }\r\n#[lang=\"freeze\"] trait Freeze { }\r\n#[lang=\"copy\"] trait Copy { }\r\n\r\n#[no_mangle] pub extern \"C\" fn c_arg_u8(_a: u8) { }\r\n#[no_mangle] pub extern \"C\" fn c_arg_u16(_a: u16) { }\r\n#[no_mangle] pub extern \"C\" fn c_arg_u32(_a: u32) { }\r\n#[no_mangle] pub extern \"C\" fn c_arg_u64(_a: u64) { }\r\n\r\n#[no_mangle] pub extern \"C\" fn c_ret_u8() -> u8 { 0 }\r\n#[no_mangle] pub extern \"C\" fn c_ret_u16() -> u16 { 0 }\r\n#[no_mangle] pub extern \"C\" fn c_ret_u32() -> u32 { 0 }\r\n#[no_mangle] pub extern \"C\" fn c_ret_u64() -> u64 { 0 }\r\n\r\n#[no_mangle] pub extern \"C\" fn c_ret_i8() -> i8 { 0 }\r\n#[no_mangle] pub extern \"C\" fn c_ret_i16() -> i16 { 0 }\r\n#[no_mangle] pub extern \"C\" fn c_ret_i32() -> i32 { 0 }\r\n#[no_mangle] pub extern \"C\" fn c_ret_i64() -> i64 { 0 }\r\n```\r\n\r\nNote the compile flags; thus I invoked the compiler like so:\r\n\r\n```sh\r\n% rustc +nightly --target riscv64gc-unknown-none-elf -C no-prepopulate-passes demo.rs --emit=llvm-ir\r\n```\r\n\r\nI expected to see this happen: \r\n\r\nSemi-uniform handling of unsigned and signed extension of the arguments/return values. Namely, I would expect `uN` types to be (at most) zero-extended, and `iN` types to be (at most) signed-extended.\r\n\r\nInstead, this happened:  The u32 handling emits a signext attribute, like so:\r\n\r\n```llvm-ir\r\n\r\n; Function Attrs: nounwind\r\ndefine dso_local void @c_arg_u32(i32 signext %_a) unnamed_addr #0 {\r\nstart:\r\n  ret void\r\n}\r\n\r\n...\r\n\r\n; Function Attrs: nounwind\r\ndefine dso_local signext i32 @c_ret_u32() unnamed_addr #0 {\r\nstart:\r\n  ret i32 0\r\n}\r\n```\r\n\r\n I *think* this ends up acting as having no effect, but its weird nonetheless to have it there.\r\n\r\n", "closed_by": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98151/timeline", "performed_via_github_app": null, "state_reason": "completed"}