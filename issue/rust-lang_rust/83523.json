{"url": "https://api.github.com/repos/rust-lang/rust/issues/83523", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83523/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83523/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83523/events", "html_url": "https://github.com/rust-lang/rust/issues/83523", "id": 842206986, "node_id": "MDU6SXNzdWU4NDIyMDY5ODY=", "number": 83523, "title": "Internal Compiler Error: Nightly, Rocket, Diesel", "user": {"login": "casperin", "id": 99103, "node_id": "MDQ6VXNlcjk5MTAz", "avatar_url": "https://avatars.githubusercontent.com/u/99103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/casperin", "html_url": "https://github.com/casperin", "followers_url": "https://api.github.com/users/casperin/followers", "following_url": "https://api.github.com/users/casperin/following{/other_user}", "gists_url": "https://api.github.com/users/casperin/gists{/gist_id}", "starred_url": "https://api.github.com/users/casperin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/casperin/subscriptions", "organizations_url": "https://api.github.com/users/casperin/orgs", "repos_url": "https://api.github.com/users/casperin/repos", "events_url": "https://api.github.com/users/casperin/events{/privacy}", "received_events_url": "https://api.github.com/users/casperin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2021-03-26T18:29:37Z", "updated_at": "2021-05-02T02:42:14Z", "closed_at": "2021-05-02T02:42:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Played around with Rocket yesterday, and today when I tried to run/compile the same program, I got a compiler error. It is my first time on Nightly and I don't really know what to look for when searching if others have already reported it. Just reporting this, in case it is helpful for you in some way.\r\n\r\n### Code\r\n\r\nIn the error it refers to line 17. That's the `#[database(\"postgres\")]` line. The db is running, and I have not made any changes to it since the program was running last time.\r\n\r\n```Rust\r\n#![feature(proc_macro_hygiene, decl_macro)]\r\n\r\n#[macro_use]\r\nextern crate rocket;\r\n#[macro_use]\r\nextern crate diesel;\r\n\r\nmod schema;\r\n\r\nuse crate::schema::companies;\r\nuse diesel::prelude::*;\r\nuse diesel::{Insertable, Queryable};\r\nuse rocket_contrib::databases::{database, diesel::PgConnection};\r\nuse rocket_contrib::json::Json;\r\nuse serde_derive::{Deserialize, Serialize};\r\n\r\n#[database(\"postgres\")]\r\nstruct DbConn(PgConnection);\r\n\r\n#[derive(Queryable, Serialize, Deserialize)]\r\nstruct Company {\r\n    id: i32,\r\n    name: String,\r\n}\r\n\r\n#[derive(Insertable, Deserialize)]\r\n#[table_name = \"companies\"]\r\nstruct NewCompany {\r\n    name: String,\r\n}\r\n\r\n#[get(\"/\", format = \"application/json\")]\r\nfn get_companies(conn: DbConn) -> Json<Vec<Company>> {\r\n    let companies = companies::table\r\n        .order(companies::id.desc())\r\n        .load::<Company>(&*conn)\r\n        .unwrap();\r\n    Json(companies)\r\n}\r\n\r\n#[post(\"/\", data = \"<new_company>\", format = \"application/json\")]\r\nfn create_company(conn: DbConn, new_company: Json<NewCompany>) -> Json<Company> {\r\n    let result = diesel::insert_into(companies::table)\r\n        .values(&new_company.0)\r\n        .get_result(&*conn)\r\n        .unwrap();\r\n    Json(result)\r\n}\r\n\r\n#[put(\"/\", data = \"<company>\", format = \"application/json\")]\r\nfn edit_company(conn: DbConn, company: Json<Company>) -> Json<Company> {\r\n    let target = companies::table.find(company.id);\r\n    //.filter(companies::columns::id.eq(company.id));\r\n    let result = diesel::update(target)\r\n        .set(companies::columns::name.eq(&company.name))\r\n        .get_result(&*conn)\r\n        .unwrap();\r\n    Json(result)\r\n}\r\n\r\n#[get(\"/\")]\r\nfn index() -> &'static str {\r\n    \"Hello, world!\"\r\n}\r\n\r\n#[get(\"/<name>\")]\r\nfn hello(name: String) -> String {\r\n    format!(\"Hello, {}!\", name)\r\n}\r\n\r\nfn main() {\r\n    rocket::ignite()\r\n        .attach(DbConn::fairing())\r\n        .mount(\"/hello\", routes![index, hello])\r\n        .mount(\r\n            \"/companies\",\r\n            routes![get_companies, create_company, edit_company],\r\n        )\r\n        .launch();\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.53.0-nightly (07e0e2ec2 2021-03-24)\r\nbinary: rustc\r\ncommit-hash: 07e0e2ec268c140e607e1ac7f49f145612d0f597\r\ncommit-date: 2021-03-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.53.0-nightly\r\nLLVM version: 12.0.\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling movei v0.1.0 (/home/g/code/movei/rust_01)\r\nthread 'rustc' panicked at 'found unstable fingerprints for predicates_of(core[3998]::ops::deref::Deref): GenericPredicates { parent: None, predicates: [(Binder(TraitPredicate(<Self as std::ops::Deref>)), /home/g/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/deref.rs:64:1: 64:16 (#0))] }', /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597/compiler/rustc_query_system/src/query/plumbing.rs:593:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (07e0e2ec2 2021-03-24) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [predicates_of] computing predicates of `std::ops::Deref`\r\n#1 [check_item_well_formed] checking that `<impl at src/main.rs:17:1: 17:24>` is well-formed\r\nend of query stack\r\nthread 'rustc' panicked at 'found unstable fingerprints for predicates_of(core[3998]::ops::deref::DerefMut): GenericPredicates { parent: None, predicates: [(Binder(TraitPredicate(<Self as std::ops::Deref>)), /home/g/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/deref.rs:170:21: 170:26 (#0)), (Binder(TraitPredicate(<Self as std::ops::DerefMut>)), /home/g/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/deref.rs:170:1: 170:26 (#0))] }', /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597/compiler/rustc_query_system/src/query/plumbing.rs:593:5\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (07e0e2ec2 2021-03-24) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [predicates_of] computing predicates of `std::ops::DerefMut`\r\n#1 [check_item_well_formed] checking that `<impl at src/main.rs:17:1: 17:24>` is well-formed\r\nend of query stack\r\nthread 'rustc' panicked at 'found unstable fingerprints for predicates_of(core[3998]::marker::Sized): GenericPredicates { parent: None, predicates: [(Binder(TraitPredicate(<Self as std::marker::Sized>)), /home/g/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:92:1: 92:16 (#0))] }', /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597/compiler/rustc_query_system/src/query/plumbing.rs:593:5\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (07e0e2ec2 2021-03-24) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [predicates_of] computing predicates of `std::marker::Sized`\r\n#1 [check_item_well_formed] checking that `_impl_queryable_for_company::<impl at src/main.rs:20:10: 20:19>` is well-formed\r\nend of query stack\r\nerror: could not compile `movei`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   Compiling movei v0.1.0 (/home/g/code/movei/rust_01)\r\nthread 'rustc' panicked at 'found unstable fingerprints for predicates_of(core[3998]::ops::deref::Deref): GenericPredicates { parent: None, predicates: [(Binder(TraitPredicate(<Self as std::ops::Deref>)), /home/g/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/deref.rs:64:1: 64:16 (#0))] }', /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597/compiler/rustc_query_system/src/query/plumbing.rs:593:5\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597/library/std/src/panicking.rs:493:5\r\n   1: std::panicking::begin_panic_fmt\r\n             at /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597/library/std/src/panicking.rs:435:5\r\n   2: rustc_query_system::query::plumbing::incremental_verify_ich\r\n   3: rustc_query_system::query::plumbing::load_from_disk_and_cache_in_memory\r\n   4: rustc_query_system::query::plumbing::get_query_impl\r\n   5: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::predicates_of\r\n   6: rustc_trait_selection::traits::wf::WfPredicates::nominal_obligations\r\n   7: rustc_trait_selection::traits::wf::WfPredicates::compute_trait_ref\r\n   8: rustc_trait_selection::traits::wf::trait_obligations\r\n   9: rustc_infer::infer::InferCtxtBuilder::enter\r\n  10: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  11: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  12: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  13: rustc_query_system::query::plumbing::force_query_with_job\r\n  14: rustc_query_system::query::plumbing::get_query_impl\r\n  15: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::check_item_well_formed\r\n  16: <rustc_typeck::check::wfcheck::CheckTypeWellFormedVisitor as rustc_hir::intravisit::Visitor>::visit_item\r\n  17: rustc_data_structures::sync::par_for_each_in\r\n  18: rustc_hir::hir::Crate::par_visit_all_item_likes\r\n  19: rustc_session::session::Session::track_errors\r\n  20: rustc_typeck::check_crate\r\n  21: rustc_interface::passes::analysis\r\n  22: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  23: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  24: rustc_data_structures::stack::ensure_sufficient_stack\r\n  25: rustc_query_system::query::plumbing::force_query_with_job\r\n  26: rustc_query_system::query::plumbing::get_query_impl\r\n  27: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  28: rustc_interface::passes::QueryContext::enter\r\n  29: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  30: rustc_span::with_source_map\r\n  31: rustc_interface::interface::create_compiler_and_run\r\n  32: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (07e0e2ec2 2021-03-24) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [predicates_of] computing predicates of `std::ops::Deref`\r\n#1 [check_item_well_formed] checking that `<impl at src/main.rs:17:1: 17:24>` is well-formed\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nthread 'rustc' panicked at 'found unstable fingerprints for predicates_of(core[3998]::ops::deref::DerefMut): GenericPredicates { parent: None, predicates: [(Binder(TraitPredicate(<Self as std::ops::Deref>)), /home/g/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/deref.rs:170:21: 170:26 (#0)), (Binder(TraitPredicate(<Self as std::ops::DerefMut>)), /home/g/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/deref.rs:170:1: 170:26 (#0))] }', /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597/compiler/rustc_query_system/src/query/plumbing.rs:593:5\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597/library/std/src/panicking.rs:493:5\r\n   1: std::panicking::begin_panic_fmt\r\n             at /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597/library/std/src/panicking.rs:435:5\r\n   2: rustc_query_system::query::plumbing::incremental_verify_ich\r\n   3: rustc_query_system::query::plumbing::load_from_disk_and_cache_in_memory\r\n   4: rustc_query_system::query::plumbing::get_query_impl\r\n   5: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::predicates_of\r\n   6: rustc_trait_selection::traits::wf::WfPredicates::nominal_obligations\r\n   7: rustc_trait_selection::traits::wf::WfPredicates::compute_trait_ref\r\n   8: rustc_trait_selection::traits::wf::trait_obligations\r\n   9: rustc_infer::infer::InferCtxtBuilder::enter\r\n  10: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  11: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  12: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  13: rustc_query_system::query::plumbing::force_query_with_job\r\n  14: rustc_query_system::query::plumbing::get_query_impl\r\n  15: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::check_item_well_formed\r\n  16: <rustc_typeck::check::wfcheck::CheckTypeWellFormedVisitor as rustc_hir::intravisit::Visitor>::visit_item\r\n  17: rustc_data_structures::sync::par_for_each_in\r\n  18: rustc_hir::hir::Crate::par_visit_all_item_likes\r\n  19: rustc_session::session::Session::track_errors\r\n  20: rustc_typeck::check_crate\r\n  21: rustc_interface::passes::analysis\r\n  22: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  23: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  24: rustc_data_structures::stack::ensure_sufficient_stack\r\n  25: rustc_query_system::query::plumbing::force_query_with_job\r\n  26: rustc_query_system::query::plumbing::get_query_impl\r\n  27: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  28: rustc_interface::passes::QueryContext::enter\r\n  29: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  30: rustc_span::with_source_map\r\n  31: rustc_interface::interface::create_compiler_and_run\r\n  32: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (07e0e2ec2 2021-03-24) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [predicates_of] computing predicates of `std::ops::DerefMut`\r\n#1 [check_item_well_formed] checking that `<impl at src/main.rs:17:1: 17:24>` is well-formed\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nthread 'rustc' panicked at 'found unstable fingerprints for predicates_of(core[3998]::marker::Sized): GenericPredicates { parent: None, predicates: [(Binder(TraitPredicate(<Self as std::marker::Sized>)), /home/g/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:92:1: 92:16 (#0))] }', /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597/compiler/rustc_query_system/src/query/plumbing.rs:593:5\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597/library/std/src/panicking.rs:493:5\r\n   1: std::panicking::begin_panic_fmt\r\n             at /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597/library/std/src/panicking.rs:435:5\r\n   2: rustc_query_system::query::plumbing::incremental_verify_ich\r\n   3: rustc_query_system::query::plumbing::load_from_disk_and_cache_in_memory\r\n   4: rustc_query_system::query::plumbing::get_query_impl\r\n   5: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::predicates_of\r\n   6: rustc_trait_selection::traits::wf::WfPredicates::nominal_obligations\r\n   7: rustc_trait_selection::traits::wf::WfPredicates::compute_trait_ref\r\n   8: rustc_trait_selection::traits::wf::predicate_obligations\r\n   9: rustc_typeck::check::wfcheck::check_where_clauses\r\n  10: rustc_infer::infer::InferCtxtBuilder::enter\r\n  11: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  12: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  13: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  14: rustc_query_system::query::plumbing::force_query_with_job\r\n  15: rustc_query_system::query::plumbing::get_query_impl\r\n  16: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::check_item_well_formed\r\n  17: <rustc_typeck::check::wfcheck::CheckTypeWellFormedVisitor as rustc_hir::intravisit::Visitor>::visit_item\r\n  18: rustc_data_structures::sync::par_for_each_in\r\n  19: rustc_hir::hir::Crate::par_visit_all_item_likes\r\n  20: rustc_session::session::Session::track_errors\r\n  21: rustc_typeck::check_crate\r\n  22: rustc_interface::passes::analysis\r\n  23: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  24: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  25: rustc_data_structures::stack::ensure_sufficient_stack\r\n  26: rustc_query_system::query::plumbing::force_query_with_job\r\n  27: rustc_query_system::query::plumbing::get_query_impl\r\n  28: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  29: rustc_interface::passes::QueryContext::enter\r\n  30: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  31: rustc_span::with_source_map\r\n  32: rustc_interface::interface::create_compiler_and_run\r\n  33: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (07e0e2ec2 2021-03-24) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [predicates_of] computing predicates of `std::marker::Sized`\r\n#1 [check_item_well_formed] checking that `_impl_queryable_for_company::<impl at src/main.rs:20:10: 20:19>` is well-formed\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: could not compile `movei`\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83523/timeline", "performed_via_github_app": null, "state_reason": "completed"}