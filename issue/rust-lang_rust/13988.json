{"url": "https://api.github.com/repos/rust-lang/rust/issues/13988", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/13988/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/13988/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/13988/events", "html_url": "https://github.com/rust-lang/rust/issues/13988", "id": 32920436, "node_id": "MDU6SXNzdWUzMjkyMDQzNg==", "number": 13988, "title": "auto-borrow and consistent behavior of pointers", "user": {"login": "oblitum", "id": 1269815, "node_id": "MDQ6VXNlcjEyNjk4MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1269815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oblitum", "html_url": "https://github.com/oblitum", "followers_url": "https://api.github.com/users/oblitum/followers", "following_url": "https://api.github.com/users/oblitum/following{/other_user}", "gists_url": "https://api.github.com/users/oblitum/gists{/gist_id}", "starred_url": "https://api.github.com/users/oblitum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oblitum/subscriptions", "organizations_url": "https://api.github.com/users/oblitum/orgs", "repos_url": "https://api.github.com/users/oblitum/repos", "events_url": "https://api.github.com/users/oblitum/events{/privacy}", "received_events_url": "https://api.github.com/users/oblitum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-06T18:40:35Z", "updated_at": "2015-01-23T04:15:29Z", "closed_at": "2015-01-23T04:15:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "auto-deref has been added but I'm still interested in a more uniform behavior of custom pointers (meaning the ones that exist by trait implementation) and native ones (like the dying `~T`).\n\n[An example situation](https://github.com/mozilla/rust/pull/12610#issuecomment-37586877):\n\n``` rust\nuse std::rc::Rc;\n\nstruct Bar { x: int }\n\nfn foo(p: &int) {\n    println!(\"{}\", p);\n}\n\nfn baz(p: &Bar) {\n    println!(\"{}\", p.x);\n}\n\nfn main() {\n    let pi = box 10;\n    let pb = Rc::new(Bar {x: 3});\n    foo(pi);\n    // this still doesn't auto borrow:\n    //baz(pb);\n    // although this works:\n    println!(\"{}\", pb.x);\n}\n```\n\nI've looked in  #7141, #12491, #13542, #5527, #12825, #12610 and [RFC 59](https://github.com/rust-lang/rfcs/pull/59) but could not grasp whether any would be addressing this or whether it's desirable, sorry if it's a duplicate.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/13988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/13988/timeline", "performed_via_github_app": null, "state_reason": "completed"}