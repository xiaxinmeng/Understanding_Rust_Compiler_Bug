{"url": "https://api.github.com/repos/rust-lang/rust/issues/47174", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47174/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47174/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47174/events", "html_url": "https://github.com/rust-lang/rust/issues/47174", "id": 285919749, "node_id": "MDU6SXNzdWUyODU5MTk3NDk=", "number": 47174, "title": "Stabilize -Z sanitize", "user": {"login": "Firstyear", "id": 271005, "node_id": "MDQ6VXNlcjI3MTAwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/271005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Firstyear", "html_url": "https://github.com/Firstyear", "followers_url": "https://api.github.com/users/Firstyear/followers", "following_url": "https://api.github.com/users/Firstyear/following{/other_user}", "gists_url": "https://api.github.com/users/Firstyear/gists{/gist_id}", "starred_url": "https://api.github.com/users/Firstyear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Firstyear/subscriptions", "organizations_url": "https://api.github.com/users/Firstyear/orgs", "repos_url": "https://api.github.com/users/Firstyear/repos", "events_url": "https://api.github.com/users/Firstyear/events{/privacy}", "received_events_url": "https://api.github.com/users/Firstyear/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 630870359, "node_id": "MDU6TGFiZWw2MzA4NzAzNTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-sanitizers", "name": "A-sanitizers", "color": "f7e101", "default": false, "description": "Area: Sanitizers for correctness and code quality."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-01-04T09:02:30Z", "updated_at": "2021-10-08T11:31:28Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI would really like to see -Z sanitize options available in stable rust. \r\n\r\nToday they are available in nightly. I have used them for 6 months in the 389 Directory Server project in a production ldap environment as part of the code IO event path. I have exercise the leak and address sanitize options extensively, used them to find many FFI safety issues, and tested multiple build types (exec, dylib, more).\r\n\r\nThe sanitizer support is very important for FFI assertions during development where a code base uses Rust and C in some form. It allows strict analysis of behaviour, and finding where items are not droped for example.\r\n\r\nAn important reason for inclusion in stable is *distributions*. As a project, we often have the requirement to build debug builds with the compiler that ships in a distribution to reproduce problems. That means rustc stable that ships in products like fedora or RHEL. \r\n\r\nIf -Z sanitize isn't in stable, we can't achieve this - and this adds a barrier to adoption. It adds a hurdle to our community inclusiveness as potential developers have more complex steps to follow to create a dev environment. I want to say \"dnf install -y cargo rustc ...\" and someone should be able to work. \r\n\r\nMany people have put a lot of time into sanitizer support, and today it's locked behind nightly. :( \r\n\r\nI would love to see this in stable as it brings great run-time analysis features to rust especially for FFI use cases, and having paths to stabilise debugging options into stable rustc will strongly aid adoptions of rust in distributions of linux. It's an advertised feature of the language on email lists, so to have this accessible to anyone would be a huge benefit.\r\n\r\nI'm happy to do the coding to enable this, as well as documentation and examples, but I need some help and guidance to achieve this,\r\n\r\nThanks, \r\n\r\nSee also:\r\n\r\nhttps://github.com/rust-lang/rfcs/issues/670\r\nhttps://github.com/rust-lang/rust/pull/42711\r\nhttps://users.rust-lang.org/t/howto-sanitize-your-rust-code/9378\r\n\r\n  ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47174/reactions", "total_count": 12, "+1": 12, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47174/timeline", "performed_via_github_app": null, "state_reason": null}