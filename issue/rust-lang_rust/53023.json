{"url": "https://api.github.com/repos/rust-lang/rust/issues/53023", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53023/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53023/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53023/events", "html_url": "https://github.com/rust-lang/rust/issues/53023", "id": 347353731, "node_id": "MDU6SXNzdWUzNDczNTM3MzE=", "number": 53023, "title": "checked_mul<i128> is slower than expected", "user": {"login": "sDessens", "id": 7544552, "node_id": "MDQ6VXNlcjc1NDQ1NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/7544552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sDessens", "html_url": "https://github.com/sDessens", "followers_url": "https://api.github.com/users/sDessens/followers", "following_url": "https://api.github.com/users/sDessens/following{/other_user}", "gists_url": "https://api.github.com/users/sDessens/gists{/gist_id}", "starred_url": "https://api.github.com/users/sDessens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sDessens/subscriptions", "organizations_url": "https://api.github.com/users/sDessens/orgs", "repos_url": "https://api.github.com/users/sDessens/repos", "events_url": "https://api.github.com/users/sDessens/events{/privacy}", "received_events_url": "https://api.github.com/users/sDessens/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-08-03T11:02:30Z", "updated_at": "2023-04-05T17:36:54Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "checked_mul\\<i128> is 200x slower than a normal multiply\r\nchecked_mul\\<u128> is 10x slower than a normal multiply\r\n\r\n\r\nToolchain version according to rustup:\r\n```\r\nactive toolchain\r\n----------------\r\n\r\nnightly-x86_64-unknown-linux-gnu (default)\r\nrustc 1.30.0-nightly (7e8ca9f8b 2018-08-03)\r\n```\r\n\r\nbenchmark:\r\n```rust\r\n#![feature(test)]\r\n\r\nextern crate rand;\r\nextern crate test;\r\nextern crate trading_engine_rust;\r\n\r\nuse self::test::{black_box, Bencher};\r\n\r\n#[bench]\r\nfn plain_mul_i128(b: &mut Bencher) {\r\n    // multiply two \"random\" vectors of length 100 to defeat the optimizer\r\n    let left: Vec<i128> = (0..100).collect();\r\n    let right: Vec<i128> = (1..101).collect();\r\n\r\n    b.iter(||{\r\n        for (left, right) in left.iter().zip(right.iter()) {\r\n            black_box(left * right);\r\n        }\r\n    });\r\n}\r\n\r\n#[bench]\r\nfn plain_mul_u128(b: &mut Bencher) {\r\n    let left: Vec<u128> = (0..100).collect();\r\n    let right: Vec<u128> = (1..101).collect();\r\n\r\n    b.iter(||{\r\n        for (left, right) in left.iter().zip(right.iter()) {\r\n            black_box(left * right);\r\n        }\r\n    });\r\n}\r\n\r\n#[bench]\r\nfn plain_mul_i64(b: &mut Bencher) {\r\n    let left: Vec<i64> = (0..100).collect();\r\n    let right: Vec<i64> = (1..101).collect();\r\n\r\n    b.iter(||{\r\n        for (left, right) in left.iter().zip(right.iter()) {\r\n            black_box(left * right);\r\n        }\r\n    });\r\n}\r\n\r\n#[bench]\r\nfn checked_mul_i128(b: &mut Bencher) {\r\n    let left: Vec<i128> = (0..100).collect();\r\n    let right: Vec<i128> = (1..101).collect();\r\n\r\n    b.iter(||{\r\n        for (left, right) in left.iter().zip(right.iter()) {\r\n            black_box(i128::checked_mul(*left, *right).unwrap());\r\n        }\r\n    });\r\n}\r\n\r\n\r\n#[bench]\r\nfn checked_mul_u128(b: &mut Bencher) {\r\n    let left: Vec<u128> = (0..100).collect();\r\n    let right: Vec<u128> = (1..101).collect();\r\n\r\n    b.iter(||{\r\n        for (left, right) in left.iter().zip(right.iter()) {\r\n            black_box(u128::checked_mul(*left, *right).unwrap());\r\n        }\r\n    });\r\n}\r\n\r\n#[bench]\r\nfn checked_mul_i64(b: &mut Bencher) {\r\n    let left: Vec<i64> = (0..100).collect();\r\n    let right: Vec<i64> = (1..101).collect();\r\n\r\n    b.iter(||{\r\n        for (left, right) in left.iter().zip(right.iter()) {\r\n            black_box(i64::checked_mul(*left, *right).unwrap());\r\n        }\r\n    });\r\n}\r\n```\r\n\r\nSample benchmark output:\r\n```\r\nrunning 6 tests\r\ntest checked_mul_i128 ... bench:      27,858 ns/iter (+/- 3,258)\r\ntest checked_mul_i64  ... bench:          69 ns/iter (+/- 21)\r\ntest checked_mul_u128 ... bench:       1,548 ns/iter (+/- 221)\r\ntest plain_mul_i128   ... bench:         158 ns/iter (+/- 25)\r\ntest plain_mul_i64    ... bench:          71 ns/iter (+/- 3)\r\ntest plain_mul_u128   ... bench:         156 ns/iter (+/- 12)\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53023/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53023/timeline", "performed_via_github_app": null, "state_reason": null}