{"url": "https://api.github.com/repos/rust-lang/rust/issues/92279", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92279/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92279/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92279/events", "html_url": "https://github.com/rust-lang/rust/issues/92279", "id": 1088648218, "node_id": "I_kwDOAAsO6M5A43Qa", "number": 92279, "title": "thread 'rustc' panicked at 'attempted to read from stolen value: rustc_middle::mir::Body'", "user": {"login": "sportelliluciano", "id": 26290529, "node_id": "MDQ6VXNlcjI2MjkwNTI5", "avatar_url": "https://avatars.githubusercontent.com/u/26290529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sportelliluciano", "html_url": "https://github.com/sportelliluciano", "followers_url": "https://api.github.com/users/sportelliluciano/followers", "following_url": "https://api.github.com/users/sportelliluciano/following{/other_user}", "gists_url": "https://api.github.com/users/sportelliluciano/gists{/gist_id}", "starred_url": "https://api.github.com/users/sportelliluciano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sportelliluciano/subscriptions", "organizations_url": "https://api.github.com/users/sportelliluciano/orgs", "repos_url": "https://api.github.com/users/sportelliluciano/repos", "events_url": "https://api.github.com/users/sportelliluciano/events{/privacy}", "received_events_url": "https://api.github.com/users/sportelliluciano/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2021-12-25T19:47:41Z", "updated_at": "2023-05-01T08:59:44Z", "closed_at": "2023-05-01T08:59:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, while trying to build a project I hit an ICE. Unfortunately, I could not isolate the bug. It seems to be related to incremental builds because when I removed the `target` directory it started working again. I'm not providing the whole code because I couldn't reproduce the bug but I'll try to give you some context.\r\n\r\nThe project consists of three crates:\r\n - A \"traits\" crate, which provides some definitions for abstractions, some of them using `async-trait 0.1.52`\r\n - A \"filesystem driver\" crate, which contains code for parsing a raw FAT file system. This is abstracted from the underlying device through the traits defined in the first crate.\r\n - A \"main\" crate which implements a virtual disk device and uses the filesystem driver to parse its contents. This crate uses `tokio 1.15.0`.\r\n\r\nThe 'traits' crate is mostly unchanged during development. The 'main' crate has some small changes, mostly related to updates to functions and methods signatures. The 'fs' crate changes a lot.\r\n\r\nThe project is built and run through the 'main' crate. After changing some code in the 'fs' crate and trying to run the 'main' crate the compiler had an unexpected panic. I still have the `target` directory saved in case something there is useful for debugging, however, I don't know how to anonymize it so I'm not publishing it here (but you can contact me and I'll see what I can do about it).\r\n\r\n### Code\r\nThis is the code referred by the error message:\r\n\r\n```Rust\r\n#[async_trait(?Send)]\r\nimpl BlockDevice for FileDevice {   // This is src/main.rs:18\r\n    async fn read_blocks(\r\n        &mut self,\r\n        start_address: Address,\r\n        count: BlockCount,\r\n        buffer: &mut [u8],\r\n    ) -> Result<ByteCount, BlockDeviceError> {\r\n        if self\r\n            .file\r\n            .seek(SeekFrom::Start(start_address as u64))\r\n            .is_err()\r\n        {\r\n            return Err(BlockDeviceError::UnknownError);\r\n        }\r\n        let sector = self.file.read(&mut buffer[0..(count * 512)]);\r\n        if let Ok(bytes_read) = sector {\r\n            Ok(bytes_read)\r\n        } else {\r\n            Err(BlockDeviceError::UnknownError)\r\n        }\r\n    }\r\n\r\n    /// [...] docs\r\n    async fn write_blocks(\r\n        &mut self,\r\n        _start_address: Address,\r\n        _count: BlockCount,\r\n        _buffer: &[u8],\r\n    ) -> Result<ByteCount, BlockDeviceError> {\r\n        Err(BlockDeviceError::UnsupportedOperation)\r\n    }\r\n\r\n    /// [...] docs\r\n    async fn block_size(&self) -> ByteCount {\r\n        512\r\n    }\r\n} // This is src/main.rs:61\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.57.0 (f1edd0429 2021-11-29)\r\nbinary: rustc\r\ncommit-hash: f1edd0429582dd29cccacaf50fd134b05593bd9c\r\ncommit-date: 2021-11-29\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.57.0\r\nLLVM version: 13.0.0\r\n```\r\n\r\n`lsb_release -a && uname -r`:\r\n```\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 20.04.3 LTS\r\nRelease:        20.04\r\nCodename:       focal\r\n5.4.0-91-generic\r\n```\r\n\r\nDid not check nightly/beta because the bug disappeared after running `cargo clean`.\r\n\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'attempted to read from stolen value: rustc_middle::mir::Body', compiler/rustc_borrowck/src/lib.rs:133:49\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0 (f1edd0429 2021-11-29) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [mir_borrowck] borrow-checking `<impl at src/main.rs:18:1: 61:2>::read_blocks::{closure#0}`\r\nend of query stack\r\nerror: could not compile `fat-reader`\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/f1edd0429582dd29cccacaf50fd134b05593bd9c/library/std/src/panicking.rs:517:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/f1edd0429582dd29cccacaf50fd134b05593bd9c/library/core/src/panicking.rs:100:14\r\n   2: rustc_infer::infer::InferCtxtBuilder::enter\r\n   3: rustc_borrowck::mir_borrowck\r\n   4: core::ops::function::FnOnce::call_once\r\n   5: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n   6: rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory\r\n   7: rustc_query_system::query::plumbing::try_execute_query\r\n   8: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_borrowck\r\n   9: rustc_query_impl::query_callbacks::mir_borrowck::try_load_from_on_disk_cache\r\n  10: rustc_query_system::dep_graph::graph::DepGraph<K>::exec_cache_promotions\r\n  11: <rustc_query_impl::on_disk_cache::OnDiskCache as rustc_middle::ty::context::OnDiskCache>::drop_serialized_data\r\n  12: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  13: rustc_data_structures::sync::join\r\n  14: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  15: rustc_incremental::persist::save::save_dep_graph\r\n  16: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  17: rustc_span::with_source_map\r\n  18: scoped_tls::ScopedKey<T>::set\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92279/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92279/timeline", "performed_via_github_app": null, "state_reason": "completed"}