{"url": "https://api.github.com/repos/rust-lang/rust/issues/93821", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93821/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93821/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93821/events", "html_url": "https://github.com/rust-lang/rust/issues/93821", "id": 1128856675, "node_id": "I_kwDOAAsO6M5DSPxj", "number": 93821, "title": "#92007 appears to break inference for previously compiling code", "user": {"login": "hawkw", "id": 2796466, "node_id": "MDQ6VXNlcjI3OTY0NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2796466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hawkw", "html_url": "https://github.com/hawkw", "followers_url": "https://api.github.com/users/hawkw/followers", "following_url": "https://api.github.com/users/hawkw/following{/other_user}", "gists_url": "https://api.github.com/users/hawkw/gists{/gist_id}", "starred_url": "https://api.github.com/users/hawkw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hawkw/subscriptions", "organizations_url": "https://api.github.com/users/hawkw/orgs", "repos_url": "https://api.github.com/users/hawkw/repos", "events_url": "https://api.github.com/users/hawkw/events{/privacy}", "received_events_url": "https://api.github.com/users/hawkw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1966877457, "node_id": "MDU6TGFiZWwxOTY2ODc3NDU3", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-critical", "name": "P-critical", "color": "eb6420", "default": false, "description": "Critical priority"}], "state": "closed", "locked": false, "assignee": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-02-09T17:57:41Z", "updated_at": "2022-02-11T20:01:39Z", "closed_at": "2022-02-11T20:01:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "PR #92007 e7cc3bddbe0d0e374d05e7003e662bba1742dbae appears to break type inference in code that compiled on previous nightlies. This was found via a build failure in `tracing`'s CI after updating to nightly-2022-02-08: https://github.com/tokio-rs/tracing/runs/5129006951?check_suite_focus=true#step:4:530\r\n\r\n### Code\r\n\r\nThis test (https://github.com/tokio-rs/tracing/blob/0d4acb25b6162fc64c84dbaca9cac7145d394a2a/tracing-subscriber/tests/utils.rs#L6-L20), which builds a `tracing` subscriber and sets it as the default using an extension trait, now fails to compile:\r\n```rust\r\n#[test]\r\nfn init_ext_works() {\r\n    let (subscriber, finished) = collector::mock()\r\n        .event(\r\n            event::mock()\r\n                .at_level(tracing::Level::INFO)\r\n                .with_target(\"init_works\"),\r\n        )\r\n        .done()\r\n        .run_with_handle();\r\n\r\n    let _guard = subscriber.set_default();\r\n    tracing::info!(target: \"init_works\", \"it worked!\");\r\n    finished.assert_finished();\r\n}\r\n```\r\n\r\nThe definition of the extension trait looks like this (comments and non-relevant code elided):\r\n```rust\r\npub trait SubscriberInitExt\r\nwhere\r\n    Self: Into<Dispatch>,\r\n{\r\n    fn set_default(self) -> dispatch::DefaultGuard {\r\n        dispatch::set_default(&self.into())\r\n    }\r\n}\r\n```\r\nThe complete code can be found here: https://github.com/tokio-rs/tracing/blob/0d4acb25b6162fc64c84dbaca9cac7145d394a2a/tracing-subscriber/src/util.rs#L10-L93. But, I'm pretty sure that basically only the trait bounds are relevant.\r\n\r\nI expected to see this happen: the code compiles.\r\n\r\nInstead, this happened: compilation fails with this error\r\n```\r\nerror[E0283]: type annotations needed\r\n  --> tracing-subscriber/tests/utils.rs:17:29\r\n   |\r\n17 |     let _guard = subscriber.set_default();\r\n   |                             ^^^^^^^^^^^ cannot infer type for struct `Dispatch`\r\n   |\r\n   = note: multiple `impl`s satisfying `Dispatch: ~const From<impl Collect>` found in the following crates: `core`, `tracing_core`:\r\n           - impl<C> From<C> for Dispatch\r\n             where C: 'static, C: Collect, C: Send, C: Sync;\r\n           - impl<T> From<T> for T;\r\n   = note: required because of the requirements on the impl of `Into<Dispatch>` for `impl Collect`\r\nnote: required by a bound in `tracing_subscriber::util::SubscriberInitExt::set_default`\r\n  --> /home/runner/work/tracing/tracing/tracing-subscriber/src/util.rs:25:11\r\n   |\r\n25 |     Self: Into<Dispatch>,\r\n   |           ^^^^^^^^^^^^^^ required by this bound in `tracing_subscriber::util::SubscriberInitExt::set_default`\r\n\r\nFor more information about this error, try `rustc --explain E0283`.\r\n```\r\n\r\n### Version it worked on\r\n\r\n<!--\r\nProvide the most recent version this worked on, for example:\r\n\r\nIt most recently worked on: Rust 1.47\r\n-->\r\n\r\nIt most recently worked on: `nightly-2022-02-07` (734368a20)\r\n\r\n### Version with regression\r\n\r\nThe regression was introduced in: `nightly-2022-02-07` (0c292c966)\r\n\r\nI ran `cargo-bisect-rustc` with `cargo test --all` on a checkout of tokio-rs/tracing@0d4acb25b6162fc64c84dbaca9cac7145d394a2a. The regressed commit appears to be e7cc3bddbe0d0e374d05e7003e662bba1742dbae (PR #92007).\r\n\r\n<details> \r\n\r\n<summary>Complete `cargo-bisect-rustc` output:</summary>\r\n\r\n```\r\n:; cargo bisect-rustc --start 734368a20 --end 0c292c966 -- test --all\r\nbisecting ci builds\r\nstarting at 734368a20, ending at 0c292c966\r\nopening existing repository at \"rust.git\"\r\nrefreshing repository\r\nfetching (via local git) commits from 734368a20 to 0c292c9667f1b202a9150d58bdd2e89e3e803996\r\nopening existing repository at \"rust.git\"\r\nrefreshing repository\r\nlooking up first commit\r\nlooking up second commit\r\nchecking that commits are by bors and thus have ci artifacts...\r\nfinding bors merge commits\r\nfound 6 bors merge commits in the specified range\r\n  commit[0] 2022-02-07UTC: Auto merge of #87869 - thomcc:skinny-io-error, r=yaahc\r\n  commit[1] 2022-02-07UTC: Auto merge of #92007 - oli-obk:lazy_tait2, r=nikomatsakis\r\n  commit[2] 2022-02-08UTC: Auto merge of #93561 - Amanieu:more-unwind-abi, r=nagisa\r\n  commit[3] 2022-02-08UTC: Auto merge of #93762 - matthiaskrgr:rollup-vdjpfmz, r=matthiaskrgr\r\n  commit[4] 2022-02-08UTC: Auto merge of #93626 - wesleywiser:fix_hashmap_natvis, r=michaelwoerister\r\n  commit[5] 2022-02-08UTC: Auto merge of #93572 - scottmcm:generic-iter-process, r=yaahc\r\nvalidated commits found, specifying toolchains\r\n\r\ninstalling 734368a200904ef9c21db86c595dc04263c87be0\r\ncargo for x86_64-unknown-linux-gnu: 6.31 MB / 6.31 MB [============================================================================================================] 100.00 % 11.54 MB/s testing...\r\nRESULT: 734368a200904ef9c21db86c595dc04263c87be0, ===> No\r\nuninstalling 734368a200904ef9c21db86c595dc04263c87be0\r\n\r\ninstalling 0c292c9667f1b202a9150d58bdd2e89e3e803996\r\ncargo for x86_64-unknown-linux-gnu: 6.32 MB / 6.32 MB [============================================================================================================] 100.00 % 10.41 MB/s testing...\r\nRESULT: 0c292c9667f1b202a9150d58bdd2e89e3e803996, ===> Yes\r\nuninstalling 0c292c9667f1b202a9150d58bdd2e89e3e803996\r\n\r\ninstalling 2a8dbdb1e2d9f44e7971d9a70b41d4d86db0112f\r\ncargo for x86_64-unknown-linux-gnu: 6.30 MB / 6.30 MB [=============================================================================================================] 100.00 % 8.64 MB/s testing...\r\nRESULT: 2a8dbdb1e2d9f44e7971d9a70b41d4d86db0112f, ===> Yes\r\nuninstalling 2a8dbdb1e2d9f44e7971d9a70b41d4d86db0112f\r\n\r\ninstalling e7cc3bddbe0d0e374d05e7003e662bba1742dbae\r\ncargo for x86_64-unknown-linux-gnu: 6.31 MB / 6.31 MB [============================================================================================================] 100.00 % 10.84 MB/s testing...\r\nRESULT: e7cc3bddbe0d0e374d05e7003e662bba1742dbae, ===> Yes\r\nuninstalling e7cc3bddbe0d0e374d05e7003e662bba1742dbae\r\n\r\nsearched toolchains 734368a200904ef9c21db86c595dc04263c87be0 through 0c292c9667f1b202a9150d58bdd2e89e3e803996\r\n\r\n\r\n********************************************************************************\r\nRegression in e7cc3bddbe0d0e374d05e7003e662bba1742dbae\r\n********************************************************************************\r\n```\r\n\r\n</details>\r\n\r\n@rustbot modify labels: +regression-from-stable-to-nightly -regression-untriaged\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93821/timeline", "performed_via_github_app": null, "state_reason": "completed"}