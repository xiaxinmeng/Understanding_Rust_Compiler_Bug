{"url": "https://api.github.com/repos/rust-lang/rust/issues/18824", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/18824/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/18824/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/18824/events", "html_url": "https://github.com/rust-lang/rust/issues/18824", "id": 48221886, "node_id": "MDU6SXNzdWU0ODIyMTg4Ng==", "number": 18824, "title": "Shadowing lifetimes should be disallowed or linted", "user": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-11-10T01:28:41Z", "updated_at": "2015-01-05T18:53:14Z", "closed_at": "2015-01-05T18:53:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following code compiles:\n\n```\nstruct Foo<'a>(&'a uint);\n\nimpl<'a> Foo<'a> {\n  fn bar<'a>(self, other:Foo<'a>) {}\n}\n```\n\nHowever, in the event of a lifetime mismatch, this can lead to confusing error messages.\n\n```\nuse std::kinds::marker::ContravariantLifetime;\n// Using a Contravariant lifetime because #[deriving] doesn't seem to work well\n// with &-ptrs. Example holds with a covariant one as well.\n\n#[deriving(PartialEq)]\nstruct Foo<'a>(ContravariantLifetime<'a>, uint);\n\nimpl<'a> Foo<'a> {\n fn bar<'a>(self, other: Foo<'a>) -> bool {\n   self == other\n }\n}\n```\n\nThis gives a tautological recommendation along with a confusing error:\n\n```\ntest.rs:8:2: 11:3 help: consider using an explicit lifetime parameter as shown: fn bar<'a>(self, other: Foo<'a>) -> bool\ntest.rs:8  fn bar<'a>(self, other: Foo<'a>) -> bool {\ntest.rs:9    //baz(self, other)\ntest.rs:10    self == other\ntest.rs:11  }\ntest.rs:10:12: 10:17 error: mismatched types: expected `Foo<'a>`, found `Foo<'a>` (lifetime mismatch)\ntest.rs:10    self == other\n```\n\nIt's not really the error's fault for being so confusing, after all, we have shadowed the `'a` from the impl with a `'a` from the  definition of `baz()`. This should probably be disallowed or at least linted.\n\nThe recommendation is flawed in two  ways\n- Firstly, it recommended `'a`, a lifetime which is already being used there (twice, actually). That's adding to the confusion. It clearly means to recommend a _new_ lifetime (`'b`?)\n- It's wrong, even if you change the signature of `bar()` to use `'b`, it's still wrong, but then it gives the correct recommendation to use `fn bar(self, other: Foo<'a>) -> bool` on recompiling.\n\nThis probably needs better error reporting (don't recommend lifetimes which are already being used in that context)\n\n@glennw came across this in Servo, getting tautological errors like [this](https://pastebin.mozilla.org/7215857) and [this](https://pastebin.mozilla.org/7216170). The former is due to lifetime shadowing (and can be fixed by disallowing shadowing). I'm not yet sure what prompted the latter one, one of the lifetimes is elided but the other one is named `'a` in the surrounding impl and should have turned up in the error message instead of being underscored.\n", "closed_by": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/18824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/18824/timeline", "performed_via_github_app": null, "state_reason": "completed"}