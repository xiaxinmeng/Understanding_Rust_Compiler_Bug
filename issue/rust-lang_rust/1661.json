{"url": "https://api.github.com/repos/rust-lang/rust/issues/1661", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/1661/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/1661/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/1661/events", "html_url": "https://github.com/rust-lang/rust/issues/1661", "id": 2967263, "node_id": "MDU6SXNzdWUyOTY3MjYz", "number": 1661, "title": "Allow ifaces to refer to their own type", "user": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-01-25T16:26:33Z", "updated_at": "2014-06-16T21:56:27Z", "closed_at": "2012-01-25T19:47:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It must be possible, when specifying methods, to refer to the type that the interface is implemented on. For example, an `add` method on iface `num`, which takes an extra parameter of the same type and returns a value of the same type, can't be expressed in the current system without adding a lot of noisy type parameters.\n\n```\niface num {\n  fn add(x: self) -> self;\n  fn sub(x: self) -> self;\n  /* etc */\n}\n\nimpl of num for int {\n  fn add(x: int) -> int { self + x }\n  fn sub(x: int) -> int { self - x }\n}\n```\n\nThe `self` type is an implicit type parameter refers to the specialized type. An interface that uses it can not be cast to, since it'd be impossible to type its methods in the absence of a concrete self type.\n", "closed_by": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/1661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/1661/timeline", "performed_via_github_app": null, "state_reason": "completed"}