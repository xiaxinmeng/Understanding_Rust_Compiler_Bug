{"url": "https://api.github.com/repos/rust-lang/rust/issues/109071", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/109071/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/109071/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/109071/events", "html_url": "https://github.com/rust-lang/rust/issues/109071", "id": 1621116232, "node_id": "I_kwDOAAsO6M5goEVI", "number": 109071, "title": "ICE: `unexpected type encountered in variance inference: _`", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 3921860029, "node_id": "LA_kwDOAAsO6M7pwtW9", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-has-mcve", "name": "S-has-mcve", "color": "862eff", "default": false, "description": "A Minimal Complete and Verifiable Example has been found for this issue"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-03-13T09:50:28Z", "updated_at": "2023-05-09T09:18:28Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\npub trait Iter {\r\n    type Item<'a> where Self: 'a;\r\n\r\n    fn next<'a>(&'a mut self) -> Option<Windows<T>>;\r\n\r\n    fn for_each<F>(&'a mut self, mut f: F)\r\n        where Self: Sized, F: for<'a> FnMut(Self::Windows<'a>)\r\n    {\r\n      todo!()\r\n    }\r\n}\r\n\r\npub struct Windows<T> {}\r\n\r\nimpl<T> Windows<'a> {\r\n    type Item<'a> where T: 'a = &'a mut [T];\r\n\r\n    fn next<'a>(&'a mut self) -> Option<Self::Item<'a>> {\r\n        todo!();\r\n    }\r\n}\r\n\r\nimpl<T> Iter for Windows<T> {\r\n\r\n    fn T<'a>(&'for_each mut self) -> Option<Self::Item<'a>> {\r\n        todo!();\r\n    }\r\n}\r\n\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.70.0-nightly (7b4f48927 2023-03-12)\r\nbinary: rustc\r\ncommit-hash: 7b4f48927dce585f747a58083b45ab62b9d73a53\r\ncommit-date: 2023-03-12\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.70.0-nightly\r\nLLVM version: 15.0.7\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0261]: use of undeclared lifetime name `'a`\r\n --> 48.rs:6:21\r\n  |\r\n6 |     fn for_each<F>(&'a mut self, mut f: F)\r\n  |                     ^^ undeclared lifetime\r\n  |\r\nhelp: consider introducing lifetime `'a` here\r\n  |\r\n6 |     fn for_each<'a, F>(&'a mut self, mut f: F)\r\n  |                 +++\r\nhelp: consider introducing lifetime `'a` here\r\n  |\r\n1 | pub trait Iter<'a> {\r\n  |               ++++\r\n\r\nerror[E0261]: use of undeclared lifetime name `'a`\r\n  --> 48.rs:15:17\r\n   |\r\n15 | impl<T> Windows<'a> {\r\n   |      -          ^^ undeclared lifetime\r\n   |      |\r\n   |      help: consider introducing lifetime `'a` here: `'a,`\r\n\r\nerror[E0407]: method `T` is not a member of trait `Iter`\r\n  --> 48.rs:25:5\r\n   |\r\n25 | /     fn T<'a>(&'for_each mut self) -> Option<Self::Item<'a>> {\r\n26 | |         todo!();\r\n27 | |     }\r\n   | |_____^ not a member of trait `Iter`\r\n\r\nerror[E0261]: use of undeclared lifetime name `'for_each`\r\n  --> 48.rs:25:15\r\n   |\r\n25 |     fn T<'a>(&'for_each mut self) -> Option<Self::Item<'a>> {\r\n   |               ^^^^^^^^^ undeclared lifetime\r\n   |\r\nhelp: consider introducing lifetime `'for_each` here\r\n   |\r\n25 |     fn T<'for_each, 'a>(&'for_each mut self) -> Option<Self::Item<'a>> {\r\n   |          ++++++++++\r\nhelp: consider introducing lifetime `'for_each` here\r\n   |\r\n23 | impl<'for_each, T> Iter for Windows<T> {\r\n   |      ++++++++++\r\n\r\nerror[E0412]: cannot find type `T` in this scope\r\n --> 48.rs:4:49\r\n  |\r\n4 |     fn next<'a>(&'a mut self) -> Option<Windows<T>>;\r\n  |                                                 ^ not found in this scope\r\n\r\nwarning: where clause not allowed here\r\n  --> 48.rs:16:19\r\n   |\r\n16 |     type Item<'a> where T: 'a = &'a mut [T];\r\n   |                   ^^^^^^^^^^^\r\n   |\r\n   = note: see issue #89122 <https://github.com/rust-lang/rust/issues/89122> for more information\r\n   = note: `#[warn(deprecated_where_clause_location)]` on by default\r\nhelp: move it to the end of the type declaration\r\n   |\r\n16 -     type Item<'a> where T: 'a = &'a mut [T];\r\n16 +     type Item<'a>  = &'a mut [T] where T: 'a;\r\n   |\r\n\r\nerror[E0601]: `main` function not found in crate `48`\r\n  --> 48.rs:28:2\r\n   |\r\n28 | }\r\n   |  ^ consider adding a `main` function to `48.rs`\r\n\r\nerror[E0107]: struct takes 0 lifetime arguments but 1 lifetime argument was supplied\r\n  --> 48.rs:15:9\r\n   |\r\n15 | impl<T> Windows<'a> {\r\n   |         ^^^^^^^---- help: remove these generics\r\n   |         |\r\n   |         expected 0 lifetime arguments\r\n   |\r\nnote: struct defined here, with 0 lifetime parameters\r\n  --> 48.rs:13:12\r\n   |\r\n13 | pub struct Windows<T> {}\r\n   |            ^^^^^^^\r\n\r\nerror[E0107]: struct takes 1 generic argument but 0 generic arguments were supplied\r\n  --> 48.rs:15:9\r\n   |\r\n15 | impl<T> Windows<'a> {\r\n   |         ^^^^^^^ expected 1 generic argument\r\n   |\r\nnote: struct defined here, with 1 generic parameter: `T`\r\n  --> 48.rs:13:12\r\n   |\r\n13 | pub struct Windows<T> {}\r\n   |            ^^^^^^^ -\r\nhelp: add missing generic argument\r\n   |\r\n15 | impl<T> Windows<'a, T> {\r\n   |                   +++\r\n\r\nerror[E0220]: associated type `Windows` not found for `Self`\r\n --> 48.rs:7:51\r\n  |\r\n7 |         where Self: Sized, F: for<'a> FnMut(Self::Windows<'a>)\r\n  |                                                   ^^^^^^^ associated type `Windows` not found\r\n\r\nerror[E0658]: inherent associated types are unstable\r\n  --> 48.rs:16:5\r\n   |\r\n16 |     type Item<'a> where T: 'a = &'a mut [T];\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: see issue #8995 <https://github.com/rust-lang/rust/issues/8995> for more information\r\n   = help: add `#![feature(inherent_associated_types)]` to the crate attributes to enable\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_hir_analysis/src/variance/constraints.rs:301:17: unexpected type encountered in variance inference: _\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/7b4f48927dce585f747a58083b45ab62b9d73a53/compiler/rustc_errors/src/lib.rs:1644:9\r\nstack backtrace:\r\n   0:     0x7f8c0716651a - std::backtrace_rs::backtrace::libunwind::trace::hf7d75cca16fd1b61\r\n                               at /rustc/7b4f48927dce585f747a58083b45ab62b9d73a53/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7f8c0716651a - std::backtrace_rs::backtrace::trace_unsynchronized::hf5ec95734aab509d\r\n                               at /rustc/7b4f48927dce585f747a58083b45ab62b9d73a53/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f8c0716651a - std::sys_common::backtrace::_print_fmt::he95113413355c8cd\r\n                               at /rustc/7b4f48927dce585f747a58083b45ab62b9d73a53/library/std/src/sys_common/backtrace.rs:65:5\r\n   3:     0x7f8c0716651a - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h072d12f2e69ca92b\r\n                               at /rustc/7b4f48927dce585f747a58083b45ab62b9d73a53/library/std/src/sys_common/backtrace.rs:44:22\r\n   4:     0x7f8c071c9c5e - core::fmt::write::h1d23f16415e96af2\r\n                               at /rustc/7b4f48927dce585f747a58083b45ab62b9d73a53/library/core/src/fmt/mod.rs:1232:17\r\n   5:     0x7f8c07159275 - std::io::Write::write_fmt::hcf1e413fde4ffcd5\r\n                               at /rustc/7b4f48927dce585f747a58083b45ab62b9d73a53/library/std/src/io/mod.rs:1684:15\r\n   6:     0x7f8c071662e5 - std::sys_common::backtrace::_print::h6b2b14bedd5177e7\r\n                               at /rustc/7b4f48927dce585f747a58083b45ab62b9d73a53/library/std/src/sys_common/backtrace.rs:47:5\r\n   7:     0x7f8c071662e5 - std::sys_common::backtrace::print::h09ccebfbcd382e89\r\n                               at /rustc/7b4f48927dce585f747a58083b45ab62b9d73a53/library/std/src/sys_common/backtrace.rs:34:9\r\n   8:     0x7f8c0716905f - std::panicking::default_hook::{{closure}}::h4ee055db778febc2\r\n                               at /rustc/7b4f48927dce585f747a58083b45ab62b9d73a53/library/std/src/panicking.rs:271:22\r\n   9:     0x7f8c07168d9b - std::panicking::default_hook::ha74f60e3a15d95fb\r\n                               at /rustc/7b4f48927dce585f747a58083b45ab62b9d73a53/library/std/src/panicking.rs:290:9\r\n  10:     0x7f8c0a497085 - rustc_driver_impl[d355a67661263e47]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n  11:     0x7f8c0716989d - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::h7f34603beb945e8f\r\n                               at /rustc/7b4f48927dce585f747a58083b45ab62b9d73a53/library/alloc/src/boxed.rs:2002:9\r\n  12:     0x7f8c0716989d - std::panicking::rust_panic_with_hook::h4b5d379936d4932f\r\n                               at /rustc/7b4f48927dce585f747a58083b45ab62b9d73a53/library/std/src/panicking.rs:696:13\r\n  13:     0x7f8c0aa02371 - std[e52d7c968ed01318]::panicking::begin_panic::<rustc_errors[45159b7f7e36021d]::ExplicitBug>::{closure#0}\r\n  14:     0x7f8c0a9fdaa6 - std[e52d7c968ed01318]::sys_common::backtrace::__rust_end_short_backtrace::<std[e52d7c968ed01318]::panicking::begin_panic<rustc_errors[45159b7f7e36021d]::ExplicitBug>::{closure#0}, !>\r\n  15:     0x7f8c0aa86046 - std[e52d7c968ed01318]::panicking::begin_panic::<rustc_errors[45159b7f7e36021d]::ExplicitBug>\r\n  16:     0x7f8c0aa51e06 - std[e52d7c968ed01318]::panic::panic_any::<rustc_errors[45159b7f7e36021d]::ExplicitBug>\r\n  17:     0x7f8c0aa4d966 - <rustc_errors[45159b7f7e36021d]::HandlerInner>::bug::<&alloc[fc860cae0dfa1ab1]::string::String>\r\n  18:     0x7f8c0aa4d630 - <rustc_errors[45159b7f7e36021d]::Handler>::bug::<&alloc[fc860cae0dfa1ab1]::string::String>\r\n  19:     0x7f8c0aa39a9b - rustc_middle[a96ac5d591578447]::util::bug::opt_span_bug_fmt::<rustc_span[f8bdfaef83e46314]::span_encoding::Span>::{closure#0}\r\n  20:     0x7f8c0aa384fa - rustc_middle[a96ac5d591578447]::ty::context::tls::with_opt::<rustc_middle[a96ac5d591578447]::util::bug::opt_span_bug_fmt<rustc_span[f8bdfaef83e46314]::span_encoding::Span>::{closure#0}, !>::{closure#0}\r\n  21:     0x7f8c0aa384c6 - rustc_middle[a96ac5d591578447]::ty::context::tls::with_context_opt::<rustc_middle[a96ac5d591578447]::ty::context::tls::with_opt<rustc_middle[a96ac5d591578447]::util::bug::opt_span_bug_fmt<rustc_span[f8bdfaef83e46314]::span_encoding::Span>::{closure#0}, !>::{closure#0}, !>\r\n  22:     0x7f8c0aa399e6 - rustc_middle[a96ac5d591578447]::util::bug::opt_span_bug_fmt::<rustc_span[f8bdfaef83e46314]::span_encoding::Span>\r\n  23:     0x7f8c08ab44b3 - rustc_middle[a96ac5d591578447]::util::bug::bug_fmt\r\n  24:     0x7f8c08c3e6bd - <rustc_hir_analysis[357075c2c3fc2a7b]::variance::constraints::ConstraintContext>::add_constraints_from_ty\r\n  25:     0x7f8c08c3dc69 - <rustc_hir_analysis[357075c2c3fc2a7b]::variance::constraints::ConstraintContext>::add_constraints_from_ty\r\n  26:     0x7f8c08c3d247 - <rustc_hir_analysis[357075c2c3fc2a7b]::variance::constraints::ConstraintContext>::build_constraints_for_item\r\n  27:     0x7f8c08c3cc9a - rustc_hir_analysis[357075c2c3fc2a7b]::variance::constraints::add_constraints_from_crate\r\n  28:     0x7f8c08c3c123 - rustc_hir_analysis[357075c2c3fc2a7b]::variance::crate_variances\r\n  29:     0x7f8c09cbe53b - rustc_query_system[704b80a7bc44cd49]::query::plumbing::try_execute_query::<rustc_query_impl[217bee59c5548bf5]::queries::crate_variances, rustc_query_impl[217bee59c5548bf5]::plumbing::QueryCtxt>\r\n  30:     0x7f8c09cbe210 - <rustc_query_impl[217bee59c5548bf5]::Queries as rustc_middle[a96ac5d591578447]::ty::query::QueryEngine>::crate_variances\r\n  31:     0x7f8c0945afcc - rustc_hir_analysis[357075c2c3fc2a7b]::variance::variances_of\r\n  32:     0x7f8c09458cc8 - rustc_query_system[704b80a7bc44cd49]::query::plumbing::try_execute_query::<rustc_query_impl[217bee59c5548bf5]::queries::variances_of, rustc_query_impl[217bee59c5548bf5]::plumbing::QueryCtxt>\r\n  33:     0x7f8c094588bd - <rustc_query_impl[217bee59c5548bf5]::Queries as rustc_middle[a96ac5d591578447]::ty::query::QueryEngine>::variances_of\r\n  34:     0x7f8c0850e26c - rustc_middle[a96ac5d591578447]::ty::relate::super_relate_tys::<rustc_infer[8071ebb96624e335]::infer::sub::Sub>\r\n  35:     0x7f8c0850a261 - <rustc_infer[8071ebb96624e335]::infer::sub::Sub as rustc_middle[a96ac5d591578447]::ty::relate::TypeRelation>::tys\r\n  36:     0x7f8c099e52a3 - <rustc_infer[8071ebb96624e335]::infer::InferCtxt>::commit_if_ok::<rustc_infer[8071ebb96624e335]::infer::InferOk<()>, rustc_middle[a96ac5d591578447]::ty::error::TypeError, <rustc_infer[8071ebb96624e335]::infer::at::Trace>::sub<rustc_middle[a96ac5d591578447]::ty::Ty>::{closure#0}>\r\n  37:     0x7f8c099e50d7 - <rustc_trait_selection[8ee7c2d509810bbf]::traits::engine::ObligationCtxt>::sup::<rustc_middle[a96ac5d591578447]::ty::Ty>\r\n  38:     0x7f8c0a5c340a - <rustc_infer[8071ebb96624e335]::infer::InferCtxt>::probe::<core[125d846441ac421f]::option::Option<(rustc_span[f8bdfaef83e46314]::def_id::DefId, rustc_span[f8bdfaef83e46314]::def_id::DefId, &rustc_middle[a96ac5d591578447]::ty::list::List<rustc_middle[a96ac5d591578447]::ty::subst::GenericArg>)>, <dyn rustc_hir_analysis[357075c2c3fc2a7b]::astconv::AstConv>::lookup_inherent_assoc_ty::{closure#1}::{closure#0}>\r\n  39:     0x7f8c0a5bfba6 - <&mut <dyn rustc_hir_analysis[357075c2c3fc2a7b]::astconv::AstConv>::lookup_inherent_assoc_ty::{closure#1} as core[125d846441ac421f]::ops::function::FnMut<(&(rustc_span[f8bdfaef83e46314]::def_id::DefId, (rustc_span[f8bdfaef83e46314]::def_id::DefId, rustc_span[f8bdfaef83e46314]::def_id::DefId)),)>>::call_mut\r\n  40:     0x7f8c0a605bee - <alloc[fc860cae0dfa1ab1]::vec::Vec<(rustc_span[f8bdfaef83e46314]::def_id::DefId, rustc_span[f8bdfaef83e46314]::def_id::DefId, &rustc_middle[a96ac5d591578447]::ty::list::List<rustc_middle[a96ac5d591578447]::ty::subst::GenericArg>)> as alloc[fc860cae0dfa1ab1]::vec::spec_from_iter::SpecFromIter<(rustc_span[f8bdfaef83e46314]::def_id::DefId, rustc_span[f8bdfaef83e46314]::def_id::DefId, &rustc_middle[a96ac5d591578447]::ty::list::List<rustc_middle[a96ac5d591578447]::ty::subst::GenericArg>), core[125d846441ac421f]::iter::adapters::filter_map::FilterMap<core[125d846441ac421f]::slice::iter::Iter<(rustc_span[f8bdfaef83e46314]::def_id::DefId, (rustc_span[f8bdfaef83e46314]::def_id::DefId, rustc_span[f8bdfaef83e46314]::def_id::DefId))>, <dyn rustc_hir_analysis[357075c2c3fc2a7b]::astconv::AstConv>::lookup_inherent_assoc_ty::{closure#1}>>>::from_iter\r\n  41:     0x7f8c09312a66 - <dyn rustc_hir_analysis[357075c2c3fc2a7b]::astconv::AstConv>::associated_path_to_ty::{closure#0}\r\n  42:     0x7f8c092f75a6 - <dyn rustc_hir_analysis[357075c2c3fc2a7b]::astconv::AstConv>::ast_ty_to_ty_inner::{closure#0}\r\n  43:     0x7f8c092fb21c - <dyn rustc_hir_analysis[357075c2c3fc2a7b]::astconv::AstConv>::res_to_ty\r\n  44:     0x7f8c092f725e - <dyn rustc_hir_analysis[357075c2c3fc2a7b]::astconv::AstConv>::ast_ty_to_ty_inner::{closure#0}\r\n  45:     0x7f8c09390a3b - <dyn rustc_hir_analysis[357075c2c3fc2a7b]::astconv::AstConv>::ty_of_fn::{closure#0}\r\n  46:     0x7f8c09402d35 - rustc_hir_analysis[357075c2c3fc2a7b]::collect::fn_sig\r\n  47:     0x7f8c09401140 - rustc_query_system[704b80a7bc44cd49]::query::plumbing::try_execute_query::<rustc_query_impl[217bee59c5548bf5]::queries::fn_sig, rustc_query_impl[217bee59c5548bf5]::plumbing::QueryCtxt>\r\n  48:     0x7f8c08c805a1 - <rustc_hir_analysis[357075c2c3fc2a7b]::collect::CollectItemTypesVisitor as rustc_hir[4aa57babd8685147]::intravisit::Visitor>::visit_impl_item\r\n  49:     0x7f8c08c7aa41 - <rustc_middle[a96ac5d591578447]::hir::map::Map>::visit_item_likes_in_module::<rustc_hir_analysis[357075c2c3fc2a7b]::collect::CollectItemTypesVisitor>\r\n  50:     0x7f8c08c7a84c - rustc_hir_analysis[357075c2c3fc2a7b]::collect::collect_mod_item_types\r\n  51:     0x7f8c09ac706e - rustc_query_system[704b80a7bc44cd49]::query::plumbing::try_execute_query::<rustc_query_impl[217bee59c5548bf5]::queries::collect_mod_item_types, rustc_query_impl[217bee59c5548bf5]::plumbing::QueryCtxt>\r\n  52:     0x7f8c09ac6bf3 - <rustc_query_impl[217bee59c5548bf5]::Queries as rustc_middle[a96ac5d591578447]::ty::query::QueryEngine>::collect_mod_item_types\r\n  53:     0x7f8c087b0363 - <rustc_session[7e23441c2db8ce4a]::session::Session>::track_errors::<rustc_hir_analysis[357075c2c3fc2a7b]::check_crate::{closure#0}, ()>\r\n  54:     0x7f8c087acce2 - rustc_hir_analysis[357075c2c3fc2a7b]::check_crate\r\n  55:     0x7f8c087a2d12 - rustc_interface[6bf42eb308c32713]::passes::analysis\r\n  56:     0x7f8c09cab71c - rustc_query_system[704b80a7bc44cd49]::query::plumbing::try_execute_query::<rustc_query_impl[217bee59c5548bf5]::queries::analysis, rustc_query_impl[217bee59c5548bf5]::plumbing::QueryCtxt>\r\n  57:     0x7f8c09cab410 - <rustc_query_impl[217bee59c5548bf5]::Queries as rustc_middle[a96ac5d591578447]::ty::query::QueryEngine>::analysis\r\n  58:     0x7f8c09ad02f9 - <rustc_middle[a96ac5d591578447]::ty::context::GlobalCtxt>::enter::<rustc_driver_impl[d355a67661263e47]::run_compiler::{closure#1}::{closure#2}::{closure#4}, core[125d846441ac421f]::result::Result<(), rustc_span[f8bdfaef83e46314]::ErrorGuaranteed>>\r\n  59:     0x7f8c096c8498 - rustc_span[f8bdfaef83e46314]::with_source_map::<core[125d846441ac421f]::result::Result<(), rustc_span[f8bdfaef83e46314]::ErrorGuaranteed>, rustc_interface[6bf42eb308c32713]::interface::run_compiler<core[125d846441ac421f]::result::Result<(), rustc_span[f8bdfaef83e46314]::ErrorGuaranteed>, rustc_driver_impl[d355a67661263e47]::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\r\n  60:     0x7f8c096bf70c - std[e52d7c968ed01318]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[6bf42eb308c32713]::util::run_in_thread_pool_with_globals<rustc_interface[6bf42eb308c32713]::interface::run_compiler<core[125d846441ac421f]::result::Result<(), rustc_span[f8bdfaef83e46314]::ErrorGuaranteed>, rustc_driver_impl[d355a67661263e47]::run_compiler::{closure#1}>::{closure#0}, core[125d846441ac421f]::result::Result<(), rustc_span[f8bdfaef83e46314]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[125d846441ac421f]::result::Result<(), rustc_span[f8bdfaef83e46314]::ErrorGuaranteed>>\r\n  61:     0x7f8c096bf13a - <<std[e52d7c968ed01318]::thread::Builder>::spawn_unchecked_<rustc_interface[6bf42eb308c32713]::util::run_in_thread_pool_with_globals<rustc_interface[6bf42eb308c32713]::interface::run_compiler<core[125d846441ac421f]::result::Result<(), rustc_span[f8bdfaef83e46314]::ErrorGuaranteed>, rustc_driver_impl[d355a67661263e47]::run_compiler::{closure#1}>::{closure#0}, core[125d846441ac421f]::result::Result<(), rustc_span[f8bdfaef83e46314]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[125d846441ac421f]::result::Result<(), rustc_span[f8bdfaef83e46314]::ErrorGuaranteed>>::{closure#1} as core[125d846441ac421f]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  62:     0x7f8c07173793 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hc0a50816e1eb2bba\r\n                               at /rustc/7b4f48927dce585f747a58083b45ab62b9d73a53/library/alloc/src/boxed.rs:1988:9\r\n  63:     0x7f8c07173793 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hb2f83fc2049033c3\r\n                               at /rustc/7b4f48927dce585f747a58083b45ab62b9d73a53/library/alloc/src/boxed.rs:1988:9\r\n  64:     0x7f8c07173793 - std::sys::unix::thread::Thread::new::thread_start::hce5861512f8bf7ea\r\n                               at /rustc/7b4f48927dce585f747a58083b45ab62b9d73a53/library/std/src/sys/unix/thread.rs:108:17\r\n  65:     0x7f8c06f05bb5 - <unknown>\r\n  66:     0x7f8c06f87d90 - <unknown>\r\n  67:                0x0 - <unknown>\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.70.0-nightly (7b4f48927 2023-03-12) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [crate_variances] computing the variances for items in this crate\r\n#1 [variances_of] computing the variances of `Windows`\r\n#2 [fn_sig] computing function signature of `<impl at 48.rs:23:1: 23:28>::T`\r\n#3 [collect_mod_item_types] collecting item types in top-level module\r\n#4 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to 11 previous errors; 1 warning emitted\r\n\r\nSome errors have detailed explanations: E0107, E0220, E0261, E0407, E0412, E0601, E0658.\r\nFor more information about an error, try `rustc --explain E0107`.\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/109071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/109071/timeline", "performed_via_github_app": null, "state_reason": null}