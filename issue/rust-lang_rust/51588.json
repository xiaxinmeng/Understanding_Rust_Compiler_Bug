{"url": "https://api.github.com/repos/rust-lang/rust/issues/51588", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51588/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51588/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51588/events", "html_url": "https://github.com/rust-lang/rust/issues/51588", "id": 332959770, "node_id": "MDU6SXNzdWUzMzI5NTk3NzA=", "number": 51588, "title": "[control flow analysis] Special treatment for `Err( )?`", "user": {"login": "DCjanus", "id": 15802727, "node_id": "MDQ6VXNlcjE1ODAyNzI3", "avatar_url": "https://avatars.githubusercontent.com/u/15802727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DCjanus", "html_url": "https://github.com/DCjanus", "followers_url": "https://api.github.com/users/DCjanus/followers", "following_url": "https://api.github.com/users/DCjanus/following{/other_user}", "gists_url": "https://api.github.com/users/DCjanus/gists{/gist_id}", "starred_url": "https://api.github.com/users/DCjanus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DCjanus/subscriptions", "organizations_url": "https://api.github.com/users/DCjanus/orgs", "repos_url": "https://api.github.com/users/DCjanus/repos", "events_url": "https://api.github.com/users/DCjanus/events{/privacy}", "received_events_url": "https://api.github.com/users/DCjanus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-06-16T04:33:08Z", "updated_at": "2018-06-18T08:54:03Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I don't know this issue should be `feature request` or `bug report`.\r\n\r\nI have code like this:\r\n\r\n```Rust\r\n#[derive(Debug, Fail)]\r\n#[fail(display = \"Target can't open: {:?}\", path)]\r\nstruct NotExists {\r\n    path: PathBuf\r\n}\r\n\r\n#[derive(Debug, Fail)]\r\n#[fail(display = \"Target is not file: {:?}\", path)]\r\nstruct NotFile {\r\n    path: PathBuf\r\n}\r\n\r\nfn foo() -> Result<(), failure::Error> {\r\n    let path = PathBuf::from(\"Rust/is/the/best/language\");\r\n    if path.exists() {\r\n        Err(NotExists { path })?\r\n    }\r\n    if path.is_dir() {\r\n        Err(NotFile { path })?\r\n    }\r\n    unimplemented!()\r\n}\r\n```\r\n\r\nThe compiler error is:\r\n\r\n```\r\n24 |         Err(NotExists { path })?\r\n   |                         ---- value moved here\r\n25 |     }\r\n26 |     if path.is_dir() {\r\n   |        ^^^^ value used here after move\r\n``````\r\n\r\nObviously, `Err(foo)?` equals `return Err(foo.into());`, that means there should be no `use after moved` error. \r\n \r\nThere are two other ways to achieve the goal:\r\n\r\n```Rust\r\n    if path.exists() {\r\n        Err(NotExists { path })?\r\n    } else if path.is_dir() {\r\n        Err(NotFile { path })?\r\n    } else {\r\n        unimplemented!()\r\n    }\r\n```\r\nor\r\n\r\n```Rust\r\n    if path.exists() {\r\n        return Err(NotExists { path }.into());\r\n    }\r\n```\r\n\r\nI think with control flow analysis, compiler should be able to pass my origin code(`Err(foo)?` version).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51588/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51588/timeline", "performed_via_github_app": null, "state_reason": null}