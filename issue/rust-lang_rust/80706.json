{"url": "https://api.github.com/repos/rust-lang/rust/issues/80706", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80706/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80706/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80706/events", "html_url": "https://github.com/rust-lang/rust/issues/80706", "id": 778430613, "node_id": "MDU6SXNzdWU3Nzg0MzA2MTM=", "number": 80706, "title": "ICE(stable): thread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler/rustc_middle/src/ty/instance.rs:434:85", "user": {"login": "fominok", "id": 8050494, "node_id": "MDQ6VXNlcjgwNTA0OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8050494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fominok", "html_url": "https://github.com/fominok", "followers_url": "https://api.github.com/users/fominok/followers", "following_url": "https://api.github.com/users/fominok/following{/other_user}", "gists_url": "https://api.github.com/users/fominok/gists{/gist_id}", "starred_url": "https://api.github.com/users/fominok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fominok/subscriptions", "organizations_url": "https://api.github.com/users/fominok/orgs", "repos_url": "https://api.github.com/users/fominok/repos", "events_url": "https://api.github.com/users/fominok/events{/privacy}", "received_events_url": "https://api.github.com/users/fominok/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}, {"id": 1563395184, "node_id": "MDU6TGFiZWwxNTYzMzk1MTg0", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-monomorphization", "name": "I-monomorphization", "color": "e10c02", "default": false, "description": "Issue: An error at monomorphization time"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2021-01-04T22:56:20Z", "updated_at": "2022-12-02T15:43:25Z", "closed_at": "2022-12-02T15:43:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\nhow to create smaller examples.\n\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\n\n-->\n\n### Code\n\n**EDIT: MCVE is [here](https://github.com/rust-lang/rust/issues/80706#issuecomment-754832261).**\n\n```Rust\nuse core::fmt::Debug;\nuse futures::future::BoxFuture;\n\n#[tokio::main]\nasync fn main() -> Result<(), Box<dyn std::error::Error>> {\n    let dependency = \"dependency\".to_owned();\n    let storage = InMemoryStorage;\n    run(&dependency, storage).await;\n    Ok(())\n}\n\npub(crate) struct InMemoryStorage;\n\nstruct User<'dep> {\n    name: String,\n    dep: &'dep str,\n}\n\nimpl<'a> StorageRequest<InMemoryStorage> for SaveUser<'a> {\n    fn execute(\n        &self,\n        storage: &InMemoryStorage,\n    ) -> BoxFuture<\n        Result<<Self as StorageRequestReturnType>::Output, <InMemoryStorage as Storage>::Error>,\n    > {\n        todo!()\n    }\n}\n\ntrait Storage {\n    type Error;\n}\n\nimpl Storage for InMemoryStorage {\n    type Error = String;\n}\n\ntrait StorageRequestReturnType {\n    type Output;\n}\n\ntrait StorageRequest<S: Storage>: StorageRequestReturnType {\n    fn execute(\n        &self,\n        storage: &S,\n    ) -> BoxFuture<Result<<Self as StorageRequestReturnType>::Output, <S as Storage>::Error>>;\n}\n\nstruct SaveUser<'a> {\n    name: &'a str,\n}\n\nimpl<'a> StorageRequestReturnType for SaveUser<'a> {\n    type Output = ();\n}\n\nimpl<'dep> User<'dep> {\n    async fn new<S>(storage: &S, dep: &'dep str) -> User<'dep>\n    where\n        S: Storage,\n    {\n        User {\n            dep,\n            name: \"Joe\".to_owned(),\n        }\n    }\n\n    async fn save<S>(mut self, storage: &S)\n    where\n        S: Storage,\n        for<'a> SaveUser<'a>: StorageRequest<S>,\n        <S as Storage>::Error: Debug,\n    {\n        SaveUser { name: &self.name }\n            .execute(storage)\n            .await\n            .unwrap();\n    }\n}\n\nasync fn run<S>(dep: &'_ str, storage: S)\nwhere\n    S: Storage,\n    <S as Storage>::Error: Debug,\n    for<'a> SaveUser<'a>: StorageRequest<S>,\n{\n    let user = User::new(&storage, dep).await;\n    user.save(&storage).await;\n}\n\n```\n\n\n### Meta\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\nAlso reproducible on beta and nightly;\n\n`rustc --version --verbose`:\n```\nrustc 1.49.0 (e1884a8e3 2020-12-29)\nbinary: rustc\ncommit-hash: e1884a8e3c3e813aada8254edfa120e85bf5ffca\ncommit-date: 2020-12-29\nhost: x86_64-unknown-linux-gnu\nrelease: 1.49.0\n```\n\n### Error output\n\n```\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler/rustc_middle/src/ty/instance.rs:434:85\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\n\nnote: rustc 1.49.0 (e1884a8e3 2020-12-29) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\n#0 [collect_and_partition_mono_items] collect_and_partition_mono_items\nend of query stack\n```\n\n<!--\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\n-->\n<details><summary><strong>Backtrace</strong></summary>\n<p>\n\n```\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler/rustc_middle/src/ty/instance.rs:434:85\nstack backtrace:\n   0: rust_begin_unwind\n             at /rustc/e1884a8e3c3e813aada8254edfa120e85bf5ffca/library/std/src/panicking.rs:495:5\n   1: core::panicking::panic_fmt\n             at /rustc/e1884a8e3c3e813aada8254edfa120e85bf5ffca/library/core/src/panicking.rs:92:14\n   2: core::panicking::panic\n             at /rustc/e1884a8e3c3e813aada8254edfa120e85bf5ffca/library/core/src/panicking.rs:50:5\n   3: rustc_middle::ty::instance::Instance::resolve_drop_in_place\n   4: <rustc_mir::monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor>::visit_terminator\n   5: rustc_mir::monomorphize::collector::collect_neighbours\n   6: rustc_mir::monomorphize::collector::collect_items_rec\n   7: rustc_mir::monomorphize::collector::collect_items_rec\n   8: rustc_mir::monomorphize::collector::collect_items_rec\n   9: rustc_mir::monomorphize::collector::collect_items_rec\n  10: rustc_mir::monomorphize::collector::collect_items_rec\n  11: rustc_mir::monomorphize::collector::collect_items_rec\n  12: rustc_mir::monomorphize::collector::collect_items_rec\n  13: rustc_mir::monomorphize::collector::collect_items_rec\n  14: rustc_mir::monomorphize::collector::collect_items_rec\n  15: rustc_mir::monomorphize::collector::collect_items_rec\n  16: rustc_mir::monomorphize::collector::collect_items_rec\n  17: rustc_mir::monomorphize::collector::collect_items_rec\n  18: rustc_mir::monomorphize::collector::collect_items_rec\n  19: rustc_mir::monomorphize::collector::collect_items_rec\n  20: rustc_mir::monomorphize::collector::collect_items_rec\n  21: rustc_mir::monomorphize::collector::collect_items_rec\n  22: rustc_mir::monomorphize::collector::collect_items_rec\n  23: rustc_mir::monomorphize::collector::collect_items_rec\n  24: rustc_mir::monomorphize::collector::collect_items_rec\n  25: rustc_session::utils::<impl rustc_session::session::Session>::time\n  26: rustc_mir::monomorphize::collector::collect_crate_mono_items\n  27: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\n  28: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::collect_and_partition_mono_items>::compute\n  29: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\n  30: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\n  31: rustc_data_structures::stack::ensure_sufficient_stack\n  32: rustc_query_system::query::plumbing::get_query_impl\n  33: rustc_codegen_ssa::base::codegen_crate\n  34: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\n  35: rustc_interface::passes::QueryContext::enter\n  36: rustc_interface::queries::Queries::ongoing_codegen\n  37: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\n  38: rustc_span::with_source_map\n  39: rustc_interface::interface::create_compiler_and_run\n  40: rustc_span::with_session_globals\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\n\nnote: rustc 1.49.0 (e1884a8e3 2020-12-29) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\n#0 [collect_and_partition_mono_items] collect_and_partition_mono_items\nend of query stack\n```\n\n</p>\n</details>\n\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"Rageking8\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80706/timeline", "performed_via_github_app": null, "state_reason": "completed"}