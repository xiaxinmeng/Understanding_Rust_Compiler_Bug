{"url": "https://api.github.com/repos/rust-lang/rust/issues/55243", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55243/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55243/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55243/events", "html_url": "https://github.com/rust-lang/rust/issues/55243", "id": 372294699, "node_id": "MDU6SXNzdWUzNzIyOTQ2OTk=", "number": 55243, "title": "Derived trait shadows a blanket default impl, specialization unshadows but the generic impl ends up being used", "user": {"login": "mzabaluev", "id": 1198919, "node_id": "MDQ6VXNlcjExOTg5MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1198919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzabaluev", "html_url": "https://github.com/mzabaluev", "followers_url": "https://api.github.com/users/mzabaluev/followers", "following_url": "https://api.github.com/users/mzabaluev/following{/other_user}", "gists_url": "https://api.github.com/users/mzabaluev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzabaluev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzabaluev/subscriptions", "organizations_url": "https://api.github.com/users/mzabaluev/orgs", "repos_url": "https://api.github.com/users/mzabaluev/repos", "events_url": "https://api.github.com/users/mzabaluev/events{/privacy}", "received_events_url": "https://api.github.com/users/mzabaluev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 347795552, "node_id": "MDU6TGFiZWwzNDc3OTU1NTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-specialization", "name": "A-specialization", "color": "f7e101", "default": false, "description": "Area: Trait impl specialization"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1472579062, "node_id": "MDU6TGFiZWwxNDcyNTc5MDYy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-specialization", "name": "F-specialization", "color": "f9c0cc", "default": false, "description": "`#![feature(specialization)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-21T09:13:19Z", "updated_at": "2019-09-15T19:49:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This example does not compile with 1.31.0-nightly (2018-10-20 155510e377ae2a8d8ee0):\r\n\r\n```rust\r\n#![feature(specialization)]\r\n\r\nuse std::borrow::Borrow;\r\n\r\n#[derive(PartialEq)]\r\nstruct MyString(String);\r\n\r\nimpl Borrow<str> for MyString {\r\n    fn borrow(&self) -> &str {\r\n        &self.0\r\n    }\r\n}\r\n\r\nimpl<Rhs> PartialEq<Rhs> for MyString\r\nwhere\r\n    Rhs: ?Sized + Borrow<str>,\r\n{\r\n    default fn eq(&self, rhs: &Rhs) -> bool {\r\n        println!(\"default impl used\");\r\n        self.0 == rhs.borrow()\r\n    }\r\n}\r\n\r\n#[cfg(never)]\r\nimpl PartialEq<str> for MyString {\r\n    fn eq(&self, other: &str) -> bool {\r\n        println!(\"specialized impl used\");\r\n        self.0 == other\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let s = MyString(String::from(\"Hello, world!\"));\r\n    println!(\"{}\", s == \"\u0417\u0434\u0440\u0430\u0432\u0441\u0442\u0432\u0443\u0439, \u043c\u0438\u0440!\");\r\n}\r\n```\r\n\r\nThe error output:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:34:25\r\n   |\r\n34 |     println!(\"{}\", s == \"\u0417\u0434\u0440\u0430\u0432\u0441\u0442\u0432\u0443\u0439, \u043c\u0438\u0440!\");\r\n   |                         ^^^^^^^^^^^^^^^^^^ expected struct `MyString`, found reference\r\n   |\r\n   = note: expected type `MyString`\r\n              found type `&'static str`\r\n```\r\n\r\nEnabling the specialized `impl PartialEq<str>` makes the example work, but it prints \"default impl used\".\r\n\r\nRemoving the `derive` attribute also fixes the example, but only if the manually specialized impl is not present.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55243/timeline", "performed_via_github_app": null, "state_reason": null}