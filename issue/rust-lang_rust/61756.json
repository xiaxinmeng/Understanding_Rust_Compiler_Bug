{"url": "https://api.github.com/repos/rust-lang/rust/issues/61756", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61756/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61756/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61756/events", "html_url": "https://github.com/rust-lang/rust/issues/61756", "id": 454957594, "node_id": "MDU6SXNzdWU0NTQ5NTc1OTQ=", "number": 61756, "title": "`impl Trait` with multiple lifetimes imposes a strange lifetime requirement", "user": {"login": "goffrie", "id": 1240398, "node_id": "MDQ6VXNlcjEyNDAzOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1240398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goffrie", "html_url": "https://github.com/goffrie", "followers_url": "https://api.github.com/users/goffrie/followers", "following_url": "https://api.github.com/users/goffrie/following{/other_user}", "gists_url": "https://api.github.com/users/goffrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/goffrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goffrie/subscriptions", "organizations_url": "https://api.github.com/users/goffrie/orgs", "repos_url": "https://api.github.com/users/goffrie/repos", "events_url": "https://api.github.com/users/goffrie/events{/privacy}", "received_events_url": "https://api.github.com/users/goffrie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-12T00:18:45Z", "updated_at": "2020-06-11T17:32:07Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the [following code](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=4973e923873462ad1d3630ffbd463cd6):\r\n\r\n```rust\r\npub struct Store;\r\nimpl Store {\r\n    fn scan<'a>(&'a self) -> Box<dyn Iterator<Item = u64> + 'a> { panic!() }\r\n}\r\npub struct Transaction<'a> {\r\n    kv: &'a Store,\r\n    reads: Vec<u64>,\r\n}\r\n\r\nimpl<'a> Transaction<'a> {\r\n    pub fn scan(&mut self) -> impl Iterator<Item = u64> + 'a + '_ {\r\n        let iter = self.kv.scan();\r\n        iter.map(move |k| {\r\n            self.reads.push(k);\r\n            k\r\n        })\r\n    }\r\n}\r\n```\r\n\r\nCompiling with `#![feature(nll)]` yields the following error:\r\n```\r\nerror: lifetime may not live long enough\r\n  --> src/lib.rs:24:9\r\n   |\r\n18 |   impl<'a> Transaction<'a> {\r\n   |        -- lifetime `'a` defined here\r\n19 |       pub fn scan(&mut self) ->\r\n   |                   - let's call the lifetime of this reference `'1`\r\n...\r\n24 | /         iter.map(move |k| {\r\n25 | |             self.reads.push(k);\r\n26 | |             k\r\n27 | |         })\r\n   | |__________^ returning this value requires that `'1` must outlive `'a`\r\n\r\nerror: aborting due to previous error\r\n```\r\nThat is, it's requiring that the reference to `Transaction` outlive `'a`. Unfortunately, it doesn't explain at all why that requirement was imposed.\r\n\r\nAlso, just returning `+ '_` complains:\r\n```\r\nerror[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\r\n  --> src/lib.rs:20:9\r\n   |\r\n20 |         impl Iterator<Item = u64> + '_\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\nnote: hidden type `std::iter::Map<std::boxed::Box<dyn std::iter::Iterator<Item = u64>>, [closure@src/lib.rs:24:18: 27:10 self:&mut Transaction<'a>]>` captures the lifetime 'a as defined on the impl at 18:6\r\n  --> src/lib.rs:18:6\r\n   |\r\n18 | impl<'a> Transaction<'a> {\r\n   |      ^^\r\n```\r\n\r\nThis is odd to me because if we return `Box<dyn Iterator<Item = u64> + '_>`, everything works fine (and nobody complains about `'a`). Furthermore, the equivalent to the `impl Trait` using an explicit `existential type TransactionScan<'a, 'b>: Iterator<Item = u64>;` works fine as well. \r\n\r\nThis may be related to/a dupe of #49431, but the errors produced are different so I'm not sure.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61756/timeline", "performed_via_github_app": null, "state_reason": null}