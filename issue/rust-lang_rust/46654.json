{"url": "https://api.github.com/repos/rust-lang/rust/issues/46654", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46654/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46654/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46654/events", "html_url": "https://github.com/rust-lang/rust/issues/46654", "id": 280963535, "node_id": "MDU6SXNzdWUyODA5NjM1MzU=", "number": 46654, "title": "Implement `zip_with` for Iterators", "user": {"login": "vbrandl", "id": 20639051, "node_id": "MDQ6VXNlcjIwNjM5MDUx", "avatar_url": "https://avatars.githubusercontent.com/u/20639051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vbrandl", "html_url": "https://github.com/vbrandl", "followers_url": "https://api.github.com/users/vbrandl/followers", "following_url": "https://api.github.com/users/vbrandl/following{/other_user}", "gists_url": "https://api.github.com/users/vbrandl/gists{/gist_id}", "starred_url": "https://api.github.com/users/vbrandl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vbrandl/subscriptions", "organizations_url": "https://api.github.com/users/vbrandl/orgs", "repos_url": "https://api.github.com/users/vbrandl/repos", "events_url": "https://api.github.com/users/vbrandl/events{/privacy}", "received_events_url": "https://api.github.com/users/vbrandl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-11T10:22:37Z", "updated_at": "2018-01-30T13:39:52Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\nIn addition to the `zip` method for iterators, I think it would be great to have a `zip_with` method, that takes a function as parameter that gets applied to the iterator values.\r\nFrom my understanding it is required for the `conservative_impl_trait` feature to become stable first but after that, the method might look like this:\r\n```rust\r\nfn zip_with<C, F, U>(self, combo: F, other: U) -> impl Iterator<Item = C>\r\nwhere\r\n    U: IntoIterator,\r\n    F: Fn(Self::Item, U::Item) -> C,\r\n{\r\n    self.zip(other.into_iter()).map(move |(s, o)| {\r\n        combo(s, o)\r\n    })\r\n}\r\n```\r\nI imagine zipping, than mapping to be a pretty common use case, so that method might be a pretty useful addition to the stdlib.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46654/timeline", "performed_via_github_app": null, "state_reason": null}