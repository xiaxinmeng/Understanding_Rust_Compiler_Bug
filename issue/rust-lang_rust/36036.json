{"url": "https://api.github.com/repos/rust-lang/rust/issues/36036", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/36036/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/36036/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/36036/events", "html_url": "https://github.com/rust-lang/rust/issues/36036", "id": 173593126, "node_id": "MDU6SXNzdWUxNzM1OTMxMjY=", "number": 36036, "title": "ICE: the type `u8` has an unknown layout", "user": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252628, "node_id": "MDU6TGFiZWwyNjIyNTI2Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-beta", "name": "regression-from-stable-to-beta", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to beta."}], "state": "closed", "locked": false, "assignee": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2016-08-27T12:08:10Z", "updated_at": "2016-09-17T05:58:49Z", "closed_at": "2016-09-17T05:58:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "(See https://github.com/rust-lang/rust/issues/36036#issuecomment-242961726 for shorter example)\n\nI tried this code:\n\n``` rust\nextern crate futures;\nextern crate tokio_core;\nextern crate tokio_proto;\n\nuse futures::BoxFuture;\nuse futures::stream::BoxStream;\nuse std::error::Error as StdError;\nuse std::io;\nuse tokio_proto::Service;\nuse tokio_proto::proto::pipeline;\nuse tokio_proto::io::{Transport, Readiness};\n\nfn main() {\n    let service = ChunkedService {\n        _inner: tokio_proto::simple_service(|vec| -> Result<Vec<u8>, io::Error> { Ok(vec) }),\n    };\n    pipeline::Server::new(service, Stream).unwrap();\n}\n\npub type Frame = pipeline::Frame<Vec<u8>, Error>;\n\n#[derive(Debug)]\npub struct Error;\n\nimpl From<pipeline::Error<Error>> for Error {\n    fn from(_: pipeline::Error<Error>) -> Self {\n        unimplemented!()\n    }\n}\n\npub struct ChunkedService<T> {\n    _inner: T,\n}\n\nimpl<T> Service for ChunkedService<T>\n    where T: Service<Req = Vec<u8>, Resp = Vec<u8>>,\n          T::Error: StdError\n{\n    type Req = Vec<u8>;\n    type Resp = pipeline::Message<Vec<u8>, BoxStream<(), Error>>;\n    type Error = Error;\n\n    type Fut = BoxFuture<Self::Resp, Self::Error>;\n\n    fn call(&self, _: Self::Req) -> Self::Fut {\n        unimplemented!()\n    }\n}\n\nstruct Stream;\n\nimpl Transport for Stream {\n    type In = Frame;\n    type Out = Frame;\n    fn read(&mut self) -> io::Result<Option<Self::Out>> {\n        unimplemented!()\n    }\n    fn write(&mut self, _: Self::In) -> io::Result<Option<()>> {\n        unimplemented!()\n    }\n    fn flush(&mut self) -> io::Result<Option<()>> {\n        unimplemented!()\n    }\n}\n\nimpl Readiness for Stream {\n    fn is_readable(&self) -> bool {\n        false\n    }\n    fn is_writable(&self) -> bool {\n        false\n    }\n}\n\nimpl io::Read for Stream {\n    fn read(&mut self, _: &mut [u8]) -> io::Result<usize> {\n        unimplemented!()\n    }\n}\n\nimpl io::Write for Stream {\n    fn write(&mut self, _: &[u8]) -> io::Result<usize> {\n        unimplemented!()\n    }\n    fn flush(&mut self) -> io::Result<()> {\n        unimplemented!()\n    }\n}\n```\n\nwith\n- `tokio-core` at b9395808bea624e6b64bcafbf6cc05cabdaca6cc,\n- `tokio-proto` at 9b694ed5d92a9614058674032a37836300727314\n- `tokio-service` at 821739abb9a9c138d84ea1a81c90809af7530e08\n- `futures` at ecbca61c8123eff5b939933d9fe0633b522be52b\n\nI expected to see this happen: compilation success\n\nInstead, this happened: crashed nightly and beta compiler\n\n```\nerror: internal compiler error: ../src/librustc_trans/type_of.rs:155: failed to get layout for `tokio_proto::proto::pipeline::pipeline::Pipeline<tokio_proto::proto::pipeline::server::Dispatch<ChunkedService<tokio_proto::SimpleService<[closure@src/main.rs:15:45: 15:92], std::vec::Vec<u8>>>>, Stream>`: the type `u8` has an unknown layout\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: run with `RUST_BACKTRACE=1` for a backtrace\n\nthread 'rustc' panicked at 'Box<Any>', ../src/librustc_errors/lib.rs:643\nstack backtrace:\n   1:     0x7fcd3eb42833 - std::sys::backtrace::tracing::imp::write::h482d45d91246faa2\n   2:     0x7fcd3eb5311d - std::panicking::default_hook::_{{closure}}::h89158f66286b674e\n   3:     0x7fcd3eb5166d - std::panicking::default_hook::h9e30d428ee3b0c43\n   4:     0x7fcd3eb51d68 - std::panicking::rust_panic_with_hook::h2224f33fb7bf2f4c\n   5:     0x7fcd37813387 - std::panicking::begin_panic::hd377747b5e679457\n   6:     0x7fcd37823a48 - rustc_errors::Handler::bug::h5390c1898e6c2b8a\n   7:     0x7fcd3bef0f2a - rustc::session::opt_span_bug_fmt::_{{closure}}::h7c6beff1b8c2acab\n   8:     0x7fcd3be3d055 - rustc::session::opt_span_bug_fmt::h8b8cb70ab73590aa\n   9:     0x7fcd3be3ce92 - rustc::session::bug_fmt::ha0645f57a1d17c87\n  10:     0x7fcd3dd46ca2 - rustc_trans::type_of::sizing_type_of::hac6f4c390971a5ca\n  11:     0x7fcd3dc863c3 - _<collections..vec..Vec<T> as core..iter..traits..FromIterator<T>>::from_iter::hc8dd23e1f341a34f\n  12:     0x7fcd3dcafe5d - rustc_trans::adt::mk_struct::h99083854ab09bd5b\n  13:     0x7fcd3dcad286 - rustc_trans::adt::represent_type::hd0a7f478d65fa630\n  14:     0x7fcd3dd47a9d - rustc_trans::type_of::in_memory_type_of::h642c7fd5249a3167\n  15:     0x7fcd3dd57e86 - rustc_trans::abi::FnType::unadjusted::_{{closure}}::h09238684ac765f3d\n  16:     0x7fcd3dca946e - rustc_trans::abi::FnType::unadjusted::h881cc0f40154edcc\n  17:     0x7fcd3dd00d79 - rustc_trans::declare::declare_fn::hb0a161c85d767c68\n  18:     0x7fcd3dd3f657 - rustc_trans::trans_item::TransItem::predefine::h43bc091dbd423801\n  19:     0x7fcd3dcbd8e1 - rustc_trans::base::trans_crate::hfc4e2ab878e1c72d\n  20:     0x7fcd3ef0ba92 - rustc_driver::driver::phase_4_translate_to_llvm::hc799bcf39cd85f66\n  21:     0x7fcd3ef46ad0 - rustc_driver::driver::compile_input::_{{closure}}::h688e4abb1bbb42bf\n  22:     0x7fcd3ef386a0 - rustc_driver::driver::phase_3_run_analysis_passes::_{{closure}}::h45e03cee16dcf298\n  23:     0x7fcd3ee89b7f - rustc::ty::context::TyCtxt::create_and_enter::h0021bc4caf3a2e06\n  24:     0x7fcd3eefb094 - rustc_driver::driver::compile_input::hd9ecc57abd3cba85\n  25:     0x7fcd3ef2118d - rustc_driver::run_compiler::h184264500271cc39\n  26:     0x7fcd3ee62c43 - std::panicking::try::do_call::h17a7a17ad7240c5c\n  27:     0x7fcd3eb61336 - __rust_maybe_catch_panic\n  28:     0x7fcd3ee80039 - _<F as alloc..boxed..FnBox<A>>::call_box::h95ef76c8d48c6f60\n  29:     0x7fcd3eb4fba0 - std::sys::thread::Thread::new::thread_start::he0bf102845911132\n  30:     0x7fcd36fbb453 - start_thread\n  31:     0x7fcd3e7a07de - __GI___clone\n  32:                0x0 - <unknown>\n```\n## Meta\n\n`rustc --version --verbose`:\n\n```\nrustc 1.13.0-nightly (e07dd59ea 2016-08-25)\nbinary: rustc\ncommit-hash: e07dd59eaeb7be95afd2fb3dc131108ae750c91c\ncommit-date: 2016-08-25\nhost: x86_64-unknown-linux-gnu\nrelease: 1.13.0-nightly\n```\n", "closed_by": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/36036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/36036/timeline", "performed_via_github_app": null, "state_reason": "completed"}