{"url": "https://api.github.com/repos/rust-lang/rust/issues/60113", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/60113/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/60113/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/60113/events", "html_url": "https://github.com/rust-lang/rust/issues/60113", "id": 435214388, "node_id": "MDU6SXNzdWU0MzUyMTQzODg=", "number": 60113, "title": "Type alias definition changed during reexport", "user": {"login": "Disasm", "id": 1418749, "node_id": "MDQ6VXNlcjE0MTg3NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1418749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Disasm", "html_url": "https://github.com/Disasm", "followers_url": "https://api.github.com/users/Disasm/followers", "following_url": "https://api.github.com/users/Disasm/following{/other_user}", "gists_url": "https://api.github.com/users/Disasm/gists{/gist_id}", "starred_url": "https://api.github.com/users/Disasm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Disasm/subscriptions", "organizations_url": "https://api.github.com/users/Disasm/orgs", "repos_url": "https://api.github.com/users/Disasm/repos", "events_url": "https://api.github.com/users/Disasm/events{/privacy}", "received_events_url": "https://api.github.com/users/Disasm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-19T15:28:12Z", "updated_at": "2020-02-11T08:11:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the following crate (`test2`):\r\n```rust\r\npub trait Foo { }\r\n\r\npub type FooDyn = dyn Foo;\r\n\r\npub struct Bar;\r\n\r\nimpl Bar {\r\n    pub fn bar(&self) -> &FooDyn {\r\n        unimplemented!();\r\n    }\r\n}\r\n```\r\nDocumentation for this crate says that `FooDyn` and `bar` signatures are the following:\r\n```rust\r\ntype FooDyn = dyn Foo;\r\npub fn bar(&self) -> &FooDyn\r\n```\r\n\r\nYou can assume that according to the lifetime elision rules you will get the following equivalent signature:\r\n```rust\r\npub fn bar(&'a self) -> &'a FooDyn\r\n```\r\n\r\nHowever, it's not true. If you reexport `FooDyn` and `Bar` types in another crate (`test1`), you will get the following signatures in `test1` crate:\r\n```rust\r\ntype FooDyn = dyn Foo + 'static;\r\npub fn bar(&self) -> &(dyn Foo + 'static)\r\n```\r\n\r\nOne of the ways of resolving the issue is the following declaration:\r\n```rust\r\npub type FooDyn<'a> = dyn 'a + Foo;\r\n```\r\n\r\nAs for me, it's strange to have `'static` lifetime here by default, so maybe there should be an error if lifetime is omitted.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/60113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/60113/timeline", "performed_via_github_app": null, "state_reason": null}