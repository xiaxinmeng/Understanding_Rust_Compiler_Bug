{"url": "https://api.github.com/repos/rust-lang/rust/issues/16541", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16541/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16541/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16541/events", "html_url": "https://github.com/rust-lang/rust/issues/16541", "id": 40422241, "node_id": "MDU6SXNzdWU0MDQyMjI0MQ==", "number": 16541, "title": "feature request: `Compose` trait for strings and functions", "user": {"login": "apoelstra", "id": 1351933, "node_id": "MDQ6VXNlcjEzNTE5MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apoelstra", "html_url": "https://github.com/apoelstra", "followers_url": "https://api.github.com/users/apoelstra/followers", "following_url": "https://api.github.com/users/apoelstra/following{/other_user}", "gists_url": "https://api.github.com/users/apoelstra/gists{/gist_id}", "starred_url": "https://api.github.com/users/apoelstra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions", "organizations_url": "https://api.github.com/users/apoelstra/orgs", "repos_url": "https://api.github.com/users/apoelstra/repos", "events_url": "https://api.github.com/users/apoelstra/events{/privacy}", "received_events_url": "https://api.github.com/users/apoelstra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-08-16T22:43:40Z", "updated_at": "2014-08-17T17:06:58Z", "closed_at": "2014-08-17T16:52:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As @huonw mentions in #14482, mathematical convention is that addition is commutative. The stdlib already follows mathematical convention in some cases (for example, `Zero` requires `Add` and is expected to be the additive identity; ditto for `One` and `Mul`).\n\nCurrently everything in the stdlib which implements `Add` implements `add` as a commutative operator, except for strings. Therefore I propose:\n- Introduce a `Compose` trait with a `compose` function that sugars to the `++` operator.\n- Implement this on `String` for concatenation, and `Fn` traits for composition (<b>edit</b> this actually doesn't make sense for functions that aren't `A->B` and `B->C`, never mind). This replaces `add` for `String`.\n- Add \"must be commutative\" to the documentation for `Add`.\n  This will help in writing generic code, since it is an (often unstated) assumption in many algorithms that `+` is a commutative operator. It'll also make analysis easier since programmers won't have to memorize that `+` means something different in rust than it does everywhere else.\n\nIt might also be worthwhile to add an `empty()` constructor to `Compose` to make it a monoid trait. Though as reem points out on IRC, `Compose+Default` is probably preferable as it is more explicit.\n\n<b>Edit:</b> Perhaps this should be on discourse, but it's a very minor (though breaking) change that cleans up the API and doesn't remove any functionality, and doesn't have any room for bikeshedding that I see. Sorry if I'm wrong on this point.\n", "closed_by": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16541/timeline", "performed_via_github_app": null, "state_reason": "completed"}