{"url": "https://api.github.com/repos/rust-lang/rust/issues/84253", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84253/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84253/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84253/events", "html_url": "https://github.com/rust-lang/rust/issues/84253", "id": 860082716, "node_id": "MDU6SXNzdWU4NjAwODI3MTY=", "number": 84253, "title": "Missed optimization comparing TypeId arrays", "user": {"login": "AngelicosPhosphoros", "id": 13154246, "node_id": "MDQ6VXNlcjEzMTU0MjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/13154246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AngelicosPhosphoros", "html_url": "https://github.com/AngelicosPhosphoros", "followers_url": "https://api.github.com/users/AngelicosPhosphoros/followers", "following_url": "https://api.github.com/users/AngelicosPhosphoros/following{/other_user}", "gists_url": "https://api.github.com/users/AngelicosPhosphoros/gists{/gist_id}", "starred_url": "https://api.github.com/users/AngelicosPhosphoros/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AngelicosPhosphoros/subscriptions", "organizations_url": "https://api.github.com/users/AngelicosPhosphoros/orgs", "repos_url": "https://api.github.com/users/AngelicosPhosphoros/repos", "events_url": "https://api.github.com/users/AngelicosPhosphoros/events{/privacy}", "received_events_url": "https://api.github.com/users/AngelicosPhosphoros/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2021-04-16T18:48:41Z", "updated_at": "2021-08-22T13:40:41Z", "closed_at": "2021-08-22T13:40:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\n**Edit:** Look nikic example [below](https://github.com/rust-lang/rust/issues/84253#issuecomment-821560496).\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::any::TypeId;\r\n\r\ntrait CheckEqTuple{\r\n    type OutSliceType: AsRef<[TypeId]> + AsMut<[TypeId]>;\r\n    fn get_unsorted_ids()->Self::OutSliceType;\r\n    fn get_quick_sorted_ids()->Self::OutSliceType{\r\n        let mut ret = Self::get_unsorted_ids();\r\n        ret.as_mut().sort_unstable();\r\n        ret\r\n    }\r\n    fn get_slow_sorted_ids()->Self::OutSliceType{\r\n        let mut ret = Self::get_unsorted_ids();\r\n        ret.as_mut().sort();\r\n        ret\r\n    }\r\n}\r\n\r\nimpl<A: 'static, B: 'static> CheckEqTuple for (A, B){\r\n    type OutSliceType = [TypeId; 2];\r\n    fn get_unsorted_ids()->Self::OutSliceType{\r\n        [TypeId::of::<A>(), TypeId::of::<B>()]\r\n    }\r\n}\r\n\r\nfn cmp_unord<A: CheckEqTuple, B: CheckEqTuple>()->bool{\r\n    A::get_unsorted_ids().as_ref()\r\n     == B::get_unsorted_ids().as_ref()\r\n}\r\n\r\nfn cmp_ord_q<A: CheckEqTuple, B: CheckEqTuple>()->bool{\r\n    A::get_quick_sorted_ids().as_ref() \r\n        == B::get_quick_sorted_ids().as_ref()\r\n}\r\n\r\nfn cmp_ord_s<A: CheckEqTuple, B: CheckEqTuple>()->bool{\r\n    A::get_slow_sorted_ids().as_ref()\r\n     == B::get_slow_sorted_ids().as_ref()\r\n}\r\n\r\npub fn cmp_same()->bool{\r\n    cmp_unord::<(i32, bool), (i32, bool)>()\r\n}\r\n\r\npub fn cmp_diff_order()->bool{\r\n    cmp_unord::<(bool, i32), (i32, bool)>()\r\n}\r\n\r\npub fn cmp_ord()->bool{\r\n    cmp_ord_q::<(bool, i32), (i32, bool)>()\r\n}\r\n\r\npub fn cmp_ord2()->bool{\r\n    cmp_ord_s::<(bool, i32), (i32, bool)>()\r\n}\r\n\r\n```\r\n\r\nI expected to see this happen: \r\n\r\nThis code should compile to `return true` or `return false`.\r\n```asm\r\nexample::cmp_same:\r\n        mov     al, 1\r\n        ret\r\n\r\nexample::cmp_diff_order:\r\n        xor     eax, eax\r\n        ret\r\n\r\nexample::cmp_ord:\r\n        mov     al, 1\r\n        ret\r\n```\r\n\r\nInstead, this happened:\r\n\r\nasm contains useless operations\r\n```asm\r\nexample::cmp_same:\r\n        sub     rsp, 32\r\n        movabs  rax, -8661621401413125213\r\n        mov     qword ptr [rsp + 8], rax\r\n        mov     al, 1\r\n        add     rsp, 32\r\n        ret\r\n\r\nexample::cmp_diff_order:\r\n        sub     rsp, 32\r\n        movabs  rax, -5015437470765251660\r\n        mov     qword ptr [rsp + 8], rax\r\n        xor     eax, eax\r\n        add     rsp, 32\r\n        ret\r\n\r\nexample::cmp_ord:\r\n        sub     rsp, 32\r\n        movabs  rax, -5015437470765251660\r\n        mov     qword ptr [rsp + 8], rax\r\n        mov     al, 1\r\n        add     rsp, 32\r\n        ret\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.51.0 (2fd73fabe 2021-03-23)\r\n```\r\n\r\n### Proposed fix\r\nIf I add additional SROA flag, useless code is eliminated. I think, we need to add another SROA to pipeline somewhere before last instcombine and dead code elimination.\r\n\r\nHere [godbolt link](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAM1QDsCBlZAQwBtMQBGAFlJvoCqAZ0wAFAB4gA5AAYppAFZdSrZrVDEArkIKkR7ZATx1KmWugDCqVpoC2tEN15n0AGTy1MAOTsAjTMQgAKwAzKQADqhChMa0Vjb2jryR0UZ07p4%2Btv6BoXqYBmm0DATMxATxdg5O%2BYWxJWUEGd5%2BAcFhOo2ViTWd5c1ZOe0AlHqomsTIHFLamADUOuggIGoAnssAKqvhmACS6ACkIQBCBzIAgmfnBMTMhHMWCJjIANbYAI4bmuHsBwDspwuc2BcwI23mAHlNIxWHgplsdiA5uchAAlTBUI4WA5BY4IvaHIIAESO2DmBwATMdkUIALLQrE4vHg/Y4kkhbBHQHnEFzKi0ObATAEAD6mloQhIBEw6BFeHQQggwwAtKSGAUqMsoTC4Zh8Vyrrz%2BYLhSL3po4S8RZLyjK5QqlaqOerWJqQNqGLD4eD/tzebz2AQ5rZoXNiMLySEiXMXW6haLxTbpbL5Yrhgagf7geGCAA6ZhCEUhghK3NJsUS0q%2BdhKjM8rNh4WGkH/EmZ4HG%2BPW1ioADu1qldtTjrVGq10M9uv1AObWcDwdDOcj0djyy7icHKYd6ZOs/9OfzheLpaTtd37f3TYvrauN4uVzwth%2BWPOSLAUk6RmQpDmxzfH9KL9SQeJ5Xg%2BL4fnmGhiDmCBzh/Y50xnC8wR2OYPS9PVwWXclcXxVkTjmCk2TrI0BXXCVN3tNMnWwVd3QnTDpz9BsmXwpYQFQN0X1JJUf3Y5YuOWLFTg5WtiT3O9Lj%2BNtLguY1kCfCsSEOEILFfEDnjeT5vnYBCkUeLTwN0zBeJVUlfFQaxfT3V8QAopMh23Q8RXDKhawvZcjmjP97NNDdbS3NMXLcjzpNkq4FKUlSzRfAzQO0iC9N/eKjJ0yCzNoyzrOQ%2BtgTsrtzUtAdAuo0sC1cjElXJTyWyjbyUr80UiteErkzK4YQqq9N7xk295IFRTwhFGKhDizSwPS5K/wmxKTMyiyrNYGyLwK00hB7ftHKC8rC1Cnq8uBbyGt8rsNr7NqnOCir9tvPr7wucJNF8PlBqUoRmFsTARw5bLlty3khuU4gOKxCA8BCCkfz%2B0ZYIhqG5hhsy7oix7nteuYgfwKgqBGkGAh%2B7A/pWw6gfFFThLUiA/p/eHYfByHoaWndsDCqSriel6ouGlTCeJgGQSBmL3kpixqaW2nIfp%2BGmesFm2fuuTzk5jGhZBik%2BaWknAeikHrVF8XrElilpcZxHmeR3rUeV9HjVsZhVn8EVwjUOFawF4E8CoTHdfQDWkJYrMcwmWhSJbRXeRd2g4TASBKQpAAJAoe3jg7WykUZWGkIJ5AcWR5FQaRUW0INJQmKZyQpEJOHkAhpDkYZRheEAQhCXNW47zuu4ANhUaRuHkWwuBkGRSDzuRSELqR5CEEBR7r/PRjgWAYEQFBUCfPB2DICgIDQTft5AYhOCCThR6oLfpWIWfqfr%2BRfA8Mp1ikGvSH3r76AhWhWGfiesHt9Q7A76kHwOGQweAABumBZ751IJgcQzxoTTFfh4aUWdYGwl8LcYgqwrBYGATcR80ga6jH4IwFgQCeB8DoAQYQYhJCwKUJwFQagNAlxUHgXws9ICjFQOEIoMDlQWDmHwggyp2BQOWlGEIcwhFzBdkIEQY16oUgpEIYgqBmBzA8DofeD9PCCh7L4Ng6ApjxxngUZ4RRTDmG6A4ZhLgBitECMwlIMQ6B2OUG4ooTjshtGYfoKx9RSjlE8QEyx4C6ANH6B4FofiXF6BCRUawVRlB9CaLEwY/jRhl0mBwTgmds652AVPLQui5icFzKfXMMhYK4EICQSu1cfxWAPgEJpBS5jFx0LXO%2BjdSBPGYFgQIfFm5BFHuggepAh7jLHiU6QM856kAXg3Ugy81773CFvAI5BKCbO2YEY%2Bp9z6XwCDfXwwD9FP2IfId%2BZgCBfx/sA/%2BrCgGwNAUEqBMCJ7wMQdKG55B6AFGAZg7BuCMDTAnoQoeL8M7UPoEwNg%2BTeBkLoRIYBSgoaqHUEfdhmDuF8VEbEQRwjRHiMwJI7yIQLF1BMBAFwYS4HmF8UMVxUR3FxBSYkNlqRYgsv8bUIJUSkmMsCZE4oST%2BUJPSaKyVmTnFcByeMPJiq%2B5SBznM2BpSS7IAqVUyptSID1KIDBSkzSHgby2dvJpJsukl16YvUYgzhmUEKVIKZMzR7jwLgsvQSyVkZybi3CkuZu4AE4AAcPAw3dwjRSbgMgo1/DVdSzVE8p4OtWesiASBsZUF2dQGhiLKEopoWihhE9WAIFnswqtQg82oQ4KPYg1aQBQxbfWr2VBG1zzdRq71k9pBEi7WGHVerqm1IgUIUd5TKkTszYG0gzdW65hjRG0%2B4aI3cApEELdYa1VTIHRmv188%2BluopMUrVvqA39KgdfWIjggA%3D%3D).\r\n", "closed_by": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84253/timeline", "performed_via_github_app": null, "state_reason": "completed"}