{"url": "https://api.github.com/repos/rust-lang/rust/issues/67456", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67456/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67456/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67456/events", "html_url": "https://github.com/rust-lang/rust/issues/67456", "id": 541095747, "node_id": "MDU6SXNzdWU1NDEwOTU3NDc=", "number": 67456, "title": "Tracking issue for const slice::from_raw_parts", "user": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 268744493, "node_id": "MDU6TGFiZWwyNjg3NDQ0OTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-fn", "name": "A-const-fn", "color": "f7e101", "default": false, "description": "Area: const fn foo(..) {..}. Pure functions which can be applied at compile time."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 762300676, "node_id": "MDU6TGFiZWw3NjIzMDA2NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-blocked", "name": "S-blocked", "color": "d3dddd", "default": false, "description": "Status: marked as blocked \u274c on something else such as an RFC or other implementation work."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 2238194189, "node_id": "MDU6TGFiZWwyMjM4MTk0MTg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-slice", "name": "A-slice", "color": "f7e101", "default": false, "description": "Area: [T]"}, {"id": 2240305001, "node_id": "MDU6TGFiZWwyMjQwMzA1MDAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/Libs-Tracked", "name": "Libs-Tracked", "color": "d4c5f9", "default": false, "description": "Libs issues that are tracked on the team's project board."}, {"id": 2240342704, "node_id": "MDU6TGFiZWwyMjQwMzQyNzA0", "url": "https://api.github.com/repos/rust-lang/rust/labels/Libs-Small", "name": "Libs-Small", "color": "d4c5f9", "default": false, "description": "Libs issues that are considered \"small\" or self-contained"}, {"id": 2242906716, "node_id": "MDU6TGFiZWwyMjQyOTA2NzE2", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-raw-pointers", "name": "A-raw-pointers", "color": "f7e101", "default": false, "description": "Area: raw pointers, MaybeUninit, NonNull"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-12-20T16:58:39Z", "updated_at": "2023-03-20T11:46:18Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Make `slice::from_raw_parts` and `slice::from_raw_parts_mut` a const fn available under a feature flag.\r\nThis would require a change in the `ptr` module as well, as slice module just forwards to it.\r\n\r\n`slice::from_raw_parts[mut]` is used in alot of places (e.g `slice::from_ref[mut]`, which would get one step closer into constification if `slice::from_raw_parts[mut]` is a const fn.\r\n\r\nHere is a little playground to show it's possible:\r\nhttps://play.rust-lang.org/?version=nightly&mode=release&edition=2018&gist=dd5c506a3e082c619f557d972e9956ff\r\n\r\nIn order to get this working, the following functions and functionalities need to be constified:\r\n - [x] `ptr::slice_from_raw_parts` (https://github.com/rust-lang/rust/pull/67462)\r\n - [ ] ~~`intrinsics::is_aligned_and_not_null` (https://github.com/rust-lang/rust/issues/62420, impl'd in https://github.com/rust-lang/rust/pull/79684)~~\r\n const eval select solves this (https://github.com/rust-lang/rust/pull/89247)\r\n    - [x] ~~`ptr::is_null` (#74939, implemented in #74940)~~\r\n    - [ ] ~~`ptr as usize` (\"pointer-to-integer cast\". Needs an RFC)~~\r\n---\r\n\r\nImplementation PR for `ptr::slice_from_raw_parts`: https://github.com/rust-lang/rust/pull/67462\r\n\r\n----\r\n\r\n```rust\r\n// core::ptr\r\npub const fn slice_from_raw_parts<T>(data: *const T, len: usize) -> *const [T];\r\npub const fn slice_from_raw_parts_mut<T>(data: *mut T, len: usize) -> *mut [T];\r\n\r\n// core::slice\r\npub const unsafe fn from_raw_parts<'a, T>(data: *const T, len: usize) -> &'a [T];\r\npub const unsafe fn from_raw_parts_mut<'a, T>(data: *mut T, len: usize) -> &'a mut [T];\r\n\r\n// core::ptr::NonNull\r\npub const fn slice_from_raw_parts(data: NonNull<T>, len: usize) -> Self\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67456/reactions", "total_count": 10, "+1": 7, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 3, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67456/timeline", "performed_via_github_app": null, "state_reason": null}