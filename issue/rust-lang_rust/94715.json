{"url": "https://api.github.com/repos/rust-lang/rust/issues/94715", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94715/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94715/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94715/events", "html_url": "https://github.com/rust-lang/rust/issues/94715", "id": 1162026405, "node_id": "I_kwDOAAsO6M5FQx2l", "number": 94715, "title": "Confusing lifetime diagnostics hint: \"note: expected `&str` found `&str`\"", "user": {"login": "timClicks", "id": 27889, "node_id": "MDQ6VXNlcjI3ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/27889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timClicks", "html_url": "https://github.com/timClicks", "followers_url": "https://api.github.com/users/timClicks/followers", "following_url": "https://api.github.com/users/timClicks/following{/other_user}", "gists_url": "https://api.github.com/users/timClicks/gists{/gist_id}", "starred_url": "https://api.github.com/users/timClicks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timClicks/subscriptions", "organizations_url": "https://api.github.com/users/timClicks/orgs", "repos_url": "https://api.github.com/users/timClicks/repos", "events_url": "https://api.github.com/users/timClicks/events{/privacy}", "received_events_url": "https://api.github.com/users/timClicks/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-03-07T23:05:42Z", "updated_at": "2022-06-21T08:12:28Z", "closed_at": "2022-06-19T23:01:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nI have occasionally encountered a few problems with the output relating to \"[E0495](https://doc.rust-lang.org/stable/error-index.html#E0495): cannot infer an appropriate lifetime due to conflicting requirements\". The recommended fix is the same as what's being provided. I haven't been able to create a minimum sized repro, but the example below definitely produces the error.\r\n\r\nGiven the following code: ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=a3e9292068ec0bb46f4caeea489f6fef))<!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\nuse std::ops::{Bound, RangeBounds};\r\n\r\n#[derive(PartialEq, Eq, PartialOrd)]\r\nstruct OrdBytes<'a>(&'a [u8]);\r\n\r\nimpl Ord for OrdBytes<'_> {\r\n    fn cmp(&self, other: &Self) -> std::cmp::Ordering {\r\n        for (left, right) in (self.0).iter().zip(other.0.iter()) {\r\n            match left.cmp(right) {\r\n                std::cmp::Ordering::Equal => continue,\r\n                ordering => return ordering,\r\n            }\r\n        }\r\n        std::cmp::Ordering::Equal\r\n    }\r\n}\r\n\r\nimpl<'a> std::ops::RangeBounds<[u8]> for BytesRange<'_> {\r\n    #[inline]\r\n    fn start_bound(&self) -> std::ops::Bound<&[u8]> {\r\n        Bound::Included(&self.start.0)\r\n    }\r\n\r\n    #[inline]\r\n    fn end_bound(&self) -> std::ops::Bound<&[u8]> {\r\n        Bound::Included(&self.end.0)\r\n    }\r\n}\r\n\r\nstruct BytesRange<'a> {\r\n    start: OrdBytes<'a>,\r\n    end: OrdBytes<'a>,\r\n}\r\n\r\nimpl From<(&str, &str)> for BytesRange<'_> {\r\n    fn from(bounds: (&str, &str)) -> Self {\r\n        let lower = bounds.0;\r\n        let upper = bounds.1;\r\n    \r\n        BytesRange {\r\n            start: OrdBytes(lower.as_bytes()),\r\n            end: OrdBytes(upper.as_bytes()),\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let r: BytesRange = (\"apple\", \"kiwi\").into();\r\n    assert!(r.contains(b\"banana\"));\r\n    assert!(!r.contains(b\"pear\"));\r\n}\r\n```\r\n\r\nThe current output generates the following error message:\r\n\r\n```\r\nerror: cannot infer an appropriate lifetime due to conflicting requirements\r\n  --> src/main.rs:37:21\r\n   |\r\n37 |         let lower = bounds.0;\r\n   |                     ^^^^^^^^\r\n   |\r\nnote: first, the lifetime cannot outlive the anonymous lifetime defined here...\r\n  --> src/main.rs:36:22\r\n   |\r\n36 |     fn from(bounds: (&str, &str)) -> Self {\r\n   |                      ^^^^\r\nnote: ...so that the expression is assignable\r\n  --> src/main.rs:37:21\r\n   |\r\n37 |         let lower = bounds.0;\r\n   |                     ^^^^^^^^\r\n   = note: expected `&str`\r\n              found `&str`\r\nnote: but, the lifetime must be valid for the lifetime `'_` as defined here...\r\n  --> src/main.rs:35:12\r\n   |\r\n35 | impl From<(&str, &str)> for BytesRange<'_> {\r\n   |            ^\r\nnote: ...so that the types are compatible\r\n  --> src/main.rs:40:9\r\n   |\r\n40 | /         BytesRange {\r\n41 | |             start: OrdBytes(lower.as_bytes()),\r\n42 | |             end: OrdBytes(upper.as_bytes()),\r\n43 | |         }\r\n   | |_________^\r\n   = note: expected `BytesRange<'_>`\r\n              found `BytesRange<'_>`\r\n```\r\n\r\nAs an interim step, perhaps there could be a check in the hint to see whether the `Debug` of the cause and the solution are same? If so, skip providing a `note:`\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n", "closed_by": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94715/timeline", "performed_via_github_app": null, "state_reason": "completed"}