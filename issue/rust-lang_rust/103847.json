{"url": "https://api.github.com/repos/rust-lang/rust/issues/103847", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103847/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103847/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103847/events", "html_url": "https://github.com/rust-lang/rust/issues/103847", "id": 1431920465, "node_id": "I_kwDOAAsO6M5VWV9R", "number": 103847, "title": "No errors encountered even though delay_span_bug issued", "user": {"login": "AtomicGamer9523", "id": 65981247, "node_id": "MDQ6VXNlcjY1OTgxMjQ3", "avatar_url": "https://avatars.githubusercontent.com/u/65981247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AtomicGamer9523", "html_url": "https://github.com/AtomicGamer9523", "followers_url": "https://api.github.com/users/AtomicGamer9523/followers", "following_url": "https://api.github.com/users/AtomicGamer9523/following{/other_user}", "gists_url": "https://api.github.com/users/AtomicGamer9523/gists{/gist_id}", "starred_url": "https://api.github.com/users/AtomicGamer9523/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AtomicGamer9523/subscriptions", "organizations_url": "https://api.github.com/users/AtomicGamer9523/orgs", "repos_url": "https://api.github.com/users/AtomicGamer9523/repos", "events_url": "https://api.github.com/users/AtomicGamer9523/events{/privacy}", "received_events_url": "https://api.github.com/users/AtomicGamer9523/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-11-01T18:53:20Z", "updated_at": "2022-11-21T21:48:20Z", "closed_at": "2022-11-21T21:48:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n<details><summary>Code</summary>\r\n<p>\r\n\r\nmain.rs:\r\n```rust\r\n#![feature(type_alias_impl_trait)]\r\n#![feature(trait_alias)]\r\nmod executor; use executor::*;\r\nmod worker; use worker::*;\r\n\r\n\r\n// Amount of threads to use\r\nconst POOL_SIZE: u32 = 12;\r\n\r\n\r\n#[tokio::main]\r\nasync fn main() -> std::io::Result<()> {\r\n\r\n    let mut pool = Executor::new(POOL_SIZE);\r\n    let mut server_pinger = ServerPinger::new();\r\n\r\n    pool.setJob(|id,state|{\r\n        server_pinger.run(id,state);\r\n    });\r\n\r\n    pool.run();\r\n    Ok(())\r\n}\r\n\r\n\r\nasync fn exec(id: u8, state: u8) {\r\n\r\n}\r\n```\r\n\r\nexecutor.rs:\r\n```rust\r\npub trait Service: Clone + core::fmt::Debug {\r\n    fn run(&self, _: u8, _: u8);\r\n}\r\n\r\n\r\ntype SyncJob = impl Fn(u8,u8) + Clone;\r\npub trait SyncService<T: Clone>: Clone {\r\n    fn setJob(&mut self, f: T);\r\n}\r\n\r\n#[derive(Clone)]\r\nstruct Worker {\r\n    pub id: u8,\r\n    pub state: u8,\r\n    jobs: u32,\r\n    finished: u32,\r\n    job: SyncJob\r\n}\r\nimpl Worker {\r\n    fn new(id: u8, state: u8, jobs: u32, finished: u32, job: SyncJob) -> Self {\r\n        Self { id, state, jobs, finished, job }\r\n    }\r\n\r\n    fn dfault(id: u8, jobs: u32) -> Self {\r\n        Self::new(id, 0, jobs, 0, Box::new(|_,_|{}))\r\n    }\r\n\r\n    fn run(&mut self) {\r\n        for _ in 0..self.jobs {\r\n            (self.job)(self.id, self.state);\r\n            self.finished += 1;\r\n        }\r\n    }\r\n}\r\n\r\n#[derive(Clone)]\r\npub struct Executor {\r\n    workers: Vec<Worker>\r\n}\r\nimpl Executor {\r\n    pub fn new<T: Into<u32>>(size: T) -> Self {\r\n        let size: u32 = size.into();\r\n        let equal_share: u32 = ( ( 256 / size ) as f64 ).floor() as u32;\r\n        let mut last_thread_jobs: u32 = equal_share;\r\n        if equal_share * size != 256 {\r\n            last_thread_jobs += 256 - size * equal_share;\r\n        }\r\n        let mut workers: Vec<Worker> = Vec::new();\r\n\r\n        for i in 0..size {\r\n            if i == (size - 1) {\r\n                workers.push(Worker::dfault(i as u8,last_thread_jobs));\r\n            } else {\r\n                workers.push(Worker::dfault(i as u8,equal_share));\r\n            }\r\n        }\r\n        Self { workers }\r\n    }\r\n\r\n    pub fn run(&mut self) {\r\n        for worker in &mut self.workers {\r\n            worker.run();\r\n        }\r\n    }\r\n}\r\n\r\n#[allow(invalid_type_param_default)]\r\nimpl<T=SyncJob> SyncService<T> for Executor where T: Fn(u8,u8) + Clone {\r\n    fn setJob(&mut self, job: SyncJob) -> () {\r\n        for worker in &mut self.workers {\r\n            worker.job = job.clone();\r\n        }\r\n    }\r\n}\r\n```\r\nworker.rs:\r\n```rust\r\nuse crate::executor::{Service};\r\n\r\n#[derive(Debug, Clone)]\r\npub struct ServerPinger {}\r\nimpl ServerPinger {\r\n    pub fn new() -> Self { Self {} }\r\n}\r\n\r\nimpl Service for ServerPinger {\r\n    fn run(&self, id: u8, state: u8) {\r\n        println!(\"ServerPinger: {} {}\", id, state);\r\n    }\r\n}\r\n```\r\nCargo.toml:\r\n```toml\r\n[package]\r\nname = \"rustprojects\"\r\nversion = \"0.1.0\"\r\nedition = \"2021\"\r\n\r\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\r\n\r\n[dependencies]\r\ntokio = { version = \"1.20.1\", features = [\"full\"] }\r\nasync-minecraft-ping = \"0.8.0\"\r\nasync-trait = \"0.1\"\r\nfutures = \"0.3.21\"\r\nlog = \"0.4.17\"\r\n```\r\n</p>\r\n</details>\r\n\r\nExpected: Successful compilation\r\n\r\nInstead, this happened:\r\n```bash\r\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\r\n\r\nerror: internal compiler error: VecMap([(OpaqueTypeKey { def_id: DefId(0:7 ~ rpinger[3d97]::executor::SyncJob::{opaque#0}), substs: [] }, OpaqueTypeDecl { hidden_type: OpaqueHiddenType { span: src\\executor.rs:69:5: 69:45 (#0), ty: _ }, origin: TyAlias })])\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.64.0-nightly (20a6f3a8a 2022-06-25)\r\nbinary: rustc\r\ncommit-hash: 20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753\r\ncommit-date: 2022-06-25\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.64.0-nightly\r\nLLVM version: 14.0.5\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\nENV: `RUST_BACKTRACE=full`\r\n\r\n```\r\n   Compiling rpinger v0.1.0 (C:\\Code\\Hypernite\\rpinger)\r\nwarning: unused variable: `id`\r\n  --> src\\main.rs:26:15\r\n   |\r\n26 | async fn exec(id: u8, state: u8) {\r\n   |               ^^ help: if this is intentional, prefix it with an underscore: `_id`\r\n   |\r\n   = note: `#[warn(unused_variables)]` on by default\r\n\r\nwarning: unused variable: `state`\r\n  --> src\\main.rs:26:23\r\n   |\r\n26 | async fn exec(id: u8, state: u8) {\r\n   |                       ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`\r\n\r\nwarning: variable does not need to be mutable\r\n  --> src\\main.rs:15:9\r\n   |\r\n15 |     let mut server_pinger = ServerPinger::new();\r\n   |         ----^^^^^^^^^^^^^\r\n   |         |\r\n   |         help: remove this `mut`\r\n   |\r\n   = note: `#[warn(unused_mut)]` on by default\r\n\r\nwarning: function `exec` is never used\r\n  --> src\\main.rs:26:10\r\n   |\r\n26 | async fn exec(id: u8, state: u8) {\r\n   |          ^^^^\r\n   |\r\n   = note: `#[warn(dead_code)]` on by default\r\n\r\nwarning: trait method `setJob` should have a snake case name\r\n --> src\\executor.rs:8:8\r\n  |\r\n8 |     fn setJob(&mut self, f: T);\r\n  |        ^^^^^^ help: convert the identifier to snake case: `set_job`\r\n  |\r\n  = note: `#[warn(non_snake_case)]` on by default\r\n\r\nwarning: Error finalizing incremental compilation session directory `\\\\?\\C:\\Code\\Hypernite\\rpinger\\target\\debug\\incremental\\rpinger-xpvfty13xgi5\\s-gf0o4padvr-gz8647-working`: The system cannot find the file specified. (os error 2)\r\n\r\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\r\n\r\nerror: internal compiler error: VecMap([(OpaqueTypeKey { def_id: DefId(0:7 ~ rpinger[3d97]::executor::SyncJob::{opaque#0}), substs: [] }, OpaqueTypeDecl { hidden_type: OpaqueHiddenType { span: src\\executor.rs:69:5: 69:45 (#0), ty: _ }, origin: TyAlias })])\r\n  |\r\n  = note: delayed at compiler\\rustc_infer\\src\\infer\\opaque_types\\table.rs:50:26\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler\\rustc_errors\\src\\lib.rs:1425:13\r\nstack backtrace:\r\n   0:     0x7ffb6c249f4f - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h314f152bcc928f1c\r\n   1:     0x7ffb6c2844ea - core::fmt::write::hd8a9744d710fe910\r\n   2:     0x7ffb6c23c439 - <std::io::IoSliceMut as core::fmt::Debug>::fmt::h3de1d81d7076fcf3\r\n   3:     0x7ffb6c24d83b - std::panicking::default_hook::h4aa587652243f7e7\r\n   4:     0x7ffb6c24d4bb - std::panicking::default_hook::h4aa587652243f7e7\r\n   5:     0x7ffb190f7926 - rustc_driver[99189a5311142797]::pretty::print_after_hir_lowering\r\n   6:     0x7ffb6c24dfe2 - std::panicking::rust_panic_with_hook::ha35ad9f58eb637a9\r\n   7:     0x7ffb1d8f6f05 - <rustc_errors[3b08ccf31b5cce9a]::snippet::Style as core[6599943441a975fe]::fmt::Debug>::fmt\r\n   8:     0x7ffb1d8f2829 - <rustc_errors[3b08ccf31b5cce9a]::snippet::Style as core[6599943441a975fe]::fmt::Debug>::fmt\r\n   9:     0x7ffb1dc3d929 - rustc_query_system[78d2146506c7f639]::query::plumbing::incremental_verify_ich_cold\r\n  10:     0x7ffb1d8a3119 - <rustc_feature[e97366ff82a6dd2]::builtin_attrs::AttributeType as core[6599943441a975fe]::fmt::Debug>::fmt\r\n  11:     0x7ffb1d8a6d1c - <rustc_errors[3b08ccf31b5cce9a]::HandlerInner as core[6599943441a975fe]::ops::drop::Drop>::drop\r\n  12:     0x7ffb190745f4 - <rustc_ast_passes[935ad9e6caf1a7e4]::node_count::NodeCounter as rustc_ast[98c7eb40c0dc4483]::visit::Visitor>::visit_ident\r\n  13:     0x7ffb1907e79a - <rustc_ast_passes[935ad9e6caf1a7e4]::node_count::NodeCounter as rustc_ast[98c7eb40c0dc4483]::visit::Visitor>::visit_ident\r\n  14:     0x7ffb191083fd - <rustc_driver[99189a5311142797]::Compilation as core[6599943441a975fe]::fmt::Debug>::fmt\r\n  15:     0x7ffb191062d9 - <rustc_driver[99189a5311142797]::Compilation as core[6599943441a975fe]::fmt::Debug>::fmt\r\n  16:     0x7ffb1908632d - <rustc_ast_passes[935ad9e6caf1a7e4]::node_count::NodeCounter as rustc_ast[98c7eb40c0dc4483]::visit::Visitor>::visit_ident\r\n  17:     0x7ffb190ee056 - <rustc_metadata[db126aae5eaabfd5]::rmeta::encoder::EncodeContext as rustc_serialize[81ec29cc20118e07]::serialize::Encoder>::emit_raw_bytes  \r\n  18:     0x7ffb190b0138 - <rustc_driver[99189a5311142797]::args::Error as core[6599943441a975fe]::fmt::Debug>::fmt\r\n  19:     0x7ffb6c25e6bc - std::sys::windows::thread::Thread::new::h7abefeefa20aa848\r\n  20:     0x7ffbd7bc7034 - BaseThreadInitThunk\r\n  21:     0x7ffbd7d826a1 - RtlUserThreadStart\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.64.0-nightly (20a6f3a8a 2022-06-25) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nwarning: `rpinger` (bin \"rpinger\") generated 6 warnings\r\nerror: could not compile `rpinger`; 6 warnings emitted\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "AtomicGamer9523", "id": 65981247, "node_id": "MDQ6VXNlcjY1OTgxMjQ3", "avatar_url": "https://avatars.githubusercontent.com/u/65981247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AtomicGamer9523", "html_url": "https://github.com/AtomicGamer9523", "followers_url": "https://api.github.com/users/AtomicGamer9523/followers", "following_url": "https://api.github.com/users/AtomicGamer9523/following{/other_user}", "gists_url": "https://api.github.com/users/AtomicGamer9523/gists{/gist_id}", "starred_url": "https://api.github.com/users/AtomicGamer9523/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AtomicGamer9523/subscriptions", "organizations_url": "https://api.github.com/users/AtomicGamer9523/orgs", "repos_url": "https://api.github.com/users/AtomicGamer9523/repos", "events_url": "https://api.github.com/users/AtomicGamer9523/events{/privacy}", "received_events_url": "https://api.github.com/users/AtomicGamer9523/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103847/timeline", "performed_via_github_app": null, "state_reason": "completed"}