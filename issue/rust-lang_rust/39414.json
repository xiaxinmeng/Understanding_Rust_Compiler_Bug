{"url": "https://api.github.com/repos/rust-lang/rust/issues/39414", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39414/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39414/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39414/events", "html_url": "https://github.com/rust-lang/rust/issues/39414", "id": 204131146, "node_id": "MDU6SXNzdWUyMDQxMzExNDY=", "number": 39414, "title": "The `macro_rules` `path` matcher matches more than just paths", "user": {"login": "dylanede", "id": 10339269, "node_id": "MDQ6VXNlcjEwMzM5MjY5", "avatar_url": "https://avatars.githubusercontent.com/u/10339269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dylanede", "html_url": "https://github.com/dylanede", "followers_url": "https://api.github.com/users/dylanede/followers", "following_url": "https://api.github.com/users/dylanede/following{/other_user}", "gists_url": "https://api.github.com/users/dylanede/gists{/gist_id}", "starred_url": "https://api.github.com/users/dylanede/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dylanede/subscriptions", "organizations_url": "https://api.github.com/users/dylanede/orgs", "repos_url": "https://api.github.com/users/dylanede/repos", "events_url": "https://api.github.com/users/dylanede/events{/privacy}", "received_events_url": "https://api.github.com/users/dylanede/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-30T21:13:30Z", "updated_at": "2017-01-30T21:24:22Z", "closed_at": "2017-01-30T21:24:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The Rust grammar states that path non-terminals are defined as follows:\r\n```text\r\nexpr_path : [ \"::\" ] ident [ \"::\" expr_path_tail ] + ;\r\nexpr_path_tail : '<' type_expr [ ',' type_expr ] + '>'\r\n               | expr_path ;\r\n\r\ntype_path : ident [ type_path_tail ] + ;\r\ntype_path_tail : '<' type_expr [ ',' type_expr ] + '>'\r\n               | \"::\" type_path ;\r\n```\r\n\r\nBut the `path` matcher seemingly also matches things like enum variant definitions, e.g. the following macro:\r\n\r\n```rust\r\nmacro_rules! foo {\r\n    ($p:path) => {()};\r\n}\r\n```\r\n\r\nwill successfully parse when given `foo!(Baz(Option<bool>))`. This behaviour can mess up macros that rely on a failed (but recoverable) parse of a path falling through. As a work around I have been using matchers like `$($p:tt$(<$($t:ty),*>)*)::+` and `::$($p:tt$(<$($t:ty),*>)*)::+` instead.\r\n\r\nIs this intended behaviour? It doesn't seem to be documented anywhere. It's certainly surprising.", "closed_by": {"login": "dylanede", "id": 10339269, "node_id": "MDQ6VXNlcjEwMzM5MjY5", "avatar_url": "https://avatars.githubusercontent.com/u/10339269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dylanede", "html_url": "https://github.com/dylanede", "followers_url": "https://api.github.com/users/dylanede/followers", "following_url": "https://api.github.com/users/dylanede/following{/other_user}", "gists_url": "https://api.github.com/users/dylanede/gists{/gist_id}", "starred_url": "https://api.github.com/users/dylanede/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dylanede/subscriptions", "organizations_url": "https://api.github.com/users/dylanede/orgs", "repos_url": "https://api.github.com/users/dylanede/repos", "events_url": "https://api.github.com/users/dylanede/events{/privacy}", "received_events_url": "https://api.github.com/users/dylanede/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39414/timeline", "performed_via_github_app": null, "state_reason": "completed"}