{"url": "https://api.github.com/repos/rust-lang/rust/issues/56489", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56489/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56489/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56489/events", "html_url": "https://github.com/rust-lang/rust/issues/56489", "id": 387061442, "node_id": "MDU6SXNzdWUzODcwNjE0NDI=", "number": 56489, "title": "libcore: Implement VaList::arg in pure rust", "user": {"login": "dlrobertson", "id": 7504153, "node_id": "MDQ6VXNlcjc1MDQxNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/7504153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlrobertson", "html_url": "https://github.com/dlrobertson", "followers_url": "https://api.github.com/users/dlrobertson/followers", "following_url": "https://api.github.com/users/dlrobertson/following{/other_user}", "gists_url": "https://api.github.com/users/dlrobertson/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlrobertson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlrobertson/subscriptions", "organizations_url": "https://api.github.com/users/dlrobertson/orgs", "repos_url": "https://api.github.com/users/dlrobertson/repos", "events_url": "https://api.github.com/users/dlrobertson/events{/privacy}", "received_events_url": "https://api.github.com/users/dlrobertson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 2138221489, "node_id": "MDU6TGFiZWwyMTM4MjIxNDg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-c_variadic", "name": "F-c_variadic", "color": "f9c0cc", "default": false, "description": "`#![feature(c_variadic)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-12-04T00:09:27Z", "updated_at": "2020-06-15T12:39:35Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Summary\r\n\r\nImplement `VaList::arg` in pure rust, similar to [va_list-rs].\r\n\r\n### Details\r\n\r\nWe currently expose the `va_arg` intrinsic which should emit the correct LLVM for `va_arg` for the given architecture and OS. We currently use the [LLVM va_arg] instruction, but it doesn't emit the correct code for some common OSes and architectures causing us to implement the instruction manually (See [src/librustc_codegen_llvm/va_arg.rs] for details). Since we do not support calling `VaList::arg` on arbitrary types, we might be able to implement something similar to [va_list-rs] in pure rust for most architectures, falling back to the [LLVM va_arg] instruction only when a pure rust implementation does not exist.\r\n\r\n[va_list-rs]: https://github.com/thepowersgang/va_list-rs\r\n[LLVM va_arg]: https://llvm.org/docs/LangRef.html#va-arg-instruction\r\n[src/librustc_codegen_llvm/va_list.rs]: https://github.com/rust-lang/rust/blob/master/src/librustc_codegen_llvm/va_arg.rs\r\n\r\n### Original issue\r\n\r\nNote this issue has been changed following https://github.com/rust-lang/rust/issues/56489#issuecomment-444142735. The original issue is as follows:\r\n\r\n#### codegen: Move custom va_arg logic to librustc_codegen_ssa\r\n\r\nThe LLVM `va_arg` intrinsic is far from a complete implementation. As a result, we have started to manually implement `va_arg` (like clang does) with the `Builder` in [src/librustc_codegen_llvm/va_arg.rs](https://github.com/rust-lang/rust/blob/master/src/librustc_codegen_llvm/va_arg.rs). This logic should be moved to `librustc_codegen_ssa` in `BuilderMethods::va_arg`.\r\n\r\n`BuilderMethods::va_arg` needs to fall back to LLVM's `va_arg` intrinsic when there isn't an custom implementation available, so we'll need to add a new trait method `backend_va_arg` (please suggest a better name :smile:) that exposes the backend specific implementation of `va_arg`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56489/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56489/timeline", "performed_via_github_app": null, "state_reason": null}