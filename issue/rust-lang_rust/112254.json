{"url": "https://api.github.com/repos/rust-lang/rust/issues/112254", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112254/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112254/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112254/events", "html_url": "https://github.com/rust-lang/rust/issues/112254", "id": 1739797813, "node_id": "I_kwDOAAsO6M5nszU1", "number": 112254, "title": "Diagnostic when trying to write exclusive ranges as `..<`", "user": {"login": "comex", "id": 47517, "node_id": "MDQ6VXNlcjQ3NTE3", "avatar_url": "https://avatars.githubusercontent.com/u/47517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comex", "html_url": "https://github.com/comex", "followers_url": "https://api.github.com/users/comex/followers", "following_url": "https://api.github.com/users/comex/following{/other_user}", "gists_url": "https://api.github.com/users/comex/gists{/gist_id}", "starred_url": "https://api.github.com/users/comex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comex/subscriptions", "organizations_url": "https://api.github.com/users/comex/orgs", "repos_url": "https://api.github.com/users/comex/repos", "events_url": "https://api.github.com/users/comex/events{/privacy}", "received_events_url": "https://api.github.com/users/comex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-06-03T19:00:09Z", "updated_at": "2023-06-03T22:33:18Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\nfn foo() {\r\n    0..=10; // OK\r\n    0..<10; // error (valid in Swift)\r\n}\r\n```\r\n\r\n\r\n### Current output\r\n\r\n```Shell\r\nerror: expected type, found `10`\r\n --> src/lib.rs:3:9\r\n  |\r\n3 |     0..<10; // error (valid in Swift)\r\n  |         ^^ expected type\r\n```\r\n\r\n\r\n### Desired output\r\n\r\nSuggest `0..10`.\r\n\r\n### Rationale and extra context\r\n\r\nThe syntax `..=` for inclusive ranges seems to suggest `..<` for exclusive ranges, especially since Swift uses `..<` for exclusive ranges.\r\n\r\n(Though, Swift doesn't use `..=` for inclusive ranges, but rather `\u2026`.)\r\n\r\nI initially thought this would be easy to diagnose since `..<` is never legal syntax, but actually it can be legal as part of an exclusive range where the upper bound is an UFCS call:\r\n```rust\r\n0..<A>::b(); // OK\r\n```\r\n\r\nOh well.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112254/timeline", "performed_via_github_app": null, "state_reason": null}