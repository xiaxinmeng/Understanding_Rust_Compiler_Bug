{"url": "https://api.github.com/repos/rust-lang/rust/issues/91829", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91829/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91829/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91829/events", "html_url": "https://github.com/rust-lang/rust/issues/91829", "id": 1077813484, "node_id": "I_kwDOAAsO6M5APiDs", "number": 91829, "title": "confusing error: \"expected associated type\" and \"found associated type\" are the same in some cases with Fn traits", "user": {"login": "jendrikw", "id": 12938023, "node_id": "MDQ6VXNlcjEyOTM4MDIz", "avatar_url": "https://avatars.githubusercontent.com/u/12938023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jendrikw", "html_url": "https://github.com/jendrikw", "followers_url": "https://api.github.com/users/jendrikw/followers", "following_url": "https://api.github.com/users/jendrikw/following{/other_user}", "gists_url": "https://api.github.com/users/jendrikw/gists{/gist_id}", "starred_url": "https://api.github.com/users/jendrikw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jendrikw/subscriptions", "organizations_url": "https://api.github.com/users/jendrikw/orgs", "repos_url": "https://api.github.com/users/jendrikw/repos", "events_url": "https://api.github.com/users/jendrikw/events{/privacy}", "received_events_url": "https://api.github.com/users/jendrikw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-12-12T13:58:00Z", "updated_at": "2023-03-05T13:30:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: [play](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&code=use%20std%3A%3Aops%3A%3ANot%3B%0A%0Afn%20compose_mut%3CA%2C%20B%2C%20C%2C%20G%2C%20F%3E(mut%20f%3A%20F%2C%20mut%20g%3A%20G)%20-%3E%20impl%20FnMut(A)%20-%3E%20C%0Awhere%0A%20%20%20%20F%3A%20FnMut(A)%20-%3E%20B%2C%0A%20%20%20%20G%3A%20FnMut(B)%20-%3E%20C%2C%0A%7B%0A%20%20%20%20move%20%7Cx%7C%20g(f(x))%0A%7D%0A%0Afn%20predicate(n%3A%20%26usize)%20-%3E%20bool%20%7B%0A%20%20%20%20*n%20%3D%3D%200%0A%7D%0A%0Afn%20main()%20%7B%0A%20%20%20%20let%20b%3A%20%26dyn%20FnMut(%26usize)%20-%3E%20bool%20%3D%0A%20%20%20%20%20%20%20%20%26compose_mut(predicate%2C%20bool%3A%3Anot)%3B%0A%20%20%20%20println!(%22ok%22)%0A%7D%0A)\r\n\r\n```rust\r\nuse std::ops::Not;\r\n\r\nfn compose_mut<A, B, C, G, F>(mut f: F, mut g: G) -> impl FnMut(A) -> C\r\nwhere\r\n    F: FnMut(A) -> B,\r\n    G: FnMut(B) -> C,\r\n{\r\n    move |x| g(f(x))\r\n}\r\n\r\nfn predicate(n: &usize) -> bool {\r\n    *n == 0\r\n}\r\n\r\nfn main() {\r\n    let b: &dyn FnMut(&usize) -> bool =\r\n        &compose_mut(predicate, bool::not);\r\n    println!(\"ok\")\r\n}\r\n\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:17:9\r\n   |\r\n3  | fn compose_mut<A, B, C, G, F>(mut f: F, mut g: G) -> impl FnMut(A) -> C\r\n   |                                                      ------------------\r\n   |                                                      |\r\n   |                                                      the expected opaque type\r\n   |                                                      the found opaque type\r\n...\r\n17 |         &compose_mut(predicate, bool::not);\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\r\n   |\r\n   = note: expected associated type `<impl FnMut<(&usize,)> as FnOnce<(&usize,)>>::Output`\r\n              found associated type `<impl FnMut<(&usize,)> as FnOnce<(&usize,)>>::Output`\r\n\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\n\r\nI don't understand the issue. This part is especially confusing, because both types are the same:\r\n```\r\n   = note: expected associated type `<impl FnMut<(&usize,)> as FnOnce<(&usize,)>>::Output`\r\n              found associated type `<impl FnMut<(&usize,)> as FnOnce<(&usize,)>>::Output`\r\n```\r\n\r\nI think this has to do with the Fn traits, because it doesn't happen with any other trait, so this code compiles:\r\n\r\n```rust\r\ntrait T {}\r\n\r\nstruct S;\r\n\r\nimpl T for S {}\r\n\r\nfn return_impl() -> impl T {\r\n    S\r\n}\r\n\r\nfn main() {\r\n    let b: &dyn T =\r\n        &return_impl();\r\n    println!(\"ok\")\r\n}\r\n```\r\n\r\nIssue exists in both rustc 1.57.0 (f1edd0429 2021-11-29) and rustc 1.59.0-nightly (0b42deacc 2021-12-09).\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91829/timeline", "performed_via_github_app": null, "state_reason": null}