{"url": "https://api.github.com/repos/rust-lang/rust/issues/78549", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78549/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78549/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78549/events", "html_url": "https://github.com/rust-lang/rust/issues/78549", "id": 732774363, "node_id": "MDU6SXNzdWU3MzI3NzQzNjM=", "number": 78549, "title": "ICE: trying to compare incompatible ctors while building rustfmt", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1966877457, "node_id": "MDU6TGFiZWwxOTY2ODc3NDU3", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-critical", "name": "P-critical", "color": "eb6420", "default": false, "description": "Critical priority"}, {"id": 1976249438, "node_id": "MDU6TGFiZWwxOTc2MjQ5NDM4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-exhaustiveness-checking", "name": "A-exhaustiveness-checking", "color": "f7e101", "default": false, "description": "Relating to exhaustiveness / usefulness checking of patterns"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-10-30T00:21:05Z", "updated_at": "2020-11-01T16:52:26Z", "closed_at": "2020-11-01T16:52:26Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Repro\r\n\r\n```\r\ngit clone https://github.com/rust-lang/rustfmt\r\ncd rustfmt\r\ngit checkout 2d6a968d52b13b75fc3799f50020a34efd480a28\r\nCFG_RELEASE=nightly CFG_RELEASE_CHANNEL=nightly cargo +master check \r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\nrustc is @ 6bdae9edd0cc099daa6038bca469dc09b6fc078a\r\n```\r\nrustc 1.49.0-nightly (6bdae9edd 2020-10-29)\r\nbinary: rustc\r\ncommit-hash: 6bdae9edd0cc099daa6038bca469dc09b6fc078a\r\ncommit-date: 2020-10-29\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.49.0-nightly\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n    Checking rustc-ap-rustc_ast_passes v686.0.0\r\n    Checking rustc-ap-rustc_expand v686.0.0\r\nerror: internal compiler error: compiler/rustc_mir_build/src/thir/pattern/_match.rs:934:18: trying to compare incompatible constructors Single and Str(Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [109, 97, 120, 95, 119, 105, 100, 116, 104], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, size: Size { raw: 9 }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 }) })\r\n\r\nthread 'rustc' panicked at 'Box<Any>', compiler/rustc_errors/src/lib.rs:945:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.49.0-nightly (6bdae9edd 2020-10-29) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [check_match] match-checking `config::ConfigSetter::<'a>::max_width`\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `rustfmt-nightly`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_mir_build/src/thir/pattern/_match.rs:934:18: trying to compare incompatible constructors Single and Str(Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [109, 97, 120, 95, 119, 105, 100, 116, 104], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, size: Size { raw: 9 }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 }) })\r\n\r\nthread 'rustc' panicked at 'Box<Any>', compiler/rustc_errors/src/lib.rs:945:9\r\nstack backtrace:\r\n   0:     0x7f440e94a5f0 - std::backtrace_rs::backtrace::libunwind::trace::h448c56741b6011d3\r\n                               at /rustc/6bdae9edd0cc099daa6038bca469dc09b6fc078a/library/std/src/../../backtrace/src/backtrace/libunwind.rs:100:5\r\n   1:     0x7f440e94a5f0 - std::backtrace_rs::backtrace::trace_unsynchronized::h881b9d30a8a89a0c\r\n                               at /rustc/6bdae9edd0cc099daa6038bca469dc09b6fc078a/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f440e94a5f0 - std::sys_common::backtrace::_print_fmt::h720a2f61f75b9f58\r\n                               at /rustc/6bdae9edd0cc099daa6038bca469dc09b6fc078a/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x7f440e94a5f0 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h8d62bbfda6d5c836\r\n                               at /rustc/6bdae9edd0cc099daa6038bca469dc09b6fc078a/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x7f440e9ba52c - core::fmt::write::h1857a60b204f1b6a\r\n                               at /rustc/6bdae9edd0cc099daa6038bca469dc09b6fc078a/library/core/src/fmt/mod.rs:1078:17\r\n   5:     0x7f440e93c252 - std::io::Write::write_fmt::h16a9fe7680ac245c\r\n                               at /rustc/6bdae9edd0cc099daa6038bca469dc09b6fc078a/library/std/src/io/mod.rs:1518:15\r\n   6:     0x7f440e94f5a5 - std::sys_common::backtrace::_print::h9ba51a6db618de7d\r\n                               at /rustc/6bdae9edd0cc099daa6038bca469dc09b6fc078a/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x7f440e94f5a5 - std::sys_common::backtrace::print::h5f20e41c85e91716\r\n                               at /rustc/6bdae9edd0cc099daa6038bca469dc09b6fc078a/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x7f440e94f5a5 - std::panicking::default_hook::{{closure}}::h8d48653392f3b04c\r\n                               at /rustc/6bdae9edd0cc099daa6038bca469dc09b6fc078a/library/std/src/panicking.rs:208:50\r\n   9:     0x7f440e94f248 - std::panicking::default_hook::hb3948d1f74b6ff4c\r\n                               at /rustc/6bdae9edd0cc099daa6038bca469dc09b6fc078a/library/std/src/panicking.rs:227:9\r\n  10:     0x7f440f218988 - rustc_driver::report_ice::h1ddbc5609a6e1f37\r\n  11:     0x7f43ffdb18d6 - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::hd2c74aab54599340\r\n                               at /home/matthias/.rustup/toolchains/master/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1321:9\r\n  12:     0x7f43ffdcff6b - proc_macro::bridge::client::<impl proc_macro::bridge::Bridge>::enter::{{closure}}::{{closure}}::h364b0f4905eb955d\r\n                               at /home/matthias/.rustup/toolchains/master/lib/rustlib/src/rust/library/proc_macro/src/bridge/client.rs:320:21\r\n  13:     0x7f440e94fea6 - std::panicking::rust_panic_with_hook::h55d23fef0ad751bc\r\n                               at /rustc/6bdae9edd0cc099daa6038bca469dc09b6fc078a/library/std/src/panicking.rs:597:17\r\n  14:     0x7f441221414d - std::panicking::begin_panic::{{closure}}::h4b123e1d8e3ae463\r\n  15:     0x7f4412214086 - std::sys_common::backtrace::__rust_end_short_backtrace::ha21fec08f03d728b\r\n  16:     0x7f441221411f - std::panicking::begin_panic::hc0c81fab1e0acd00\r\n  17:     0x7f4412226080 - rustc_errors::HandlerInner::bug::h26f9bc1a7147687e\r\n  18:     0x7f4412224bd0 - rustc_errors::Handler::bug::h2149bffe74600666\r\n  19:     0x7f4411c826d4 - rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}::hb4ddd0d3902006f3\r\n  20:     0x7f4411c7c1fb - rustc_middle::ty::context::tls::with_opt::{{closure}}::ha7f81bc36cab3c9f\r\n  21:     0x7f4411c7bbb2 - rustc_middle::ty::context::tls::with_opt::hf0c2c2aff96e53ba\r\n  22:     0x7f4411c825f9 - rustc_middle::util::bug::opt_span_bug_fmt::hc7cbb029c2646db9\r\n  23:     0x7f4411c8256e - rustc_middle::util::bug::bug_fmt::hb51c412c48cda8bb\r\n  24:     0x7f4410445238 - rustc_mir_build::thir::pattern::_match::Matrix::specialize_constructor::h36673621382da348\r\n  25:     0x7f441040d98a - <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold::h8ec38e56f7f75922\r\n  26:     0x7f441044aded - rustc_mir_build::thir::pattern::_match::is_useful::hf8efd6153416cf2d\r\n  27:     0x7f44103df5f8 - <rustc_mir_build::thir::pattern::check_match::MatchVisitor as rustc_hir::intravisit::Visitor>::visit_expr::h865c9f6d42685550\r\n  28:     0x7f44103df27c - <rustc_mir_build::thir::pattern::check_match::MatchVisitor as rustc_hir::intravisit::Visitor>::visit_expr::h865c9f6d42685550\r\n  29:     0x7f44103e83fb - rustc_hir::intravisit::walk_expr::hd0093ab50ae5a8d4\r\n  30:     0x7f44103df27c - <rustc_mir_build::thir::pattern::check_match::MatchVisitor as rustc_hir::intravisit::Visitor>::visit_expr::h865c9f6d42685550\r\n  31:     0x7f44103df27c - <rustc_mir_build::thir::pattern::check_match::MatchVisitor as rustc_hir::intravisit::Visitor>::visit_expr::h865c9f6d42685550\r\n  32:     0x7f44103defa3 - rustc_mir_build::thir::pattern::check_match::check_match::h2d5b60d42651dc41\r\n  33:     0x7f440f46b9c9 - rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::check_match>::compute::h3dd4584521cdb95e\r\n  34:     0x7f440f40b1da - rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps::h95dd3718ab01c33b\r\n  35:     0x7f440f3d0bc9 - rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl::h0352e09bc9ab8a0b\r\n  36:     0x7f440f436ce4 - rustc_data_structures::stack::ensure_sufficient_stack::h3626f02a47d49f69\r\n  37:     0x7f440f3c74b8 - rustc_query_system::query::plumbing::get_query_impl::hfaed35f7e6414273\r\n  38:     0x7f440f3c8832 - rustc_query_system::query::plumbing::ensure_query_impl::ha7327a13b80a3079\r\n  39:     0x7f440f467a79 - rustc_interface::passes::analysis::h78326215bfd650a0\r\n  40:     0x7f440f25791b - rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute::hf8d4bc54d08537f3\r\n  41:     0x7f440f19d838 - rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps::hcb29c3d8995d5298\r\n  42:     0x7f440f237f24 - rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl::h6d03accb53ed1239\r\n  43:     0x7f440f23419f - rustc_middle::ty::query::plumbing::<impl rustc_query_system::query::QueryContext for rustc_middle::ty::context::TyCtxt>::start_query::{{closure}}::{{closure}}::{{closure}}::h947bb326d17d8606\r\n  44:     0x7f440f1c1308 - rustc_query_system::query::plumbing::get_query_impl::h448d10ab90370983\r\n  45:     0x7f440f25a9df - rustc_interface::passes::QueryContext::enter::hbf7a36e966e91449\r\n  46:     0x7f440f235826 - rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter::h25b522245624a405\r\n  47:     0x7f440f1f8eff - rustc_span::with_source_map::h7455fffe3cd153a4\r\n  48:     0x7f440f2309c1 - scoped_tls::ScopedKey<T>::set::h8ae8151712a551fd\r\n  49:     0x7f440f23b0f5 - std::sys_common::backtrace::__rust_begin_short_backtrace::h26de371bc27662fc\r\n  50:     0x7f440f1a2b18 - core::ops::function::FnOnce::call_once{{vtable.shim}}::h80d1a8eb7971174b\r\n  51:     0x7f440e95eeaa - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h9e7afb7a0a438236\r\n                               at /rustc/6bdae9edd0cc099daa6038bca469dc09b6fc078a/library/alloc/src/boxed.rs:1307:9\r\n  52:     0x7f440e95eeaa - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h70c646c4271337a1\r\n                               at /rustc/6bdae9edd0cc099daa6038bca469dc09b6fc078a/library/alloc/src/boxed.rs:1307:9\r\n  53:     0x7f440e95eeaa - std::sys::unix::thread::Thread::new::thread_start::h35d2b8d36f210d02\r\n                               at /rustc/6bdae9edd0cc099daa6038bca469dc09b6fc078a/library/std/src/sys/unix/thread.rs:89:17\r\n  54:     0x7f440e85a3e9 - start_thread\r\n  55:     0x7f440e777293 - __GI___clone\r\n  56:                0x0 - <unknown>\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.49.0-nightly (6bdae9edd 2020-10-29) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [check_match] match-checking `config::ConfigSetter::<'a>::max_width`\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `rustfmt-nightly`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78549/timeline", "performed_via_github_app": null, "state_reason": "completed"}