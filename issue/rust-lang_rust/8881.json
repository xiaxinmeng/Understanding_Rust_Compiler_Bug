{"url": "https://api.github.com/repos/rust-lang/rust/issues/8881", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/8881/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/8881/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/8881/events", "html_url": "https://github.com/rust-lang/rust/issues/8881", "id": 18794498, "node_id": "MDU6SXNzdWUxODc5NDQ5OA==", "number": 8881, "title": "RFC: condition macro could import parent module's (pub) identifiers", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-08-30T15:37:57Z", "updated_at": "2013-09-04T03:51:18Z", "closed_at": "2013-09-04T03:51:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Its a little annoying that one has to prefix references to \"unusual\" types with `super::` when using the `condition!` macro, as demonstrated for example by this code in the conditions tutorial:\n\n``` rust\n// Modify the condition signature to return the new enum.\n// Note: a condition introduces a new module, so the enum must be\n// named with the `super::` prefix to access it.\ncondition! {\n    pub malformed_line : ~str -> super::MalformedLineFix;\n}\n```\n\nThe necessity of the `super::` prefix is a side-effect of the condition macro expanding into its own module.\n\nBut we could get around this if we changed the condition macro to import its parent module's pub declarations, via `use super::*;`, as illustrated in this code:\n\n``` rust\npub mod a {\n    pub use c_i = std::libc::c_int;\n\n    // condition! { pub grr1: int -> c_i; } // does not work\n\n    condition! {\n        pub grr2: int -> super::c_i; // standard way to cope with above\n    }\n\n    // but another way to \"fix\" the problem is to expand into:\n    pub mod grr3 {\n        #[allow(non_uppercase_statics)];\n\n        use super::*; // <-- THIS LINE IS NEW IN THE EXPANSION\n\n        static key: ::std::local_data::Key<\n            @::std::condition::Handler<int, c_i>> =\n            &::std::local_data::Key;\n\n        pub static cond :\n            ::std::condition::Condition<int,c_i> =\n            ::std::condition::Condition {\n            name: stringify!(grr3),\n            key: key\n        };\n    }\n\n    pub fn f(x:int) -> c_i {\n        if x % 2 == 0 {\n            grr2::cond.raise(x)\n        } else {\n            grr3::cond.raise(x)\n        }\n    }\n}\n\nfn main() {\n    use std::libc::c_int;\n    let result : c_int = do a::grr3::cond.trap(|whoops| {\n        println(fmt!(\"hi from %?\", whoops));\n        4 as std::libc::c_int\n    }).inside {\n        100 + a::f(173)\n    };\n    println(fmt!(\"result: %d\", result as int));\n}\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/8881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/8881/timeline", "performed_via_github_app": null, "state_reason": "completed"}