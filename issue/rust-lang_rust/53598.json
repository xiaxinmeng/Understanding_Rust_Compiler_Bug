{"url": "https://api.github.com/repos/rust-lang/rust/issues/53598", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53598/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53598/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53598/events", "html_url": "https://github.com/rust-lang/rust/issues/53598", "id": 352900941, "node_id": "MDU6SXNzdWUzNTI5MDA5NDE=", "number": 53598, "title": "ICE: Existential type (w/ and w/o NLL)", "user": {"login": "andreytkachenko", "id": 1773973, "node_id": "MDQ6VXNlcjE3NzM5NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1773973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreytkachenko", "html_url": "https://github.com/andreytkachenko", "followers_url": "https://api.github.com/users/andreytkachenko/followers", "following_url": "https://api.github.com/users/andreytkachenko/following{/other_user}", "gists_url": "https://api.github.com/users/andreytkachenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreytkachenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreytkachenko/subscriptions", "organizations_url": "https://api.github.com/users/andreytkachenko/orgs", "repos_url": "https://api.github.com/users/andreytkachenko/repos", "events_url": "https://api.github.com/users/andreytkachenko/events{/privacy}", "received_events_url": "https://api.github.com/users/andreytkachenko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-08-22T10:52:28Z", "updated_at": "2019-08-12T12:44:14Z", "closed_at": "2019-08-12T12:44:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "here is the example:\r\n```rust\r\n#![feature(nll, existential_type)]\r\n\r\npub trait Engine {}\r\npub trait RenderImplementation<E, CE> \r\n    where E: Engine,\r\n          CE: Engine,\r\n{\r\n    fn render_impl<C: Renderable<CE>>(&self, eng: &E, children: &C);\r\n}\r\npub trait Renderable<E> \r\n    where E: Engine,\r\n{\r\n    fn render(&self, eng: &E);\r\n}\r\npub trait View<E, CE>\r\n    where E: Engine,\r\n          CE: Engine,\r\n{\r\n    type Renderable: Renderable<E>;\r\n\r\n    fn build<C: Renderable<CE> + 'static>(self, children: Option<C>) -> Self::Renderable;\r\n}\r\n\r\npub struct Node <E, I, CHE, CH>\r\n    where \r\n        E: Engine,\r\n        CHE: Engine,\r\n        I: RenderImplementation<E, CHE>,\r\n        CH: Renderable<CHE>\r\n{\r\n    _m: std::marker::PhantomData<(I, CH, E, CHE)>\r\n}\r\n\r\nimpl<E, I, CHE, CH> Node<E, I, CHE, CH>\r\n    where \r\n        E: Engine,\r\n        CHE: Engine,\r\n        I: RenderImplementation<E, CHE>,\r\n        CH: Renderable<CHE>\r\n{\r\n    pub fn new(_item: I, _children: CH) -> Self {\r\n        Self {\r\n            _m: Default::default()\r\n        }\r\n    }\r\n}\r\n\r\nimpl<E, I, CHE, CH> Renderable<E> for Node<E, I, CHE, CH>\r\n    where \r\n        E: Engine,\r\n        CHE: Engine,\r\n        I: RenderImplementation<E, CHE>,\r\n        CH: Renderable<CHE>\r\n{\r\n    fn render(&self, _eng: &E) {}\r\n}\r\n\r\nimpl <E: Engine, T: Renderable<E>> Renderable<E> for Option<T> {\r\n    fn render(&self, _eng: &E) {}\r\n}\r\n\r\npub struct HtmlEngine;\r\nimpl Engine for HtmlEngine {}\r\n\r\npub struct Div;\r\n\r\nimpl RenderImplementation<HtmlEngine, HtmlEngine> for Div {   \r\n    fn render_impl<C>(&self, _eng: &HtmlEngine, _children: &C)\r\n        where C: Renderable<HtmlEngine> \r\n    {}\r\n}\r\n\r\nimpl View<HtmlEngine, HtmlEngine> for Div {\r\n    existential type Renderable: Renderable<HtmlEngine>;\r\n\r\n    fn build<C: Renderable<HtmlEngine> + 'static>(self, children: Option<C>) -> Self::Renderable {\r\n        Node::new(self, children)\r\n    }\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\nthis example will compile well if you remove `nll`", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53598/timeline", "performed_via_github_app": null, "state_reason": "completed"}