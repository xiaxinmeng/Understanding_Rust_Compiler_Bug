{"url": "https://api.github.com/repos/rust-lang/rust/issues/38824", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/38824/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/38824/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/38824/events", "html_url": "https://github.com/rust-lang/rust/issues/38824", "id": 198742260, "node_id": "MDU6SXNzdWUxOTg3NDIyNjA=", "number": 38824, "title": "LLVM assertion when using `i128` with the NVPTX", "user": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 510582527, "node_id": "MDU6TGFiZWw1MTA1ODI1Mjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-NVPTX", "name": "O-NVPTX", "color": "6e6ec0", "default": false, "description": "Target: the NVPTX LLVM backend for running rust on GPUs, https://llvm.org/docs/NVPTXUsage.html"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 31, "created_at": "2017-01-04T16:00:31Z", "updated_at": "2018-08-15T07:57:40Z", "closed_at": "2018-08-15T07:57:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This effectively means you *can't* compile `core` for these targets.\r\n\r\n### STR\r\n\r\n```\r\n$ edit foo.rs && cat $_\r\n```\r\n\r\n``` rust\r\n#![crate_type = \"lib\"]\r\n#![feature(i128_type)]\r\n#![feature(lang_items)]\r\n#![feature(no_core)]\r\n#![no_core]\r\n\r\nfn foo() -> i128 { 0 }\r\n\r\n#[lang = \"copy\"]\r\ntrait Copy {}\r\n\r\n#[lang = \"sized\"]\r\ntrait Sized {}\r\n```\r\n\r\n```\r\n$ edit nvptx64-nvidia-cuda.json && cat $_\r\n```\r\n\r\n``` js\r\n{\r\n  \"arch\": \"nvptx64\",\r\n  \"cpu\": \"sm_20\",\r\n  \"data-layout\": \"e-i64:64-v16:16-v32:32-n16:32:64\",\r\n  \"llvm-target\": \"nvptx64-nvidia-cuda\",\r\n  \"max-atomic-width\": 0,\r\n  \"os\": \"cuda\",\r\n  \"panic-strategy\": \"abort\",\r\n  \"target-endian\": \"little\",\r\n  \"target-pointer-width\": \"64\"\r\n}\r\n```\r\n\r\n```\r\n$ rustc --target nvptx64-nvidia-cuda foo.rs\r\nrustc: /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp:2492: virtual llvm::SDValue llvm::NVPTXTargetLowering::LowerReturn(llvm::SDValue, llvm::CallingConv::ID, bool, const llvm::SmallVectorImpl<llvm::ISD::OutputArg>&, const llvm::SmallVectorImpl<llvm::SDValue>&, const llvm::SDLoc&, llvm::SelectionDAG&) const: Assertion `ValVTs.size() == OutVals.size() && \"Bad return value decomposition\"' failed.\r\n```\r\n\r\n### Meta\r\n\r\n```\r\n$ rustc -V\r\nrustc 1.16.0-nightly (468227129 2017-01-03)\r\n```\r\n\r\n---\r\n\r\n### Already Fixed\r\n\r\n```\r\n$ cat msp430.json && cat $_\r\n```\r\n\r\n``` js\r\n{\r\n  \"arch\": \"msp430\",\r\n  \"asm-args\": [\"-mcpu=msp430\"],\r\n  \"data-layout\": \"e-m:e-p:16:16-i32:16:32-a:16-n8:16\",\r\n  \"executables\": true,\r\n  \"linker\": \"msp430-elf-gcc\",\r\n  \"llvm-target\": \"msp430\",\r\n  \"max-atomic-width\": 0,\r\n  \"no-integrated-as\": true,\r\n  \"os\": \"none\",\r\n  \"panic-strategy\": \"abort\",\r\n  \"relocation-model\": \"static\",\r\n  \"target-endian\": \"little\",\r\n  \"target-pointer-width\": \"16\",\r\n  \"vendor\": \"unknown\"\r\n}\r\n```\r\n\r\n```\r\n$ rustc --target msp430 foo.rs\r\nReturn operand #4 has unhandled type i16\r\nUNREACHABLE executed at /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/llvm/lib/CodeGen/CallingConvLower.cpp:114!\r\n```", "closed_by": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/38824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/38824/timeline", "performed_via_github_app": null, "state_reason": "completed"}