{"url": "https://api.github.com/repos/rust-lang/rust/issues/58163", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58163/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58163/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58163/events", "html_url": "https://github.com/rust-lang/rust/issues/58163", "id": 406461456, "node_id": "MDU6SXNzdWU0MDY0NjE0NTY=", "number": 58163, "title": "Linker error for no_std binary using musl", "user": {"login": "jgriebler", "id": 12487273, "node_id": "MDQ6VXNlcjEyNDg3Mjcz", "avatar_url": "https://avatars.githubusercontent.com/u/12487273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgriebler", "html_url": "https://github.com/jgriebler", "followers_url": "https://api.github.com/users/jgriebler/followers", "following_url": "https://api.github.com/users/jgriebler/following{/other_user}", "gists_url": "https://api.github.com/users/jgriebler/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgriebler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgriebler/subscriptions", "organizations_url": "https://api.github.com/users/jgriebler/orgs", "repos_url": "https://api.github.com/users/jgriebler/repos", "events_url": "https://api.github.com/users/jgriebler/events{/privacy}", "received_events_url": "https://api.github.com/users/jgriebler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630662867, "node_id": "MDU6TGFiZWw2MzA2NjI4Njc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-musl", "name": "O-musl", "color": "6e6ec0", "default": false, "description": "Target: The musl libc"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-02-04T18:33:15Z", "updated_at": "2020-04-22T21:22:38Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I tried to build a simple `no_std` \"Hello World!\" program using the `x86_64-unknown-linux-musl` target. The source code (in `src/main.rs`) is here:\r\n\r\n```rust\r\n#![no_std]\r\n#![no_main]\r\n\r\nuse libc::{c_char, c_int, exit, puts};\r\n\r\n#[no_mangle]\r\npub extern \"C\" fn main(_: c_int, _: *const *const c_char) -> c_int {\r\n    unsafe {\r\n        puts(b\"Hello World!\\0\" as *const u8 as *const i8);\r\n    }\r\n\r\n    0\r\n}\r\n\r\n#[panic_handler]\r\nfn panic_handler(_: &core::panic::PanicInfo) -> ! {\r\n    unsafe {\r\n        exit(1)\r\n    }\r\n}\r\n```\r\n\r\nWhen using my default `x86_64-unknown-linux-gnu` target, the program compiles and runs like it should, but with `x86_64-unknown-linux-musl`, I get this linking error:\r\n\r\n```\r\nerror: linking with `cc` failed: exit code: 1\r\n  |\r\n  = note: \"cc\" \"-Wl,--as-needed\" \"-Wl,-z,noexecstack\" \"-Wl,--eh-frame-hdr\" \"-m64\" \"-nostdlib\" \"/home/johannes/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-musl/lib/crt1.o\" \"/home/johannes/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-musl/lib/crti.o\" \"-L\" \"/home/johannes/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-musl/lib\" \"/home/johannes/hello/target/x86_64-unknown-linux-musl/release/deps/hello-8e567d3b97d6bd11.hello.c72za6mx-cgu.0.rcgu.o\" \"-o\" \"/home/johannes/hello/target/x86_64-unknown-linux-musl/release/deps/hello-8e567d3b97d6bd11\" \"-Wl,--gc-sections\" \"-no-pie\" \"-Wl,-zrelro\" \"-Wl,-znow\" \"-Wl,-O1\" \"-nodefaultlibs\" \"-L\" \"/home/johannes/hello/target/x86_64-unknown-linux-musl/release/deps\" \"-L\" \"/home/johannes/hello/target/release/deps\" \"-L\" \"/home/johannes/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-musl/lib\" \"-Wl,-Bstatic\" \"/home/johannes/hello/target/x86_64-unknown-linux-musl/release/deps/liblibc-8c2b3cf08263e000.rlib\" \"/home/johannes/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-musl/lib/libcore-879310dc3b96af61.rlib\" \"/home/johannes/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-musl/lib/libcompiler_builtins-d0572f7a936161bf.rlib\" \"-static\" \"-Wl,-Bdynamic\" \"/home/johannes/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-musl/lib/crtn.o\"\r\n  = note: /usr/bin/ld: /home/johannes/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-musl/lib/crt1.o: in function `_start_c':\r\n          /build/musl-1.1.20/crt/crt1.c:17: undefined reference to `__libc_start_main'\r\n          /usr/bin/ld: /home/johannes/hello/target/x86_64-unknown-linux-musl/release/deps/hello-8e567d3b97d6bd11.hello.c72za6mx-cgu.0.rcgu.o: in function `main':\r\n          hello.c72za6mx-cgu.0:(.text.main+0xa): undefined reference to `puts'\r\n          collect2: error: ld returned 1 exit status\r\n```\r\n\r\nI can build a normal (`std`-using) \"Hello World!\" program for musl without problems, only this `no_std` version doesn't work.\r\n\r\nI am also able to work around this problem by instead moving the source code to `src/lib.rs` and compiling it as a library with `crate-type = [\"staticlib\"]`, then linking manually with `musl-gcc`. The error only occurs when trying to build a binary directly.\r\n\r\n<details>\r\n<summary>My Cargo.toml. Uncomment the two lines and move main.rs to lib.rs for the workaround.</summary>\r\n\r\n```toml\r\n[package]\r\nname = \"hello\"\r\nversion = \"0.1.0\"\r\nauthors = [\"me\"]\r\nedition = \"2018\"\r\n\r\n#[lib]\r\n#crate-type = [\"staticlib\"]\r\n\r\n[dependencies]\r\nlibc = { version = \"0.2\", default-features = false }\r\n\r\n[profile.dev]\r\npanic = \"abort\"\r\n\r\n[profile.release]\r\npanic = \"abort\"\r\n```\r\n</details>", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58163/timeline", "performed_via_github_app": null, "state_reason": null}