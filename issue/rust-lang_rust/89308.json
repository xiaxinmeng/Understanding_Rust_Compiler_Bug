{"url": "https://api.github.com/repos/rust-lang/rust/issues/89308", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89308/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89308/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89308/events", "html_url": "https://github.com/rust-lang/rust/issues/89308", "id": 1008519069, "node_id": "I_kwDOAAsO6M48HMed", "number": 89308, "title": "Uniquely identify CGU's and accurately track their size and merges", "user": {"login": "Sl1mb0", "id": 56142018, "node_id": "MDQ6VXNlcjU2MTQyMDE4", "avatar_url": "https://avatars.githubusercontent.com/u/56142018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sl1mb0", "html_url": "https://github.com/Sl1mb0", "followers_url": "https://api.github.com/users/Sl1mb0/followers", "following_url": "https://api.github.com/users/Sl1mb0/following{/other_user}", "gists_url": "https://api.github.com/users/Sl1mb0/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sl1mb0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sl1mb0/subscriptions", "organizations_url": "https://api.github.com/users/Sl1mb0/orgs", "repos_url": "https://api.github.com/users/Sl1mb0/repos", "events_url": "https://api.github.com/users/Sl1mb0/events{/privacy}", "received_events_url": "https://api.github.com/users/Sl1mb0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-09-27T19:36:41Z", "updated_at": "2023-02-20T12:51:24Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Overview\r\n\r\nThis issue is in relation to [optimizing codegen scheduling](https://github.com/rust-lang/rust/issues/89281). To better profile codegen and see where/what we need to optimize, we need to get metrics for individual codegen units. We can uniquely identify CGU's using their names, so there is already a mechanism for tracking individual CGU's.\r\n\r\n## CGU Size\r\n\r\nTracking CGU size by itself should not be too hard; at some arbitrary point in time we determine the CGU's size and map this quantity to a CGU ID for later lookup. @Mark-Simulacrum mentioned that we should have support for knowing if a CGU is big just because, or because it absorbed other CGU's; and that this is something that should be displayed on perf.r-l.o. my guess is we can do this using a similar structure to what's already in place in `SelfProfiler`:\r\n\r\n```rust\r\npub struct SelfProfiler {\r\n    profiler: Profiler,\r\n    event_filter_mask: EventFilter,\r\n\r\n    string_cache: RwLock<FxHashMap<String, StringId>>,\r\n\r\n    query_event_kind: StringId,\r\n    generic_activity_event_kind: StringId,\r\n    incremental_load_result_event_kind: StringId,\r\n    incremental_result_hashing_event_kind: StringId,\r\n    query_blocked_event_kind: StringId,\r\n    query_cache_hit_event_kind: StringId,\r\n    /*** NEW ***/\r\n    codegen_unit_merge_event_kind: StringId,\r\n}\r\n```\r\n\r\nHowever, as I understand it, this approach ignores tracking _which_ CGU's have been merged together and just informs\r\nus _when_ and _where_ a merge has occurred; shouldn't we also know _what_ got merged? Or does using a `CodegenUnitId` solve this?\r\n\r\nLastly, it has been mentioned that the size metric is not currently accurate, and that the quantity of LLVM instructions\r\nmight not provide enough insight. Until I know more, I plan on using CGU instruction count as the size metric.\r\n\r\n## To Do\r\n\r\n- [x] identify individual CGU's\r\n- [ ] Change size metric to reflect inst counts of CGU's\r\n- [ ] Add support for tracking which CGU's have been merged; and where and when it happened.\r\n\r\n\r\ncc @Mark-Simulacrum", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89308/timeline", "performed_via_github_app": null, "state_reason": null}