{"url": "https://api.github.com/repos/rust-lang/rust/issues/77220", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77220/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77220/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77220/events", "html_url": "https://github.com/rust-lang/rust/issues/77220", "id": 709460502, "node_id": "MDU6SXNzdWU3MDk0NjA1MDI=", "number": 77220, "title": "Incorrect unsafe code example in standard library", "user": {"login": "TrolledWoods", "id": 26680270, "node_id": "MDQ6VXNlcjI2NjgwMjcw", "avatar_url": "https://avatars.githubusercontent.com/u/26680270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TrolledWoods", "html_url": "https://github.com/TrolledWoods", "followers_url": "https://api.github.com/users/TrolledWoods/followers", "following_url": "https://api.github.com/users/TrolledWoods/following{/other_user}", "gists_url": "https://api.github.com/users/TrolledWoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/TrolledWoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TrolledWoods/subscriptions", "organizations_url": "https://api.github.com/users/TrolledWoods/orgs", "repos_url": "https://api.github.com/users/TrolledWoods/repos", "events_url": "https://api.github.com/users/TrolledWoods/events{/privacy}", "received_events_url": "https://api.github.com/users/TrolledWoods/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2020-09-26T08:09:02Z", "updated_at": "2020-10-02T03:06:19Z", "closed_at": "2020-10-02T03:06:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The safety clause on the ``Vec::set_len`` function says that:\r\n* new_len must be less than or equal to capacity().\r\n* The elements at old_len..new_len must be initialized.\r\n\r\nHowever, the code example for ``std::ptr::copy`` violates the second rule\r\n```rust\r\nuse std::ptr;\r\n\r\nunsafe fn from_buf_raw<T>(ptr: *const T, elts: usize) -> Vec<T> {\r\n    let mut dst = Vec::with_capacity(elts);\r\n    dst.set_len(elts);\r\n    ptr::copy(ptr, dst.as_mut_ptr(), elts);\r\n    dst\r\n}\r\n```\r\n\r\nThe ``set_len`` is called before the values are initialized with the copy.\r\n\r\nThis could be fixed by either making the safety clause for ``set_len`` more inclusive, so that as long as you don't use the vector before initializing the values it's considered safe, or by switching the ``dst.set_len(elts);`` and ``ptr::copy(ptr, dst.as_mut_ptr(), alts);`` lines around in the example.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77220/timeline", "performed_via_github_app": null, "state_reason": "completed"}