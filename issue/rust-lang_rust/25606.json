{"url": "https://api.github.com/repos/rust-lang/rust/issues/25606", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/25606/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/25606/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/25606/events", "html_url": "https://github.com/rust-lang/rust/issues/25606", "id": 78098447, "node_id": "MDU6SXNzdWU3ODA5ODQ0Nw==", "number": 25606, "title": "ICE: Encountered error `Unimplemented` when trying to select an implementation for constant trait item reference. <anon>:4     const ID: i32;", "user": {"login": "Mr-Byte", "id": 2321210, "node_id": "MDQ6VXNlcjIzMjEyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2321210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mr-Byte", "html_url": "https://github.com/Mr-Byte", "followers_url": "https://api.github.com/users/Mr-Byte/followers", "following_url": "https://api.github.com/users/Mr-Byte/following{/other_user}", "gists_url": "https://api.github.com/users/Mr-Byte/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mr-Byte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mr-Byte/subscriptions", "organizations_url": "https://api.github.com/users/Mr-Byte/orgs", "repos_url": "https://api.github.com/users/Mr-Byte/repos", "events_url": "https://api.github.com/users/Mr-Byte/events{/privacy}", "received_events_url": "https://api.github.com/users/Mr-Byte/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-05-19T13:55:18Z", "updated_at": "2015-05-20T02:14:39Z", "closed_at": "2015-05-20T02:03:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have two similar pieces of code that I would expect to behave in a similar fashion.  The first piece of code compiles and functions properly:\n\n``` rust\ntrait HasId {\n    fn id() -> i32;\n}\n\ntrait Foo {}\n\nimpl HasId for Foo {\n    fn id() -> i32 { 1 }\n}\n\ntrait Bar {}\n\nimpl HasId for Bar {\n    fn id() -> i32 { 2 }\n}\n\nfn print_id<T: HasId + ?Sized>() {\n    println!(\"{}\", <T as HasId>::id());\n}\n\nfn main() {\n    print_id::<Foo>();\n    print_id::<Bar>();\n}\n```\n\nThe second piece of code replaces the static methods with an associated constant:\n\n``` rust\n#![feature(associated_consts)]\n\ntrait HasId {\n    const ID: i32;\n}\n\ntrait Foo {}\n\nimpl HasId for Foo {\n    const ID: i32 = 1;\n}\n\ntrait Bar {}\n\nimpl HasId for Bar {\n    const ID: i32 = 2;\n}\n\nfn print_id<T: HasId + ?Sized>() {\n    println!(\"{}\", <T as HasId>::ID);\n}\n\nfn main() {\n    print_id::<Foo>();\n    print_id::<Bar>();\n}\n```\n\nThis code fails to compile with the following ICE:\n\n```\n<anon>:4:5: 4:19 error: internal compiler error: Encountered error `Unimplemented` when trying to select an implementation for constant trait item reference.\n<anon>:4     const ID: i32;\n             ^~~~~~~~~~~~~~\nnote: the compiler unexpectedly panicked. this is a bug.\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\nnote: run with `RUST_BACKTRACE=1` for a backtrace\nthread 'rustc' panicked at 'Box<Any>', /home/rustbuild/src/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/libsyntax/diagnostic.rs:170\n```\n\nWhat's interesting is that the following code does compile:\n\n``` rust\n#![feature(associated_consts)]\n\ntrait HasId {\n    const ID: i32;\n}\n\ntrait Foo {}\n\nimpl HasId for Foo {\n    const ID: i32 = 1;\n}\n\ntrait Bar {}\n\nimpl HasId for Bar {\n    const ID: i32 = 2;\n}\n\nfn main() {\n    println!(\"{}\", <Foo as HasId>::ID);\n    println!(\"{}\", <Bar as HasId>::ID);\n}\n```\n\nSo it would appear as if this behavior is related to the use of a generic in the UFCS resolution for the associated constant.\n", "closed_by": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/25606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/25606/timeline", "performed_via_github_app": null, "state_reason": "completed"}