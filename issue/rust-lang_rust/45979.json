{"url": "https://api.github.com/repos/rust-lang/rust/issues/45979", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45979/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45979/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45979/events", "html_url": "https://github.com/rust-lang/rust/issues/45979", "id": 273736943, "node_id": "MDU6SXNzdWUyNzM3MzY5NDM=", "number": 45979, "title": "smarter blame assignment for lifetime inference errors", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 693664741, "node_id": "MDU6TGFiZWw2OTM2NjQ3NDE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mentor", "name": "E-needs-mentor", "color": "02e10c", "default": false, "description": "Call for participation: This issue is in need of a mentor."}, {"id": 693665463, "node_id": "MDU6TGFiZWw2OTM2NjU0NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-diagnostics", "name": "WG-diagnostics", "color": "c2e0c6", "default": false, "description": "Working group: diagnostics"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-14T10:18:14Z", "updated_at": "2018-09-13T00:16:01Z", "closed_at": "2018-09-13T00:16:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider this example ([try it on play](https://play.rust-lang.org/?gist=3d44ee74eb03e67879d935b537f87bba&version=nightly)):\r\n\r\n```rust\r\n#![feature(match_default_bindings)]\r\n\r\nuse std::cell::RefCell;\r\nuse std::collections::HashMap;\r\n\r\nstruct Cx<'cx> {\r\n  types: RefCell<HashMap<&'cx str, String>>,\r\n}\r\n\r\nenum Lvalue<'cx> {\r\n  Var(&'cx str),\r\n  Deref(Box<Lvalue<'cx>>),\r\n}\r\n\r\nimpl<'cx> Lvalue<'cx> {\r\n  fn ty(&self, cx: &Cx<'cx>) -> String {\r\n    match self {\r\n      Lvalue::Deref(base) => format!(\"&{}\", base.ty(cx)),\r\n      Lvalue::Var(v) => cx.types.borrow()[v].clone(),\r\n    }\r\n  }\r\n}\r\n\r\nfn describe<'cx>(lvalue: Lvalue, cx: &Cx<'cx>) -> String {\r\n    match lvalue {\r\n      Lvalue::Deref(base) => format!(\"deref of {} pointer\", base.ty(cx)),\r\n      Lvalue::Var(v) => format!(\"variable `{}`\", v),\r\n    }\r\n}\r\n\r\nfn main() { }\r\n```\r\n\r\nI get the error:\r\n\r\n```\r\nerror[E0621]: explicit lifetime required in the type of `lvalue`\r\n  --> src/main.rs:26:69\r\n   |\r\n24 | fn describe<'cx>(lvalue: Lvalue, cx: &Cx<'cx>) -> String {\r\n   |                  ------ consider changing the type of `lvalue` to `Lvalue<'cx>`\r\n25 |     match lvalue {\r\n26 |       Lvalue::Deref(base) => format!(\"deref of {} pointer\", base.ty(cx)),\r\n   |                                                                     ^^ lifetime `'cx` required\r\n```\r\n\r\nThis is pretty good, but I think it would be better if we moved the highlight off of `cx`, which has the correct type, and over perhaps to `base`, which does not, or perhaps to the function call `ty`:\r\n\r\n```\r\nerror[E0621]: explicit lifetime required in the type of `lvalue`\r\n  --> src/main.rs:26:69\r\n   |\r\n24 | fn describe<'cx>(lvalue: Lvalue, cx: &Cx<'cx>) -> String {\r\n   |                  ------ consider changing the type of `lvalue` to `Lvalue<'cx>`\r\n25 |     match lvalue {\r\n26 |       Lvalue::Deref(base) => format!(\"deref of {} pointer\", base.ty(cx)),\r\n   |                                                                  ^^ lifetime `'cx` required\r\n```\r\n\r\nI think a better analysis of the region inference graph could tell us what to highlight. Right now I believe we blame the edge that introduced the unsatisfiable constraint. In this case, the edge that introduced `'cx` corresponds to the parameter `cx`. But we really want to blame the edge that **brought** the unsatisfiable constraint into \"tension\", which I think is generally the point where contravariance is introduced (iow, parameters to function calls). But I suspect we can get decent results with just a simple **weighting** of the causes for introducing each edge.", "closed_by": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45979/timeline", "performed_via_github_app": null, "state_reason": "completed"}