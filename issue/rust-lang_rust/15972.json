{"url": "https://api.github.com/repos/rust-lang/rust/issues/15972", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/15972/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/15972/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/15972/events", "html_url": "https://github.com/rust-lang/rust/issues/15972", "id": 38702058, "node_id": "MDU6SXNzdWUzODcwMjA1OA==", "number": 15972, "title": "regression: code is SIGSEGVing after LLVM lifetime intrinsics were implemented", "user": {"login": "farcaller", "id": 693, "node_id": "MDQ6VXNlcjY5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/farcaller", "html_url": "https://github.com/farcaller", "followers_url": "https://api.github.com/users/farcaller/followers", "following_url": "https://api.github.com/users/farcaller/following{/other_user}", "gists_url": "https://api.github.com/users/farcaller/gists{/gist_id}", "starred_url": "https://api.github.com/users/farcaller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/farcaller/subscriptions", "organizations_url": "https://api.github.com/users/farcaller/orgs", "repos_url": "https://api.github.com/users/farcaller/repos", "events_url": "https://api.github.com/users/farcaller/events{/privacy}", "received_events_url": "https://api.github.com/users/farcaller/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 100522, "node_id": "MDU6TGFiZWwxMDA1MjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-crash", "name": "I-crash", "color": "e10c02", "default": false, "description": "Issue: The compiler crashes (SIGSEGV, SIGABRT, etc). Use I-ICE instead when the compiler panics."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2014-07-25T06:55:46Z", "updated_at": "2014-07-30T07:36:51Z", "closed_at": "2014-07-30T07:36:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Previously valid code is now behaving wrong.\n\n``` rust\n  pub fn new<'a>(cx: &'a ExtCtxt, tts: &[TokenTree]) -> Parser<'a> {\n    let sess = cx.parse_sess();\n    let ttsvec = tts.iter().map(|x| (*x).clone()).collect();   // [1]\n    // let ttsvec = Vec::from_slice(tts);   // [2]\n\n    debug!(\"tts: {}\", tts);\n    debug!(\"ttsvec: {}\", ttsvec);   // [3]\n\n    let mut reader = box lexer::new_tt_reader(\n        &sess.span_diagnostic, None, ttsvec) as Box<lexer::Reader>;\n\n    let tok0 = reader.next_token();\n    let token = tok0.tok;\n    let span = tok0.sp;\n\n\n    Parser {\n      sess: sess,\n      reader: reader,\n\n      token: token,\n      span: span,\n\n      last_token: None,\n      last_span: span,\n    }\n  }\n```\n\nHere's the problem description: parser cannot parse input, as it's hitting wrong tokens. Apparently, a bunch of tokens in input are lost. The problem is in line [1], which works as expected when replaced by line [2]. The problem is getting even worse, as line [3] SIGSEGVs the application.\n\nIf line [1] is replaced by line [2], the code fails further, as I described in https://github.com/rust-lang/rust/issues/15931. I think it relates to the same problem (parser reports bad token which isn't even in the input!). It kind of feels like memory corruption (in rust, heh).\n\nDigging deeper, it seems that it doesn't crash at `debug!()` point, it's just `debug!()` somehow altering the program state to allow it to crash further on. gdb can't unwind the stack for some reason, lldb shows this:\n\n```\n  * frame #0: 0x000000010235f522 libsyntax-4e7c5e5c.dylib`cell::Cell$LT$T$GT$::get::h16703176363586027891 + 66\n    frame #1: 0x0000000000000018\n    frame #2: 0x000000010238e6c4 libsyntax-4e7c5e5c.dylib`rc::RcBoxPtr::strong::h13767585679411698615 + 84\n    frame #3: 0x00000001023f64af libsyntax-4e7c5e5c.dylib`rc::RcBoxPtr::inc_strong::h7981967022436922026 + 95\n    frame #4: 0x00000001023f6436 libsyntax-4e7c5e5c.dylib`rc::Rc$LT$T$GT$.Clone::clone::h3247237882429377366 + 54\n    frame #5: 0x00000001023f59bd libsyntax-4e7c5e5c.dylib`ast::TokenTree...std..clone..Clone::clone::hc9d3937696cc261fCkl + 221\n    frame #6: 0x00000001024c0dd7 libsyntax-4e7c5e5c.dylib`ext::tt::transcribe::tt_next_token::he37abde7b9ce15f4Rfb + 2679\n    frame #7: 0x00000001024c010d libsyntax-4e7c5e5c.dylib`parse::lexer::TtReader$LT$$x27a$GT$.Reader::next_token::hea6b26d7f0c328024mG + 93\n    frame #8: 0x0000000106a65e29 libmacro_platformtree.dylib`parser::Parser$LT$$x27a$GT$::bump::hb11efbf8fc1eeb58Xnc + 249\n    frame #9: 0x0000000106a5a843 libmacro_platformtree.dylib`parser::Parser$LT$$x27a$GT$::parse_platformtree::h55536ab21adb63f1CJb + 1235\n```\n\nI did a bisect yesterday, which points at 92d1f155da5ec0e58737bc0c2cb67f52bf665347 as the first bad commit.\n\nI will try to provide a smaller test case, but so far I had no luck, all the pieces extracted from the original crate seem to work as expected.\n\nPlease advise, we're kind of stuck with this breakage.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/15972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/15972/timeline", "performed_via_github_app": null, "state_reason": "completed"}