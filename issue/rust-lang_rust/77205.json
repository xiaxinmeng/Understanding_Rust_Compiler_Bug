{"url": "https://api.github.com/repos/rust-lang/rust/issues/77205", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77205/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77205/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77205/events", "html_url": "https://github.com/rust-lang/rust/issues/77205", "id": 709299895, "node_id": "MDU6SXNzdWU3MDkyOTk4OTU=", "number": 77205, "title": "Serialization/Deserialization of SocketAddrV6 producing unexpected results", "user": {"login": "dylanbronson", "id": 55515325, "node_id": "MDQ6VXNlcjU1NTE1MzI1", "avatar_url": "https://avatars.githubusercontent.com/u/55515325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dylanbronson", "html_url": "https://github.com/dylanbronson", "followers_url": "https://api.github.com/users/dylanbronson/followers", "following_url": "https://api.github.com/users/dylanbronson/following{/other_user}", "gists_url": "https://api.github.com/users/dylanbronson/gists{/gist_id}", "starred_url": "https://api.github.com/users/dylanbronson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dylanbronson/subscriptions", "organizations_url": "https://api.github.com/users/dylanbronson/orgs", "repos_url": "https://api.github.com/users/dylanbronson/repos", "events_url": "https://api.github.com/users/dylanbronson/events{/privacy}", "received_events_url": "https://api.github.com/users/dylanbronson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-09-25T21:41:56Z", "updated_at": "2020-09-25T22:49:34Z", "closed_at": "2020-09-25T22:49:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n    #[test]\r\n    fn test_equality() {\r\n        let socket = SocketAddrV6::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1), 8080, 1, 1);\r\n        let bincode = bincode::serialize(&socket).unwrap();\r\n        let socket2 = bincode::deserialize(&bincode).unwrap();\r\n        assert_eq!(socket, socket2);\r\n    }\r\n```\r\n\r\nI expected to see this happen: I expect this to pass. All I'm doing is serialization and deserialization.\r\n\r\nInstead, this happened: It failed. The flowid and scope_id have been converted to 0 upon deserialization.\r\n\r\nPlease let me know if I have some misconception with how bincode or SocketAddrV6 are supposed to work.\r\nThank you!\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.46.0 (04488afe3 2020-08-24)\r\nbinary: rustc\r\ncommit-hash: 04488afe34512aa4c33566eb16d8c912a3ae04f9\r\ncommit-date: 2020-08-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.46.0\r\nLLVM version: 10.0\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nrunning 1 test\r\nthread '<redacted>::tests::test_equality' panicked at 'assertion failed: `(left == right)`\r\n  left: `[::1]:8080`,\r\n right: `[::1]:8080`', <redacted>/src/<redacted>.rs:599:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1076\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1537\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:217\r\n  10: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:526\r\n  11: rust_begin_unwind\r\n             at src/libstd/panicking.rs:437\r\n  12: std::panicking::begin_panic_fmt\r\n             at src/libstd/panicking.rs:391\r\n  13: <>::tests::test_equality\r\n             at <>.rs:599\r\n  14: <>::tests::test_equality::{{closure}}\r\n             at <>.rs:595\r\n  15: core::ops::function::FnOnce::call_once\r\n             at /home/dylan/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:233\r\n  16: <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/liballoc/boxed.rs:1081\r\n  17: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/libstd/panic.rs:318\r\n  18: std::panicking::try::do_call\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/libstd/panicking.rs:348\r\n  19: std::panicking::try\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/libstd/panicking.rs:325\r\n  20: std::panic::catch_unwind\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/libstd/panic.rs:394\r\n  21: test::run_test_in_process\r\n             at src/libtest/lib.rs:541\r\n  22: test::run_test::run_test_inner::{{closure}}\r\n             at src/libtest/lib.rs:450\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\ntest persist::tests::test_equality ... FAILED\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77205/timeline", "performed_via_github_app": null, "state_reason": "completed"}