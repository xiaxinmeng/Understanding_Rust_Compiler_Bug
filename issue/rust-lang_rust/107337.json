{"url": "https://api.github.com/repos/rust-lang/rust/issues/107337", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107337/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107337/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107337/events", "html_url": "https://github.com/rust-lang/rust/issues/107337", "id": 1558736055, "node_id": "I_kwDOAAsO6M5c6Gy3", "number": 107337, "title": "DWARF for u128 could record alignment, doesn't", "user": {"login": "cbiffle", "id": 45247, "node_id": "MDQ6VXNlcjQ1MjQ3", "avatar_url": "https://avatars.githubusercontent.com/u/45247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbiffle", "html_url": "https://github.com/cbiffle", "followers_url": "https://api.github.com/users/cbiffle/followers", "following_url": "https://api.github.com/users/cbiffle/following{/other_user}", "gists_url": "https://api.github.com/users/cbiffle/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbiffle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbiffle/subscriptions", "organizations_url": "https://api.github.com/users/cbiffle/orgs", "repos_url": "https://api.github.com/users/cbiffle/repos", "events_url": "https://api.github.com/users/cbiffle/events{/privacy}", "received_events_url": "https://api.github.com/users/cbiffle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203130, "node_id": "MDU6TGFiZWwyMDMxMzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-debuginfo", "name": "A-debuginfo", "color": "f7e101", "default": false, "description": "Area: Debugging information in compiled programs (DWARF, PDB, etc.)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-01-26T20:29:01Z", "updated_at": "2023-01-27T09:40:47Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With rustc 1.66.1 stable, compiling a program that makes use of `u128` produces the following DIE describing the type:\r\n\r\n```\r\n< 1><0x000031f4>    DW_TAG_base_type\r\n                      DW_AT_name                  u128\r\n                      DW_AT_encoding              DW_ATE_unsigned\r\n                      DW_AT_byte_size             0x00000010\r\n```\r\n\r\nThe `AT_alignment` attribute is not generated, and the information cannot easily be inferred from this DIE, since the details are subject to the target settings. In my case on an unmodified thumbv8m target, `u128` turns out to require 8-byte alignment, as seen by comparing with `MaybeUninit<u128>`:\r\n\r\n```\r\n< 4><0x00000fca>          DW_TAG_union_type\r\n                            DW_AT_name                  MaybeUninit<u128>\r\n                            DW_AT_byte_size             0x00000010\r\n                            DW_AT_alignment             0x00000008\r\n```\r\n\r\nI believe this qualifies as a \"non-default alignment\" under the DWARF spec because the platform ABI itself (ARM M-profile, in this case) doesn't appear to specify alignment for 128-bit quantities that are not SIMD vectors. As such, we could record the alignment explicitly on the base type while following the letter of the DWARF standard.\r\n\r\nMore broadly -- while it would require a slightly looser interpretation of the DWARF standard, it would be lovely to include the alignment information for base types in their DIEs, for tool support. The *letter* of the DWARF `DW_AT_alignment` spec requires debug tools to know the \"default\" alignment for all types, such that it's only recorded in a DIE when it's overridden -- but particularly with custom `target.json`, that information may not be available to the tools.\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.66.1 (90743e729 2023-01-10)\r\nbinary: rustc\r\ncommit-hash: 90743e7298aca107ddaa0c202a4d3604e29bfeb6\r\ncommit-date: 2023-01-10\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.66.1\r\nLLVM version: 15.0.2\r\n```\r\n\r\nI have confirmed that this behavior is unchanged up through `1.69.0-nightly (c18a5e8a5 2023-01-25)`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107337/timeline", "performed_via_github_app": null, "state_reason": null}