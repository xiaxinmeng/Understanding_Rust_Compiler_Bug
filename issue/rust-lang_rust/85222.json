{"url": "https://api.github.com/repos/rust-lang/rust/issues/85222", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85222/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85222/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85222/events", "html_url": "https://github.com/rust-lang/rust/issues/85222", "id": 890068527, "node_id": "MDU6SXNzdWU4OTAwNjg1Mjc=", "number": 85222, "title": "Diagnostics emitted for disallowed exhaustive matches on types that contain a `usize` lack information about why the match cannot be considered exhaustive", "user": {"login": "PatchMixolydic", "id": 8634700, "node_id": "MDQ6VXNlcjg2MzQ3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8634700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PatchMixolydic", "html_url": "https://github.com/PatchMixolydic", "followers_url": "https://api.github.com/users/PatchMixolydic/followers", "following_url": "https://api.github.com/users/PatchMixolydic/following{/other_user}", "gists_url": "https://api.github.com/users/PatchMixolydic/gists{/gist_id}", "starred_url": "https://api.github.com/users/PatchMixolydic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PatchMixolydic/subscriptions", "organizations_url": "https://api.github.com/users/PatchMixolydic/orgs", "repos_url": "https://api.github.com/users/PatchMixolydic/repos", "events_url": "https://api.github.com/users/PatchMixolydic/events{/privacy}", "received_events_url": "https://api.github.com/users/PatchMixolydic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}, {"id": 1976249039, "node_id": "MDU6TGFiZWwxOTc2MjQ5MDM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-patterns", "name": "A-patterns", "color": "f7e101", "default": false, "description": "Relating to patterns and pattern matching"}, {"id": 1976249438, "node_id": "MDU6TGFiZWwxOTc2MjQ5NDM4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-exhaustiveness-checking", "name": "A-exhaustiveness-checking", "color": "f7e101", "default": false, "description": "Relating to exhaustiveness / usefulness checking of patterns"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-05-12T13:03:09Z", "updated_at": "2023-04-10T11:36:05Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Sorry about the long title :sweat_smile:\r\n\r\nGiven the following code ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=867f7b4274789ddf7a82ce8154f1e428)):\r\n\r\n```rust\r\nfn main() {\r\n    let x: usize = 4;\r\n    let y = Some(x);\r\n\r\n    match x {\r\n        0 => (),\r\n        1..=usize::MAX => (),\r\n    }\r\n\r\n    match y {\r\n        Some(0) => (),\r\n        Some(1..=usize::MAX) => (),\r\n        None => (),\r\n    }\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0004]: non-exhaustive patterns: `_` not covered\r\n --> src/main.rs:5:11\r\n  |\r\n5 |     match x {\r\n  |           ^ pattern `_` not covered\r\n  |\r\n  = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\r\n  = note: the matched value is of type `usize`\r\n  = note: `usize` does not have a fixed maximum value, so a wildcard `_` is necessary to match exhaustively\r\n  = help: add `#![feature(precise_pointer_size_matching)]` to the crate attributes to enable precise `usize` matching\r\n\r\nerror[E0004]: non-exhaustive patterns: `Some(_)` not covered\r\n   --> src/main.rs:10:11\r\n    |\r\n10  |     match y {\r\n    |           ^ pattern `Some(_)` not covered\r\n    |\r\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\r\n    = note: the matched value is of type `Option<usize>`\r\n```\r\n\r\nNote how the first diagnostic, emitted when matching on a `usize`, contains additional information about why this exhaustive match does not pass the exhaustiveness check. Ideally, this information should be added to the second diagnostic as well:\r\n\r\n```\r\nerror[E0004]: non-exhaustive patterns: `Some(_)` not covered\r\n   --> src/main.rs:10:11\r\n    |\r\n10  |     match y {\r\n    |           ^ pattern `Some(_)` not covered\r\n    |\r\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\r\n    = note: the matched value is of type `Option<usize>`\r\n    = note: `usize` does not have a fixed maximum value, so a wildcard `_` is necessary to match exhaustively\r\n    = help: add `#![feature(precise_pointer_size_matching)]` to the crate attributes to enable precise `usize` matching\r\n```\r\n\r\n@rustbot modify labels: +A-exhaustiveness-checking +A-patterns +D-terse", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85222/timeline", "performed_via_github_app": null, "state_reason": null}