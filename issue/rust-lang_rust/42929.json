{"url": "https://api.github.com/repos/rust-lang/rust/issues/42929", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42929/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42929/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42929/events", "html_url": "https://github.com/rust-lang/rust/issues/42929", "id": 238884784, "node_id": "MDU6SXNzdWUyMzg4ODQ3ODQ=", "number": 42929, "title": "RFC: limit suggestions to a white-list of functions or to `as_`, `to_`, and `into_` methods", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 178802147, "node_id": "MDU6TGFiZWwxNzg4MDIxNDc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-needs-decision", "name": "I-needs-decision", "color": "e11d21", "default": false, "description": "Issues in need of decision."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-06-27T15:09:30Z", "updated_at": "2018-01-13T05:02:09Z", "closed_at": "2018-01-13T05:02:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The \"here are some functions that may meet your needs\" tips are rather broad. I think we should impose some limits. As a spin-off from #42764, consider this (same) example:\r\n\r\n```rust\r\nfn main() {\r\n    let _: Option<i32> = 42i32;\r\n}\r\n```\r\n\r\nRight now this gives:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n --> <anon>:2:26\r\n  |\r\n2 |     let _: Option<i32> = 42i32;\r\n  |                          ^^^^^ expected enum `std::option::Option`, found i32\r\n  |\r\n  = note: expected type `std::option::Option<i32>`\r\n             found type `i32`\r\n  = help: here are some functions which might fulfill your needs:\r\n          - .checked_abs()\r\n          - .checked_neg()\r\n```\r\n\r\n`checked_abs()` and `checked_neg()` seem like very silly suggestions to me. Similarly, #42746 points out that suggesting `unwrap()` is sort of inappropriate. I think it would be better if used a whitelist whitelist of approved conversion functions, or else if we limited them to the prefixes `as_`, `to_`, or `into_`. The latter is sort of codifying an existing convention -- I personally see no problem with that, since this is just a compiler hint.  It has the plus and minus that it would apply rather broadly (i.e., to functions outside the stdlib), where a whitelist obviously wouldn't unless we standardized it.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42929/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42929/timeline", "performed_via_github_app": null, "state_reason": "completed"}