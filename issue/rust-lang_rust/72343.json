{"url": "https://api.github.com/repos/rust-lang/rust/issues/72343", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72343/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72343/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72343/events", "html_url": "https://github.com/rust-lang/rust/issues/72343", "id": 620821423, "node_id": "MDU6SXNzdWU2MjA4MjE0MjM=", "number": 72343, "title": "Conditional jumps equivalent to if(0 != 0) can appear in optimized assembly", "user": {"login": "Diomendius", "id": 42310725, "node_id": "MDQ6VXNlcjQyMzEwNzI1", "avatar_url": "https://avatars.githubusercontent.com/u/42310725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Diomendius", "html_url": "https://github.com/Diomendius", "followers_url": "https://api.github.com/users/Diomendius/followers", "following_url": "https://api.github.com/users/Diomendius/following{/other_user}", "gists_url": "https://api.github.com/users/Diomendius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Diomendius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Diomendius/subscriptions", "organizations_url": "https://api.github.com/users/Diomendius/orgs", "repos_url": "https://api.github.com/users/Diomendius/repos", "events_url": "https://api.github.com/users/Diomendius/events{/privacy}", "received_events_url": "https://api.github.com/users/Diomendius/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1050784470, "node_id": "MDU6TGFiZWwxMDUwNzg0NDcw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-bisection", "name": "E-needs-bisection", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs bisection: https://github.com/rust-lang/cargo-bisect-rustc"}, {"id": 1568663381, "node_id": "MDU6TGFiZWwxNTY4NjYzMzgx", "url": "https://api.github.com/repos/rust-lang/rust/labels/ICEBreaker-LLVM", "name": "ICEBreaker-LLVM", "color": "74cc28", "default": false, "description": "Bugs identified for the LLVM ICE-breaker group"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-05-19T09:24:20Z", "updated_at": "2021-04-15T06:06:59Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I've got a reasonably minimal test case whose assembly (with `opt-level=1` and above) includes this sequence of opcodes, which is effectively a no-op as far as I can tell:\r\n```asm\r\nxor  eax, eax\r\ntest eax, eax\r\njne  .LBB0_3\r\n```\r\n\r\nThis is the code in question ([playground](https://play.rust-lang.org/?version=nightly&mode=release&edition=2018&gist=7acb86df14b6a68b25132d2ff7c9e5fc)):\r\n```rust\r\npub fn foo(f: fn() -> i32) {\r\n    let mut a = f();\r\n    let mut b = f();\r\n\r\n    loop {\r\n        if a != 0 && b == 0 {\r\n            a = f();\r\n        } else if a == 0 && b != 0 {\r\n            b = f();\r\n        } else {\r\n            return\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI'm not sure whether this is more LLVM's fault or Rust's. Either way, this should not end up in the finished assembly, and I am fairly certain that at least in this specific case all three instructions can be removed entirely without affecting program behaviour.\r\n\r\n`rustc 1.45.0-nightly (2020-05-18 d8878868c8d7ef3779e7)` is the most recent version I have tested that shows this issue, and `rustc 1.25.0` on godbolt.org is the oldest. `rustc 1.24.0` does not show the issue, though there's a good chance this is just coincidence.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72343/reactions", "total_count": 3, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 3, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72343/timeline", "performed_via_github_app": null, "state_reason": null}