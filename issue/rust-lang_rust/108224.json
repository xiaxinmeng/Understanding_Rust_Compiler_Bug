{"url": "https://api.github.com/repos/rust-lang/rust/issues/108224", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108224/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108224/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108224/events", "html_url": "https://github.com/rust-lang/rust/issues/108224", "id": 1590473121, "node_id": "I_kwDOAAsO6M5ezLGh", "number": 108224, "title": "bizarre error message for one of the universal constructor syntaxes", "user": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-02-18T21:16:38Z", "updated_at": "2023-02-24T22:07:24Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#![allow(dead_code)]\r\n#![allow(unused_variables)]\r\nenum Enum<'l, F> {\r\n    Tuple(&'l F),\r\n    Struct { f: &'l F },\r\n}\r\nfn main(){\r\n    let v = 42u32;\r\n    let t = Enum::<u32>::Struct { f: &v };\r\n}\r\n```\r\n\r\nI expected to see this happen: it compiles.\r\n\r\nInstead, this happened (on the [playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=8410c281e538e90c9a3ba32bb4b58df0), with stable and with nightly):\r\n\r\n```\r\nerror[E0109]: lifetime arguments are not allowed on variant `Struct`\r\n --> src/main.rs:9:26\r\n  |\r\n9 |     let t = Enum::<u32>::Struct { f: &v };\r\n  |                          ^^^^^^\r\n  |                          |\r\n  |                          lifetime argument not allowed\r\n  |                          not allowed on variant `Struct`\r\n  |\r\n  = note: enum variants can't have type parameters\r\n\r\nerror[E0107]: this enum takes 1 lifetime argument but 0 lifetime arguments were supplied\r\n --> src/main.rs:9:13\r\n  |\r\n9 |     let t = Enum::<u32>::Struct { f: &v };\r\n  |             ^^^^ expected 1 lifetime argument\r\n  |\r\nnote: enum defined here, with 1 lifetime parameter: `'l`\r\n --> src/main.rs:3:6\r\n  |\r\n3 | enum Enum<'l, F> {\r\n  |      ^^^^ --\r\nhelp: add missing lifetime argument\r\n  |\r\n9 |     let t = Enum::<'l, u32>::Struct { f: &v };\r\n  |                    +++\r\n```\r\n\r\nIt's not 100% clear to me that this syntax, with the generics applied to the enum type rather than the variant, is intended to be accepted.  I think it probably ought to be, though.  On this point I found #69363/#69356.  The Reference doesn't seem to discuss it.\r\n\r\nAlso, the error messages are nonsensical, and the suggestion doesn't compile.\r\n\r\nVariations:\r\n```\r\n    let t = Enum::<'l, u32>::Tuple { 0: &v }; // use of undeclared lifetime name `'l`  [obviously]\r\n    let t = Enum::<u32>::Tuple { 0: &v }; //  lifetime arguments are not allowed on variant `Tuple`\r\n    let t = Enum::<'_, u32>::Tuple { 0: &v }; // //  lifetime arguments are not allowed on variant `Tuple`\r\n    let t = Enum::<u32>::Tuple(&v);; // compiles, but of course you can't use this for a named-fields variant\r\n    let t = Enum::Struct::<u32> { f: &v }; // compiles\r\n    let t = Enum::Tuple::<u32> { 0: &v }; // compiles\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108224/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108224/timeline", "performed_via_github_app": null, "state_reason": null}