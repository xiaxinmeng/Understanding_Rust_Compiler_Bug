{"url": "https://api.github.com/repos/rust-lang/rust/issues/67991", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67991/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67991/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67991/events", "html_url": "https://github.com/rust-lang/rust/issues/67991", "id": 546574646, "node_id": "MDU6SXNzdWU1NDY1NzQ2NDY=", "number": 67991, "title": "Incompatible type error should explain when types come from default type parameters", "user": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-08T00:14:13Z", "updated_at": "2020-01-12T04:27:42Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "```rust\r\ntrait Trait<T = ()> {\r\n    fn foo() -> T;\r\n}\r\n\r\nstruct S;\r\n\r\nimpl Trait for S {\r\n    fn foo() -> u32 { 0 }\r\n}\r\n```\r\nproduces:\r\n```\r\nerror[E0053]: method `foo` has an incompatible type for trait\r\n  --> src/lib.rs:28:17\r\n   |\r\n22 |     fn foo() -> T;\r\n   |                 - type in trait\r\n...\r\n28 |     fn foo() -> u32 { 0 }\r\n   |                 ^^^ expected `()`, found `u32`\r\n   |\r\n   = note: expected fn pointer `fn()`\r\n              found fn pointer `fn() -> u32`\r\n```\r\nThe diagnostic doesn't point out why `T` is `()`, which comes from the default type parameter. It would be helpful to explain this, as it may not be immediately apparent.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67991/timeline", "performed_via_github_app": null, "state_reason": null}