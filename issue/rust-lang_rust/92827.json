{"url": "https://api.github.com/repos/rust-lang/rust/issues/92827", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92827/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92827/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92827/events", "html_url": "https://github.com/rust-lang/rust/issues/92827", "id": 1100848356, "node_id": "I_kwDOAAsO6M5BnZzk", "number": 92827, "title": "Tracking Issue for Associated Const Equality", "user": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 3537250192, "node_id": "LA_kwDOAAsO6M7S1ieQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-needs-summary", "name": "S-tracking-needs-summary", "color": "4682b4", "default": false, "description": "It's hard to tell what's been done and what hasn't! Someone should do some investigation."}, {"id": 4580535990, "node_id": "LA_kwDOAAsO6M8AAAABEQVutg", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-associated_const_equality", "name": "F-associated_const_equality", "color": "f9c0cc", "default": false, "description": "`#![feature(associated_const_equality)]`"}], "state": "open", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2022-01-12T22:26:17Z", "updated_at": "2023-03-21T07:09:15Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": "off-topic", "body": "This is a tracking issue for the feature Associated Const Equality brought up in #70256.\r\nThe feature gate for the issue is `#![feature(associated_const_equality)]`.\r\n\r\n### About tracking issues\r\n\r\nTracking issues are used to record the overall progress of implementation.\r\nThey are also used as hubs connecting to other relevant issues, e.g., bugs or open design questions.\r\nA tracking issue is however *not* meant for large scale discussion, questions, or bug reports about a feature.\r\nInstead, open a dedicated issue for the specific matter and add the relevant feature gate label.\r\n\r\n### Steps\r\n\r\n- [ ] Fully implement the feature\r\n  - [ ] Teach Chalk about terms (enum Ty or Const relating an associated type or const respectively)\r\n  - [ ] Remove all FIXME(associated_const_equality)\r\n- [ ] Adjust documentation ([see instructions on rustc-dev-guide][doc-guide])\r\n- [ ] Stabilization PR ([see instructions on rustc-dev-guide][stabilization-guide])\r\n\r\n[stabilization-guide]: https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#stabilization-pr\r\n[doc-guide]: https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#documentation-prs\r\n\r\n### Unresolved Questions\r\n<!--\r\nInclude any open questions that need to be answered before the feature can be\r\nstabilised.\r\n-->\r\n\r\nXXX --- list all the \"unresolved questions\" found in the RFC to ensure they are\r\nnot forgotten\r\n\r\n### Implementation history\r\n\r\n- Originally proposed in #70256 with support but no official RFC, but implementation delayed.\r\n- Initial effort to implement which includes parsing and use of `term` throughout the codebase in #87648, but still lacking a complete implementation.\r\n- More thorough implementation which works for basic cases in #93285. This allowed for consts to actually be bound, more than just parsing them.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92827/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92827/timeline", "performed_via_github_app": null, "state_reason": null}