{"url": "https://api.github.com/repos/rust-lang/rust/issues/71383", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71383/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71383/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71383/events", "html_url": "https://github.com/rust-lang/rust/issues/71383", "id": 603999186, "node_id": "MDU6SXNzdWU2MDM5OTkxODY=", "number": 71383, "title": "Vec::reserve should use alloc_excess", "user": {"login": "hsivonen", "id": 478856, "node_id": "MDQ6VXNlcjQ3ODg1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/478856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsivonen", "html_url": "https://github.com/hsivonen", "followers_url": "https://api.github.com/users/hsivonen/followers", "following_url": "https://api.github.com/users/hsivonen/following{/other_user}", "gists_url": "https://api.github.com/users/hsivonen/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsivonen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsivonen/subscriptions", "organizations_url": "https://api.github.com/users/hsivonen/orgs", "repos_url": "https://api.github.com/users/hsivonen/repos", "events_url": "https://api.github.com/users/hsivonen/events{/privacy}", "received_events_url": "https://api.github.com/users/hsivonen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 129836139, "node_id": "MDU6TGFiZWwxMjk4MzYxMzk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-allocators", "name": "A-allocators", "color": "f7e101", "default": false, "description": "Area: Custom and system allocators"}, {"id": 166999014, "node_id": "MDU6TGFiZWwxNjY5OTkwMTQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-collections", "name": "A-collections", "color": "f7e101", "default": false, "description": "Area: std::collections."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-21T13:29:20Z", "updated_at": "2020-04-21T14:57:19Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "When calling `reserve()` on a `Vec` whose capacity is zero, afterwards the `capacity()` method always returns the exact argument that was passed to `reserve()`. Even though the contract of `reserve()` allows `Vec` to make the capacity larger than requested, if the previous capacity is zero, `Vec` does not make use of this. When the underlying allocator is bucketed, rounding to the bucket size never wastes memory, so `Vec` should use [`alloc_excess`](https://doc.rust-lang.org/std/alloc/trait.Alloc.html#method.alloc_excess) to make the slop available to the user.\r\n\r\nUse case: We're going to write at least `best_case` items and at most `worst_case` items, such that `best_case < worst_case`, but we don't know how many items exactly. The common case can be expected to be _close_ to `best_case` but often at least one more. It would make sense to first allocate for `best_case` rounded up to allocator bucket size, then start writing, then if not everything fits, resize to `worst_case`, write the rest, and finally resize to the size actually written and `shrink_to_fit()`.\r\n\r\nThis would guarantee at most three allocations and in the common case one.\r\n\r\nThis issues comes up often with low-level string code.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71383/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71383/timeline", "performed_via_github_app": null, "state_reason": null}