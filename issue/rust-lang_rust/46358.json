{"url": "https://api.github.com/repos/rust-lang/rust/issues/46358", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46358/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46358/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46358/events", "html_url": "https://github.com/rust-lang/rust/issues/46358", "id": 277659827, "node_id": "MDU6SXNzdWUyNzc2NTk4Mjc=", "number": 46358, "title": "Program compiles even though a type cannot be inferred", "user": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-29T07:55:06Z", "updated_at": "2020-07-20T11:45:03Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The code below compiles, even though the type of the elements of the `Vec` is unknown.\r\n\r\n```rust\r\nuse std::mem;\r\nuse std::os::raw::c_void;\r\n\r\n#[no_mangle]\r\npub extern \"C\" fn alloc(size: usize) -> *mut c_void {\r\n    let mut buf = Vec::with_capacity(size);\r\n    let ptr = buf.as_mut_ptr();\r\n    mem::forget(buf);\r\n    return ptr as *mut c_void;\r\n}\r\n\r\nfn main() { }\r\n```\r\n\r\nSomehow, Rust is picking a type and compiling anyway. It is unclear to me which type that may be and whether this behavior is specified somewhere. The type could be anything, from `()` to `String` or something else. You can test this by adding a type annotation to the declaration of `buf`. The code compiles regardless of the type you choose.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46358/timeline", "performed_via_github_app": null, "state_reason": null}