{"url": "https://api.github.com/repos/rust-lang/rust/issues/24882", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/24882/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/24882/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/24882/events", "html_url": "https://github.com/rust-lang/rust/issues/24882", "id": 71467975, "node_id": "MDU6SXNzdWU3MTQ2Nzk3NQ==", "number": 24882, "title": "std::path::Path::starts_with documentation unclear", "user": {"login": "0X1A", "id": 2829967, "node_id": "MDQ6VXNlcjI4Mjk5Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/2829967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0X1A", "html_url": "https://github.com/0X1A", "followers_url": "https://api.github.com/users/0X1A/followers", "following_url": "https://api.github.com/users/0X1A/following{/other_user}", "gists_url": "https://api.github.com/users/0X1A/gists{/gist_id}", "starred_url": "https://api.github.com/users/0X1A/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0X1A/subscriptions", "organizations_url": "https://api.github.com/users/0X1A/orgs", "repos_url": "https://api.github.com/users/0X1A/repos", "events_url": "https://api.github.com/users/0X1A/events{/privacy}", "received_events_url": "https://api.github.com/users/0X1A/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-04-28T03:33:37Z", "updated_at": "2015-05-11T16:20:48Z", "closed_at": "2015-05-11T16:20:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [current documentation](https://doc.rust-lang.org/std/path/struct.Path.html#method.starts_with) for `std::path::Path::starts_with` does not specify that it uses components as `base`. For example as described in the current documentation I expected to be able to use characters as `base` to find hidden files/directories as such:\n\n``` Rust\nfn is_dot(dir: &PathBuf) -> bool {\n    if dir.starts_with(\".\") {\n        return true;\n    } else {\n        return false\n    }\n}\n\nfn main() {\n    let path = PathBuf::from(\"/home/user/.dotfile\");\n    let rel_path = path.relative_from(\"/home/user\").unwrap();\n    println!(\"{}\", path.display());\n    println!(\"{}\", rel_path.display());\n    if is_dot(&PathBuf::from(rel_path)) {\n        println!(\"{} is dot\", rel_path.display());\n    }\n}\n```\n\nAs described in the documentation I expected `is_dot(&PathBuf::from(rel_path))` to be evaluated as true when it does not\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/24882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/24882/timeline", "performed_via_github_app": null, "state_reason": "completed"}