{"url": "https://api.github.com/repos/rust-lang/rust/issues/36667", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/36667/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/36667/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/36667/events", "html_url": "https://github.com/rust-lang/rust/issues/36667", "id": 178790783, "node_id": "MDU6SXNzdWUxNzg3OTA3ODM=", "number": 36667, "title": "Trait object coercion has problems with contravariant structs and lifetime bounds", "user": {"login": "amluto", "id": 202764, "node_id": "MDQ6VXNlcjIwMjc2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/202764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amluto", "html_url": "https://github.com/amluto", "followers_url": "https://api.github.com/users/amluto/followers", "following_url": "https://api.github.com/users/amluto/following{/other_user}", "gists_url": "https://api.github.com/users/amluto/gists{/gist_id}", "starred_url": "https://api.github.com/users/amluto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amluto/subscriptions", "organizations_url": "https://api.github.com/users/amluto/orgs", "repos_url": "https://api.github.com/users/amluto/repos", "events_url": "https://api.github.com/users/amluto/events{/privacy}", "received_events_url": "https://api.github.com/users/amluto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-23T05:50:53Z", "updated_at": "2017-07-26T15:50:36Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I would expect this code to compile:\n\n``` rust\n#![allow(dead_code)]\n#![allow(unused_variables)]\n\nstruct Covariant<'a> { y: &'a i32 }\nstruct Contravariant<'a> { y: fn(&'a i32) }\n\ntrait HasLifetime<'a> : 'a {}\nimpl<'a, T> HasLifetime<'a> for T where T: 'a {}\n\nfn check_lifetime_bound<'a, T: 'a>(x: &T) {}\n\nfn check_contra_rightway<'a>(x: Contravariant<'a>) {\n    let xref = &x;\n    let xstatic: &Contravariant<'static> = &x;\n    check_lifetime_bound::<'a>(&x);\n    check_lifetime_bound::<'a>(xref);\n    check_lifetime_bound::<'a>(xstatic);\n    check_lifetime_bound::<'static>(&x);  // <-- this works, but...\n    check_lifetime_bound::<'static>(xref);\n    check_lifetime_bound::<'static>(xstatic);\n\n    let a: &HasLifetime<'static> = &x;  // <-- this doesn't (BUG!)\n\n    let a: &HasLifetime<'static> = xstatic;  // <-- nonetheless, this does work\n\n    // NB: Substituting Any for HasLifetime<'static> produces identical\n    // results.\n}\n\nfn check_co_wrongway<'a>(x: Covariant<'a>) {\n    let xref = &x;\n    // let xstatic: &Covariant<'static> = &x;  <-- correctly fails\n    check_lifetime_bound::<'a>(&x);\n    check_lifetime_bound::<'a>(xref);\n    // check_lifetime_bound::<'static>(&x);  <-- correctly fails\n    // check_lifetime_bound::<'static>(xref); <-- correctly fails\n\n    let a: &HasLifetime<'a> = &x;\n}\n\nfn check_co_rightway<'a>(x: Covariant<'static>, _: &'a i32) {\n    let xref = &x;\n    let xa: &Covariant<'a> = &x;\n    check_lifetime_bound::<'a>(&x);\n    check_lifetime_bound::<'a>(xref);\n    check_lifetime_bound::<'a>(xa);\n    check_lifetime_bound::<'static>(&x);\n    check_lifetime_bound::<'static>(xref);\n    // check_lifetime_bound::<'static>(xa);  <-- this correctly fails\n    let a: &HasLifetime<'a> = &x;\n    let a: &HasLifetime<'a> = xref;\n    let a: &HasLifetime<'a> = xa;\n\n    // let bad: &HasLifetime<'static> = xa;  <-- correctly fails\n}\n\nfn main() {}\n```\n\nUsing `rustc 1.11.0 (9b21dcd6a 2016-08-15)`, I get:\n\n```\nref_life.rs:22:36: 22:38 error: the type `Contravariant<'a>` does not fulfill the required lifetime [E0477]\nref_life.rs:22     let a: &HasLifetime<'static> = &x;  // <-- this doesn't (BUG!)\n                                                  ^~\nref_life.rs:22:36: 22:38 note: type must outlive the static lifetime\nref_life.rs:22:36: 22:38 error: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements [E0495]\nref_life.rs:22     let a: &HasLifetime<'static> = &x;  // <-- this doesn't (BUG!)\n                                                  ^~\nref_life.rs:12:52: 28:2 note: first, the lifetime cannot outlive the lifetime 'a as defined on the block at 12:51...\nref_life.rs:12 fn check_contra_rightway<'a>(x: Contravariant<'a>) {\n                                                                  ^\nref_life.rs:22:36: 22:38 note: ...so that the type `Contravariant<'a>` will meet its required lifetime bounds\nref_life.rs:22     let a: &HasLifetime<'static> = &x;  // <-- this doesn't (BUG!)\n                                                  ^~\nref_life.rs:22:36: 22:38 note: but, the lifetime must be valid for the static lifetime...\nref_life.rs:22:36: 22:38 note: ...so that trait type parameters matches those specified on the impl (expected HasLifetime<'static>, found HasLifetime<'_>)\nref_life.rs:22     let a: &HasLifetime<'static> = &x;  // <-- this doesn't (BUG!)\n                                                  ^~\nerror: aborting due to 2 previous errors\n```\n\nIt seems that the rustc can match a covariant struct against a shorter lifetime bound when coercing to a trait object but that it can't match a contravariant struct against a longer timetime bound when coercing to a trait object, depite the fact that coercing directly works fine.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/36667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/36667/timeline", "performed_via_github_app": null, "state_reason": null}