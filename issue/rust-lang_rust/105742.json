{"url": "https://api.github.com/repos/rust-lang/rust/issues/105742", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105742/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105742/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105742/events", "html_url": "https://github.com/rust-lang/rust/issues/105742", "id": 1498103237, "node_id": "I_kwDOAAsO6M5ZSz3F", "number": 105742, "title": "ICE: rustdoc: -Znormalize-docs", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 4917540716, "node_id": "LA_kwDOAAsO6M8AAAABJRu3bA", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-normalize-docs", "name": "F-normalize-docs", "color": "f9c0cc", "default": false, "description": "-Z normalize-docs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-12-15T09:37:33Z", "updated_at": "2023-01-03T04:54:00Z", "closed_at": "2023-01-03T04:54:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nuse std::ops::Index;\r\n\r\nfn next<'a, T>(s: &'a mut dyn SVec<Item = T, Output = T>) {\r\n    let _ = s;\r\n}\r\n\r\ntrait SVec: Index<<Self as SVec>::Item, Output = <Index<<Self as SVec>::Item, Output = <Self as SVec>::Item> as SVec>::Item> {\r\n    type Item<'a, T>;\r\n\r\n    fn len(&self) -> <Self as SVec>::Item;\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustdoc 1.68.0-nightly (b70baa4f9 2022-12-14)\r\nbinary: rustdoc\r\ncommit-hash: unknown\r\ncommit-date: unknown\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.68.0-nightly\r\nLLVM version: 15.0.6\r\n```\r\n\r\n### Error output\r\n`rustdoc -Znormalize-docs <file>`\r\n```\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:13:35\r\n   |\r\n13 | trait SVec: Index<<Self as SVec>::Item, Output = <Index<<Self as SVec>::Item, Output = <Self as SVec>::Item> as SVec>::Item> {\r\n   |                                   ^^^^ expected 1 lifetime argument\r\n   |\r\nnote: associated type defined here, with 1 lifetime parameter: `'a`\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:14:10\r\n   |\r\n14 |     type Item<'a, T>;\r\n   |          ^^^^ --\r\nhelp: add missing lifetime argument\r\n   |\r\n13 | trait SVec: Index<<Self as SVec>::Item<'a>, Output = <Index<<Self as SVec>::Item, Output = <Self as SVec>::Item> as SVec>::Item> {\r\n   |                                   ~~~~~~~~\r\n\r\nerror[E0107]: missing generics for associated type `SVec::Item`\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:13:35\r\n   |\r\n13 | trait SVec: Index<<Self as SVec>::Item, Output = <Index<<Self as SVec>::Item, Output = <Self as SVec>::Item> as SVec>::Item> {\r\n   |                                   ^^^^ expected 1 generic argument\r\n   |\r\nnote: associated type defined here, with 1 generic parameter: `T`\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:14:10\r\n   |\r\n14 |     type Item<'a, T>;\r\n   |          ^^^^     -\r\nhelp: add missing generic argument\r\n   |\r\n13 | trait SVec: Index<<Self as SVec>::Item<T>, Output = <Index<<Self as SVec>::Item, Output = <Self as SVec>::Item> as SVec>::Item> {\r\n   |                                   ~~~~~~~\r\n\r\nerror[E0107]: missing generics for associated type `SVec::Item`\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:13:73\r\n   |\r\n13 | trait SVec: Index<<Self as SVec>::Item, Output = <Index<<Self as SVec>::Item, Output = <Self as SVec>::Item> as SVec>::Item> {\r\n   |                                                                         ^^^^ expected 1 lifetime argument\r\n   |\r\nnote: associated type defined here, with 1 lifetime parameter: `'a`\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:14:10\r\n   |\r\n14 |     type Item<'a, T>;\r\n   |          ^^^^ --\r\nhelp: add missing lifetime argument\r\n   |\r\n13 | trait SVec: Index<<Self as SVec>::Item, Output = <Index<<Self as SVec>::Item<'a>, Output = <Self as SVec>::Item> as SVec>::Item> {\r\n   |                                                                         ~~~~~~~~\r\n\r\nerror[E0107]: missing generics for associated type `SVec::Item`\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:13:73\r\n   |\r\n13 | trait SVec: Index<<Self as SVec>::Item, Output = <Index<<Self as SVec>::Item, Output = <Self as SVec>::Item> as SVec>::Item> {\r\n   |                                                                         ^^^^ expected 1 generic argument\r\n   |\r\nnote: associated type defined here, with 1 generic parameter: `T`\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:14:10\r\n   |\r\n14 |     type Item<'a, T>;\r\n   |          ^^^^     -\r\nhelp: add missing generic argument\r\n   |\r\n13 | trait SVec: Index<<Self as SVec>::Item, Output = <Index<<Self as SVec>::Item<T>, Output = <Self as SVec>::Item> as SVec>::Item> {\r\n   |                                                                         ~~~~~~~\r\n\r\nerror[E0107]: missing generics for associated type `SVec::Item`\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:13:104\r\n   |\r\n13 | trait SVec: Index<<Self as SVec>::Item, Output = <Index<<Self as SVec>::Item, Output = <Self as SVec>::Item> as SVec>::Item> {\r\n   |                                                                                                        ^^^^ expected 1 lifetime argument\r\n   |\r\nnote: associated type defined here, with 1 lifetime parameter: `'a`\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:14:10\r\n   |\r\n14 |     type Item<'a, T>;\r\n   |          ^^^^ --\r\nhelp: add missing lifetime argument\r\n   |\r\n13 | trait SVec: Index<<Self as SVec>::Item, Output = <Index<<Self as SVec>::Item, Output = <Self as SVec>::Item<'a>> as SVec>::Item> {\r\n   |                                                                                                        ~~~~~~~~\r\n\r\nerror[E0107]: missing generics for associated type `SVec::Item`\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:13:104\r\n   |\r\n13 | trait SVec: Index<<Self as SVec>::Item, Output = <Index<<Self as SVec>::Item, Output = <Self as SVec>::Item> as SVec>::Item> {\r\n   |                                                                                                        ^^^^ expected 1 generic argument\r\n   |\r\nnote: associated type defined here, with 1 generic parameter: `T`\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:14:10\r\n   |\r\n14 |     type Item<'a, T>;\r\n   |          ^^^^     -\r\nhelp: add missing generic argument\r\n   |\r\n13 | trait SVec: Index<<Self as SVec>::Item, Output = <Index<<Self as SVec>::Item, Output = <Self as SVec>::Item<T>> as SVec>::Item> {\r\n   |                                                                                                        ~~~~~~~\r\n\r\nerror[E0107]: missing generics for associated type `SVec::Item`\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:13:120\r\n   |\r\n13 | trait SVec: Index<<Self as SVec>::Item, Output = <Index<<Self as SVec>::Item, Output = <Self as SVec>::Item> as SVec>::Item> {\r\n   |                                                                                                                        ^^^^ expected 1 lifetime argument\r\n   |\r\nnote: associated type defined here, with 1 lifetime parameter: `'a`\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:14:10\r\n   |\r\n14 |     type Item<'a, T>;\r\n   |          ^^^^ --\r\nhelp: add missing lifetime argument\r\n   |\r\n13 | trait SVec: Index<<Self as SVec>::Item, Output = <Index<<Self as SVec>::Item, Output = <Self as SVec>::Item> as SVec>::Item<'a>> {\r\n   |                                                                                                                        ~~~~~~~~\r\n\r\nerror[E0107]: missing generics for associated type `SVec::Item`\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:13:120\r\n   |\r\n13 | trait SVec: Index<<Self as SVec>::Item, Output = <Index<<Self as SVec>::Item, Output = <Self as SVec>::Item> as SVec>::Item> {\r\n   |                                                                                                                        ^^^^ expected 1 generic argument\r\n   |\r\nnote: associated type defined here, with 1 generic parameter: `T`\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:14:10\r\n   |\r\n14 |     type Item<'a, T>;\r\n   |          ^^^^     -\r\nhelp: add missing generic argument\r\n   |\r\n13 | trait SVec: Index<<Self as SVec>::Item, Output = <Index<<Self as SVec>::Item, Output = <Self as SVec>::Item> as SVec>::Item<T>> {\r\n   |                                                                                                                        ~~~~~~~\r\n\r\nerror[E0107]: missing generics for associated type `SVec::Item`\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:16:38\r\n   |\r\n16 |     fn len(&self) -> <Self as SVec>::Item;\r\n   |                                      ^^^^ expected 1 lifetime argument\r\n   |\r\nnote: associated type defined here, with 1 lifetime parameter: `'a`\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:14:10\r\n   |\r\n14 |     type Item<'a, T>;\r\n   |          ^^^^ --\r\nhelp: add missing lifetime argument\r\n   |\r\n16 |     fn len(&self) -> <Self as SVec>::Item<'_>;\r\n   |                                      ~~~~~~~~\r\n\r\nerror[E0107]: missing generics for associated type `SVec::Item`\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:16:38\r\n   |\r\n16 |     fn len(&self) -> <Self as SVec>::Item;\r\n   |                                      ^^^^ expected 1 generic argument\r\n   |\r\nnote: associated type defined here, with 1 generic parameter: `T`\r\n  --> ./ab56d8d51ecb5f8e40a09324749c855b37ee387e.rs:14:10\r\n   |\r\n14 |     type Item<'a, T>;\r\n   |          ^^^^     -\r\nhelp: add missing generic argument\r\n   |\r\n16 |     fn len(&self) -> <Self as SVec>::Item<T>;\r\n   |                                      ~~~~~~~\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Error', src/librustdoc/clean/mod.rs:1856:25\r\nstack backtrace:\r\n   0:     0x7f2b3af657da - std::backtrace_rs::backtrace::libunwind::trace::h58c649c53097142b\r\n                               at /rustc/b70baa4f922a1809d79caeaeb902800c3be283b9/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7f2b3af657da - std::backtrace_rs::backtrace::trace_unsynchronized::h8a2218341115550a\r\n                               at /rustc/b70baa4f922a1809d79caeaeb902800c3be283b9/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f2b3af657da - std::sys_common::backtrace::_print_fmt::hea4b2f7f6d570ca4\r\n                               at /rustc/b70baa4f922a1809d79caeaeb902800c3be283b9/library/std/src/sys_common/backtrace.rs:65:5\r\n   3:     0x7f2b3af657da - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h8d8d34f4e85c6a60\r\n                               at /rustc/b70baa4f922a1809d79caeaeb902800c3be283b9/library/std/src/sys_common/backtrace.rs:44:22\r\n   4:     0x7f2b3afc82ee - core::fmt::write::haf2065fc0d3659f4\r\n                               at /rustc/b70baa4f922a1809d79caeaeb902800c3be283b9/library/core/src/fmt/mod.rs:1208:17\r\n   5:     0x7f2b3af55b65 - std::io::Write::write_fmt::h6dce18c304ee54a2\r\n                               at /rustc/b70baa4f922a1809d79caeaeb902800c3be283b9/library/std/src/io/mod.rs:1682:15\r\n   6:     0x7f2b3af655a5 - std::sys_common::backtrace::_print::hec602170f4d3e048\r\n                               at /rustc/b70baa4f922a1809d79caeaeb902800c3be283b9/library/std/src/sys_common/backtrace.rs:47:5\r\n   7:     0x7f2b3af655a5 - std::sys_common::backtrace::print::h8aa4a47604c83c88\r\n                               at /rustc/b70baa4f922a1809d79caeaeb902800c3be283b9/library/std/src/sys_common/backtrace.rs:34:9\r\n   8:     0x7f2b3af682ef - std::panicking::default_hook::{{closure}}::h68a2f001ac3644c4\r\n                               at /rustc/b70baa4f922a1809d79caeaeb902800c3be283b9/library/std/src/panicking.rs:267:22\r\n   9:     0x7f2b3af6802b - std::panicking::default_hook::h4861c4cf633cd613\r\n                               at /rustc/b70baa4f922a1809d79caeaeb902800c3be283b9/library/std/src/panicking.rs:286:9\r\n  10:     0x7f2b3af68b0c - std::panicking::rust_panic_with_hook::h404216ffd42d1a9f\r\n                               at /rustc/b70baa4f922a1809d79caeaeb902800c3be283b9/library/std/src/panicking.rs:688:13\r\n  11:     0x7f2b3af68862 - std::panicking::begin_panic_handler::{{closure}}::hbfc6e95ed3b74164\r\n                               at /rustc/b70baa4f922a1809d79caeaeb902800c3be283b9/library/std/src/panicking.rs:577:13\r\n  12:     0x7f2b3af65c8c - std::sys_common::backtrace::__rust_end_short_backtrace::h6c2b4fdde46f911c\r\n                               at /rustc/b70baa4f922a1809d79caeaeb902800c3be283b9/library/std/src/sys_common/backtrace.rs:137:18\r\n  13:     0x7f2b3af685b2 - rust_begin_unwind\r\n                               at /rustc/b70baa4f922a1809d79caeaeb902800c3be283b9/library/std/src/panicking.rs:575:5\r\n  14:     0x7f2b3afc4cd3 - core::panicking::panic_fmt::h52720972d063b41a\r\n                               at /rustc/b70baa4f922a1809d79caeaeb902800c3be283b9/library/core/src/panicking.rs:64:14\r\n  15:     0x55f3756375ff - rustdoc[f79df397caf8daff]::clean::clean_middle_ty\r\n  16:     0x55f37561307c - rustdoc[f79df397caf8daff]::clean::clean_ty\r\n  17:     0x55f375318cf0 - rustdoc[f79df397caf8daff]::clean::utils::enter_impl_trait::<rustdoc[f79df397caf8daff]::clean::clean_function::{closure#0}, (rustdoc[f79df397caf8daff]::clean::types::Generics, rustdoc[f79df397caf8daff]::clean::types::FnDecl)>\r\n  18:     0x55f3755360f0 - <rustdoc[f79df397caf8daff]::core::DocContext>::with_param_env::<rustdoc[f79df397caf8daff]::clean::types::Item, rustdoc[f79df397caf8daff]::clean::clean_trait_item::{closure#0}>\r\n  19:     0x55f375411085 - <alloc[51c757b3bc4bb1d4]::vec::Vec<rustdoc[f79df397caf8daff]::clean::types::Item> as alloc[51c757b3bc4bb1d4]::vec::spec_from_iter::SpecFromIter<rustdoc[f79df397caf8daff]::clean::types::Item, core[a183604df3a39924]::iter::adapters::map::Map<core[a183604df3a39924]::slice::iter::Iter<rustc_hir[23c7b9dd50e700e0]::hir::TraitItemRef>, rustdoc[f79df397caf8daff]::clean::clean_maybe_renamed_item::{closure#1}::{closure#5}>>>::from_iter\r\n  20:     0x55f37553448d - <rustdoc[f79df397caf8daff]::core::DocContext>::with_param_env::<alloc[51c757b3bc4bb1d4]::vec::Vec<rustdoc[f79df397caf8daff]::clean::types::Item>, rustdoc[f79df397caf8daff]::clean::clean_maybe_renamed_item::{closure#1}>\r\n  21:     0x55f3756005cc - <&mut rustdoc[f79df397caf8daff]::clean::clean_doc_module::{closure#2} as core[a183604df3a39924]::ops::function::FnOnce<(&(&rustc_hir[23c7b9dd50e700e0]::hir::Item, core[a183604df3a39924]::option::Option<rustc_span[8d98255f5ee7a7e8]::symbol::Symbol>, core[a183604df3a39924]::option::Option<rustc_hir[23c7b9dd50e700e0]::hir_id::HirId>),)>>::call_once\r\n  22:     0x55f3754039d4 - <alloc[51c757b3bc4bb1d4]::vec::Vec<rustdoc[f79df397caf8daff]::clean::types::Item> as alloc[51c757b3bc4bb1d4]::vec::spec_extend::SpecExtend<rustdoc[f79df397caf8daff]::clean::types::Item, core[a183604df3a39924]::iter::adapters::flatten::FlatMap<core[a183604df3a39924]::slice::iter::Iter<(&rustc_hir[23c7b9dd50e700e0]::hir::Item, core[a183604df3a39924]::option::Option<rustc_span[8d98255f5ee7a7e8]::symbol::Symbol>, core[a183604df3a39924]::option::Option<rustc_hir[23c7b9dd50e700e0]::hir_id::HirId>)>, alloc[51c757b3bc4bb1d4]::vec::Vec<rustdoc[f79df397caf8daff]::clean::types::Item>, rustdoc[f79df397caf8daff]::clean::clean_doc_module::{closure#2}>>>::spec_extend\r\n  23:     0x55f3756073c2 - rustdoc[f79df397caf8daff]::clean::clean_doc_module\r\n  24:     0x55f375314dc1 - rustdoc[f79df397caf8daff]::clean::utils::krate\r\n  25:     0x55f3754c74d4 - <rustc_session[f809e505f670defe]::session::Session>::time::<rustdoc[f79df397caf8daff]::clean::types::Crate, rustdoc[f79df397caf8daff]::core::run_global_ctxt::{closure#4}>\r\n  26:     0x55f375539547 - rustdoc[f79df397caf8daff]::core::run_global_ctxt\r\n  27:     0x55f3754c8954 - <rustc_interface[59cd32f5a8db8a5b]::passes::QueryContext>::enter::<rustdoc[f79df397caf8daff]::main_args::{closure#1}::{closure#0}::{closure#1}, core[a183604df3a39924]::result::Result<(), rustc_errors[646af11ffc335ad2]::ErrorGuaranteed>>\r\n  28:     0x55f3753895fa - <rustc_interface[59cd32f5a8db8a5b]::interface::Compiler>::enter::<rustdoc[f79df397caf8daff]::main_args::{closure#1}::{closure#0}, core[a183604df3a39924]::result::Result<(), rustc_errors[646af11ffc335ad2]::ErrorGuaranteed>>\r\n  29:     0x55f375460b3a - rustc_span[8d98255f5ee7a7e8]::with_source_map::<core[a183604df3a39924]::result::Result<(), rustc_errors[646af11ffc335ad2]::ErrorGuaranteed>, rustc_interface[59cd32f5a8db8a5b]::interface::run_compiler<core[a183604df3a39924]::result::Result<(), rustc_errors[646af11ffc335ad2]::ErrorGuaranteed>, rustdoc[f79df397caf8daff]::main_args::{closure#1}>::{closure#0}::{closure#0}>\r\n  30:     0x55f3752ef795 - <scoped_tls[d2f689311b6a895]::ScopedKey<rustc_span[8d98255f5ee7a7e8]::SessionGlobals>>::set::<rustc_interface[59cd32f5a8db8a5b]::interface::run_compiler<core[a183604df3a39924]::result::Result<(), rustc_errors[646af11ffc335ad2]::ErrorGuaranteed>, rustdoc[f79df397caf8daff]::main_args::{closure#1}>::{closure#0}, core[a183604df3a39924]::result::Result<(), rustc_errors[646af11ffc335ad2]::ErrorGuaranteed>>\r\n  31:     0x55f3754738a0 - std[f8e68897caeb81ab]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[59cd32f5a8db8a5b]::util::run_in_thread_pool_with_globals<rustc_interface[59cd32f5a8db8a5b]::interface::run_compiler<core[a183604df3a39924]::result::Result<(), rustc_errors[646af11ffc335ad2]::ErrorGuaranteed>, rustdoc[f79df397caf8daff]::main_args::{closure#1}>::{closure#0}, core[a183604df3a39924]::result::Result<(), rustc_errors[646af11ffc335ad2]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[a183604df3a39924]::result::Result<(), rustc_errors[646af11ffc335ad2]::ErrorGuaranteed>>\r\n  32:     0x55f3755fd02f - <<std[f8e68897caeb81ab]::thread::Builder>::spawn_unchecked_<rustc_interface[59cd32f5a8db8a5b]::util::run_in_thread_pool_with_globals<rustc_interface[59cd32f5a8db8a5b]::interface::run_compiler<core[a183604df3a39924]::result::Result<(), rustc_errors[646af11ffc335ad2]::ErrorGuaranteed>, rustdoc[f79df397caf8daff]::main_args::{closure#1}>::{closure#0}, core[a183604df3a39924]::result::Result<(), rustc_errors[646af11ffc335ad2]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[a183604df3a39924]::result::Result<(), rustc_errors[646af11ffc335ad2]::ErrorGuaranteed>>::{closure#1} as core[a183604df3a39924]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  33:     0x7f2b3af72903 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hefb6b2db81441f4e\r\n                               at /rustc/b70baa4f922a1809d79caeaeb902800c3be283b9/library/alloc/src/boxed.rs:2000:9\r\n  34:     0x7f2b3af72903 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h27d69019d3964068\r\n                               at /rustc/b70baa4f922a1809d79caeaeb902800c3be283b9/library/alloc/src/boxed.rs:2000:9\r\n  35:     0x7f2b3af72903 - std::sys::unix::thread::Thread::new::thread_start::hed02738834385cbc\r\n                               at /rustc/b70baa4f922a1809d79caeaeb902800c3be283b9/library/std/src/sys/unix/thread.rs:108:17\r\n  36:     0x7f2b3ad058fd - <unknown>\r\n  37:     0x7f2b3ad87a60 - <unknown>\r\n  38:                0x0 - <unknown>\r\nerror: aborting due to 10 previous errors\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105742/timeline", "performed_via_github_app": null, "state_reason": "completed"}