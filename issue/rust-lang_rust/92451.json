{"url": "https://api.github.com/repos/rust-lang/rust/issues/92451", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92451/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92451/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92451/events", "html_url": "https://github.com/rust-lang/rust/issues/92451", "id": 1091365467, "node_id": "I_kwDOAAsO6M5BDOpb", "number": 92451, "title": "confusing warnings when the arguments to matches!() are backwards", "user": {"login": "oconnor663", "id": 860932, "node_id": "MDQ6VXNlcjg2MDkzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/860932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oconnor663", "html_url": "https://github.com/oconnor663", "followers_url": "https://api.github.com/users/oconnor663/followers", "following_url": "https://api.github.com/users/oconnor663/following{/other_user}", "gists_url": "https://api.github.com/users/oconnor663/gists{/gist_id}", "starred_url": "https://api.github.com/users/oconnor663/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oconnor663/subscriptions", "organizations_url": "https://api.github.com/users/oconnor663/orgs", "repos_url": "https://api.github.com/users/oconnor663/repos", "events_url": "https://api.github.com/users/oconnor663/events{/privacy}", "received_events_url": "https://api.github.com/users/oconnor663/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-12-31T01:04:21Z", "updated_at": "2021-12-31T01:10:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here's a minimized example of a mistake I made today ([playgrond link](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=74953874e096705cd0213487de68b86c)):\r\n\r\n```rust\r\nfn main() {\r\n    let x = Some(false);\r\n    let y = matches!(Some(true), x);\r\n    dbg!(y);\r\n}\r\n```\r\n\r\nThe intent there is for the match to fail, so `y` should be false. However, `y` is true! The issue is that I've screwed up the argument order for `matches!()`; it's supposed to be expression+pattern, and I've written pattern+expression. Unfortunately, my pattern is a valid expression, and my expression is a valid pattern (a trivial pattern that matches anything).\r\n\r\nHere are the warnings rustc 1.57.0 emits for this code:\r\n\r\n```\r\nwarning: unused variable: `x`\r\n --> src/main.rs:2:9\r\n  |\r\n2 |     let x = Some(false);\r\n  |         ^ help: if this is intentional, prefix it with an underscore: `_x`\r\n  |\r\n  = note: `#[warn(unused_variables)]` on by default\r\n\r\nwarning: unused variable: `x`\r\n --> src/main.rs:3:34\r\n  |\r\n3 |     let y = matches!(Some(true), x);\r\n  |                                  ^ help: if this is intentional, prefix it with an underscore: `_x`\r\n```\r\n\r\nThat's pretty confusing, because it sure _looks_ like `x` is being used. Maybe this would be a good candidate for a special case warning, sort of like the special case \"pattern binding ___ is named the same as one of the variants of the type ___\" warning that was recently added for the common \"forgot to scope my enum variants\" mistake in `match` statements. In this case with `matches!`, we might want a warning anytime a binding is created without an attached `if` clause? And maybe similarly a warning anytime the pattern is trivial?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92451/timeline", "performed_via_github_app": null, "state_reason": null}