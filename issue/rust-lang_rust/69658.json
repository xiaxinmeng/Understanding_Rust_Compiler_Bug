{"url": "https://api.github.com/repos/rust-lang/rust/issues/69658", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69658/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69658/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69658/events", "html_url": "https://github.com/rust-lang/rust/issues/69658", "id": 574380354, "node_id": "MDU6SXNzdWU1NzQzODAzNTQ=", "number": 69658, "title": "Improve diagnostics when a type does not impl a trait despite #[derive]'ing it", "user": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-03-03T02:51:09Z", "updated_at": "2022-12-28T21:06:45Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\n_Originally posted by @simonbuchan in https://github.com/rust-lang/rust/issues/26925#issuecomment-593708712_\r\n\r\nI think I would be a lot happier with the current situation with \"just\" adding more information to the compiler diagnostic.\r\n\r\nAt the moment, you get something like:\r\n```\r\nerror[E0599]: no method named `clone` found for type `Ptr<Foo>` in the current scope\r\n --> src/main.rs:9:15\r\n  |\r\n2 | struct Ptr<T>(*mut T);\r\n  | ---------------------- method `clone` not found for this\r\n...\r\n9 |     let b = a.clone();\r\n  |               ^^^^^ method not found in `Ptr<Foo>`\r\n  |\r\n  = note: the method `clone` exists but the following trait bounds were not satisfied:\r\n          `Ptr<Foo> : std::clone::Clone`\r\n  = help: items from traits can only be used if the trait is implemented and in scope\r\n  = note: the following trait defines an item `clone`, perhaps you need to implement it:\r\n          candidate #1: `std::clone::Clone`\r\n```\r\n\r\nor\r\n\r\n```\r\nerror[E0382]: use of moved value: `a`\r\n  --> src/main.rs:10:15\r\n   |\r\n8  |     let a = Ptr(&mut foo);\r\n   |         - move occurs because `a` has type `Ptr<Foo>`, which does not implement the `Copy` trait\r\n9  |     let b = a;\r\n   |             - value moved here\r\n10 |     let ptr = a.0;\r\n   |               ^^^ value used here after move\r\n```\r\n\r\nNeither of these tell you that the *reason* `Ptr` doesn't implement `Copy` or `Clone`, despite `#[derive(Copy, Clone)]` being right there. I think some logic to add another sentence for this would get rid of the case where `derive` doesn't implement when it should, which I think newer users (like me!) would be more likely to hit.", "closed_by": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69658/reactions", "total_count": 3, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 3, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69658/timeline", "performed_via_github_app": null, "state_reason": null}