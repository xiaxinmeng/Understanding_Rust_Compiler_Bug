{"url": "https://api.github.com/repos/rust-lang/rust/issues/82032", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82032/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82032/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82032/events", "html_url": "https://github.com/rust-lang/rust/issues/82032", "id": 807287076, "node_id": "MDU6SXNzdWU4MDcyODcwNzY=", "number": 82032, "title": "Panic in nightly rustc when compiling code that tries to borrow *v as mutable behind & reference", "user": {"login": "KerfuffleV2", "id": 44031344, "node_id": "MDQ6VXNlcjQ0MDMxMzQ0", "avatar_url": "https://avatars.githubusercontent.com/u/44031344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KerfuffleV2", "html_url": "https://github.com/KerfuffleV2", "followers_url": "https://api.github.com/users/KerfuffleV2/followers", "following_url": "https://api.github.com/users/KerfuffleV2/following{/other_user}", "gists_url": "https://api.github.com/users/KerfuffleV2/gists{/gist_id}", "starred_url": "https://api.github.com/users/KerfuffleV2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KerfuffleV2/subscriptions", "organizations_url": "https://api.github.com/users/KerfuffleV2/orgs", "repos_url": "https://api.github.com/users/KerfuffleV2/repos", "events_url": "https://api.github.com/users/KerfuffleV2/events{/privacy}", "received_events_url": "https://api.github.com/users/KerfuffleV2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2021-02-12T14:37:47Z", "updated_at": "2021-02-28T15:51:55Z", "closed_at": "2021-02-15T01:16:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nuse std::collections::HashMap;\r\nuse async_std::{fs, io, prelude::*};\r\n\r\ntype Handle = io::BufWriter<fs::File>;\r\nstruct Thing(HashMap<String, Handle>);\r\n\r\nimpl Thing {\r\n    pub async fn die_horribly(&mut self) {\r\n        for v in self.0.values() {\r\n            v.flush().await;\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    println!(\"Hello, world!\");\r\n}\r\n\r\n```\r\n\r\n#### Dependencies from Cargo.toml\r\n```toml\r\n[dependencies]\r\nasync-std = \"1.9.0\"\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.52.0-nightly (e9920ef77 2021-02-11)\r\nbinary: rustc\r\ncommit-hash: e9920ef7749d11fc71cc32ca4ba055bcfeaab945\r\ncommit-date: 2021-02-11\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.52.0-nightly\r\nLLVM version: 11.0.1\r\n```\r\n\r\nThe internal compiler error does not occur in stable (`rustc 1.50.0 (cb75ad5db 2021-02-10)`):\r\n\r\n```\r\n% cargo build\r\n   Compiling rusterr v0.1.0 (/home/user/devel/rusterr)\r\nerror[E0596]: cannot borrow `*v` as mutable, as it is behind a `&` reference\r\n  --> src/main.rs:10:13\r\n   |\r\n9  |         for v in self.0.values() {\r\n   |                  --------------- this iterator yields `&` references\r\n10 |             v.flush().await;\r\n   |             ^ `v` is a `&` reference, so the data it refers to cannot be borrowed as mutable\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0596`.\r\nerror: could not compile `rusterr`\r\n```\r\n\r\nThe fix for compilation is to use `values_mut()` instead of `values()` and this also prevents the panic in the nightly version of rustc. \r\n\r\n### Error output\r\n\r\n```\r\n% cargo build\r\n   Compiling rusterr v0.1.0 (/home/user/devel/rusterr)\r\nerror: internal compiler error: compiler/rustc_middle/src/hir/map/mod.rs:306:18: impossible case reached\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/e9920ef7749d11fc71cc32ca4ba055bcfeaab945/library/std/src/panic.rs:59:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.52.0-nightly (e9920ef77 2021-02-11) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [mir_borrowck] borrow-checking `Thing::die_horribly::{closure#0}`\r\n#1 [mir_borrowck] borrow-checking `Thing::die_horribly`\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `rusterr`\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n% RUST_BACKTRACE=1 cargo build\r\n   Compiling rusterr v0.1.0 (/home/user/devel/rusterr)\r\nerror: internal compiler error: compiler/rustc_middle/src/hir/map/mod.rs:306:18: impossible case reached\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/e9920ef7749d11fc71cc32ca4ba055bcfeaab945/library/std/src/panic.rs:59:5\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: std::panic::panic_any\r\n   2: rustc_errors::HandlerInner::bug\r\n   3: rustc_errors::Handler::bug\r\n   4: rustc_middle::ty::context::tls::with_opt\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: rustc_middle::hir::map::Map::item\r\n   8: rustc_mir::borrow_check::diagnostics::mutability_errors::<impl rustc_mir::borrow_check::MirBorrowckCtxt>::report_mutability_error\r\n   9: rustc_mir::borrow_check::MirBorrowckCtxt::access_place\r\n  10: <rustc_mir::borrow_check::MirBorrowckCtxt as rustc_mir::dataflow::framework::visitor::ResultsVisitor>::visit_statement_before_primary_effect\r\n  11: <rustc_mir::dataflow::framework::direction::Forward as rustc_mir::dataflow::framework::direction::Direction>::visit_results_in_block\r\n  12: rustc_mir::dataflow::framework::visitor::visit_results\r\n  13: rustc_mir::borrow_check::do_mir_borrowck\r\n  14: rustc_infer::infer::InferCtxtBuilder::enter\r\n  15: rustc_mir::borrow_check::mir_borrowck\r\n  16: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::mir_borrowck>::compute\r\n  17: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  18: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  19: rustc_data_structures::stack::ensure_sufficient_stack\r\n  20: rustc_query_system::query::plumbing::force_query_with_job\r\n  21: rustc_query_system::query::plumbing::get_query_impl\r\n  22: rustc_mir::borrow_check::type_check::TypeChecker::check_rvalue\r\n  23: rustc_mir::borrow_check::type_check::TypeChecker::typeck_mir\r\n  24: rustc_mir::borrow_check::type_check::type_check\r\n  25: rustc_mir::borrow_check::nll::compute_regions\r\n  26: rustc_mir::borrow_check::do_mir_borrowck\r\n  27: rustc_infer::infer::InferCtxtBuilder::enter\r\n  28: rustc_mir::borrow_check::mir_borrowck\r\n  29: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::mir_borrowck>::compute\r\n  30: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  31: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  32: rustc_data_structures::stack::ensure_sufficient_stack\r\n  33: rustc_query_system::query::plumbing::force_query_with_job\r\n  34: rustc_query_system::query::plumbing::get_query_impl\r\n  35: rustc_typeck::collect::type_of::type_of\r\n  36: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::type_of>::compute\r\n  37: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  38: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  39: rustc_data_structures::stack::ensure_sufficient_stack\r\n  40: rustc_query_system::query::plumbing::force_query_with_job\r\n  41: rustc_query_system::query::plumbing::get_query_impl\r\n  42: rustc_typeck::check::check::check_item_type\r\n  43: rustc_middle::hir::map::Map::visit_item_likes_in_module\r\n  44: rustc_typeck::check::check::check_mod_item_types\r\n  45: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::check_mod_item_types>::compute\r\n  46: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  47: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  48: rustc_data_structures::stack::ensure_sufficient_stack\r\n  49: rustc_query_system::query::plumbing::force_query_with_job\r\n  50: rustc_query_system::query::plumbing::get_query_impl\r\n  51: rustc_query_system::query::plumbing::ensure_query_impl\r\n  52: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  53: rustc_typeck::check_crate\r\n  54: rustc_interface::passes::analysis\r\n  55: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  56: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  57: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  58: rustc_data_structures::stack::ensure_sufficient_stack\r\n  59: rustc_query_system::query::plumbing::force_query_with_job\r\n  60: rustc_query_system::query::plumbing::get_query_impl\r\n  61: rustc_interface::passes::QueryContext::enter\r\n  62: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  63: rustc_span::with_source_map\r\n  64: rustc_interface::interface::create_compiler_and_run\r\n  65: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.52.0-nightly (e9920ef77 2021-02-11) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [mir_borrowck] borrow-checking `Thing::die_horribly::{closure#0}`\r\n#1 [mir_borrowck] borrow-checking `Thing::die_horribly`\r\n#2 [type_of] computing type of `Thing::die_horribly::{opaque#0}`\r\n#3 [check_mod_item_types] checking item types in top-level module\r\n#4 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `rusterr`\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82032/timeline", "performed_via_github_app": null, "state_reason": "completed"}