{"url": "https://api.github.com/repos/rust-lang/rust/issues/64401", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64401/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64401/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64401/events", "html_url": "https://github.com/rust-lang/rust/issues/64401", "id": 492721353, "node_id": "MDU6SXNzdWU0OTI3MjEzNTM=", "number": 64401, "title": "ICE FulfillmentError in trait codegen", "user": {"login": "ajuvercr", "id": 29926645, "node_id": "MDQ6VXNlcjI5OTI2NjQ1", "avatar_url": "https://avatars.githubusercontent.com/u/29926645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajuvercr", "html_url": "https://github.com/ajuvercr", "followers_url": "https://api.github.com/users/ajuvercr/followers", "following_url": "https://api.github.com/users/ajuvercr/following{/other_user}", "gists_url": "https://api.github.com/users/ajuvercr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajuvercr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajuvercr/subscriptions", "organizations_url": "https://api.github.com/users/ajuvercr/orgs", "repos_url": "https://api.github.com/users/ajuvercr/repos", "events_url": "https://api.github.com/users/ajuvercr/events{/privacy}", "received_events_url": "https://api.github.com/users/ajuvercr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-09-12T10:30:23Z", "updated_at": "2022-07-16T19:11:08Z", "closed_at": "2022-07-16T19:11:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to use generic function with capnproto structs the compiler fails to infer types correctly.\r\nI failed to distil the problem to a smaller size.\r\nCapnproto generates code that implements traits like this\r\n`  impl <'a> ::capnp::traits::Owned<'a> for Owned { type Reader = Reader<'a>; type Builder = Builder<'a>; }\r\n`\r\n<details>\r\n  <summary>Error</summary>\r\n<pre><code>\r\nerror: internal compiler error: src/librustc/traits/codegen/mod.rs:154: Encountered errors `[FulfillmentError(Obligation(predicate=Binder(TraitPredicate(<for<'r, 's, 't0, 't1> fn(&'r mut mozaic::messaging::reactor::LinkHandle<'s, 't0, mozaic::server::runtime::Runtime>, <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'t1>>::Reader) -> std::result::Result<(), mozaic::errors::Error> {mozaic::messaging::reactor::e_to_i::<mozaic::server::runtime::Runtime, mozaic::client_capnp::host_message::Owned>} as std::ops::Fn<(&mut mozaic::messaging::reactor::LinkHandle<mozaic::server::runtime::Runtime>, mozaic::client_capnp::host_message::Reader<'_>)>>)), depth=2),OutputTypeParameterMismatch(Binder(<for<'r, 's, 't0, 't1> fn(&'r mut mozaic::messaging::reactor::LinkHandle<'s, 't0, mozaic::server::runtime::Runtime>, <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'t1>>::Reader) -> std::result::Result<(), mozaic::errors::Error> {mozaic::messaging::reactor::e_to_i::<mozaic::server::runtime::Runtime, mozaic::client_capnp::host_message::Owned>} as std::ops::Fn<(&mut mozaic::messaging::reactor::LinkHandle<'_, '_, mozaic::server::runtime::Runtime>, <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'_>>::Reader)>>), Binder(<for<'r, 's, 't0, 't1> fn(&'r mut mozaic::messaging::reactor::LinkHandle<'s, 't0, mozaic::server::runtime::Runtime>, <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'t1>>::Reader) -> std::result::Result<(), mozaic::errors::Error> {mozaic::messaging::reactor::e_to_i::<mozaic::server::runtime::Runtime, mozaic::client_capnp::host_message::Owned>} as std::ops::Fn<(&mut mozaic::messaging::reactor::LinkHandle<mozaic::server::runtime::Runtime>, mozaic::client_capnp::host_message::Reader<'_>)>>), Sorts(ExpectedFound { expected: mozaic::client_capnp::host_message::Reader<'_>, found: <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'_>>::Reader }))), FulfillmentError(Obligation(predicate=Binder(TraitPredicate(<for<'r, 's, 't0, 't1> fn(&'r mut mozaic::messaging::reactor::LinkHandle<'s, 't0, mozaic::server::runtime::Runtime>, <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'t1>>::Reader) -> std::result::Result<(), mozaic::errors::Error> {mozaic::messaging::reactor::e_to_i::<mozaic::server::runtime::Runtime, mozaic::client_capnp::host_message::Owned>} as std::ops::Fn<(&mut mozaic::messaging::reactor::LinkHandle<mozaic::server::runtime::Runtime>, mozaic::client_capnp::host_message::Reader<'_>)>>)), depth=2),OutputTypeParameterMismatch(Binder(<for<'r, 's, 't0, 't1> fn(&'r mut mozaic::messaging::reactor::LinkHandle<'s, 't0, mozaic::server::runtime::Runtime>, <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'t1>>::Reader) -> std::result::Result<(), mozaic::errors::Error> {mozaic::messaging::reactor::e_to_i::<mozaic::server::runtime::Runtime, mozaic::client_capnp::host_message::Owned>} as std::ops::Fn<(&mut mozaic::messaging::reactor::LinkHandle<'_, '_, mozaic::server::runtime::Runtime>, <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'_>>::Reader)>>), Binder(<for<'r, 's, 't0, 't1> fn(&'r mut mozaic::messaging::reactor::LinkHandle<'s, 't0, mozaic::server::runtime::Runtime>, <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'t1>>::Reader) -> std::result::Result<(), mozaic::errors::Error> {mozaic::messaging::reactor::e_to_i::<mozaic::server::runtime::Runtime, mozaic::client_capnp::host_message::Owned>} as std::ops::Fn<(&mut mozaic::messaging::reactor::LinkHandle<mozaic::server::runtime::Runtime>, mozaic::client_capnp::host_message::Reader<'_>)>>), Sorts(ExpectedFound { expected: mozaic::client_capnp::host_message::Reader<'_>, found: <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'_>>::Reader }))), FulfillmentError(Obligation(predicate=Binder(TraitPredicate(<for<'r, 's, 't0, 't1> fn(&'r mut mozaic::messaging::reactor::LinkHandle<'s, 't0, mozaic::server::runtime::Runtime>, <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'t1>>::Reader) -> std::result::Result<(), mozaic::errors::Error> {mozaic::messaging::reactor::e_to_i::<mozaic::server::runtime::Runtime, mozaic::client_capnp::host_message::Owned>} as std::ops::FnOnce<(&mut mozaic::messaging::reactor::LinkHandle<mozaic::server::runtime::Runtime>, mozaic::client_capnp::host_message::Reader<'_>)>>)), depth=2),OutputTypeParameterMismatch(Binder(<for<'r, 's, 't0, 't1> fn(&'r mut mozaic::messaging::reactor::LinkHandle<'s, 't0, mozaic::server::runtime::Runtime>, <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'t1>>::Reader) -> std::result::Result<(), mozaic::errors::Error> {mozaic::messaging::reactor::e_to_i::<mozaic::server::runtime::Runtime, mozaic::client_capnp::host_message::Owned>} as std::ops::FnOnce<(&mut mozaic::messaging::reactor::LinkHandle<'_, '_, mozaic::server::runtime::Runtime>, <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'_>>::Reader)>>), Binder(<for<'r, 's, 't0, 't1> fn(&'r mut mozaic::messaging::reactor::LinkHandle<'s, 't0, mozaic::server::runtime::Runtime>, <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'t1>>::Reader) -> std::result::Result<(), mozaic::errors::Error> {mozaic::messaging::reactor::e_to_i::<mozaic::server::runtime::Runtime, mozaic::client_capnp::host_message::Owned>} as std::ops::FnOnce<(&mut mozaic::messaging::reactor::LinkHandle<mozaic::server::runtime::Runtime>, mozaic::client_capnp::host_message::Reader<'_>)>>), Sorts(ExpectedFound { expected: mozaic::client_capnp::host_message::Reader<'_>, found: <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'_>>::Reader }))), FulfillmentError(Obligation(predicate=Binder(TraitPredicate(<for<'r, 's, 't0, 't1> fn(&'r mut mozaic::messaging::reactor::LinkHandle<'s, 't0, mozaic::server::runtime::Runtime>, <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'t1>>::Reader) -> std::result::Result<(), mozaic::errors::Error> {mozaic::messaging::reactor::e_to_i::<mozaic::server::runtime::Runtime, mozaic::client_capnp::host_message::Owned>} as std::ops::FnOnce<(&mut mozaic::messaging::reactor::LinkHandle<mozaic::server::runtime::Runtime>, mozaic::client_capnp::host_message::Reader<'_>)>>)), depth=2),OutputTypeParameterMismatch(Binder(<for<'r, 's, 't0, 't1> fn(&'r mut mozaic::messaging::reactor::LinkHandle<'s, 't0, mozaic::server::runtime::Runtime>, <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'t1>>::Reader) -> std::result::Result<(), mozaic::errors::Error> {mozaic::messaging::reactor::e_to_i::<mozaic::server::runtime::Runtime, mozaic::client_capnp::host_message::Owned>} as std::ops::FnOnce<(&mut mozaic::messaging::reactor::LinkHandle<'_, '_, mozaic::server::runtime::Runtime>, <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'_>>::Reader)>>), Binder(<for<'r, 's, 't0, 't1> fn(&'r mut mozaic::messaging::reactor::LinkHandle<'s, 't0, mozaic::server::runtime::Runtime>, <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'t1>>::Reader) -> std::result::Result<(), mozaic::errors::Error> {mozaic::messaging::reactor::e_to_i::<mozaic::server::runtime::Runtime, mozaic::client_capnp::host_message::Owned>} as std::ops::FnOnce<(&mut mozaic::messaging::reactor::LinkHandle<mozaic::server::runtime::Runtime>, mozaic::client_capnp::host_message::Reader<'_>)>>), Sorts(ExpectedFound { expected: mozaic::client_capnp::host_message::Reader<'_>, found: <mozaic::client_capnp::host_message::Owned as capnp::traits::Owned<'_>>::Reader })))]` resolving bounds after type-checking\r\n</code></pre>\r\n</details>\r\n\r\nWhich I think can be distilled down to `expected: host_message::Reader<'_>, found: <host_message::Owned as Owned<'_>>::Reader` which is the same type.\r\n\r\n## Meta\r\n`rustc --version --verbose`:\r\n`rustc 1.37.0 (eae3437df 2019-08-13)\r\nbinary: rustc\r\ncommit-hash: eae3437dfe991621e8afdc82734f4a172d7ddf9b\r\ncommit-date: 2019-08-13\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.37.0\r\nLLVM version: 8.0`\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:650:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.29/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.29/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:47\r\n   3: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:36\r\n   4: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:200\r\n   5: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:214\r\n   6: rustc::util::common::panic_hook\r\n   7: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:481\r\n   8: std::panicking::begin_panic\r\n   9: rustc_errors::Handler::bug\r\n  10: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  11: rustc::ty::context::tls::with_opt::{{closure}}\r\n  12: rustc::ty::context::tls::with_context_opt\r\n  13: rustc::ty::context::tls::with_opt\r\n  14: rustc::util::bug::opt_span_bug_fmt\r\n  15: rustc::util::bug::bug_fmt\r\n  16: rustc::traits::codegen::<impl rustc::infer::InferCtxt>::drain_fulfillment_cx_or_panic\r\n  17: rustc::ty::context::GlobalCtxt::enter_local\r\n  18: rustc::traits::codegen::codegen_fulfill_obligation\r\n  19: rustc::ty::query::__query_compute::codegen_fulfill_obligation\r\n  20: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::codegen_fulfill_obligation>::compute\r\n  21: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  22: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  23: rustc::ty::instance::Instance::resolve\r\n  24: rustc::ty::instance::Instance::resolve_for_vtable\r\n  25: <core::iter::adapters::Cloned<I> as core::iter::traits::iterator::Iterator>::try_fold::{{closure}}\r\n  26: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold\r\n  27: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::spec_extend\r\n  28: <rustc_mir::monomorphize::collector::MirNeighborCollector as rustc::mir::visit::Visitor>::visit_rvalue\r\n  29: rustc_mir::monomorphize::collector::collect_items_rec\r\n  30: rustc_mir::monomorphize::collector::collect_items_rec\r\n  31: rustc_mir::monomorphize::collector::collect_items_rec\r\n  32: rustc_mir::monomorphize::collector::collect_items_rec\r\n  33: rustc_mir::monomorphize::collector::collect_items_rec\r\n  34: rustc_mir::monomorphize::collector::collect_items_rec\r\n  35: rustc_mir::monomorphize::collector::collect_items_rec\r\n  36: rustc_mir::monomorphize::collector::collect_items_rec\r\n  37: rustc_mir::monomorphize::collector::collect_items_rec\r\n  38: rustc_mir::monomorphize::collector::collect_items_rec\r\n  39: rustc_mir::monomorphize::collector::collect_items_rec\r\n  40: rustc_mir::monomorphize::collector::collect_items_rec\r\n  41: rustc_mir::monomorphize::collector::collect_items_rec\r\n  42: rustc_mir::monomorphize::collector::collect_items_rec\r\n  43: rustc_mir::monomorphize::collector::collect_items_rec\r\n  44: rustc_mir::monomorphize::collector::collect_items_rec\r\n  45: rustc_mir::monomorphize::collector::collect_items_rec\r\n  46: rustc_mir::monomorphize::collector::collect_crate_mono_items::{{closure}}\r\n  47: rustc::util::common::time\r\n  48: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  49: rustc::util::common::time\r\n  50: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  51: rustc::ty::query::__query_compute::collect_and_partition_mono_items\r\n  52: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::collect_and_partition_mono_items>::compute\r\n  53: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  54: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  55: rustc_codegen_ssa::base::codegen_crate\r\n  56: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate\r\n  57: rustc::util::common::time\r\n  58: rustc_interface::passes::start_codegen\r\n  59: rustc::ty::context::tls::enter_global\r\n  60: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  61: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  62: rustc_interface::passes::BoxedGlobalCtxt::enter\r\n  63: rustc_interface::queries::Query<T>::compute\r\n  64: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::ongoing_codegen\r\n  65: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  66: std::thread::local::LocalKey<T>::with\r\n  67: scoped_tls::ScopedKey<T>::set\r\n  68: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nquery stack during panic:\r\n#0 [codegen_fulfill_obligation] checking if `mozaic::messaging::types::Handler` fulfills its obligations\r\n#1 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n```\r\n\r\nMy first issue btw, sorry for noobyness.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64401/timeline", "performed_via_github_app": null, "state_reason": "completed"}