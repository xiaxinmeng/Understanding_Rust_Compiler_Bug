{"url": "https://api.github.com/repos/rust-lang/rust/issues/50237", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50237/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50237/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50237/events", "html_url": "https://github.com/rust-lang/rust/issues/50237", "id": 317830576, "node_id": "MDU6SXNzdWUzMTc4MzA1NzY=", "number": 50237, "title": "Associated types bounds seem to be ignored in generic impls", "user": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-25T23:46:07Z", "updated_at": "2018-05-05T16:03:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the following code:\r\n```rust\r\n#![crate_type=\"lib\"]\r\n\r\nuse std::marker::PhantomData;\r\n\r\ntrait Foo {\r\n    type Type: Qux;\r\n}\r\n\r\nstruct Bar<T>(PhantomData<T>);\r\n\r\ntrait Qux {}\r\n\r\nimpl<T: Foo> From<T::Type> for Bar<T> {\r\n    fn from(t: T::Type) -> Self {\r\n        Bar(PhantomData)\r\n    }\r\n}\r\n```\r\n\r\nThis fails to build with:\r\n```\r\nerror[E0119]: conflicting implementations of trait `std::convert::From<Bar<_>>` for type `Bar<_>`:\r\n  --> src/lib.rs:13:1\r\n   |\r\n13 | impl<T: Foo> From<T::Type> for Bar<T> {\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: conflicting implementation in crate `core`:\r\n           - impl<T> std::convert::From<T> for T;\r\n```\r\n\r\nThis implies the compiler thinks `T::Type` might be `Bar<T>`, but because of the `Qux` bound, and the fact that there is no `impl<T> Qux for Bar<T> {}`, it's not possible.\r\n\r\nIn fact, doing some handholding works: `impl<T: Foo<Type=U>, U: Qux> From<U> for Bar<T>` yields no error and is equivalent, albeit unnecessarily verbose.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50237/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50237/timeline", "performed_via_github_app": null, "state_reason": null}