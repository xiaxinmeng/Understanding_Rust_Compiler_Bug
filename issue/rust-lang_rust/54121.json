{"url": "https://api.github.com/repos/rust-lang/rust/issues/54121", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/54121/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/54121/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/54121/events", "html_url": "https://github.com/rust-lang/rust/issues/54121", "id": 358938786, "node_id": "MDU6SXNzdWUzNTg5Mzg3ODY=", "number": 54121, "title": "simple type inference fails depending on order of trait bounds", "user": {"login": "mikebenfield", "id": 543755, "node_id": "MDQ6VXNlcjU0Mzc1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/543755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikebenfield", "html_url": "https://github.com/mikebenfield", "followers_url": "https://api.github.com/users/mikebenfield/followers", "following_url": "https://api.github.com/users/mikebenfield/following{/other_user}", "gists_url": "https://api.github.com/users/mikebenfield/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikebenfield/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikebenfield/subscriptions", "organizations_url": "https://api.github.com/users/mikebenfield/orgs", "repos_url": "https://api.github.com/users/mikebenfield/repos", "events_url": "https://api.github.com/users/mikebenfield/events{/privacy}", "received_events_url": "https://api.github.com/users/mikebenfield/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-11T08:24:20Z", "updated_at": "2020-11-29T04:54:17Z", "closed_at": "2020-11-29T04:54:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I can't be sure that this behavior is unintended, but it definitely seems very strange and undesirable to me.\r\n\r\nThis code works fine:\r\n```\r\n$ cat trash2.rs\r\ntrait Tr<A, B> {\r\n    fn exec(a: A, b: B);\r\n}\r\n\r\ntrait Q {\r\n    type T: Tr<u16, u16> + Tr<u8, u8>;\r\n}\r\n\r\n#[allow(dead_code)]\r\nfn f<S: Q>()\r\n{\r\n    <S as Q>::T::exec(0u8, 0u8)\r\n}\r\n\r\nfn main() {\r\n}\r\n$ rustc trash2.rs -o trash\r\n```\r\n\r\nBut change the order of the trait bounds in the associated type `T`, and it fails:\r\n\r\n```\r\n$ cat trash2.rs\r\ntrait Tr<A, B> {\r\n    fn exec(a: A, b: B);\r\n}\r\n\r\ntrait Q {\r\n    type T: Tr<u8, u8> + Tr<u16, u16>;\r\n}\r\n\r\n#[allow(dead_code)]\r\nfn f<S: Q>()\r\n{\r\n    <S as Q>::T::exec(0u8, 0u8)\r\n}\r\n\r\nfn main() {\r\n}\r\n$ rustc trash2.rs -o trash\r\nerror[E0308]: mismatched types\r\n  --> trash2.rs:12:23\r\n   |\r\n12 |     <S as Q>::T::exec(0u8, 0u8)\r\n   |                       ^^^ expected u16, found u8\r\nhelp: you can cast an `u8` to `u16`, which will zero-extend the source value\r\n   |\r\n12 |     <S as Q>::T::exec(0u8.into(), 0u8)\r\n   |                       ^^^^^^^^^^\r\n\r\nerror[E0308]: mismatched types\r\n  --> trash2.rs:12:28\r\n   |\r\n12 |     <S as Q>::T::exec(0u8, 0u8)\r\n   |                            ^^^ expected u16, found u8\r\nhelp: you can cast an `u8` to `u16`, which will zero-extend the source value\r\n   |\r\n12 |     <S as Q>::T::exec(0u8, 0u8.into())\r\n   |                            ^^^^^^^^^^\r\n\r\nerror: aborting due to 2 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/54121/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/54121/timeline", "performed_via_github_app": null, "state_reason": "completed"}