{"url": "https://api.github.com/repos/rust-lang/rust/issues/34396", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/34396/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/34396/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/34396/events", "html_url": "https://github.com/rust-lang/rust/issues/34396", "id": 161396541, "node_id": "MDU6SXNzdWUxNjEzOTY1NDE=", "number": 34396, "title": "An unused generic parameter should be a warning at the definition site.", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-06-21T10:04:31Z", "updated_at": "2021-01-27T19:42:58Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Consider the following code:\n\n``` rust\nfn foo<F>(x: i32) -> i32 { x }\n\nfn bar<'a>(x: i32) -> i32 { x }\n\nfn main() {\n    bar(1);\n    bar(2);\n    foo::<f64>(3);\n    foo(4);\n    foo(5);\n}\n```\n\nCurrently, this causes a fatal compiler error at the invocation of `foo(4)` on line 9, of the form:\n\n```\nerror: unable to infer enough type information about `_`; type annotations or generic parameter binding required [--explain E0282]\n --> <anon>:9:5\n  |>\n9 |>     foo(4);\n  |>     ^^^\n\nerror: aborting due to previous error\n```\n\nThe only way to ever successfully invoke `foo` is to feed it an explicit type (via the `::<_>` syntax as illustrated on line 8).\n\nI suspect in many cases of this error, the actual problem is that the definition of `fn foo` (and also `fn bar`) are faulty: since `F` and `'a` are never referenced in the signature nor in the function body, they are irrelevant and should cause a warning via the compiler's linting system.\n\n(A separate issue is that one cannot actually instantiate the `'a` parameter to `fn bar` via the `::<_>` syntax, so it seems that its formal lifetime parameter is truly unusable. But things may not remain that way forever, so I think its best to lump both of these cases into the same category.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/34396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/34396/timeline", "performed_via_github_app": null, "state_reason": null}