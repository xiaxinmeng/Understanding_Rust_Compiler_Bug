{"url": "https://api.github.com/repos/rust-lang/rust/issues/43940", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43940/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43940/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43940/events", "html_url": "https://github.com/rust-lang/rust/issues/43940", "id": 250994727, "node_id": "MDU6SXNzdWUyNTA5OTQ3Mjc=", "number": 43940, "title": "Implement std::borrow::Borrow<&str> for String", "user": {"login": "mqudsi", "id": 606923, "node_id": "MDQ6VXNlcjYwNjkyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mqudsi", "html_url": "https://github.com/mqudsi", "followers_url": "https://api.github.com/users/mqudsi/followers", "following_url": "https://api.github.com/users/mqudsi/following{/other_user}", "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions", "organizations_url": "https://api.github.com/users/mqudsi/orgs", "repos_url": "https://api.github.com/users/mqudsi/repos", "events_url": "https://api.github.com/users/mqudsi/events{/privacy}", "received_events_url": "https://api.github.com/users/mqudsi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-17T16:06:23Z", "updated_at": "2017-11-14T18:13:03Z", "closed_at": "2017-11-14T18:13:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I strongly believe that rust should provide more interoperability between the `String` and the `&str` types, given the prevalence of the two types and interaction between them.\r\n\r\nIn particular, I think anywhere that you need to dereference a `&str` to do some `String` operation that can be avoided is not correct.\r\n\r\nAs one concrete such example, `String` should implement `std::borrow::Borrow<&str>` to make something like this work:\r\n\r\n```rust\r\nlet hashmap = HashMap::<String, _>::new();\r\nfor key in [\"foo\", \"bar\"] {\r\n    if hashmap.contains_key(key) {\r\n        ...\r\n    }\r\n}\r\n```\r\n\r\nCurrently this throws an error about `String` not implementing `borrow<&str>`:\r\n```rust\r\nerror[E0277]: the trait bound `std::string::String: std::borrow::Borrow<&str>` is not satisfied\r\n  --> src/main.rs:76:21\r\n   |\r\n76 |         if !hashmap.contains_key(key) {\r\n   |                     ^^^^^^^^^^^^ the trait `std::borrow::Borrow<&str>` is not implemented for `std::string::String`\r\n   |\r\n   = help: the following implementations were found:\r\n             <std::string::String as std::borrow::Borrow<str>>\r\n```\r\n\r\nAside from the fact that compiler doesn't (directly) suggest dereferencing the &str, I don't believe it should be necessary to do so in the first place.\r\n\r\n(obviously changing the test to `if !hashmap.contains_key(*key)` takes care of the error.)\r\n\r\nAlternatively, could we automatically dereference `&foo` when a trait matching the dereferenced `foo` type is found and there is none for `foo`? That would automatically take care of an entire class of problems.\r\n\r\n(Apologies if either the original suggestion or the alternative suggestion of auto-dereferencing to match `impl`'d traits are already in the system; I could not find them, but with the overwhelming number of issues in the this project makes it hard to be certain.)", "closed_by": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43940/reactions", "total_count": 8, "+1": 8, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43940/timeline", "performed_via_github_app": null, "state_reason": "completed"}