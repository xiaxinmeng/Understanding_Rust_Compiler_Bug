{"url": "https://api.github.com/repos/rust-lang/rust/issues/55235", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55235/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55235/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55235/events", "html_url": "https://github.com/rust-lang/rust/issues/55235", "id": 372251960, "node_id": "MDU6SXNzdWUzNzIyNTE5NjA=", "number": 55235, "title": "Cannot link to Apple universal (fat) libraries", "user": {"login": "awakecoding", "id": 295841, "node_id": "MDQ6VXNlcjI5NTg0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/295841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awakecoding", "html_url": "https://github.com/awakecoding", "followers_url": "https://api.github.com/users/awakecoding/followers", "following_url": "https://api.github.com/users/awakecoding/following{/other_user}", "gists_url": "https://api.github.com/users/awakecoding/gists{/gist_id}", "starred_url": "https://api.github.com/users/awakecoding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awakecoding/subscriptions", "organizations_url": "https://api.github.com/users/awakecoding/orgs", "repos_url": "https://api.github.com/users/awakecoding/repos", "events_url": "https://api.github.com/users/awakecoding/events{/privacy}", "received_events_url": "https://api.github.com/users/awakecoding/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123111, "node_id": "MDU6TGFiZWwxMjMxMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-macos", "name": "O-macos", "color": "6e6ec0", "default": false, "description": "Operating system: macOS"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-20T20:54:21Z", "updated_at": "2022-10-05T14:48:33Z", "closed_at": "2022-10-05T14:48:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have started modifying a few Rust \"-sys\" crates to point to some prebuilt C libraries that I currently share between my C and Rust code. For macOS and iOS, my prebuilt libraries are merged into universal libraries, with multiple architectures contained in the same .a static libraries.\r\n\r\nFor instance, when trying to link against a universal libcurl.a library for iOS, I get the following error:\r\nfailed to add native library /opt/wayk/sdk/iOS/curl/lib/libcurl.a: File too small to be an archive\r\n\r\nThe only other mention of such an issue is https://github.com/rust-lang/rust/issues/50220 but it was meant to fix an issue with compiling Rust, not adding proper support for linking to universal binaries from Rust crates.\r\n\r\nFor macOS, I could \"fix\" the issue because we have recently deprecated support for i386 in our prebuilt libraries, and managed to make single-arch x86_64 libraries. Only non-universal binaries work, a universal binary with a single architecture won't work. I had to modify my scripts to avoid calling lipo to merge multiple libraries if there was only one architecture to \"merge\" and end up with non-universal binaries.\r\n\r\nOne possible workaround would be to process libraries to be linked such that \"lipo -thin\" is called to extract single-arch non-universal libraries to a temporary location and then pass those libraries to the linker. It may not be the cleanest patch, but it could work well without much changes.\r\n\r\nThe exact line throwing the error can be found here:\r\nhttps://github.com/rust-lang/llvm/blob/caddcd9b9dc9479a20908d93c3e47c49b021379e/lib/Object/Archive.cpp#L554\r\n\r\nFor reference, I took a screenshot of the first few bytes of a thin library and a fat library. The macOS thin library can be seen on the left with the magic number \"CAFEBABE\". The iOS fat library can be seen on the right the with magic string \"`!<arch>`\". The code throwing the error checks for the \"`!<arch>`\" magic string, so the first step to try to add code specific to universal binaries would be to handle files with the \"CAFEBABE\" magic number differently.\r\n\r\n![libcurl_fat_thin](https://user-images.githubusercontent.com/295841/47260602-70561600-d48c-11e8-81a9-5037d1f8445e.png)\r\n\r\nThe relevant documentation for the universal binary format can be found here:\r\nhttp://math-atlas.sourceforge.net/devel/assembly/MachORuntime.pdf#//apple_ref/doc/uid/20001298/TPXREF130\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55235/reactions", "total_count": 21, "+1": 16, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 5}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55235/timeline", "performed_via_github_app": null, "state_reason": "completed"}