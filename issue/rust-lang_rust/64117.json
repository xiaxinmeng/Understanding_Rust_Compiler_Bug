{"url": "https://api.github.com/repos/rust-lang/rust/issues/64117", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64117/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64117/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64117/events", "html_url": "https://github.com/rust-lang/rust/issues/64117", "id": 488461911, "node_id": "MDU6SXNzdWU0ODg0NjE5MTE=", "number": 64117, "title": "Adding method to `consume` an iterator efficiently", "user": {"login": "Phosphorus15", "id": 15113098, "node_id": "MDQ6VXNlcjE1MTEzMDk4", "avatar_url": "https://avatars.githubusercontent.com/u/15113098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phosphorus15", "html_url": "https://github.com/Phosphorus15", "followers_url": "https://api.github.com/users/Phosphorus15/followers", "following_url": "https://api.github.com/users/Phosphorus15/following{/other_user}", "gists_url": "https://api.github.com/users/Phosphorus15/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phosphorus15/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phosphorus15/subscriptions", "organizations_url": "https://api.github.com/users/Phosphorus15/orgs", "repos_url": "https://api.github.com/users/Phosphorus15/repos", "events_url": "https://api.github.com/users/Phosphorus15/events{/privacy}", "received_events_url": "https://api.github.com/users/Phosphorus15/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-03T08:25:25Z", "updated_at": "2019-09-04T04:15:34Z", "closed_at": "2019-09-04T04:15:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, mapping methods for iterator, e.g. `map` and `filter` are implemented in a lazy manner. Which means they would not be calculated until further `consumption`.\r\nHowever, sometimes it can be the case that given an `Iterator` (whatever it actually is) . we just wanted its side-effect and to simply `consume` it. for instance :\r\n```rust\r\n#[derive(Debug)]\r\nstruct Item(i32);\r\n\r\nfn take_iter<T : Iterator>(iter: T) {\r\n    // we just want to consume the `iter` here\r\n    // do something else\r\n}\r\n\r\nfn main() {\r\n    let ve = vec![Item(1), Item(2), Item(3), Item(1)];\r\n\r\n    take_iter(ve.iter().filter(|value| value.0 < 3).map(|value| {\r\n        println!(\"{:?}\", value);\r\n        value\r\n    }));\r\n}\r\n```\r\n\r\nCurrently, there're several ways of achieving this goal, for example :\r\n```rust\r\nfn take_iter<T : Iterator>(iter: T) {\r\n    iter.for_each(|_| {}); // consumed\r\n     // do something else\r\n}\r\n```\r\n```rust\r\nfn take_iter<T : Iterator>(iter: T) {\r\n    iter.count(); // consumed\r\n    // do something else\r\n}\r\n```\r\nWhile they're both usable, it's obvious that these methods are at the cost of efficiency, `for_each` yields a call to closure which is totally unnecessary, while `count` finally counting the number of elements in vain.", "closed_by": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64117/timeline", "performed_via_github_app": null, "state_reason": "completed"}