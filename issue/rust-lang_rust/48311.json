{"url": "https://api.github.com/repos/rust-lang/rust/issues/48311", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48311/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48311/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48311/events", "html_url": "https://github.com/rust-lang/rust/issues/48311", "id": 298051541, "node_id": "MDU6SXNzdWUyOTgwNTE1NDE=", "number": 48311, "title": "Strengthen/clarify \"It is an error to...\" wording", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-02-18T01:42:12Z", "updated_at": "2018-03-03T15:35:30Z", "closed_at": "2018-03-03T15:35:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "* [`UdpSocket::set_read_timeout`](https://doc.rust-lang.org/std/net/struct.UdpSocket.html#method.set_read_timeout)\r\n* [`UdpSocket::set_write_timeout`](https://doc.rust-lang.org/std/net/struct.UdpSocket.html#method.set_write_timeout)\r\n* [`TcpStream::connect_timeout`](https://doc.rust-lang.org/std/net/struct.TcpStream.html#method.connect_timeout)\r\n* [`TcpStream::set_read_timeout`](https://doc.rust-lang.org/std/net/struct.TcpStream.html#method.set_read_timeout)\r\n* [`TcpStream::set_write_timeout`](https://doc.rust-lang.org/std/net/struct.TcpStream.html#method.set_write_timeout)\r\n* [`UnixDatagram::set_read_timeout`](https://doc.rust-lang.org/std/os/unix/net/struct.UnixDatagram.html#method.set_read_timeout)\r\n* [`UnixDatagram::set_write_timeout`](https://doc.rust-lang.org/std/os/unix/net/struct.UnixDatagram.html#method.set_write_timeout)\r\n* [`UnixStream::set_read_timeout`](https://doc.rust-lang.org/std/os/unix/net/struct.UnixStream.html#method.set_read_timeout)\r\n* [`UnixStream::set_write_timeout`](https://doc.rust-lang.org/std/os/unix/net/struct.UnixStream.html#method.set_write_timeout)\r\n\r\nFor all of the APIs above, the docs have a line with this wording:\r\n\r\n> It is an error to pass the zero `Duration` to this method.\r\n\r\nMy initial thought is, what does \"it is an error\" mean? Does this mean the API will panic if `Some(Duration::from_secs(0))` is passed or will it just return an `Err`? The answer appears to be the latter.\r\n\r\nAlso since it's the latter, and we _don't_ have an explicit check for `Duration(0)` in our codebase, it means we're _relying_ on the behavior being the same across all platforms. Is this alright? Should/can we add an explicit check for `Duration(0)`? Should we add a test ensuring this is the behavior across all platforms?\r\n\r\nMaybe I'm overthinking this...", "closed_by": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48311/timeline", "performed_via_github_app": null, "state_reason": "completed"}