{"url": "https://api.github.com/repos/rust-lang/rust/issues/105031", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105031/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105031/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105031/events", "html_url": "https://github.com/rust-lang/rust/issues/105031", "id": 1467090794, "node_id": "I_kwDOAAsO6M5Xcgdq", "number": 105031, "title": "single-use-lifetimes may remove attributes of wrong lifetime?", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-11-28T21:05:58Z", "updated_at": "2022-11-28T21:05:58Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\n#![feature(dropck_eyepatch)]\r\n\r\nfn main() {\r\n    // Since the second param to `D1` is may_dangle, it is legal for\r\n    // the region of that parameter to end before the drop code for D1\r\n    // is executed.\r\n    (D1(&S1(\"ex1\"), &S1(\"dang1\"))).0;\r\n}\r\n\r\n#[derive(Debug)]\r\nstruct S1(&'static str);\r\n\r\n#[derive(Debug)]\r\nstruct D1<'a, 'b>(&'a S1, &'b S1);\r\n\r\n// The `#[may_dangle]` means that references of type `&'b _` may be\r\n// invalid during the execution of this destructor; i.e. in this case\r\n// the destructor code is not allowed to read or write `*self.1`, while\r\n// it can read/write `*self.0`.\r\nunsafe impl<'a, #[may_dangle] 'b> Drop for D1<'a, 'b> {\r\n    fn drop(&mut self) {\r\n        println!(\"D1({:?}, _)\", self.0);\r\n    }\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nwarning: lifetime parameter `'a` only used once\r\n  --> src/main.rs:20:13\r\n   |\r\n20 | unsafe impl<'a, #[may_dangle] 'b> Drop for D1<'a, 'b> {\r\n   |             ^^ this lifetime...               -- ...is used only here\r\n   |\r\n   = note: requested on the command line with `-W single-use-lifetimes`\r\nhelp: elide the single-use lifetime\r\n   |\r\n20 - unsafe impl<'a, #[may_dangle] 'b> Drop for D1<'a, 'b> {\r\n20 + unsafe impl<'b> Drop for D1<'_, 'b> {\r\n   |\r\n\r\nwarning: lifetime parameter `'b` only used once\r\n  --> src/main.rs:20:31\r\n   |\r\n20 | unsafe impl<'a, #[may_dangle] 'b> Drop for D1<'a, 'b> {\r\n   |                               ^^ this lifetime... -- ...is used only here\r\n   |\r\nhelp: elide the single-use lifetime\r\n   |\r\n20 - unsafe impl<'a, #[may_dangle] 'b> Drop for D1<'a, 'b> {\r\n20 + unsafe impl<'a> Drop for D1<'a, '_> {\r\n```\r\nIt's trying to remove the attribute of lifetime `'b` when removing lifetime `'a`\r\n\r\n\r\nand causes a compiler error all in all:\r\n\r\n\r\n````\r\nThe following errors were reported:\r\nwarning: lifetime parameter `'a` only used once\r\n  --> src/main.rs:20:13\r\n   |\r\n20 | unsafe impl<'a> Drop for D1<'a, '_> {\r\n   |             ^^              -- ...is used only here\r\n   |             |\r\n   |             this lifetime...\r\n   |\r\n   = note: requested on the command line with `-W single-use-lifetimes`\r\nhelp: elide the single-use lifetime\r\n   |\r\n20 - unsafe impl<'a> Drop for D1<'a, '_> {\r\n20 + unsafe impl Drop for D1<'_, '_> {\r\n   |\r\n\r\nerror[E0199]: implementing the trait `std::ops::Drop` is not unsafe\r\n  --> src/main.rs:20:1\r\n   |\r\n20 | / unsafe impl<'a> Drop for D1<'a, '_> {\r\n21 | |     fn drop(&mut self) {\r\n22 | |         println!(\"D1({:?}, _)\", self.0);\r\n23 | |     }\r\n24 | | }\r\n   | |_^\r\n   |\r\nhelp: remove `unsafe` from this trait implementation\r\n   |\r\n20 - unsafe impl<'a> Drop for D1<'a, '_> {\r\n20 + impl<'a> Drop for D1<'a, '_> {\r\n   |\r\n\r\nerror: aborting due to previous error; 1 warning emitted\r\n\r\nFor more information about this error, try `rustc --explain E0199`.\r\nOriginal diagnostics will follow.\r\n````\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105031/timeline", "performed_via_github_app": null, "state_reason": null}