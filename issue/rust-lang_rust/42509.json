{"url": "https://api.github.com/repos/rust-lang/rust/issues/42509", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42509/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42509/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42509/events", "html_url": "https://github.com/rust-lang/rust/issues/42509", "id": 234243597, "node_id": "MDU6SXNzdWUyMzQyNDM1OTc=", "number": 42509, "title": "Wrong type name while reporting error", "user": {"login": "achanda", "id": 2165463, "node_id": "MDQ6VXNlcjIxNjU0NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/2165463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achanda", "html_url": "https://github.com/achanda", "followers_url": "https://api.github.com/users/achanda/followers", "following_url": "https://api.github.com/users/achanda/following{/other_user}", "gists_url": "https://api.github.com/users/achanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/achanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achanda/subscriptions", "organizations_url": "https://api.github.com/users/achanda/orgs", "repos_url": "https://api.github.com/users/achanda/repos", "events_url": "https://api.github.com/users/achanda/events{/privacy}", "received_events_url": "https://api.github.com/users/achanda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-07T15:10:15Z", "updated_at": "2018-12-13T02:21:30Z", "closed_at": "2018-12-13T02:21:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This piece of code gives the following error\r\n```\r\nuse std::path::Path;\r\n\r\npub struct Foo {\r\n    id: i32,\r\n    path: Path\r\n}\r\n\r\nimpl Foo {\r\n    pub fn new() -> Foo {\r\n        Foo{id: 42, path: Path::new()}\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let b = Foo::new();\r\n}\r\n```\r\n```\r\n$ rustc test.rs\r\nerror[E0277]: the trait bound `[u8]: std::marker::Sized` is not satisfied in `Foo`\r\n --> test.rs:9:21\r\n  |\r\n9 |     pub fn new() -> Foo {\r\n  |                     ^^^ `[u8]` does not have a constant size known at compile-time\r\n  |\r\n  = help: within `Foo`, the trait `std::marker::Sized` is not implemented for `[u8]`\r\n  = note: required because it appears within the type `Foo`\r\n  = note: the return type of a function must have a statically known size\r\n\r\nerror[E0061]: this function takes 1 parameter but 0 parameters were supplied\r\n  --> test.rs:10:27\r\n   |\r\n10 |         Foo{id: 42, path: Path::new()}\r\n   |                           ^^^^^^^^^^^ expected 1 parameter\r\n\r\nerror[E0308]: mismatched types\r\n  --> test.rs:10:27\r\n   |\r\n10 |         Foo{id: 42, path: Path::new()}\r\n   |                           ^^^^^^^^^^^ expected struct `std::path::Path`, found reference\r\n   |\r\n   = note: expected type `std::path::Path`\r\n              found type `&std::path::Path`\r\n\r\nerror[E0277]: the trait bound `[u8]: std::marker::Sized` is not satisfied in `Foo`\r\n  --> test.rs:10:9\r\n   |\r\n10 |         Foo{id: 42, path: Path::new()}\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `[u8]` does not have a constant size known at compile-time\r\n   |\r\n   = help: within `Foo`, the trait `std::marker::Sized` is not implemented for `[u8]`\r\n   = note: required because it appears within the type `Foo`\r\n   = note: structs must have a statically known size to be initialized\r\n\r\nerror[E0277]: the trait bound `[u8]: std::marker::Sized` is not satisfied in `Foo`\r\n  --> test.rs:15:9\r\n   |\r\n15 |     let b = Foo::new();\r\n   |         ^ `[u8]` does not have a constant size known at compile-time\r\n   |\r\n   = help: within `Foo`, the trait `std::marker::Sized` is not implemented for `[u8]`\r\n   = note: required because it appears within the type `Foo`\r\n   = note: all local variables must have a statically known size\r\n\r\nerror: aborting due to previous error(s)\r\n```\r\nThis is a bit confusing since the span points to `Foo` but the message says `[u8]`. The ergonomics will be nicer if the message said `Foo`. It will be easier to debug that way.\r\n\r\nMeta:\r\n```\r\n$ rustc --version\r\nrustc 1.19.0-nightly (76242aebb 2017-06-06)\r\n```", "closed_by": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42509/timeline", "performed_via_github_app": null, "state_reason": "completed"}