{"url": "https://api.github.com/repos/rust-lang/rust/issues/50281", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50281/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50281/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50281/events", "html_url": "https://github.com/rust-lang/rust/issues/50281", "id": 318394784, "node_id": "MDU6SXNzdWUzMTgzOTQ3ODQ=", "number": 50281, "title": "Why can we still assign a struct instance's filed when it is already moved ? ", "user": {"login": "findo", "id": 11796555, "node_id": "MDQ6VXNlcjExNzk2NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/11796555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/findo", "html_url": "https://github.com/findo", "followers_url": "https://api.github.com/users/findo/followers", "following_url": "https://api.github.com/users/findo/following{/other_user}", "gists_url": "https://api.github.com/users/findo/gists{/gist_id}", "starred_url": "https://api.github.com/users/findo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/findo/subscriptions", "organizations_url": "https://api.github.com/users/findo/orgs", "repos_url": "https://api.github.com/users/findo/repos", "events_url": "https://api.github.com/users/findo/events{/privacy}", "received_events_url": "https://api.github.com/users/findo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-27T12:40:53Z", "updated_at": "2018-05-29T00:47:38Z", "closed_at": "2018-05-29T00:47:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "See the following program.\r\n```Rust\r\nstruct Point {\r\n    x: f64,\r\n    y: f64,\r\n}\r\n\r\nimpl Point {\r\n    fn take_ownership(self) {\r\n        println!(\"{}\", self.x);\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let mut p = Point {x:1.0, y:2.0};\r\n    p.take_ownership();\r\n    p.x = 3.0; // Line 15\r\n    println!(\"{:?}\", p.x); // Line 16\r\n\r\n```\r\nI wander that why the compiler complains at Line 16 , not Line 15. Both use the moved variable p. I reassign p\u2019s field x at Line 15 and the compiler doesn\u2019t give a warning or an error. For the user\u2019s perspective, Line 15 is useless if so. My question is: what does the compiler do when it comes to Line 15 ?", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50281/timeline", "performed_via_github_app": null, "state_reason": "completed"}