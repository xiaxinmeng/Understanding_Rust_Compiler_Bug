{"url": "https://api.github.com/repos/rust-lang/rust/issues/75231", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75231/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75231/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75231/events", "html_url": "https://github.com/rust-lang/rust/issues/75231", "id": 674614908, "node_id": "MDU6SXNzdWU2NzQ2MTQ5MDg=", "number": 75231, "title": "`*a == *b` moves when dereferencing &Rc<RefCell<dyn Trait>>", "user": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-06T21:35:00Z", "updated_at": "2020-08-07T15:30:16Z", "closed_at": "2020-08-07T15:30:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This bug report comes from a question in the users forum:\r\nhttps://users.rust-lang.org/t/attempting-to-contain-an-rc-refcell-sometrait-in-an-enum-field-with-clone/46913\r\n\r\nThey had a problem with `#[derive(PartialEq)]` on an enum where one variant contains `Rc<RefCell<dyn Trait>>`, and there is a manual `PartialEq` for that `dyn Trait`. I looked at the macro expansion to see that it matches `ref` patterns and then uses `(*__self_0) == (*__arg_1_0)`, so I reduced the error to this code:\r\n\r\n```rust\r\nuse std::cell::RefCell;\r\nuse std::rc::Rc;\r\n\r\npub trait Trait {}\r\n\r\nimpl PartialEq<dyn Trait> for dyn Trait {\r\n    fn eq(&self, _other: &Self) -> bool {\r\n        todo!();\r\n    }\r\n}\r\n\r\npub fn eq(a: &Rc<RefCell<dyn Trait>>, b: &Rc<RefCell<dyn Trait>>) -> bool {\r\n    *a == *b\r\n}\r\n```\r\n\r\nI expected to see this happen: successful compilation\r\n\r\nInstead, this happened: ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=a1a977107a64d0343a12bbb1331b68bb))\r\n\r\n```text\r\nerror[E0507]: cannot move out of `*b` which is behind a shared reference\r\n  --> src/lib.rs:13:11\r\n   |\r\n13 |     *a == *b\r\n   |           ^^ move occurs because `*b` has type `std::rc::Rc<std::cell::RefCell<dyn Trait>>`, which does not implement the `Copy` trait\r\n```\r\n\r\n### Meta\r\n\r\nThe error is the same with all compilers currently on the playground, `1.45.2`, `1.46.0-beta.2`, and `1.47.0-nightly (2020-08-05 22ee68dc586440f96b76)`.\r\n\r\n### Reduction\r\n\r\nChanging to `a == b` works, but that's not helpful when we want the derived code to work.\r\n\r\nReducing the parameters to `&RefCell<dyn Trait>` does build successfully.\r\n\r\nReducing the parameters to `&dyn Trait` changes to a lifetime error:\r\n\r\n```text\r\nerror[E0621]: explicit lifetime required in the type of `a`\r\n  --> src/lib.rs:13:8\r\n   |\r\n12 | pub fn eq(a: &dyn Trait, b: &dyn Trait) -> bool {\r\n   |              ---------- help: add explicit lifetime `'static` to the type of `a`: `&'static (dyn Trait + 'static)`\r\n13 |     *a == *b\r\n   |        ^^ lifetime `'static` required\r\n\r\nerror[E0621]: explicit lifetime required in the type of `b`\r\n  --> src/lib.rs:13:11\r\n   |\r\n12 | pub fn eq(a: &dyn Trait, b: &dyn Trait) -> bool {\r\n   |                             ---------- help: add explicit lifetime `'static` to the type of `b`: `&'static (dyn Trait + 'static)`\r\n13 |     *a == *b\r\n   |           ^^ lifetime `'static` required\r\n```\r\n\r\nThis one is solved by changing to `'static` as suggested, or by changing the `PartialEq` to:\r\n\r\n```rust\r\nimpl<'a> PartialEq<dyn Trait + 'a> for dyn Trait + 'a { ... }\r\n// or even\r\nimpl<'a, 'b> PartialEq<dyn Trait + 'b> for dyn Trait + 'a { ... }\r\n```\r\n\r\n... but that change does nothing for the original issue.\r\n\r\n", "closed_by": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75231/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75231/timeline", "performed_via_github_app": null, "state_reason": "completed"}