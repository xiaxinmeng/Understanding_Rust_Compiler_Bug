{"url": "https://api.github.com/repos/rust-lang/rust/issues/96698", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96698/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96698/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96698/events", "html_url": "https://github.com/rust-lang/rust/issues/96698", "id": 1225117200, "node_id": "I_kwDOAAsO6M5JBc4Q", "number": 96698, "title": "`unused_qualifications` shouldn't trigger on expanded code", "user": {"login": "zecakeh", "id": 76261501, "node_id": "MDQ6VXNlcjc2MjYxNTAx", "avatar_url": "https://avatars.githubusercontent.com/u/76261501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zecakeh", "html_url": "https://github.com/zecakeh", "followers_url": "https://api.github.com/users/zecakeh/followers", "following_url": "https://api.github.com/users/zecakeh/following{/other_user}", "gists_url": "https://api.github.com/users/zecakeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/zecakeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zecakeh/subscriptions", "organizations_url": "https://api.github.com/users/zecakeh/orgs", "repos_url": "https://api.github.com/users/zecakeh/repos", "events_url": "https://api.github.com/users/zecakeh/events{/privacy}", "received_events_url": "https://api.github.com/users/zecakeh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-05-04T09:17:49Z", "updated_at": "2022-05-04T09:17:49Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\nuse my_macros::my_enum_macro;\r\nuse super::a::AType;\r\n\r\nmy_enum_macro! {\r\n  \"key.a_type\" => super::a,\r\n  \"key.b_type\" => super::c::b,\r\n  // Other variants\r\n}\r\n\r\npub fn my_fn(param: AType) {\r\n  // ...\r\n}\r\n```\r\n\r\nWhere `my_enum_macro`, among other things, uses the path provided for the variant to qualify a type based on the key. It so happens that for the first variant here, the type in the expanded code resolves to `super::a::AType`.\r\n\r\nThe current output is:\r\n\r\n```sh\r\nwarning: unnecessary qualification\r\n  --> src/my_mod.rs:5:3\r\n   |\r\n  5|         \"key.a_type\" => super::a,\r\n   |         ^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: requested on the command line with `-W unused-qualifications`\r\n```\r\n\r\nSince the type is already imported at the top, the qualification is indeed unnecessary. But I would also expect to have the same behavior with my macro what other imports there are above.\r\n\r\nThat's why I believe that this warning shouldn't trigger on expanded code, or at least between regular and expanded code.\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96698/timeline", "performed_via_github_app": null, "state_reason": null}