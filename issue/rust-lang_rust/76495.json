{"url": "https://api.github.com/repos/rust-lang/rust/issues/76495", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/76495/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/76495/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/76495/events", "html_url": "https://github.com/rust-lang/rust/issues/76495", "id": 696165452, "node_id": "MDU6SXNzdWU2OTYxNjU0NTI=", "number": 76495, "title": "Improve the rustc-side clippy development experience", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 120005, "node_id": "MDU6TGFiZWwxMjAwMDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-testsuite", "name": "A-testsuite", "color": "f7e101", "default": false, "description": "Area: The testsuite used to check the correctness of rustc"}, {"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2345380158, "node_id": "MDU6TGFiZWwyMzQ1MzgwMTU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-contributor-roadblock", "name": "A-contributor-roadblock", "color": "f7e101", "default": false, "description": "Area: Makes things more difficult for new contributors to rust itself"}, {"id": 2513492750, "node_id": "MDU6TGFiZWwyNTEzNDkyNzUw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-clippy", "name": "A-clippy", "color": "f7e101", "default": false, "description": "Area: Clippy"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2020-09-08T20:44:52Z", "updated_at": "2023-05-20T23:01:55Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "When working on https://github.com/rust-lang/rust/pull/75573, I ended up needing to modify Clippy (both a lint implementation and some UI tests). This process left a lot to be desired, and could be a significant roadblock to new contributors. I came up with some ideas for improving the process:\r\n\r\n- [ ] Run Clippy tests on the PR builder (if we have the CI budget). My PR was initially [approved](https://github.com/rust-lang/rust/pull/75573#issuecomment-688364346), then [unapproved](https://github.com/rust-lang/rust/pull/75573#issuecomment-688400990) due to a (correct) suspicion that Clippy UI tests would be broken. However, this could easily be missed on other PRs, leading to wasted merge queue time and failed rollups. By running these tests on the PR builder, we could catch Clippy changes prior to PR approval.\r\n- [ ] Allow running Clippy tests in-tree from stage1. Currently, running `./x.py test src/tools/clippy` requires a full compiler bootstrap (e.g. building a stage2 compiler). This takes a significant amount of time, and interacts badly with incremental compilation. For contributors with lower-end machines, this may make the contribution process incredibly frustrating. Attempting to build Clippy against a stage1 compiler (which requires running `./x.py test src/tools/clippy --stage 0` for some reason) works, but the tests fail with a confusing error about LLVM being missing.\r\n- [x] Integrate Clippy UI tests with `./x.py test --bless`. Currently, blessing Clippy UI tests requires manually running scripts from inside `src/tools/clippy`. It would be nice if `./x.py test --bless` worked on all UI tests, allowing Clippy to be largely treated as 'just another directory'. \r\n- [ ] Document the interaction between `-D warnings` and Clippy lints. It seems as though denying a built-in lint with `-D warnings` prevents Clippy lints from being run. Since Clippy UI tests are run with `-D warnings`, adding a new builtin Rust lint can end up preventing Clippy UI tests from testing Clippy lints. Ideally, we would allow both sets of lints to run - if this is not possible, we should document the workaround (adding `#![allow(problematic_rustc_lint)]` to the affected Clippy UI tests).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/76495/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/76495/timeline", "performed_via_github_app": null, "state_reason": null}