{"url": "https://api.github.com/repos/rust-lang/rust/issues/13956", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/13956/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/13956/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/13956/events", "html_url": "https://github.com/rust-lang/rust/issues/13956", "id": 32856405, "node_id": "MDU6SXNzdWUzMjg1NjQwNQ==", "number": 13956, "title": "Borrow checker should exploit information provided by match alternatives", "user": {"login": "zwarich", "id": 440875, "node_id": "MDQ6VXNlcjQ0MDg3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/440875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zwarich", "html_url": "https://github.com/zwarich", "followers_url": "https://api.github.com/users/zwarich/followers", "following_url": "https://api.github.com/users/zwarich/following{/other_user}", "gists_url": "https://api.github.com/users/zwarich/gists{/gist_id}", "starred_url": "https://api.github.com/users/zwarich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zwarich/subscriptions", "organizations_url": "https://api.github.com/users/zwarich/orgs", "repos_url": "https://api.github.com/users/zwarich/repos", "events_url": "https://api.github.com/users/zwarich/events{/privacy}", "received_events_url": "https://api.github.com/users/zwarich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-05T23:53:53Z", "updated_at": "2014-05-06T00:43:13Z", "closed_at": "2014-05-06T00:43:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code gives a borrow checker error because the borrow of `a` in the result of `a.foo()` overlaps with the mutable borrow of `a.bar()`:\n\n``` rust\nstruct A<S>;\n\nimpl<S> A<S> {\n    fn foo<'a>(&'a self) -> Option<&'a uint> { None }\n    fn bar(&mut self) { }\n}\n\nfn baz<S>(a: &mut A<S>) -> bool {\n    match a.foo() {\n        Some(i) => true,\n        None => { a.bar(); false }\n    }\n}\n```\n\nThe borrow checker should be able to recognize that the `None` alternative of matching an `Option<&T>` can't contain a borrowed pointer.\n", "closed_by": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/13956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/13956/timeline", "performed_via_github_app": null, "state_reason": "completed"}