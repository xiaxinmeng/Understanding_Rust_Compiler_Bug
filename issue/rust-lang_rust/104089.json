{"url": "https://api.github.com/repos/rust-lang/rust/issues/104089", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104089/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104089/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104089/events", "html_url": "https://github.com/rust-lang/rust/issues/104089", "id": 1437838630, "node_id": "I_kwDOAAsO6M5Vs60m", "number": 104089, "title": "help clause points to adding where clause on impl when it should be on function", "user": {"login": "OneRaynyDay", "id": 7191678, "node_id": "MDQ6VXNlcjcxOTE2Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/7191678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OneRaynyDay", "html_url": "https://github.com/OneRaynyDay", "followers_url": "https://api.github.com/users/OneRaynyDay/followers", "following_url": "https://api.github.com/users/OneRaynyDay/following{/other_user}", "gists_url": "https://api.github.com/users/OneRaynyDay/gists{/gist_id}", "starred_url": "https://api.github.com/users/OneRaynyDay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OneRaynyDay/subscriptions", "organizations_url": "https://api.github.com/users/OneRaynyDay/orgs", "repos_url": "https://api.github.com/users/OneRaynyDay/repos", "events_url": "https://api.github.com/users/OneRaynyDay/events{/privacy}", "received_events_url": "https://api.github.com/users/OneRaynyDay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-11-07T06:33:25Z", "updated_at": "2022-11-08T01:55:41Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Given the following code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=e5d9c21342f0c0824ddba9445daf7cb1\r\n\r\n```rust\r\nstruct A {\r\n    x: String\r\n}\r\n\r\nstruct B {\r\n    x: String\r\n}\r\n\r\nimpl From<A> for B {\r\n    fn from(a: A) -> Self {\r\n        B { x: a.x }\r\n    }\r\n}\r\n\r\nimpl B {\r\n    pub fn from_many<T: Into<B> + Clone>(v: Vec<T>) -> Self {\r\n        B { x: v.iter().map(|e| B::from(e.clone()).x).collect::<Vec<String>>().join(\" \") }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let b: B = B { x: \"foobar\".to_string() };\r\n    let a: A = A { x: \"frob\".to_string() };\r\n    let ab: B = a.into();\r\n    println!(\"Hello, {}!\", ab.x);\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[[E0277]](https://doc.rust-lang.org/stable/error-index.html#E0277): the trait bound `B: From<T>` is not satisfied\r\n  --> src/main.rs:17:41\r\n   |\r\n17 |         B { x: v.iter().map(|e| B::from(e.clone()).x).collect::<Vec<String>>().join(\" \") }\r\n   |                                 ------- ^^^^^^^^^ the trait `From<T>` is not implemented for `B`\r\n   |                                 |\r\n   |                                 required by a bound introduced by this call\r\n   |\r\nhelp: consider introducing a `where` clause, but there might be an alternative better way to express this requirement\r\n   |\r\n15 | impl B where B: From<T> {\r\n   |        ++++++++++++++++\r\n```\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\n...\r\nhelp: consider introducing a `where` clause, but there might be an alternative better way to express this requirement\r\n   |\r\npub fn from_many<T: Into<B> + Clone>(v: Vec<T>) -> Self\r\nwhere B: From<T> {\r\n...\r\n}\r\n```\r\n\r\nlink to stack overflow: https://stackoverflow.com/questions/74342563/convert-vector-of-type-a-to-type-b-where-a-is-convertible-to-b?noredirect=1#comment131245422_74342563", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104089/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104089/timeline", "performed_via_github_app": null, "state_reason": null}