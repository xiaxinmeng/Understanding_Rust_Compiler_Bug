{"url": "https://api.github.com/repos/rust-lang/rust/issues/16900", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16900/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16900/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16900/events", "html_url": "https://github.com/rust-lang/rust/issues/16900", "id": 41582616, "node_id": "MDU6SXNzdWU0MTU4MjYxNg==", "number": 16900, "title": "Provide a non-failing slicing method for &[T] and &str", "user": {"login": "nwin", "id": 949560, "node_id": "MDQ6VXNlcjk0OTU2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/949560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nwin", "html_url": "https://github.com/nwin", "followers_url": "https://api.github.com/users/nwin/followers", "following_url": "https://api.github.com/users/nwin/following{/other_user}", "gists_url": "https://api.github.com/users/nwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/nwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nwin/subscriptions", "organizations_url": "https://api.github.com/users/nwin/orgs", "repos_url": "https://api.github.com/users/nwin/repos", "events_url": "https://api.github.com/users/nwin/events{/privacy}", "received_events_url": "https://api.github.com/users/nwin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-08-31T09:49:32Z", "updated_at": "2015-01-27T17:06:17Z", "closed_at": "2015-01-27T17:06:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As discussed on [reddit](http://www.reddit.com/r/rust/comments/2f0dnf/string_and_vec_slicing_methods_need_safe/) it would be very convenient to have a slicing method that can't fail and returns an truncated slice instead. This is for example used in python and works well. The [implementation](https://gist.github.com/nwin/259d919ca7806a1714ef) is pretty trivial but since it is so convenient, it should be implemented in the std lib.\n\nI could make a pull request with the actual implementation + comments if this functionality is desired a a good name has been chosen (I'm not sure if I like eager).\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16900/timeline", "performed_via_github_app": null, "state_reason": "completed"}