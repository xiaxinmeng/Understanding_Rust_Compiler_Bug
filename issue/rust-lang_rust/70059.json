{"url": "https://api.github.com/repos/rust-lang/rust/issues/70059", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70059/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70059/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70059/events", "html_url": "https://github.com/rust-lang/rust/issues/70059", "id": 582663642, "node_id": "MDU6SXNzdWU1ODI2NjM2NDI=", "number": 70059, "title": "Must use type parameter on struct to use in impl", "user": {"login": "aklitzke", "id": 6123576, "node_id": "MDQ6VXNlcjYxMjM1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6123576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aklitzke", "html_url": "https://github.com/aklitzke", "followers_url": "https://api.github.com/users/aklitzke/followers", "following_url": "https://api.github.com/users/aklitzke/following{/other_user}", "gists_url": "https://api.github.com/users/aklitzke/gists{/gist_id}", "starred_url": "https://api.github.com/users/aklitzke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aklitzke/subscriptions", "organizations_url": "https://api.github.com/users/aklitzke/orgs", "repos_url": "https://api.github.com/users/aklitzke/repos", "events_url": "https://api.github.com/users/aklitzke/events{/privacy}", "received_events_url": "https://api.github.com/users/aklitzke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-16T23:52:59Z", "updated_at": "2020-03-17T00:05:24Z", "closed_at": "2020-03-17T00:03:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n### Code\r\n\r\nLets say I have a trait which doesn't require any reference to a `Self`:\r\n\r\n```rust\r\ntrait SayHi {\r\n    fn hi();\r\n}\r\n```\r\nand I want to use this trait in an impl, but don't need an instance of it in a struct anywhere:\r\n```rust\r\nstruct Mom { }\r\nimpl<Kid: SayHi> Mom {\r\n    fn tell_kid_to_say_hi() {\r\n        Kid::hi();\r\n    }\r\n}\r\n```\r\n\r\n[The code fails to compile](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=64ef6ef6609a57e655bfbb8b6e26f911), complaining that `Kid` is unconstrained. However, `Kid` _is_ utilized and necessary to do something like [this](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=6c620a21f99f07520574039cefffbb85):\r\n\r\n```rust\r\nstruct Bob { }\r\nimpl SayHi for Bob {\r\n  fn hi() {\r\n    println!(\"Hi I'm Bob\");\r\n  }\r\n}\r\nfn main() {\r\n  Mom::<Bob>::tell_kid_to_say_hi();\r\n}\r\n```\r\n\r\n\r\nA kind of gross workaround is to use `Kid` in the structure, just to get the type to be constrained. This usually has a runtime cost though, so something like putting a [zero-sized array inside the structure](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=aa7b61b5175bdbf333408240b550427e) works...\r\n\r\n```rust\r\nstruct Mom<Kid> { not_used: [Kid; 0] }\r\nimpl<Kid: SayHi> Mom<Kid> {\r\n...\r\n```\r\n\r\n...but, it just feels like there has to be a better way.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.42.0 (b8cedc004 2020-03-09)\r\nbinary: rustc\r\ncommit-hash: b8cedc00407a4c56a3bda1ed605c6fc166655447\r\ncommit-date: 2020-03-09\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.42.0\r\nLLVM version: 9.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthe type parameter `Kid` is not constrained by the impl trait, self type, or predicates\r\n```\r\n", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70059/timeline", "performed_via_github_app": null, "state_reason": "completed"}