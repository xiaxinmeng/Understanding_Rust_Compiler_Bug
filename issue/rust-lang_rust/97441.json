{"url": "https://api.github.com/repos/rust-lang/rust/issues/97441", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/97441/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/97441/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/97441/events", "html_url": "https://github.com/rust-lang/rust/issues/97441", "id": 1250128770, "node_id": "I_kwDOAAsO6M5Kg3OC", "number": 97441, "title": "Presence of type wildcard affects type inference in async", "user": {"login": "joshlf", "id": 1046063, "node_id": "MDQ6VXNlcjEwNDYwNjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1046063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshlf", "html_url": "https://github.com/joshlf", "followers_url": "https://api.github.com/users/joshlf/followers", "following_url": "https://api.github.com/users/joshlf/following{/other_user}", "gists_url": "https://api.github.com/users/joshlf/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshlf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshlf/subscriptions", "organizations_url": "https://api.github.com/users/joshlf/orgs", "repos_url": "https://api.github.com/users/joshlf/repos", "events_url": "https://api.github.com/users/joshlf/events{/privacy}", "received_events_url": "https://api.github.com/users/joshlf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-05-26T21:50:39Z", "updated_at": "2023-04-26T18:56:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've discovered code which compiles differently for `Foo::Bar` and `Foo::<_>::Bar` when used in an async context.\r\n\r\n@ezrosent produced [this minimization](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=5daa37cb9639d91491511571627b0f87). The core of the repro is:\r\n\r\n```rust\r\nasync fn x() -> Result<usize> {\r\n    let x = once(async { Result::Ok(3) }); // NOTE: This `Result` type is `anyhow::Result`\r\n    let results = x.collect::<Vec<_>>().await;\r\n    Result::Ok(*results.first().and_then(|x| x.as_ref().ok()).unwrap())\r\n}\r\n```\r\n\r\n...which produces this error message:\r\n\r\n```rust\r\n  error[E0698]: type inside `async fn` body must be known in this context\r\n --> src/main.rs:7:26\r\n  |\r\n7 |     let x = once(async { Result::Ok(3) });\r\n  |                          ^^^^^^ cannot infer type for type parameter `E` declared on the type alias `Result`\r\n  |\r\nnote: the type is part of the `async fn` body because of this `await`\r\n --> src/main.rs:8:40\r\n  |\r\n8 |     let results = x.collect::<Vec<_>>().await;\r\n  |                                        ^^^^^^\r\n*/\r\n```\r\n\r\nReplacing `Result::Ok(3)` with `Result::<_>::Ok(3)` causes the code to compile.\r\n\r\nI'm not sure if it's a bug that adding a type wildcard causes this to compile. If it is, then consider this a bug report \ud83d\ude03  If it's not, then the compiler error is pretty confusing, in which case consider this a request to improve the error message.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/97441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/97441/timeline", "performed_via_github_app": null, "state_reason": null}