{"url": "https://api.github.com/repos/rust-lang/rust/issues/66247", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66247/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66247/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66247/events", "html_url": "https://github.com/rust-lang/rust/issues/66247", "id": 520391025, "node_id": "MDU6SXNzdWU1MjAzOTEwMjU=", "number": 66247, "title": "Find a better way to hook panic starting from Miri", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1244499056, "node_id": "MDU6TGFiZWwxMjQ0NDk5MDU2", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-miri", "name": "A-miri", "color": "f7e101", "default": false, "description": "Area: The miri tool"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-09T11:03:16Z", "updated_at": "2020-12-21T14:07:51Z", "closed_at": "2020-12-21T14:07:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "With https://github.com/rust-lang/rust/pull/60026, Miri support unwinding. To this end it needs to hook into the code that libstd uses to start unwinding. The lowest \"funnel\" that all unwinding goes through is `__rust_start_panic`, which is an FFI import in libstd which is then implemented by either `libpanic_abort` or `libpanic_unwind`. However, hooking that in Miri is a bad choice as for unwinding, we need to still run the following code to get the panic payload into the shape that `__rust_maybe_catch_panic` expects:\r\n\r\n```rust\r\npub unsafe extern \"C\" fn __rust_start_panic(payload: usize) -> u32 { \r\n    let payload = payload as *mut &mut dyn BoxMeUp; \r\n    imp::panic(Box::from_raw((*payload).box_me_up())) \r\n} \r\n```\r\nEmulating this code in Miri is a big mess, so instead we right now use `cfg(miri)` to overwrite `imp::panic`. The overwritten code than calls an intrinsic, `miri_start_panic`, which is easy to implement in Miri.\r\n\r\nThis works fairly well but requires collaboration from `libpanic_unwind`, which @eddyb is not happy about. He is proposing a lang item instead, which however I am worried will make the entire panicking story even more messy: there's already at least 2 layers of indirection there where we jump to *whereever* based on what gets linked elsewhere in the crate tree (`panic_handler` and `miri_start_panic`), this would add a third.\r\n\r\nCc @Aaron1011 @oli-obk ", "closed_by": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66247/timeline", "performed_via_github_app": null, "state_reason": "completed"}