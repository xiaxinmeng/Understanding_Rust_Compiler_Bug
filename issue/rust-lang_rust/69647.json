{"url": "https://api.github.com/repos/rust-lang/const-eval/issues/38", "repository_url": "https://api.github.com/repos/rust-lang/const-eval", "labels_url": "https://api.github.com/repos/rust-lang/const-eval/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/const-eval/issues/38/comments", "events_url": "https://api.github.com/repos/rust-lang/const-eval/issues/38/events", "html_url": "https://github.com/rust-lang/const-eval/issues/38", "id": 576870706, "node_id": "MDU6SXNzdWU1NzY4NzA3MDY=", "number": 38, "title": "Use case for const eval - Domain Separated Hash", "user": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-02T22:50:26Z", "updated_at": "2020-03-06T11:27:36Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n@oli-obk You asked for use cases so this is on you ;) \r\nI think that being able to hash in a const fn is a needed use case in production.\r\nDomain separation between hashing different messages is good practice in cryptography [0],[1],[2]\r\nso I'd want to do something along these lines:\r\n`const TaggedHashAppA: Sha256 = Sha256::new().input(b\"AppA\")`\r\nor even:\r\n```\r\nconst TagAppA: [u8; 32] = Sha256::new().input(\"AppA\").finalize();\r\nconst TaggedHashAppA: Sha256 = Sha256::new().input(&TagAppA).input(&TagAppA);\r\n```\r\nyou'll then use it like that:\r\n```\r\nlet mut hashing = TaggedHashAppA;\r\nhashing.input(&msg);\r\nlet hash = hashing.finalize();\r\n```\r\n\r\nThis is a naive implementation that manages to do everything under const eval (you can search for \"Replacement\" to see stuff I had to replace to make it work) except the `input` function on line 60\r\nhttps://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=2a3be44298313834597b0e834a6050af\r\n\r\nHad to replace:\r\n`W[..16].copy_from_slice(&block);`\r\nwith:\r\n```\r\nunsafe {\r\n    let w16 = &mut W as *mut [u32] as *mut [u32; 16];\r\n    *w16 = block;\r\n}\r\n```\r\nAnd unroll a couple of loops.\r\n\r\n[0] https://tools.ietf.org/html/draft-irtf-cfrg-hash-to-curve-05#section-2.2.5\r\n[1] https://github.com/BLAKE3-team/BLAKE3-specs/blob/master/blake3.pdf Section 2.3 \"Domain Separation\"\r\n[2] https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki \"Tagged Hashes\" ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/const-eval/issues/38/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/const-eval/issues/38/timeline", "performed_via_github_app": null, "state_reason": null}