{"url": "https://api.github.com/repos/rust-lang/rust/issues/48009", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48009/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48009/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48009/events", "html_url": "https://github.com/rust-lang/rust/issues/48009", "id": 294263169, "node_id": "MDU6SXNzdWUyOTQyNjMxNjk=", "number": 48009, "title": "Compile time regression with _large_ number of slices", "user": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-05T03:24:15Z", "updated_at": "2020-01-31T22:47:45Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "cc https://github.com/behnam/rust-unic/issues/199\r\n\r\nThe simplest way to show this is to use [`unic_ucd_name` 0.6.0](https://crates.io/crates/unic-ucd-name/0.6.0), which has two huge files for the Unicode code point Name property, [`name_map.rsv`](https://github.com/behnam/rust-unic/blob/v0.6.0/unic/ucd/name/tables/name_map.rsv) (1.56 MB of `('character', &[PARTS, OF, ITS, NAME]),`) and [`name_values.rsd`](https://github.com/behnam/rust-unic/blob/v0.6.0/unic/ucd/name/tables/name_values.rsd) (444 KB of `const NAME_BIT: &str = \"NAME_BIT\";`). The purpose is to generate a large binary-search slice from characters to their name while deduplicating _very_ common name fragments like `LETTER`.\r\n\r\nWith this small `main.rs`\r\n\r\n```rust\r\nextern crate unic_ucd_name;\r\n\r\nfn main() {\r\n    let name = unic_ucd_name::Name::of('A').unwrap();\r\n    println!(\"{}\", name);\r\n}\r\n```\r\n\r\nand a non-existent `target` folder, I get the following compile times:\r\n\r\n```\r\nD:\\Christopher\\Documents\\Code\\Rust\\playground>rustup update\r\ninfo: syncing channel updates for 'stable-x86_64-pc-windows-msvc'\r\ninfo: syncing channel updates for 'beta-x86_64-pc-windows-msvc'\r\ninfo: syncing channel updates for 'nightly-x86_64-pc-windows-msvc'\r\ninfo: checking for self-updates\r\n\r\n   stable-x86_64-pc-windows-msvc unchanged - rustc 1.23.0 (766bd11c8 2018-01-01)\r\n     beta-x86_64-pc-windows-msvc unchanged - rustc 1.24.0-beta.11 (03f456d3c 2018-02-03)\r\n  nightly-x86_64-pc-windows-msvc unchanged - rustc 1.25.0-nightly (0c6091fbd 2018-02-04)\r\n\r\nD:\\Christopher\\Documents\\Code\\Rust\\playground>cargo +beta build\r\n   Compiling unic-ucd-core v0.6.0\r\n   Compiling unic-char-range v0.6.0\r\n   Compiling unic-utils v0.6.0\r\n   Compiling unic-ucd-name v0.6.0\r\n   Compiling playground v0.0.0 (file:///D:/Christopher/Documents/Code/Rust/playground)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 18.23 secs\r\n\r\nD:\\Christopher\\Documents\\Code\\Rust\\playground>cargo +nightly build\r\n   Compiling unic-char-range v0.6.0\r\n   Compiling unic-ucd-core v0.6.0\r\n   Compiling unic-utils v0.6.0\r\n   Compiling unic-ucd-name v0.6.0\r\n   Compiling playground v0.0.0 (file:///D:/Christopher/Documents/Code/Rust/playground)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 139.35 secs\r\n```\r\n\r\n<details><summary><code>time-passes</code> for <code>unic_ucd_name</code></summary>\r\n\r\n```\r\nD:\\Christopher\\Documents\\Code\\Rust\\rust-unic\\unic\\ucd\\name>cargo +nightly rustc -- -Z time-passes\r\n   Compiling unic-char-range v0.6.0 (file:///D:/Christopher/Documents/Code/Rust/rust-unic/unic/char/range)\r\n   Compiling unic-ucd-core v0.6.0 (file:///D:/Christopher/Documents/Code/Rust/rust-unic/unic/ucd/core)\r\n   Compiling unic-utils v0.6.0 (file:///D:/Christopher/Documents/Code/Rust/rust-unic/unic/utils)\r\n   Compiling unic-ucd-name v0.6.0 (file:///D:/Christopher/Documents/Code/Rust/rust-unic/unic/ucd/name)\r\n  time: 0.009; rss: 17MB        parsing\r\n  time: 0.000; rss: 18MB        recursion limit\r\n  time: 0.000; rss: 18MB        crate injection\r\n  time: 0.000; rss: 18MB        plugin loading\r\n  time: 0.000; rss: 18MB        background load prev dep-graph\r\n  time: 0.000; rss: 18MB        plugin registration\r\n  time: 0.654; rss: 105MB       expansion\r\n  time: 0.000; rss: 105MB       maybe building test harness\r\n  time: 0.010; rss: 105MB       maybe creating a macro crate\r\n  time: 0.032; rss: 105MB       creating allocators\r\n  time: 0.010; rss: 105MB       AST validation\r\n  time: 0.122; rss: 122MB       name resolution\r\n  time: 0.027; rss: 122MB       complete gated feature checking\r\n  time: 0.000; rss: 122MB       blocked while dep-graph loading finishes\r\n  time: 0.145; rss: 170MB       lowering ast -> hir\r\n  time: 0.056; rss: 170MB       early lint checks\r\n  time: 0.178; rss: 179MB       indexing hir\r\n  time: 0.000; rss: 122MB       load query result cache\r\n  time: 0.000; rss: 122MB       looking for entry point\r\n  time: 0.000; rss: 122MB       looking for plugin registrar\r\n  time: 0.011; rss: 122MB       loop checking\r\n  time: 0.040; rss: 122MB       static item recursion checking\r\n  time: 0.041; rss: 135MB       attribute checking\r\n  time: 0.063; rss: 144MB       stability checking\r\n  time: 0.293; rss: 202MB       type collecting\r\n  time: 0.002; rss: 202MB       outlives testing\r\n  time: 0.000; rss: 202MB       impl wf inference\r\n  time: 0.047; rss: 220MB       coherence checking\r\n  time: 0.002; rss: 220MB       variance testing\r\n  time: 0.248; rss: 261MB       wf checking\r\n  time: 4.396; rss: 337MB       item-types checking\r\n  time: 0.032; rss: 341MB       item-bodies checking\r\n  time: 126.260; rss: 550MB     const checking          # !!!!!!!!!!\r\n  time: 0.183; rss: 551MB       privacy checking\r\n  time: 0.025; rss: 551MB       intrinsic checking\r\n  time: 0.046; rss: 552MB       match checking\r\n  time: 0.011; rss: 552MB       liveness checking\r\n  time: 0.554; rss: 561MB       borrow checking\r\n  time: 0.026; rss: 564MB       MIR borrow checking\r\n  time: 0.008; rss: 564MB       MIR effect checking\r\n  time: 0.049; rss: 565MB       death checking\r\n  time: 0.000; rss: 565MB       unused lib feature checking\r\n  time: 0.166; rss: 565MB       lint checking\r\n  time: 0.000; rss: 565MB       resolving dependency formats\r\n    time: 1.136; rss: 615MB     write metadata\r\n    time: 0.108; rss: 618MB     translation item collection\r\n    time: 0.002; rss: 618MB     codegen unit partitioning\r\n    time: 0.001; rss: 635MB     llvm function passes [49a7n47po4ttqjl7]\r\n    time: 0.001; rss: 635MB     llvm module passes [49a7n47po4ttqjl7]\r\n    time: 0.000; rss: 636MB     llvm function passes [3ayaeypdcro9d6yk]\r\n    time: 0.000; rss: 636MB     llvm module passes [3ayaeypdcro9d6yk]\r\n    time: 0.000; rss: 636MB     llvm function passes [3kfx4ynvkmi2y9i5]\r\n    time: 0.000; rss: 636MB     llvm module passes [3kfx4ynvkmi2y9i5]\r\n    time: 0.000; rss: 636MB     llvm function passes [45nf4z58qqykpcpi]\r\n    time: 0.000; rss: 636MB     llvm module passes [45nf4z58qqykpcpi]\r\n    time: 0.000; rss: 637MB     llvm function passes [kt25z0521ngsjub]\r\n    time: 0.000; rss: 637MB     llvm module passes [kt25z0521ngsjub]\r\n    time: 0.000; rss: 639MB     llvm function passes [2ny9ynlpevlhfa8x]\r\n    time: 0.000; rss: 640MB     llvm module passes [2ny9ynlpevlhfa8x]\r\n    time: 0.001; rss: 642MB     llvm function passes [1im38lueib99jsk0]\r\n    time: 0.000; rss: 644MB     llvm module passes [1im38lueib99jsk0]\r\n    time: 0.019; rss: 654MB     codegen passes [3kfx4ynvkmi2y9i5]\r\n    time: 0.024; rss: 656MB     codegen passes [3ayaeypdcro9d6yk]\r\n    time: 0.014; rss: 657MB     codegen passes [45nf4z58qqykpcpi]\r\n    time: 0.016; rss: 658MB     codegen passes [kt25z0521ngsjub]\r\n    time: 0.001; rss: 658MB     llvm function passes [2lyh15q6cjwzy18c]\r\n    time: 0.000; rss: 659MB     llvm module passes [2lyh15q6cjwzy18c]\r\n    time: 0.015; rss: 659MB     codegen passes [2ny9ynlpevlhfa8x]\r\n    time: 0.036; rss: 659MB     codegen passes [49a7n47po4ttqjl7]\r\n    time: 0.012; rss: 659MB     codegen passes [1im38lueib99jsk0]\r\n    time: 0.010; rss: 659MB     codegen passes [2lyh15q6cjwzy18c]\r\n    time: 0.000; rss: 677MB     llvm function passes [4ypvbwho0bu5tnww]\r\n    time: 0.000; rss: 677MB     llvm module passes [4ypvbwho0bu5tnww]\r\n    time: 0.000; rss: 677MB     llvm function passes [43v6g0y2xsxoggnt]\r\n    time: 0.000; rss: 678MB     llvm function passes [9elsx31vb4it187]\r\n    time: 0.000; rss: 678MB     llvm function passes [16u6js6g0l3k1ic6]\r\n    time: 0.000; rss: 678MB     llvm module passes [43v6g0y2xsxoggnt]\r\n    time: 0.000; rss: 678MB     llvm function passes [3e8c0xfx7ikmlnfk]\r\n    time: 0.000; rss: 678MB     llvm module passes [9elsx31vb4it187]\r\n    time: 0.000; rss: 680MB     llvm function passes [9fcb3syd3ne5k0n]\r\n    time: 0.000; rss: 679MB     llvm module passes [16u6js6g0l3k1ic6]\r\n    time: 0.000; rss: 679MB     llvm function passes [8xzrsc1ux72v29j]\r\n    time: 0.000; rss: 679MB     llvm module passes [3e8c0xfx7ikmlnfk]\r\n    time: 0.000; rss: 679MB     llvm module passes [9fcb3syd3ne5k0n]\r\n    time: 0.000; rss: 679MB     llvm module passes [8xzrsc1ux72v29j]\r\n    time: 0.017; rss: 679MB     codegen passes [4ypvbwho0bu5tnww]\r\n    time: 0.013; rss: 679MB     codegen passes [9elsx31vb4it187]\r\n    time: 0.018; rss: 679MB     codegen passes [43v6g0y2xsxoggnt]\r\n    time: 0.000; rss: 679MB     llvm function passes [c6lbtaiefvx3wya]\r\n    time: 0.016; rss: 679MB     codegen passes [16u6js6g0l3k1ic6]\r\n    time: 0.000; rss: 679MB     llvm module passes [c6lbtaiefvx3wya]\r\n    time: 0.000; rss: 679MB     llvm function passes [2kjrmm4fe2aha78f]\r\n    time: 0.000; rss: 679MB     llvm function passes [4ezmh1vbs95c5ack]\r\n    time: 0.013; rss: 679MB     codegen passes [9fcb3syd3ne5k0n]\r\n    time: 0.000; rss: 679MB     llvm module passes [2kjrmm4fe2aha78f]\r\n    time: 0.000; rss: 679MB     llvm function passes [2jqywn86b2gsqohu]\r\n    time: 0.000; rss: 679MB     llvm module passes [4ezmh1vbs95c5ack]\r\n    time: 0.015; rss: 679MB     codegen passes [3e8c0xfx7ikmlnfk]\r\n    time: 0.000; rss: 679MB     llvm function passes [4yh8x2b62dcih00t]\r\n    time: 0.000; rss: 681MB     llvm module passes [4yh8x2b62dcih00t]\r\n    time: 0.017; rss: 681MB     codegen passes [8xzrsc1ux72v29j]\r\n    time: 0.000; rss: 679MB     llvm module passes [2jqywn86b2gsqohu]\r\n    time: 0.000; rss: 681MB     llvm function passes [1mvmz58owquyropc]\r\n    time: 0.074; rss: 681MB     llvm function passes [2iv7jmandrgcbb7e]\r\n    time: 0.000; rss: 681MB     llvm module passes [1mvmz58owquyropc]\r\n    time: 0.000; rss: 681MB     llvm function passes [4xq48u46a1pwiqn7]\r\n    time: 0.013; rss: 681MB     codegen passes [c6lbtaiefvx3wya]\r\n    time: 0.000; rss: 681MB     llvm module passes [2iv7jmandrgcbb7e]\r\n    time: 0.000; rss: 681MB     llvm module passes [4xq48u46a1pwiqn7]\r\n    time: 0.000; rss: 677MB     llvm function passes [48721dc4k5qxei0u]\r\n    time: 0.015; rss: 677MB     codegen passes [2kjrmm4fe2aha78f]\r\n    time: 0.000; rss: 677MB     llvm module passes [48721dc4k5qxei0u]\r\n    time: 0.000; rss: 677MB     llvm function passes [98g0d9x8aw3akpe]\r\n    time: 0.000; rss: 677MB     llvm module passes [98g0d9x8aw3akpe]\r\n    time: 0.022; rss: 677MB     codegen passes [4ezmh1vbs95c5ack]\r\n    time: 0.023; rss: 677MB     codegen passes [4yh8x2b62dcih00t]\r\n    time: 0.000; rss: 677MB     llvm function passes [2f0hry2t7c05ttdi]\r\n    time: 0.000; rss: 677MB     llvm module passes [2f0hry2t7c05ttdi]\r\n    time: 0.000; rss: 678MB     llvm function passes [1dqvxks6k2bzkxe]\r\n    time: 0.018; rss: 678MB     codegen passes [1mvmz58owquyropc]\r\n    time: 0.000; rss: 678MB     llvm module passes [1dqvxks6k2bzkxe]\r\n    time: 0.019; rss: 678MB     codegen passes [2jqywn86b2gsqohu]\r\n    time: 0.000; rss: 678MB     llvm function passes [23tqyymcb18u96mb]\r\n    time: 0.000; rss: 678MB     llvm module passes [23tqyymcb18u96mb]\r\n    time: 0.000; rss: 678MB     llvm function passes [4jdnq7xfjeka1bt]\r\n    time: 0.000; rss: 678MB     llvm module passes [4jdnq7xfjeka1bt]\r\n    time: 0.029; rss: 678MB     codegen passes [4xq48u46a1pwiqn7]\r\n    time: 0.000; rss: 679MB     llvm function passes [1y16o1qfye96o7m0]\r\n    time: 0.000; rss: 679MB     llvm module passes [1y16o1qfye96o7m0]\r\n    time: 0.014; rss: 679MB     codegen passes [48721dc4k5qxei0u]\r\n    time: 0.705; rss: 679MB     translate to LLVM IR\r\n    time: 0.000; rss: 679MB     assert dep graph\r\n    time: 0.000; rss: 679MB     llvm function passes [v6ozwtpojmqfurc]\r\n    time: 0.000; rss: 679MB     llvm module passes [v6ozwtpojmqfurc]\r\n    time: 0.012; rss: 679MB     codegen passes [98g0d9x8aw3akpe]\r\n    time: 0.000; rss: 679MB     llvm function passes [524bze3gcv99ucga]\r\n    time: 0.000; rss: 679MB     llvm module passes [524bze3gcv99ucga]\r\n    time: 0.012; rss: 680MB     codegen passes [2f0hry2t7c05ttdi]\r\n    time: 0.000; rss: 680MB     llvm function passes [2r82puffnvvb8iic]\r\n    time: 0.000; rss: 680MB     llvm module passes [2r82puffnvvb8iic]\r\n    time: 0.014; rss: 681MB     codegen passes [1dqvxks6k2bzkxe]\r\n    time: 0.013; rss: 681MB     codegen passes [4jdnq7xfjeka1bt]\r\n    time: 0.014; rss: 681MB     codegen passes [23tqyymcb18u96mb]\r\n    time: 0.000; rss: 681MB     llvm function passes [2xnvmuhjbhd7vxcm]\r\n    time: 0.000; rss: 681MB     llvm module passes [2xnvmuhjbhd7vxcm]\r\n    time: 0.012; rss: 683MB     codegen passes [1y16o1qfye96o7m0]\r\n    time: 0.010; rss: 683MB     codegen passes [2r82puffnvvb8iic]\r\n    time: 0.011; rss: 683MB     codegen passes [524bze3gcv99ucga]\r\n    time: 0.011; rss: 683MB     codegen passes [v6ozwtpojmqfurc]\r\n    time: 0.006; rss: 686MB     codegen passes [2xnvmuhjbhd7vxcm]\r\n      time: 0.543; rss: 690MB   persist query result cache\r\n      time: 0.146; rss: 725MB   persist dep-graph\r\n    time: 0.690; rss: 725MB     serialize dep graph\r\n  time: 2.837; rss: 725MB       translation\r\n    time: 1.168; rss: 275MB     codegen passes [2iv7jmandrgcbb7e]\r\n  time: 2.562; rss: 237MB       LLVM passes\r\n  time: 0.005; rss: 237MB       serialize work products\r\n  time: 0.491; rss: 237MB       linking\r\n    Finished dev [unoptimized + debuginfo] target(s) in 141.52 secs\r\n```\r\n</details>\r\n\r\n(`x86_64-pc-windows-msvc`)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48009/timeline", "performed_via_github_app": null, "state_reason": null}