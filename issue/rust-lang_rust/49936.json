{"url": "https://api.github.com/repos/rust-lang/rust/issues/49936", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49936/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49936/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49936/events", "html_url": "https://github.com/rust-lang/rust/issues/49936", "id": 314128492, "node_id": "MDU6SXNzdWUzMTQxMjg0OTI=", "number": 49936, "title": "[nll] compiler spinning forever", "user": {"login": "zengsai", "id": 163317, "node_id": "MDQ6VXNlcjE2MzMxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/163317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zengsai", "html_url": "https://github.com/zengsai", "followers_url": "https://api.github.com/users/zengsai/followers", "following_url": "https://api.github.com/users/zengsai/following{/other_user}", "gists_url": "https://api.github.com/users/zengsai/gists{/gist_id}", "starred_url": "https://api.github.com/users/zengsai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zengsai/subscriptions", "organizations_url": "https://api.github.com/users/zengsai/orgs", "repos_url": "https://api.github.com/users/zengsai/repos", "events_url": "https://api.github.com/users/zengsai/events{/privacy}", "received_events_url": "https://api.github.com/users/zengsai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 867466241, "node_id": "MDU6TGFiZWw4Njc0NjYyNDE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-performant", "name": "NLL-performant", "color": "f799ea", "default": false, "description": "Working towards the \"performance is good\" goal"}], "state": "closed", "locked": false, "assignee": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-04-13T14:25:55Z", "updated_at": "2018-06-29T20:46:56Z", "closed_at": "2018-06-29T20:46:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "dev env:\r\n\r\n```\r\nDefault host: x86_64-apple-darwin\r\n\r\nnightly-x86_64-apple-darwin (default)\r\nrustc 1.27.0-nightly (ad610bed8 2018-04-11)\r\n```\r\n\r\ncode like this:\r\n\r\n```rust\r\npub struct Operations<'a>(pub &'a Conn);\r\n\r\nimpl<'a> Operations<'a> {\r\n    pub fn query(&self, query: Option<Query>) -> QueryResult<(Vec<Dian>, i64, i64)> {\r\n        // if query is null { return dians::table.paginate(1).load_and_count_numbers(self.0) }\r\n        // if query.filters is not null { create_filter_param;  }\r\n        // if query.page is not null { create_paginated; }\r\n\r\n        let default_page_params = PageParams {\r\n            size: 10,\r\n            number: 1,\r\n        };\r\n\r\n        let page_info = query\r\n            .as_ref()\r\n            .and_then(|q| q.page)\r\n            .map_or(default_page_params, |p| p);\r\n\r\n        let preadite: Box<BoxableExpression<dians::table, Db, SqlType = Bool>> = query\r\n            .and_then(|q| q.filters)\r\n            .map(|fs| {\r\n                fs.iter()    // BUG?: focus on this line.\r\n                    .filter_map(|(key, val)| {\r\n                        match key.as_str() {\r\n                            \"name\" => Some(Box::new(dians::name.eq(val)) as Box<_>),\r\n                            \"mima\" => Some(Box::new(dians::mima.eq(val)) as Box<_>),\r\n                            _ => None,\r\n                        }\r\n                    })\r\n                    .fold(\r\n                        Box::new(true.into_sql::<Bool>())\r\n                            as Box<BoxableExpression<dians::table, Db, SqlType = Bool>>,\r\n                        |v, e: Box<BoxableExpression<dians::table, Db, SqlType = Bool>>| {\r\n                            Box::new(v.and(e))\r\n                        },\r\n                    )\r\n            })\r\n            .unwrap_or(Box::new(true.into_sql::<Bool>()));\r\n\r\n        let query = dians::table\r\n            .as_query()\r\n            .filter(preadite)\r\n            .paginate(page_info.number as i64)\r\n            .size(page_info.size as i64);\r\n\r\n\r\n        let debug = ::diesel::debug_query::<Db, _>(&query);\r\n\r\n        println!(\"debug: {:?}\", debug);\r\n\r\n        query.load_and_count_numbers(self.0)\r\n    }\r\n\r\n    pub fn query_by_id(&self, id: i32) -> QueryResult<Dian> {\r\n        dians::table.filter(dians::id.eq(id)).first(self.0)\r\n    }\r\n}\r\n```\r\nand then run `RUST_LOG=logger=info co watch -x run`, then the compiler keep running, It seams will not finish the compile, and my cups are almost full-load. after a while, my Iterm2 into no response mode.\r\n\r\n![image](https://user-images.githubusercontent.com/163317/38739968-f1730dba-3f68-11e8-9374-d62a77b98bdd.png)\r\n\r\nafter change this line `               fs.iter()    // BUG?: focus on this line.` to `               fs.into_iter()    // BUG?: focus on this line.` compiler restored to normal.", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49936/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49936/timeline", "performed_via_github_app": null, "state_reason": "completed"}