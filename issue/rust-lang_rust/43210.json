{"url": "https://api.github.com/repos/rust-lang/rust/issues/43210", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43210/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43210/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43210/events", "html_url": "https://github.com/rust-lang/rust/issues/43210", "id": 242619142, "node_id": "MDU6SXNzdWUyNDI2MTkxNDI=", "number": 43210, "title": "the compiler unexpectedly panicked", "user": {"login": "lagudomeze", "id": 18391140, "node_id": "MDQ6VXNlcjE4MzkxMTQw", "avatar_url": "https://avatars.githubusercontent.com/u/18391140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lagudomeze", "html_url": "https://github.com/lagudomeze", "followers_url": "https://api.github.com/users/lagudomeze/followers", "following_url": "https://api.github.com/users/lagudomeze/following{/other_user}", "gists_url": "https://api.github.com/users/lagudomeze/gists{/gist_id}", "starred_url": "https://api.github.com/users/lagudomeze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lagudomeze/subscriptions", "organizations_url": "https://api.github.com/users/lagudomeze/orgs", "repos_url": "https://api.github.com/users/lagudomeze/repos", "events_url": "https://api.github.com/users/lagudomeze/events{/privacy}", "received_events_url": "https://api.github.com/users/lagudomeze/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-13T08:09:59Z", "updated_at": "2017-07-13T08:42:27Z", "closed_at": "2017-07-13T08:42:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "<short summary of the bug>\r\n\r\nI tried this code:\r\n\r\nextern crate nanomsg;\r\nextern crate futures;\r\n\r\nuse std::sync::mpsc::*;\r\nuse std::thread::{Thread, current};\r\n\r\npub use self::futures::{Future, Poll, Async};\r\n\r\npub use self::nanomsg::{PollFd, Socket, PollRequest, PollInOut};\r\n\r\ntype Notify = (PollFd, Thread);\r\n\r\npub struct NanoCore {\r\n    tx: Sender<Notify>,\r\n    rx: Receiver<Notify>\r\n}\r\n\r\npub enum NanoCoreError {\r\n    NanoError(nanomsg::Error),\r\n    SendError(SendError<Notify>),\r\n    RecvError(RecvError),\r\n}\r\n\r\nimpl From<nanomsg::Error> for NanoCoreError {\r\n    fn from(e: nanomsg::Error) -> Self {\r\n        NanoCoreError::NanoError(e)\r\n    }\r\n}\r\n\r\nimpl From<SendError<Notify>> for NanoCoreError {\r\n    fn from(e: SendError<Notify>) -> Self {\r\n        NanoCoreError::SendError(e)\r\n    }\r\n}\r\n\r\nimpl From<RecvError> for NanoCoreError {\r\n    fn from(e: RecvError) -> Self {\r\n        NanoCoreError::RecvError(e)\r\n    }\r\n}\r\n\r\nstruct ReadReady {\r\n    socket: Socket,\r\n    sender: Sender<(PollFd, Thread)>,\r\n}\r\n\r\nimpl ReadReady {\r\n    fn new(socket: Socket, core: &NanoCore) -> ReadReady {\r\n        ReadReady { socket: socket, sender: core.tx.clone() }\r\n    }\r\n\r\n    fn new_poll_fd(&self) -> PollFd {\r\n        self.socket.new_pollfd(PollInOut::In)\r\n    }\r\n}\r\n\r\nimpl Future for ReadReady {\r\n    type Item = Socket;\r\n    type Error = NanoCoreError;\r\n\r\n    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {\r\n        self.sender.send((self.new_poll_fd(), current()))?;\r\n        Ok(Async::NotReady)\r\n    }\r\n}\r\n\r\nimpl NanoCore {\r\n    pub fn new() -> NanoCore {\r\n        let (tx, rx) = channel();\r\n        NanoCore {\r\n            tx: tx,\r\n            rx: rx\r\n        }\r\n    }\r\n\r\n    pub fn poll(&self) -> nanomsg::Result<()> {\r\n        let timeout = 10;\r\n\r\n        Ok(())\r\n    }\r\n}\r\n\r\nI expected to see this happen: <explanation>\r\n\r\nInstead, this happened: <explanation>\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n\r\nrustc 1.18.0 (03fc9d622 2017-06-06)\r\nbinary: rustc\r\ncommit-hash: 03fc9d622e0ea26a3d37f5ab030737fcca6928b9\r\ncommit-date: 2017-06-06\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.18.0\r\nLLVM version: 3.9\r\n\r\n\r\nBacktrace:\r\n\r\n\r\nthread 'rustc' panicked at 'invalid lint-id `trivial_numeric_casts`', src\\librustc\\lint\\context.rs:1322\r\nstack backtrace:\r\n   0: <std::time::SystemTimeError as core::fmt::Display>::fmt\r\n   1: std::panicking::Location::line\r\n   2: std::panicking::Location::line\r\n   3: std::panicking::rust_panic_with_hook\r\n   4: std::panicking::begin_panic_fmt\r\n   5: std::panicking::begin_panic_fmt\r\n   6: <unknown>\r\n   7: rustc_metadata::decoder::<impl rustc_metadata::cstore::CrateMetadata>::item_body_tables\r\n   8: rustc_metadata::cstore_impl::provide\r\n   9: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables<'tcx>>::try_get\r\n  10: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables<'tcx>>::get\r\n  11: rustc::ty::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::item_tables\r\n  12: rustc_const_eval::eval::provide\r\n  13: rustc::ty::maps::<impl rustc::ty::maps::queries::const_eval<'tcx>>::try_get\r\n  14: rustc::ty::maps::<impl rustc::ty::maps::queries::const_eval<'tcx>>::get\r\n  15: rustc::ty::layout::Layout::compute_uncached\r\n  16: rustc::ty::util::<impl rustc::ty::TyS<'tcx>>::needs_drop_uncached\r\n  17: <unknown>\r\n  18: <unknown>\r\n  19: rustc::ty::layout::Layout::compute_uncached\r\n  20: <unknown>\r\n  21: <unknown>\r\n  22: <unknown>\r\n  23: <unknown>\r\n  24: rustc::ty::layout::Layout::compute_uncached\r\n  25: <rustc_lint::types::VariantSizeDifferences as rustc::lint::LateLintPass<'a, 'tcx>>::check_item\r\n  26: rustc::lint::context::gather_attrs\r\n  27: <rustc::lint::context::LateContext<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_mod\r\n  28: rustc::hir::intravisit::NestedVisitorMap::inter\r\n  29: rustc::lint::context::gather_attrs\r\n  30: <rustc::lint::context::LateContext<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_mod\r\n  31: rustc::lint::context::check_crate\r\n  32: rustc_driver::driver::count_nodes\r\n  33: <unknown>\r\n  34: rustc_driver::driver::count_nodes\r\n  35: rustc_driver::driver::compile_input\r\n  36: rustc_driver::run_compiler\r\n  37: <unknown>\r\n  38: _rust_maybe_catch_panic\r\n  39: <unknown>\r\n  40: std::sys::imp::thread::Thread::new\r\n  41: BaseThreadInitThunk\r\n", "closed_by": {"login": "lagudomeze", "id": 18391140, "node_id": "MDQ6VXNlcjE4MzkxMTQw", "avatar_url": "https://avatars.githubusercontent.com/u/18391140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lagudomeze", "html_url": "https://github.com/lagudomeze", "followers_url": "https://api.github.com/users/lagudomeze/followers", "following_url": "https://api.github.com/users/lagudomeze/following{/other_user}", "gists_url": "https://api.github.com/users/lagudomeze/gists{/gist_id}", "starred_url": "https://api.github.com/users/lagudomeze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lagudomeze/subscriptions", "organizations_url": "https://api.github.com/users/lagudomeze/orgs", "repos_url": "https://api.github.com/users/lagudomeze/repos", "events_url": "https://api.github.com/users/lagudomeze/events{/privacy}", "received_events_url": "https://api.github.com/users/lagudomeze/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43210/timeline", "performed_via_github_app": null, "state_reason": "completed"}