{"url": "https://api.github.com/repos/rust-lang/rust/issues/106255", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/106255/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/106255/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/106255/events", "html_url": "https://github.com/rust-lang/rust/issues/106255", "id": 1513645208, "node_id": "I_kwDOAAsO6M5aOGSY", "number": 106255, "title": "Iterator::max_by_key twice as slow than manual implementation", "user": {"login": "fasterthanlime", "id": 7998310, "node_id": "MDQ6VXNlcjc5OTgzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7998310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasterthanlime", "html_url": "https://github.com/fasterthanlime", "followers_url": "https://api.github.com/users/fasterthanlime/followers", "following_url": "https://api.github.com/users/fasterthanlime/following{/other_user}", "gists_url": "https://api.github.com/users/fasterthanlime/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasterthanlime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasterthanlime/subscriptions", "organizations_url": "https://api.github.com/users/fasterthanlime/orgs", "repos_url": "https://api.github.com/users/fasterthanlime/repos", "events_url": "https://api.github.com/users/fasterthanlime/events{/privacy}", "received_events_url": "https://api.github.com/users/fasterthanlime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-12-29T11:27:46Z", "updated_at": "2023-02-03T11:12:20Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here's the reproduction repo:\r\n\r\n  * https://github.com/fasterthanlime/slow-max-by-key\r\n \r\nThe README has repro instructions (essentially `cargo bench`, via criterion). I tried to golf it down a little, but it still has a bunch of dependencies. Sorry!\r\n\r\n---\r\n\r\nEssentially, this is fast (mvs is an iterator):\r\n\r\n```rust\r\n        // find best move\r\n        {\r\n            let mut best_state: Option<State<'net>> = None;\r\n\r\n            for mv in mvs {\r\n                let mut next: State<'net> = state.clone();\r\n                let actor = &mut next.actors[0];\r\n                actor.in_progress_move = Some(mv);\r\n                actor.step(next.net, &mut next.inner);\r\n\r\n                let end_state: State<'net> = next.run_manual();\r\n                if end_state.pressure > best_state.as_ref().map(|s| s.pressure).unwrap_or_default()\r\n                {\r\n                    best_state = Some(end_state);\r\n                }\r\n            }\r\n\r\n            match best_state {\r\n                Some(state) => {\r\n                    // we reached the end\r\n                    state\r\n                }\r\n                None => {\r\n                    // no moves possible, just wait it out\r\n                    state.run_manual()\r\n                }\r\n            }\r\n        }\r\n```\r\n\r\nBut this is slow:\r\n\r\n```rust\r\n        mvs.map(|mv| {\r\n            let mut next: State<'net> = state.clone();\r\n            let actor = &mut next.actors[0];\r\n            actor.in_progress_move = Some(mv);\r\n            actor.step(next.net, &mut next.inner);\r\n            next.run_max_by_key()\r\n        })\r\n        .max_by_key(|state| state.pressure)\r\n        .unwrap_or_else(|| state.run_max_by_key())\r\n```\r\n\r\nWhich is a shame, since I like the latter a lot more!\r\n\r\nReproduced with:\r\n\r\n```shell\r\n$ rustc -vV\r\nrustc 1.68.0-nightly (270c94e48 2022-12-28)\r\nbinary: rustc\r\ncommit-hash: 270c94e484e19764a2832ef918c95224eb3f17c7\r\ncommit-date: 2022-12-28\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.68.0-nightly\r\nLLVM version: 15.0.\r\n```\r\n\r\nPrior art: #52543 (which I couldn't reproduce)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/106255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/106255/timeline", "performed_via_github_app": null, "state_reason": null}