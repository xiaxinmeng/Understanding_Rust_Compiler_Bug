{"url": "https://api.github.com/repos/rust-lang/rust/issues/27579", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/27579/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/27579/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/27579/events", "html_url": "https://github.com/rust-lang/rust/issues/27579", "id": 99635740, "node_id": "MDU6SXNzdWU5OTYzNTc0MA==", "number": 27579, "title": "Projections, lifetimes, and WF tracking issue (RFC 1214)", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 89436934, "node_id": "MDU6TGFiZWw4OTQzNjkzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-RFC-approved", "name": "B-RFC-approved", "color": "d304cb", "default": false, "description": "Approved by a merged RFC but not yet implemented."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 693557542, "node_id": "MDU6TGFiZWw2OTM1NTc1NDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-traits", "name": "WG-traits", "color": "c2e0c6", "default": false, "description": "Working group: Traits, https://internals.rust-lang.org/t/announcing-traits-working-group/6804"}, {"id": 3537250192, "node_id": "LA_kwDOAAsO6M7S1ieQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-needs-summary", "name": "S-tracking-needs-summary", "color": "4682b4", "default": false, "description": "It's hard to tell what's been done and what hasn't! Someone should do some investigation."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2015-08-07T12:03:57Z", "updated_at": "2022-06-17T13:09:43Z", "closed_at": "2022-06-17T13:09:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Tracking issue for rust-lang/rfcs#1214\r\n- [x] rust-lang/rust#26406\r\n- [x] ~~rust-lang/rust#24622~~\r\n- [x] ~~rust-lang/rust#23442~~\r\n- [x] ~~rust-lang/rust#21748~~\r\n- [x] ~~rust-lang/rust#25692~~\r\n- [x] ~~rust-lang/rust#21953~~\r\n- [x] ~~rust-lang/rust#27592~~\r\n- [ ] Just take implied bounds from arguments. Implementing this probably requires improving `check_method`\r\n- [x] ~~rust-lang/rust#27583~~\r\n- [ ] Clarify WF checking for negative impls\r\n- [ ] WF checking for object fragments where `Self` is not needed\r\n- [ ] static methods should be able to assume that `Self` is WF, I believe (at least in trait impls)\r\n- [ ] WF for trait objects should include the trait bounds\r\n- [ ] rust-lang/rust#27675: object-safe traits can have associated types with unchecked bounds (unsoundness bug)\r\n### After warning cycle is complete\r\n- [x] Remove old WF check\r\n- [ ] Remove RFC1214 origins and warnings\r\n- [ ] Remove special treatment of `ReEmpty` in the outlives relation\r\n### Testing chart\r\n\r\n| Subject | Tests | Issues |\r\n| --- | --- | --- |\r\n| OutlivesScalar | regions-outlives-scalar.rs |  |\r\n| OutlivesNominalType | regions-outlives-nominal-type-struct.rs |  |\r\n|  | regions-outlives-nominal-type-enum.rs |  |\r\n| OutlivesReference | all of the other tests |  |\r\n| OutlivesObject | compile-fail/wf-in-obj-type-static.rs |  |\r\n| OutlivesProjectionEnv | compile-fail/wf-in-obj-type-static.rs |  |\r\n| WfObject, lifetime bounds | compile-fail/regions-wf-trait-object.rs |  |\r\n| WfSlice | compile-file/wf-array-elem-sized.rs |  |\r\n| const | wf-const-type.rs |  |\r\n| struct, bound | wf-struct-bound.rs |  |\r\n| struct, field | ...many other tests... |  |\r\n| enum, bound | wf-enum-bound.rs |  |\r\n| enum, field | ...many other tests... |  |\r\n| trait, bound | wf-trait-bound.rs |  |\r\n| trait, assoc type default | wf-trait-associated-type-trait.rs |  |\r\n|  | wf-trait-associated-type-region.rs |  |\r\n| trait, assoc type bound | wf-trait-associated-type-bound.rs |  |\r\n| trait, default fn, arg | wf-trait-default-fn-arg.rs |  |\r\n| trait, default fn, return | wf-trait-default-fn-ret.rs |  |\r\n| trait, default fn, where clause | wf-trait-default-fn-where-clause.rs |  |\r\n| trait, fn, arg | wf-trait-fn-arg.rs |  |\r\n| trait, fn, return | wf-trait-fn-ret.rs |  |\r\n| trait, fn, where clause | wf-trait-fn-where-clause.rs |  |\r\n| fn item, argument type | wf-in-fn-arg.rs |  |\r\n| fn item, return type | wf-in-fn-ret.rs |  |\r\n| fn item, where clause | wf-in-fn-where-clause.rs |  |\r\n| inherent impl, where clause | wf-inherent-impl-where-clause.rs |  |\r\n| inherent impl, fn, where clause | wf-inherent-impl-method-where-clause.rs |  |\r\n| impl, assoc type default | wf-impl-associated-type-region.rs |  |\r\n|  | wf-impl-associated-type-trait.rs |  |\r\n| fn type, argument type | wf-in-fn-type-arg.rs |  |\r\n| fn type, return type | wf-in-fn-type-ret.rs |  |\r\n|  | wf-in-fn-type-static.rs |  |\r\n| object type arg | compile-fail/wf-in-obj-type-static.rs |  |\r\n|  | compile-fail/wf-in-obj-type-region.rs |  |\r\n| object safety | compile-fail/wf-object-safe.rs | #21953 |\r\n| `fn(T): 'a` affects `T` | compile-fail/wf-outlives-ty-in-fn-or-trait.rs |  |\r\n| OutlivesProjection* | compile-fail/associated-types-outlives.rs | #24622 |\r\n| OutlivesProjection* | compile-fail/regions-assoc-type-outlives-container*.rs |  |\r\n| OutlivesProjectionComponents | compile-fail/regions-close-associated-type-into-object.rs |  |\r\n| implied bounds projection gap | compile-fail/regions-implied-bounds-projection-gap*rs |  |\r\n", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/27579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/27579/timeline", "performed_via_github_app": null, "state_reason": "completed"}