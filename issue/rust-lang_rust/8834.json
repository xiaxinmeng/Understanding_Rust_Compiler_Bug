{"url": "https://api.github.com/repos/rust-lang/rust/issues/8834", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/8834/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/8834/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/8834/events", "html_url": "https://github.com/rust-lang/rust/issues/8834", "id": 18705991, "node_id": "MDU6SXNzdWUxODcwNTk5MQ==", "number": 8834, "title": "The number reader methods in should raise a condition if not enough bytes could be read", "user": {"login": "rapha", "id": 29763, "node_id": "MDQ6VXNlcjI5NzYz", "avatar_url": "https://avatars.githubusercontent.com/u/29763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rapha", "html_url": "https://github.com/rapha", "followers_url": "https://api.github.com/users/rapha/followers", "following_url": "https://api.github.com/users/rapha/following{/other_user}", "gists_url": "https://api.github.com/users/rapha/gists{/gist_id}", "starred_url": "https://api.github.com/users/rapha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rapha/subscriptions", "organizations_url": "https://api.github.com/users/rapha/orgs", "repos_url": "https://api.github.com/users/rapha/repos", "events_url": "https://api.github.com/users/rapha/events{/privacy}", "received_events_url": "https://api.github.com/users/rapha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-08-29T00:53:33Z", "updated_at": "2014-02-03T19:55:22Z", "closed_at": "2014-02-03T19:55:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently the various number reader methods defined in\n\n```\nstd::rt::io::extensions::ReaderByteConversions\n```\n\nare based on `read_u8_` and `read_i8_` which simply return 0 if the byte could not be read. This means that the user can silently read bad values, e.g.\n\n```\n$ rusti\nrusti> use std::rt::io::Reader; \nrusti> use std::rt::io::extensions::ReaderUtil;\nrusti> use std::rt::io::extensions::ReaderByteConversions;\nrusti> use std::rt::io::mem::MemReader; \nrusti> MemReader::new(~[1]).read_be_u32_()\n16777216 \n```\n\nI suggest that a `read_u8_` and `read_i8_` should raise an EndOfFile, similarly to `ReaderUtil::push_bytes`, so the user can handle that case.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/8834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/8834/timeline", "performed_via_github_app": null, "state_reason": "completed"}