{"url": "https://api.github.com/repos/rust-lang/rust/issues/54659", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/54659/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/54659/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/54659/events", "html_url": "https://github.com/rust-lang/rust/issues/54659", "id": 365087721, "node_id": "MDU6SXNzdWUzNjUwODc3MjE=", "number": 54659, "title": "\"overflow evaluating the requirement `...: std::marker::Sync`\" instead of error", "user": {"login": "MasonRemaley", "id": 5516083, "node_id": "MDQ6VXNlcjU1MTYwODM=", "avatar_url": "https://avatars.githubusercontent.com/u/5516083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MasonRemaley", "html_url": "https://github.com/MasonRemaley", "followers_url": "https://api.github.com/users/MasonRemaley/followers", "following_url": "https://api.github.com/users/MasonRemaley/following{/other_user}", "gists_url": "https://api.github.com/users/MasonRemaley/gists{/gist_id}", "starred_url": "https://api.github.com/users/MasonRemaley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MasonRemaley/subscriptions", "organizations_url": "https://api.github.com/users/MasonRemaley/orgs", "repos_url": "https://api.github.com/users/MasonRemaley/repos", "events_url": "https://api.github.com/users/MasonRemaley/events{/privacy}", "received_events_url": "https://api.github.com/users/MasonRemaley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-29T02:25:45Z", "updated_at": "2018-09-29T19:53:04Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I ran into some code that causes rustc to recurse until it hits whatever you have the recursion limit set to (I tried up to `#![recursion_limit=\"80192\"]`). The code in question should actually result in a compile time error, but not that one.\r\n\r\nHere's the minimal case I could come up with:\r\n```\r\nstatic FOO: Option<Foo> = None;\r\n\r\ntype NotSend = *const ();\r\n\r\nstruct Foo {\r\n    foo: (Box<(Foo, NotSend)>, NotSend),\r\n}\r\n\r\nfn main() {\r\n}\r\n```\r\n\r\nHere's the error I would've expected to get:\r\n```\r\n   Compiling playground v0.0.1 (file:///playground)\r\nerror[E0277]: `*const ()` cannot be shared between threads safely\r\n --> src/main.rs:1:1\r\n  |\r\n1 | static FOO: Option<Foo> = None;\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `*const ()` cannot be shared between threads safely\r\n  |\r\n  = help: within `(Foo, *const ())`, the trait `std::marker::Sync` is not implemented for `*const ()`\r\n  = note: required because it appears within the type `(Foo, *const ())`\r\n  = note: required because of the requirements on the impl of `std::marker::Sync` for `std::ptr::Unique<(Foo, *const ())>`\r\n  = note: required because it appears within the type `std::boxed::Box<(Foo, *const ())>`\r\n  = note: required because it appears within the type `Foo`\r\n  = note: required because it appears within the type `std::option::Option<Foo>`\r\n  = note: shared static variables must have a type that implements `Sync`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nHere's what actually happened:\r\n```\r\n   Compiling playground v0.0.1 (file:///playground)\r\nerror[E0275]: overflow evaluating the requirement `std::ptr::Unique<(Foo, *const ())>: std::marker::Sync`\r\n --> src/main.rs:1:1\r\n  |\r\n1 | static FOO: Option<Foo> = None;\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\r\n  = note: required because it appears within the type `std::boxed::Box<(Foo, *const ())>`\r\n  = note: required because it appears within the type `(std::boxed::Box<(Foo, *const ())>, *const ())`\r\n  = note: required because it appears within the type `Foo`\r\n  = note: required because it appears within the type `(Foo, *const ())`\r\n  = note: required because of the requirements on the impl of `std::marker::Sync` for `std::ptr::Unique<(Foo, *const ())>`\r\n  = note: required because it appears within the type `std::boxed::Box<(Foo, *const ())>`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0275`.\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nHere's a [link to the playground](https://play.rust-lang.org/?gist=cfa54cea5842d9b178a428f53f8a5445&version=stable&mode=debug&edition=2015).\r\n\r\n## Meta\r\n\r\nThe above output is copy and pasted from play, but I first found the issue locally with the following rust version:\r\n```\r\nrustc --version --verbose\r\nrustc 1.29.1 (b801ae664 2018-09-20)\r\nbinary: rustc\r\ncommit-hash: b801ae66425cf7c3c71052b19ef8f145b0d0513d\r\ncommit-date: 2018-09-20\r\nhost: x86_64-apple-darwin\r\nrelease: 1.29.1\r\nLLVM version: 7.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/54659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/54659/timeline", "performed_via_github_app": null, "state_reason": null}