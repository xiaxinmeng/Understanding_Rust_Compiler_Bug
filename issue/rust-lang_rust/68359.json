{"url": "https://api.github.com/repos/rust-lang/rust/issues/68359", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68359/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68359/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68359/events", "html_url": "https://github.com/rust-lang/rust/issues/68359", "id": 551848334, "node_id": "MDU6SXNzdWU1NTE4NDgzMzQ=", "number": 68359, "title": "An Suggestion: maybe keyword \"unsafe\" is not a good term", "user": {"login": "dbsxdbsx", "id": 17372655, "node_id": "MDQ6VXNlcjE3MzcyNjU1", "avatar_url": "https://avatars.githubusercontent.com/u/17372655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbsxdbsx", "html_url": "https://github.com/dbsxdbsx", "followers_url": "https://api.github.com/users/dbsxdbsx/followers", "following_url": "https://api.github.com/users/dbsxdbsx/following{/other_user}", "gists_url": "https://api.github.com/users/dbsxdbsx/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbsxdbsx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbsxdbsx/subscriptions", "organizations_url": "https://api.github.com/users/dbsxdbsx/orgs", "repos_url": "https://api.github.com/users/dbsxdbsx/repos", "events_url": "https://api.github.com/users/dbsxdbsx/events{/privacy}", "received_events_url": "https://api.github.com/users/dbsxdbsx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-19T01:11:48Z", "updated_at": "2020-01-19T01:19:02Z", "closed_at": "2020-01-19T01:15:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Rust gives we programmers strong safety, but also gives us freedom to write some code maybe unsafe with keyword \"unsafe\".  But as should be known to all programmers,   it doesn't mean the code be tagged as \"unsafe\" is exactly unsafe, as long as we know what we are doing (no undefined behavior).  \r\n\r\nFor example (maybe crazy), about the classic panic issue--- giving  a value to a vector with index that is out of range.    Does it should be recognized as unsafe **all the time**?  Generally, yes , it is unsafe.   But what if as a reverse engineering,  I know exactly what the data in heap is, and for some purpose, I want to give a value exactly behind the \"safe\" bound of the vector?\r\n\r\nHere, what I want to point out is that I agree with what Rust team think about what Rust should be. But following the road,  I think  maybe  the keyword \"unsafe\" is **too subjective**, maybe a word more objective is better ,like say \"caution\".   Though in my own style , I would prefer \"!\", but to follow Rust philosophy,  a more complex word may be better to  caution us and try best to avoid it.\r\n\r\nOk, I have to admit that the reason for this suggestion is due to the recent \"Actix\"  issue, I don't want to someone who would be pissed off **by just not quite knowing about  the keyword \"unsafe\" ,but not exactly unsafety.**", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68359/timeline", "performed_via_github_app": null, "state_reason": "completed"}