{"url": "https://api.github.com/repos/rust-lang/rust/issues/35474", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/35474/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/35474/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/35474/events", "html_url": "https://github.com/rust-lang/rust/issues/35474", "id": 169809741, "node_id": "MDU6SXNzdWUxNjk4MDk3NDE=", "number": 35474, "title": "rustc-builtins: use the target *specification* (rather than its triple) in build.rs", "user": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-08-07T18:42:11Z", "updated_at": "2017-05-10T22:32:43Z", "closed_at": "2017-05-10T22:32:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "follow up of #35021 \n\n`rustc-builtins`' `build.rs` uses `$TARGET` to decide which intrinsics to compile. This won't work well with custom targets because these targets can have arbitrary triples (e.g. `cortex-m0`) that don't reflect the actual target specification (ARM architecture, no OS, etc). To make `rustc-builtins` more robust we should use the target specification (`target_arch`, `target_os`, etc) instead of the triple. This will improve `rustc-builtins`'s support of custom targets and should simplify its `build.rs` logic: `if spec.target_arch == \"arm\"` instead of `if target.starts_with(\"arm\") || target.starts_with(\"thumb\")`.\n\nThere's no standard mechanism to access the target specification from a build script but we could use an external crate like @nagisa's [target_build_utils](https://crates.io/crates/target_build_utils).\n\ncc @alexcrichton @brson\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/35474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/35474/timeline", "performed_via_github_app": null, "state_reason": "completed"}