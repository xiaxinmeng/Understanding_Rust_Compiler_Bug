{"url": "https://api.github.com/repos/rust-lang/rust/issues/58483", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58483/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58483/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58483/events", "html_url": "https://github.com/rust-lang/rust/issues/58483", "id": 410710504, "node_id": "MDU6SXNzdWU0MTA3MTA1MDQ=", "number": 58483, "title": "ICE using HRTB ", "user": {"login": "weiznich", "id": 1674512, "node_id": "MDQ6VXNlcjE2NzQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1674512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiznich", "html_url": "https://github.com/weiznich", "followers_url": "https://api.github.com/users/weiznich/followers", "following_url": "https://api.github.com/users/weiznich/following{/other_user}", "gists_url": "https://api.github.com/users/weiznich/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiznich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiznich/subscriptions", "organizations_url": "https://api.github.com/users/weiznich/orgs", "repos_url": "https://api.github.com/users/weiznich/repos", "events_url": "https://api.github.com/users/weiznich/events{/privacy}", "received_events_url": "https://api.github.com/users/weiznich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-15T10:49:04Z", "updated_at": "2019-02-23T11:16:04Z", "closed_at": "2019-02-23T11:16:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Happens on the current beta release and the current nightly release.\r\n\r\n[Playground link](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=dff3eb4766b762df814f8c0d8648dbe1)\r\n\r\nCode shared by the playground by clicking on report an issue:\r\n(I'm aware that this code won't work, but rustc should not crash here)\r\n```rust\r\nuse std::marker::PhantomData;\r\n\r\ntrait UnRef {\r\n    type UnRef;\r\n\r\n    fn make_owned(self) -> Self::UnRef;\r\n}\r\n\r\ntrait FamilyLt<'a> {\r\n    type Out: Sized;\r\n}\r\n\r\nstruct RefValue<T>(PhantomData<T>);\r\n\r\nimpl<'a, T: 'a> FamilyLt<'a> for RefValue<T> {\r\n    type Out = &'a T;\r\n}\r\n\r\ntrait Extract<'a, I>: Sized {\r\n    type Raw;\r\n    type Out;\r\n\r\n    fn extract(&'a self) -> Self::Out;\r\n}\r\nstruct TupleIndex1;\r\nstruct TupleIndex2;\r\n\r\nimpl<'a, A: 'a, B: 'a> Extract<'a, TupleIndex1> for (A, B) {\r\n    type Raw = A;\r\n    type Out = &'a A;\r\n\r\n    fn extract(&'a self) -> &'a A {\r\n        &self.0\r\n    }\r\n}\r\n\r\nimpl<'a, A: 'a, B: 'a> Extract<'a, TupleIndex2> for (A, B) {\r\n    type Raw = B;\r\n    type Out = &'a B;\r\n\r\n    fn extract(&'a self) -> &'a B {\r\n        &self.1\r\n    }\r\n}\r\n\r\nimpl<'a, A: 'static, B: 'static, I1, I2> Extract<'a, (I1, I2)> for (A, B)\r\nwhere\r\n    (A, B): Extract<'a, I1>,\r\n    (A, B): Extract<'a, I2>,\r\n{\r\n    type Raw = (<(A, B) as Extract<'a, I1>>::Raw, <(A, B) as Extract<'a, I2>>::Raw);\r\n    type Out = (<(A, B) as Extract<'a, I1>>::Out, <(A, B) as Extract<'a, I2>>::Out);\r\n\r\n    fn extract(&'a self) -> Self::Out {\r\n        (\r\n            <(A, B) as Extract<I1>>::extract(self),\r\n            <(A, B) as Extract<I2>>::extract(self),\r\n        )\r\n    }\r\n}\r\n\r\nimpl<'a, A> UnRef for &'a A\r\nwhere\r\n    A: Clone,\r\n{\r\n    type UnRef = A;\r\n\r\n    fn make_owned(self) -> A {\r\n        self.clone()\r\n    }\r\n}\r\n\r\nimpl<'a, A, B> UnRef for (&'a A, &'a B)\r\nwhere\r\n    A: Clone,\r\n    B: Clone,\r\n{\r\n    type UnRef = (A, B);\r\n\r\n    fn make_owned(self) -> (A, B) {\r\n        (self.0.clone(), self.1.clone())\r\n    }\r\n}\r\n\r\nfn generic<T:'static, I, O>(t: T) \r\nwhere\r\n    for<'a> T: Extract<'a, I, Out = O>,\r\n    //O: UnRef,\r\n    for<'a> <T as Extract<'a, I>>::Out: UnRef,\r\n{\r\n    let extracted = t.extract();\r\n    let owned = extracted.make_owned();\r\n}\r\n\r\nfn main() {\r\n    let z = Some(String::from(\"foo\"));\r\n    let out = {\r\n        let a = (z.clone(), z);\r\n        generic::<_, (TupleIndex1, TupleIndex2), _>(a);\r\n    };\r\n}\r\n\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=6ecb96f44fa00e87faea31f43be4ddc6))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0599]: no method named `make_owned` found for type `O` in the current scope\r\n  --> src/main.rs:92:27\r\n   |\r\n92 |     let owned = extracted.make_owned();\r\n   |                           ^^^^^^^^^^\r\n   |\r\n   = note: the method `make_owned` exists but the following trait bounds were not satisfied:\r\n           `&O : UnRef`\r\n   = help: items from traits can only be used if the trait is implemented and in scope\r\n   = note: the following trait defines an item `make_owned`, perhaps you need to implement it:\r\n           candidate #1: `UnRef`\r\n\r\nerror[E0277]: the trait bound `for<'a> <_ as Extract<'a, (TupleIndex1, TupleIndex2)>>::Out: UnRef` is not satisfied\r\n  --> src/main.rs:99:9\r\n   |\r\n99 |         generic::<_, (TupleIndex1, TupleIndex2), _>(a);\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `for<'a> UnRef` is not implemented for `<_ as Extract<'a, (TupleIndex1, TupleIndex2)>>::Out`\r\n   |\r\n   = help: the following implementations were found:\r\n             <&'a A as UnRef>\r\nnote: required by `generic`\r\n  --> src/main.rs:85:1\r\n   |\r\n85 | / fn generic<T:'static, I, O>(t: T) \r\n86 | | where\r\n87 | |     for<'a> T: Extract<'a, I, Out = O>,\r\n88 | |     //O: UnRef,\r\n...  |\r\n92 | |     let owned = extracted.make_owned();\r\n93 | | }\r\n   | |_^\r\n\r\nthread 'rustc' panicked at 'assertion failed: !ty.needs_infer() && !ty.has_placeholders()', src/librustc_typeck/check/writeback.rs:119:9\r\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\r\nerror: aborting due to 2 previous errors\r\n\r\nSome errors occurred: E0277, E0599.\r\nFor more information about an error, try `rustc --explain E0277`.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.34.0-nightly (f47ec2ad5 2019-02-14) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58483/timeline", "performed_via_github_app": null, "state_reason": "completed"}