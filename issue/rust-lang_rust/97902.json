{"url": "https://api.github.com/repos/rust-lang/rust/issues/97902", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/97902/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/97902/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/97902/events", "html_url": "https://github.com/rust-lang/rust/issues/97902", "id": 1265428959, "node_id": "I_kwDOAAsO6M5LbOnf", "number": 97902, "title": "bug", "user": {"login": "kulicuu", "id": 355726, "node_id": "MDQ6VXNlcjM1NTcyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/355726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kulicuu", "html_url": "https://github.com/kulicuu", "followers_url": "https://api.github.com/users/kulicuu/followers", "following_url": "https://api.github.com/users/kulicuu/following{/other_user}", "gists_url": "https://api.github.com/users/kulicuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/kulicuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kulicuu/subscriptions", "organizations_url": "https://api.github.com/users/kulicuu/orgs", "repos_url": "https://api.github.com/users/kulicuu/repos", "events_url": "https://api.github.com/users/kulicuu/events{/privacy}", "received_events_url": "https://api.github.com/users/kulicuu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-06-08T23:55:29Z", "updated_at": "2022-09-05T15:48:23Z", "closed_at": "2022-09-05T15:48:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n// A routine for testing multi-threaded rendering.\r\n\r\n\r\n#![feature(drain_filter)]\r\n\r\nuse super::precursors::*;\r\nuse super::pipeline_101::*;\r\nuse super::pipeline_102::*;\r\n\r\nuse erupt::{\r\n    cstr,\r\n    utils::{self, surface},\r\n    vk, DeviceLoader, EntryLoader, InstanceLoader,\r\n    vk::{Device, MemoryMapFlags},\r\n};\r\nuse cgmath::{Deg, Rad, Matrix4, Point3, Vector3, Vector4};\r\nuse nalgebra_glm as glm;\r\nuse std::{\r\n    ffi::{c_void, CStr, CString},\r\n    fs,\r\n    fs::{write, OpenOptions},\r\n    io::prelude::*,\r\n    mem::*,\r\n    os::raw::c_char,\r\n    ptr,\r\n    result::Result,\r\n    result::Result::*,\r\n    string::String,\r\n    sync::{Arc, Mutex, mpsc, mpsc::channel, Condvar},\r\n    thread,\r\n    time,\r\n};\r\n// use std::sync::mpsc;\r\nuse std::time::{Duration, Instant};\r\nuse std::thread::sleep;\r\nuse smallvec::SmallVec;\r\nuse raw_window_handle::{HasRawWindowHandle, RawWindowHandle};\r\nuse memoffset::offset_of;\r\nuse simple_logger::SimpleLogger;\r\nuse winit::{\r\n    dpi::PhysicalSize,\r\n    event::{\r\n        Event, KeyboardInput, WindowEvent,\r\n        ElementState, StartCause, VirtualKeyCode,\r\n        DeviceEvent,\r\n    },\r\n    event_loop::{ControlFlow, EventLoop},\r\n    window::WindowBuilder,\r\n    window::Window\r\n};\r\n\r\n\r\nuse closure::closure;\r\n\r\n\r\nuse structopt::StructOpt;\r\nconst TITLE: &str = \"vulkan-routine-6400\";\r\nconst FRAMES_IN_FLIGHT: usize = 2;\r\nconst LAYER_KHRONOS_VALIDATION: *const c_char = cstr!(\"VK_LAYER_KHRONOS_validation\");\r\nconst SHADER_VERT: &[u8] = include_bytes!(\"../spv/s_400_.vert.spv\");\r\nconst SHADER_FRAG: &[u8] = include_bytes!(\"../spv/s1.frag.spv\");\r\n\r\n\r\n// static mut log_300: Vec<String> = vec!();\r\nunsafe extern \"system\" fn debug_callback(\r\n    _message_severity: vk::DebugUtilsMessageSeverityFlagBitsEXT,\r\n    _message_types: vk::DebugUtilsMessageTypeFlagsEXT,\r\n    p_callback_data: *const vk::DebugUtilsMessengerCallbackDataEXT,\r\n    _p_user_data: *mut c_void,\r\n) -> vk::Bool32 {\r\n    let str_99 = String::from(CStr::from_ptr((*p_callback_data).p_message).to_string_lossy());\r\n    // log_300.push(str_99 );\r\n    eprintln!(\r\n        \"{}\",\r\n        CStr::from_ptr((*p_callback_data).p_message).to_string_lossy()\r\n    );\r\n    vk::FALSE\r\n}\r\n\r\n\r\n#[repr(C)]\r\n#[derive(Debug, Clone, Copy)]\r\npub struct VertexV3 {\r\n    pos: [f32; 4],\r\n    color: [f32; 4],\r\n}\r\n\r\n#[repr(C)]\r\n#[derive(Clone, Debug, Copy)]\r\nstruct PushConstants {\r\n    view: glm::Mat4,\r\n}\r\n\r\n#[repr(C)]\r\n#[derive(Clone, Debug, Copy)]\r\nstruct UniformBufferObject {\r\n    model: Matrix4<f32>,\r\n    view: Matrix4<f32>,\r\n    proj: Matrix4<f32>,\r\n}\r\n\r\n#[derive(Debug, StructOpt)]\r\nstruct Opt {\r\n    #[structopt(short, long)]\r\n    validation_layers: bool,\r\n}\r\n\r\n#[repr(C)]\r\n#[derive(Debug, Clone, Copy)]\r\nstruct ControlInput {\r\n    roll: i32,\r\n    pitch: i32,\r\n    yaw: i32,\r\n    skew: i32,\r\n}\r\n\r\n\r\n// There is a plan that envisions three threads. One for state management, \r\n// consuming messages carrying async input updates, for example keypresses.\r\n// Typically this first thread is doing maths, and as the program gets more complex,\r\n// these responsibilities would spawn more thread architecture.\r\n// Two is just for recording command buffers.\r\n// Zero is the main, thread, organizing the program.\r\n\r\n\r\n\r\n\r\n\r\npub unsafe fn vulkan_routine_6400\r\n()\r\n{\r\n    println!(\"\\n6400\\n\");\r\n\r\n\r\n    println!(\"\\n6300\\n\");\r\n    let opt = Opt { validation_layers: true };\r\n    let event_loop = EventLoop::new();\r\n    let window = WindowBuilder::new()\r\n        .with_title(TITLE)\r\n        .with_resizable(false)\r\n        .with_maximized(true)\r\n        \r\n        .build(&event_loop)\r\n        .unwrap();\r\n    let entry = Arc::new(EntryLoader::new().unwrap());\r\n    let application_name = CString::new(\"Vulkan-Routine-6300\").unwrap();\r\n\r\n    let (tx, rx) = channel();\r\n\r\n    let (tx2, rx2) = channel();\r\n\r\n    let pair = Arc::new((Mutex::new(false), Condvar::new()));\r\n\r\n    thread::spawn(closure!(clone pair, || {\r\n\r\n    }));\r\n\r\n    assert_eq!(rx.recv().unwrap(), 10);\r\n\r\n    tx2.send(15);\r\n    tx2.send(167);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\n\r\nnote: rustc 1.63.0-nightly (5435ed691 2022-06-07) running on x86_64-pc-windows-msvc\r\n\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler\\rustc_infer\\src\\infer\\error_reporting\\need_type_info.rs:856:33: unexpected path: def=smallvec::alloc::ffi::CString substs=[] path=Path { span: src\\vulkan_6400.rs:146:28: 146:35 (#0), res: Def(TyAlias, DefId(1:2774 ~ std[2cf3]::ffi::CString)), segments: [PathSegment { ident: CString#0, hir_id: Some(HirId { owner: DefId(0:194 ~ vulkan__march__22[69e8]::vulkan_6400::vulkan_routine_64\r\n00), local_id: 102 }), res: Some(Err), args: None, infer_args: true }] }\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/5435ed6916a59e8d5acba2149316a841c3905cbd\\compiler\\rustc_errors\\src\\lib.rs:1334:9\r\nstack backtrace:\r\n   0:     0x7ffa4da29d1f - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h69fba5d91df01e94\r\n   1:     0x7ffa4da64d1a - core::fmt::write::h7055ff38dc941964\r\n   2:     0x7ffa4da1c1c9 - <std::io::IoSliceMut as core::fmt::Debug>::fmt::h459f2587ce39c9e6\r\n   3:     0x7ffa4da2d60b - std::panicking::default_hook::h3cc09d237d0ad77f\r\n   4:     0x7ffa4da2d28b - std::panicking::default_hook::h3cc09d237d0ad77f\r\n   5:     0x7ff9c8a899b6 - rustc_driver[d0366cf51f2715ae]::pretty::print_after_hir_lowering\r\n   6:     0x7ffa4da2ddb2 - std::panicking::rust_panic_with_hook::h637899a72547023d\r\n   7:     0x7ff9cd0a8865 - <rustc_middle[b3f937ff58444bef]::traits::query::OutlivesBound as rustc_middle[b3f937ff58444bef]::ty::context::Lift>::lift_to_tcx\r\n   8:     0x7ff9cd0a6d79 - <rustc_middle[b3f937ff58444bef]::traits::query::OutlivesBound as rustc_middle[b3f937ff58444bef]::ty::context::Lift>::lift_to_tcx\r\n   9:     0x7ff9cd595f69 - rustc_middle[b3f937ff58444bef]::util::bug::bug_fmt\r\n  10:     0x7ff9cd044e79 - <rustc_middle[b3f937ff58444bef]::ty::sty::TypeAndMut as rustc_middle[b3f937ff58444bef]::ty::context::Lift>::lift_to_tcx\r\n  11:     0x7ff9cd02b443 - <rustc_middle[b3f937ff58444bef]::ty::sty::TypeAndMut as rustc_middle[b3f937ff58444bef]::ty::context::Lift>::lift_to_tcx\r\n  12:     0x7ff9cd029172 - <rustc_middle[b3f937ff58444bef]::ty::sty::TypeAndMut as rustc_middle[b3f937ff58444bef]::ty::context::Lift>::lift_to_tcx\r\n  13:     0x7ff9cd0b4869 - <rustc_middle[b3f937ff58444bef]::ty::consts::int::ScalarInt as core[170f819330dac449]::fmt::Display>::fmt\r\n  14:     0x7ff9cd0b48ec - <rustc_middle[b3f937ff58444bef]::ty::consts::int::ScalarInt as core[170f819330dac449]::fmt::Display>::fmt\r\n  15:     0x7ff9cd595f18 - rustc_middle[b3f937ff58444bef]::util::bug::bug_fmt\r\n  16:     0x7ff9ccee6889 - <rustc_infer[c89643690b59faa6]::infer::error_reporting::need_type_info::TypeAnnotationNeeded as core[170f819330dac449]::convert::Into<rustc_errors[708e462a94012513]::diagnostic::DiagnosticId>>::into\r\n  17:     0x7ff9ccee6fda - <rustc_infer[c89643690b59faa6]::infer::error_reporting::need_type_info::FindInferSourceVisitor as rustc_hir[c96766f741e94543]::intravisit::Visitor>::visit_expr\r\n  18:     0x7ff9ccee6d90 - <rustc_infer[c89643690b59faa6]::infer::error_reporting::need_type_info::FindInferSourceVisitor as rustc_hir[c96766f741e94543]::intravisit::Visitor>::visit_expr\r\n  19:     0x7ff9ccf0e08f - <rustc_middle[b3f937ff58444bef]::ty::sty::ProjectionTy as rustc_infer[c89643690b59faa6]::infer::at::ToTrace>::to_trace\r\n  20:     0x7ff9ccee6da4 - <rustc_infer[c89643690b59faa6]::infer::error_reporting::need_type_info::FindInferSourceVisitor as rustc_hir[c96766f741e94543]::intravisit::Visitor>::visit_expr\r\n  21:     0x7ff9ccee6907 - <rustc_infer[c89643690b59faa6]::infer::error_reporting::need_type_info::FindInferSourceVisitor as rustc_hir[c96766f741e94543]::intravisit::Visitor>::visit_local\r\n  22:     0x7ff9ccf0e2a6 - <rustc_middle[b3f937ff58444bef]::ty::sty::ProjectionTy as rustc_infer[c89643690b59faa6]::infer::at::ToTrace>::to_trace\r\n  23:     0x7ff9ccee6da4 - <rustc_infer[c89643690b59faa6]::infer::error_reporting::need_type_info::FindInferSourceVisitor as rustc_hir[c96766f741e94543]::intravisit::Visitor>::visit_expr\r\n  24:     0x7ff9cce32541 - <rustc_infer[c89643690b59faa6]::infer::InferCtxt>::emit_inference_failure_err\r\n  25:     0x7ff9ccde8ee5 - <rustc_infer[c89643690b59faa6]::infer::InferCtxt as rustc_trait_selection[5f9f278b9158f9e9]::traits::error_reporting::InferCtxtPrivExt>::maybe_report_ambiguity\r\n  26:     0x7ff9ccdd5515 - <rustc_infer[c89643690b59faa6]::infer::InferCtxt as rustc_trait_selection[5f9f278b9158f9e9]::traits::error_reporting::InferCtxtExt>::report_fulfillment_errors\r\n  27:     0x7ff9cb406df4 - <rustc_typeck[7a298000ef5f119f]::check::fn_ctxt::FnCtxt>::apply_adjustments\r\n  28:     0x7ff9cb4892cb - <rustc_typeck[7a298000ef5f119f]::check::PlaceOp as core[170f819330dac449]::fmt::Debug>::fmt\r\n  29:     0x7ff9cb46f502 - rustc_typeck[7a298000ef5f119f]::check::provide\r\n  30:     0x7ff9cc009c68 - <rustc_query_impl[8090768474079d2c]::queries::generator_diagnostic_data as rustc_query_system[8c5261d944ed704a]::query::config::QueryDescription<rustc_query_impl[8090768474079d2c]::plumbing::QueryCtxt>>::describe\r\n  31:     0x7ff9cc3311c2 - <&[rustc_span[b8e7ecb8e53baf7f]::def_id::LocalDefId] as rustc_serialize[bd9d6815ae800de1]::serialize::Decodable<rustc_query_impl[8090768474079d2c]::on_disk_cache::CacheDecoder>>::decode\r\n  32:     0x7ff9cc1a4ef7 - <&[rustc_span[b8e7ecb8e53baf7f]::def_id::LocalDefId] as rustc_serialize[bd9d6815ae800de1]::serialize::Decodable<rustc_query_impl[8090768474079d2c]::on_disk_cache::CacheDecoder>>::decode\r\n  33:     0x7ff9cc10d653 - <&[rustc_span[b8e7ecb8e53baf7f]::def_id::LocalDefId] as rustc_serialize[bd9d6815ae800de1]::serialize::Decodable<rustc_query_impl[8090768474079d2c]::on_disk_cache::CacheDecoder>>::decode\r\n  34:     0x7ff9cc0aa719 - <&[rustc_span[b8e7ecb8e53baf7f]::def_id::LocalDefId] as rustc_serialize[bd9d6815ae800de1]::serialize::Decodable<rustc_query_impl[8090768474079d2c]::on_disk_cache::CacheDecoder>>::decode\r\n  35:     0x7ff9ccf83b83 - <rustc_middle[b3f937ff58444bef]::ty::context::TyCtxt as rustc_query_system[8c5261d944ed704a]::dep_graph::DepContext>::try_force_from_dep_node\r\n  36:     0x7ff9cc31c2cf - <&[rustc_span[b8e7ecb8e53baf7f]::def_id::LocalDefId] as rustc_serialize[bd9d6815ae800de1]::serialize::Decodable<rustc_query_impl[8090768474079d2c]::on_disk_cache::CacheDecoder>>::decode\r\n  37:     0x7ff9cc11439a - <&[rustc_span[b8e7ecb8e53baf7f]::def_id::LocalDefId] as rustc_serialize[bd9d6815ae800de1]::serialize::Decodable<rustc_query_impl[8090768474079d2c]::on_disk_cache::CacheDecoder>>::decode\r\n  38:     0x7ff9cc2ee963 - <&[rustc_span[b8e7ecb8e53baf7f]::def_id::LocalDefId] as rustc_serialize[bd9d6815ae800de1]::serialize::Decodable<rustc_query_impl[8090768474079d2c]::on_disk_cache::CacheDecoder>>::decode\r\n  39:     0x7ff9cb2f07c1 - <rustc_typeck[7a298000ef5f119f]::check::upvar::InferBorrowKind as rustc_typeck[7a298000ef5f119f]::expr_use_visitor::Delegate>::mutate\r\n  40:     0x7ff9cb4759a3 - <rustc_typeck[7a298000ef5f119f]::check::MaybeInProgressTables>::borrow_mut\r\n  41:     0x7ff9cc00ba5e - <rustc_query_impl[8090768474079d2c]::queries::generator_diagnostic_data as rustc_query_system[8c5261d944ed704a]::query::config::QueryDescription<rustc_query_impl[8090768474079d2c]::plumbing::QueryCtxt>>::describe\r\n  42:     0x7ff9cc35962f - <&[rustc_span[b8e7ecb8e53baf7f]::def_id::LocalDefId] as rustc_serialize[bd9d6815ae800de1]::serialize::Decodable<rustc_query_impl[8090768474079d2c]::on_disk_cache::CacheDecoder>>::decode\r\n  43:     0x7ff9cc2409e9 - <&[rustc_span[b8e7ecb8e53baf7f]::def_id::LocalDefId] as rustc_serialize[bd9d6815ae800de1]::serialize::Decodable<rustc_query_impl[8090768474079d2c]::on_disk_cache::CacheDecoder>>::decode\r\n  44:     0x7ff9cc2b9169 - <&[rustc_span[b8e7ecb8e53baf7f]::def_id::LocalDefId] as rustc_serialize[bd9d6815ae800de1]::serialize::Decodable<rustc_query_impl[8090768474079d2c]::on_disk_cache::CacheDecoder>>::decode\r\n  45:     0x7ff9cb30e22f - <rustc_typeck[7a298000ef5f119f]::expr_use_visitor::ExprUseVisitor>::consume_body\r\n  46:     0x7ff9cb2eb146 - rustc_typeck[7a298000ef5f119f]::check_crate\r\n  47:     0x7ff9c8b78cef - rustc_interface[ec95ea5c7cf11f5c]::passes::analysis\r\n  48:     0x7ff9cc00b54e - <rustc_query_impl[8090768474079d2c]::queries::generator_diagnostic_data as rustc_query_system[8c5261d944ed704a]::query::config::QueryDescription<rustc_query_impl[8090768474079d2c]::plumbing::QueryCtxt>>::describe\r\n  49:     0x7ff9cc34ffdf - <&[rustc_span[b8e7ecb8e53baf7f]::def_id::LocalDefId] as rustc_serialize[bd9d6815ae800de1]::serialize::Decodable<rustc_query_impl[8090768474079d2c]::on_disk_cache::CacheDecoder>>::decode\r\n  50:     0x7ff9cc22a8eb - <&[rustc_span[b8e7ecb8e53baf7f]::def_id::LocalDefId] as rustc_serialize[bd9d6815ae800de1]::serialize::Decodable<rustc_query_impl[8090768474079d2c]::on_disk_cache::CacheDecoder>>::decode\r\n  51:     0x7ff9cc2eede6 - <&[rustc_span[b8e7ecb8e53baf7f]::def_id::LocalDefId] as rustc_serialize[bd9d6815ae800de1]::serialize::Decodable<rustc_query_impl[8090768474079d2c]::on_disk_cache::CacheDecoder>>::decode\r\n  52:     0x7ff9c8a3f29f - <rustc_driver[d0366cf51f2715ae]::args::Error as core[170f819330dac449]::fmt::Debug>::fmt\r\n  53:     0x7ff9c8a17200 - <rustc_lint[7108b6e48795f800]::BuiltinCombinedPreExpansionLintPass as rustc_lint[7108b6e48795f800]::passes::EarlyLintPass>::check_impl_item\r\n  54:     0x7ff9c8a98155 - <rustc_driver[d0366cf51f2715ae]::Compilation as core[170f819330dac449]::fmt::Debug>::fmt\r\n  55:     0x7ff9c8a1845d - <rustc_lint[7108b6e48795f800]::BuiltinCombinedPreExpansionLintPass as rustc_lint[7108b6e48795f800]::passes::EarlyLintPass>::check_impl_item\r\n  56:     0x7ff9c8a7eeb6 - <rustc_metadata[cf1e3891b8aa5891]::rmeta::encoder::EncodeContext as rustc_serialize[bd9d6815ae800de1]::serialize::Encoder>::emit_raw_bytes\r\n  57:     0x7ff9c8a42388 - <rustc_driver[d0366cf51f2715ae]::args::Error as core[170f819330dac449]::fmt::Debug>::fmt\r\n  58:     0x7ffa4da3ef5c - std::sys::windows::thread::Thread::new::hf93ccebb22bd5d63\r\n  59:     0x7ffaad6b7034 - BaseThreadInitThunk\r\n  60:     0x7ffaadfc2651 - RtlUserThreadStart\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.63.0-nightly (5435ed691 2022-06-07) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `vulkan_6400::vulkan_routine_6400`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/97902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/97902/timeline", "performed_via_github_app": null, "state_reason": "completed"}