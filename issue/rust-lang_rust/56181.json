{"url": "https://api.github.com/repos/rust-lang/rust/issues/56181", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56181/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56181/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56181/events", "html_url": "https://github.com/rust-lang/rust/issues/56181", "id": 383740667, "node_id": "MDU6SXNzdWUzODM3NDA2Njc=", "number": 56181, "title": "Mismatched types should suggest From/Into conversions", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-23T08:47:30Z", "updated_at": "2023-01-30T19:04:36Z", "closed_at": "2023-01-30T19:04:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This program ([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2015&gist=dc8acdb722b6c34d6ec5cf5ba89d9d24)):\r\n\r\n```rust\r\nuse std::{process::Stdio, fs::File};\r\npub fn foo(_x: Stdio) {}\r\npub fn bar(x: File) { foo(x) }\r\n```\r\n\r\nerrors with\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:3:27\r\n  |\r\n3 | pub fn bar(x: File) { foo(x) }\r\n  |                           ^ expected struct `std::process::Stdio`, found struct `std::fs::File`\r\n  |\r\n  = note: expected type `std::process::Stdio`\r\n             found type `std::fs::File`\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nbut there is an impl of `From<File>` for `Stdio`, such that this code ([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2015&gist=97436a7e5d3a14700dd48e92b9733acf)): \r\n\r\n```rust\r\nuse std::{process::Stdio, fs::File};\r\npub fn foo(_x: Stdio) {}\r\npub fn bar(x: File) { foo(x.into()) }\r\n```\r\n\r\ncompiles and works as expected.\r\n\r\nThe error message should have a note stating that there is a conversion available, and a fix suggestion. That would be a huge boon for API discoverability. If there are multiple APIs that take `File` and return `Stdio`, the error message should suggest some of them with some sort of prioritization (`From`/`TryFrom` traits, `::from`/`::new` methods, `.as_...` methods, etc.)", "closed_by": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56181/timeline", "performed_via_github_app": null, "state_reason": "completed"}