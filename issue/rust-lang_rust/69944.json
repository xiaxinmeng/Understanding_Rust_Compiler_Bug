{"url": "https://api.github.com/repos/rust-lang/rust/issues/69944", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69944/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69944/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69944/events", "html_url": "https://github.com/rust-lang/rust/issues/69944", "id": 579781995, "node_id": "MDU6SXNzdWU1Nzk3ODE5OTU=", "number": 69944, "title": "Missing \"`impl Trait` introduces an implicit type parameter\" when the trait comes from another crate", "user": {"login": "cecton", "id": 3018448, "node_id": "MDQ6VXNlcjMwMTg0NDg=", "avatar_url": "https://avatars.githubusercontent.com/u/3018448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cecton", "html_url": "https://github.com/cecton", "followers_url": "https://api.github.com/users/cecton/followers", "following_url": "https://api.github.com/users/cecton/following{/other_user}", "gists_url": "https://api.github.com/users/cecton/gists{/gist_id}", "starred_url": "https://api.github.com/users/cecton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cecton/subscriptions", "organizations_url": "https://api.github.com/users/cecton/orgs", "repos_url": "https://api.github.com/users/cecton/repos", "events_url": "https://api.github.com/users/cecton/events{/privacy}", "received_events_url": "https://api.github.com/users/cecton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-12T08:49:01Z", "updated_at": "2020-03-12T11:52:38Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "When a trait has a method that has type parameters (`fn foo<T>()`) and implicit type parameters (`fn foo(x: impl Clone)`), if you impl the trait, the compiler gives the error:\r\n\r\n```\r\nerror[E0049]: method `foo` has 2 type parameters but its trait declaration has 3 type parameters\r\n  --> crate1/src/main.rs:10:12\r\n   |\r\n4  |     fn foo<A, B>(x: u32, y: impl Debug);\r\n   |            -  -             ----------\r\n   |            |                |\r\n   |            |                `impl Trait` introduces an implicit type parameter\r\n   |            expected 3 type parameters\r\n...\r\n10 |     fn foo<A, B>(x: u32, y: u32) {\r\n   |            ^  ^\r\n   |            |\r\n   |            found 2 type parameters\r\n```\r\n\r\nThis is fine but if the trait comes from another crate, the compiler will just say:\r\n\r\n```\r\nerror[E0049]: method `foo` has 2 type parameters but its trait declaration has 3 type parameters\r\n --> crate1/src/main.rs:6:12\r\n  |\r\n6 |     fn foo<A, B>(x: u32, y: u32) {\r\n  |            ^  ^\r\n  |            |\r\n  |            found 2 type parameters, expected 3\r\n```\r\n\r\nHere is a repository with this sample code: https://github.com/cecton/rust-type-param-error\r\n\r\nI expected to see this happen: it would be great to see that there are implicit type parameters even if it comes from another crate or at least a warning.\r\n\r\nInstead, this happened: I see that there should be 3 type parameters and I provided 2 but if I look at the code I see 2 type parameters, not 3. It was not obvious to me that the impl in parameter was introducing a type parameter.\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.43.0-nightly (158127853 2020-03-10)\r\nbinary: rustc\r\ncommit-hash: 15812785344d913d779d9738fe3cca8de56f71d5\r\ncommit-date: 2020-03-10\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.43.0-nightly\r\nLLVM version: 9.0\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69944/timeline", "performed_via_github_app": null, "state_reason": null}