{"url": "https://api.github.com/repos/rust-lang/rust/issues/34579", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/34579/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/34579/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/34579/events", "html_url": "https://github.com/rust-lang/rust/issues/34579", "id": 163225252, "node_id": "MDU6SXNzdWUxNjMyMjUyNTI=", "number": 34579, "title": "Rustdoc does not evaluate array length expressions", "user": {"login": "Osspial", "id": 16296823, "node_id": "MDQ6VXNlcjE2Mjk2ODIz", "avatar_url": "https://avatars.githubusercontent.com/u/16296823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Osspial", "html_url": "https://github.com/Osspial", "followers_url": "https://api.github.com/users/Osspial/followers", "following_url": "https://api.github.com/users/Osspial/following{/other_user}", "gists_url": "https://api.github.com/users/Osspial/gists{/gist_id}", "starred_url": "https://api.github.com/users/Osspial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Osspial/subscriptions", "organizations_url": "https://api.github.com/users/Osspial/orgs", "repos_url": "https://api.github.com/users/Osspial/repos", "events_url": "https://api.github.com/users/Osspial/events{/privacy}", "received_events_url": "https://api.github.com/users/Osspial/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 602425123, "node_id": "MDU6TGFiZWw2MDI0MjUxMjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-dev-tools", "name": "T-dev-tools", "color": "bfd4f2", "default": false, "description": "Relevant to the dev-tools subteam, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-30T17:51:15Z", "updated_at": "2018-11-05T01:08:50Z", "closed_at": "2018-11-05T01:08:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Summary\n\nWhen rustdoc creates documentation for a struct/enum with an array as one of the fields, the expression for array length is not evaluated, leading to less clear documentation. For example, take this struct Foo:\n\n``` rust\npub struct Foo(pub [i32; 7 + 1]);\n```\n\nOne might expect that rustdoc would produce documentation along the lines of this:\n\n``` rust\npub struct Foo(pub [i32; 8]);\n```\n\nInstead, it produces this:\n\n![doc](https://i.imgur.com/4Ny2DeD.png)\n\nThis might not immediately appear to be an issue - for example, it would be best for arrays with lengths defned as `const` values plus another value (e.g. `BAR + 1`) to have rustdoc output `BAR + 1`. However, it becomes much more of an issue when a programmer begins using macros. Take the following:\n\n``` rust\nmacro_rules! new_foo {\n    ($arr_len_minus_one:expr) => {\n        pub struct Foo(pub [i32; $arr_len_minus_one + 1]);\n    }\n}\n\nnew_foo!(7);\n```\n\nOne would expect that rustdoc would transform `$arr_len_minus_one` into 7, but instead the following is output:\n\n![doc](https://imgur.com/6mCdK8t.png)\n\nIt is impossible to discover the length of the array without looking at the source code. However, it can get far worse than that. Let's say the macro takes a series of identifiers (perhaps for an initialization function) and creates an array with a length determined by the number of identifiers given:\n\n``` rust\nmacro_rules! count { \n    ($foo:tt) => (1); \n    ($($element:tt),*) => {{$(count!($element) +)* 0}}; \n} \n\nmacro_rules! new_foo {\n    ($($field:ident),+) => {\n        pub struct Foo(pub [i32; count!($($field),+)]);\n    }\n}\n\nnew_foo!(a, b, c, d, e, f, g);\n```\n\nIn this case, the documentation looks like this:\n\n![doc](https://imgur.com/XugFJ2C.png)\n\nThat's unreadable even if you know how the code works - it's borderline impossible if these are macros that are only used internally to the library and aren't as documented as well as they could be. Even if rustdoc were to collapse the invocation down to an actual, macro-less expression the documentation would still look like this:\n\n``` rust\npub struct Foo(pub [i32; 1 + 1 + 1 + 1 + 1 + 1 + 1]);\n```\n\nThat's a bit more readable, but isn't anywhere near conveying the number of elements in an array at a glance, which is what documentation is supposed to do. Instead, rustdoc should aim to evaluate the expression giving the length of an arrray, like so:\n\n``` rust\npub struct Foo(pub [i32; 7]);\n```\n\nIn the event that the array length involves some constant value, rustdoc should instead attempt to fully simplify the expression, turning this:\n\n``` rust\npub const BAR: usize = 10;\n\npub struct Foo(pub [i32; BAR + 7 + 3]);\n```\n\ninto this:\n\n``` rust\npub struct Foo(pub [i32; BAR + 10]);\n```\n# Meta\n\n```\nrustc 1.9.0 (e4e8b6668 2016-05-18)\nbinary: rustc\ncommit-hash: e4e8b666850a763fdf1c3c2c142856ab51e32779\ncommit-date: 2016-05-18\nhost: x86_64-unknown-linux-gnu\nrelease: 1.9.0\n```\n", "closed_by": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/34579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/34579/timeline", "performed_via_github_app": null, "state_reason": "completed"}