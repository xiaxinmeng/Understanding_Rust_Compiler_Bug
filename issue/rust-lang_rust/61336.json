{"url": "https://api.github.com/repos/rust-lang/rust/issues/61336", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61336/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61336/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61336/events", "html_url": "https://github.com/rust-lang/rust/issues/61336", "id": 450096264, "node_id": "MDU6SXNzdWU0NTAwOTYyNjQ=", "number": 61336, "title": "\"Broken MIR\" ICE while creating array with const generic length from single value", "user": {"login": "carado", "id": 407034, "node_id": "MDQ6VXNlcjQwNzAzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/407034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carado", "html_url": "https://github.com/carado", "followers_url": "https://api.github.com/users/carado/followers", "following_url": "https://api.github.com/users/carado/following{/other_user}", "gists_url": "https://api.github.com/users/carado/gists{/gist_id}", "starred_url": "https://api.github.com/users/carado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carado/subscriptions", "organizations_url": "https://api.github.com/users/carado/orgs", "repos_url": "https://api.github.com/users/carado/repos", "events_url": "https://api.github.com/users/carado/events{/privacy}", "received_events_url": "https://api.github.com/users/carado/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1405345617, "node_id": "MDU6TGFiZWwxNDA1MzQ1NjE3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lazy-normalization", "name": "A-lazy-normalization", "color": "f7e101", "default": false, "description": "Area: lazy normalization (tracking issue: #60471)"}], "state": "closed", "locked": false, "assignee": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2019-05-30T02:11:32Z", "updated_at": "2019-08-20T07:44:42Z", "closed_at": "2019-08-20T07:44:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "A clean project with this code:\r\n```rust\r\n#![feature(const_generics)]\r\n\r\nfn f<T: Copy /* ICE's just as badly without Copy */, const N: usize>(x: T) -> [T; N] {\r\n\t[x; N]\r\n}\r\n\r\nfn main() {}\r\n```\r\nProduces this error:\r\n```\r\n    Checking rust5 v0.1.0 (/home/carado/tmp/rust5)\r\nwarning: the feature `const_generics` is incomplete and may cause the compiler to crash\r\n --> src/main.rs:1:12\r\n  |\r\n1 | #![feature(const_generics)]\r\n  |            ^^^^^^^^^^^^^^\r\n\r\nthread 'rustc' panicked at 'index out of bounds: the len is 1 but the index is 1', /rustc/37d001e4deb206ed954fde5d91690221e8306fc3/src/libcore/slice/mod.rs:2695:10\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.25/src/backtrace/libunwind.rs:97\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.25/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:47\r\n   3: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:36\r\n   4: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:197\r\n   5: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:211\r\n   6: rustc::util::common::panic_hook\r\n   7: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:478\r\n   8: std::panicking::continue_panic_fmt\r\n             at src/libstd/panicking.rs:381\r\n   9: rust_begin_unwind\r\n             at src/libstd/panicking.rs:308\r\n  10: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:85\r\n  11: core::panicking::panic_bounds_check\r\n             at src/libcore/panicking.rs:61\r\n  12: rustc_mir::borrow_check::nll::type_check::type_check\r\n  13: rustc_mir::borrow_check::nll::compute_regions\r\n  14: rustc_mir::borrow_check::do_mir_borrowck\r\n  15: rustc::ty::context::GlobalCtxt::enter_local\r\n  16: rustc_mir::borrow_check::mir_borrowck\r\n  17: rustc::ty::query::__query_compute::mir_borrowck\r\n  18: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::mir_borrowck>::compute\r\n  19: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  20: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  21: rustc::ty::<impl rustc::ty::context::TyCtxt>::par_body_owners\r\n  22: rustc::util::common::time\r\n  23: rustc_interface::passes::analysis\r\n  24: rustc::ty::query::__query_compute::analysis\r\n  25: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  26: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  27: rustc::ty::context::tls::enter_global\r\n  28: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  29: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  30: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  31: std::thread::local::LocalKey<T>::with\r\n  32: scoped_tls::ScopedKey<T>::set\r\n  33: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nquery stack during panic:\r\n#0 [mir_borrowck] processing `f`\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: internal compiler error: cat_expr Errd\r\n --> src/main.rs:3:47\r\n  |\r\n3 |   fn f<T: Copy, const N: usize>(x: T) -> [T; N] {\r\n  |  _______________________________________________^\r\n4 | |     [x; N]\r\n5 | | }\r\n  | |_^\r\n\r\nerror: internal compiler error: cat_expr Errd\r\n --> src/main.rs:4:2\r\n  |\r\n4 |     [x; N]\r\n  |     ^^^^^^\r\n\r\nerror: internal compiler error: QualifyAndPromoteConstants: MIR had errors\r\n --> src/main.rs:3:1\r\n  |\r\n3 | / fn f<T: Copy, const N: usize>(x: T) -> [T; N] {\r\n4 | |     [x; N]\r\n5 | | }\r\n  | |_^\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:12 ~ rust5[a994]::f[0]) (\"return type\"): bad type [type error]\r\n --> src/main.rs:3:1\r\n  |\r\n3 | / fn f<T: Copy, const N: usize>(x: T) -> [T; N] {\r\n4 | |     [x; N]\r\n5 | | }\r\n  | |_^\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:12 ~ rust5[a994]::f[0]) (LocalDecl { mutability: Mut, is_user_variable: None, internal: false, is_block_tail: None, ty: [type error], user_ty: UserTypeProjections { contents: [] }, name: None, source_info: SourceInfo { span: src/main.rs:3:1: 5:2, scope: scope[0] }, visibility_scope: scope[0] }): bad type [type error]\r\n --> src/main.rs:3:1\r\n  |\r\n3 | / fn f<T: Copy, const N: usize>(x: T) -> [T; N] {\r\n4 | |     [x; N]\r\n5 | | }\r\n  | |_^\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src/librustc_errors/lib.rs:356:17\r\nstack backtrace:\r\n   0:     0x7eff9d7fbcfa - backtrace::backtrace::libunwind::trace::h27e79239ae132594\r\n                               at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.25/src/backtrace/libunwind.rs:97\r\n   1:     0x7eff9d7fbcfa - backtrace::backtrace::trace_unsynchronized::h4d06032f1d31ea4f\r\n                               at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.25/src/backtrace/mod.rs:66\r\n   2:     0x7eff9d7fbcfa - std::sys_common::backtrace::_print::h87f958e4afa789cc\r\n                               at src/libstd/sys_common/backtrace.rs:47\r\n   3:     0x7eff9d7fbcfa - std::sys_common::backtrace::print::h9701366bda361a82\r\n                               at src/libstd/sys_common/backtrace.rs:36\r\n   4:     0x7eff9d7fbcfa - std::panicking::default_hook::{{closure}}::hdeb6e1bffcdd7ad2\r\n                               at src/libstd/panicking.rs:197\r\n   5:     0x7eff9d7fb9fb - std::panicking::default_hook::hda59c88c4e0c7e8b\r\n                               at src/libstd/panicking.rs:211\r\n   6:     0x7eff9b5774c0 - rustc::util::common::panic_hook::h5c18c3a9efba48a4\r\n   7:     0x7eff9d7fc558 - std::panicking::rust_panic_with_hook::hb309d4b58eca6d76\r\n                               at src/libstd/panicking.rs:478\r\n   8:     0x7eff9a1eaf04 - std::panicking::begin_panic::h4630c81ce88a3b0e\r\n   9:     0x7eff9a205cb4 - <rustc_errors::Handler as core::ops::drop::Drop>::drop::h72e0d28e271712f9\r\n  10:     0x7eff9db28951 - core::ptr::real_drop_in_place::h2f95b5568cdff1bc\r\n  11:     0x7eff9db32a30 - core::ptr::real_drop_in_place::hf9944cf4ccd8b0f9\r\n  12:     0x7eff9db34b03 - <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop::h9ab61e1d23124c65\r\n  13:     0x7eff9dafc9ab - core::ptr::real_drop_in_place::h500d402def4b18fe\r\n  14:     0x7eff9dafa3f6 - rustc_interface::interface::run_compiler_in_existing_thread_pool::hdc9adcf187c1c745\r\n  15:     0x7eff9db62a45 - std::thread::local::LocalKey<T>::with::hb4d77454d8f5b39f\r\n  16:     0x7eff9db10304 - scoped_tls::ScopedKey<T>::set::hf0af9addd0db626a\r\n  17:     0x7eff9db25103 - syntax::with_globals::hf05470816f33fc03\r\n  18:     0x7eff9db53d2c - std::sys_common::backtrace::__rust_begin_short_backtrace::hfd0071cd5db5cd9e\r\n  19:     0x7eff9d80d499 - __rust_maybe_catch_panic\r\n                               at src/libpanic_unwind/lib.rs:85\r\n  20:     0x7eff9dadde58 - core::ops::function::FnOnce::call_once{{vtable.shim}}::h101536dc4ddcc287\r\n  21:     0x7eff9d7dfa9e - <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once::h08bd7d4edd708d24\r\n                               at /rustc/37d001e4deb206ed954fde5d91690221e8306fc3/src/liballoc/boxed.rs:746\r\n  22:     0x7eff9d80c16f - <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once::he2a07dcda49e9385\r\n                               at /rustc/37d001e4deb206ed954fde5d91690221e8306fc3/src/liballoc/boxed.rs:746\r\n  23:     0x7eff9d80c16f - std::sys_common::thread::start_thread::h9f229612a1fc41e1\r\n                               at src/libstd/sys_common/thread.rs:13\r\n  24:     0x7eff9d80c16f - std::sys::unix::thread::Thread::new::thread_start::h5b2c91946063a815\r\n                               at src/libstd/sys/unix/thread.rs:79\r\n  25:     0x7eff9d743fa7 - start_thread\r\n                               at /builddir/glibc-2.29/nptl/pthread_create.c:486\r\n  26:     0x7eff9d665a1e - __GI___clone\r\n  27:                0x0 - <unknown>\r\nquery stack during panic:\r\nend of query stack\r\nthread panicked while panicking. aborting.\r\nerror: Could not compile `rust5`.\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --edition=2018 --crate-name rust5 src/main.rs --color always --crate-type bin --emit=dep-info,metadata -C debuginfo=2 -C metadata=a524629e5b525adf -C extra-filename=-a524629e5b525adf --out-dir /home/carado/tmp/rust5/target/debug/deps -C incremental=/home/carado/tmp/rust5/target/debug/incremental -L dependency=/home/carado/tmp/rust5/target/debug/deps` (signal: 4, SIGILL: illegal instruction)\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61336/timeline", "performed_via_github_app": null, "state_reason": "completed"}