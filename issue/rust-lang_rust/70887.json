{"url": "https://api.github.com/repos/rust-lang/rust/issues/70887", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70887/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70887/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70887/events", "html_url": "https://github.com/rust-lang/rust/issues/70887", "id": 595887665, "node_id": "MDU6SXNzdWU1OTU4ODc2NjU=", "number": 70887, "title": "Tracking Issue for Integer::{ilog,ilog2,ilog10}", "user": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 919710011, "node_id": "MDU6TGFiZWw5MTk3MTAwMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/disposition-merge", "name": "disposition-merge", "color": "008800", "default": false, "description": "This issue / PR is in PFCP or FCP with a disposition to merge it."}, {"id": 923282386, "node_id": "MDU6TGFiZWw5MjMyODIzODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/finished-final-comment-period", "name": "finished-final-comment-period", "color": "f9e189", "default": false, "description": "The final comment period is finished for this PR / Issue."}, {"id": 2240305001, "node_id": "MDU6TGFiZWwyMjQwMzA1MDAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/Libs-Tracked", "name": "Libs-Tracked", "color": "d4c5f9", "default": false, "description": "Libs issues that are tracked on the team's project board."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 68, "created_at": "2020-04-07T13:56:07Z", "updated_at": "2023-01-05T16:10:22Z", "closed_at": "2022-11-09T20:08:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Feature gate: `#![feature(int_log)]`\r\nStabilization report: https://github.com/rust-lang/rust/issues/70887#issuecomment-1210602692\r\n\r\n---\r\n\r\nThis is a tracking issue for adding `{checked_,}{ilog,ilog2,ilog10}` methods to `{u8,u16,u32,u64,u128}`. A full rationale can be found in https://github.com/rust-lang/rust/pull/80918#issue-552884252. But in short: integer logarithms [are fairly common](http://graphics.stanford.edu/~seander/bithacks.html#IntegerLog10), but require care to implement correctly, and effort to implement efficiently.\r\n\r\nBecause we expose `log` methods for floats it can be tempting for users to use that instead, which can lead to rounding errors. In the following example we're trying to calculate `base10` for an integer. We might try and calculate the `base2` for the values, and attempt [a base swap](https://www.rapidtables.com/math/algebra/Logarithm.html#log-rules) to arrive at `base10`. However because we're performing intermediate rounding we arrive at the wrong result:\r\n\r\n```rust\r\n// log10(900) = ~2.95 = 2\r\ndbg!(900f32.log10() as u64);\r\n    \r\n// log base change rule: logb(x) = logc(x) / logc(b)\r\n// log2(900) / log2(10) = 9/3 = 3, which is incorrect!\r\ndbg!((900f32.log2() as u64) / (10f32.log2() as u64));\r\n```\r\n\r\n### Public API\r\n\r\n<!--\r\nFor most library features, it'd be useful to include a summarized version of the public API.\r\n(E.g. just the public function signatures without their doc comments or implementation.)\r\n-->\r\n\r\n```rust\r\n// integer log\r\nassert_eq!(5_u16.ilog(5), 1);\r\nassert_eq!(2_u32.ilog2(), 1);\r\nassert_eq!(10_u32.ilog10(), 1);\r\n\r\n// checked integer log\r\nassert_eq!(5_u16.checked_ilog(5), Some(1));\r\nassert_eq!(2_u32.checked_ilog2(), Some(1));\r\nassert_eq!(10_u32.checked_ilog10(), Some(1));\r\nassert_eq!(0_u64.checked_ilog(5), None);\r\n```\r\n\r\n### Steps / History\r\n\r\n<!--\r\nFor larger features, more steps might be involved.\r\nIf the feature is changed later, please add those PRs here as well.\r\n-->\r\n\r\n- [x] Implementation: https://github.com/rust-lang/rust/pull/80918\r\n- [x] Stabilization report https://github.com/rust-lang/rust/issues/70887#issuecomment-1210602692\r\n- [x] Final comment period (FCP)\r\n\r\n<!--\r\nOnce the feature has gone through a few release cycles and there are no\r\nunresolved questions left, the feature might be ready for stabilization.\r\n\r\nIf this feature didn't go through the RFC process, a final comment period\r\n(FCP) is always needed before stabilization. This works as follows:\r\n\r\nA library API team member can kick off the stabilization process, at which point\r\nthe rfcbot will ask all the team members to verify they agree with\r\nstabilization. Once enough members agree and there are no concerns, the final\r\ncomment period begins: this issue will be marked as such and will be listed\r\nin the next This Week in Rust newsletter. If no blocking concerns are raised in\r\nthat period of 10 days, a stabilzation PR can be opened by anyone.\r\n-->\r\n\r\n### Unresolved Questions\r\n\r\n<!--\r\nInclude any open questions that need to be answered before the feature can be\r\nstabilised. If multiple (unrelated) big questions come up, it can be a good idea\r\nto open a separate issue for each, to make it easier to keep track of the\r\ndiscussions.\r\n\r\nIt's useful to link any relevant discussions and conclusions (whether on GitHub,\r\nZulip, or the internals forum) here.\r\n-->\r\n\r\n\r\n- [x] Can we further optimize the `ilog10` implementation? https://github.com/rust-lang/rust/pull/70835#issuecomment-609976593\r\n- [x] Can we make these methods `const fn`?\r\n- [x] Can we implement these types for `NonZero{Int}`? https://github.com/rust-lang/rust/pull/70835#issuecomment-611336828\r\n    - [x] Can we omit returning `Option` for `ilog2/ilog10` on `NonZero{Int}`?\r\n- [x] Should the methods be called `Integer::{ilog,ilog2,ilog10}` instead? https://github.com/rust-lang/rust/pull/70835#issuecomment-611998098 https://github.com/rust-lang/rust/issues/70887#issuecomment-616580640\r\n\r\n## Implementation History\r\n\r\n- https://github.com/rust-lang/rust/pull/70835 - initial PR, closed due to inactivity\r\n- https://github.com/rust-lang/rust/pull/80918 - attempt 2 to implement `log` methods, merged\r\n- https://github.com/rust-lang/rust/pull/92956 - `log` methods for `NonZero` types\r\n- https://github.com/rust-lang/rust/pull/100332 - rename `log` methods to `ilog`\r\n- https://github.com/rust-lang/rust/pull/102578 - panic on invalid args\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70887/reactions", "total_count": 46, "+1": 32, "-1": 0, "laugh": 0, "hooray": 14, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70887/timeline", "performed_via_github_app": null, "state_reason": "completed"}