{"url": "https://api.github.com/repos/rust-lang/rust/issues/97263", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/97263/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/97263/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/97263/events", "html_url": "https://github.com/rust-lang/rust/issues/97263", "id": 1244128835, "node_id": "I_kwDOAAsO6M5KJ-ZD", "number": 97263, "title": "Bootstrapping logic has trouble with target triples with dots in the name (e.g. `thumbv8m.main-none-eabihf`)", "user": {"login": "alex-pinkus", "id": 62194897, "node_id": "MDQ6VXNlcjYyMTk0ODk3", "avatar_url": "https://avatars.githubusercontent.com/u/62194897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-pinkus", "html_url": "https://github.com/alex-pinkus", "followers_url": "https://api.github.com/users/alex-pinkus/followers", "following_url": "https://api.github.com/users/alex-pinkus/following{/other_user}", "gists_url": "https://api.github.com/users/alex-pinkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-pinkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-pinkus/subscriptions", "organizations_url": "https://api.github.com/users/alex-pinkus/orgs", "repos_url": "https://api.github.com/users/alex-pinkus/repos", "events_url": "https://api.github.com/users/alex-pinkus/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-pinkus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 289259951, "node_id": "MDU6TGFiZWwyODkyNTk5NTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-help-wanted", "name": "E-help-wanted", "color": "02E10C", "default": false, "description": "Call for participation: Help is requested to fix this issue."}, {"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "yue4u", "id": 26110087, "node_id": "MDQ6VXNlcjI2MTEwMDg3", "avatar_url": "https://avatars.githubusercontent.com/u/26110087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yue4u", "html_url": "https://github.com/yue4u", "followers_url": "https://api.github.com/users/yue4u/followers", "following_url": "https://api.github.com/users/yue4u/following{/other_user}", "gists_url": "https://api.github.com/users/yue4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/yue4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yue4u/subscriptions", "organizations_url": "https://api.github.com/users/yue4u/orgs", "repos_url": "https://api.github.com/users/yue4u/repos", "events_url": "https://api.github.com/users/yue4u/events{/privacy}", "received_events_url": "https://api.github.com/users/yue4u/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yue4u", "id": 26110087, "node_id": "MDQ6VXNlcjI2MTEwMDg3", "avatar_url": "https://avatars.githubusercontent.com/u/26110087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yue4u", "html_url": "https://github.com/yue4u", "followers_url": "https://api.github.com/users/yue4u/followers", "following_url": "https://api.github.com/users/yue4u/following{/other_user}", "gists_url": "https://api.github.com/users/yue4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/yue4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yue4u/subscriptions", "organizations_url": "https://api.github.com/users/yue4u/orgs", "repos_url": "https://api.github.com/users/yue4u/repos", "events_url": "https://api.github.com/users/yue4u/events{/privacy}", "received_events_url": "https://api.github.com/users/yue4u/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-05-22T02:28:11Z", "updated_at": "2022-05-22T19:16:17Z", "closed_at": "2022-05-22T19:16:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running [`configure`](https://github.com/rust-lang/rust/blob/master/configure) to cross-compile for a Cortex M target, a few issues arise with the fact that the target has a `.` in the name. There are two issues that I noticed:\n1. `configure.py` generates an invalid `config.toml` \u2014 this is easy to fix with a change to the example file.\n2. `cc_detect.rs` looks for compiler flags in difficult-to-name variables \u2014 this is harder to fix, but can be (painfully) worked around.\n\nTo illustrate **issue 1**, I tried this code:\n\n```bash\ngit clone https://github.com/rust-lang/rust.git\ncd rust\n./configure --target \"thumbv8m.main-none-eabihf\"\npython ./x.py dist\n```\n\nI expected to see this happen: compilation should get pretty far (I'm eliding some of the things that would make it actually _succeed_, for brevity, but successfully building stage0 rustc is expected at least)\n\nInstead, this happened: compilation fails after one minute with the error:\n```\nfailed to parse TOML configuration 'config.toml': unknown field `main-none-eabihf`, expected one of `cc`, `cxx`, `ar`, `ranlib`, `default-linker`, `linker`, `llvm-config`, `llvm-filecheck`, `android-ndk`, `sanitizers`, `profiler`, `crt-static`, `musl-root`, `musl-libdir`, `wasi-root`, `qemu-rootfs`, `no-std` for key `target.thumbv8m`\n```\n\nThis is because the generated `config.toml` contains this line (note the problematic period):\n```\n[target.thumbv8m.main-none-eabihf]\n```\n\nI believe this comes from [here](https://github.com/rust-lang/rust/blob/master/src/bootstrap/configure.py#L410), where we unconditionally replace `x86_64-unknown-linux-gnu` in the [example `config.toml`](https://github.com/rust-lang/rust/blob/e52e7115c7477bbc257c44447bb7eccbcfe9cfb2/config.toml.example#L642). If `config.toml.example` is updated to put quotes around its target architecture, this issue is solved:\n```\n[target.'x86_64-unknown-linux-gnu']\n```\n\n**Issue 2** takes more effort to reproduce, and is technically not a bug in rustc, but in the `cc` crate. Or maybe it's not a bug at all, but it's pretty darn unfortunate. In particular, the intended way to specify `CFLAGS` (and friends) for `thumbv8m.main-none-eabihf` is to write to the environment variable `CFLAGS_thumbv8m.main-none-eabihf`, or [a few other permutations](https://github.com/rust-lang/cc-rs/blob/main/src/lib.rs#L2354-L2372). The problem: most shells do not allow users to export environment variables that contain the `.` character:\n\n```\n# bash\n$ export CFLAGS_thumbv8m.main-none-eabi=\"foo\"\n-bash: export: `CFLAGS_thumbv8m.main-none-eabi=foo': not a valid identifier\n# zsh\n% export CFLAGS_thumbv8m.main-none-eabi=\"foo\"\nexport: not valid in this context: CFLAGS_thumbv8m.main-none-eabi\n```\n\nIf I fix issue 1 as described above, and use the workaround [described here](https://unix.stackexchange.com/a/93533) to get around issue 2, I am able to build a target that has a period in it.\n\n### Meta\n\nThis was tested with current top of tree (commit `9257f5aad02b65665a6e23e5b92938548302e129`) but does not appear to be a recent regression.\n\nI see the same behavior when my host is either `x86_64-apple-darwin` or `x86_64-unknown-linux-gnu`, which is unsurprising.\n\nI think it makes sense to split issues 1 and 2 into separate bug reports (issue 2 being reported on the `cc` crate) -- but wanted to get this out there first to simply reflect that targets with dots are currently difficult to build for.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"yue4u\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/97263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/97263/timeline", "performed_via_github_app": null, "state_reason": "completed"}