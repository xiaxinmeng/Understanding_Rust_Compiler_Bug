{"url": "https://api.github.com/repos/rust-lang/rust/issues/74928", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74928/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74928/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74928/events", "html_url": "https://github.com/rust-lang/rust/issues/74928", "id": 668213214, "node_id": "MDU6SXNzdWU2NjgyMTMyMTQ=", "number": 74928, "title": "sort_unstable's random swap is biased", "user": {"login": "TheIronBorn", "id": 7707250, "node_id": "MDQ6VXNlcjc3MDcyNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7707250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheIronBorn", "html_url": "https://github.com/TheIronBorn", "followers_url": "https://api.github.com/users/TheIronBorn/followers", "following_url": "https://api.github.com/users/TheIronBorn/following{/other_user}", "gists_url": "https://api.github.com/users/TheIronBorn/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheIronBorn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheIronBorn/subscriptions", "organizations_url": "https://api.github.com/users/TheIronBorn/orgs", "repos_url": "https://api.github.com/users/TheIronBorn/repos", "events_url": "https://api.github.com/users/TheIronBorn/events{/privacy}", "received_events_url": "https://api.github.com/users/TheIronBorn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 289259951, "node_id": "MDU6TGFiZWwyODkyNTk5NTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-help-wanted", "name": "E-help-wanted", "color": "02E10C", "default": false, "description": "Call for participation: Help is requested to fix this issue."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}, {"id": 2238194189, "node_id": "MDU6TGFiZWwyMjM4MTk0MTg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-slice", "name": "A-slice", "color": "f7e101", "default": false, "description": "Area: [T]"}], "state": "closed", "locked": false, "assignee": {"login": "JmPotato", "id": 1446531, "node_id": "MDQ6VXNlcjE0NDY1MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1446531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JmPotato", "html_url": "https://github.com/JmPotato", "followers_url": "https://api.github.com/users/JmPotato/followers", "following_url": "https://api.github.com/users/JmPotato/following{/other_user}", "gists_url": "https://api.github.com/users/JmPotato/gists{/gist_id}", "starred_url": "https://api.github.com/users/JmPotato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JmPotato/subscriptions", "organizations_url": "https://api.github.com/users/JmPotato/orgs", "repos_url": "https://api.github.com/users/JmPotato/repos", "events_url": "https://api.github.com/users/JmPotato/events{/privacy}", "received_events_url": "https://api.github.com/users/JmPotato/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JmPotato", "id": 1446531, "node_id": "MDQ6VXNlcjE0NDY1MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1446531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JmPotato", "html_url": "https://github.com/JmPotato", "followers_url": "https://api.github.com/users/JmPotato/followers", "following_url": "https://api.github.com/users/JmPotato/following{/other_user}", "gists_url": "https://api.github.com/users/JmPotato/gists{/gist_id}", "starred_url": "https://api.github.com/users/JmPotato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JmPotato/subscriptions", "organizations_url": "https://api.github.com/users/JmPotato/orgs", "repos_url": "https://api.github.com/users/JmPotato/repos", "events_url": "https://api.github.com/users/JmPotato/events{/privacy}", "received_events_url": "https://api.github.com/users/JmPotato/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-29T22:34:47Z", "updated_at": "2022-03-30T11:40:53Z", "closed_at": "2022-03-30T11:40:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "The \"modulo a power of two\" technique used by `sort::break_patterns` is far more biased than modulo or [integer multiplication](https://arxiv.org/abs/1805.10941). (I think that their sort of bias is acceptable here).\r\nhttps://github.com/rust-lang/rust/blob/584e83dd5ae7a75b8214560c22eafbcfe153caa6/library/core/src/slice/sort.rs#L582-L585\r\n\r\nA graph of the techniques for `len = 50` and 8-bit integers using `Mod[Mod[x, 2^Ceiling[Log[2, len]]], len]` (Mathematica) for the power method ([code](https://gist.github.com/TheIronBorn/e31bb13ff32349595eddde20d1c77c99))\r\n![image](https://user-images.githubusercontent.com/7707250/88842000-5489b300-d1ce-11ea-9eb3-a28c6aa389e1.png)\r\n\r\nThe average standard deviation of the counts of possible outputs for all possible `len` are so ([code](https://gist.github.com/TheIronBorn/71b7b160d604ac5d83c4c847a31c0933)):\r\n|            | pow     | mul  | mod  |\r\n| ---        | ---     | ---  | ---  |\r\n| **8-bit**  | 10.85   | 0.16 | 0.16 |\r\n| **16-bit** | 2776.36 | 0.16 | 0.16 |\r\n\r\nFor a picture of the real-world effect of this bias, here is an image where darker pixels are outputs, the vertical axis is the three outputs of the `sort.rs` code, and the horizontal axis is each new `len` (32-bit, 50_000 `len` values after `MAX_INSERTION`, shrunk in post-processing to fit, code and full image for this and all below [here](https://gist.github.com/TheIronBorn/3138c91f23122ea68239af7646417bc1))\r\n![Xorshift scaled](https://user-images.githubusercontent.com/7707250/88843777-32456480-d1d1-11ea-8597-d5d7e7c5cbda.png)\r\nThere is a clear bias toward lower values even for our limited use.\r\n\r\nAnd here it is using [`rand::thread_rng`](https://docs.rs/rand/0.7.3/rand/fn.thread_rng.html)\r\n![StdRng scaled](https://user-images.githubusercontent.com/7707250/88845515-d0d2c500-d1d3-11ea-96b0-ab534c360d58.png)\r\nStill a clear bias\r\n\r\nUsing the integer multiplication reduction we get\r\n|`Xorshift`|`thread_rng`|\r\n|---|---|\r\n|![Xorshift mul scaled](https://user-images.githubusercontent.com/7707250/88845635-f790fb80-d1d3-11ea-8276-2afa97c28b40.png)|![ThreadRng mul scaled](https://user-images.githubusercontent.com/7707250/88845648-fc55af80-d1d3-11ea-822a-be8086542435.png)|\r\n\r\nStill some clear non-randomness but the bias is more evenly distributed across all values (the picture is uglier in full-size though due to Xorshift's low quality).\r\n\r\nTo avoid that patterning the main issue is the low entropy of our `len` seed. Iterating the PRNG 2 times before using the output produces:\r\n![XorshiftIterated scaled](https://user-images.githubusercontent.com/7707250/88854913-96702480-d1e1-11ea-8a5e-2c3bb80c29c3.png)\r\nDecent but a little too even.\r\n\r\nA better solution is to use an integer hash as a PRNG instead, they are much better at immediately using low entropy \"seeds\".\r\n[\"7 shifts\"](https://burtleburtle.net/bob/hash/integer.html) by Bob Jenkins\r\n![Jenkins scaled](https://user-images.githubusercontent.com/7707250/88855092-e0590a80-d1e1-11ea-98d2-4246fb7f51d3.png)\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"JmPotato\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74928/timeline", "performed_via_github_app": null, "state_reason": "completed"}