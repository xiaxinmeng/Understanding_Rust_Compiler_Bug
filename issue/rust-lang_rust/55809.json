{"url": "https://api.github.com/repos/rust-lang/rust/issues/55809", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55809/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55809/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55809/events", "html_url": "https://github.com/rust-lang/rust/issues/55809", "id": 379005499, "node_id": "MDU6SXNzdWUzNzkwMDU0OTk=", "number": 55809, "title": "Mixing async functions and &mut leads to overflow evaluating requirement", "user": {"login": "agrif", "id": 308296, "node_id": "MDQ6VXNlcjMwODI5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/308296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agrif", "html_url": "https://github.com/agrif", "followers_url": "https://api.github.com/users/agrif/followers", "following_url": "https://api.github.com/users/agrif/following{/other_user}", "gists_url": "https://api.github.com/users/agrif/gists{/gist_id}", "starred_url": "https://api.github.com/users/agrif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agrif/subscriptions", "organizations_url": "https://api.github.com/users/agrif/orgs", "repos_url": "https://api.github.com/users/agrif/repos", "events_url": "https://api.github.com/users/agrif/events{/privacy}", "received_events_url": "https://api.github.com/users/agrif/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 679846574, "node_id": "MDU6TGFiZWw2Nzk4NDY1NzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-generators", "name": "A-generators", "color": "f7e101", "default": false, "description": "Area: Generators"}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1259720434, "node_id": "MDU6TGFiZWwxMjU5NzIwNDM0", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Polish", "name": "AsyncAwait-Polish", "color": "d4c5f9", "default": false, "description": "Async-await issues that are part of the \"polish\" area"}], "state": "closed", "locked": false, "assignee": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-11-09T03:09:29Z", "updated_at": "2019-03-16T17:52:48Z", "closed_at": "2019-03-16T17:52:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Code:\r\n\r\n~~~~{.rs}\r\n#![feature(async_await, await_macro, futures_api)]\r\n\r\n// Consider this a stand-in for tokio::io::AsyncRead\r\ntrait Foo { }\r\nimpl Foo for () { }\r\nimpl<'a, T> Foo for &'a mut T where T: Foo { }\r\n\r\n// Consider this a stand-in for tokio::io::read\r\nasync fn foo_async<T>(_v: T) -> u8 where T: Foo {\r\n    0\r\n}\r\n\r\n// this should just act exactly like foo_async...\r\nasync fn bad<T>(v: T) -> u8 where T: Foo {\r\n    await!(foo_async(v))\r\n}\r\n\r\n// let's see if it is!\r\nasync fn async_main() {\r\n    let mut v = ();\r\n    \r\n    // compiler error:\r\n    let _ = await!(bad(&mut v));\r\n    // totally fine:\r\n    let _ = await!(foo_async(&mut v));\r\n    // also totally fine:\r\n    let _ = await!(bad(v));\r\n}\r\n\r\nfn main() {\r\n    let _ = async_main();\r\n}\r\n~~~~\r\n\r\n[Playground.](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=03484499bcefb4228e5542ec1c377776)\r\n\r\nThis fails to compile:\r\n\r\n~~~~\r\nCompiling playground v0.0.1 (/playground)\r\nerror[E0275]: overflow evaluating the requirement `[static generator@src/main.rs:9:49: 11:2 {}]: std::marker::Freeze`\r\n  |\r\n  = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\r\n  = note: required because of the requirements on the impl of `std::marker::Freeze` for `[static generator@src/main.rs:9:49: 11:2 {}]`\r\n[ ... line repeated many, many times ... ]\r\n  = note: required because it appears within the type `impl std::future::Future`\r\n  = note: required because it appears within the type `impl std::future::Future`\r\n  = note: required because it appears within the type `{impl std::future::Future, ()}`\r\n  = note: required because it appears within the type `[static generator@src/main.rs:14:42: 16:2 v:&mut () {impl std::future::Future, ()}]`\r\n  = note: required because it appears within the type `std::future::GenFuture<[static generator@src/main.rs:14:42: 16:2 v:&mut () {impl std::future::Future, ()}]>`\r\n  = note: required because it appears within the type `impl std::future::Future`\r\n  = note: required because it appears within the type `impl std::future::Future`\r\n  = note: required because it appears within the type `for<'r, 's> {(), impl std::future::Future, impl std::future::Future, impl std::future::Future}`\r\n  = note: required because it appears within the type `[static generator@src/main.rs:19:23: 28:2 for<'r, 's> {(), impl std::future::Future, impl std::future::Future, impl std::future::Future}]`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0275`.\r\nerror: Could not compile `playground`.\r\n~~~~\r\n\r\nThis might be related to #50674, except that the code that triggers it seems more likely to be valid. I ran into this bug when trying to use `tokio` to read data and pass it off to `serde`. At the very least, the error message is *extremely* confusing.\r\n\r\nSlightly modifying this code will occasionally trigger another compiler error (something about DeBruijn indices) but I have lost the exact code that triggers it.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55809/timeline", "performed_via_github_app": null, "state_reason": "completed"}