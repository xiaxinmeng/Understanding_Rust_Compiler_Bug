{"url": "https://api.github.com/repos/rust-lang/rust/issues/76267", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/76267/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/76267/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/76267/events", "html_url": "https://github.com/rust-lang/rust/issues/76267", "id": 691532717, "node_id": "MDU6SXNzdWU2OTE1MzI3MTc=", "number": 76267, "title": "Avoid 'not found' terminology when there is only one potentially applicable method.", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-09-03T00:40:05Z", "updated_at": "2021-01-28T15:19:15Z", "closed_at": "2021-01-28T15:19:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following code:\r\n\r\n```rust\r\nstruct Foo<T>(T);\r\ntrait MyTrait {\r\n    fn my_fn(&self) {}\r\n}\r\nimpl<T: Copy> MyTrait for Foo<T> {}\r\n\r\nfn main() {\r\n    Foo(String::new()).my_fn();\r\n}\r\n```\r\n\r\ngives the following error:\r\n\r\n```\r\nerror[E0599]: no method named `my_fn` found for struct `Foo<std::string::String>` in the current scope\r\n   --> src/main.rs:8:24\r\n    |\r\n1   |   struct Foo<T>(T);\r\n    |   -----------------\r\n    |   |\r\n    |   method `my_fn` not found for this\r\n    |   doesn't satisfy `Foo<std::string::String>: MyTrait`\r\n...\r\n8   |       Foo(String::new()).my_fn();\r\n    |                          ^^^^^ method not found in `Foo<std::string::String>`\r\n    |\r\n    = note: the method `my_fn` exists but the following trait bounds were not satisfied:\r\n            `std::string::String: std::marker::Copy`\r\n            which is required by `Foo<std::string::String>: MyTrait`\r\n```\r\n\r\nIf we change the call to `my_fn()` to call some completely nonexistent method (e.g. `missing_method()`), we get the following error.\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0599]: no method named `missing_method` found for struct `Foo<std::string::String>` in the current scope\r\n --> src/main.rs:8:24\r\n  |\r\n1 | struct Foo<T>(T);\r\n  | ----------------- method `missing_method` not found for this\r\n...\r\n8 |     Foo(String::new()).missing_method();\r\n  |                        ^^^^^^^^^^^^^^ method not found in `Foo<std::string::String>`\r\n```\r\n\r\nThese two error messages are quite similar - however, they really mean two completely different things. The first error is due to a trait bound error - there's only one in-scope method that the user could possibly be trying to call, but the receiver is not valid. The second error is caused by there being no methods that could even possibly apply - other than suggesting similarly-named methods or additional trait imports, there's really nothing else for the error message to say.\r\n\r\nI think using the 'no method found' terminology is the first case is very misleading. It requires the user to read further into the error message to determine if the receiver is invalid, or if they made a typo/tried to call a method that was removed in a newer release of a crate.\r\n\r\nI propose that we move the \"method `foo` exists but ...\" note to become the main error message. In the case of multiple possibilities, we could say something like \"cannot call method `foo` on base type `bar` due to ...\".", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/76267/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/76267/timeline", "performed_via_github_app": null, "state_reason": "completed"}