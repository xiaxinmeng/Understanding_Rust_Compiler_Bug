{"url": "https://api.github.com/repos/rust-lang/rust/issues/58372", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58372/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58372/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58372/events", "html_url": "https://github.com/rust-lang/rust/issues/58372", "id": 408784713, "node_id": "MDU6SXNzdWU0MDg3ODQ3MTM=", "number": 58372, "title": "Make `-Z self-profile` more efficient", "user": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-02-11T13:36:57Z", "updated_at": "2019-04-15T09:35:47Z", "closed_at": "2019-04-15T09:35:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The self-profiling feature is going to make profiling the compilers performance a lot easier. However, a recent first stab at collecting more detailed information (see https://github.com/rust-lang/rust/pull/58085) still has too much overhead.\r\n\r\nHere are some of the things that could be improved:\r\n - [x] Move post-processing of the collected data out of the `rustc` process, as much as possible. [SelfProfiler::get_results()](https://github.com/rust-lang/rust/blob/576df31bedd35a1c7336ce7259bbe93ab662edef/src/librustc/util/profiling.rs#L333-L339) does a lot of work for generating the statistics from the collected events. All of this should probably be moved to a separate tool that runs after profiling is done.\r\n\r\n- [x] Reduce the amount of dispatch and locking that needs to be done for each event. For each event we have to get exclusive access to the profiler (`RefCell`/ `parking_lot` mutex) and then look up the event stream for the current thread in an `FxHashMap`. This should probably solved via thread-local data somehow. \r\n\r\n- [x] Reduce the size of events. [Events](https://github.com/rust-lang/rust/blob/576df31bedd35a1c7336ce7259bbe93ab662edef/src/librustc/util/profiling.rs#L20-L28) are quite big (32 bytes on `x86_64` would be my guess). The timestamp can be reduced to 64 bits if we just measure the time from process start. The `&str` containing the query name can be replaced by a 4 byte tag.\r\n\r\n- [x] Persist events to disk in a binary format. We should probably open a memory mapped file per thread that we write events to directly. If events don't contain pointers they can be written to disk verbatim. The post-processing tool can then convert them to something platform independent. \r\n\r\nSome time soon we also want to record query keys per event. This can already be done efficiently by storing the 32 bit `DepNodeIndex` that corresponds to a query (which also obviates the need to store the query name in each event). However, in order for the `DepNodeIndex` to be useful, we'll need to create a persist a mapping of `DepNodeIndex -> String` at some point before the `tcx` is destroyed (i.e. in the middle of the compilation process). I expect that creating this map will not be entirely cheap `:/`\r\n\r\n@Mark-Simulacrum, as you can see the whole workflow around self-profiling will change quite a bit, so I \r\nthink it's too early to add infrastructure for it to perf.rlo just yet. \r\n\r\ncc @wesleywiser @nnethercote (and @rust-lang/wg-compiler-performance for good measure)", "closed_by": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58372/timeline", "performed_via_github_app": null, "state_reason": "completed"}