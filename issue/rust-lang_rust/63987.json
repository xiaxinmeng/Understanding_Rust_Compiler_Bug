{"url": "https://api.github.com/repos/rust-lang/rust/issues/63987", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63987/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63987/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63987/events", "html_url": "https://github.com/rust-lang/rust/issues/63987", "id": 486675645, "node_id": "MDU6SXNzdWU0ODY2NzU2NDU=", "number": 63987, "title": "Lint against overlapping pattern ranges and pattern ranges with small holes caught by `_`", "user": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-08-29T00:41:02Z", "updated_at": "2019-10-19T17:46:07Z", "closed_at": "2019-10-19T17:46:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For both exclusive(nightly) and inclusive range patterns, we don't have any lint about overlapping ranges. We probably should complain about `100..=500` being partially covered already. This would minimize the likelihood of the following off-by-one error going unnoticed:\r\n\r\n```\r\nfn main() {\r\n    let x: u32 = 301;\r\n    match x {\r\n        0..=200 => println!(\"a\"),\r\n        200..=300 => println!(\"b\"),\r\n        300..=400 => println!(\"c\"),\r\n        100..=500 => println!(\"x\"),\r\n        _ => println!(\"d\"),\r\n    }\r\n}\r\n```\r\n\r\nIt would also be interesting to have a 1 or 2 value wide holes detection in the presence of a `_` pattern to detect confusion between exclusive and inclusive ranges:\r\n\r\n```\r\n#![feature(exclusive_range_pattern)]\r\n\r\nfn main() {\r\n    let x: u32 = 301;\r\n    match x {\r\n        0..200 => println!(\"a\"),\r\n        201..300 => println!(\"b\"),\r\n        301..400 => println!(\"c\"),\r\n        _ => println!(\"d\"),\r\n    }\r\n}\r\n```\r\n\r\nWe already have range coverage checks when not using `_`:\r\n\r\n```\r\nerror[E0004]: non-exhaustive patterns: `200u32`, `300u32` and `400u32..=std::u32::MAX` not covered\r\n --> src/main.rs:5:11\r\n  |\r\n5 |     match x {\r\n  |           ^ patterns `200u32`, `300u32` and `400u32..=std::u32::MAX` not covered\r\n  |\r\n  = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\r\n```\r\n\r\nWe might want to just lint against `_` and instead ask to be explicit to handle the \"small holes\" case.\r\n\r\nCC https://github.com/rust-lang/rust/issues/37854 for the `exclusive_range_pattern` case.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63987/reactions", "total_count": 3, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 1, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63987/timeline", "performed_via_github_app": null, "state_reason": "completed"}