{"url": "https://api.github.com/repos/rust-lang/rust/issues/69502", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69502/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69502/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69502/events", "html_url": "https://github.com/rust-lang/rust/issues/69502", "id": 571750264, "node_id": "MDU6SXNzdWU1NzE3NTAyNjQ=", "number": 69502, "title": "Type Inferencing of Type Parameters with Associated Types Is Incorrect", "user": {"login": "bobyangyf", "id": 10293755, "node_id": "MDQ6VXNlcjEwMjkzNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/10293755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobyangyf", "html_url": "https://github.com/bobyangyf", "followers_url": "https://api.github.com/users/bobyangyf/followers", "following_url": "https://api.github.com/users/bobyangyf/following{/other_user}", "gists_url": "https://api.github.com/users/bobyangyf/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobyangyf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobyangyf/subscriptions", "organizations_url": "https://api.github.com/users/bobyangyf/orgs", "repos_url": "https://api.github.com/users/bobyangyf/repos", "events_url": "https://api.github.com/users/bobyangyf/events{/privacy}", "received_events_url": "https://api.github.com/users/bobyangyf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-27T00:51:51Z", "updated_at": "2020-02-27T08:16:03Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Rust fails to properly infer types when there is a type parameter that implements are trait that contains associated types that have relationships between each other.\r\n\r\nSuppose there are two structs `Wrapper1` and `Wrapper2` that each hold a type `I1` and `I2` respectively.\r\nWe want to express the relationship that `I2 : Deref<Target = I1>`\r\nSo there's a 2 ways to do this:\r\n\r\n1.  define `Wrapper1` and `Wrapper2` with 2 types, `T1` and `T2` where `T2 : Deref<Target = T1>`\r\n    e.g.\r\n    https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=5c8869c7499b8cf628695b8b8a66ad40\r\n   \r\n2. define a type `WT` where `WT` has types `Inner1` and `Inner2` such that `Inner2 : Deref<Target = Self::Inner1>`.\r\n    e.g.\r\n    https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=892489013b67f5f8ef5de1e60dcdb1ef\r\n\r\nHowever, in the second case, the compiler cannot infer types correctly for code to use the properties of the associated types `Inner2 : Deref<Target = Self::Inner1>`.\r\n\r\nIn the above code examples, `foo2` does not compile in 2.\r\nIt looks like the compiler is unable to infer the types correctly and apply the Deref, since for `foo1`, where we explicitly indicate the type, it compiles properly.\r\n\r\nThis ends up causing the Deref traits to not be always inferred properly by other users too.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69502/timeline", "performed_via_github_app": null, "state_reason": null}