{"url": "https://api.github.com/repos/rust-lang/rust/issues/102735", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102735/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102735/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102735/events", "html_url": "https://github.com/rust-lang/rust/issues/102735", "id": 1399360765, "node_id": "I_kwDOAAsO6M5TaIz9", "number": 102735, "title": "Macro call breaks debug line information in PDB", "user": {"login": "artemmukhin", "id": 4854600, "node_id": "MDQ6VXNlcjQ4NTQ2MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4854600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artemmukhin", "html_url": "https://github.com/artemmukhin", "followers_url": "https://api.github.com/users/artemmukhin/followers", "following_url": "https://api.github.com/users/artemmukhin/following{/other_user}", "gists_url": "https://api.github.com/users/artemmukhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/artemmukhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artemmukhin/subscriptions", "organizations_url": "https://api.github.com/users/artemmukhin/orgs", "repos_url": "https://api.github.com/users/artemmukhin/repos", "events_url": "https://api.github.com/users/artemmukhin/events{/privacy}", "received_events_url": "https://api.github.com/users/artemmukhin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-10-06T10:59:41Z", "updated_at": "2022-10-06T10:59:41Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Certain macro calls seem to break the debug line information in PDB files.\r\n\r\nConsider the following code:\r\n```Rust\r\nfn main() {\r\n    let my_string_1 = String::from(\"a\");\r\n    let my_string_2 = String::from(\"b\");\r\n    println!(\"{}\", my_string_1); // break\r\n}\r\n```\r\nWhen the debugger stops at `println!` call, it does not show `my_string_2` variable and is unable to evaluate it when adding it as a watch. This affects both Visual Studio debugger and MSVC-enabled LLDB, with 1.64.0-stable and 1.66.0-nightly Rust toolchains.\r\n\r\n![string_println_debuginfo_bug](https://user-images.githubusercontent.com/4854600/194296285-eb2e06cc-98db-48de-b860-cb263f16e1cf.PNG)\r\n\r\n\r\n<details><summary>PDB dump</summary>\r\n<p>\r\n\r\n```\r\nMod 0037: \r\n     4 | S_OBJNAME [size = 12] sig=0, ``\r\n    16 | S_COMPILE3 [size = 84]\r\n         machine = intel x86-x64, Ver = clang LLVM (rustc version 1.64.0 (a55dd71d5 2022-09-19)), language = rust\r\n         frontend = 1.64.0.0, backend = 14006.0.0.0\r\n         flags = none\r\n   100 | S_BUILDINFO [size = 8] BuildId = `0x2A2A`\r\n   108 | S_LPROC32 [size = 56] `rusttest::main`\r\n         parent = 0, end = 308, addr = 0001:7504, code size = 273\r\n         type = `0x1014 (void ())`, debug start = 0, debug end = 0, flags = none\r\n   164 | S_FRAMEPROC [size = 32]\r\n         size = 200, padding size = 0, offset to padding = 0\r\n         bytes of callee saved registers = 0, exception handler addr = 0000:0000\r\n         local fp reg = RBP, param fp reg = RBP\r\n         flags = has eh\r\n   196 | S_LOCAL [size = 24] `my_string_1`\r\n         type=0x1550 (alloc::string::String), flags = none\r\n   220 | S_DEFRANGE_FRAMEPOINTER_REL [size = 20]\r\n         offset = -56, range = [0001:7558,+219)\r\n         gaps = 2\r\n   240 | S_BLOCK32 [size = 24] ``\r\n         parent = 108, end = 304\r\n         code size = 81, addr = 0001:7580\r\n   264 | S_LOCAL [size = 24] `my_string_2`\r\n         type=0x1550 (alloc::string::String), flags = none\r\n   288 | S_DEFRANGE_FRAMEPOINTER_REL [size = 16]\r\n         offset = -32, range = [0001:7580,+81)\r\n         gaps = 2\r\n   304 | S_END [size = 4]\r\n   308 | S_END [size = 4]\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\r\nInterestingly, the problem does not reproduce anymore after we replace the `println!` macro call with an empty one:\r\n```Rust\r\nfn main() {\r\n    let my_string_1 = String::from(\"a\");\r\n    let my_string_2 = String::from(\"b\");\r\n    println!(); // break\r\n}\r\n```\r\n\r\n<details><summary>PDB dump for empty `println!`</summary>\r\n<p>\r\n\r\n```\r\nMod 0034: \r\n     4 | S_OBJNAME [size = 12] sig=0, ``\r\n    16 | S_COMPILE3 [size = 84]\r\n         machine = intel x86-x64, Ver = clang LLVM (rustc version 1.64.0 (a55dd71d5 2022-09-19)), language = rust\r\n         frontend = 1.64.0.0, backend = 14006.0.0.0\r\n         flags = none\r\n   100 | S_BUILDINFO [size = 8] BuildId = `0x2A2A`\r\n   108 | S_LPROC32 [size = 56] `rusttest::main`\r\n         parent = 0, end = 308, addr = 0001:6816, code size = 241\r\n         type = `0x1014 (void ())`, debug start = 0, debug end = 0, flags = none\r\n   164 | S_FRAMEPROC [size = 32]\r\n         size = 168, padding size = 0, offset to padding = 0\r\n         bytes of callee saved registers = 0, exception handler addr = 0000:0000\r\n         local fp reg = RBP, param fp reg = RBP\r\n         flags = has eh\r\n   196 | S_LOCAL [size = 24] `my_string_1`\r\n         type=0x1550 (alloc::string::String), flags = none\r\n   220 | S_DEFRANGE_FRAMEPOINTER_REL [size = 20]\r\n         offset = -72, range = [0001:6870,+187)\r\n         gaps = 2\r\n   240 | S_BLOCK32 [size = 24] ``\r\n         parent = 108, end = 304\r\n         code size = 53, addr = 0001:6888\r\n   264 | S_LOCAL [size = 24] `my_string_2`\r\n         type=0x1550 (alloc::string::String), flags = none\r\n   288 | S_DEFRANGE_FRAMEPOINTER_REL [size = 16]\r\n         offset = -48, range = [0001:6888,+53)\r\n         gaps = 2\r\n   304 | S_END [size = 4]\r\n   308 | S_END [size = 4]\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nThe PDB dumps seem to be almost identical, except for the offsets and ranges. So maybe the problem is caused by wrong offsets/ranges generation.\r\n\r\nInitially reported in https://github.com/intellij-rust/intellij-rust/issues/9464#issuecomment-1269614191", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102735/timeline", "performed_via_github_app": null, "state_reason": null}