{"url": "https://api.github.com/repos/rust-lang/rust/issues/36647", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/36647/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/36647/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/36647/events", "html_url": "https://github.com/rust-lang/rust/issues/36647", "id": 178596933, "node_id": "MDU6SXNzdWUxNzg1OTY5MzM=", "number": 36647, "title": "Panic=abort as a target option?", "user": {"login": "phil-opp", "id": 1131315, "node_id": "MDQ6VXNlcjExMzEzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1131315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phil-opp", "html_url": "https://github.com/phil-opp", "followers_url": "https://api.github.com/users/phil-opp/followers", "following_url": "https://api.github.com/users/phil-opp/following{/other_user}", "gists_url": "https://api.github.com/users/phil-opp/gists{/gist_id}", "starred_url": "https://api.github.com/users/phil-opp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phil-opp/subscriptions", "organizations_url": "https://api.github.com/users/phil-opp/orgs", "repos_url": "https://api.github.com/users/phil-opp/repos", "events_url": "https://api.github.com/users/phil-opp/events{/privacy}", "received_events_url": "https://api.github.com/users/phil-opp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-22T12:29:55Z", "updated_at": "2016-09-29T10:48:13Z", "closed_at": "2016-09-29T10:48:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Let's assume a target with no unwinding support (e.g. a small system on a chip).  [RFC 1513](https://github.com/rust-lang/rfcs/blob/master/text/1513-less-unwinding.md) added a `-C panic=strategy` flag and a cargo profile option for disabling the unwinding machinery. However, even with those options, we still need dummy implementations for `eh_personality` and `_Unwind_Resume`. \n\nThe reason is that the cross-compiled sysroot (e.g. via xargo) still contains references to those functions. We can avoid this by setting `RUSTFLAGS` to `-C panic=abort` when invoking `xargo`. This way, the sysroot is created without unwinding. This solution works, but feels a bit hacky.\n\nWe could solve this problem in an easier way if we added a option for `panic=abort` in the target json. Then we could express targets without unwinding support and xargo would automatically compile the sysroot correctly.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/36647/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/36647/timeline", "performed_via_github_app": null, "state_reason": "completed"}