{"url": "https://api.github.com/repos/rust-lang/rust/issues/43580", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43580/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43580/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43580/events", "html_url": "https://github.com/rust-lang/rust/issues/43580", "id": 246931205, "node_id": "MDU6SXNzdWUyNDY5MzEyMDU=", "number": 43580, "title": "\"error: trait bound is not satisfied\" when it is", "user": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-08-01T01:38:38Z", "updated_at": "2020-01-17T22:51:41Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "### STR\r\n\r\n``` toml\r\n# Cargo.toml\r\n[dependencies]\r\ntypenum = \"=1.9.0\"\r\n```\r\n\r\n``` rust\r\n// src/lib.rs\r\nextern crate typenum;\r\n\r\nuse std::marker::PhantomData;\r\n\r\nuse typenum::{Max, Maximum, Unsigned};\r\n\r\n/// A resource, a mechanism to safely share data between tasks\r\ntrait Resource {\r\n    type Data: Send;\r\n    type Ceiling: Unsigned;\r\n\r\n    fn claim<THRESHOLD, F>(&self, t: &mut T<THRESHOLD>, f: F)\r\n    where\r\n        F: FnOnce(\r\n            &R<Self::Data, Self::Ceiling>,\r\n            &mut Maximum<THRESHOLD, Self::Ceiling>,\r\n        ),\r\n        THRESHOLD: Unsigned + Max<Self::Ceiling>;\r\n}\r\n\r\n/// Unlocked resource\r\nstruct R<DATA, CEILING>\r\nwhere\r\n    CEILING: Unsigned,\r\n    DATA: Send,\r\n{\r\n    data: DATA,\r\n    _ceiling: PhantomData<CEILING>,\r\n}\r\n\r\nimpl<DATA, CEILING> Resource for R<DATA, CEILING>\r\nwhere\r\n    DATA: Send,\r\n    CEILING: Unsigned,\r\n{\r\n    type Data = DATA;\r\n    type Ceiling = CEILING;\r\n\r\n    fn claim<THRESHOLD, F>(&self, t: &mut T<THRESHOLD>, f: F)\r\n    where\r\n        F: FnOnce(&R<DATA, CEILING>, &mut Maximum<THRESHOLD, CEILING>),\r\n        THRESHOLD: Unsigned + Max<CEILING>,\r\n    {\r\n        f(self)\r\n    }\r\n}\r\n\r\n/// Preemption threshold token\r\nstruct T<THRESHOLD>\r\nwhere\r\n    THRESHOLD: Unsigned,\r\n{\r\n    _threshold: PhantomData<THRESHOLD>,\r\n}\r\n\r\n\r\n```\r\n\r\n``` console\r\n$ cargo build\r\nerror[E0277]: the trait bound `THRESHOLD: typenum::Max<CEILING>` is not satisfied\r\n  --> src/lib.rs:39:5\r\n   |\r\n39 | /     fn claim<THRESHOLD, F>(&self, t: &mut T<THRESHOLD>, f: F)\r\n40 | |     where\r\n41 | |         F: FnOnce(&R<DATA, CEILING>, &mut Maximum<THRESHOLD, CEILING>),\r\n42 | |         THRESHOLD: Unsigned + Max<CEILING>,\r\n43 | |     {\r\n44 | |         f(self)\r\n45 | |     }\r\n   | |_____^ the trait `typenum::Max<CEILING>` is not implemented for `THRESHOLD`\r\n   |\r\n   = help: consider adding a `where THRESHOLD: typenum::Max<CEILING>` bound\r\n\r\nerror[E0277]: the trait bound `THRESHOLD: typenum::Max<CEILING>` is not satisfied\r\n  --> src/lib.rs:39:5\r\n   |\r\n39 | /     fn claim<THRESHOLD, F>(&self, t: &mut T<THRESHOLD>, f: F)\r\n40 | |     where\r\n41 | |         F: FnOnce(&R<DATA, CEILING>, &mut Maximum<THRESHOLD, CEILING>),\r\n42 | |         THRESHOLD: Unsigned + Max<CEILING>,\r\n43 | |     {\r\n44 | |         f(self)\r\n45 | |     }\r\n   | |_____^ the trait `typenum::Max<CEILING>` is not implemented for `THRESHOLD`\r\n   |\r\n   = help: consider adding a `where THRESHOLD: typenum::Max<CEILING>` bound\r\n\r\nerror[E0276]: impl has stricter requirements than trait\r\n  --> src/lib.rs:39:5\r\n   |\r\n12 | /     fn claim<THRESHOLD, F>(&self, t: &mut T<THRESHOLD>, f: F)\r\n13 | |     where\r\n14 | |         F: FnOnce(\r\n15 | |             &R<Self::Data, Self::Ceiling>,\r\n16 | |             &mut Maximum<THRESHOLD, Self::Ceiling>,\r\n17 | |         ),\r\n18 | |         THRESHOLD: Unsigned + Max<Self::Ceiling>;\r\n   | |_________________________________________________- definition of `claim` from trait\r\n...\r\n39 | /     fn claim<THRESHOLD, F>(&self, t: &mut T<THRESHOLD>, f: F)\r\n40 | |     where\r\n41 | |         F: FnOnce(&R<DATA, CEILING>, &mut Maximum<THRESHOLD, CEILING>),\r\n42 | |         THRESHOLD: Unsigned + Max<CEILING>,\r\n43 | |     {\r\n44 | |         f(self)\r\n45 | |     }\r\n   | |_____^ impl has extra requirement `for<'r, 'r> F: std::ops::FnOnce<(&'r R<DATA, CEILING>, &'r mut _)>`\r\n\r\nerror: aborting due to 3 previous errors\r\n```\r\n\r\n### Expected outcome\r\n\r\nI would expect this to compile since the supposedly unsatisfied trait bound is right there in the where clause of `claim`.\r\n\r\n### Meta\r\n\r\n``` console\r\n$ rustc -V\r\nrustc 1.21.0-nightly (599be0d18 2017-07-26)\r\n```\r\n\r\ncc @eddyb @nagisa Any clue what's wrong here? Seems closure related. If you drop the `FnOnce` bound and replace `F` with `Maximum<..>` it compiles.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43580/timeline", "performed_via_github_app": null, "state_reason": null}