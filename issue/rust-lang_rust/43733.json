{"url": "https://api.github.com/repos/rust-lang/rust/issues/43733", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43733/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43733/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43733/events", "html_url": "https://github.com/rust-lang/rust/issues/43733", "id": 248636966, "node_id": "MDU6SXNzdWUyNDg2MzY5NjY=", "number": 43733, "title": "std::thread::local internals allow race conditions in safe but unstable code.", "user": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-08-08T08:23:04Z", "updated_at": "2017-08-12T14:24:49Z", "closed_at": "2017-08-12T14:24:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "([try on playpen](https://play.rust-lang.org/?gist=ae908babaa0b5005cec861c4331041ad&version=nightly))\r\n```rust\r\n#![feature(const_fn, drop_types_in_const, thread_local_internals)]\r\n\r\ntype Foo = std::cell::RefCell<String>;\r\n\r\nstatic __KEY: std::thread::__FastLocalKeyInner<Foo> =\r\n    std::thread::__FastLocalKeyInner::new();\r\n        \r\nfn __getit() -> std::option::Option<\r\n    &'static std::cell::UnsafeCell<\r\n        std::option::Option<Foo>>>\r\n{\r\n    __KEY.get()\r\n}\r\n\r\nstatic FOO: std::thread::LocalKey<Foo> =\r\n    std::thread::LocalKey::new(__getit, Default::default);\r\n\r\nfn main() {\r\n    FOO.with(|foo| println!(\"{}\", foo.borrow()));\r\n    std::thread::spawn(|| {\r\n        FOO.with(|foo| *foo.borrow_mut() += \"foo\");\r\n    }).join().unwrap();\r\n    FOO.with(|foo| println!(\"{}\", foo.borrow()));\r\n}\r\n```\r\n\r\nDiscovered while working on a *sound* fix for #17954. The problem is [this decision](https://github.com/rust-lang/rust/pull/30759#issuecomment-179551039) which prevents the `thread_local!` macro from using `unsafe` to state that it *actually has* a `#[thread_local]` `static` to use in `LocalKey`. Without that, *anything* of `'static` lifetime (which is btw quite wrong for `#[thread_local]`) and the right type can be used, from **safe** code.\r\n\r\nWhile we can change the APIs all we want, going back to the *correct* solution of `#[allow(unsafe_code)]` could be a breaking change, without unsafety hygiene.\r\n\r\ncc @rust-lang/libs", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43733/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43733/timeline", "performed_via_github_app": null, "state_reason": "completed"}