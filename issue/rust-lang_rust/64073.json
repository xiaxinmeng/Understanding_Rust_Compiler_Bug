{"url": "https://api.github.com/repos/rust-lang/rust/issues/64073", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64073/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64073/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64073/events", "html_url": "https://github.com/rust-lang/rust/issues/64073", "id": 487911786, "node_id": "MDU6SXNzdWU0ODc5MTE3ODY=", "number": 64073, "title": "Confusing documentation on mem::transmute", "user": {"login": "Shnatsel", "id": 291257, "node_id": "MDQ6VXNlcjI5MTI1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/291257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shnatsel", "html_url": "https://github.com/Shnatsel", "followers_url": "https://api.github.com/users/Shnatsel/followers", "following_url": "https://api.github.com/users/Shnatsel/following{/other_user}", "gists_url": "https://api.github.com/users/Shnatsel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shnatsel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shnatsel/subscriptions", "organizations_url": "https://api.github.com/users/Shnatsel/orgs", "repos_url": "https://api.github.com/users/Shnatsel/repos", "events_url": "https://api.github.com/users/Shnatsel/events{/privacy}", "received_events_url": "https://api.github.com/users/Shnatsel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-01T17:34:38Z", "updated_at": "2020-02-29T23:51:31Z", "closed_at": "2020-02-29T23:51:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[Documentation on mem::transmute](https://doc.rust-lang.org/std/mem/fn.transmute.html#alternatives) presents the following piece of code:\r\n\r\n```rust\r\nlet store = [0, 1, 2, 3];\r\nlet mut v_orig = store.iter().collect::<Vec<&i32>>();\r\n\r\n// Using transmute: this is Undefined Behavior, and a bad idea.\r\n// However, it is no-copy.\r\nlet v_transmuted = unsafe {\r\n    std::mem::transmute::<Vec<&i32>, Vec<Option<&i32>>>(\r\n        v_orig.clone())\r\n};\r\n\r\n// This is the suggested, safe way.\r\n// It does copy the entire vector, though, into a new array.\r\nlet v_collected = v_orig.clone()\r\n                        .into_iter()\r\n                        .map(|r| Some(r))\r\n                        .collect::<Vec<Option<&i32>>>();\r\n\r\n// The no-copy, unsafe way, still using transmute, but not UB.\r\n// This is equivalent to the original, but safer, and reuses the\r\n// same `Vec` internals. Therefore, the new inner type must have the\r\n// exact same size, and the same alignment, as the old type.\r\n// The same caveats exist for this method as transmute, for\r\n// the original inner type (`&i32`) to the converted inner type\r\n// (`Option<&i32>`), so read the nomicon pages linked above.\r\nlet v_from_raw = unsafe {\r\n    Vec::from_raw_parts(v_orig.as_mut_ptr() as *mut Option<&i32>,\r\n                        v_orig.len(),\r\n                        v_orig.capacity())\r\n};\r\nstd::mem::forget(v_orig);\r\n```\r\n\r\nThe problem is it's never explained why the first described solution is Undefined Behavior. This is confusing.\r\n\r\n~~Second, the use of transmute from `&i32` to `Option<&i32>` which is inherently unsafe is not very illustrative.~~ This is actually guaranteed to be safe, but that's not explicitly called out in the snippet. Perhaps transmuting `NonZeroU8` to `u8` or possibly `char` to `u32` would be a better example.\r\n\r\nFinally, the proposed \"correct\" way of doing this seems to actually contain undefined behavior: `std::mem::forget(v_orig);` is called only _after_ the new vector is created, and until it's called there are two mutable references to the backing storage of `v_orig`.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64073/timeline", "performed_via_github_app": null, "state_reason": "completed"}