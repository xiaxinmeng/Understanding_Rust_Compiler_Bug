{"url": "https://api.github.com/repos/rust-lang/rust/issues/38886", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/38886/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/38886/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/38886/events", "html_url": "https://github.com/rust-lang/rust/issues/38886", "id": 199268118, "node_id": "MDU6SXNzdWUxOTkyNjgxMTg=", "number": 38886, "title": "BinaryHeap flexibility, BuildComparator", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-06T19:24:03Z", "updated_at": "2017-11-19T07:12:53Z", "closed_at": "2017-11-19T07:12:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "In D language when you create a binary heap you can optionally specify the comparison function:\r\n\r\n    void main() {\r\n        import std.stdio, std.container;\r\n        auto heap1 = [10, 2, 5, 3].heapify;\r\n        writeln(heap1); // Output: [10, 5, 3, 2]\r\n        auto heap2 = [10, 2, 5, 3].heapify!q{b < a};\r\n        writeln(heap2); // Output: [2, 3, 5, 10]\r\n    }\r\n\r\nThis is handy. Similar code in Rust:\r\n\r\n    fn main() {\r\n        use std::collections::BinaryHeap;\r\n        let heap1: BinaryHeap<_> = [10, 2, 5, 3].iter().cloned().collect();\r\n        println!(\"{:?}\", heap1); // [10, 3, 5, 2]\r\n    }\r\n\r\nIf you just have to reverse the ordering (a min-heap) you can sometimes wrap your items with this:\r\n\r\nhttps://docs.rs/revord/0.0.2/revord/struct.RevOrd.html\r\n\r\nBut in general the cmp function can be more complex (or it can involve just one field of each item). Currently to solve this problem you need to write a lot of boilerplate code, a newtype and implement the four Eq/Ord traits on it (but a binary heap doesn't need to test the equality of the the items).\r\n\r\nSo can we add something more handy to BinaryHeap to specify a different comparison function?\r\n\r\nA comment by cuviper:\r\n\r\n>To support collect, I think you'd have to incorporate it into the type, just like HashMap<K, V, S: BuildHasher>. So this would have some kind of BuildComparator, and it could be added without a breaking change by defaulting to a MaxComparator.", "closed_by": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/38886/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/38886/timeline", "performed_via_github_app": null, "state_reason": "completed"}