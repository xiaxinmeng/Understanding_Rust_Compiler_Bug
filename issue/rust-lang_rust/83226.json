{"url": "https://api.github.com/repos/rust-lang/rust/issues/83226", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83226/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83226/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83226/events", "html_url": "https://github.com/rust-lang/rust/issues/83226", "id": 833613916, "node_id": "MDU6SXNzdWU4MzM2MTM5MTY=", "number": 83226, "title": "thread 'rustc' panicked at 'found unstable fingerprints for evaluate_obligation(b221e4f0760c8617-1fd22c69d1158f36)', /rustc/f5d8117c338a788bd24abec733fd143dfceb25a0\\compiler\\rustc_query_system\\src\\query\\plumbing.rs:593:5", "user": {"login": "songday", "id": 209001, "node_id": "MDQ6VXNlcjIwOTAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/songday", "html_url": "https://github.com/songday", "followers_url": "https://api.github.com/users/songday/followers", "following_url": "https://api.github.com/users/songday/following{/other_user}", "gists_url": "https://api.github.com/users/songday/gists{/gist_id}", "starred_url": "https://api.github.com/users/songday/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/songday/subscriptions", "organizations_url": "https://api.github.com/users/songday/orgs", "repos_url": "https://api.github.com/users/songday/repos", "events_url": "https://api.github.com/users/songday/events{/privacy}", "received_events_url": "https://api.github.com/users/songday/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-03-17T10:16:56Z", "updated_at": "2021-05-19T09:48:27Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nplease clone code by running: `git clone https://github.com/songday/blog-rs.git`\r\n\r\n### reproduce steps\r\n1. git clone https://github.com/songday/blog-rs.git\r\n1. cd blog-rs\r\n1. git checkout dev_0.1.0\r\n1. cd backend\r\n1. cargo b (this time code will be complied successfully)\r\n1. edit `build.rs`, modify line: 69, add ` ` after `]`, ex `writeln!(&mut service_asset_file, r##\"] \"##,)?;`\r\n2. run `cargo b` again\r\n\r\nOnce I run `cargo clean` and build again, everything will be fine.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.52.0-nightly (f5d8117c3 2021-03-16)\r\nbinary: rustc\r\ncommit-hash: f5d8117c338a788bd24abec733fd143dfceb25a0\r\ncommit-date: 2021-03-16\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.52.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'found unstable fingerprints for evaluate_obligation(b221e4f0760c8617-1fd22c69d1158f36)', /rustc/f5d8117c338a788bd24abec733fd143dfceb25a0\\compiler\\rustc_query_system\\src\\query\\plumbing.rs:593:5\r\nstack backtrace:\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.52.0-nightly (f5d8117c3 2021-03-16) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [evaluate_obligation] evaluating trait selection obligation `hyper::body::body::Body: std::convert::From<&str>`\r\n#1 [normalize_projection_ty] normalizing `Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: All }, value: ProjectionTy { substs: [futures_util::future::future::Map<hyper::server::shutdown::Graceful<hyper::server::tcp::AddrIncoming, hyper::service::make::MakeServiceFn<[closure@warp::server::Server<warp::filter::recover::Recover<warp::filters::cors::internal::CorsFilter<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn() -> impl std::future::Future {blog_backend::facade::asset::index}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::management::index}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::management::config}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::user::LoginParams>::{closure#0}]>>, fn(std::option::Option<std::string::String>, blog_common::dto::user::LoginParams) -> impl std::future::Future {blog_backend::facade::user::login}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::user::RegisterParams>::{closure#0}]>>, fn(blog_common::dto::user::RegisterParams) -> impl std::future::Future {blog_backend::facade::user::register}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::user::logout}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::user::info}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::image::verify_image}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u8>::{closure#0}], (u8,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(u8) -> impl std::future::Future {blog_backend::facade::post::list}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn() -> impl std::future::Future {blog_backend::facade::tag::list}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<std::string::String>::{closure#0}], (std::string::String,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u8>::{closure#0}], (u8,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(std::string::String, u8) -> impl std::future::Future {blog_backend::facade::post::list_by_tag}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::post::NewPost>::{closure#0}]>>, fn(std::option::Option<blog_common::dto::user::UserInfo>, blog_common::dto::post::NewPost) -> impl std::future::Future {blog_backend::facade::post::save}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u64>::{closure#0}], (u64,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(u64) -> impl std::future::Future {blog_backend::facade::post::show}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filters::multipart::FormOptions>, fn(std::option::Option<blog_common::dto::user::UserInfo>, warp::filters::multipart::FormData) -> impl std::future::Future {blog_backend::facade::image::upload}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<std::string::String>::{closure#0}], (std::string::String,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::untuple_one::UntupleOne<warp::filter::and_then::AndThen<warp::filter::map_err::MapErr<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::header2<headers::common::content_length::ContentLength>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<headers::common::content_length::ContentLength, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::content_length_limit::{closure#0}]>, [closure@warp::filters::body::content_length_limit::{closure#1}]>>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::aggregate::{closure#0}]>>, fn(std::string::String, std::option::Option<blog_common::dto::user::UserInfo>, hyper::common::buf::BufList<bytes::bytes::Bytes>) -> impl std::future::Future {blog_backend::facade::image::save::<hyper::common::buf::BufList<bytes::bytes::Bytes>>}>>>, fn(warp::reject::Rejection) -> impl std::future::Future {blog_backend::facade::handle_rejection}>>::bind_with_graceful_shutdown<std::net::SocketAddr, std::future::from_generator::GenFuture<[static generator@blog_backend::service::server::create_warp_server::{closure#0}::{closure#0} {std::future::ResumeTy, tokio::sync::oneshot::Receiver<()>, ()}]>>::{closure#1}::{closure#0}]>, std::future::from_generator::GenFuture<[static generator@blog_backend::service::server::create_warp_server::{closure#0}::{closure#0} {std::future::ResumeTy, tokio::sync::oneshot::Receiver<()>, ()}]>, hyper::common::exec::Exec>, [closure@warp::server::Server<warp::filter::recover::Recover<warp::filters::cors::internal::CorsFilter<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn() -> impl std::future::Future {blog_backend::facade::asset::index}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::management::index}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::management::config}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::user::LoginParams>::{closure#0}]>>, fn(std::option::Option<std::string::String>, blog_common::dto::user::LoginParams) -> impl std::future::Future {blog_backend::facade::user::login}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::user::RegisterParams>::{closure#0}]>>, fn(blog_common::dto::user::RegisterParams) -> impl std::future::Future {blog_backend::facade::user::register}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::user::logout}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::user::info}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::image::verify_image}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u8>::{closure#0}], (u8,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(u8) -> impl std::future::Future {blog_backend::facade::post::list}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn() -> impl std::future::Future {blog_backend::facade::tag::list}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<std::string::String>::{closure#0}], (std::string::String,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u8>::{closure#0}], (u8,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(std::string::String, u8) -> impl std::future::Future {blog_backend::facade::post::list_by_tag}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::post::NewPost>::{closure#0}]>>, fn(std::option::Option<blog_common::dto::user::UserInfo>, blog_common::dto::post::NewPost) -> impl std::future::Future {blog_backend::facade::post::save}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u64>::{closure#0}], (u64,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(u64) -> impl std::future::Future {blog_backend::facade::post::show}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filters::multipart::FormOptions>, fn(std::option::Option<blog_common::dto::user::UserInfo>, warp::filters::multipart::FormData) -> impl std::future::Future {blog_backend::facade::image::upload}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<std::string::String>::{closure#0}], (std::string::String,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::untuple_one::UntupleOne<warp::filter::and_then::AndThen<warp::filter::map_err::MapErr<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::header2<headers::common::content_length::ContentLength>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<headers::common::content_length::ContentLength, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::content_length_limit::{closure#0}]>, [closure@warp::filters::body::content_length_limit::{closure#1}]>>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::aggregate::{closure#0}]>>, fn(std::string::String, std::option::Option<blog_common::dto::user::UserInfo>, hyper::common::buf::BufList<bytes::bytes::Bytes>) -> impl std::future::Future {blog_backend::facade::image::save::<hyper::common::buf::BufList<bytes::bytes::Bytes>>}>>>, fn(warp::reject::Rejection) -> impl std::future::Future {blog_backend::facade::handle_rejection}>>::bind_with_graceful_shutdown<std::net::SocketAddr, std::future::from_generator::GenFuture<[static generator@blog_backend::service::server::create_warp_server::{closure#0}::{closure#0} {std::future::ResumeTy, tokio::sync::oneshot::Receiver<()>, ()}]>>::{closure#0}]>], item_def_id: DefId(2:11839 ~ core[f48f]::future::future::Future::Output) } } }`\r\n#2 [normalize_generic_arg_after_erasing_regions] normalizing `for<'r> fn(std::result::Result<<futures_util::future::future::Map<hyper::server::shutdown::Graceful<hyper::server::tcp::AddrIncoming, hyper::service::make::MakeServiceFn<[closure@warp::server::Server<warp::filter::recover::Recover<warp::filters::cors::internal::CorsFilter<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn() -> impl std::future::Future {blog_backend::facade::asset::index}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::management::index}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::management::config}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::user::LoginParams>::{closure#0}]>>, fn(std::option::Option<std::string::String>, blog_common::dto::user::LoginParams) -> impl std::future::Future {blog_backend::facade::user::login}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::user::RegisterParams>::{closure#0}]>>, fn(blog_common::dto::user::RegisterParams) -> impl std::future::Future {blog_backend::facade::user::register}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::user::logout}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::user::info}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::image::verify_image}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u8>::{closure#0}], (u8,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(u8) -> impl std::future::Future {blog_backend::facade::post::list}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn() -> impl std::future::Future {blog_backend::facade::tag::list}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<std::string::String>::{closure#0}], (std::string::String,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u8>::{closure#0}], (u8,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(std::string::String, u8) -> impl std::future::Future {blog_backend::facade::post::list_by_tag}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::post::NewPost>::{closure#0}]>>, fn(std::option::Option<blog_common::dto::user::UserInfo>, blog_common::dto::post::NewPost) -> impl std::future::Future {blog_backend::facade::post::save}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u64>::{closure#0}], (u64,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(u64) -> impl std::future::Future {blog_backend::facade::post::show}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filters::multipart::FormOptions>, fn(std::option::Option<blog_common::dto::user::UserInfo>, warp::filters::multipart::FormData) -> impl std::future::Future {blog_backend::facade::image::upload}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<std::string::String>::{closure#0}], (std::string::String,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::untuple_one::UntupleOne<warp::filter::and_then::AndThen<warp::filter::map_err::MapErr<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::header2<headers::common::content_length::ContentLength>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<headers::common::content_length::ContentLength, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::content_length_limit::{closure#0}]>, [closure@warp::filters::body::content_length_limit::{closure#1}]>>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::aggregate::{closure#0}]>>, fn(std::string::String, std::option::Option<blog_common::dto::user::UserInfo>, hyper::common::buf::BufList<bytes::bytes::Bytes>) -> impl std::future::Future {blog_backend::facade::image::save::<hyper::common::buf::BufList<bytes::bytes::Bytes>>}>>>, fn(warp::reject::Rejection) -> impl std::future::Future {blog_backend::facade::handle_rejection}>>::bind_with_graceful_shutdown<std::net::SocketAddr, std::future::from_generator::GenFuture<[static generator@blog_backend::service::server::create_warp_server::{closure#0}::{closure#0} {std::future::ResumeTy, tokio::sync::oneshot::Receiver<()>, ()}]>>::{closure#1}::{closure#0}]>, std::future::from_generator::GenFuture<[static generator@blog_backend::service::server::create_warp_server::{closure#0}::{closure#0} {std::future::ResumeTy, tokio::sync::oneshot::Receiver<()>, ()}]>, hyper::common::exec::Exec>, [closure@warp::server::Server<warp::filter::recover::Recover<warp::filters::cors::internal::CorsFilter<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn() -> impl std::future::Future {blog_backend::facade::asset::index}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::management::index}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::management::config}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::user::LoginParams>::{closure#0}]>>, fn(std::option::Option<std::string::String>, blog_common::dto::user::LoginParams) -> impl std::future::Future {blog_backend::facade::user::login}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::user::RegisterParams>::{closure#0}]>>, fn(blog_common::dto::user::RegisterParams) -> impl std::future::Future {blog_backend::facade::user::register}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::user::logout}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::user::info}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::image::verify_image}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u8>::{closure#0}], (u8,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(u8) -> impl std::future::Future {blog_backend::facade::post::list}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn() -> impl std::future::Future {blog_backend::facade::tag::list}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<std::string::String>::{closure#0}], (std::string::String,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u8>::{closure#0}], (u8,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(std::string::String, u8) -> impl std::future::Future {blog_backend::facade::post::list_by_tag}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::post::NewPost>::{closure#0}]>>, fn(std::option::Option<blog_common::dto::user::UserInfo>, blog_common::dto::post::NewPost) -> impl std::future::Future {blog_backend::facade::post::save}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u64>::{closure#0}], (u64,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(u64) -> impl std::future::Future {blog_backend::facade::post::show}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filters::multipart::FormOptions>, fn(std::option::Option<blog_common::dto::user::UserInfo>, warp::filters::multipart::FormData) -> impl std::future::Future {blog_backend::facade::image::upload}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<std::string::String>::{closure#0}], (std::string::String,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::untuple_one::UntupleOne<warp::filter::and_then::AndThen<warp::filter::map_err::MapErr<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::header2<headers::common::content_length::ContentLength>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<headers::common::content_length::ContentLength, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::content_length_limit::{closure#0}]>, [closure@warp::filters::body::content_length_limit::{closure#1}]>>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::aggregate::{closure#0}]>>, fn(std::string::String, std::option::Option<blog_common::dto::user::UserInfo>, hyper::common::buf::BufList<bytes::bytes::Bytes>) -> impl std::future::Future {blog_backend::facade::image::save::<hyper::common::buf::BufList<bytes::bytes::Bytes>>}>>>, fn(warp::reject::Rejection) -> impl std::future::Future {blog_backend::facade::handle_rejection}>>::bind_with_graceful_shutdown<std::net::SocketAddr, std::future::from_generator::GenFuture<[static generator@blog_backend::service::server::create_warp_server::{closure#0}::{closure#0} {std::future::ResumeTy, tokio::sync::oneshot::Receiver<()>, ()}]>>::{closure#0}]> as std::future::Future>::Output, ()>, &'r str) -> <futures_util::future::future::Map<hyper::server::shutdown::Graceful<hyper::server::tcp::AddrIncoming, hyper::service::make::MakeServiceFn<[closure@warp::server::Server<warp::filter::recover::Recover<warp::filters::cors::internal::CorsFilter<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn() -> impl std::future::Future {blog_backend::facade::asset::index}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::management::index}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::management::config}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::user::LoginParams>::{closure#0}]>>, fn(std::option::Option<std::string::String>, blog_common::dto::user::LoginParams) -> impl std::future::Future {blog_backend::facade::user::login}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::user::RegisterParams>::{closure#0}]>>, fn(blog_common::dto::user::RegisterParams) -> impl std::future::Future {blog_backend::facade::user::register}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::user::logout}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::user::info}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::image::verify_image}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u8>::{closure#0}], (u8,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(u8) -> impl std::future::Future {blog_backend::facade::post::list}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn() -> impl std::future::Future {blog_backend::facade::tag::list}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<std::string::String>::{closure#0}], (std::string::String,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u8>::{closure#0}], (u8,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(std::string::String, u8) -> impl std::future::Future {blog_backend::facade::post::list_by_tag}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::post::NewPost>::{closure#0}]>>, fn(std::option::Option<blog_common::dto::user::UserInfo>, blog_common::dto::post::NewPost) -> impl std::future::Future {blog_backend::facade::post::save}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u64>::{closure#0}], (u64,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(u64) -> impl std::future::Future {blog_backend::facade::post::show}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filters::multipart::FormOptions>, fn(std::option::Option<blog_common::dto::user::UserInfo>, warp::filters::multipart::FormData) -> impl std::future::Future {blog_backend::facade::image::upload}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<std::string::String>::{closure#0}], (std::string::String,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::untuple_one::UntupleOne<warp::filter::and_then::AndThen<warp::filter::map_err::MapErr<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::header2<headers::common::content_length::ContentLength>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<headers::common::content_length::ContentLength, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::content_length_limit::{closure#0}]>, [closure@warp::filters::body::content_length_limit::{closure#1}]>>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::aggregate::{closure#0}]>>, fn(std::string::String, std::option::Option<blog_common::dto::user::UserInfo>, hyper::common::buf::BufList<bytes::bytes::Bytes>) -> impl std::future::Future {blog_backend::facade::image::save::<hyper::common::buf::BufList<bytes::bytes::Bytes>>}>>>, fn(warp::reject::Rejection) -> impl std::future::Future {blog_backend::facade::handle_rejection}>>::bind_with_graceful_shutdown<std::net::SocketAddr, std::future::from_generator::GenFuture<[static generator@blog_backend::service::server::create_warp_server::{closure#0}::{closure#0} {std::future::ResumeTy, tokio::sync::oneshot::Receiver<()>, ()}]>>::{closure#1}::{closure#0}]>, std::future::from_generator::GenFuture<[static generator@blog_backend::service::server::create_warp_server::{closure#0}::{closure#0} {std::future::ResumeTy, tokio::sync::oneshot::Receiver<()>, ()}]>, hyper::common::exec::Exec>, [closure@warp::server::Server<warp::filter::recover::Recover<warp::filters::cors::internal::CorsFilter<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn() -> impl std::future::Future {blog_backend::facade::asset::index}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::management::index}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::management::config}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::user::LoginParams>::{closure#0}]>>, fn(std::option::Option<std::string::String>, blog_common::dto::user::LoginParams) -> impl std::future::Future {blog_backend::facade::user::login}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::user::RegisterParams>::{closure#0}]>>, fn(blog_common::dto::user::RegisterParams) -> impl std::future::Future {blog_backend::facade::user::register}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::user::logout}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::user::info}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::image::verify_image}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u8>::{closure#0}], (u8,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(u8) -> impl std::future::Future {blog_backend::facade::post::list}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn() -> impl std::future::Future {blog_backend::facade::tag::list}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<std::string::String>::{closure#0}], (std::string::String,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u8>::{closure#0}], (u8,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(std::string::String, u8) -> impl std::future::Future {blog_backend::facade::post::list_by_tag}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::post::NewPost>::{closure#0}]>>, fn(std::option::Option<blog_common::dto::user::UserInfo>, blog_common::dto::post::NewPost) -> impl std::future::Future {blog_backend::facade::post::save}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u64>::{closure#0}], (u64,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(u64) -> impl std::future::Future {blog_backend::facade::post::show}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filters::multipart::FormOptions>, fn(std::option::Option<blog_common::dto::user::UserInfo>, warp::filters::multipart::FormData) -> impl std::future::Future {blog_backend::facade::image::upload}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<std::string::String>::{closure#0}], (std::string::String,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::untuple_one::UntupleOne<warp::filter::and_then::AndThen<warp::filter::map_err::MapErr<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::header2<headers::common::content_length::ContentLength>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<headers::common::content_length::ContentLength, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::content_length_limit::{closure#0}]>, [closure@warp::filters::body::content_length_limit::{closure#1}]>>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::aggregate::{closure#0}]>>, fn(std::string::String, std::option::Option<blog_common::dto::user::UserInfo>, hyper::common::buf::BufList<bytes::bytes::Bytes>) -> impl std::future::Future {blog_backend::facade::image::save::<hyper::common::buf::BufList<bytes::bytes::Bytes>>}>>>, fn(warp::reject::Rejection) -> impl std::future::Future {blog_backend::facade::handle_rejection}>>::bind_with_graceful_shutdown<std::net::SocketAddr, std::future::from_generator::GenFuture<[static generator@blog_backend::service::server::create_warp_server::{closure#0}::{closure#0} {std::future::ResumeTy, tokio::sync::oneshot::Receiver<()>, ()}]>>::{closure#0}]> as std::future::Future>::Output {std::result::Result::<<futures_util::future::future::Map<hyper::server::shutdown::Graceful<hyper::server::tcp::AddrIncoming, hyper::service::make::MakeServiceFn<[closure@warp::server::Server<warp::filter::recover::Recover<warp::filters::cors::internal::CorsFilter<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn() -> impl std::future::Future {blog_backend::facade::asset::index}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::management::index}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::management::config}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::user::LoginParams>::{closure#0}]>>, fn(std::option::Option<std::string::String>, blog_common::dto::user::LoginParams) -> impl std::future::Future {blog_backend::facade::user::login}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::user::RegisterParams>::{closure#0}]>>, fn(blog_common::dto::user::RegisterParams) -> impl std::future::Future {blog_backend::facade::user::register}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::user::logout}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::user::info}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::image::verify_image}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u8>::{closure#0}], (u8,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(u8) -> impl std::future::Future {blog_backend::facade::post::list}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn() -> impl std::future::Future {blog_backend::facade::tag::list}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<std::string::String>::{closure#0}], (std::string::String,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u8>::{closure#0}], (u8,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(std::string::String, u8) -> impl std::future::Future {blog_backend::facade::post::list_by_tag}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::post::NewPost>::{closure#0}]>>, fn(std::option::Option<blog_common::dto::user::UserInfo>, blog_common::dto::post::NewPost) -> impl std::future::Future {blog_backend::facade::post::save}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u64>::{closure#0}], (u64,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(u64) -> impl std::future::Future {blog_backend::facade::post::show}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filters::multipart::FormOptions>, fn(std::option::Option<blog_common::dto::user::UserInfo>, warp::filters::multipart::FormData) -> impl std::future::Future {blog_backend::facade::image::upload}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<std::string::String>::{closure#0}], (std::string::String,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::untuple_one::UntupleOne<warp::filter::and_then::AndThen<warp::filter::map_err::MapErr<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::header2<headers::common::content_length::ContentLength>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<headers::common::content_length::ContentLength, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::content_length_limit::{closure#0}]>, [closure@warp::filters::body::content_length_limit::{closure#1}]>>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::aggregate::{closure#0}]>>, fn(std::string::String, std::option::Option<blog_common::dto::user::UserInfo>, hyper::common::buf::BufList<bytes::bytes::Bytes>) -> impl std::future::Future {blog_backend::facade::image::save::<hyper::common::buf::BufList<bytes::bytes::Bytes>>}>>>, fn(warp::reject::Rejection) -> impl std::future::Future {blog_backend::facade::handle_rejection}>>::bind_with_graceful_shutdown<std::net::SocketAddr, std::future::from_generator::GenFuture<[static generator@blog_backend::service::server::create_warp_server::{closure#0}::{closure#0} {std::future::ResumeTy, tokio::sync::oneshot::Receiver<()>, ()}]>>::{closure#1}::{closure#0}]>, std::future::from_generator::GenFuture<[static generator@blog_backend::service::server::create_warp_server::{closure#0}::{closure#0} {std::future::ResumeTy, tokio::sync::oneshot::Receiver<()>, ()}]>, hyper::common::exec::Exec>, [closure@warp::server::Server<warp::filter::recover::Recover<warp::filters::cors::internal::CorsFilter<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn() -> impl std::future::Future {blog_backend::facade::asset::index}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::management::index}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::management::config}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::user::LoginParams>::{closure#0}]>>, fn(std::option::Option<std::string::String>, blog_common::dto::user::LoginParams) -> impl std::future::Future {blog_backend::facade::user::login}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::user::RegisterParams>::{closure#0}]>>, fn(blog_common::dto::user::RegisterParams) -> impl std::future::Future {blog_backend::facade::user::register}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::user::logout}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::user::info}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>>, fn(std::option::Option<std::string::String>) -> impl std::future::Future {blog_backend::facade::image::verify_image}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u8>::{closure#0}], (u8,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(u8) -> impl std::future::Future {blog_backend::facade::post::list}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn() -> impl std::future::Future {blog_backend::facade::tag::list}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<std::string::String>::{closure#0}], (std::string::String,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u8>::{closure#0}], (u8,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(std::string::String, u8) -> impl std::future::Future {blog_backend::facade::post::list_by_tag}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::body::is_content_type<warp::filters::body::Json>::{closure#0}]>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::bytes::{closure#0}]>>, [closure@warp::filters::body::json<blog_common::dto::post::NewPost>::{closure#0}]>>, fn(std::option::Option<blog_common::dto::user::UserInfo>, blog_common::dto::post::NewPost) -> impl std::future::Future {blog_backend::facade::post::save}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<u64>::{closure#0}], (u64,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, fn(u64) -> impl std::future::Future {blog_backend::facade::post::show}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filters::multipart::FormOptions>, fn(std::option::Option<blog_common::dto::user::UserInfo>, warp::filters::multipart::FormData) -> impl std::future::Future {blog_backend::facade::image::upload}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::post::{closure#0}]>::{closure#0}]>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filters::path::Exact<warp::filters::path::internal::Opaque<&str>>>, warp::filter::FilterFn<[closure@warp::filters::path::filter_segment<[closure@warp::filters::path::param<std::string::String>::{closure#0}], (std::string::String,)>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>, warp::filter::untuple_one::UntupleOne<warp::filter::and_then::AndThen<warp::filter::map_err::MapErr<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::header2<headers::common::content_length::ContentLength>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<headers::common::content_length::ContentLength, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::content_length_limit::{closure#0}]>, [closure@warp::filters::body::content_length_limit::{closure#1}]>>>, warp::filter::map::Map<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::header::optional2<headers::common::cookie::Cookie>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<headers::common::cookie::Cookie>, std::convert::Infallible>>>::{closure#0}]>, [closure@warp::filters::cookie::optional<std::string::String>::{closure#0}]>, [closure@blog_backend::service::server::auth::{closure#0}]>>, warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::filters::body::body::{closure#0}], futures_util::future::ready::Ready<std::result::Result<hyper::body::body::Body, warp::reject::Rejection>>>::{closure#0}]>, [closure@warp::filters::body::aggregate::{closure#0}]>>, fn(std::string::String, std::option::Option<blog_common::dto::user::UserInfo>, hyper::common::buf::BufList<bytes::bytes::Bytes>) -> impl std::future::Future {blog_backend::facade::image::save::<hyper::common::buf::BufList<bytes::bytes::Bytes>>}>>>, fn(warp::reject::Rejection) -> impl std::future::Future {blog_backend::facade::handle_rejection}>>::bind_with_graceful_shutdown<std::net::SocketAddr, std::future::from_generator::GenFuture<[static generator@blog_backend::service::server::create_warp_server::{closure#0}::{closure#0} {std::future::ResumeTy, tokio::sync::oneshot::Receiver<()>, ()}]>>::{closure#0}]> as std::future::Future>::Output, ()>::expect}`\r\n#3 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nwarning: 1 warning emitted\r\n\r\nerror: could not compile `blog-backend`\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nSame as above output\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83226/timeline", "performed_via_github_app": null, "state_reason": null}