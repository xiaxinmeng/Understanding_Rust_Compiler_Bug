{"url": "https://api.github.com/repos/rust-lang/rust/issues/32721", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/32721/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/32721/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/32721/events", "html_url": "https://github.com/rust-lang/rust/issues/32721", "id": 145598391, "node_id": "MDU6SXNzdWUxNDU1OTgzOTE=", "number": 32721, "title": "`-C linker` flag is misleading", "user": {"login": "m4b", "id": 1920204, "node_id": "MDQ6VXNlcjE5MjAyMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1920204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m4b", "html_url": "https://github.com/m4b", "followers_url": "https://api.github.com/users/m4b/followers", "following_url": "https://api.github.com/users/m4b/following{/other_user}", "gists_url": "https://api.github.com/users/m4b/gists{/gist_id}", "starred_url": "https://api.github.com/users/m4b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m4b/subscriptions", "organizations_url": "https://api.github.com/users/m4b/orgs", "repos_url": "https://api.github.com/users/m4b/repos", "events_url": "https://api.github.com/users/m4b/events{/privacy}", "received_events_url": "https://api.github.com/users/m4b/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-04-04T06:40:24Z", "updated_at": "2017-05-03T18:28:00Z", "closed_at": "2017-05-03T18:27:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "from `rustc -C help` we're told that:\n\n```\n    -C            linker=val -- system linker to link outputs with\n```\n\nI mistakenly thought that this accepted a path to a system linker (e.g., `/usr/bin/ld` on GNU/Linux or OSX); instead it really seems to want a compiler driver like `cc` or `clang`.\n\nFor example, one would expect the following two invocations to be the same (on a typical GNU/Linux system) if it expected an actual linker:\n\n```\nrustc\nrustc -C linker=/usr/bin/ld\n```\n\nbut the second errors out because `ld` does not understand the emulation mode \"64\":\n\n```\nnote: /usr/bin/ld: unrecognised emulation mode: 64\n```\n\n(but `cc` does)\n\nBesides being misleading, the current invocation seems to require the hard-coded command line arguments to be understood by whatever \"linker\" (compiler driver) is passed.\n\nPerhaps if you're only targetting `cc` derivatives this might suffice.  But if the flag is for switching out the linker (e.g., using gold instead of ld, or even [lld](http://lld.llvm.org/design.html)), the current implementation simply will not work.\n\nFor example, suppose we're on GNU/Linux and we have our `main.rs`, and we compile it with the new shiny `--target` switches from nightly like so:\n\n```\nrustc --target=x86_64-apple-darwin main.rs\n```\n\nwe'll error out in the linking phase, since `cc` is trying to link a mach-o binary using the system linker, `/usr/bin/ld`, which only understands ELF binaries.\n\nI naively thought this was what the `-C linker` flag was for, for the above reasons, and so tried:\n\n```\nrustc --target=x86_64-apple-darwin -C linker=lld main.rs\n```\n\nBut this of course won't work because:\n1. lld actually requires `-flavor darwin`, etc. flags passed and the current linker= does not facilitate calling it appropriately\n2. the hard-coded flags are for `cc`-esque driver.\n\nSo if the purpose of the `-C linker` flag is really a compiler driver, then probably `-C driver` would be a better name (and at the very least change the -C help output for the flag), but if not, then there's some work cut out...  I'm thinking in the latter case it might almost be best if when the user specifies a `-C linker` then _all_ linking flags are cleared, and it's up to the user to pass the appropriate flags via `-C linker-flags`.\n", "closed_by": {"login": "m4b", "id": 1920204, "node_id": "MDQ6VXNlcjE5MjAyMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1920204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m4b", "html_url": "https://github.com/m4b", "followers_url": "https://api.github.com/users/m4b/followers", "following_url": "https://api.github.com/users/m4b/following{/other_user}", "gists_url": "https://api.github.com/users/m4b/gists{/gist_id}", "starred_url": "https://api.github.com/users/m4b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m4b/subscriptions", "organizations_url": "https://api.github.com/users/m4b/orgs", "repos_url": "https://api.github.com/users/m4b/repos", "events_url": "https://api.github.com/users/m4b/events{/privacy}", "received_events_url": "https://api.github.com/users/m4b/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/32721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/32721/timeline", "performed_via_github_app": null, "state_reason": "completed"}