{"url": "https://api.github.com/repos/rust-lang/rust/issues/85563", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85563/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85563/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85563/events", "html_url": "https://github.com/rust-lang/rust/issues/85563", "id": 898334892, "node_id": "MDU6SXNzdWU4OTgzMzQ4OTI=", "number": 85563, "title": "Tracking Issue for libtest's JUnit reporter", "user": {"login": "andoriyu", "id": 148123, "node_id": "MDQ6VXNlcjE0ODEyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/148123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andoriyu", "html_url": "https://github.com/andoriyu", "followers_url": "https://api.github.com/users/andoriyu/followers", "following_url": "https://api.github.com/users/andoriyu/following{/other_user}", "gists_url": "https://api.github.com/users/andoriyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/andoriyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andoriyu/subscriptions", "organizations_url": "https://api.github.com/users/andoriyu/orgs", "repos_url": "https://api.github.com/users/andoriyu/repos", "events_url": "https://api.github.com/users/andoriyu/events{/privacy}", "received_events_url": "https://api.github.com/users/andoriyu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630810559, "node_id": "MDU6TGFiZWw2MzA4MTA1NTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-libtest", "name": "A-libtest", "color": "f7e101", "default": false, "description": "Area: #[test] related"}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2021-05-21T19:01:52Z", "updated_at": "2023-06-08T11:04:35Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a tracking issue for libtest's JUnit reporter.\r\n\r\nAdd an alternative formatter to libtest. The formatter produces valid xml that later can be interpreted as JUnit report. Report can be consumed by Continuous Integration tools like Jenkins.\r\n\r\n### Public API\r\n\r\nRun test binary with `--format=junit` argument.\r\n\r\n### Steps / History\r\n\r\n- [x] Implementation: #84568 #86359\r\n- [ ] Final commenting period (FCP)\r\n- [ ] Stabilization PR\r\n\r\n<!--\r\nOnce the feature has gone through a few release cycles and there are no\r\nunresolved questions left, the feature might be ready for stabilization.\r\n\r\nIf this feature didn't go through the RFC process, a final commenting period\r\n(FCP) is always needed before stabilization. This works as follows:\r\n\r\nA library team member can kick off the stabilization process, at which point\r\nthe rfcbot will ask all the team members to verify they agree with\r\nstabilization. Once enough members agree and there are no concerns, the final\r\ncommenting period begins: this issue will be marked as such and will be listed\r\nin the next This Week in Rust newsletter. If no blocking concerns are raised in\r\nthat period of 10 days, a stabilzation PR can be opened by anyone.\r\n-->\r\n\r\n### Unresolved Questions\r\n\r\n<!--\r\nInclude any open questions that need to be answered before the feature can be\r\nstabilised. If multiple (unrelated) big questions come up, it can be a good idea\r\nto open a separate issue for each, to make it easier to keep track of the\r\ndiscussions.\r\n\r\nIt's useful to link any relevant discussions and conclusions (whether on GitHub,\r\nZulip, or the internals forum) here.\r\n-->\r\n\r\n- `timestamp` is required by schema, but every viewer/parser ignores it. Attribute is not set to avoid depending on chrono;\r\n- Each test suite (doc tests, unit tests and each integration test) must be run separately. This due to a fact that from `libtest` perspective each one of them is a separate invocation. \r\n- `libtest` doesn't know what is the name of integration binary is being run, so in the report it just says `integration` for all of them.\r\n- No test cases in src/test or otherwise validating output format correctness.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85563/reactions", "total_count": 9, "+1": 9, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85563/timeline", "performed_via_github_app": null, "state_reason": null}