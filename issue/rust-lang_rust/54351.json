{"url": "https://api.github.com/repos/rust-lang/rust/issues/54351", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/54351/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/54351/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/54351/events", "html_url": "https://github.com/rust-lang/rust/issues/54351", "id": 361674272, "node_id": "MDU6SXNzdWUzNjE2NzQyNzI=", "number": 54351, "title": "Check if we can get away with making `fn()` conflict with `&T`", "user": {"login": "hanna-kruppe", "id": 2311707, "node_id": "MDQ6VXNlcjIzMTE3MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2311707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanna-kruppe", "html_url": "https://github.com/hanna-kruppe", "followers_url": "https://api.github.com/users/hanna-kruppe/followers", "following_url": "https://api.github.com/users/hanna-kruppe/following{/other_user}", "gists_url": "https://api.github.com/users/hanna-kruppe/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanna-kruppe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanna-kruppe/subscriptions", "organizations_url": "https://api.github.com/users/hanna-kruppe/orgs", "repos_url": "https://api.github.com/users/hanna-kruppe/repos", "events_url": "https://api.github.com/users/hanna-kruppe/events{/privacy}", "received_events_url": "https://api.github.com/users/hanna-kruppe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-19T10:09:24Z", "updated_at": "2019-08-03T20:02:28Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There's the idea that the `fn(...) -> R` types should be unsized types (like `extern type`) and function pointers should be proper pointers (e.g. `&'a fn()`). On its face this appears backwards incompatible in ways editions can't paper over, e.g. if we desugar `fn()` to `&'static fn()` in 2015 these two impls would suddenly start conflicting:\r\n\r\n```rust\r\ntrait Foo {}\r\nimpl<'a, T: ?Sized> Foo for &'a T {}\r\nimpl Foo for fn() {}\r\n```\r\n\r\n@eddyb wants to try implementing it quickly and hackily it to see what breaks:\r\n\r\n> I think we can do this in type unification, and treat `fn()` like `&SomeLibCoreLangItem` there, without changing `fn()` itself", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/54351/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/54351/timeline", "performed_via_github_app": null, "state_reason": null}