{"url": "https://api.github.com/repos/rust-lang/rust/issues/101965", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/101965/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/101965/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/101965/events", "html_url": "https://github.com/rust-lang/rust/issues/101965", "id": 1376943233, "node_id": "I_kwDOAAsO6M5SEnyB", "number": 101965, "title": "rustc segfaults when targeting AVR and compiling core in debug mode", "user": {"login": "faithanalog", "id": 1389549, "node_id": "MDQ6VXNlcjEzODk1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1389549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faithanalog", "html_url": "https://github.com/faithanalog", "followers_url": "https://api.github.com/users/faithanalog/followers", "following_url": "https://api.github.com/users/faithanalog/following{/other_user}", "gists_url": "https://api.github.com/users/faithanalog/gists{/gist_id}", "starred_url": "https://api.github.com/users/faithanalog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faithanalog/subscriptions", "organizations_url": "https://api.github.com/users/faithanalog/orgs", "repos_url": "https://api.github.com/users/faithanalog/repos", "events_url": "https://api.github.com/users/faithanalog/events{/privacy}", "received_events_url": "https://api.github.com/users/faithanalog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-09-18T04:37:21Z", "updated_at": "2022-09-18T04:37:21Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "code to reproduce at https://github.com/faithanalog/rustc-avr-bug-repro\r\n\r\nsearched nightlies: from nightly-2022-06-05 to nightly-2022-09-15\r\nregressed nightly: nightly-2022-06-27\r\nsearched commit range: https://github.com/rust-lang/rust/compare/20a6f3a8a8ce5ae18d06b12cd7904bc5294ca753...c80c4b8fdcf3da69cd483e2fec172c9b1f95842c\r\nregressed commit: https://github.com/rust-lang/rust/commit/788ddedb0d88e40db9cd62b6163d5a471813044b\r\n\r\n<details>\r\n<summary>bisected with <a href='https://github.com/rust-lang/cargo-bisect-rustc'>cargo-bisect-rustc</a> v0.6.4</summary>\r\n\r\n\r\nHost triple: x86_64-unknown-linux-gnu\r\nReproduce with:\r\n```bash\r\ncargo-bisect-rustc --with-src --start 2022-06-05 --end 2022-09-15 --script ./build.sh \r\n```\r\n</details>\r\n\r\nIn versions prior to 2022-06-27, compiling `core` for AVR in debug mode generates the following error:\r\n\r\n```\r\nerror: ran out of registers during register allocation\r\n```\r\n\r\nThis error isn't ideal, but it's not the subject of this bug report. In versions starting with 2022-06-27, rustc instead segfaults, with an error like this:\r\n\r\n```\r\nvi@localhost ~/p/rust-avr-bug-repro (main)> cargo build\r\n   Compiling core v0.0.0 (/home/vi/.rustup/toolchains/nightly-2022-09-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core)\r\n   Compiling rustc-std-workspace-core v1.99.0 (/home/vi/.rustup/toolchains/nightly-2022-09-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/rustc-std-workspace-core)\r\n   Compiling compiler_builtins v0.1.79\r\n/home/vi/.rustup/toolchains/nightly-2022-09-15-x86_64-unknown-linux-gnu/lib/librustc_driver-e661066f9d8eca3e.so(+0x2811d13)[0x7fd7e2af5d13]\r\n/lib64/libc.so.6(+0x3daa0)[0x7fd7dff76aa0]\r\n/home/vi/.rustup/toolchains/nightly-2022-09-15-x86_64-unknown-linux-gnu/lib/libLLVM-15-rust-1.65.0-nightly.so(_ZN4llvm12MachineInstr10addOperandERNS_15MachineFunctionERKNS_14MachineOperandE+0x1f5)[0x7fd7dd080785]\r\n/home/vi/.rustup/toolchains/nightly-2022-09-15-x86_64-unknown-linux-gnu/lib/libLLVM-15-rust-1.65.0-nightly.so(+0x4c6c5cc)[0x7fd7df8b75cc]\r\n/home/vi/.rustup/toolchains/nightly-2022-09-15-x86_64-unknown-linux-gnu/lib/libLLVM-15-rust-1.65.0-nightly.so(+0x4c6c31f)[0x7fd7df8b731f]\r\n/home/vi/.rustup/toolchains/nightly-2022-09-15-x86_64-unknown-linux-gnu/lib/libLLVM-15-rust-1.65.0-nightly.so(_ZN4llvm13FPPassManager13runOnFunctionERNS_8FunctionE+0x856)[0x7fd7dde70b86]\r\n/home/vi/.rustup/toolchains/nightly-2022-09-15-x86_64-unknown-linux-gnu/lib/libLLVM-15-rust-1.65.0-nightly.so(_ZN4llvm13FPPassManager11runOnModuleERNS_6ModuleE+0x2f)[0x7fd7dde7019f]\r\n/home/vi/.rustup/toolchains/nightly-2022-09-15-x86_64-unknown-linux-gnu/lib/libLLVM-15-rust-1.65.0-nightly.so(_ZN4llvm6legacy15PassManagerImpl3runERNS_6ModuleE+0x213)[0x7fd7dde6fac3]\r\n/home/vi/.rustup/toolchains/nightly-2022-09-15-x86_64-unknown-linux-gnu/lib/librustc_driver-e661066f9d8eca3e.so(+0x232d8d2)[0x7fd7e26118d2]\r\n/home/vi/.rustup/toolchains/nightly-2022-09-15-x86_64-unknown-linux-gnu/lib/librustc_driver-e661066f9d8eca3e.so(+0x232d229)[0x7fd7e2611229]\r\n/home/vi/.rustup/toolchains/nightly-2022-09-15-x86_64-unknown-linux-gnu/lib/librustc_driver-e661066f9d8eca3e.so(+0x232b15a)[0x7fd7e260f15a]\r\n/home/vi/.rustup/toolchains/nightly-2022-09-15-x86_64-unknown-linux-gnu/lib/librustc_driver-e661066f9d8eca3e.so(+0x2327365)[0x7fd7e260b365]\r\n/home/vi/.rustup/toolchains/nightly-2022-09-15-x86_64-unknown-linux-gnu/lib/librustc_driver-e661066f9d8eca3e.so(+0x232650b)[0x7fd7e260a50b]\r\n/home/vi/.rustup/toolchains/nightly-2022-09-15-x86_64-unknown-linux-gnu/lib/librustc_driver-e661066f9d8eca3e.so(+0x2325018)[0x7fd7e2609018]\r\n/home/vi/.rustup/toolchains/nightly-2022-09-15-x86_64-unknown-linux-gnu/lib/librustc_driver-e661066f9d8eca3e.so(+0x2284358)[0x7fd7e2568358]\r\n/home/vi/.rustup/toolchains/nightly-2022-09-15-x86_64-unknown-linux-gnu/lib/libstd-4393e7d07259b8a4.so(rust_metadata_std_81ab5d9a96a0142e+0xfdee3)[0x7fd7e025eee3]\r\n/lib64/libc.so.6(+0x8784a)[0x7fd7dffc084a]\r\n/lib64/libc.so.6(+0x10acec)[0x7fd7e0043cec]\r\nerror: could not compile `core`\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --crate-name core --edition=2021 /home/vi/.rustup/toolchains/nightly-2022-09-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=12ddbf17236d5c10 -C extra-filename=-12ddbf17236d5c10 --out-dir /home/vi/p/rust-avr-bug-repro/target/avr-atmega328p/debug/deps --target /home/vi/p/rust-avr-bug-repro/avr-atmega328p.json -Z force-unstable-if-unmarked -L dependency=/home/vi/p/rust-avr-bug-repro/target/avr-atmega328p/debug/deps -L dependency=/home/vi/p/rust-avr-bug-repro/target/debug/deps --cap-lints allow` (signal: 11, SIGSEGV: invalid memory reference)\r\n```\r\n\r\nThis doesn't necessarily happen all the time though. sometimes it errors with `error: ran out of registers during register allocation` like it should be doing, so it seems to be non-deterministic on some versions of rustc. This is why my bisection build script re-runs it 10 times to be sure it segfaults at least once. However, the commit directly before the failing commit returned `error: ran out of registers during register allocation` 10 times, and the failing commit segfaulted all 10 times, so maybe it's deterministic for the failing commit.\r\n\r\n`cargo build --release` works just fine and does not generate either error.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/101965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/101965/timeline", "performed_via_github_app": null, "state_reason": null}