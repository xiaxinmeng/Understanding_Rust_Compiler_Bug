{"url": "https://api.github.com/repos/rust-lang/rust/issues/99051", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99051/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99051/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99051/events", "html_url": "https://github.com/rust-lang/rust/issues/99051", "id": 1298702379, "node_id": "I_kwDOAAsO6M5NaKAr", "number": 99051, "title": "unexpected error E0277 from interaction between axum and pulldown-cmark", "user": {"login": "StephanvanSchaik", "id": 1162232, "node_id": "MDQ6VXNlcjExNjIyMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1162232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StephanvanSchaik", "html_url": "https://github.com/StephanvanSchaik", "followers_url": "https://api.github.com/users/StephanvanSchaik/followers", "following_url": "https://api.github.com/users/StephanvanSchaik/following{/other_user}", "gists_url": "https://api.github.com/users/StephanvanSchaik/gists{/gist_id}", "starred_url": "https://api.github.com/users/StephanvanSchaik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StephanvanSchaik/subscriptions", "organizations_url": "https://api.github.com/users/StephanvanSchaik/orgs", "repos_url": "https://api.github.com/users/StephanvanSchaik/repos", "events_url": "https://api.github.com/users/StephanvanSchaik/events{/privacy}", "received_events_url": "https://api.github.com/users/StephanvanSchaik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-07-08T08:53:25Z", "updated_at": "2022-07-12T07:25:36Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "This looks like a compiler error to me, but I am not 100% sure as I have not been able to reproduce the issue outside of this specific interaction between axum and pulldown-cmark.\r\n\r\nI am using the following dependencies (sorry, I couldn't figure out how to produce this outside of axum + pulldown-cmark so far):\r\n\r\n```\r\naxum = \"0.5\"\r\npulldown-cmark = \"0.9\"\r\ntokio = { version = \"1\", features = [\"full\"] }\r\ntower = \"0.4\"\r\ntower-http = { version = \"0.3\", features = [\"fs\"] }\r\n```\r\n\r\nI minimized the problem to the Rust code below:\r\n\r\n```rust\r\nuse axum::{\r\n    body::Body,\r\n    http::Request,\r\n    response::IntoResponse,\r\n    Router,\r\n    routing::get,\r\n};\r\nuse pulldown_cmark::Parser;\r\nuse tower::util::ServiceExt;\r\nuse tower_http::services::ServeFile;\r\n\r\nasync fn test(request: Request<Body>) -> impl IntoResponse {\r\n    let parser = Parser::new(\"test\");\r\n\r\n    ServeFile::new(\"index.htm\").oneshot(request).await.unwrap()\r\n}\r\n\r\n#[tokio::main]\r\nasync fn main() {\r\n    let app = Router::new().route(\"/\", get(test));\r\n}\r\n```\r\n\r\nThis compiles when commenting:\r\n\r\n```rust\r\n    let parser = Parser::new(\"test\");\r\n```\r\n\r\nAlternatively, this also compiles when replacing:\r\n\r\n```rust\r\n    ServeFile::new(\"index.htm\").oneshot(request).await.unwrap()\r\n```\r\n\r\nwith a string like: `\"hello\"`.\r\n\r\nUnchanged it provides the following error:\r\n\r\n```\r\nerror[E0277]: the trait bound `fn(Request<Body>) -> impl Future<Output = impl IntoResponse> {test}: Handler<_, _>` is not satisfied\r\n   --> src/main.rs:21:44\r\n    |\r\n21  |     let app = Router::new().route(\"/\", get(test));\r\n    |                                        --- ^^^^\r\n\r\n    |                                        |\r\n    |                                        required by a bound introduced by this call\r\n    |\r\n    = help: the trait `Handler<T, ReqBody>` is implemented for `Layered<S, T>`\r\nnote: required by a bound in `axum::routing::get`\r\n   --> /home/stephan/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.5.11/src/routing/method_routing.rs:396:1\r\n    |\r\n396 | top_level_handler_fn!(get, GET);\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `axum::routing::get`\r\n    = note: this error originates in the macro `top_level_handler_fn` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\n```\r\n\r\nI am not sure whether this should actually produce an error. However, if it should, then I would expect the error to more clearly explain what the issue is. Like why can it suddenly not satisfy the trait bound in this particular situation, but when removing/modifying certain specific lines of codes it can?\r\n\r\nWhen adding the following line to the `main` function to check the type of `test`:\r\n\r\n```rust\r\nlet i: i32 = test;\r\n```\r\n\r\nThe compiler emits the following error:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:20:18\r\n   |\r\n20 |     let i: i32 = test;\r\n   |            ---   ^^^^\r\n   |            |\r\n   |            expected due to this\r\n   |\r\n   = note: expected type `i32`\r\n           found fn item `fn(Request<Body>) -> impl Future<Output = impl IntoResponse> {test}`\r\n```\r\n           \r\nWhen changing the line with `ServeFile` to `\"hello\"`, the original error goes away, but the compiler still emits:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:20:18\r\n   |\r\n20 |     let i: i32 = test;\r\n   |            ---   ^^^^\r\n   |            |\r\n   |            expected due to this\r\n   |\r\n   = note: expected type `i32`\r\n           found fn item `fn(Request<Body>) -> impl Future<Output = impl IntoResponse> {test}`\r\n```\r\n\r\nSo the type of `test` looks the same to me in both cases.\r\n\r\nHere is the error from `-Z macro-backtrace`:\r\n\r\n```\r\nerror[E0277]: the trait bound `fn(Request<Body>) -> impl Future<Output = impl IntoResponse> {test}: Handler<_, _>` is not satisfied\r\n   --> src/main.rs:20:44\r\n    |\r\n20  |     let app = Router::new().route(\"/\", get(test));\r\n    |                                        --- ^^^^\r\n\r\n    |                                        |\r\n    |                                        required by a bound introduced by this call\r\n    |\r\n    = help: the trait `Handler<T, ReqBody>` is implemented for `Layered<S, T>`\r\nnote: required by a bound in `axum::routing::get`\r\n   --> /home/stephan/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.5.11/src/routing/method_routing.rs:142:16\r\n    |\r\n91  |  / macro_rules! top_level_handler_fn {\r\n92  |  |     (\r\n93  |  |         $name:ident, GET\r\n94  |  |     ) => {\r\n95  | /|         top_level_handler_fn!(\r\n96  | ||             /// Route `GET` requests to the given handler.\r\n97  | ||             ///\r\n98  | ||             /// # Example\r\n...   ||\r\n119 | ||             GET\r\n120 | ||         );\r\n    | ||_________- in this macro invocation (#2)\r\n...    |\r\n142 |  |             H: Handler<T, B>,\r\n    |  |                ^^^^^^^^^^^^^ required by this bound in `axum::routing::get`\r\n...    |\r\n148 |  |     };\r\n149 |  | }\r\n    |  | -\r\n    |  | |\r\n    |  |_in this expansion of `top_level_handler_fn!` (#1)\r\n    |    in this expansion of `top_level_handler_fn!` (#2)\r\n...\r\n396 |    top_level_handler_fn!(get, GET);\r\n    |    ------------------------------- in this macro invocation (#1)\r\n```\r\n\r\n### Meta\r\n\r\n` rustc --version --verbose`:\r\n```\r\nrustc 1.62.0 (a8314ef7d 2022-06-27)\r\nbinary: rustc\r\ncommit-hash: a8314ef7d0ec7b75c336af2c9857bfaf43002bfc\r\ncommit-date: 2022-06-27\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.62.0\r\nLLVM version: 14.0.5\r\n```\r\n\r\n`rustc +nightly --version --verbose`:\r\n```\r\nrustc 1.64.0-nightly (7425fb293 2022-06-30)\r\nbinary: rustc\r\ncommit-hash: 7425fb293f510a6f138e82a963a3bc599a5b9e1c\r\ncommit-date: 2022-06-30\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.64.0-nightly\r\nLLVM version: 14.0.6\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99051/timeline", "performed_via_github_app": null, "state_reason": null}