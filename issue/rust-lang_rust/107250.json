{"url": "https://api.github.com/repos/rust-lang/rust/issues/107250", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107250/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107250/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107250/events", "html_url": "https://github.com/rust-lang/rust/issues/107250", "id": 1554470953, "node_id": "I_kwDOAAsO6M5cp1gp", "number": 107250, "title": "Separate clauses and goals from the Predicate type", "user": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}], "state": "open", "locked": false, "assignee": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2023-01-24T07:39:34Z", "updated_at": "2023-06-19T23:03:05Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Split up the `PredicateKind` type into `Goal` and `Clauses` similar (or exactly :D) like what chalk does. The TLDR is that ParamEnv only contains a small set of `PrecicateKind` variants and we want to encode this in the type system by only returning `Clause`s from it.\r\n\r\nThis projection has been accepted as an MCP: https://github.com/rust-lang/compiler-team/issues/531\r\n\r\n## Implementation steps\r\n\r\n* [x] [SP] Split out `Trait`, `TypeOutlives`, `RegionOutlives` and `Projection` into `Clause` enum: [#104846](https://github.com/rust-lang/rust/pull/104846)\r\n* [x] [SP] [#104911](https://github.com/rust-lang/rust/pull/104911) `inferred_outlives_crate` returns predicates, but they are always only TypeOutlives or RegionOutlives\r\n    * may kill perf, so let's see if it works to just return ty::Clause where it now returns `ty::Predicate` and build the predicates at the caller site of `inferred_outlives_of`\r\n* [ ] doing the same thing for `explicit_predicates_of` is gonna be a bit more involved\r\n* [ ] Improve perf of [#104846](https://github.com/rust-lang/rust/pull/104846)\r\n* [ ] start with `gather_explicit_predicates_of` and convert at the caller sites\r\n* [x] `Bounds::predicates` should return an iterator over Clauses (#112734)\r\n\r\nleave a comment when you start working on one of these steps so that no one else duplicates work.\r\n\r\n<!-- TRIAGEBOT_START -->\r\n\r\n<!-- TRIAGEBOT_ASSIGN_START -->\r\n\r\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"dswij\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\r\n\r\n<!-- TRIAGEBOT_ASSIGN_END -->\r\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107250/timeline", "performed_via_github_app": null, "state_reason": null}