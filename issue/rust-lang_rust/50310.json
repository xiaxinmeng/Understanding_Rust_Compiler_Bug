{"url": "https://api.github.com/repos/rust-lang/rust/issues/50310", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50310/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50310/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50310/events", "html_url": "https://github.com/rust-lang/rust/issues/50310", "id": 318708467, "node_id": "MDU6SXNzdWUzMTg3MDg0Njc=", "number": 50310, "title": "Shorter type-names on type errors", "user": {"login": "lukaslueg", "id": 3148704, "node_id": "MDQ6VXNlcjMxNDg3MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3148704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaslueg", "html_url": "https://github.com/lukaslueg", "followers_url": "https://api.github.com/users/lukaslueg/followers", "following_url": "https://api.github.com/users/lukaslueg/following{/other_user}", "gists_url": "https://api.github.com/users/lukaslueg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaslueg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaslueg/subscriptions", "organizations_url": "https://api.github.com/users/lukaslueg/orgs", "repos_url": "https://api.github.com/users/lukaslueg/repos", "events_url": "https://api.github.com/users/lukaslueg/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaslueg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-04-29T11:08:22Z", "updated_at": "2020-12-04T10:02:14Z", "closed_at": "2020-12-04T10:02:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Type errors (`E0308`) are a common occurrence in rustc. Whenever I confuse myself about the type of something, I tend to assign it to some `x: i32` and let the compiler blame me with a hint about what type `x` actually is. The `note`-section attached to the error message contains the fully qualified type name, which is technically as correct as one can get. However, this also produces a lot of clutter, because the type-name that I'm actually interested in is much more concise if types in scope of the offending statement are taken into account. For example:\r\n\r\n```rust\r\nuse std::collections::HashMap;\r\n\r\nfn foobar(x: &i32) {\r\n    \r\n}\r\n\r\nfn main() {\r\n    let mut foo = HashMap::new();\r\n    foo.insert(\"foo\", Ok(Some(\"bar\")));\r\n    foo.insert(\"oof\", Err(\"Oh noes!\"));\r\n    \r\n    foobar(&foo);\r\n    \r\n    println!(\"{:#?}\", foo);\r\n}\r\n```\r\n\r\nThe `note` says\r\n\r\n> found type `std::collections::HashMap<&str, std::result::Result<std::option::Option<&str>, &str>>`\r\n\r\nAgain, while this is as precise as it can get, most of this is just clutter, especially with deeply nested types: I know that `HashMap` is from `std::collections`, I also know that `Option` refers to `std::option::Option`. If I had some other type shadowing those names, I'd be aware of it. Reading the note, I have to demangle the type-name to\r\n\r\n> found type `HashMap<&str, Result<Option<&str>, &str>>`\r\n\r\nwhich is what the type-name would be if I wanted to write it down, considering all the `use`s.\r\n\r\nCould we at least have an option (or an extra note) for `E0308` where the type-names get uncluttered by considering the types that are in scope for the offending statement? This would reduce the intellectual burden and may enable one to just copy&paste the type-name from the note.", "closed_by": {"login": "lukaslueg", "id": 3148704, "node_id": "MDQ6VXNlcjMxNDg3MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3148704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaslueg", "html_url": "https://github.com/lukaslueg", "followers_url": "https://api.github.com/users/lukaslueg/followers", "following_url": "https://api.github.com/users/lukaslueg/following{/other_user}", "gists_url": "https://api.github.com/users/lukaslueg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaslueg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaslueg/subscriptions", "organizations_url": "https://api.github.com/users/lukaslueg/orgs", "repos_url": "https://api.github.com/users/lukaslueg/repos", "events_url": "https://api.github.com/users/lukaslueg/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaslueg/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50310/reactions", "total_count": 19, "+1": 13, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 3, "rocket": 3, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50310/timeline", "performed_via_github_app": null, "state_reason": "completed"}