{"url": "https://api.github.com/repos/rust-lang/rust/issues/19684", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/19684/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/19684/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/19684/events", "html_url": "https://github.com/rust-lang/rust/issues/19684", "id": 51514334, "node_id": "MDU6SXNzdWU1MTUxNDMzNA==", "number": 19684, "title": "Excessive stack allocation with multiple return points", "user": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-12-10T03:28:36Z", "updated_at": "2014-12-22T02:53:19Z", "closed_at": "2014-12-22T02:53:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This function uses ~1Kb of stack (with optimisations)\n\n``` rust\nfunction test() -> [u8,...256] {\n  let x : [u8, ..256];\n  let val = get_val();\n  if val == 0 {\n    x = [1, ..256];\n    return x;\n  } else if val == 1 {\n    x = [4, ..256];\n    return x;\n  } else {\n    x = [9, ..256];\n    return x;\n  }\n}\n```\n\nWhile this function uses ~256 bytes of stack:\n\n``` rust\nfunction test() -> [u8,...256] {\n  let x : [u8, ..256];\n  let val = get_val();\n  if val == 0 {\n    x = [1, ..256];\n  } else if val == 1 {\n    x = [4, ..256];\n  } else {\n    x = [9, ..256];\n  }\n\n  return x;\n}\n```\n\nAs far as I can tell, each return statement gets given it's own slot which is copied into the return pointer at the end. This happens to also result in 4 `memcpy` calls in total.\n\n/cc @Gankro @cgaebel\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/19684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/19684/timeline", "performed_via_github_app": null, "state_reason": "completed"}