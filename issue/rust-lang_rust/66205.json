{"url": "https://api.github.com/repos/rust-lang/rust/issues/66205", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66205/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66205/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66205/events", "html_url": "https://github.com/rust-lang/rust/issues/66205", "id": 519608124, "node_id": "MDU6SXNzdWU1MTk2MDgxMjQ=", "number": 66205, "title": "Recursive type usage in function with Const Generics causes ICE", "user": {"login": "felix91gr", "id": 11747623, "node_id": "MDQ6VXNlcjExNzQ3NjIz", "avatar_url": "https://avatars.githubusercontent.com/u/11747623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felix91gr", "html_url": "https://github.com/felix91gr", "followers_url": "https://api.github.com/users/felix91gr/followers", "following_url": "https://api.github.com/users/felix91gr/following{/other_user}", "gists_url": "https://api.github.com/users/felix91gr/gists{/gist_id}", "starred_url": "https://api.github.com/users/felix91gr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felix91gr/subscriptions", "organizations_url": "https://api.github.com/users/felix91gr/orgs", "repos_url": "https://api.github.com/users/felix91gr/repos", "events_url": "https://api.github.com/users/felix91gr/events{/privacy}", "received_events_url": "https://api.github.com/users/felix91gr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-11-08T01:35:58Z", "updated_at": "2019-12-24T06:48:59Z", "closed_at": "2019-12-24T06:48:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a toy example I made in order to later make tests which run for `T<const M: usize>` with `M=0..N`.\r\n\r\n```rust\r\n#![feature(const_generics)]\r\n#[allow(incomplete_features)]\r\n\r\nstruct Z<const N: i32>;\r\n\r\nimpl<const N: i32> Z<{N}> {\r\n\r\n\tfn fact() -> i32 {\r\n\t\tmatch N {\r\n\t\t\tk if k < 1 => 1,\r\n\t\t\t_ => Z::<{N - 1}>::fact()\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n```\r\n\r\nThis is the error I get:\r\n\r\n```console\r\nerror: internal compiler error: src/librustc/ty/subst.rs:651: const parameter `N/#0` (Const { ty: i32, val: Param(N/#0) }/0) out of range when substituting substs=[]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:890:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\r\n```\r\n\r\nError notes:\r\n\r\n- `rustc 1.40.0-nightly (50f8aadd7 2019-11-07) running on x86_64-unknown-linux-gnu`\r\n\r\n- compiler flags: `-C debuginfo=2 -C incremental --crate-type lib`\r\n\r\n---\r\n\r\n### Questions\r\n\r\nI don't know if this kind of pattern is intended as part of the feature or in its future, but if not, I think it can be satisfied by using a procedural macro so that's probably alright. \r\n\r\nThe point of the pattern, as I mentioned at the beginning of the post, is to be able to test a particular generic type's implementation up to an arbitrary range of numeric constants. While implementing another project to help @varkor test the feature, I stumbled upon the problem of wanting to test hundreds of different constants, but having no way of doing so with say, a `for` loop over a range of constants. This is one way I thought of making it work.\r\n\r\nAm I making the right decisions here? How should I go about testing hundreds of constants? Thanks :)", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66205/timeline", "performed_via_github_app": null, "state_reason": "completed"}