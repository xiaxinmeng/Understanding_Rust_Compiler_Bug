{"url": "https://api.github.com/repos/rust-lang/rust/issues/88903", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88903/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88903/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88903/events", "html_url": "https://github.com/rust-lang/rust/issues/88903", "id": 994645438, "node_id": "MDU6SXNzdWU5OTQ2NDU0Mzg=", "number": 88903, "title": "Update to the 2021 edition via `cargo fix` breaks code", "user": {"login": "weiznich", "id": 1674512, "node_id": "MDQ6VXNlcjE2NzQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1674512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiznich", "html_url": "https://github.com/weiznich", "followers_url": "https://api.github.com/users/weiznich/followers", "following_url": "https://api.github.com/users/weiznich/following{/other_user}", "gists_url": "https://api.github.com/users/weiznich/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiznich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiznich/subscriptions", "organizations_url": "https://api.github.com/users/weiznich/orgs", "repos_url": "https://api.github.com/users/weiznich/repos", "events_url": "https://api.github.com/users/weiznich/events{/privacy}", "received_events_url": "https://api.github.com/users/weiznich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2947369052, "node_id": "MDU6TGFiZWwyOTQ3MzY5MDUy", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-edition-2021", "name": "A-edition-2021", "color": "f7e101", "default": false, "description": "Area: The 2021 edition"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2021-09-13T09:10:55Z", "updated_at": "2022-07-13T23:28:52Z", "closed_at": "2021-09-21T15:53:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried to update a project with the following dependencies:\r\n\r\n```toml\r\n[dependencies]\r\ndiesel = {version = \"1.4.7\", features = [\"postgres\"]}\r\ndiesel_migrations = \"1.4.0\"\r\n```\r\n(Just having an empty project with those dependencies sufficient to reproduce the issue)\r\n\r\nI executed the following commands as [outlined here](https://blog.rust-lang.org/2021/07/21/Rust-2021-public-testing.html):\r\n\r\n```\r\n$ cargo +beta check # to verify that the project builds successful on the 2018 edition\r\n$  cargo +beta fix --edition\r\n$ sed 's/edition = \"2018\"/edition = \"2021\"/g' Cargo.toml -i\r\n$ cargo +beta check # to check the projects builds successful on the 2021 edition\r\n```\r\n\r\nI expected to see this happen: Everything succeeds without errors\r\n\r\nInstead, this happened:  The final check commando fails with error messages\r\n\r\n```\r\n$ cargo +beta fix --edition                                                             \r\nnote: Switching to Edition 2021 will enable the use of the version 2 feature resolver in Cargo.\r\nThis may cause some dependencies to be built with fewer features enabled than previously.\r\nMore information about the resolver changes may be found at https://doc.rust-lang.org/nightly/edition-guide/rust-2021/default-cargo-resolver.html\r\nWhen building the following dependencies, the given features will no longer be used:\r\n\r\n  diesel v1.4.7 (as host dependency) removed features: 32-column-tables, bitflags, default, postgres, pq-sys, with-deprecated\r\n\r\nnote: This project appears to use both diesel and diesel_migrations. These packages have\r\na known issue where the build may fail due to the version 2 resolver preventing\r\nfeature unification between those two packages. See\r\n<https://github.com/rust-lang/cargo/issues/9450> for some potential workarounds.\r\n\r\n    Checking diesel-test-2021 v0.1.0 (/tmp/diesel-test-2021)\r\n   Migrating src/main.rs from 2018 edition to 2021\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.31s\r\n$ sed 's/edition = \"2018\"/edition = \"2021\"/g' Cargo.toml -i                  \r\n$ cargo +beta check      \r\n   Compiling diesel v1.4.7\r\nerror[E0432]: unresolved import `diesel`\r\n  --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:37:48\r\n   |\r\n37 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n   |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n   |\r\n   = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0432]: unresolved import `diesel`\r\n  --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:75:48\r\n   |\r\n75 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n   |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n   |\r\n   = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0432]: unresolved import `diesel`\r\n  --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:96:48\r\n   |\r\n96 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n   |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n   |\r\n   = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0432]: unresolved import `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:115:48\r\n    |\r\n115 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0432]: unresolved import `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:136:48\r\n    |\r\n136 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0432]: unresolved import `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:155:48\r\n    |\r\n155 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0432]: unresolved import `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:177:48\r\n    |\r\n177 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0432]: unresolved import `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:205:48\r\n    |\r\n205 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0432]: unresolved import `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:248:48\r\n    |\r\n248 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0432]: unresolved import `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:278:48\r\n    |\r\n278 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0432]: unresolved import `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:298:48\r\n    |\r\n298 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0432]: unresolved import `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:313:48\r\n    |\r\n313 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0432]: unresolved import `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:336:48\r\n    |\r\n336 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0433]: failed to resolve: could not find `pg` in `diesel`\r\n  --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:37:48\r\n   |\r\n37 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n   |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n   |\r\n   = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0433]: failed to resolve: could not find `pg` in `diesel`\r\n  --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:75:48\r\n   |\r\n75 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n   |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n   |\r\n   = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0433]: failed to resolve: could not find `pg` in `diesel`\r\n  --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:96:48\r\n   |\r\n96 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n   |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n   |\r\n   = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0433]: failed to resolve: could not find `pg` in `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:115:48\r\n    |\r\n115 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0433]: failed to resolve: could not find `pg` in `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:136:48\r\n    |\r\n136 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0433]: failed to resolve: could not find `pg` in `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:155:48\r\n    |\r\n155 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0433]: failed to resolve: could not find `pg` in `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:177:48\r\n    |\r\n177 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0433]: failed to resolve: could not find `pg` in `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:205:48\r\n    |\r\n205 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0433]: failed to resolve: could not find `pg` in `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:248:48\r\n    |\r\n248 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0433]: failed to resolve: could not find `pg` in `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:278:48\r\n    |\r\n278 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0433]: failed to resolve: could not find `pg` in `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:298:48\r\n    |\r\n298 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0433]: failed to resolve: could not find `pg` in `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:313:48\r\n    |\r\n313 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0433]: failed to resolve: could not find `pg` in `diesel`\r\n   --> /home/weiznich/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-1.4.7/src/sql_types/mod.rs:336:48\r\n    |\r\n336 | #[derive(Debug, Clone, Copy, Default, QueryId, SqlType)]\r\n    |                                                ^^^^^^^ could not find `pg` in `diesel`\r\n    |\r\n    = note: this error originates in the derive macro `SqlType` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nSome errors have detailed explanations: E0432, E0433.\r\nFor more information about an error, try `rustc --explain E0432`.\r\nnote: This error may be due to an interaction between diesel and Cargo's new\r\nfeature resolver. Some workarounds you may want to consider:\r\n- Add a build-dependency in Cargo.toml on diesel to force Cargo to add the appropriate\r\n  features. This may look something like this:\r\n\r\n    [build-dependencies]\r\n    diesel = { version = \"1.4.7\", features = [\"postgres\"] }\r\n\r\n- Try using the previous resolver by setting `resolver = \"1\"` in `Cargo.toml`\r\n  (see <https://doc.rust-lang.org/cargo/reference/resolver.html#resolver-versions>\r\n  for more information).\r\n\r\nerror: could not compile `diesel` due to 26 previous errors\r\n```\r\n\r\nThe final error message already gives an indication why this error happens. (As already outlined [here](https://github.com/rust-lang/cargo/issues/9450) and [here](https://internals.rust-lang.org/t/concerns-about-making-resolver-2-the-default-in-2021-edition/14684) I feel that this change is nothing that is covered by any edition RFC, as any RFC states that changing the edition should be a crate local change and should not affect any upstream or down stream crates. That's at least in my opinion clearly not the case here. That written I accept that removing this feature from the 2021 edition will likely not happen so let's stop that discussion here \ud83d\ude1e )\r\n\r\nTo give a more productive indication on how that workflow can be improved:\r\n\r\n* In an ideal world `cargo fix --edition` would just fix the problem and either add the corresponding section to `Cargo.toml`\r\n* It would be possible that `cargo fix --edition` just sets `resolver = \"1\"` in the `Cargo.toml\" for edition upgrades and only for new projects the `resolver = \"2\"` feature is used (and that it is set explicitly in the `Cargo.toml` rather than just changing the default)\r\n* As another show stop measurement `cargo fix --edition` should emit the same warning as `cargo check` already does. As the messaging currently reads it's unclear if the build will fail afterwards or not. Only `cargo check` gives the user a clear indication how to actually fix that problem\r\n* As a medium term thing: Rust needs to provide better tools to bundle proc macro crates and other crates.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.0-beta.2 (f9a839ea0 2021-09-11)\r\nbinary: rustc\r\ncommit-hash: f9a839ea0c4c4885a5366d877a75ad3525bbab5e\r\ncommit-date: 2021-09-11\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.56.0-beta.2\r\nLLVM version: 13.0.0\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\r\n@rustbot label +A-edition-2021 ", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88903/timeline", "performed_via_github_app": null, "state_reason": "completed"}