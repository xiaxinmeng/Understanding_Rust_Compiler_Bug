{"url": "https://api.github.com/repos/rust-lang/rust/issues/69913", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69913/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69913/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69913/events", "html_url": "https://github.com/rust-lang/rust/issues/69913", "id": 579117620, "node_id": "MDU6SXNzdWU1NzkxMTc2MjA=", "number": 69913, "title": "ICE with const generics with disabled feature flag", "user": {"login": "Patryk27", "id": 3395477, "node_id": "MDQ6VXNlcjMzOTU0Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/3395477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Patryk27", "html_url": "https://github.com/Patryk27", "followers_url": "https://api.github.com/users/Patryk27/followers", "following_url": "https://api.github.com/users/Patryk27/following{/other_user}", "gists_url": "https://api.github.com/users/Patryk27/gists{/gist_id}", "starred_url": "https://api.github.com/users/Patryk27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Patryk27/subscriptions", "organizations_url": "https://api.github.com/users/Patryk27/orgs", "repos_url": "https://api.github.com/users/Patryk27/repos", "events_url": "https://api.github.com/users/Patryk27/events{/privacy}", "received_events_url": "https://api.github.com/users/Patryk27/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1405345617, "node_id": "MDU6TGFiZWwxNDA1MzQ1NjE3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lazy-normalization", "name": "A-lazy-normalization", "color": "f7e101", "default": false, "description": "Area: lazy normalization (tracking issue: #60471)"}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 2345070748, "node_id": "MDU6TGFiZWwyMzQ1MDcwNzQ4", "url": "https://api.github.com/repos/rust-lang/rust/labels/const-generics-fixed-by-const_generics", "name": "const-generics-fixed-by-const_generics", "color": "3f5dca", "default": false, "description": "A bug that has been fixed once `const_generics` is enabled."}, {"id": 2392976201, "node_id": "MDU6TGFiZWwyMzkyOTc2MjAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/const-generics-fixed-by-min_const_generics", "name": "const-generics-fixed-by-min_const_generics", "color": "3f5dca", "default": false, "description": "A bug that has been fixed once `min_const_generics` is enabled."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-11T09:21:51Z", "updated_at": "2020-12-30T12:05:50Z", "closed_at": "2020-12-30T12:05:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nFollowing code ICEs on stable (1.41.1), beta (1.42.0-beta.6) and nightly (2020-03-10):\r\n\r\n```\r\nfn foo<const A: usize, const B: usize>(bar: [usize; A + B]) {\r\n    //\r\n}\r\n```\r\n([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=2d3c87e6d13351952993f7817b9cd525))\r\n\r\nThe issue arises when:\r\n- an expression in used in place of array size (`[usize; A + B]` in this case),\r\n- _and_ code generics are not enabled explicitly (notice missing feature attribute),\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0658]: const generics are unstable\r\n --> src/lib.rs:1:14\r\n  |\r\n1 | fn foo<const A: usize, const B: usize>(bar: [usize; A + B]) {\r\n  |              ^\r\n  |\r\n  = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\r\n  = help: add `#![feature(const_generics)]` to the crate attributes to enable\r\n\r\nerror[E0658]: const generics are unstable\r\n --> src/lib.rs:1:30\r\n  |\r\n1 | fn foo<const A: usize, const B: usize>(bar: [usize; A + B]) {\r\n  |                              ^\r\n  |\r\n  = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\r\n  = help: add `#![feature(const_generics)]` to the crate attributes to enable\r\n\r\nerror: internal compiler error: src/librustc/ty/subst.rs:605: const parameter `A/#0` (Const { ty: usize, val: Param(A/#0) }/0) out of range when substituting substs=[]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc/lib.rs:1:1\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1063\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1426\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:474\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::span_bug\r\n  14: rustc_errors::Handler::span_bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_opt\r\n  18: rustc::util::bug::opt_span_bug_fmt\r\n  19: rustc::util::bug::span_bug_fmt\r\n  20: <rustc::ty::subst::SubstFolder as rustc::ty::fold::TypeFolder>::fold_const\r\n  21: rustc::ty::normalize_erasing_regions::<impl rustc::ty::context::TyCtxt>::subst_and_normalize_erasing_regions\r\n  22: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_operand\r\n  23: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_rvalue_into_place\r\n  24: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::run\r\n  25: rustc_mir::const_eval::eval_queries::const_eval_raw_provider\r\n  26: rustc::ty::query::__query_compute::const_eval_raw\r\n  27: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval_raw>::compute\r\n  28: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  29: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  30: rustc_mir::const_eval::eval_queries::const_eval_validated_provider\r\n  31: rustc::ty::query::__query_compute::const_eval_validated\r\n  32: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval_validated>::compute\r\n  33: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  34: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  35: rustc_mir::const_eval::eval_queries::const_eval_validated_provider\r\n  36: rustc::ty::query::__query_compute::const_eval_validated\r\n  37: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval_validated>::compute\r\n  38: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  39: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  40: rustc::mir::interpret::queries::<impl rustc::ty::context::TyCtxt>::const_eval_resolve\r\n  41: rustc::ty::sty::Const::eval::{{closure}}\r\n  42: rustc::ty::sty::Const::eval\r\n  43: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable for &rustc::ty::TyS>::super_fold_with\r\n  44: <rustc_infer::traits::project::AssocTypeNormalizer as rustc::ty::fold::TypeFolder>::fold_ty\r\n  45: rustc::ty::structural_impls::fold_list\r\n  46: rustc_infer::traits::project::normalize\r\n  47: rustc_infer::infer::InferCtxt::partially_normalize_associated_types_in\r\n  48: rustc::ty::context::GlobalCtxt::enter_local\r\n  49: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  50: rustc::ty::query::__query_compute::check_item_well_formed\r\n  51: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::check_item_well_formed>::compute\r\n  52: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  53: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  54: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::ensure_query\r\n  55: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:86\r\n  56: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  57: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:86\r\n  58: rustc_hir::hir::Crate::par_visit_all_item_likes\r\n  59: rustc_typeck::check_crate\r\n  60: rustc_interface::passes::analysis\r\n  61: rustc::ty::query::__query_compute::analysis\r\n  62: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  63: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  64: rustc::ty::context::tls::enter_global\r\n  65: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  66: scoped_tls::ScopedKey<T>::set\r\n  67: rustc_ast::attr::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.0-nightly (158127853 2020-03-10) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [const_eval_raw] const-evaluating `foo::{{constant}}#0`\r\n#1 [const_eval_validated] const-evaluating + checking `foo::{{constant}}#0`\r\n#2 [const_eval_validated] const-evaluating + checking `foo::{{constant}}#0`\r\n#3 [check_item_well_formed] processing `foo`\r\n#4 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to 3 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0658`.\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":null}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69913/timeline", "performed_via_github_app": null, "state_reason": "completed"}