{"url": "https://api.github.com/repos/rust-lang/rust/issues/51718", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51718/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51718/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51718/events", "html_url": "https://github.com/rust-lang/rust/issues/51718", "id": 334957366, "node_id": "MDU6SXNzdWUzMzQ5NTczNjY=", "number": 51718, "title": "No way to make a static *mut _", "user": {"login": "jD91mZM2", "id": 12830969, "node_id": "MDQ6VXNlcjEyODMwOTY5", "avatar_url": "https://avatars.githubusercontent.com/u/12830969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jD91mZM2", "html_url": "https://github.com/jD91mZM2", "followers_url": "https://api.github.com/users/jD91mZM2/followers", "following_url": "https://api.github.com/users/jD91mZM2/following{/other_user}", "gists_url": "https://api.github.com/users/jD91mZM2/gists{/gist_id}", "starred_url": "https://api.github.com/users/jD91mZM2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jD91mZM2/subscriptions", "organizations_url": "https://api.github.com/users/jD91mZM2/orgs", "repos_url": "https://api.github.com/users/jD91mZM2/repos", "events_url": "https://api.github.com/users/jD91mZM2/events{/privacy}", "received_events_url": "https://api.github.com/users/jD91mZM2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 268744493, "node_id": "MDU6TGFiZWwyNjg3NDQ0OTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-fn", "name": "A-const-fn", "color": "f7e101", "default": false, "description": "Area: const fn foo(..) {..}. Pure functions which can be applied at compile time."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-22T17:21:32Z", "updated_at": "2018-06-24T17:37:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Situation\r\n\r\nIn relibc we need a way to have a static with the signature of\r\n```\r\n#[no_mangle]\r\npub static stdin: *mut FILE\r\n```\r\nCurrently we have two statics, one for the file and one for the pointer.\r\nHowever, using `unsafe { &mut default_stdin } as *mut _` doesn't work because\r\n```\r\nerror[E0017]: references in statics may only refer to immutable values\r\n  --> src/stdio/src/default.rs:68:36\r\n   |\r\n68 | pub static mut stdout: *mut FILE = unsafe { &mut default_stdout } as *mut _;\r\n   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ statics require immutable values\r\n```\r\n\r\nWe were thinking of solving this with `UnsafeCell`, but it's not Sync and can't be used in a static, and the `get` function is not const fn.\r\n\r\n```\r\nerror[E0277]: the trait bound `core::cell::UnsafeCell<FILE>: core::marker::Sync` is not satisfied\r\n  --> src/stdio/src/default.rs:10:1\r\n   |\r\n10 | / static default_stdin: UnsafeCell<FILE> = UnsafeCell::new(FILE {\r\n11 | |     flags: constants::F_PERM | constants::F_NOWR | constants::F_BADJ,\r\n12 | |     rpos: ptr::null_mut(),\r\n13 | |     rend: ptr::null_mut(),\r\n...  |\r\n22 | |     lock: AtomicBool::new(false),\r\n23 | | });\r\n   | |___^ `core::cell::UnsafeCell<FILE>` cannot be shared between threads safely\r\n   |\r\n   = help: the trait `core::marker::Sync` is not implemented for `core::cell::UnsafeCell<FILE>`\r\n   = note: shared static variables must have a type that implements `Sync`\r\n\r\nerror[E0015]: calls in statics are limited to constant functions, struct and enum contructors\r\n  --> src/stdio/src/default.rs:65:35\r\n   |\r\n65 | pub static mut stdin: *mut FILE = default_stdin.get();\r\n   |                                   ^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\nThe only way we see of doing this is with `unsafe { &default_stdin } as *const _ as *mut _`, as you can see [here](https://gitlab.redox-os.org/redox-os/relibc/blob/c24d1e2b361eae5227d2294d98e45d0658374785/src/stdio/src/default.rs#L68), however, that's undefined behavior according to the [nomicon](https://doc.rust-lang.org/nomicon/transmutes.html).\r\n\r\n# Proposition\r\n\r\nWe can work around the Sync problem with a wrapper, but we need `get` to be const fn.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51718/timeline", "performed_via_github_app": null, "state_reason": null}