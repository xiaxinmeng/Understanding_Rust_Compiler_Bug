{"url": "https://api.github.com/repos/rust-lang/rust/issues/59137", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/59137/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/59137/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/59137/events", "html_url": "https://github.com/rust-lang/rust/issues/59137", "id": 420150724, "node_id": "MDU6SXNzdWU0MjAxNTA3MjQ=", "number": 59137, "title": "Specific code layout can cause compiler panic with lto=true", "user": {"login": "GinjaNinja32", "id": 3900853, "node_id": "MDQ6VXNlcjM5MDA4NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3900853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GinjaNinja32", "html_url": "https://github.com/GinjaNinja32", "followers_url": "https://api.github.com/users/GinjaNinja32/followers", "following_url": "https://api.github.com/users/GinjaNinja32/following{/other_user}", "gists_url": "https://api.github.com/users/GinjaNinja32/gists{/gist_id}", "starred_url": "https://api.github.com/users/GinjaNinja32/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GinjaNinja32/subscriptions", "organizations_url": "https://api.github.com/users/GinjaNinja32/orgs", "repos_url": "https://api.github.com/users/GinjaNinja32/repos", "events_url": "https://api.github.com/users/GinjaNinja32/events{/privacy}", "received_events_url": "https://api.github.com/users/GinjaNinja32/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2019-03-12T18:49:41Z", "updated_at": "2019-07-07T22:46:16Z", "closed_at": "2019-04-06T01:36:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "The specific setup I'm seeing to cause this is a three-crate workspace:\r\n- `parent`, a binary, depending on `shared`\r\n- `child`, a library, with `crate-type = [\"dylib\"]`, depending on `shared`\r\n- `shared`, a library, also with `crate-type = [\"dylib\"]`\r\n\r\nFor my specific use case, there are many crates like `child`, and `parent` loads them dynamically via `libloading`, but this is not required to reproduce the panic.\r\n\r\nScript to create this (place in empty directory and run)\r\n```bash\r\n#! /bin/bash\r\n\r\nset -euo pipefail\r\n\r\nmkdir -p child/src\r\ncat <<EOF > child/Cargo.toml\r\n[package]\r\nname = \"child\"\r\nversion = \"0.1.0\"\r\n\r\n[lib]\r\ncrate-type = [\"dylib\"]\r\n\r\n[dependencies]\r\nshared = { path = \"../shared\" }\r\nEOF\r\ncat <<EOF > child/src/lib.rs\r\nextern crate shared;\r\nEOF\r\n\r\nmkdir -p parent/src\r\ncat <<EOF > parent/Cargo.toml\r\n[package]\r\nname = \"parent\"\r\nversion = \"0.1.0\"\r\n\r\n[dependencies]\r\nshared = { path = \"../shared\" }\r\nEOF\r\ncat <<EOF > parent/src/main.rs\r\nextern crate shared;\r\n\r\nfn main() {}\r\nEOF\r\n\r\nmkdir -p shared/src\r\ncat <<EOF > shared/Cargo.toml\r\n[package]\r\nname = \"shared\"\r\nversion = \"0.1.0\"\r\n\r\n[lib]\r\ncrate-type = [\"dylib\"]\r\nEOF\r\ncat <<EOF > shared/src/lib.rs\r\nEOF\r\n\r\ncat <<EOF > Cargo.toml\r\n[workspace]\r\nmembers = [\"parent\", \"child\", \"shared\"]\r\n\r\n[profile.release]\r\nlto = false\r\nEOF\r\n\r\nset -x\r\n\r\ncat Cargo.toml\r\n\r\n# OK\r\ncargo build\r\n\r\n# OK\r\ncargo build --release\r\n\r\nsed -i 's/lto = false/lto = true/' Cargo.toml\r\n\r\ncat Cargo.toml\r\n\r\n# Fails\r\nRUST_BACKTRACE=full cargo build --release\r\n```\r\n\r\nI expected to see this happen: Either a successful build, or a standard compiler error.\r\n\r\nInstead, this happened: LTO broke the compiler:\r\n```\r\n$ cargo build --release\r\n   Compiling shared v0.1.0 (/home/nyx/rustbug/shared)\r\n   Compiling child v0.1.0 (/home/nyx/rustbug/child)\r\n   Compiling parent v0.1.0 (/home/nyx/rustbug/parent)\r\nthread 'rustc' panicked at 'assertion failed: !are_upstream_rust_objects_already_included(sess)', src/librustc_codegen_llvm/back/link.rs:1402:9\r\nstack backtrace:\r\n   0:     0x7f7e1f91e793 - std::sys::unix::backtrace::tracing::imp::unwind_backtrace::hf8722b0178fb1b63\r\n                               at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:39\r\n   1:     0x7f7e1f916c48 - std::sys_common::backtrace::_print::hc40139e5f1d656ee\r\n                               at src/libstd/sys_common/backtrace.rs:70\r\n   2:     0x7f7e1f91a922 - std::panicking::default_hook::{{closure}}::h993d43465919c16a\r\n                               at src/libstd/sys_common/backtrace.rs:58\r\n                               at src/libstd/panicking.rs:200\r\n   3:     0x7f7e1f91a694 - std::panicking::default_hook::h73d2c2ec3d9ba5a4\r\n                               at src/libstd/panicking.rs:215\r\n   4:     0x7f7e1b3f631f - rustc::util::common::panic_hook::he83c1d31ee2662ae\r\n   5:     0x7f7e1f91b109 - std::panicking::rust_panic_with_hook::h744417edfe714d72\r\n                               at src/libstd/panicking.rs:482\r\n   6:     0x7f7e153e8374 - std::panicking::begin_panic::hf2f2c845ae9fde35\r\n   7:     0x7f7e15441d85 - rustc_codegen_llvm::back::link::link_natively::had7c6ec0331ae050\r\n   8:     0x7f7e1543badf - rustc_codegen_llvm::back::link::link_binary::h190e3be9b1179a44\r\n   9:     0x7f7e15323882 - <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::join_codegen_and_link::{{closure}}::h378fa211691cf192\r\n  10:     0x7f7e1531d843 - rustc::util::common::time::hba8b261a48e7f916\r\n  11:     0x7f7e153570b4 - <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::join_codegen_and_link::h1b338c342f4da9e8\r\n  12:     0x7f7e1fcf48cd - rustc_driver::driver::compile_input::h65aaa3180b3e84e4\r\n  13:     0x7f7e1fc4fdd0 - rustc_driver::run_compiler_with_pool::h7731b79ae97e4d21\r\n  14:     0x7f7e1fc5bc05 - <scoped_tls::ScopedKey<T>>::set::h10a9d6691c6667b2\r\n  15:     0x7f7e1fc4ec1a - rustc_driver::run_compiler::hccae18cc847caa81\r\n  16:     0x7f7e1fc5bdba - <scoped_tls::ScopedKey<T>>::set::h71212949a1d6fa63\r\n  17:     0x7f7e1fccd802 - std::sys_common::backtrace::__rust_begin_short_backtrace::h76607ec057ea37b9\r\n  18:     0x7f7e1f92c529 - __rust_maybe_catch_panic\r\n                               at src/libpanic_unwind/lib.rs:92\r\n  19:     0x7f7e1fce4fa0 - <F as alloc::boxed::FnBox<A>>::call_box::h33b88f71d009a576\r\n  20:     0x7f7e1f92b2ed - std::sys::unix::thread::Thread::new::thread_start::h6fb76bcf544b6181\r\n                               at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858/src/liballoc/boxed.rs:744\r\n                               at src/libstd/sys_common/thread.rs:14\r\n                               at src/libstd/sys/unix/thread.rs:81\r\n  21:     0x7f7e1f6a06b9 - start_thread\r\n  22:     0x7f7e1efca41c - clone\r\n  23:                0x0 - <unknown>\r\nquery stack during panic:\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.33.0 (2aa4c46cf 2019-02-28) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C opt-level=3 -C lto --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `parent`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.33.0 (2aa4c46cf 2019-02-28)\r\nbinary: rustc\r\ncommit-hash: 2aa4c46cfdd726e97360c2734835aa3515e8c858\r\ncommit-date: 2019-02-28\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.33.0\r\nLLVM version: 8.0\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/59137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/59137/timeline", "performed_via_github_app": null, "state_reason": "completed"}