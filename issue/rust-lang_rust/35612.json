{"url": "https://api.github.com/repos/rust-lang/rust/issues/35612", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/35612/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/35612/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/35612/events", "html_url": "https://github.com/rust-lang/rust/issues/35612", "id": 170773416, "node_id": "MDU6SXNzdWUxNzA3NzM0MTY=", "number": 35612, "title": "`self` and `super` behave inconsistently in `use` statements and as module names", "user": {"login": "insaneinside", "id": 4030926, "node_id": "MDQ6VXNlcjQwMzA5MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4030926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/insaneinside", "html_url": "https://github.com/insaneinside", "followers_url": "https://api.github.com/users/insaneinside/followers", "following_url": "https://api.github.com/users/insaneinside/following{/other_user}", "gists_url": "https://api.github.com/users/insaneinside/gists{/gist_id}", "starred_url": "https://api.github.com/users/insaneinside/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/insaneinside/subscriptions", "organizations_url": "https://api.github.com/users/insaneinside/orgs", "repos_url": "https://api.github.com/users/insaneinside/repos", "events_url": "https://api.github.com/users/insaneinside/events{/privacy}", "received_events_url": "https://api.github.com/users/insaneinside/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2016-08-11T23:55:58Z", "updated_at": "2020-01-25T17:28:46Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Handling of `self` and `super` in `use` and `mod` statements is inconsistent.  [Playpen](https://is.gd/znBchD):\n\n``` rust\nuse self;                        // error: `self` imports are only allowed within a { } list [E0429] (expected)\n                                 // error: unresolved import `self`. There is no `self` in the crate root [E0432]\n\nmod super {                      // error: expected identifier, found keyword `super`\n    type Test = u32;\n    mod submodule {\n        use super;               // error: a module named `super` has already been imported in this module [E0252]\n        use super::{self, Test}; // (^^^ apparently \"already\" means \"on the next line\"?)\n    }\n    use super;                  // (no error for this one?)\n}\n```\n\nThere are probably several (related) issues here.\n- Inconsistent handling of keyword status for `self` and `super` as module names:  if we add a `mod self { }` to the above, we get the two \"expected identifier, found keyword\" errors we'd expect -- and no other output.  It appears that `mod self { }` causes an immediate \"aborting due to previous error\", while `mod super { }` does not.\n- `use super::{self, ...};` doesn't special-case the `self` keyword as a keyword like `use foo::bar::{self, ...};` does.\n- `use super;` doesn't special-case the `super` keyword as a keyword.\n- `use self;` _does_ do some special-casing so it can produce \"error: `self` imports are only allowed within a { } list [E0429]\", but it then continues by attempting to resolve `self` as an ident.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/35612/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/35612/timeline", "performed_via_github_app": null, "state_reason": null}