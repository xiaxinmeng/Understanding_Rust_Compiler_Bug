{"url": "https://api.github.com/repos/rust-lang/rust/issues/99836", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99836/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99836/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99836/events", "html_url": "https://github.com/rust-lang/rust/issues/99836", "id": 1320273034, "node_id": "I_kwDOAAsO6M5OscSK", "number": 99836, "title": "Compiling ndarray: alignment mismatch between ABI and layout", "user": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1966877457, "node_id": "MDU6TGFiZWwxOTY2ODc3NDU3", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-critical", "name": "P-critical", "color": "eb6420", "default": false, "description": "Critical priority"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2022-07-28T01:15:34Z", "updated_at": "2022-07-31T02:14:56Z", "closed_at": "2022-07-31T02:14:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Code\r\n\r\n[ndarray](https://github.com/rust-ndarray/ndarray) master as of `ddef4d280fb5abc82325287e68ecacfc81882a1e`.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.64.0-dev\r\nbinary: rustc\r\ncommit-hash: unknown\r\ncommit-date: unknown\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.64.0-dev\r\nLLVM version: 14.0.6\r\n```\r\n\r\nThat's commit 2643b16468fda787470340890212591d8bc832b7 built with this `config.toml`:\r\n\r\n```toml\r\nprofile = \"compiler\"\r\nchangelog-seen = 2\r\n[rust]\r\ndebug-assertions = true\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: `(left == right)`\r\n  left: `Align(8 bytes)`,\r\n right: `Align(1 bytes)`: alignment mismatch between ABI and layout in Layout {\r\n    ...\r\n}', compiler/rustc_middle/src/ty/layout.rs:240:21\r\n```\r\n\r\nNote that this assertion is under `if cfg!(debug_assertions)`:\r\nhttps://github.com/rust-lang/rust/blob/2643b16468fda787470340890212591d8bc832b7/compiler/rustc_middle/src/ty/layout.rs#L240-L244\r\n\r\n<details><summary><strong>Full output</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: `(left == right)`\r\n  left: `Align(8 bytes)`,\r\n right: `Align(1 bytes)`: alignment mismatch between ABI and layout in Layout {\r\n    fields: Arbitrary {\r\n        offsets: [\r\n            Size(0 bytes),\r\n        ],\r\n        memory_index: [\r\n            0,\r\n        ],\r\n    },\r\n    variants: Multiple {\r\n        tag: Initialized {\r\n            value: Int(\r\n                I8,\r\n                false,\r\n            ),\r\n            valid_range: 0..=6,\r\n        },\r\n        tag_encoding: Niche {\r\n            dataful_variant: 1,\r\n            niche_variants: 0..=0,\r\n            niche_start: 0,\r\n        },\r\n        tag_field: 0,\r\n        variants: [\r\n            Layout {\r\n                fields: Arbitrary {\r\n                    offsets: [\r\n                        Size(0 bytes),\r\n                    ],\r\n                    memory_index: [\r\n                        0,\r\n                    ],\r\n                },\r\n                variants: Single {\r\n                    index: 0,\r\n                },\r\n                abi: Aggregate {\r\n                    sized: true,\r\n                },\r\n                largest_niche: None,\r\n                align: AbiAndPrefAlign {\r\n                    abi: Align(8 bytes),\r\n                    pref: Align(8 bytes),\r\n                },\r\n                size: Size(0 bytes),\r\n            },\r\n            Layout {\r\n                fields: Arbitrary {\r\n                    offsets: [\r\n                        Size(0 bytes),\r\n                    ],\r\n                    memory_index: [\r\n                        0,\r\n                    ],\r\n                },\r\n                variants: Single {\r\n                    index: 1,\r\n                },\r\n                abi: Scalar(\r\n                    Initialized {\r\n                        value: Int(\r\n                            I8,\r\n                            false,\r\n                        ),\r\n                        valid_range: 1..=6,\r\n                    },\r\n                ),\r\n                largest_niche: Some(\r\n                    Niche {\r\n                        offset: Size(0 bytes),\r\n                        value: Int(\r\n                            I8,\r\n                            false,\r\n                        ),\r\n                        valid_range: 1..=6,\r\n                    },\r\n                ),\r\n                align: AbiAndPrefAlign {\r\n                    abi: Align(1 bytes),\r\n                    pref: Align(8 bytes),\r\n                },\r\n                size: Size(1 bytes),\r\n            },\r\n        ],\r\n    },\r\n    abi: Scalar(\r\n        Initialized {\r\n            value: Int(\r\n                I8,\r\n                false,\r\n            ),\r\n            valid_range: 0..=6,\r\n        },\r\n    ),\r\n    largest_niche: Some(\r\n        Niche {\r\n            offset: Size(0 bytes),\r\n            value: Int(\r\n                I8,\r\n                false,\r\n            ),\r\n            valid_range: 0..=6,\r\n        },\r\n    ),\r\n    align: AbiAndPrefAlign {\r\n        abi: Align(8 bytes),\r\n        pref: Align(8 bytes),\r\n    },\r\n    size: Size(1 bytes),\r\n}', compiler/rustc_middle/src/ty/layout.rs:240:21\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n   1: core::panicking::panic_fmt\r\n   2: core::panicking::assert_failed_inner\r\n   3: core::panicking::assert_failed::<rustc_target::abi::Align, rustc_target::abi::Align>\r\n   4: rustc_middle::ty::layout::sanity_check_layout::check_layout_abi\r\n   5: rustc_middle::ty::context::tls::with_context::<rustc_middle::ty::context::tls::with_related_context<rustc_middle::ty::layout::layout_of::{closure#0}, core::result::Result<rustc_target::abi::TyAndLayout<rustc_middle::ty::Ty>, rustc_middle::ty::layout::LayoutError>>::{closure#0}, core::result::Result<rustc_target::abi::TyAndLayout<rustc_middle::ty::Ty>, rustc_middle::ty::layout::LayoutError>>::{closure#0}\r\n   6: rustc_middle::ty::layout::layout_of\r\n   7: <rustc_middle::dep_graph::dep_node::DepKind as rustc_query_system::dep_graph::DepKind>::with_deps::<<rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task_impl<rustc_middle::ty::context::TyCtxt, rustc_middle::ty::ParamEnvAnd<rustc_middle::ty::Ty>, core::result::Result<rustc_target::abi::TyAndLayout<rustc_middle::ty::Ty>, rustc_middle::ty::layout::LayoutError>>::{closure#0}, core::result::Result<rustc_target::abi::TyAndLayout<rustc_middle::ty::Ty>, rustc_middle::ty::layout::LayoutError>>\r\n   8: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_middle::ty::ParamEnvAnd<rustc_middle::ty::Ty>, core::result::Result<rustc_target::abi::TyAndLayout<rustc_middle::ty::Ty>, rustc_middle::ty::layout::LayoutError>>\r\n   9: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::layout_of, rustc_query_impl::plumbing::QueryCtxt>\r\n  10: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::layout_of\r\n  11: <rustc_mir_transform::const_prop::CanConstProp>::check\r\n  12: <rustc_mir_transform::const_prop_lint::ConstProp as rustc_mir_transform::pass_manager::MirLint>::run_lint\r\n  13: rustc_mir_transform::pass_manager::run_passes\r\n  14: rustc_mir_transform::run_post_borrowck_cleanup_passes\r\n  15: rustc_mir_transform::mir_drops_elaborated_and_const_checked\r\n  16: <rustc_middle::dep_graph::dep_node::DepKind as rustc_query_system::dep_graph::DepKind>::with_deps::<<rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task_impl<rustc_middle::ty::context::TyCtxt, rustc_middle::ty::WithOptConstParam<rustc_span::def_id::LocalDefId>, &rustc_data_structures::steal::Steal<rustc_middle::mir::Body>>::{closure#0}, &rustc_data_structures::steal::Steal<rustc_middle::mir::Body>>\r\n  17: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_middle::ty::WithOptConstParam<rustc_span::def_id::LocalDefId>, &rustc_data_structures::steal::Steal<rustc_middle::mir::Body>>\r\n  18: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_middle::ty::WithOptConstParam<rustc_span::def_id::LocalDefId>, &rustc_data_structures::steal::Steal<rustc_middle::mir::Body>>>\r\n  19: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::mir_drops_elaborated_and_const_checked, rustc_query_impl::plumbing::QueryCtxt>\r\n  20: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_drops_elaborated_and_const_checked\r\n  21: rustc_mir_transform::optimized_mir\r\n  22: <rustc_middle::dep_graph::dep_node::DepKind as rustc_query_system::dep_graph::DepKind>::with_deps::<<rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task_impl<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::DefId, &rustc_middle::mir::Body>::{closure#0}, &rustc_middle::mir::Body>\r\n  23: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::DefId, &rustc_middle::mir::Body>\r\n  24: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::DefId, &rustc_middle::mir::Body>>\r\n  25: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::optimized_mir, rustc_query_impl::plumbing::QueryCtxt>\r\n  26: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::optimized_mir\r\n  27: <rustc_metadata::rmeta::encoder::EncodeContext>::encode_crate_root\r\n  28: rustc_metadata::rmeta::encoder::encode_metadata_impl\r\n  29: rustc_data_structures::sync::join::<rustc_metadata::rmeta::encoder::encode_metadata::{closure#0}, rustc_metadata::rmeta::encoder::encode_metadata::{closure#1}, (), ()>\r\n  30: rustc_metadata::rmeta::encoder::encode_metadata\r\n  31: rustc_metadata::fs::encode_and_write_metadata\r\n  32: rustc_interface::passes::start_codegen\r\n  33: <rustc_interface::passes::QueryContext>::enter::<<rustc_interface::queries::Queries>::ongoing_codegen::{closure#0}::{closure#0}, core::result::Result<alloc::boxed::Box<dyn core::any::Any>, rustc_errors::ErrorGuaranteed>>\r\n  34: <rustc_interface::queries::Query<alloc::boxed::Box<dyn core::any::Any>>>::compute::<<rustc_interface::queries::Queries>::ongoing_codegen::{closure#0}>\r\n  35: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorGuaranteed>>\r\n  36: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  37: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>\r\n  38: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.64.0-dev running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type lib -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [layout_of] computing layout of `core::result::Result<slice::SliceInfo<[slice::SliceInfoElem; 0], Din, Dout>, error::ShapeError>`\r\n#1 [mir_drops_elaborated_and_const_checked] elaborating drops for `slice::<impl at src/slice.rs:557:9: 558:60>::try_from`\r\n#2 [optimized_mir] optimizing MIR for `slice::<impl at src/slice.rs:557:9: 558:60>::try_from`\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99836/timeline", "performed_via_github_app": null, "state_reason": "completed"}