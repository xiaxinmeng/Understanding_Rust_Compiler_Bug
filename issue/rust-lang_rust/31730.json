{"url": "https://api.github.com/repos/rust-lang/rust/issues/31730", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/31730/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/31730/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/31730/events", "html_url": "https://github.com/rust-lang/rust/issues/31730", "id": 134331716, "node_id": "MDU6SXNzdWUxMzQzMzE3MTY=", "number": 31730, "title": "Implementation of traits on functions ignored after function call", "user": {"login": "jntrnr", "id": 547158, "node_id": "MDQ6VXNlcjU0NzE1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/547158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jntrnr", "html_url": "https://github.com/jntrnr", "followers_url": "https://api.github.com/users/jntrnr/followers", "following_url": "https://api.github.com/users/jntrnr/following{/other_user}", "gists_url": "https://api.github.com/users/jntrnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/jntrnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jntrnr/subscriptions", "organizations_url": "https://api.github.com/users/jntrnr/orgs", "repos_url": "https://api.github.com/users/jntrnr/repos", "events_url": "https://api.github.com/users/jntrnr/events{/privacy}", "received_events_url": "https://api.github.com/users/jntrnr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-02-17T16:37:21Z", "updated_at": "2020-01-25T21:56:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In this example, I implement a trait on generic functions.  One with mutability and one without.  When invoked manually, the proper trait gets called.  Instead, if I try to peel off the function's unique tag using another function, the traits are no longer visible.\n\nChecked against: rustc 1.8.0-nightly (57c357d89 2016-02-16)\n\n``` Rust\ntrait FooFn {\n    fn foo(&self);\n}\n\nimpl<T: Sized> FooFn for fn(&mut T)-> T {\n    fn foo(&self) {\n        println!(\"Generic (with mutable) match!\");\n    }\n}\n\n\nimpl<T: Sized> FooFn for fn(T)->T {\n    fn foo(&self) {\n        println!(\"Generic match!\");\n\n    }    \n}\n\nfn simple_fn(x: i32) -> i32 { 1 }\nfn simple_fn2(x: &mut i32) -> i32 { 2 }\n\nfn strip<T, U>(x: fn(T)->U) -> fn(T)->U { x }\n\nfn main() {\n    //Works\n    &(simple_fn as fn(i32)->i32).foo(); \n    //Also works\n    &(simple_fn2 as fn(&mut i32)->i32).foo();\n\n    //Works\n    strip(simple_fn).foo();\n    //Error: no method named `foo` found for type `fn(&mut i32) -> i32`\n    strip(simple_fn2).foo();\n}\n```\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/31730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/31730/timeline", "performed_via_github_app": null, "state_reason": null}