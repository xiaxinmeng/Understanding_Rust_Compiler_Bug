{"url": "https://api.github.com/repos/rust-lang/rust/issues/94970", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94970/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94970/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94970/events", "html_url": "https://github.com/rust-lang/rust/issues/94970", "id": 1170099724, "node_id": "I_kwDOAAsO6M5Fvk4M", "number": 94970, "title": "Tracking issues for unstable language features used by `std`", "user": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37977651, "node_id": "MDU6TGFiZWwzNzk3NzY1MQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/metabug", "name": "metabug", "color": "5319e7", "default": false, "description": "Issues about issues themselves (\"bugs about bugs\")"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2022-03-15T19:27:01Z", "updated_at": "2023-03-14T07:36:15Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "`std` uses a lot of unstable language features. While `core` will most likely always have to use language features because it defines things that are part of the core of the language, we can strive for `std` to eventually be free of unstable language features.\r\n\r\nSome of these we'll need to stabilize, but some others we might be able to simply remove with some small changes to the code.\r\n\r\n(See also https://github.com/rust-lang/rust/issues/94971 for the library features used by `std`.)\r\n\r\nThese are the language features we currently use in `std`: (This does not include `core` or `alloc`.)\r\n\r\n- Macro related:\r\n  - [ ] allow_internal_unsafe\r\n  - [ ] allow_internal_unstable\r\n  - [ ] concat_idents\r\n  - [ ] decl_macro\r\n  - [ ] rustc_attrs: rustc_macro_transparency\r\n- Const eval:\r\n  - [ ] const_mut_refs\r\n  - [ ] const_trait_impl\r\n- Panic related:\r\n  - [ ] rustc_attrs: rustc_builtin_macro(std_panic)\r\n  - [ ] lang_items: begin_panic\r\n  - [ ] rustc_attrs: rustc_do_not_const_check\r\n  - [ ] needs_panic_runtime\r\n- Global allocator: (RFC 2492 might be of help here)\r\n  - [ ] alloc_error_handler\r\n  - [ ] allocator_internals\r\n- Diagnostics:\r\n  - [ ] deprecated_suggestion\r\n  - [ ] must_not_suspend\r\n  - [ ] rustc_attrs: rustc_conversion_suggestion\r\n  - [ ] rustc_attrs: rustc_diagnostic_item\r\n  - [ ] rustc_attrs: rustc_insignificant_dtor\r\n  - [ ] rustc_attrs: rustc_lint_query_instability\r\n- Rustdoc:\r\n  - [ ] doc_cfg\r\n  - [ ] doc_cfg_hide\r\n  - [ ] rustdoc_internals\r\n  - [ ] doc_masked\r\n  - [ ] doc_notable_trait\r\n  - [ ] intra_doc_pointers\r\n- Other language features:\r\n  - [ ] lang_items: start\r\n  - [ ] lang_items: termination\r\n  - [ ] lang_items: f32_runtime, f64_runtime\r\n     - Fixed if we move all f32 and f64 methods to core. Libm -> compiler_builtins?\r\n  - [x] associated_type_bounds: https://github.com/rust-lang/rust/pull/95587\r\n  - [ ] box_syntax\r\n  - [ ] try_blocks\r\n  - [ ] c_unwind\r\n  - [ ] dropck_eyepatch\r\n  - [ ] exhaustive_patterns\r\n  - [ ] linkage\r\n  - [ ] min_specialization\r\n  - [ ] negative_impls\r\n      - We can remove this if we switch to just using `PhantomData` everywhere.\r\n  - [ ] never_type\r\n  - [x] nll\r\n  - [ ] platform_intrinsics\r\n     - Used for the parts of portable-simd that do not go in core (yet?)\r\n  - [ ] prelude_import\r\n  - [ ] staged_api\r\n  - [ ] thread_local\r\n  - [ ] cfg_target_thread_local\r\n  - [ ] rustc_attrs: rustc_std_internal_symbol\r\n  - [ ] rustc_attrs: rustc_specialization_trait\r\n  - [ ] rustc_attrs: rustc_layout_scalar_valid_range_start, rustc_layout_scalar_valid_range_end", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94970/timeline", "performed_via_github_app": null, "state_reason": null}