{"url": "https://api.github.com/repos/rust-lang/rust/issues/71805", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71805/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71805/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71805/events", "html_url": "https://github.com/rust-lang/rust/issues/71805", "id": 611200527, "node_id": "MDU6SXNzdWU2MTEyMDA1Mjc=", "number": 71805, "title": "[ICE] with const generics and specified constant", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-02T14:20:29Z", "updated_at": "2020-07-16T22:23:14Z", "closed_at": "2020-07-16T22:23:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Related to ER #71387\r\n\r\n```\r\n#![feature(const_generics)]\r\n#![allow(incomplete_features)]\r\n\r\nuse std::mem::MaybeUninit;\r\n\r\ntrait CollectSlice<'a>: Iterator {\r\n    fn inner_array<const N: usize>(&mut self) -> [Self::Item; N];\r\n\r\n    fn collect_array<const N: usize>(&mut self) -> [Self::Item; N] {\r\n        let result = self.inner_array();\r\n        assert!(self.next().is_none());\r\n        result\r\n    }\r\n}\r\n\r\nimpl<'a, I: ?Sized> CollectSlice<'a> for I where I: Iterator {\r\n    fn inner_array<const N: usize>(&mut self) -> [Self::Item; N] {\r\n        let mut result: [MaybeUninit<Self::Item>; N] = unsafe {\r\n            MaybeUninit::uninit().assume_init()\r\n        };\r\n\r\n        let mut count = 0;\r\n        for (dest, item) in result.iter_mut().zip(self) {\r\n            *dest = MaybeUninit::new(item);\r\n            count += 1;\r\n        }\r\n\r\n        assert_eq!(N, count);\r\n\r\n        let temp_ptr: *const [MaybeUninit<Self::Item>; N] = &result;\r\n        unsafe { std::ptr::read(temp_ptr as *const [Self::Item; N]) }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let foos = [0_u64; 9].iter().cloned();\r\n    let _bar: [u64; 9] = foos.collect_array::<9_usize>();\r\n}\r\n```\r\n\r\nGives:\r\n\r\n```\r\nerror: internal compiler error: unexpected const parent in type_of_def_id(): Expr(Expr { hir_id: HirId { owner: DefId(0:21 ~ bug[317d]::main[0]), local_id: 23 }, kind: MethodCall(PathSegment { ident: collect_array#0, hir_id: Some(HirId { owner: DefId(0:21 ~ bug[317d]::main[0]), local_id: 20 }), res: Some(Err), args: Some(GenericArgs { args: [Const(ConstArg { value: AnonConst { hir_id: HirId { owner: DefId(0:21 ~ bug[317d]::main[0]), local_id: 18 }, body: BodyId { hir_id: HirId { owner: DefId(0:21 ~ bug[317d]::main[0]), local_id: 19 } } }, span: ...\\bug.rs:37:47: 37:54 })], bindings: [], parenthesized: false }), infer_args: false }, ...\\bug.rs:37:31: 37:44, [Expr { hir_id: HirId { owner: DefId(0:21 ~ bug[317d]::main[0]), local_id: 22 }, kind: Path(Resolved(None, Path { span: ...\\bug.rs:37:26: 37:30, res: Local(HirId { owner: DefId(0:21 ~ bug[317d]::main[0]), local_id: 1 }), segments: [PathSegment { ident: foos#0, hir_id: Some(HirId { owner: DefId(0:21 ~ bug[317d]::main[0]), local_id: 21 }), res: Some(Local(HirId { owner: DefId(0:21 ~ bug[317d]::main[0]), local_id: 1 })), args: None, infer_args: true }] })), attrs: ThinVec(None), span: ...\\bug.rs:37:26: 37:30 }]), attrs: ThinVec(None), span: ...\\bug.rs:37:26: 37:57 })\r\n\r\nerror: internal compiler error: Const::from_anon_const: couldn't lit_to_const\r\n  --> ...\\bug.rs:37:47\r\n   |\r\n37 |     let _bar: [u64; 9] = foos.collect_array::<9_usize>();\r\n   |                                               ^^^^^^^\r\n\r\nerror: internal compiler error: `ErrorReported` without an error\r\n  --> ...\\bug.rs:37:47\r\n   |\r\n37 |     let _bar: [u64; 9] = foos.collect_array::<9_usize>();\r\n   |                                               ^^^^^^^\r\n\r\nerror: internal compiler error: cat_expr Errd\r\n  --> ...\\bug.rs:35:11\r\n   |\r\n35 |   fn main() {\r\n   |  ___________^\r\n36 | |     let foos = [0_u64; 9].iter().cloned();\r\n37 | |     let _bar: [u64; 9] = foos.collect_array::<9_usize>();\r\n38 | | }\r\n   | |_^\r\n\r\nerror: internal compiler error: cat_expr Errd\r\n  --> ...\\bug.rs:37:26\r\n   |\r\n37 |     let _bar: [u64; 9] = foos.collect_array::<9_usize>();\r\n   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: internal compiler error: PromoteTemps: MIR had errors\r\n  --> ...\\bug.rs:35:1\r\n   |\r\n35 | / fn main() {\r\n36 | |     let foos = [0_u64; 9].iter().cloned();\r\n37 | |     let _bar: [u64; 9] = foos.collect_array::<9_usize>();\r\n38 | | }\r\n   | |_^\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:21 ~ bug[317d]::main[0]) (\"return type\"): bad type [type error]\r\n  --> ...\\bug.rs:35:1\r\n   |\r\n35 | / fn main() {\r\n36 | |     let foos = [0_u64; 9].iter().cloned();\r\n37 | |     let _bar: [u64; 9] = foos.collect_array::<9_usize>();\r\n38 | | }\r\n   | |_^\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:21 ~ bug[317d]::main[0]) (LocalDecl { mutability: Mut, local_info: Other, internal: false, is_block_tail: None, ty: [type error], user_ty: UserTypeProjections { contents: [] }, source_info: SourceInfo { span: ...\\bug.rs:35:1: 38:2, scope: scope[0] } }): bad type [type error]\r\n  --> ...\\bug.rs:35:1\r\n   |\r\n35 | / fn main() {\r\n36 | |     let foos = [0_u64; 9].iter().cloned();\r\n37 | |     let _bar: [u64; 9] = foos.collect_array::<9_usize>();\r\n38 | | }\r\n   | |_^\r\n\r\nerror: internal compiler error: mir_const_qualif: MIR had errors\r\n  --> ...\\bug.rs:37:47\r\n   |\r\n37 |     let _bar: [u64; 9] = foos.collect_array::<9_usize>();\r\n   |                                               ^^^^^^^\r\n\r\nerror: internal compiler error: PromoteTemps: MIR had errors\r\n  --> ...\\bug.rs:37:47\r\n   |\r\n37 |     let _bar: [u64; 9] = foos.collect_array::<9_usize>();\r\n   |                                               ^^^^^^^\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:24 ~ bug[317d]::main[0]::{{constant}}[2]) (\"return type\"): bad type [type error]\r\n  --> ...\\bug.rs:37:47\r\n   |\r\n37 |     let _bar: [u64; 9] = foos.collect_array::<9_usize>();\r\n   |                                               ^^^^^^^\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:24 ~ bug[317d]::main[0]::{{constant}}[2]) (LocalDecl { mutability: Mut, local_info: Other, internal: false, is_block_tail: None, ty: [type error], user_ty: UserTypeProjections { contents: [] }, source_info: SourceInfo { span: ...\\bug.rs:37:47: 37:54, scope: scope[0] } }): bad type [type error]\r\n  --> ...\\bug.rs:37:47\r\n   |\r\n37 |     let _bar: [u64; 9] = foos.collect_array::<9_usize>();\r\n   |                                               ^^^^^^^\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src\\librustc_errors\\lib.rs:366:17\r\n\r\nnote: rustc 1.45.0-nightly (7f65393b9 2020-05-01) running on x86_64-pc-windows-gnu\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71805/timeline", "performed_via_github_app": null, "state_reason": "completed"}