{"url": "https://api.github.com/repos/rust-lang/rust/issues/42327", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42327/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42327/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42327/events", "html_url": "https://github.com/rust-lang/rust/issues/42327", "id": 232490205, "node_id": "MDU6SXNzdWUyMzI0OTAyMDU=", "number": 42327, "title": "Tracking issue for `ops::Try` (`try_trait` feature)", "user": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 433146169, "node_id": "MDU6TGFiZWw0MzMxNDYxNjk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-RFC-implemented", "name": "B-RFC-implemented", "color": "d304cb", "default": false, "description": "Approved by a merged RFC and implemented."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 1448485701, "node_id": "MDU6TGFiZWwxNDQ4NDg1NzAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-error-handling", "name": "A-error-handling", "color": "f7e101", "default": false, "description": "Area: Error handling"}, {"id": 2240305001, "node_id": "MDU6TGFiZWwyMjQwMzA1MDAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/Libs-Tracked", "name": "Libs-Tracked", "color": "d4c5f9", "default": false, "description": "Libs issues that are tracked on the team's project board."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 107, "created_at": "2017-05-31T08:23:55Z", "updated_at": "2021-09-01T18:04:12Z", "closed_at": "2021-09-01T18:04:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Feature gate: `#![feature(try_trait)]`\r\n\r\nThis is a tracking issue for the `Try` trait from https://github.com/rust-lang/rfcs/pull/1859.\r\n\r\nSplit off from https://github.com/rust-lang/rust/issues/31436 for clarity (per https://github.com/rust-lang/rust/pull/42275#discussion_r119167966)\r\n\r\n### Public API\r\n\r\n```rust\r\npub mod core {\r\n    pub mod result {\r\n        impl<T, E> ops::Try for Result<T, E> {\r\n            type Ok = T;\r\n            type Error = E;\r\n            fn into_result(self) -> Self {}\r\n            fn from_ok(v: T) -> Self {}\r\n            fn from_error(v: E) -> Self {}\r\n        }\r\n    }\r\n\r\n    pub mod option {\r\n        #[derive(Clone, Copy, PartialEq, PartialOrd, Eq, Ord, Debug, Hash)]\r\n        pub struct NoneError;\r\n\r\n        impl<T> ops::Try for Option<T> {\r\n            type Ok = T;\r\n            type Error = NoneError;\r\n            fn into_result(self) -> Result<T, NoneError> {}\r\n            fn from_ok(v: T) -> Self {}\r\n            fn from_error(_: NoneError) -> Self {}\r\n        }\r\n    }\r\n\r\n    pub mod ops {\r\n        mod r#try {\r\n            pub trait Try {\r\n                type Ok;\r\n                type Error;\r\n                fn into_result(self) -> Result<Self::Ok, Self::Error>;\r\n                fn from_error(v: Self::Error) -> Self;\r\n                fn from_ok(v: Self::Ok) -> Self;\r\n            }\r\n        }\r\n\r\n        pub use self::r#try::Try;\r\n    }\r\n}\r\n```\r\n\r\n### Steps / History\r\n\r\n- [x] ~~Stabilizing this will allow people to implement `Iterator::try_fold`~~\r\n  - [x] ~~As part of stabilizing, re-open PR #62606 to document implementing try_fold for iterators~~\r\n  - [x] ~~Ensure that the default implementations of other things have the desired long-term DAG, since changing them is essentially impossible later.  (Specifically, it would be nice to have `fold` be implemented in terms of `try_fold`, so that both don't need to be overridden.)~~\r\n  - Moved these to the `try_trait_v2` tracking issue\r\n\r\n- [x] #42275\r\n\r\n- [x] Deprecate and remove these in favour of the new versions.\r\n\r\n### Unresolved Questions\r\n\r\nThese resulted in a new https://github.com/rust-lang/rfcs/pull/3058, tracked in https://github.com/rust-lang/rust/issues/84277\r\n\r\n- [x] Open design questions around the shape of the `Try` trait\r\n  - [x] `TryContinue` API: https://github.com/rust-lang/rust/issues/42327#issuecomment-379156320 and https://github.com/rust-lang/rust/issues/42327#issuecomment-379955253\r\n  - [x] Support trace capturing: https://github.com/rust-lang/rust/issues/42327#issuecomment-619218371\r\n- [x] Usability concerns with the current trait\r\n  - [x] https://github.com/rust-lang/rust/issues/42327#issuecomment-366840247\r\n  - [x] https://github.com/rust-lang/rust/issues/42327#issuecomment-376772143\r\n", "closed_by": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42327/reactions", "total_count": 89, "+1": 76, "-1": 0, "laugh": 0, "hooray": 11, "confused": 0, "heart": 0, "rocket": 0, "eyes": 2}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42327/timeline", "performed_via_github_app": null, "state_reason": "completed"}