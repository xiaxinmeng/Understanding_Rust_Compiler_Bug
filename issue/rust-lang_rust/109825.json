{"url": "https://api.github.com/repos/rust-lang/rust/issues/109825", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/109825/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/109825/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/109825/events", "html_url": "https://github.com/rust-lang/rust/issues/109825", "id": 1650115194, "node_id": "I_kwDOAAsO6M5iWsJ6", "number": 109825, "title": "Lifetime bug on stable", "user": {"login": "redjack96", "id": 36847308, "node_id": "MDQ6VXNlcjM2ODQ3MzA4", "avatar_url": "https://avatars.githubusercontent.com/u/36847308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/redjack96", "html_url": "https://github.com/redjack96", "followers_url": "https://api.github.com/users/redjack96/followers", "following_url": "https://api.github.com/users/redjack96/following{/other_user}", "gists_url": "https://api.github.com/users/redjack96/gists{/gist_id}", "starred_url": "https://api.github.com/users/redjack96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/redjack96/subscriptions", "organizations_url": "https://api.github.com/users/redjack96/orgs", "repos_url": "https://api.github.com/users/redjack96/repos", "events_url": "https://api.github.com/users/redjack96/events{/privacy}", "received_events_url": "https://api.github.com/users/redjack96/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-03-31T22:23:47Z", "updated_at": "2023-04-03T08:27:05Z", "closed_at": "2023-04-03T08:27:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\nI was trying to implement drag and drop into bevy 0.10.0, starting from an example in bevy 0.4.0, but I've got this error when using `cargo check`. This is the minimal code to reproduce the error. \r\n\r\n### Code\r\n\r\n```Rust\r\nuse bevy::prelude::*;\r\nuse bevy::app::CoreSet::PreUpdate;\r\n\r\npub struct MyPlugin;\r\n\r\nimpl Plugin for MyPlugin {\r\n    fn build(&self, app: &mut App) {\r\n        app.add_system(cursor_state.in_base_set(PreUpdate));\r\n    }\r\n}\r\n\r\n#[derive(Resource)]\r\nstruct State<'a, 'b> {\r\n    er_cursor_moved: EventReader<'a, 'b, CursorMoved>,\r\n}\r\n\r\nfn cursor_state(\r\n    mut state: ResMut<State>,\r\n    e_cursor_moved: Res<Events<CursorMoved>>,\r\n) {\r\n    let _ = state.er_cursor_moved.latest(&e_cursor_moved);\r\n}\r\n// you don't even need to add the plugin to the main app\r\nfn main() {\r\n    App::new().run();\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.68.0 (2c8cc3432 2023-03-06)\r\nbinary: rustc\r\ncommit-hash: 2c8cc343237b8f7d5a3c3703e3a87f2eb2c54a74\r\ncommit-date: 2023-03-06\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.68.0\r\nLLVM version: 15.0.6\r\n\r\n```\r\nThe bug does *not* exist on nightly compiler. The output of `cargo +nightly check` is:\r\n```\r\nerror[E0759]: `state` has an anonymous lifetime `'_` but it needs to satisfy a `'static` lifetime requirement\r\n   --> art_of_card_rust/src/rust_error.rs:18:16\r\n    |\r\n18  |     mut state: ResMut<State>,\r\n    |                ^^^^^^^^^^^^^\r\n    |                |\r\n    |                this data with an anonymous lifetime `'_`...\r\n    |                ...is used and required to live as long as `'static` here\r\n    |\r\nnote: `'static` lifetime requirement introduced by this bound\r\n   --> /home/giaco/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bevy_ecs-0.10.0/src/change_detection.rs:428:35\r\n    |\r\n428 | pub struct ResMut<'a, T: ?Sized + Resource> {\r\n    |                                   ^^^^^^^^\r\n\r\nFor more information about this error, try `rustc --explain E0759`.\r\nerror: could not compile `art_of_card_rust` (bin \"art_of_card_rust\") due to previous error\r\n\r\n```\r\n\r\n\r\n### Error output\r\n\r\n```\r\n\r\nquery stack during panic:\r\n#0 [check_well_formed] checking that `rust_error::cursor_state` is well-formed\r\n#1 [check_mod_type_wf] checking that types are well-formed in module `rust_error`\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: internal compiler error: no warnings or errors encountered even though `delayed_good_path_bugs` issued\r\n\r\nerror: internal compiler error: trimmed_def_paths constructed but no error emitted; use `DelayDm` for lints or `with_no_trimmed_paths` for debugging\r\n  |\r\n  = note: delayed at    0: <rustc_errors::Handler>::delay_good_path_bug::<&str>\r\n             1: rustc_middle::ty::print::pretty::trimmed_def_paths\r\n             2: <rustc_middle::dep_graph::dep_node::DepKind as rustc_query_system::dep_graph::DepKind>::with_deps::<<rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task_impl<rustc_middle::ty::context::TyCtxt, (), std::collections::hash::map::HashMap<rustc_span::def_id::DefId, rustc_span::symbol::Symbol, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>>::{closure#0}, std::collections::hash::map::HashMap<rustc_span::def_id::DefId, rustc_span::symbol::Symbol, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>>\r\n             3: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), std::collections::hash::map::HashMap<rustc_span::def_id::DefId, rustc_span::symbol::Symbol, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>>\r\n             4: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::trimmed_def_paths, rustc_query_impl::plumbing::QueryCtxt>\r\n             5: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::trimmed_def_paths, rustc_query_impl::plumbing::QueryCtxt, rustc_middle::dep_graph::dep_node::DepKind>\r\n             6: <rustc_middle::ty::print::pretty::FmtPrinter as rustc_middle::ty::print::Printer>::print_def_path\r\n             7: <rustc_middle::ty::print::pretty::FmtPrinter as rustc_middle::ty::print::Printer>::print_def_path\r\n             8: <rustc_middle::ty::print::pretty::FmtPrinter as rustc_middle::ty::print::pretty::PrettyPrinter>::pretty_print_type\r\n             9: <rustc_middle::ty::Ty as core::fmt::Display>::fmt\r\n            10: <rustc_infer::infer::error_reporting::nice_region_error::NiceRegionError>::try_report\r\n            11: <rustc_infer::infer::error_reporting::TypeErrCtxt>::try_report_nice_region_error\r\n            12: <rustc_infer::infer::error_reporting::TypeErrCtxt>::check_region_obligations_and_report_errors\r\n            13: rustc_hir_analysis::check::wfcheck::check_item_fn\r\n            14: rustc_hir_analysis::check::wfcheck::check_well_formed\r\n            15: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_hir::hir_id::OwnerId, ()>\r\n            16: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::check_well_formed, rustc_query_impl::plumbing::QueryCtxt, rustc_middle::dep_graph::dep_node::DepKind>\r\n            17: rustc_data_structures::sync::par_for_each_in::<&[rustc_hir::hir::ImplItemId], <rustc_middle::hir::ModuleItems>::par_impl_items<rustc_hir_analysis::check::wfcheck::check_mod_type_wf::{closure#1}>::{closure#0}>\r\n            18: rustc_hir_analysis::check::wfcheck::check_mod_type_wf\r\n            19: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId, ()>\r\n            20: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::check_mod_type_wf, rustc_query_impl::plumbing::QueryCtxt>\r\n            21: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::check_mod_type_wf\r\n            22: rustc_data_structures::sync::par_for_each_in::<&[rustc_hir::hir_id::OwnerId], <rustc_middle::hir::map::Map>::par_for_each_module<rustc_hir_analysis::check_crate::{closure#5}::{closure#0}::{closure#0}>::{closure#0}>\r\n            23: <rustc_session::session::Session>::track_errors::<rustc_hir_analysis::check_crate::{closure#5}, ()>\r\n            24: rustc_hir_analysis::check_crate\r\n            25: rustc_interface::passes::analysis\r\n            26: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n            27: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n            28: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n            29: <rustc_interface::passes::QueryContext>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}::{closure#2}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n            30: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\r\n            31: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n            32: std::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n            33: <<std::thread::Builder>::spawn_unchecked_<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>::{closure#1} as core::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n            34: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n                       at /rustc/2c8cc343237b8f7d5a3c3703e3a87f2eb2c54a74/library/alloc/src/boxed.rs:1988:9\r\n            35: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n                       at /rustc/2c8cc343237b8f7d5a3c3703e3a87f2eb2c54a74/library/alloc/src/boxed.rs:1988:9\r\n            36: std::sys::unix::thread::Thread::new::thread_start\r\n                       at /rustc/2c8cc343237b8f7d5a3c3703e3a87f2eb2c54a74/library/std/src/sys/unix/thread.rs:108:17\r\n            37: start_thread\r\n                       at ./nptl/./nptl/pthread_create.c:442:8\r\n            38: clone3\r\n                       at ./misc/../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\r\n          \r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.68.0 (2c8cc3432 2023-03-06) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -C opt-level=1 -C embed-bitcode=no -C debuginfo=2 -C debug-assertions=on -C incremental=[REDACTED]\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nthread panicked while panicking. aborting.\r\nerror: could not compile `art_of_card_rust`\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --crate-name art_of_card_rust --edition=2021 art_of_card_rust/src/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --diagnostic-width=223 --crate-type bin --emit=dep-info,metadata -C opt-level=1 -C embed-bitcode=no -C debuginfo=2 -C debug-assertions=on -C metadata=c07d67cc1a18a39c -C extra-filename=-c07d67cc1a18a39c --out-dir /home/giaco/Progetti/Personale/rust_bevy_projects/target/debug/deps -C incremental=/home/giaco/Progetti/Personale/rust_bevy_projects/target/debug/incremental -L dependency=/home/giaco/Progetti/Personale/rust_bevy_projects/target/debug/deps --extern bevy=/home/giaco/Progetti/Personale/rust_bevy_projects/target/debug/deps/libbevy-8c1f2353e837fdad.rmeta --extern bevy_egui=/home/giaco/Progetti/Personale/rust_bevy_projects/target/debug/deps/libbevy_egui-90831fb8e48c8799.rmeta --extern bevy_reflect=/home/giaco/Progetti/Personale/rust_bevy_projects/target/debug/deps/libbevy_reflect-fbc6929ca59f4fbb.rmeta --extern rand=/home/giaco/Progetti/Personale/rust_bevy_projects/target/debug/deps/librand-339217970e7e2faa.rmeta -L native=/usr/lib/x86_64-linux-gnu -L native=/usr/lib/x86_64-linux-gnu` (signal: 6, SIGABRT: process abort signal)\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'called `Result::unwrap()` on an `Err` value: failed while formatting fluent string `infer_but_needs_to_satisfy`: \r\nthe fluent string has an argument `has_param_name` that was not found.\r\nhelp: the arguments `has_lifetime`, `lifetime` and `spans_empty` are available\r\n', compiler/rustc_errors/src/emitter.rs:1391:84\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/2c8cc343237b8f7d5a3c3703e3a87f2eb2c54a74/library/std/src/panicking.rs:575:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/2c8cc343237b8f7d5a3c3703e3a87f2eb2c54a74/library/core/src/panicking.rs:64:14\r\n   2: core::result::unwrap_failed\r\n             at /rustc/2c8cc343237b8f7d5a3c3703e3a87f2eb2c54a74/library/core/src/result.rs:1790:5\r\n   3: <rustc_errors::emitter::EmitterWriter>::emit_message_default::{closure#0}\r\n   4: <rustc_errors::emitter::EmitterWriter as rustc_errors::emitter::Emitter>::emit_diagnostic\r\n   5: <rustc_errors::json::Diagnostic>::from_errors_diagnostic\r\n   6: <rustc_errors::json::JsonEmitter as rustc_errors::emitter::Emitter>::emit_diagnostic\r\n   7: <rustc_errors::HandlerInner>::emit_diagnostic::{closure#2}\r\n   8: rustc_interface::callbacks::track_diagnostic\r\n   9: <rustc_errors::HandlerInner>::emit_diagnostic\r\n  10: <rustc_errors::Handler>::emit_diagnostic\r\n  11: <rustc_errors::ErrorGuaranteed as rustc_errors::diagnostic_builder::EmissionGuarantee>::diagnostic_builder_emit_producing_guarantee\r\n  12: <rustc_infer::infer::error_reporting::nice_region_error::NiceRegionError>::try_report\r\n  13: <rustc_infer::infer::error_reporting::TypeErrCtxt>::try_report_nice_region_error\r\n  14: <rustc_infer::infer::error_reporting::TypeErrCtxt>::check_region_obligations_and_report_errors\r\n  15: rustc_hir_analysis::check::wfcheck::check_item_fn\r\n  16: rustc_hir_analysis::check::wfcheck::check_well_formed\r\n  17: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_hir::hir_id::OwnerId, ()>\r\n  18: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::check_well_formed, rustc_query_impl::plumbing::QueryCtxt, rustc_middle::dep_graph::dep_node::DepKind>\r\n  19: rustc_data_structures::sync::par_for_each_in::<&[rustc_hir::hir::ImplItemId], <rustc_middle::hir::ModuleItems>::par_impl_items<rustc_hir_analysis::check::wfcheck::check_mod_type_wf::{closure#1}>::{closure#0}>\r\n  20: rustc_hir_analysis::check::wfcheck::check_mod_type_wf\r\n  21: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId, ()>\r\n  22: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::check_mod_type_wf, rustc_query_impl::plumbing::QueryCtxt>\r\n  23: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::check_mod_type_wf\r\n  24: rustc_data_structures::sync::par_for_each_in::<&[rustc_hir::hir_id::OwnerId], <rustc_middle::hir::map::Map>::par_for_each_module<rustc_hir_analysis::check_crate::{closure#5}::{closure#0}::{closure#0}>::{closure#0}>\r\n  25: <rustc_session::session::Session>::track_errors::<rustc_hir_analysis::check_crate::{closure#5}, ()>\r\n  26: rustc_hir_analysis::check_crate\r\n  27: rustc_interface::passes::analysis\r\n  28: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n  29: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  30: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  31: <rustc_interface::passes::QueryContext>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}::{closure#2}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n  32: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\r\n  33: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/109825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/109825/timeline", "performed_via_github_app": null, "state_reason": "completed"}