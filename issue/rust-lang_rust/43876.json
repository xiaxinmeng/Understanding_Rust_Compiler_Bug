{"url": "https://api.github.com/repos/rust-lang/rust/issues/43876", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43876/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43876/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43876/events", "html_url": "https://github.com/rust-lang/rust/issues/43876", "id": 250220680, "node_id": "MDU6SXNzdWUyNTAyMjA2ODA=", "number": 43876, "title": "Misleading error description, implying that a fat pointer is involved when casting", "user": {"login": "Boscop", "id": 535593, "node_id": "MDQ6VXNlcjUzNTU5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/535593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Boscop", "html_url": "https://github.com/Boscop", "followers_url": "https://api.github.com/users/Boscop/followers", "following_url": "https://api.github.com/users/Boscop/following{/other_user}", "gists_url": "https://api.github.com/users/Boscop/gists{/gist_id}", "starred_url": "https://api.github.com/users/Boscop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Boscop/subscriptions", "organizations_url": "https://api.github.com/users/Boscop/orgs", "repos_url": "https://api.github.com/users/Boscop/repos", "events_url": "https://api.github.com/users/Boscop/events{/privacy}", "received_events_url": "https://api.github.com/users/Boscop/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-15T04:45:24Z", "updated_at": "2020-06-11T18:01:49Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I was writing the following code:\r\n```rust\r\nuse glium::glutin::Context;\r\nlet win = display.gl_window();\r\nlet ctx: &Context = win.context();\r\nlet ptr = ctx as *const Context as *mut _ as *mut c_void;\r\n```\r\nIt caused the following error:\r\n```\r\nerror[E0607]: cannot cast thin pointer `*const glium::<unnamed>::Context` to fat\r\n pointer `*mut _`\r\n  --> examples\\glium.rs:44:12\r\n   |\r\n44 |    let ptr = ctx as *const Context as *mut _ as *mut c_void;\r\n   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n```\r\n.. even though there is no fat pointer involved.\r\nThis error message made me think that [`Context`](https://docs.rs/glium/0.17.0/glium/glutin/struct.Context.html) is a trait (I was looking at [`GlContext`](https://docs.rs/glium/0.17.0/glium/glutin/trait.GlContext.html) before which is a trait) so I ended up boxing the context (`let ptr = Box::into_raw(Box::new(ctx)) as *mut c_void;`).\r\n**The error message could be better, like \"type annotation required\" or something that doesn't imply that the value is a fat pointer.**\r\n\r\nBtw, the point of the above code is to pass the context pointer to libmpv to render video [like this](http://dpaste.com/138XEQ3).\r\n\r\nAfter I realized that Context is not a trait (after trying to figure out how to eliminate the boxing), I changed the code to:\r\n```rust\r\nunsafe extern \"C\" fn get_proc_address(arg: *mut c_void, name: *const c_char) -> *mut c_void {\r\n\tlet arg: &Context = &*(arg as *const Context);\r\n\tlet name = CStr::from_ptr(name).to_str().unwrap();\r\n\targ.get_proc_address(name) as *mut c_void\r\n}\r\n\r\n...\r\n\r\nlet ctx: &Context = win.context();\r\nlet ptr = ctx as *const _ as *mut c_void;\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43876/timeline", "performed_via_github_app": null, "state_reason": null}