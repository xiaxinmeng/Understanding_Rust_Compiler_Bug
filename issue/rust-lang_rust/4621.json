{"url": "https://api.github.com/repos/rust-lang/rust/issues/4621", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/4621/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/4621/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/4621/events", "html_url": "https://github.com/rust-lang/rust/issues/4621", "id": 10298360, "node_id": "MDU6SXNzdWUxMDI5ODM2MA==", "number": 4621, "title": "Macros should be able to expand to methods", "user": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235146, "node_id": "MDU6TGFiZWwyMzUxNDY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-syntaxext", "name": "A-syntaxext", "color": "f7e101", "default": false, "description": "Area: Syntax extensions"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2013-01-25T02:34:11Z", "updated_at": "2015-02-11T00:18:00Z", "closed_at": "2014-07-13T20:56:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Requested in a FIXME (formerly XXX) in `rustc::middle::lang_items`\n\nMore specifically, here is (an abstraction of) the code pattern that the FIXME is noting:\n\n``` rust\npub enum E { Enil, Ergt, Elft, Eall, /* ... */ Eend, }\npub struct S { items: [int, ..5] }\n\npub impl S {\n    pub fn name(index:uint) -> &'static str {\n        match index {\n            0 => \"nil\", 1 => \"lft\", 2 => \"rgt\", 3 => \"all\",\n            4 => \"end\", _ => \"???\"\n        }\n    }\n\n    // The cases below are where a macro that expands into a method\n    // definition is of interest, since they are all very regular.\n    pub fn nil_item(&self) -> int { self.items[Enil as uint] }\n\n    pub fn lft_item(&self) -> int { self.items[Elft as uint] }\n\n    pub fn rgt_item(&self) -> int { self.items[Ergt as uint] }\n\n    pub fn all_item(&self) -> int { self.items[Eall as uint] }\n\n    pub fn end_item(&self) -> int { self.items[Eend as uint] }\n}\n\n    // Presumably the macro invocation version would look something like:\n    //   macro_rules! e_method( \n    //      $method $variant\n    //      =>\n    //      pub fn $method(&self) -> int { self.items[$variant as uint] }\n    //    )\n    //\n    // pub impl S {\n    //   pub fn name(index:uint) -> &'static str { ... }\n    //   e_method!(nil_item Enil);\n    //   e_method!(lft_item Elft);\n    //   e_method!(rgt_item Ergt);\n    //   e_method!(all_item Eall);\n    //   e_method!(end_item Eend);\n    // }\n\n\nfn main() {\n    let s = S{ items: [0, 2, 1, 3, 4]};\n    io::println(fmt!(\"Hello World: %?\", s.all_item()));\n}\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/4621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/4621/timeline", "performed_via_github_app": null, "state_reason": "completed"}