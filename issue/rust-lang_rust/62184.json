{"url": "https://api.github.com/repos/rust-lang/rust/issues/62184", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62184/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62184/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62184/events", "html_url": "https://github.com/rust-lang/rust/issues/62184", "id": 461581233, "node_id": "MDU6SXNzdWU0NjE1ODEyMzM=", "number": 62184, "title": "Rustdoc incorrectly warns about crate-level attributes", "user": {"login": "tpwrules", "id": 208010, "node_id": "MDQ6VXNlcjIwODAxMA==", "avatar_url": "https://avatars.githubusercontent.com/u/208010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tpwrules", "html_url": "https://github.com/tpwrules", "followers_url": "https://api.github.com/users/tpwrules/followers", "following_url": "https://api.github.com/users/tpwrules/following{/other_user}", "gists_url": "https://api.github.com/users/tpwrules/gists{/gist_id}", "starred_url": "https://api.github.com/users/tpwrules/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tpwrules/subscriptions", "organizations_url": "https://api.github.com/users/tpwrules/orgs", "repos_url": "https://api.github.com/users/tpwrules/repos", "events_url": "https://api.github.com/users/tpwrules/events{/privacy}", "received_events_url": "https://api.github.com/users/tpwrules/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 234948, "node_id": "MDU6TGFiZWwyMzQ5NDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-attributes", "name": "A-attributes", "color": "f7e101", "default": false, "description": "Area: #[attributes(..)]"}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-27T14:59:44Z", "updated_at": "2020-08-13T19:19:33Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "If I attempt to `cargo doc` a binary crate that has a crate-level attribute, e.g. `#![no_main]`, then rustdoc will warn (or fail if warnings are denied) that the attribute should be in the root module.\r\n\r\n```\r\n$ cargo doc\r\n# ...\r\n Documenting battmon v0.1.0\r\nerror: unused attribute\r\n --> src/main.rs:3:1\r\n  |\r\n3 | #![no_main]\r\n  | ^^^^^^^^^^^\r\n  |\r\nnote: lint level defined here\r\n --> src/main.rs:2:9\r\n  |\r\n2 | #![deny(warnings)]\r\n  |         ^^^^^^^^\r\n  = note: #[deny(unused_attributes)] implied by #[deny(warnings)]\r\n\r\nerror: crate-level attribute should be in the root module\r\n --> src/main.rs:3:1\r\n  |\r\n3 | #![no_main]\r\n  | ^^^^^^^^^^^\r\n\r\nerror: aborting due to 2 previous errors\r\n\r\nerror: Could not document `battmon`.\r\n```\r\n\r\nOf course, removing the attribute causes the code to fail to build:\r\n\r\n```\r\n$ cargo build\r\n# ...\r\n   Compiling battmon v0.1.0\r\nerror[E0601]: `main` function not found in crate `battmon`\r\n  |\r\n  = note: the main function must be defined at the crate level but you have one or more functions named 'main' that are not defined at the crate level. Either move the definition or attach the `#[main]` attribute to override this behavior.\r\nnote: here is a function named 'main'\r\n --> src/main.rs:10:1\r\n  |\r\n10| #[rtfm::app(device = crate::hal::target)]\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0601`.\r\nerror: Could not compile `battmon`.\r\n```\r\n\r\nSo I have to make sure to add or remove the attribute depending on whether I want to build or document the crate. I could remove `#![deny(warnings)]` but it still makes an ugly and incorrect warning. I would expect rustdoc to compile/examine the code the same way rustc does and avoid triggering this warning.\r\n\r\n\r\n## Meta\r\n```\r\nrustc 1.36.0-beta.6 (a91f2e56c 2019-06-24)\r\nbinary: rustc\r\ncommit-hash: a91f2e56c44b7eddaaf75e227cec8925437546e9\r\ncommit-date: 2019-06-24\r\nhost: x86_64-apple-darwin\r\nrelease: 1.36.0-beta.6\r\nLLVM version: 8.0\r\n```\r\n\r\nCode is attached as a Zip file. You will need to install target `thumbv7em-none-eabihf` to compile it.\r\n[battmon issue.zip](https://github.com/rust-lang/rust/files/3335360/battmon.issue.zip)\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62184/reactions", "total_count": 7, "+1": 7, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62184/timeline", "performed_via_github_app": null, "state_reason": null}