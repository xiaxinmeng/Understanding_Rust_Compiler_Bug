{"url": "https://api.github.com/repos/rust-lang/rust/issues/6976", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/6976/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/6976/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/6976/events", "html_url": "https://github.com/rust-lang/rust/issues/6976", "id": 15235454, "node_id": "MDU6SXNzdWUxNTIzNTQ1NA==", "number": 6976, "title": "Deriving can't be used within macros because it generates duplicate impls", "user": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235146, "node_id": "MDU6TGFiZWwyMzUxNDY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-syntaxext", "name": "A-syntaxext", "color": "f7e101", "default": false, "description": "Area: Syntax extensions"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-06-06T17:42:15Z", "updated_at": "2014-06-16T21:56:40Z", "closed_at": "2013-11-18T01:26:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This:\n\n``` rust\nmacro_rules! define_vec (\n    () => (\n        mod foo {\n            #[deriving(Eq)]\n            pub struct bar;\n        }\n    )\n)\n\ndefine_vec!()\n\nfn main() {}\n```\n\n...doesn't compile:\n\n```\nmoon.rs:4:23: 4:25 error: conflicting implementations for a trait\nmoon.rs:4             #[deriving(Eq)]\n                                 ^~\nmoon.rs:4:23: 4:25 note: note conflicting implementation here\nmoon.rs:4             #[deriving(Eq)]\n                                 ^~\nmoon.rs:4:23: 4:25 error: conflicting implementations for a trait\nmoon.rs:4             #[deriving(Eq)]\n                                 ^~\nmoon.rs:4:23: 4:25 note: note conflicting implementation here\nmoon.rs:4             #[deriving(Eq)]\n                                 ^~\nerror: aborting due to 2 previous errors\n```\n\nTaking a look at the expanded code:\n\n``` rust\nmod foo {\n    #[deriving(Eq)]\n    pub struct bar;\n    #[doc = \"Automatically derived.\"]\n    pub impl ::std::cmp::Eq for bar {\n        pub fn eq(&self, __arg_0: &bar) -> ::bool {\n            match *__arg_0 { bar => match *self { bar => true } }\n        }\n        pub fn ne(&self, __arg_0: &bar) -> ::bool {\n            match *__arg_0 { bar => match *self { bar => false } }\n        }\n    }\n    #[doc = \"Automatically derived.\"]\n    pub impl ::std::cmp::Eq for bar {\n        pub fn eq(&self, __arg_0: &bar) -> ::bool {\n            match *__arg_0 { bar => match *self { bar => true } }\n        }\n        pub fn ne(&self, __arg_0: &bar) -> ::bool {\n            match *__arg_0 { bar => match *self { bar => false } }\n        }\n    }\n}\n\n\nfn main() { }\n```\n\nNotice that it's generating a second identical impl for the given trait. I've tested that this happens with both `Eq` and `ToStr`, so I presume it applies to the deriving code in general.\n", "closed_by": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/6976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/6976/timeline", "performed_via_github_app": null, "state_reason": "completed"}