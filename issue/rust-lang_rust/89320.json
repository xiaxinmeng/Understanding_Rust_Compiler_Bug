{"url": "https://api.github.com/repos/rust-lang/rust/issues/89320", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89320/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89320/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89320/events", "html_url": "https://github.com/rust-lang/rust/issues/89320", "id": 1009676378, "node_id": "I_kwDOAAsO6M48LnBa", "number": 89320, "title": "Error constructed but no error reported in generic_const_exprs", "user": {"login": "zeramorphic", "id": 50671761, "node_id": "MDQ6VXNlcjUwNjcxNzYx", "avatar_url": "https://avatars.githubusercontent.com/u/50671761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zeramorphic", "html_url": "https://github.com/zeramorphic", "followers_url": "https://api.github.com/users/zeramorphic/followers", "following_url": "https://api.github.com/users/zeramorphic/following{/other_user}", "gists_url": "https://api.github.com/users/zeramorphic/gists{/gist_id}", "starred_url": "https://api.github.com/users/zeramorphic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zeramorphic/subscriptions", "organizations_url": "https://api.github.com/users/zeramorphic/orgs", "repos_url": "https://api.github.com/users/zeramorphic/repos", "events_url": "https://api.github.com/users/zeramorphic/events{/privacy}", "received_events_url": "https://api.github.com/users/zeramorphic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-09-28T12:16:03Z", "updated_at": "2021-12-05T03:41:18Z", "closed_at": "2021-12-05T03:41:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nWhen using const generics for array lengths, the compiler can emit an ICE if the constraints used are unconventional.\r\n\r\n### MCVE\r\n\r\nThe following MCVE emits an ICE on the Nightly compiler on the playground.\r\nNote that the `Clone` derive macro is the source of the error.\r\n\r\n```Rust\r\n#![feature(generic_const_exprs)]\r\n#![allow(incomplete_features)]\r\n\r\npub trait Enumerable {\r\n    const N: usize;\r\n}\r\n\r\n#[derive(Clone)]\r\npub struct SymmetricGroup<S>\r\nwhere\r\n    S: Enumerable,\r\n    // The following constraint comes from the compiler's message,\r\n    // but I misunderstood it and added a `Sized` constraint\r\n    // instead of no constraint at all.\r\n    [(); S::N]: Sized,\r\n{\r\n    _phantom: std::marker::PhantomData<S>,\r\n}\r\n```\r\n\r\n### Background\r\n\r\nOriginally, my code was somewhat like this:\r\n\r\n```Rust\r\n#[derive(Clone)]\r\npub struct SymmetricGroup<S>\r\nwhere\r\n    S: Enumerable,\r\n{\r\n    map: [S; S::N]\r\n}\r\n```\r\n\r\nThe compiler provided this message:\r\n```\r\nerror: unconstrained generic constant\r\n  --> src/lib.rs:13:10\r\n   |\r\n13 |     map: [S; S::N]\r\n   |          ^^^^^^^^^\r\n   |\r\n   = help: try adding a `where` bound using this expression: `where [(); S::N]:`\r\n\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\nI took \"add a `where` bound\" to mean \"give `[(); S::N]` a simple constraint\", so I added `Sized`.\r\nThe MCVE does not include the `map` field because it is not relevant to the bug itself, I just included it for completeness to show how I arrived at the bug.\r\n\r\nI still don't really understand why the line is needed at all - I've read through issues like #68366 and <https://github.com/rust-lang/compiler-team/issues/340> but can't find an explanation anywhere yet. I assume once this is stabilised it'll get its own entry in the Rustonomicon to help others.\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror: internal compiler error: Encountered error `Unimplemented` selecting `Binder(<^0 as Enumerable>, [Ty(Anon)])` during codegen\r\n  |\r\n  = note: delayed at compiler/rustc_trait_selection/src/traits/codegen.rs:68:32\r\n\r\nerror: internal compiler error: ty::ConstKind::Error constructed but no error reported.\r\n  |\r\n  = note: delayed at /rustc/98c8619502093f34ca82f8f26ccf32e753924440/compiler/rustc_middle/src/ty/consts.rs:183:43\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', compiler/rustc_errors/src/lib.rs:1165:13\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0-nightly (98c861950 2021-09-27) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: could not compile `playground`\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', compiler/rustc_errors/src/lib.rs:1165:13\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/98c8619502093f34ca82f8f26ccf32e753924440/library/std/src/panicking.rs:517:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/98c8619502093f34ca82f8f26ccf32e753924440/library/core/src/panicking.rs:100:14\r\n   2: core::panicking::panic_display\r\n   3: rustc_errors::HandlerInner::flush_delayed\r\n   4: <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop\r\n   5: core::ptr::drop_in_place<rustc_session::parse::ParseSess>\r\n   6: <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop\r\n   7: core::ptr::drop_in_place<rustc_interface::interface::Compiler>\r\n   8: rustc_span::with_source_map\r\n   9: rustc_interface::interface::create_compiler_and_run\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89320/timeline", "performed_via_github_app": null, "state_reason": "completed"}