{"url": "https://api.github.com/repos/rust-lang/rust/issues/7082", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/7082/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/7082/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/7082/events", "html_url": "https://github.com/rust-lang/rust/issues/7082", "id": 15451906, "node_id": "MDU6SXNzdWUxNTQ1MTkwNg==", "number": 7082, "title": "Tying the knot with @", "user": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2013-06-12T13:55:18Z", "updated_at": "2014-01-15T08:32:31Z", "closed_at": "2013-09-12T17:08:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "At the moment there doesn't seem to be a way to create an @ graph that has a cycle in it, without an `@mut` or `&mut` somewhere in its ownership tree, and so one can't write something that does, for example:\n\n``` rust\nstruct Foo { name: ~str, other: @Foo }\n\nlet a = @Foo { name: ~\"a\", other: b };\nlet b = @Foo { name: ~\"a\", other: a };\n```\n\nwithout using `@mut`, even though construction is the only time mutability is required.\n\n(Examples of where it would be useful: [part 1](http://stackoverflow.com/questions/16879287/mutable-struct-fields), [part 2](http://stackoverflow.com/questions/16911554/owned-pointer-in-graph-structure), one from IRC: [log](http://irclog.gr/#show/irc.mozilla.org/rust/569047), [code](http://pastebin.com/ZguzENYA))\n", "closed_by": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/7082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/7082/timeline", "performed_via_github_app": null, "state_reason": "completed"}