{"url": "https://api.github.com/repos/rust-lang/rust/issues/102029", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102029/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102029/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102029/events", "html_url": "https://github.com/rust-lang/rust/issues/102029", "id": 1378412009, "node_id": "I_kwDOAAsO6M5SKOXp", "number": 102029, "title": "lifetime rules are overly restricted in 1.65 nightly / beta", "user": {"login": "haohui", "id": 1192828, "node_id": "MDQ6VXNlcjExOTI4Mjg=", "avatar_url": "https://avatars.githubusercontent.com/u/1192828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haohui", "html_url": "https://github.com/haohui", "followers_url": "https://api.github.com/users/haohui/followers", "following_url": "https://api.github.com/users/haohui/following{/other_user}", "gists_url": "https://api.github.com/users/haohui/gists{/gist_id}", "starred_url": "https://api.github.com/users/haohui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haohui/subscriptions", "organizations_url": "https://api.github.com/users/haohui/orgs", "repos_url": "https://api.github.com/users/haohui/repos", "events_url": "https://api.github.com/users/haohui/events{/privacy}", "received_events_url": "https://api.github.com/users/haohui/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 262252628, "node_id": "MDU6TGFiZWwyNjIyNTI2Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-beta", "name": "regression-from-stable-to-beta", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to beta."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-09-19T19:17:06Z", "updated_at": "2022-09-20T07:18:43Z", "closed_at": "2022-09-19T22:28:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\ntype Result<T> = std::result::Result<T, std::io::Error>;\r\n\r\npub(crate) struct Foo<'a> {\r\n    pub(crate) kernels: Vec<&'a str>,\r\n}\r\n\r\nimpl<'a> Foo<'a> {\r\n    fn parse(buf: &'a [u8]) -> Result<Foo> {\r\n        let p = &mut StreamParser::new(buf);\r\n        let (m, p) = p.read_map()?;\r\n        m.try_foreach(p, |b| {\r\n            let b0 = Self::broke(b)?;\r\n            Ok(b0)\r\n        })?;\r\n        Ok(Foo {\r\n            kernels: Vec::new(),\r\n        })\r\n    }\r\n\r\n    fn broke<'b: 'a>(p: &'b mut StreamParser<'a>) -> Result<&'b mut StreamParser<'a>> {\r\n        Ok(p)\r\n    }\r\n}\r\n\r\n#[derive(Copy, Clone)]\r\npub(crate) struct StreamParser<'a> {\r\n    bytes: &'a [u8],\r\n    current_position: usize,\r\n}\r\n\r\n#[derive(Copy, Clone, Debug)]\r\npub(crate) struct Seq {\r\n    num_entries: usize,\r\n}\r\n\r\nimpl Seq {\r\n    pub(crate) fn try_foreach<'a, 'b, F>(\r\n        &self,\r\n        p: &'b mut StreamParser<'a>,\r\n        mut f: F\r\n    ) -> Result<&'b mut StreamParser<'a>>\r\n        where F: FnMut(&'b mut StreamParser<'a>) -> Result<&'b mut StreamParser<'a>>\r\n    {\r\n        (0..self.num_entries).try_fold(p, |p, _| (f)(p))\r\n    }\r\n}\r\n\r\nimpl<'a> StreamParser<'a> {\r\n    pub(crate) fn new(bytes: &'a [u8]) -> StreamParser<'a> {\r\n        StreamParser {\r\n            bytes,\r\n            current_position: 0,\r\n        }\r\n    }\r\n\r\n    pub(crate) fn read_map(&mut self) -> Result<(Seq, &mut Self)> {\r\n        let c = self.read_u8()?;\r\n        Ok((\r\n            Seq {\r\n                num_entries: c as usize,\r\n            },\r\n            self,\r\n        ))\r\n    }\r\n\r\n    fn read_u8(&mut self) -> Result<u8> {\r\n        let r = self.bytes[self.current_position];\r\n        self.current_position += 1;\r\n        Ok(r)\r\n    }\r\n}\r\n```\r\nThe rustc in 1.63 compiles the code successfully while rustc 1.65.0-nightly (cf9ed0dd5 2022-09-15) fails to compile it:\r\n\r\n```\r\n7  | impl<'a> Foo<'a> {\r\n   |      -- lifetime `'a` defined here\r\n8  |     fn parse(buf: &'a [u8]) -> Result<Foo> {\r\n9  |         let p = &mut StreamParser::new(buf);\r\n   |                      ^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\r\n10 |         let (m, p) = p.read_map()?;\r\n   |                      ------------ argument requires that borrow lasts for `'a`\r\n...\r\n18 |     }\r\n```\r\n\r\nAre there any changes in the language specifications that have tighten the lifetime rules?\r\n", "closed_by": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102029/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}