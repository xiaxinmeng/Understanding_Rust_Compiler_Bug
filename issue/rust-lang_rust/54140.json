{"url": "https://api.github.com/repos/rust-lang/rust/issues/54140", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/54140/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/54140/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/54140/events", "html_url": "https://github.com/rust-lang/rust/issues/54140", "id": 359222238, "node_id": "MDU6SXNzdWUzNTkyMjIyMzg=", "number": 54140, "title": "Tracking Issue: Procedural Macro Diagnostics (RFC 1566)", "user": {"login": "SergioBenitez", "id": 1480321, "node_id": "MDQ6VXNlcjE0ODAzMjE=", "avatar_url": "https://avatars.githubusercontent.com/u/1480321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SergioBenitez", "html_url": "https://github.com/SergioBenitez", "followers_url": "https://api.github.com/users/SergioBenitez/followers", "following_url": "https://api.github.com/users/SergioBenitez/following{/other_user}", "gists_url": "https://api.github.com/users/SergioBenitez/gists{/gist_id}", "starred_url": "https://api.github.com/users/SergioBenitez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SergioBenitez/subscriptions", "organizations_url": "https://api.github.com/users/SergioBenitez/orgs", "repos_url": "https://api.github.com/users/SergioBenitez/repos", "events_url": "https://api.github.com/users/SergioBenitez/events{/privacy}", "received_events_url": "https://api.github.com/users/SergioBenitez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 941498014, "node_id": "MDU6TGFiZWw5NDE0OTgwMTQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros-1.2", "name": "A-macros-1.2", "color": "f7e101", "default": false, "description": "Issues which affect macros 1.2"}, {"id": 2240305001, "node_id": "MDU6TGFiZWwyMjQwMzA1MDAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/Libs-Tracked", "name": "Libs-Tracked", "color": "d4c5f9", "default": false, "description": "Libs issues that are tracked on the team's project board."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 81, "created_at": "2018-09-11T21:01:12Z", "updated_at": "2023-06-02T20:18:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a tracking issue for diagnostics for procedural macros spawned off from https://github.com/rust-lang/rust/issues/38356.\r\n\r\n## Overview\r\n\r\n### Current Status\r\n\r\n  * Implemented under `proc_macro_diagnostics` (https://github.com/rust-lang/rust/pull/44125).\r\n  * In use by Rocket, Diesel, Maud, and ~`syn`.\r\n\r\n### Next Steps\r\n\r\n  - [x] Implement introspection methods (https://github.com/rust-lang/rust/pull/52896)\r\n  - [x] Implement multi-span support (https://github.com/rust-lang/rust/pull/52896)\r\n  - [ ] Implement lint-associated warnings\r\n  - [ ] Document thoroughly\r\n  - [ ] Stabilize\r\n\r\n## Summary\r\n\r\nThe initial API was implemented in https://github.com/rust-lang/rust/pull/44125 and is being used by crates like Rocket and Diesel to emit user-friendly diagnostics. Apart from thorough documentation, I see two blockers for stabilization:\r\n\r\n  1. **Multi-Span Support**\r\n  \r\n     At present, it is not possible to create/emit a diagnostic via `proc_macro` that points to more than one `Span`. The internal diagnostics API makes this possible, and we should expose this as well.\r\n\r\n     The changes necessary to support this are fairly minor: a `Diagnostic` should encapsulate a `Vec<Span>` as opposed to a `Span`, and the `span_` methods should be made generic such that either a `Span` or a `Vec<Span>` (ideally also a `&[Vec]`) can be passed in. This makes it possible for a user to pass in an empty `Vec`, but this case can be handled as if no `Span` was explicitly set.\r\n\r\n  2. **Lint-Associated Warnings**\r\n\r\n     At present, if a `proc_macro` emits a warning, it is unconditional as it is not associated with a lint: the user can never silence the warning. I propose that we require proc-macro authors to associate every warning with a lint-level so that the consumer can turn it off.\r\n\r\n     No API has been formally proposed for this feature. I informally proposed that we allow proc-macros to create lint-levels in an ad-hoc manner; this differs from what happens internally, where all lint-levels have to be known apriori. In code, such an API might look lIke:\r\n\r\n     ```rust\r\n     val.span.warning(lint!(unknown_media_type), \"unknown media type\");\r\n     ```\r\n\r\n     The `lint!` macro might check for uniqueness and generate a (hidden) structure for internal use. Alternatively, the proc-macro author could simply pass in a string: `\"unknown_media_type\"`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/54140/reactions", "total_count": 59, "+1": 43, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 16, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/54140/timeline", "performed_via_github_app": null, "state_reason": null}