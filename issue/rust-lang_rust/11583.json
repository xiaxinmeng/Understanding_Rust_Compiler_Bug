{"url": "https://api.github.com/repos/rust-lang/rust/issues/11583", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/11583/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/11583/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/11583/events", "html_url": "https://github.com/rust-lang/rust/issues/11583", "id": 25686955, "node_id": "MDU6SXNzdWUyNTY4Njk1NQ==", "number": 11583, "title": "Atomics need to take &self rather than &mut sef", "user": {"login": "bill-myers", "id": 4647491, "node_id": "MDQ6VXNlcjQ2NDc0OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4647491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bill-myers", "html_url": "https://github.com/bill-myers", "followers_url": "https://api.github.com/users/bill-myers/followers", "following_url": "https://api.github.com/users/bill-myers/following{/other_user}", "gists_url": "https://api.github.com/users/bill-myers/gists{/gist_id}", "starred_url": "https://api.github.com/users/bill-myers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bill-myers/subscriptions", "organizations_url": "https://api.github.com/users/bill-myers/orgs", "repos_url": "https://api.github.com/users/bill-myers/repos", "events_url": "https://api.github.com/users/bill-myers/events{/privacy}", "received_events_url": "https://api.github.com/users/bill-myers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/20", "html_url": "https://github.com/rust-lang/rust/milestone/20", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/20/labels", "id": 452034, "node_id": "MDk6TWlsZXN0b25lNDUyMDM0", "number": 20, "title": "1.0", "description": "This will be the first major release of Rust, where we offer some guaranteed level of support and backwards compatibility.\r\n\r\nThe significant criteria for this release are:\r\n\r\n* Language backwards compatibility - All major features are in, and in their final form. Generally, the only new language features added after this milestone must be backwards compatible, or to fix soundness holes, though we do expect to have some leeway to make small incompatible fixes that have low impact on existing code bases.\r\n\r\n* Library stability - We have a system of measuring and ensuring the stability of API's, and a significant portion of the standard library is declared stable. Stable API's will not change. Large portions of the standard library need to be stable for 1.0, including primitive types, vectors, strings, option, numerics, collections, some I/O and concurrency.\r\n\r\n* User experience - The system is polished and the presentation is complete and professional. New users have a clear path to using and learning the system. This encompasses the web site, documentation, installation, and tooling.\r\n", "creator": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 376, "state": "closed", "created_at": "2013-10-10T18:48:33Z", "updated_at": "2016-08-28T23:13:24Z", "due_on": "2015-05-15T07:00:00Z", "closed_at": "2015-05-21T20:59:13Z"}, "comments": 11, "created_at": "2014-01-15T22:19:53Z", "updated_at": "2014-03-22T05:38:55Z", "closed_at": "2014-03-22T05:38:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In Rust, safe code cannot create a situation where an &mut aliases anything else that is accessible.\n\nUnsafe code can do so, but it makes sense to ban it and make that undefined behavior at least if the &muts are then used, since in addition to preserving the desirable safe semantics, it means that the information can be used in optimizations like alias analysis without fear of introducing bugs due to unsafe code creating and using aliased &muts.\n\nHowever, current Atomic\\* and mutex implementations require an &mut self.\n\nThis is wrong, because the whole point of such classes is to support multiple concurrent users, so having them take an &mut self means that they are either pointless or that clients are breaking the rules about &mut detailed above.\n\nSo, I think atomics need to take &self, and AtomicT should simply be viewed as a variant of Cell<T> that uses atomic operations instead of non-atomic ones.\n\nThis also applies to operations on mutexes and other lockless data structures.\n\nNote that this means that safe code will be able use atomics (for example, by putting them in an Arc-like structure without a Freeze bound), which does introduce potential data races but not memory corruption; however, data races that can happen due to multiple atomics can be equivalently produced using multiple RwArcs, so I think this is not an issue.\n\nThere has already been quite some discussion of this in pull request #11520, and also a partial implementation (it doesn't change the compiler intrinsics themselves, only the high-level Atomic\\* APIs).\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/11583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/11583/timeline", "performed_via_github_app": null, "state_reason": "completed"}