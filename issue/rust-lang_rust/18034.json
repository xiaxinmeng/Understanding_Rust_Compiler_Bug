{"url": "https://api.github.com/repos/rust-lang/rust/issues/18034", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/18034/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/18034/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/18034/events", "html_url": "https://github.com/rust-lang/rust/issues/18034", "id": 45761038, "node_id": "MDU6SXNzdWU0NTc2MTAzOA==", "number": 18034, "title": "regex does not handle quoted right bracket correctly within character set", "user": {"login": "kanaka", "id": 70127, "node_id": "MDQ6VXNlcjcwMTI3", "avatar_url": "https://avatars.githubusercontent.com/u/70127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kanaka", "html_url": "https://github.com/kanaka", "followers_url": "https://api.github.com/users/kanaka/followers", "following_url": "https://api.github.com/users/kanaka/following{/other_user}", "gists_url": "https://api.github.com/users/kanaka/gists{/gist_id}", "starred_url": "https://api.github.com/users/kanaka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kanaka/subscriptions", "organizations_url": "https://api.github.com/users/kanaka/orgs", "repos_url": "https://api.github.com/users/kanaka/repos", "events_url": "https://api.github.com/users/kanaka/events{/privacy}", "received_events_url": "https://api.github.com/users/kanaka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-14T15:04:16Z", "updated_at": "2014-10-29T20:12:07Z", "closed_at": "2014-10-29T20:12:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n$ rustc --version\nrustc 0.13.0-nightly (1c3ddd297 2014-10-13 23:27:46 +0000)\n```\n\nHere is my test code:\n\n```\n#![feature(phase)]\n#[phase(plugin)]\nextern crate regex_macros;\nextern crate regex;\n\nfn main() {\n    let re = regex!(r#\"([AB])\"#);\n    println!(\"\\n1 {}\", re);\n    for cap in re.captures_iter(\"AABBAB\") {\n        println!(\"0: {}, 1: {}\", cap.at(0), cap.at(1));\n    }\n\n    let re = regex!(r#\"([\\x{5b}])\"#);\n    println!(\"\\n2 {}\", re);\n    for cap in re.captures_iter(\"[[]][]\") {\n        println!(\"0: {}, 1: {}\", cap.at(0), cap.at(1));\n    }\n\n    let re = regex!(r#\"([\\[])\"#);\n    println!(\"\\n3 {}\", re);\n    for cap in re.captures_iter(\"[[]][]\") {\n        println!(\"0: {}, 1: {}\", cap.at(0), cap.at(1));\n    }\n\n    let re = regex!(r#\"([\\x{5d}])\"#);\n    println!(\"\\n4 {}\", re);\n    for cap in re.captures_iter(\"[[]][]\") {\n        println!(\"0: {}, 1: {}\", cap.at(0), cap.at(1));\n    }\n\n    let re = regex!(r#\"([\\]])\"#);\n    println!(\"\\n5 {}\", re);\n    for cap in re.captures_iter(\"[[]][]\") {\n        println!(\"0: {}, 1: {}\", cap.at(0), cap.at(1));\n    }\n\n    let re = regex!(r#\"([\\x{5b}\\x{5d}])\"#);\n    println!(\"\\n6 {}\", re);\n    for cap in re.captures_iter(\"[[]][]\") {\n        println!(\"0: {}, 1: {}\", cap.at(0), cap.at(1));\n    }\n\n    let re = regex!(r#\"([\\x{5d}\\x{5b}])\"#);\n    println!(\"\\n7 {}\", re);\n    for cap in re.captures_iter(\"[[]][]\") {\n        println!(\"0: {}, 1: {}\", cap.at(0), cap.at(1));\n    }\n\n    let re = regex!(r#\"([\\[\\]])\"#);\n    println!(\"\\n8 {}\", re);\n    for cap in re.captures_iter(\"[[]][]\") {\n        println!(\"0: {}, 1: {}\", cap.at(0), cap.at(1));\n    }\n\n    let re = regex!(r#\"([\\]\\[])\"#);\n    println!(\"\\n9 {}\", re);\n    for cap in re.captures_iter(\"[[]][]\") {\n        println!(\"0: {}, 1: {}\", cap.at(0), cap.at(1));\n    }\n\n    let re = regex!(r#\"\\[|\\]\"#);\n    println!(\"\\n10 {}\", re);\n    for cap in re.captures_iter(\"[[]][]\") {\n        println!(\"0: {}, 1: {}\", cap.at(0), cap.at(1));\n    }\n}\n```\n\nResults:\n\n```\n1 ([AB])\n0: A, 1: A\n0: A, 1: A\n0: B, 1: B\n0: B, 1: B\n0: A, 1: A\n0: B, 1: B\n\n2 ([\\x{5b}])\n0: [, 1: [\n0: [, 1: [\n0: [, 1: [\n\n3 ([\\[])\n0: [, 1: [\n0: [, 1: [\n0: [, 1: [\n\n4 ([\\x{5d}])\n0: ], 1: ]\n0: ], 1: ]\n0: ], 1: ]\n\n5 ([\\]])\n0: ], 1: ]\n0: ], 1: ]\n0: ], 1: ]\n\n6 ([\\x{5b}\\x{5d}])\n0: [], 1: []\n0: [], 1: []\n\n7 ([\\x{5d}\\x{5b}])\n0: [], 1: []\n0: [], 1: []\n\n8 ([\\[\\]])\n0: [], 1: []\n0: [], 1: []\n\n9 ([\\]\\[])\n0: [], 1: []\n0: [], 1: []\n\n10 \\[|\\]\n0: [, 1: \n0: [, 1: \n0: ], 1: \n0: ], 1: \n0: [, 1: \n0: ], 1: \n```\n\nI expect case 6, 7, 8, and 9 to behave like 1 and 10. It looks like something about having both a left and right quoted bracket within a character set is causing the regex engine to treat the character set as \na literal \"[]\" that matches a single time (even though that sequence appears twice in the text).\n\nThe same behavior happens with Regex::new instead of regex! macro.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/18034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/18034/timeline", "performed_via_github_app": null, "state_reason": "completed"}