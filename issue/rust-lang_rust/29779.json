{"url": "https://api.github.com/repos/rust-lang/rust/issues/29779", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/29779/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/29779/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/29779/events", "html_url": "https://github.com/rust-lang/rust/issues/29779", "id": 116406581, "node_id": "MDU6SXNzdWUxMTY0MDY1ODE=", "number": 29779, "title": "Support bitshift in left arm of match", "user": {"login": "daschl", "id": 29086, "node_id": "MDQ6VXNlcjI5MDg2", "avatar_url": "https://avatars.githubusercontent.com/u/29086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daschl", "html_url": "https://github.com/daschl", "followers_url": "https://api.github.com/users/daschl/followers", "following_url": "https://api.github.com/users/daschl/following{/other_user}", "gists_url": "https://api.github.com/users/daschl/gists{/gist_id}", "starred_url": "https://api.github.com/users/daschl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daschl/subscriptions", "organizations_url": "https://api.github.com/users/daschl/orgs", "repos_url": "https://api.github.com/users/daschl/repos", "events_url": "https://api.github.com/users/daschl/events{/privacy}", "received_events_url": "https://api.github.com/users/daschl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-11-11T19:40:05Z", "updated_at": "2015-11-18T23:48:14Z", "closed_at": "2015-11-18T04:26:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi folks,\n\nI don't know if I'm doing something wrong, but I have the feeling this should work. So for example this works, as expected:\n\n``` rust\n    fn from_i64(n: i64) -> Option<Self> {\n        match n {\n            1 => Some(TopologyFlag::WholeSystem),\n            2 => Some(TopologyFlag::IsThisSystem),\n            4 => Some(TopologyFlag::IoDevices),\n            8 => Some(TopologyFlag::IoBridges),\n            16 => Some(TopologyFlag::WholeIo),\n            32 => Some(TopologyFlag::ICaches),\n            _ => None,\n        }\n    }\n```\n\nNow when I use bitshift on the left arms of the match it doesn't compile\n\n``` rust\n    fn from_i64(n: i64) -> Option<Self> {\n        match n {\n            1 << 0 => Some(TopologyFlag::WholeSystem),\n            1 << 1 => Some(TopologyFlag::IsThisSystem),\n            1 << 2 => Some(TopologyFlag::IoDevices),\n            1 << 3 => Some(TopologyFlag::IoBridges),\n            1 << 4 => Some(TopologyFlag::WholeIo),\n            1 << 5 => Some(TopologyFlag::ICaches),\n            _ => None,\n        }\n    }\n```\n\nwith\n\n```\n   Compiling hwloc v0.1.0 (file:///Users/michael/rust/hwloc-rs)\nsrc/ffi.rs:118:6: 118:8src/ffi.rs:118:6: 118:8  errorerror: : expected one of `...`, `=>`, `if`, or `|`, found `<<`expected one of `...`, `=>`, `if`, or `|`, found `<<`\n\nsrc/ffi.rs:118          1 << 0 => Some(TopologyFlag::WholeSystem),src/ffi.rs\n:118            1 << 0 => Some(TopologyFlag::WholeSystem),\n                                                      ^~\n^~\nBuild failed, waiting for other jobs to finish...\nCould not compile `hwloc`.\n\nTo learn more, run the command again with --verbose.\n```\n\nMaybe this can be treated as a feature request? I also tried to wrap it like (1 << 1), but no dice.\n", "closed_by": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/29779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/29779/timeline", "performed_via_github_app": null, "state_reason": "completed"}