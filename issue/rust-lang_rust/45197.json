{"url": "https://api.github.com/repos/rust-lang/rust/issues/45197", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45197/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45197/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45197/events", "html_url": "https://github.com/rust-lang/rust/issues/45197", "id": 264457346, "node_id": "MDU6SXNzdWUyNjQ0NTczNDY=", "number": 45197, "title": "`fmt::Arguments` is `Send+Sync` regardless of its captured arguments", "user": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-11T04:55:38Z", "updated_at": "2017-11-22T15:08:21Z", "closed_at": "2017-11-22T15:08:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`fmt::Arguments<'a>` is only parameterized on lifetime.  The types of the captured arguments are erased in the contained `[ArgumentV1<'a>]`.  Nothing restricts the `Arguments` aggregate from being `Send` or `Sync`, so by OIBIT it's both.  Thus this compiles:\r\n\r\n```rust\r\nfn send<T: Send>(_: T) {}\r\nfn sync<T: Sync>(_: T) {}\r\n\r\nfn main() {\r\n    // `Cell` is not `Sync`, so `&Cell` is neither `Sync` nor `Send`,\r\n    // yet `std::fmt::Arguments` forgets this...\r\n    let c = std::cell::Cell::new(42);\r\n    send(format_args!(\"{:?}\", c));\r\n    sync(format_args!(\"{:?}\", c));\r\n}\r\n```\r\n\r\nI'm not sure if there are any realistic ways to *accidentally* abuse this, but here's a deliberate example.  The spawned thread will read the `Cell` through the arguments, even while the main thread modifies it.\r\n\r\n```rust\r\nextern crate crossbeam;\r\n\r\nuse std::io::Write;\r\nuse std::cell::Cell;\r\n\r\nfn main() {\r\n    let c = Cell::new(1);\r\n    threader(&c, format_args!(\"{:?}\\n\", c));\r\n}\r\n\r\nfn threader(c: &Cell<i32>, a: std::fmt::Arguments) {\r\n    crossbeam::scope(|scope| {\r\n        let delay = std::time::Duration::from_millis(100);\r\n        \r\n        let guard = scope.spawn(move || {\r\n            for _ in 0..10 {\r\n                std::thread::sleep(delay);\r\n                std::io::stdout().write_fmt(a).unwrap();\r\n            }\r\n        });\r\n        \r\n        for _ in 0..10 {\r\n            std::thread::sleep(delay);\r\n            c.set(c.get() * 2);\r\n        }\r\n        \r\n        guard.join();\r\n    });\r\n}\r\n```\r\n\r\n[playground](https://play.rust-lang.org/?gist=26f125992fea2a6a16e675491a29ffdc&version=nightly)", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45197/timeline", "performed_via_github_app": null, "state_reason": "completed"}