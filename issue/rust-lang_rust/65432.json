{"url": "https://api.github.com/repos/rust-lang/rust/issues/65432", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65432/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65432/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65432/events", "html_url": "https://github.com/rust-lang/rust/issues/65432", "id": 507147175, "node_id": "MDU6SXNzdWU1MDcxNDcxNzU=", "number": 65432, "title": "Suggestion to replace `std::mem::uninitialized` with MaybeUninit is not actionable", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-15T10:15:13Z", "updated_at": "2019-10-15T11:05:36Z", "closed_at": "2019-10-15T10:34:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When `Foo` below is defined in a crate outside your control, code that currently does this:\r\n\r\n```rust\r\nstruct Foo(&'static i32);\r\nfn main() {\r\n    let _x: Foo = unsafe { std::mem::uninitialized() };\r\n}\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=cd3aae6e385d45dccffda0a178669ef8))\r\n\r\ngets a warning suggesting to use `MaybeUninit` instead\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nwarning: the type `Foo` does not permit being left uninitialized\r\n --> src/main.rs:4:28\r\n  |\r\n4 |     let _x: Foo = unsafe { std::mem::uninitialized() };\r\n  |                            ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |                            |\r\n  |                            this code causes undefined behavior when executed\r\n  |                            help: use `MaybeUninit<T>` instead\r\n  |\r\n  = note: `#[warn(invalid_value)]` on by default\r\nnote: References must be non-null (in this struct field)\r\n --> src/main.rs:1:12\r\n  |\r\n1 | struct Foo(&'static i32);\r\n  |            ^^^^^^^^^^^^\r\n\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.76s\r\n     Running `target/debug/playground`\r\n\r\n```\r\n\r\nThis warning is currently not actionable, since `Foo` cannot be modified, and `MaybeUninit<T>` does not support `T: !Copy`. \r\n\r\nInstead, the suggestion \"help: use `MaybeUninit<T>` instead\" should only be shown if `T: Copy`. \r\n\r\nA different suggestion could be shown, suggesting to change the type definition instead, and maybe reminding the user that their code exhibits undefined behavior, even though there is nothing that the user might be able to do about this.", "closed_by": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65432/timeline", "performed_via_github_app": null, "state_reason": "completed"}