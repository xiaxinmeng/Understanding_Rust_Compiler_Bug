{"url": "https://api.github.com/repos/rust-lang/rust/issues/88333", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88333/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88333/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88333/events", "html_url": "https://github.com/rust-lang/rust/issues/88333", "id": 979398404, "node_id": "MDU6SXNzdWU5NzkzOTg0MDQ=", "number": 88333, "title": "errors after `cargo clippy --fix`", "user": {"login": "sourcefrog", "id": 346355, "node_id": "MDQ6VXNlcjM0NjM1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/346355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sourcefrog", "html_url": "https://github.com/sourcefrog", "followers_url": "https://api.github.com/users/sourcefrog/followers", "following_url": "https://api.github.com/users/sourcefrog/following{/other_user}", "gists_url": "https://api.github.com/users/sourcefrog/gists{/gist_id}", "starred_url": "https://api.github.com/users/sourcefrog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sourcefrog/subscriptions", "organizations_url": "https://api.github.com/users/sourcefrog/orgs", "repos_url": "https://api.github.com/users/sourcefrog/repos", "events_url": "https://api.github.com/users/sourcefrog/events{/privacy}", "received_events_url": "https://api.github.com/users/sourcefrog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-08-25T16:17:59Z", "updated_at": "2021-08-26T11:53:47Z", "closed_at": "2021-08-26T11:53:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With `clippy 0.1.56 (b03ccac 2021-08-24)` and `rustc 1.56.0-nightly (b03ccace5 2021-08-24)` \r\nI ran `cargo clippy --fix` in a checkout of https://github.com/sourcefrog/conserve/commit/86137c34e4d5b8cae80bb401abc6c5aa08607c8c\r\n\r\nand it asks me to file a bug here.\r\n\r\nI'll attach a file of the changes made.\r\n[20210825-conserve-clippy.diff.gz](https://github.com/rust-lang/rust/files/7048420/20210825-conserve-clippy.diff.gz)\r\n\r\n\r\n```\r\n[I] bobcat ~/src/conserve> cargo clippy --fix\r\n    Checking conserve v0.6.15-pre (/home/mbp/src/conserve)\r\n       Fixed src/band.rs (1 fix)\r\n       Fixed src/restore.rs (1 fix)\r\n       Fixed src/index.rs (2 fixes)\r\n       Fixed src/backup.rs (3 fixes)\r\n       Fixed src/show.rs (1 fix)\r\n       Fixed src/validate.rs (1 fix)\r\n       Fixed src/archive.rs (4 fixes)\r\n       Fixed src/transport.rs (2 fixes)\r\n       Fixed src/test_fixtures.rs (2 fixes)\r\n       Fixed src/blockdir.rs (2 fixes)\r\n       Fixed src/transport/local.rs (1 fix)\r\n       Fixed tests/cli/main.rs (1 fix)\r\nwarning: failed to automatically apply fixes suggested by rustc to crate `conserve`\r\n\r\nafter fixes were automatically applied the compiler reported errors within these files:\r\n\r\n  * src/band.rs\r\n  * src/index.rs\r\n  * src/transport/local.rs\r\n\r\nThis likely indicates a bug in either rustc or cargo itself,\r\nand we would appreciate a bug report! You're likely to see \r\na number of compiler warnings after this message which cargo\r\nattempted to fix but failed. If you could open an issue at\r\nhttps://github.com/rust-lang/rust/issues\r\nquoting the full output of this command we'd be very appreciative!\r\nNote that you may be able to make some more progress in the near-term\r\nfixing code with the `--broken-code` flag\r\n\r\nThe following errors were reported:\r\nwarning: used `assert_eq!` with a literal bool\r\n   --> src/band.rs:292:9\r\n    |\r\n292 |         assert_eq!(info.is_closed, true);\r\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `assert!(..)`\r\n    |\r\n    = note: `#[warn(clippy::bool_assert_comparison)]` on by default\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison\r\n\r\nwarning: used `assert_eq!` with a literal bool\r\n   --> src/band.rs:306:9\r\n    |\r\n306 |         assert_eq!(af.transport().exists(\"b0000\").unwrap(), false);\r\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `assert!(..)`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison\r\n\r\nwarning: used `assert_eq!` with a literal bool\r\n   --> src/transport/local.rs:225:9\r\n    |\r\n225 |         assert_eq!(transport.exists(\"root file\").unwrap(), true);\r\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `assert!(..)`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison\r\n\r\nwarning: used `assert_eq!` with a literal bool\r\n   --> src/transport/local.rs:226:9\r\n    |\r\n226 |         assert_eq!(transport.exists(\"nuh-uh\").unwrap(), false);\r\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `assert!(..)`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison\r\n\r\nerror[E0282]: type annotations needed\r\n   --> src/index.rs:658:14\r\n    |\r\n658 |             .map(|entry| entry.apath.into()).next().is_none());\r\n    |              ^^^         ------------------ this method call resolves to `T`\r\n    |              |\r\n    |              cannot infer type for type parameter `B` declared on the associated function `map`\r\n\r\nerror: aborting due to previous error; 4 warnings emitted\r\n\r\nFor more information about this error, try `rustc --explain E0282`.\r\nOriginal diagnostics will follow.\r\n\r\nwarning: used `assert_eq!` with a literal bool\r\n   --> src/band.rs:292:9\r\n    |\r\n292 |         assert_eq!(info.is_closed, true);\r\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `assert!(..)`\r\n    |\r\n    = note: `#[warn(clippy::bool_assert_comparison)]` on by default\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison\r\n\r\nwarning: used `assert_eq!` with a literal bool\r\n   --> src/band.rs:306:9\r\n    |\r\n306 |         assert_eq!(af.transport().exists(\"b0000\").unwrap(), false);\r\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `assert!(..)`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison\r\n\r\nwarning: used `assert_eq!` with a literal bool\r\n   --> src/transport/local.rs:225:9\r\n    |\r\n225 |         assert_eq!(transport.exists(\"root file\").unwrap(), true);\r\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `assert!(..)`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison\r\n\r\nwarning: used `assert_eq!` with a literal bool\r\n   --> src/transport/local.rs:226:9\r\n    |\r\n226 |         assert_eq!(transport.exists(\"nuh-uh\").unwrap(), false);\r\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `assert!(..)`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison\r\n\r\n       Fixed src/bin/conserve.rs (6 fixes)\r\nwarning: this expression borrows a reference (`&std::path::Path`) that is immediately dereferenced by the compiler\r\n   --> src/archive.rs:461:43\r\n    |\r\n461 |         let result = Archive::create_path(&temp.path());\r\n    |                                           ^^^^^^^^^^^^ help: change this to: `temp.path()`\r\n    |\r\n    = note: `#[warn(clippy::needless_borrow)]` on by default\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: this expression borrows a reference (`&[u8]`) that is immediately dereferenced by the compiler\r\n  --> src/compress/snappy.rs:97:44\r\n   |\r\n97 |         assert_eq!(decompressor.decompress(&comp).unwrap(), b\"hello world\");\r\n   |                                            ^^^^^ help: change this to: `comp`\r\n   |\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: this expression borrows a reference (`&[u8]`) that is immediately dereferenced by the compiler\r\n   --> src/compress/snappy.rs:102:44\r\n    |\r\n102 |         assert_eq!(decompressor.decompress(&comp).unwrap(), &long_input[..]);\r\n    |                                            ^^^^^ help: change this to: `comp`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: this expression borrows a reference (`&std::path::Path`) that is immediately dereferenced by the compiler\r\n   --> src/index.rs:595:43\r\n    |\r\n595 |         let mut it = IndexRead::open_path(&testdir.path()).iter_entries();\r\n    |                                           ^^^^^^^^^^^^^^^ help: change this to: `testdir.path()`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: this expression borrows a reference (`&std::path::Path`) that is immediately dereferenced by the compiler\r\n   --> src/index.rs:611:47\r\n    |\r\n611 |         let index_read = IndexRead::open_path(&testdir.path());\r\n    |                                               ^^^^^^^^^^^^^^^ help: change this to: `testdir.path()`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: this expression borrows a reference (`&std::path::Path`) that is immediately dereferenced by the compiler\r\n   --> src/index.rs:618:34\r\n    |\r\n618 |             IndexRead::open_path(&testdir.path()).iter_hunks().collect();\r\n    |                                  ^^^^^^^^^^^^^^^ help: change this to: `testdir.path()`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: avoid using `collect()` when not needed\r\n   --> src/index.rs:658:14\r\n    |\r\n658 |             .collect();\r\n    |              ^^^^^^^\r\n659 |         assert!(names.is_empty());\r\n    |                 ---------------- the iterator could be used here instead\r\n    |\r\n    = note: `#[warn(clippy::needless_collect)]` on by default\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_collect\r\nhelp: check if the original Iterator has anything instead of collecting it and seeing if it's empty\r\n    |\r\n653 ~         \r\n654 ~         assert!(index_read\r\n655 +             .iter_hunks()\r\n656 +             .advance_to_after(&\"/subdir\".into())\r\n657 +             .flatten()\r\n658 ~             .map(|entry| entry.apath.into()).next().is_none());\r\n    |\r\n\r\nwarning: this expression borrows a reference (`&std::path::Path`) that is immediately dereferenced by the compiler\r\n   --> src/index.rs:644:47\r\n    |\r\n644 |         let index_read = IndexRead::open_path(&testdir.path());\r\n    |                                               ^^^^^^^^^^^^^^^ help: change this to: `testdir.path()`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: this expression borrows a reference (`&std::path::Path`) that is immediately dereferenced by the compiler\r\n   --> src/index.rs:733:43\r\n    |\r\n733 |         let mut it = IndexRead::open_path(&testdir.path()).iter_entries();\r\n    |                                           ^^^^^^^^^^^^^^^ help: change this to: `testdir.path()`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: this expression borrows a reference (`&std::path::Path`) that is immediately dereferenced by the compiler\r\n   --> src/index.rs:739:43\r\n    |\r\n739 |         let mut it = IndexRead::open_path(&testdir.path()).iter_entries();\r\n    |                                           ^^^^^^^^^^^^^^^ help: change this to: `testdir.path()`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: this expression borrows a reference (`&std::path::Path`) that is immediately dereferenced by the compiler\r\n   --> src/index.rs:745:43\r\n    |\r\n745 |         let mut it = IndexRead::open_path(&testdir.path()).iter_entries();\r\n    |                                           ^^^^^^^^^^^^^^^ help: change this to: `testdir.path()`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: this expression borrows a reference (`&std::path::Path`) that is immediately dereferenced by the compiler\r\n   --> src/index.rs:751:43\r\n    |\r\n751 |         let mut it = IndexRead::open_path(&testdir.path()).iter_entries();\r\n    |                                           ^^^^^^^^^^^^^^^ help: change this to: `testdir.path()`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: this expression borrows a reference (`&std::path::Path`) that is immediately dereferenced by the compiler\r\n   --> src/index.rs:768:47\r\n    |\r\n768 |         let read_index = IndexRead::open_path(&testdir.path());\r\n    |                                               ^^^^^^^^^^^^^^^ help: change this to: `testdir.path()`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: this expression borrows a reference (`&std::path::Path`) that is immediately dereferenced by the compiler\r\n  --> src/jsonio.rs:83:45\r\n   |\r\n83 |         let transport = LocalTransport::new(&temp.path());\r\n   |                                             ^^^^^^^^^^^^ help: change this to: `temp.path()`\r\n   |\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\n       Fixed tests/api/transport.rs (1 fix)\r\n       Fixed tests/api/diff.rs (1 fix)\r\n       Fixed tests/api/old_archives.rs (3 fixes)\r\n       Fixed tests/api/blockhash.rs (1 fix)\r\n       Fixed tests/api/restore.rs (6 fixes)\r\n       Fixed tests/api/backup.rs (5 fixes)\r\nwarning: this expression borrows a reference (`&std::path::Path`) that is immediately dereferenced by the compiler\r\n   --> src/stitch.rs:211:42\r\n    |\r\n211 |         let archive = Archive::open_path(&af.path())?;\r\n    |                                          ^^^^^^^^^^ help: change this to: `af.path()`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: this expression borrows a reference (`&str`) that is immediately dereferenced by the compiler\r\n   --> src/transport/local.rs:159:29\r\n    |\r\n159 |         transport.read_file(&filename, &mut buf).unwrap();\r\n    |                             ^^^^^^^^^ help: change this to: `filename`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: this expression borrows a reference (`&str`) that is immediately dereferenced by the compiler\r\n   --> src/transport/local.rs:174:39\r\n    |\r\n174 |         assert_eq!(transport.metadata(&filename).unwrap(), Metadata { len: 24 });\r\n    |                                       ^^^^^^^^^ help: change this to: `filename`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: this expression borrows a reference (`&str`) that is immediately dereferenced by the compiler\r\n   --> src/transport/local.rs:186:29\r\n    |\r\n186 |         transport.read_file(&filename, &mut buf).unwrap();\r\n    |                             ^^^^^^^^^ help: change this to: `filename`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: this expression borrows a reference (`&std::path::Path`) that is immediately dereferenced by the compiler\r\n   --> src/transport/local.rs:204:45\r\n    |\r\n204 |         let transport = LocalTransport::new(&temp.path());\r\n    |                                             ^^^^^^^^^^^^ help: change this to: `temp.path()`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: this expression borrows a reference (`&std::path::Path`) that is immediately dereferenced by the compiler\r\n   --> src/transport/local.rs:248:45\r\n    |\r\n248 |         let transport = LocalTransport::new(&temp.path());\r\n    |                                             ^^^^^^^^^^^^ help: change this to: `temp.path()`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: this expression borrows a reference (`&std::path::Path`) that is immediately dereferenced by the compiler\r\n   --> src/transport/local.rs:266:45\r\n    |\r\n266 |         let transport = LocalTransport::new(&temp.path());\r\n    |                                             ^^^^^^^^^^^^ help: change this to: `temp.path()`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: this expression borrows a reference (`&std::path::Path`) that is immediately dereferenced by the compiler\r\n   --> src/transport/local.rs:278:45\r\n    |\r\n278 |         let transport = LocalTransport::new(&temp.path());\r\n    |                                             ^^^^^^^^^^^^ help: change this to: `temp.path()`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: this expression borrows a reference (`&std::path::Path`) that is immediately dereferenced by the compiler\r\n   --> src/transport/local.rs:299:45\r\n    |\r\n299 |         let transport = LocalTransport::new(&temp.path());\r\n    |                                             ^^^^^^^^^^^^ help: change this to: `temp.path()`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\r\n\r\nwarning: used `assert_eq!` with a literal bool\r\n  --> tests/api/backup.rs:46:5\r\n   |\r\n46 |     assert_eq!(archive.band_exists(&BandId::zero()).unwrap(), true);\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `assert!(..)`\r\n   |\r\n   = note: `#[warn(clippy::bool_assert_comparison)]` on by default\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison\r\n\r\nwarning: used `assert_eq!` with a literal bool\r\n  --> tests/api/backup.rs:47:5\r\n   |\r\n47 |     assert_eq!(archive.band_is_closed(&BandId::zero()).unwrap(), true);\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `assert!(..)`\r\n   |\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison\r\n\r\nwarning: used `assert_eq!` with a literal bool\r\n  --> tests/api/backup.rs:48:5\r\n   |\r\n48 |     assert_eq!(archive.band_exists(&BandId::new(&[1])).unwrap(), false);\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `assert!(..)`\r\n   |\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison\r\n\r\nwarning: used `assert_eq!` with a literal bool\r\n  --> tests/api/backup.rs:88:5\r\n   |\r\n88 |     assert_eq!(band_info.is_closed, true);\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `assert!(..)`\r\n   |\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison\r\n\r\nwarning: used `assert_eq!` with a literal bool\r\n  --> tests/api/damaged.rs:25:5\r\n   |\r\n25 |     assert_eq!(validate_stats.has_problems(), true);\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `assert!(..)`\r\n   |\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison\r\n\r\nwarning: used `assert_eq!` with a literal bool\r\n  --> tests/api/damaged.rs:37:5\r\n   |\r\n37 |     assert_eq!(validate_stats.has_problems(), true);\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `assert!(..)`\r\n   |\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison\r\n\r\nwarning: struct update has no effect, all the fields in the struct have already been specified\r\n  --> tests/api/gc.rs:63:11\r\n   |\r\n63 |         ..Default::default()\r\n   |           ^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: `#[warn(clippy::needless_update)]` on by default\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_update\r\n\r\nwarning: `conserve` (lib test) generated 27 warnings\r\nwarning: `conserve` (test \"api\") generated 7 warnings\r\n    Finished dev [unoptimized + debuginfo] target(s) in 2.56s\r\n```\r\n\r\n\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.0-nightly (b03ccace5 2021-08-24)\r\nbinary: rustc\r\ncommit-hash: b03ccace573bb91e27625c190a0f7807045a1012\r\ncommit-date: 2021-08-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.56.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88333/timeline", "performed_via_github_app": null, "state_reason": "completed"}