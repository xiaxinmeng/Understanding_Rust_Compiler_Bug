{"url": "https://api.github.com/repos/rust-lang/rust/issues/55395", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55395/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55395/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55395/events", "html_url": "https://github.com/rust-lang/rust/issues/55395", "id": 374479459, "node_id": "MDU6SXNzdWUzNzQ0Nzk0NTk=", "number": 55395, "title": "[1.31.0-nightly] internal compiler error: \"min_const_fn encountered `Terminator {\"", "user": {"login": "gpace1", "id": 33923139, "node_id": "MDQ6VXNlcjMzOTIzMTM5", "avatar_url": "https://avatars.githubusercontent.com/u/33923139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpace1", "html_url": "https://github.com/gpace1", "followers_url": "https://api.github.com/users/gpace1/followers", "following_url": "https://api.github.com/users/gpace1/following{/other_user}", "gists_url": "https://api.github.com/users/gpace1/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpace1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpace1/subscriptions", "organizations_url": "https://api.github.com/users/gpace1/orgs", "repos_url": "https://api.github.com/users/gpace1/repos", "events_url": "https://api.github.com/users/gpace1/events{/privacy}", "received_events_url": "https://api.github.com/users/gpace1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 268744493, "node_id": "MDU6TGFiZWwyNjg3NDQ0OTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-fn", "name": "A-const-fn", "color": "f7e101", "default": false, "description": "Area: const fn foo(..) {..}. Pure functions which can be applied at compile time."}], "state": "closed", "locked": false, "assignee": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-10-26T17:34:26Z", "updated_at": "2018-10-28T18:50:15Z", "closed_at": "2018-10-28T18:50:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "While experimenting with constant functions I managed to generate an internal compiler error.\r\n\r\nThe code\r\n\r\n``` rust\r\nenum Foo {\r\n    Prob,\r\n}\r\n\r\nimpl Foo {\r\n    pub const fn as_val(&self) -> u8 {\r\n        use self::Foo::*;\r\n\r\n        match *self {\r\n            Prob => 0x1,\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\n[Here is a link to the playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2015&gist=33c45a019759532471d03abae138f55b).\r\n\r\nAlthough this code shouldn't compile, I would expect an error along the lines of  \"error: `if`, `match`, `&&` and `||` are not stable in const fn\".  The compiler will produce the expected error if [enum Foo has more then one variant](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2015&gist=ae7743b2abcfebe606641138c85c11bd).\r\n\r\nThe internal bug with backtrace (from playground):\r\n```text\r\nerror: internal compiler error: librustc_mir/transform/qualify_min_const_fn.rs:366: min_const_fn encountered `Terminator {\r\n    source_info: SourceInfo {\r\n        span: src/main.rs:10:13: 10:17,\r\n        scope: scope[0]\r\n    },\r\n    kind: falseEdges -> [real: bb2, imaginary: bb1]\r\n}`\r\n  --> src/main.rs:10:13\r\n   |\r\n10 |             Prob => 0x1,\r\n   |             ^^^^\r\n\r\nthread 'main' panicked at 'Box<Any>', librustc_errors/lib.rs:538:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:480\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::span_bug\r\n   8: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::util::bug::opt_span_bug_fmt\r\n  13: rustc::util::bug::span_bug_fmt\r\n  14: rustc_mir::transform::qualify_min_const_fn::is_min_const_fn\r\n  15: <rustc_mir::transform::qualify_consts::QualifyAndPromoteConstants as rustc_mir::transform::MirPass>::run_pass\r\n  16: rustc_mir::transform::mir_validated::{{closure}}\r\n  17: rustc_mir::transform::mir_validated\r\n  18: rustc::ty::query::__query_compute::mir_validated\r\n  19: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::mir_validated<'tcx>>::compute\r\n  20: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  21: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  22: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  23: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  24: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::ensure_query\r\n  25: rustc_borrowck::borrowck::borrowck\r\n  26: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::borrowck<'tcx>>::compute\r\n  27: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  28: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  29: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  30: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  31: rustc::ty::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::par_body_owners\r\n  32: rustc_borrowck::borrowck::check_crate\r\n  33: rustc::util::common::time\r\n  34: rustc::ty::context::tls::enter_context\r\n  35: <std::thread::local::LocalKey<T>>::with\r\n  36: rustc::ty::context::TyCtxt::create_and_enter\r\n  37: rustc_driver::driver::compile_input\r\n  38: rustc_driver::run_compiler_with_pool\r\n  39: rustc_driver::driver::spawn_thread_pool\r\n  40: rustc_driver::run_compiler\r\n  41: <scoped_tls::ScopedKey<T>>::set\r\n  42: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  43: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  44: rustc_driver::run\r\n  45: rustc_driver::main\r\n  46: std::rt::lang_start::{{closure}}\r\n  47: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  48: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  49: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:392\r\n             at libstd/rt.rs:58\r\n  50: main\r\n  51: __libc_start_main\r\n  52: <unknown>\r\nquery stack during panic:\r\n#0 [mir_validated] processing `Foo::as_val`\r\n#1 [borrowck] processing `Foo::as_val`\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.31.0-nightly (4bd4e4130 2018-10-25) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `playground`.\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55395/timeline", "performed_via_github_app": null, "state_reason": "completed"}