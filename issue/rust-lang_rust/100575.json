{"url": "https://api.github.com/repos/rust-lang/rust/issues/100575", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/100575/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/100575/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/100575/events", "html_url": "https://github.com/rust-lang/rust/issues/100575", "id": 1338819951, "node_id": "I_kwDOAAsO6M5PzMVv", "number": 100575, "title": "Intra-doc links to methods should link to a \"good default\"", "user": {"login": "ojeda", "id": 1054456, "node_id": "MDQ6VXNlcjEwNTQ0NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1054456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ojeda", "html_url": "https://github.com/ojeda", "followers_url": "https://api.github.com/users/ojeda/followers", "following_url": "https://api.github.com/users/ojeda/following{/other_user}", "gists_url": "https://api.github.com/users/ojeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/ojeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ojeda/subscriptions", "organizations_url": "https://api.github.com/users/ojeda/orgs", "repos_url": "https://api.github.com/users/ojeda/repos", "events_url": "https://api.github.com/users/ojeda/events{/privacy}", "received_events_url": "https://api.github.com/users/ojeda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-08-15T10:38:26Z", "updated_at": "2022-08-22T18:02:55Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Intra-doc links to methods should link to a \"good default\". This is particularly important until https://github.com/rust-lang/rust/issues/93398 is closed, but it would be nice even then.\r\n\r\nFor instance, in `MaybeUninit`, [links to `assume_init`](https://doc.rust-lang.org/std/mem/union.MaybeUninit.html#method.assume_init) point to the `Box` implementation, instead of the method one would expect.\r\n\r\nWorse, the safety preconditions of the `Box` implementation of the method refer to the \"main\" method, so the user needs to follow the link to read about them. However, since the link points to itself, it does not work and the link may appear to be broken or confuse the user:\r\n\r\n> #### Safety\r\n>\r\n> As with [`MaybeUninit::assume_init`](https://doc.rust-lang.org/std/mem/union.MaybeUninit.html#method.assume_init), it is up to the caller to guarantee that the value really is in an initialized state. Calling this when the content is not yet fully initialized causes immediate undefined behavior.\r\n\r\nIt is present in both stable and nightly.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/100575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/100575/timeline", "performed_via_github_app": null, "state_reason": null}