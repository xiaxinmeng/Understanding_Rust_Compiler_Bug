{"url": "https://api.github.com/repos/rust-lang/rust/issues/83138", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83138/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83138/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83138/events", "html_url": "https://github.com/rust-lang/rust/issues/83138", "id": 831659177, "node_id": "MDU6SXNzdWU4MzE2NTkxNzc=", "number": 83138, "title": "ICE when trying to link against an rlib compiled against a different sysroot", "user": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-03-15T10:20:08Z", "updated_at": "2021-03-27T02:19:12Z", "closed_at": "2021-03-27T02:19:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Code\r\n\r\nThis is from https://github.com/theduke/rustc-cranelift-bench by @theduke.\r\n\r\n```toml\r\n[package]\r\nname = \"clif_bench\"\r\nversion = \"0.1.0\"\r\nauthors = [\"Christoph Herzog <chris@theduke.at>\"]\r\nedition = \"2018\"\r\n\r\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\r\n\r\n[dependencies]\r\nchrono = { version = \"0.4.19\", features = [\"serde\"] }\r\nserde = { version = \"1.0.124\", features = [\"derive\"] }\r\nserde_json = \"1.0.64\"\r\ntracing = \"0.1.25\"\r\ntracing-subscriber = { version = \"0.2.16\", features = [\"fmt\"] }\r\nurl = { version = \"2.2.1\", features = [\"serde\"] }\r\nuuid = { version = \"0.8.2\", features = [\"serde\"] }\r\n```\r\n\r\n```rust\r\n#[derive(serde::Serialize, serde::Deserialize, PartialEq, Debug)]\r\nstruct S {\r\n    a: bool,\r\n    i: i64,\r\n    d: Option<chrono::DateTime<chrono::Utc>>,\r\n    url: Option<url::Url>,\r\n    id: Option<uuid::Uuid>,\r\n}\r\n\r\nfn main() {\r\n    tracing_subscriber::fmt::init();\r\n    tracing::info!(\"start\");\r\n\r\n    let s = S{\r\n        a: true,\r\n        i: 42,\r\n        d: None,\r\n        url: None,\r\n        id: None,\r\n    };\r\n\r\n    let raw = serde_json::to_string(&s).unwrap();\r\n    let recovered: S = serde_json::from_str(&raw).unwrap();\r\n\r\n    assert_eq!(s, recovered);\r\n\r\n    tracing::info!(\"done\");\r\n}\r\n```\r\n\r\n### Repro\r\n\r\n* `cargo build`\r\n* Run the final rustc invocation with a `--sysroot` argument for a different sysroot compiled by the same rustc.\r\n* ICE\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.52.0-nightly (8f349be27 2021-03-08)\r\nbinary: rustc\r\ncommit-hash: 8f349be27815d43d462a32faeb270a22a68486b6\r\ncommit-date: 2021-03-08\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.52.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'Failed to get crate data for crate19', compiler/rustc_metadata/src/creader.rs:136:32\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/std/src/panicking.rs:493:5\r\n   1: std::panicking::begin_panic_fmt\r\n             at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/std/src/panicking.rs:435:5\r\n   2: rustc_metadata::creader::CrateLoader::maybe_resolve_crate\r\n   3: rustc_metadata::creader::CrateLoader::maybe_process_path_extern\r\n   4: rustc_resolve::Resolver::extern_prelude_get\r\n   5: rustc_resolve::macros::<impl rustc_resolve::Resolver>::early_resolve_ident_in_lexical_scope\r\n   6: rustc_resolve::Resolver::resolve_path_with_ribs::{{closure}}\r\n   7: rustc_resolve::Resolver::resolve_path_with_ribs\r\n   8: rustc_resolve::macros::<impl rustc_resolve::Resolver>::resolve_macro_path\r\n   9: rustc_resolve::macros::<impl rustc_expand::base::ResolverExpand for rustc_resolve::Resolver>::resolve_macro_invocation\r\n  10: rustc_expand::expand::MacroExpander::fully_expand_fragment\r\n  11: rustc_expand::expand::MacroExpander::expand_crate\r\n  12: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  13: rustc_interface::passes::configure_and_expand_inner\r\n  14: rustc_interface::passes::configure_and_expand::{{closure}}\r\n  15: rustc_data_structures::box_region::PinnedGenerator<I,A,R>::new\r\n  16: rustc_interface::passes::configure_and_expand\r\n  17: rustc_interface::queries::Queries::expansion\r\n  18: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  19: rustc_span::with_source_map\r\n  20: rustc_interface::interface::create_compiler_and_run\r\n  21: rustc_span::with_session_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.52.0-nightly (8f349be27 2021-03-08) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental -C panic=abort --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nWith a small change to the source I even managed to get a delayed bug to trigger after the ICE backtrace:\r\n\r\n```diff\r\ndiff --git a/src/main.rs b/src/main.rs\r\nindex a629550..ef634e7 100644\r\n--- a/src/main.rs\r\n+++ b/src/main.rs\r\n@@ -11,19 +11,4 @@ struct S {\r\n fn main() {\r\n     tracing_subscriber::fmt::init();\r\n     tracing::info!(\"start\");\r\n-\r\n-    let s = S{\r\n-        a: true,\r\n-        i: 42,\r\n-        d: None,\r\n-        url: None,\r\n-        id: None,\r\n-    };\r\n-\r\n-    let raw = serde_json::to_string(&s).unwrap();\r\n-    let recovered: S = serde_json::from_str(&raw).unwrap();\r\n-\r\n-    assert_eq!(s, recovered);\r\n-\r\n-    tracing::info!(\"done\");\r\n }\r\n```\r\n\r\n<details>\r\n\r\n```\r\nthread 'rustc' panicked at 'Failed to get crate data for crate19', compiler/rustc_metadata/src/creader.rs:136:32\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/std/src/panicking.rs:493:5\r\n   1: std::panicking::begin_panic_fmt\r\n             at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/std/src/panicking.rs:435:5\r\n   2: rustc_metadata::creader::CrateLoader::maybe_resolve_crate\r\n   3: rustc_metadata::creader::CrateLoader::maybe_process_path_extern\r\n   4: rustc_resolve::Resolver::extern_prelude_get\r\n   5: rustc_resolve::macros::<impl rustc_resolve::Resolver>::early_resolve_ident_in_lexical_scope\r\n   6: rustc_resolve::Resolver::resolve_path_with_ribs::{{closure}}\r\n   7: rustc_resolve::Resolver::resolve_path_with_ribs\r\n   8: rustc_resolve::macros::<impl rustc_resolve::Resolver>::resolve_macro_path\r\n   9: rustc_resolve::macros::<impl rustc_expand::base::ResolverExpand for rustc_resolve::Resolver>::resolve_macro_invocation\r\n  10: rustc_expand::expand::MacroExpander::fully_expand_fragment\r\n  11: rustc_expand::expand::MacroExpander::expand_crate\r\n  12: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  13: rustc_interface::passes::configure_and_expand_inner\r\n  14: rustc_interface::passes::configure_and_expand::{{closure}}\r\n  15: rustc_data_structures::box_region::PinnedGenerator<I,A,R>::new\r\n  16: rustc_interface::passes::configure_and_expand\r\n  17: rustc_interface::queries::Queries::expansion\r\n  18: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  19: rustc_span::with_source_map\r\n  20: rustc_interface::interface::create_compiler_and_run\r\n  21: rustc_span::with_session_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.52.0-nightly (8f349be27 2021-03-08) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental -C panic=abort --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: internal compiler error: expansion entered force mode without producing any errors\r\n  --> src/main.rs:13:5\r\n   |\r\n13 |     tracing::info!(\"start\");\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at compiler/rustc_expand/src/expand.rs:450:34\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', compiler/rustc_errors/src/lib.rs:1012:13\r\nstack backtrace:\r\n   0:     0x7fd750ed07f0 - std::backtrace_rs::backtrace::libunwind::trace::h7ebc0dc57eca9f9f\r\n                               at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/std/src/../../backtrace/src/backtrace/libunwind.rs:90:5\r\n   1:     0x7fd750ed07f0 - std::backtrace_rs::backtrace::trace_unsynchronized::h1edc0478d7bdf5c0\r\n                               at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7fd750ed07f0 - std::sys_common::backtrace::_print_fmt::hbb311d6132fce696\r\n                               at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x7fd750ed07f0 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h03d3f67952eb1474\r\n                               at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x7fd750f3fa1f - core::fmt::write::h127419eb46f2ecc9\r\n                               at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/core/src/fmt/mod.rs:1092:17\r\n   5:     0x7fd750ec42e2 - std::io::Write::write_fmt::hd5dc550bce1749bc\r\n                               at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/std/src/io/mod.rs:1567:15\r\n   6:     0x7fd750ed4665 - std::sys_common::backtrace::_print::h90485b7fc45739f1\r\n                               at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x7fd750ed4665 - std::sys_common::backtrace::print::h580a1169aa12c859\r\n                               at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x7fd750ed4665 - std::panicking::default_hook::{{closure}}::h9a5ebd561570f374\r\n                               at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/std/src/panicking.rs:208:50\r\n   9:     0x7fd750ed4113 - std::panicking::default_hook::hf184b9bb4512b229\r\n                               at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/std/src/panicking.rs:225:9\r\n  10:     0x7fd7516c076b - rustc_driver::report_ice::h839363725321ec36\r\n  11:     0x7fd750ed4dd0 - std::panicking::rust_panic_with_hook::ha986482ea3855e1a\r\n                               at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/std/src/panicking.rs:595:17\r\n  12:     0x7fd750ed4947 - std::panicking::begin_panic_handler::{{closure}}::hf83a7d38b8aaf96f\r\n                               at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/std/src/panicking.rs:497:13\r\n  13:     0x7fd750ed0c8c - std::sys_common::backtrace::__rust_end_short_backtrace::hde9b7d88bfadfe76\r\n                               at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/std/src/sys_common/backtrace.rs:141:18\r\n  14:     0x7fd750ed48a9 - rust_begin_unwind\r\n                               at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/std/src/panicking.rs:493:5\r\n  15:     0x7fd750e980eb - std::panicking::begin_panic_fmt::h0170054cfae87e91\r\n                               at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/std/src/panicking.rs:435:5\r\n  16:     0x7fd753e82899 - rustc_errors::HandlerInner::flush_delayed::h50504530b90bea60\r\n  17:     0x7fd753e81259 - <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop::hee91671f04827c06\r\n  18:     0x7fd75349fbd6 - core::ptr::drop_in_place<rustc_session::parse::ParseSess>::h6f71262dd4fac774\r\n  19:     0x7fd7534a2800 - <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop::ha61f934e3506719c\r\n  20:     0x7fd7534a400d - core::ptr::drop_in_place<rustc_interface::interface::Compiler>::h9850104d4cd168fa\r\n  21:     0x7fd7534a3aa7 - rustc_span::with_source_map::hea5ba571ebb20280\r\n  22:     0x7fd7534a58fa - rustc_interface::interface::create_compiler_and_run::h5f97656bcc8a4930\r\n  23:     0x7fd7534a3bcf - rustc_span::with_session_globals::h7d9c5cb670da0b78\r\n  24:     0x7fd7534a5c7c - std::sys_common::backtrace::__rust_begin_short_backtrace::hd327375d1fa29fe7\r\n  25:     0x7fd7534c0f45 - core::ops::function::FnOnce::call_once{{vtable.shim}}::h2dd366f87a09cc65\r\n  26:     0x7fd750ee48ba - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h83eba159d58672b0\r\n                               at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/alloc/src/boxed.rs:1546:9\r\n  27:     0x7fd750ee48ba - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h4c917549e359165b\r\n                               at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/alloc/src/boxed.rs:1546:9\r\n  28:     0x7fd750ee48ba - std::sys::unix::thread::Thread::new::thread_start::h28edfc134fd92155\r\n                               at /rustc/8f349be27815d43d462a32faeb270a22a68486b6/library/std/src/sys/unix/thread.rs:71:17\r\n  29:     0x7fd750de2fa3 - start_thread\r\n  30:     0x7fd750d024cf - clone\r\n  31:                0x0 - <unknown>\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.52.0-nightly (8f349be27 2021-03-08) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental -C panic=abort --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nthread panicked while panicking. aborting.\r\n[1]    3850 illegal hardware instruction  rustc --crate-name clif_bench --edition=2018 src/main.rs --crate-type bin  -C\r\n```\r\n\r\n</details>\r\n\r\nRemoving `tracing::info!(\"start\");` too fixes the ICE.", "closed_by": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83138/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83138/timeline", "performed_via_github_app": null, "state_reason": "completed"}