{"url": "https://api.github.com/repos/rust-lang/rust/issues/46163", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46163/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46163/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46163/events", "html_url": "https://github.com/rust-lang/rust/issues/46163", "id": 275765692, "node_id": "MDU6SXNzdWUyNzU3NjU2OTI=", "number": 46163, "title": "consider for new epoch: rand::sample's API should not be infalible", "user": {"login": "vitiral", "id": 5587659, "node_id": "MDQ6VXNlcjU1ODc2NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/5587659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vitiral", "html_url": "https://github.com/vitiral", "followers_url": "https://api.github.com/users/vitiral/followers", "following_url": "https://api.github.com/users/vitiral/following{/other_user}", "gists_url": "https://api.github.com/users/vitiral/gists{/gist_id}", "starred_url": "https://api.github.com/users/vitiral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vitiral/subscriptions", "organizations_url": "https://api.github.com/users/vitiral/orgs", "repos_url": "https://api.github.com/users/vitiral/repos", "events_url": "https://api.github.com/users/vitiral/events{/privacy}", "received_events_url": "https://api.github.com/users/vitiral/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-21T16:01:03Z", "updated_at": "2017-11-21T16:18:05Z", "closed_at": "2017-11-21T16:04:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not sure where to put this, as it would be a breaking change and clearly it would need something like a new epoch to make happen, but I thought it would be worth mentioning.\r\n\r\nMost rust operations are fallible if they don't make sense, either through a panic or by returning an `Option` or `Result`. However, [`rand::sample`](https://doc.rust-lang.org/rand/rand/fn.sample.html) has the following API:\r\n\r\n```\r\npub fn sample<T, I, R>(rng: &mut R, iterable: I, amount: usize) -> Vec<T> where\r\n    I: IntoIterator<Item = T>,\r\n    R: Rng, \r\n```\r\n\r\n> Randomly sample **up to amount** elements from a finite iterator. \r\n\r\nThis function will silently return *less than amount* if the size of `I` is less than `amount`. I would say this is very odd, and returning `Option<Vec<T>>` would have been a better design choice.  You can imagine the confusion if you did `rand::sample(rng, v, 100)` but then only had 2 elements! \r\n\r\nIf it were changed to returning `None` if `I.len() < amount` then the current behavior could still be accomplished with:\r\n\r\n```\r\nrand::sample(&mut rng, vec.iter(), usize::min(amount, vec.len())).unwrap()\r\n```\r\n\r\nWith the current behavior, user has to put guards around *their* code (which is not required by the compiler) to prevent getting less than *amount*, which is unusual in rust.\r\n\r\n", "closed_by": {"login": "vitiral", "id": 5587659, "node_id": "MDQ6VXNlcjU1ODc2NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/5587659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vitiral", "html_url": "https://github.com/vitiral", "followers_url": "https://api.github.com/users/vitiral/followers", "following_url": "https://api.github.com/users/vitiral/following{/other_user}", "gists_url": "https://api.github.com/users/vitiral/gists{/gist_id}", "starred_url": "https://api.github.com/users/vitiral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vitiral/subscriptions", "organizations_url": "https://api.github.com/users/vitiral/orgs", "repos_url": "https://api.github.com/users/vitiral/repos", "events_url": "https://api.github.com/users/vitiral/events{/privacy}", "received_events_url": "https://api.github.com/users/vitiral/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46163/timeline", "performed_via_github_app": null, "state_reason": "completed"}