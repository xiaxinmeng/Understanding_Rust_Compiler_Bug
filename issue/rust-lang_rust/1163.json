{"url": "https://api.github.com/repos/rust-lang/rust/issues/1163", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/1163/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/1163/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/1163/events", "html_url": "https://github.com/rust-lang/rust/issues/1163", "id": 2190056, "node_id": "MDU6SXNzdWUyMTkwMDU2", "number": 1163, "title": "c-stack-cdecl assumes arguments are passed on stack", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2011-11-09T19:23:17Z", "updated_at": "2011-11-13T16:04:17Z", "closed_at": "2011-11-13T16:04:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the x86_64 architecture (and others as well), the first few integer arguments are passed in registers rather than being pushed on the stack.  Currently, `c-stack-cdecl` works by allocating some space on the C stack and then writing the arguments into that space.  A small shim (`upcall_call_c_stack()`) then switches the stack pointer over and invokes the function, which will then find the arguments on the stack as expected.  Naturally this fails when the function doesn't expect its arguments on the stack. For now, I have worked around the issue by having `upcall_call_c_stack()` on x86_64 load the registers from the stack, but this will only work for very simple cases. In an ideal world, LLVM should handle the details of the calling convention for us, just as it does for a typical \"invoke\" instruction.  However, this is a bit tricky since the default invoke instruction does not switch stacks!\n\nOne possible solution would be to generate a shim function S for each function F that we would like to call on the c-stack.  If F takes arguments of type X and Y and returns a type Z, the shim function would work like:\n\n```\nvoid S(struct F_Args { X x; Y y; Z *z; } *args) {\n    *args->z = F(args->x, args->y);\n}\n```\n\nWe can then have some hand-coded assembly that swaps the stack pointer and invokes `S` on the C-stack. `S` has a known signature so this should be easy.  LLVM ought to then generate the right code to unpack the arguments and put them where they belong.  The downside of this trick is that this results in copying the arguments more than is needed.\n\nAnother option might be to add a new calling convention to LLVM.  The problem is we would need to generate a new calling convention for each target architecture.  On the other hand, that may not be such a big hurdle.  I don't know how one defines calling conventions in LLVM or how flexible that system is.\n", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/1163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/1163/timeline", "performed_via_github_app": null, "state_reason": "completed"}