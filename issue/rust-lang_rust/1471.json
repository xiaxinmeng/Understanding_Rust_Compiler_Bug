{"url": "https://api.github.com/repos/rust-lang/rust/issues/1471", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/1471/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/1471/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/1471/events", "html_url": "https://github.com/rust-lang/rust/issues/1471", "id": 2764219, "node_id": "MDU6SXNzdWUyNzY0MjE5", "number": 1471, "title": "Generic type can't be inferred through lambda block", "user": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-01-09T01:21:59Z", "updated_at": "2012-02-06T05:45:04Z", "closed_at": "2012-02-06T05:45:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\ntype actor<T> = {                                                                                                                                              \n    unused: bool                                                                                                                                               \n};                                                                                                                                                             \n\ntype self<T> = {                                                                                                                                               \n    unused: bool                                                                                                                                               \n};                                                                                                                                                             \n\nfn act<T:send>(+behavior: sendfn(self<T>)) -> actor<T> {                                                                                                       \n    {unused: true}                                                                                                                                             \n}                                                                                                                                                              \n\ntag in {                                                                                                                                                       \n    preprocess([u8]);                                                                                                                                          \n    exit;                                                                                                                                                      \n}                                                                                                                                                              \n\nfn mk() -> actor<in> {                                                                                                                                         \n    act {|self|                                                                                                                                                \n    }                                                                                                                                                          \n}                                                                                                                                                              \n\nfn main() {                                                                                                                                                    \n}\n```\n\n```\n../src/test/run-pass/block-infer.rs:19:4: 19:7 error: cannot determine a type for this expression\n../src/test/run-pass/block-infer.rs:19     act {|self|\n```\n\nWriting `act::<in>` allows it to work.\n", "closed_by": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/1471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/1471/timeline", "performed_via_github_app": null, "state_reason": "completed"}