{"url": "https://api.github.com/repos/rust-lang/rust/issues/107212", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107212/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107212/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107212/events", "html_url": "https://github.com/rust-lang/rust/issues/107212", "id": 1552345952, "node_id": "I_kwDOAAsO6M5chutg", "number": 107212, "title": "Compiler not suggesting use of `pub use`", "user": {"login": "archcorsair", "id": 1036921, "node_id": "MDQ6VXNlcjEwMzY5MjE=", "avatar_url": "https://avatars.githubusercontent.com/u/1036921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/archcorsair", "html_url": "https://github.com/archcorsair", "followers_url": "https://api.github.com/users/archcorsair/followers", "following_url": "https://api.github.com/users/archcorsair/following{/other_user}", "gists_url": "https://api.github.com/users/archcorsair/gists{/gist_id}", "starred_url": "https://api.github.com/users/archcorsair/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/archcorsair/subscriptions", "organizations_url": "https://api.github.com/users/archcorsair/orgs", "repos_url": "https://api.github.com/users/archcorsair/repos", "events_url": "https://api.github.com/users/archcorsair/events{/privacy}", "received_events_url": "https://api.github.com/users/archcorsair/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-01-23T00:15:24Z", "updated_at": "2023-01-28T00:11:49Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\n// From Rustlings exercise: https://github.com/rust-lang/rustlings/blob/main/exercises/modules/modules2.rs\r\n\r\nmod delicious_snacks {\r\n    // TODO: Fix these use statements\r\n    use self::fruits::PEAR as fruit;\r\n    use self::veggies::CUCUMBER as veggie;\r\n\r\n    mod fruits {\r\n        pub const PEAR: &'static str = \"Pear\";\r\n        pub const APPLE: &'static str = \"Apple\";\r\n    }\r\n\r\n    mod veggies {\r\n        pub const CUCUMBER: &'static str = \"Cucumber\";\r\n        pub const CARROT: &'static str = \"Carrot\";\r\n    }\r\n}\r\n\r\nfn main() {\r\n    println!(\r\n        \"favorite snacks: {} and {}\",\r\n        delicious_snacks::fruit,\r\n        delicious_snacks::veggie\r\n    );\r\n}\r\n```\r\n\r\n\r\n### Current output\r\n\r\n```Shell\r\nerror[E0603]: constant import `fruit` is private\r\n  --> exercises/modules/modules2.rs:26:27\r\n   |\r\n26 |         delicious_snacks::fruit,\r\n   |                           ^^^^^ private constant import\r\n   |\r\nnote: the constant import `fruit` is defined here...\r\n  --> exercises/modules/modules2.rs:9:9\r\n   |\r\n9  |     use self::fruits::PEAR as fruit;\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...and refers to the constant `PEAR` which is defined here\r\n  --> exercises/modules/modules2.rs:13:9\r\n   |\r\n13 |         pub const PEAR: &'static str = \"Pear\";\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ consider importing it directly\r\n\r\nerror[E0603]: constant import `veggie` is private\r\n  --> exercises/modules/modules2.rs:27:27\r\n   |\r\n27 |         delicious_snacks::veggie\r\n   |                           ^^^^^^ private constant import\r\n   |\r\nnote: the constant import `veggie` is defined here...\r\n  --> exercises/modules/modules2.rs:10:9\r\n   |\r\n10 |     use self::veggies::CUCUMBER as veggie;\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...and refers to the constant `CUCUMBER` which is defined here\r\n  --> exercises/modules/modules2.rs:18:9\r\n   |\r\n18 |         pub const CUCUMBER: &'static str = \"Cucumber\";\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ consider importing it directly\r\n```\r\n\r\n\r\n### Desired output\r\n\r\n```Shell\r\n    use self::fruits::PEAR as fruit;\r\n^^^ consider adding pub\r\n```\r\n\r\n\r\n### Rationale and extra context\r\n\r\nI'm new to Rust and currently aiding my learning with Rustlings.\r\nJust about every time I have an error in my code, the compiler does an excellent job describing where I went wrong.\r\n\r\nThis time however it seems to be making a strange suggestion to \"consider importing it directly\" - which to my understanding is not even possible. It would seem more clear/concise to suggest converting the `use` to a `pub use`\r\n\r\n`pub use` is new to me as other languages don't have such a concept. There would be no way for me to come to this conclusion on my own.\r\n\r\n\r\n### Other cases\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\n_No response_", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107212/timeline", "performed_via_github_app": null, "state_reason": null}