{"url": "https://api.github.com/repos/rust-lang/rust/issues/15144", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/15144/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/15144/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/15144/events", "html_url": "https://github.com/rust-lang/rust/issues/15144", "id": 36378533, "node_id": "MDU6SXNzdWUzNjM3ODUzMw==", "number": 15144, "title": "Borrow checker sometimes determines a lifetime to be 'static unnecessarily", "user": {"login": "wackywendell", "id": 245071, "node_id": "MDQ6VXNlcjI0NTA3MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/245071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wackywendell", "html_url": "https://github.com/wackywendell", "followers_url": "https://api.github.com/users/wackywendell/followers", "following_url": "https://api.github.com/users/wackywendell/following{/other_user}", "gists_url": "https://api.github.com/users/wackywendell/gists{/gist_id}", "starred_url": "https://api.github.com/users/wackywendell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wackywendell/subscriptions", "organizations_url": "https://api.github.com/users/wackywendell/orgs", "repos_url": "https://api.github.com/users/wackywendell/repos", "events_url": "https://api.github.com/users/wackywendell/events{/privacy}", "received_events_url": "https://api.github.com/users/wackywendell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-06-24T12:23:15Z", "updated_at": "2019-08-31T21:07:21Z", "closed_at": "2019-08-31T21:07:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The code at [this gist](https://gist.github.com/wackywendell/4a1e2c5190480e3bef10) fails to compile (copied here for completeness' sake):\n\n``` rust\nstruct Foo {\n    n : int\n}\n\nstruct Bar<'a> {\n    n : int,\n    other : Option<&'a mut Foo>\n}\n\nimpl<'a> Bar<'a> {\n    fn set_foo(&mut self, foo : &'a mut Foo){\n        self.other = Some(foo);\n    }\n}\n\nfn with_bar(func : |&mut Bar|) {\n    let mut bar = Bar { n : 1, other : None };\n    func(&mut bar)\n}\n\nfn main() {\n    let mut foo = Foo { n : 4 };\n\n    with_bar(|bar: &mut Bar| {\n        bar.set_foo(&mut foo);\n    });\n}\n```\n\nThis gives the following error:\n\n```\nsimplified_lifetime_fail.rs:24:14: 26:6 error: `foo` does not live long enough\nsimplified_lifetime_fail.rs:24     with_bar(|bar: &mut Bar| {\nsimplified_lifetime_fail.rs:25         bar.set_foo(&mut foo);\nsimplified_lifetime_fail.rs:26     });\nnote: reference must be valid for the static lifetime...\nsimplified_lifetime_fail.rs:21:11: 27:2 note: ...but borrowed value is only valid for the block at 21:10\nsimplified_lifetime_fail.rs:21 fn main() {\nsimplified_lifetime_fail.rs:22     let mut foo = Foo { n : 4 };\nsimplified_lifetime_fail.rs:23 \nsimplified_lifetime_fail.rs:24     with_bar(|bar: &mut Bar| {\nsimplified_lifetime_fail.rs:25         bar.set_foo(&mut foo);\nsimplified_lifetime_fail.rs:26     });\n                               ...\nerror: aborting due to previous error\n```\n\nI believe this is an invalid error, as `foo` only needs to live as long as `bar`, which it clearly outlives; the borrow checker should be able to deduce that.\n\nIf I am incorrect, please let me know; my knowledge of the borrow checker is at the \"what it does\" level and not the \"how it works\" level.\n\n---\n\nOriginal error:\n\nThis is a simplified version of [this error](https://github.com/sebcrozet/kiss3d/issues/31) in [kiss3d](https://github.com/sebcrozet/kiss3d/), which is where it arose; code like this used in the form\n\n``` rust\n\nlet mut first_person = FirstPerson::new(Vec3::new(10.0f32, 10.0, 10.0), na::zero());\n\nWindow::spawn(\"Kiss3d: camera\", |window| {\n    window.set_camera(&mut first_person as &mut Camera);\n})\n```\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/15144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/15144/timeline", "performed_via_github_app": null, "state_reason": "completed"}