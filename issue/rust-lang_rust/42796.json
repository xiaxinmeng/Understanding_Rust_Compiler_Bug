{"url": "https://api.github.com/repos/rust-lang/rust/issues/42796", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42796/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42796/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42796/events", "html_url": "https://github.com/rust-lang/rust/issues/42796", "id": 237517576, "node_id": "MDU6SXNzdWUyMzc1MTc1NzY=", "number": 42796, "title": "trait cache can be poisoned through an associated type", "user": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}], "state": "closed", "locked": false, "assignee": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-06-21T12:31:37Z", "updated_at": "2017-07-07T23:50:46Z", "closed_at": "2017-07-07T23:50:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was trying to root out the root cause of #39970 and I found this:\r\n\r\n## Meta\r\n\r\n```\r\nrustc 1.20.0-nightly (445077963 2017-06-20)\r\n```\r\n\r\n## STR\r\n\r\n```Rust\r\npub trait Mirror<Smoke> {\r\n    type Image;\r\n}\r\n\r\nimpl<T, Smoke> Mirror<Smoke> for T {\r\n    type Image = T;\r\n}\r\n\r\npub fn poison<S>(victim: String) where <String as Mirror<S>>::Image: Copy {\r\n    loop { drop(victim); }\r\n}\r\n\r\nfn main() {\r\n    let s = \"Hello!\".to_owned();\r\n    let mut s_copy = s;\r\n    s_copy.push_str(\"World!\");\r\n    \"0wned!\".to_owned();\r\n    println!(\"{}\", s);\r\n}\r\n```\r\n\r\n## Expected result\r\n\r\nCode does not compile, because it attempts to copy a string..\r\n\r\n## Actual result\r\n\r\nCode compiles, is UB, generally prints `0wned!`\r\n\r\n## Explanation\r\n\r\nThe global fulfilled predicates cache (`GlobalFulfilledPredicates`) tries to cache \"environment-independent\" predicates. The idea is that if a predicate contains neither parameters nor inference variables, then whether it holds is unaffected by the parameter environment.\r\n\r\nThis property almost holds - because in the absence of inference variables, trait impl search is \"predicative\", its results are independent of the universe of types, and therefore can be transferred from a \"maximal universe\" where the type parameters can be assigned variables.\r\n\r\nHowever, that argument isn't 100% correct. If predicates are *inconsistent*, then there can be no such \"maximal universe\", and so `String: Copy` might be implied by `<String as Mirror<T>>::Image: Copy`.\r\n\r\nWe can say that this would be \"fixed by Chalk\" (as of course, in the absence of \"intelligent\" caching, this is not a problem), but that assumes the implementation of Chalk would not make the same mistake. I *think* a good way to fix this would be to check global predicates in the empty environment directly - if the current environment is consistent that will return the correct result, and if it is inconsistent we already don't always care about any kind of stability (e.g. we occasionally \"know\" that `[T]` is never `Sized`, even if some predicate tries to claim so).\r\n\r\ncc @nikomatsakis @aturon @RalfJung (are you interested in trait systems?)", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42796/timeline", "performed_via_github_app": null, "state_reason": "completed"}