{"url": "https://api.github.com/repos/rust-lang/rust/issues/57787", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57787/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57787/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57787/events", "html_url": "https://github.com/rust-lang/rust/issues/57787", "id": 401149860, "node_id": "MDU6SXNzdWU0MDExNDk4NjA=", "number": 57787, "title": "rustc internal compiler error when resolving imports made with macros from other crates", "user": {"login": "jsmith628", "id": 16457715, "node_id": "MDQ6VXNlcjE2NDU3NzE1", "avatar_url": "https://avatars.githubusercontent.com/u/16457715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsmith628", "html_url": "https://github.com/jsmith628", "followers_url": "https://api.github.com/users/jsmith628/followers", "following_url": "https://api.github.com/users/jsmith628/following{/other_user}", "gists_url": "https://api.github.com/users/jsmith628/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsmith628/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsmith628/subscriptions", "organizations_url": "https://api.github.com/users/jsmith628/orgs", "repos_url": "https://api.github.com/users/jsmith628/repos", "events_url": "https://api.github.com/users/jsmith628/events{/privacy}", "received_events_url": "https://api.github.com/users/jsmith628/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-20T23:09:09Z", "updated_at": "2019-01-26T20:59:00Z", "closed_at": "2019-01-26T20:59:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I was working on a macro and ran into an rather weird bug regarding imports. It's not really high priority, and I myself found a work around for my specific use case, but here's some info in case it's helpful.\r\n\r\nBasically, if you have a macro from another crate that imports something using a macro variable and that thing is already in scope, then rustc will panic.\r\n\r\nie, if you create a crate called \"bug_test\" with this in `src/lib.rs`\r\n```\r\n#[macro_export]\r\nmacro_rules! import {\r\n    ($name:path) => {use $name;};\r\n}\r\n```\r\nand this in `src/main.rs`:\r\n```\r\n#[macro_use]\r\nextern crate bug_test;\r\n\r\npub struct Foo;\r\nmod bar {\r\n    use super::Foo;\r\n    import!(Foo);\r\n}\r\n\r\nfn main() {}\r\n```\r\nthen running with cargo using `RUST_BACKTRACE=full` and `--verbose` will crash with the following output:\r\n```\r\n   Compiling bug_test v0.1.0 (/home/anvil/workspace/rust/bug_test)\r\n     Running `rustc --edition=2018 --crate-name bug_test src/main.rs --color always --crate-type bin --emit=dep-info,link -C debuginfo=2 -C metadata=fa25b10d441c080d -C extra-filename=-fa25b10d441c080d --out-dir /home/anvil/workspace/rust/bug_test/target/debug/deps -C incremental=/home/anvil/workspace/rust/bug_test/target/debug/incremental -L dependency=/home/anvil/workspace/rust/bug_test/target/debug/deps --extern bug_test=/home/anvil/workspace/rust/bug_test/target/debug/deps/libbug_test-d3b3ef5ed21d5637.rlib`\r\nthread 'rustc' panicked at 'byte index 4286968243 is out of bounds of `$ name`', src/libcore/str/mod.rs:2085:9\r\nstack backtrace:\r\n   0:     0x7f7a7826a5c3 - std::sys::unix::backtrace::tracing::imp::unwind_backtrace::h3f9fcc1e0a64f629\r\n                               at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:39\r\n   1:     0x7f7a78262c28 - std::sys_common::backtrace::_print::he5404c8f6597b2cb\r\n                               at src/libstd/sys_common/backtrace.rs:70\r\n   2:     0x7f7a78266752 - std::panicking::default_hook::{{closure}}::hed3ca28e79a98cf5\r\n                               at src/libstd/sys_common/backtrace.rs:58\r\n                               at src/libstd/panicking.rs:200\r\n   3:     0x7f7a782664c4 - std::panicking::default_hook::hc7d5b7a9f8bee129\r\n                               at src/libstd/panicking.rs:215\r\n   4:     0x7f7a7450b15f - rustc::util::common::panic_hook::hea1362f8353fa39b\r\n   5:     0x7f7a78266f39 - std::panicking::rust_panic_with_hook::h4fcc1c9e88a2f59e\r\n                               at src/libstd/panicking.rs:482\r\n   6:     0x7f7a782669e1 - std::panicking::continue_panic_fmt::h574b633a6765bec0\r\n                               at src/libstd/panicking.rs:385\r\n   7:     0x7f7a782668c5 - rust_begin_unwind\r\n                               at src/libstd/panicking.rs:312\r\n   8:     0x7f7a78290bfc - core::panicking::panic_fmt::h67b961e583e2baf5\r\n                               at src/libcore/panicking.rs:85\r\n   9:     0x7f7a7829316d - core::str::slice_error_fail::hd643105be0239058\r\n                               at src/libcore/str/mod.rs:0\r\n  10:     0x7f7a77374268 - core::str::traits::<impl core::slice::SliceIndex<str> for core::ops::range::RangeTo<usize>>::index::{{closure}}::h609d9562139157ca\r\n  11:     0x7f7a773afd82 - rustc_resolve::Resolver::report_conflict::hd415e900bec39b7a\r\n  12:     0x7f7a7743aca3 - rustc_resolve::resolve_imports::ImportResolver::resolve_imports::hd8850b22213dc988\r\n  13:     0x7f7a77376fbd - rustc_resolve::macros::<impl syntax::ext::base::Resolver for rustc_resolve::Resolver<'a>>::resolve_imports::h2d11e4e31ea47e62\r\n  14:     0x7f7a7365c4a8 - syntax::ext::expand::MacroExpander::expand_fragment::h8f366f0be003c3ad\r\n  15:     0x7f7a7365a083 - syntax::ext::expand::MacroExpander::expand_crate::hb28fa852bcb14830\r\n  16:     0x7f7a785e66f4 - rustc_driver::driver::phase_2_configure_and_expand_inner::{{closure}}::hd92c6e0a2bfeeb04\r\n  17:     0x7f7a785dfe1c - rustc::util::common::time::h8ed05c6fbfb0cf6a\r\n  18:     0x7f7a786445dd - rustc_driver::driver::phase_2_configure_and_expand::h9030f89e2fe30a9a\r\n  19:     0x7f7a7863fed1 - rustc_driver::driver::compile_input::hcd14a9896da62839\r\n  20:     0x7f7a785bd560 - rustc_driver::run_compiler_with_pool::h7023af6e331d7529\r\n  21:     0x7f7a7858e9a5 - <scoped_tls::ScopedKey<T>>::set::h9be799eb2aff87c4\r\n  22:     0x7f7a785bc3aa - rustc_driver::run_compiler::h7b424221cc9d2064\r\n  23:     0x7f7a7858eb5a - <scoped_tls::ScopedKey<T>>::set::hba74b8ced87ab1cf\r\n  24:     0x7f7a7861b0f2 - std::sys_common::backtrace::__rust_begin_short_backtrace::h8f9a3d09f5c7481b\r\n  25:     0x7f7a782784e9 - __rust_maybe_catch_panic\r\n                               at src/libpanic_unwind/lib.rs:92\r\n  26:     0x7f7a78632720 - <F as alloc::boxed::FnBox<A>>::call_box::hcfdf6bd7964eaa60\r\n  27:     0x7f7a782772ad - std::sys::unix::thread::Thread::new::thread_start::h8540a9e9e9bc02d2\r\n                               at /rustc/c76f3c374f80e20b612601a3c375666a58ac3971/src/liballoc/boxed.rs:744\r\n                               at src/libstd/sys_common/thread.rs:14\r\n                               at src/libstd/sys/unix/thread.rs:81\r\n  28:     0x7f7a781a7a9c - start_thread\r\n  29:     0x7f7a780c8b22 - clone\r\n  30:                0x0 - <unknown>\r\nquery stack during panic:\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.33.0-nightly (c76f3c374 2019-01-18) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `bug_test`.\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --edition=2018 --crate-name bug_test src/main.rs --color always --crate-type bin --emit=dep-info,link -C debuginfo=2 -C metadata=fa25b10d441c080d -C extra-filename=-fa25b10d441c080d --out-dir /home/anvil/workspace/rust/bug_test/target/debug/deps -C incremental=/home/anvil/workspace/rust/bug_test/target/debug/incremental -L dependency=/home/anvil/workspace/rust/bug_test/target/debug/deps --extern bug_test=/home/anvil/workspace/rust/bug_test/target/debug/deps/libbug_test-d3b3ef5ed21d5637.rlib` (exit code: 101)\r\n```\r\nSome additional information:\r\n* The bug goes away perfectly fine when the macro is in the same crate as the call, and it errors about duplicate names as you would expect\r\n* You also do need it to be importing the same thing twice, otherwise it compiles just fine\r\n* The fact that the fragment specifier is `:path` doesn't matter. It crashes even when you use `:ident`\r\n\r\n\r\n\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57787/timeline", "performed_via_github_app": null, "state_reason": "completed"}