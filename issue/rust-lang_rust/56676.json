{"url": "https://api.github.com/repos/rust-lang/rust/issues/56676", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56676/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56676/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56676/events", "html_url": "https://github.com/rust-lang/rust/issues/56676", "id": 389332397, "node_id": "MDU6SXNzdWUzODkzMzIzOTc=", "number": 56676, "title": "How to read `argc` and `argv` without allocating and modify them", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 3812066157, "node_id": "LA_kwDOAAsO6M7jN4Nt", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-process", "name": "A-process", "color": "f7e101", "default": false, "description": "Area: std::process and std::env"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-10T14:42:54Z", "updated_at": "2023-01-26T21:12:07Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I need to read `argc` and `argv`, ideally without allocating any memory, and I want to modify them on initialization such that subsequent accesses to them only see the modified version (in particular, libraries querying these via `std::env::args()` and similar APIs). \r\n\r\nWhy? Some runtimes require argument handling to work \"just like in C\". For example, `mpirun ...options... my_program foo bar` allows the user to pass explicit `options` about how the run-time should behave, and `mpirun` itself does insert extra options depending on the environment / hardware / config files / etc. The `my_program` binary is required to call `MPI_Init(&argc, &argv)` at the beginning of `main` to initialize the MPI runtime, and `MPI_Init` will interpret and strip all implicit and explicit options that `mpirun` might pass about the mpi run-time configuration, such that, after `MPI_Init` succeeds, `foo` and `bar` are the first and second CLI argument for `my_program` (instead of some higher value due to the `mpirun` options).\r\n\r\nSo the TL;DR is that MPI init needs raw mutable access to `argc` and `argv`. Ideally, if I use a third party library later that access these via `std::env::args()`, it will only see the already post-processed arguments.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56676/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56676/timeline", "performed_via_github_app": null, "state_reason": null}