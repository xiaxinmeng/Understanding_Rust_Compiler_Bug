{"url": "https://api.github.com/repos/rust-lang/rust/issues/14194", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/14194/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/14194/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/14194/events", "html_url": "https://github.com/rust-lang/rust/issues/14194", "id": 33489507, "node_id": "MDU6SXNzdWUzMzQ4OTUwNw==", "number": 14194, "title": "std::io::net::unix::UnixStream does not support abstract sockets on Linux.", "user": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-05-14T13:02:28Z", "updated_at": "2018-03-17T12:07:31Z", "closed_at": "2015-02-11T18:49:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, as far as I can tell, there is no way to connect to or listen on unix domain sockets in Linux's abstract socket namespace. I see two ways to add this support:\n\n0:  Add functions connect_abstract and connect_abstract_timeout to UnixStream and bind_abstract to UnixListener.\n1:  Create new traits AbstractStream, AbstractListener and AbstractAcceptor that mimic their Unix\\* counterparts and put them in either std::io::net::unix or a new module std::io::net::abstract.\n\nI'd be happy to write a patch for this if anyone can suggest which would be the best course of action or suggest a better way to implement this.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/14194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/14194/timeline", "performed_via_github_app": null, "state_reason": "completed"}