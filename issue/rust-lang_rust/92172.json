{"url": "https://api.github.com/repos/rust-lang/rust/issues/92172", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92172/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92172/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92172/events", "html_url": "https://github.com/rust-lang/rust/issues/92172", "id": 1086147508, "node_id": "I_kwDOAAsO6M5AvUu0", "number": 92172, "title": "compiler/rustc_borrowck/src/diagnostics/mutability_errors.rs:450:53 - thread 'rustc' panicked at 'index out of bounds: the len is 2 but the index is 2'", "user": {"login": "harshasrisri", "id": 750691, "node_id": "MDQ6VXNlcjc1MDY5MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/750691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshasrisri", "html_url": "https://github.com/harshasrisri", "followers_url": "https://api.github.com/users/harshasrisri/followers", "following_url": "https://api.github.com/users/harshasrisri/following{/other_user}", "gists_url": "https://api.github.com/users/harshasrisri/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshasrisri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshasrisri/subscriptions", "organizations_url": "https://api.github.com/users/harshasrisri/orgs", "repos_url": "https://api.github.com/users/harshasrisri/repos", "events_url": "https://api.github.com/users/harshasrisri/events{/privacy}", "received_events_url": "https://api.github.com/users/harshasrisri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-12-21T19:10:38Z", "updated_at": "2021-12-21T23:52:32Z", "closed_at": "2021-12-21T23:52:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n<details><summary><strong>Code</strong></summary>\r\n\r\n```Rust\r\nuse std::collections::HashMap;\r\n\r\ntype Insertions = HashMap<(usize, usize), usize>;\r\ntype CountMap = HashMap<(usize, usize, usize), Vec<usize>>;\r\n\r\nstruct Polymerizer<'a> {\r\n    cur_depth: usize,\r\n    max_depth: usize,\r\n    counts: CountMap,\r\n    insertions: &'a Insertions,\r\n}\r\n\r\nimpl<'a> Polymerizer<'a> {\r\n    fn new(max_depth: usize, insertions: &'a Insertions) -> Self {\r\n        let mut ret = Polymerizer {\r\n            cur_depth: 0,\r\n            max_depth,\r\n            counts: HashMap::new(),\r\n            insertions,\r\n        };\r\n\r\n        for keys in insertions.keys() {\r\n            let mut v = vec![0; 128];\r\n            v[keys.0] = 1;\r\n            v[keys.1] = 1;\r\n            ret.counts.insert((keys.0, keys.1, max_depth), v);\r\n        }\r\n\r\n        ret\r\n    }\r\n\r\n    fn polymerize_pairs(&mut self, p1: usize, p2: usize) {\r\n        if self.cur_depth == self.max_depth || self.counts.get(&(p1, p2, self.cur_depth)).is_some()\r\n        {\r\n            return;\r\n        }\r\n\r\n        let ins = *self.insertions.get(&(p1, p2)).unwrap();\r\n\r\n        self.cur_depth += 1;\r\n        self.polymerize_pairs(p1, ins);\r\n        self.polymerize_pairs(ins, p2);\r\n        self.cur_depth -= 1;\r\n\r\n        let v1 = self.counts.get(&(p1, ins, self.cur_depth + 1)).unwrap();\r\n        let v2 = self.counts.get(&(ins, p2, self.cur_depth + 1)).unwrap();\r\n        let mut v: Vec<usize> = v1.iter().zip(v2.iter()).map(|(c1, c2)| c1 + c2).collect();\r\n        v[ins] -= 1;\r\n\r\n\r\n        eprintln!(\"({:2}, {:2}, {:2}) - {:?}\", self.cur_depth, p1 as u8 as char, p2 as u8 as char, v);\r\n\r\n        self.counts.insert((p1, p2, self.cur_depth), v);\r\n    }\r\n\r\n    fn polymerize(mut self, polymer: &str) -> Vec<usize> {\r\n        polymer\r\n            .as_bytes()\r\n            .windows(2)\r\n            .for_each(|w| self.polymerize_pairs(w[0].into(), w[1].into()));\r\n\r\n        polymer\r\n            .as_bytes()\r\n            .windows(2)\r\n            .fold(vec![0_usize; 128], |acc, key| {\r\n                let mut vec = self\r\n                    .counts\r\n                    .get(&(key[0].into(), key[1].into(), 0_usize))\r\n                    .unwrap();\r\n                vec[key[1] as usize] -= 1;\r\n                acc.into_iter()\r\n                    .zip(vec.iter())\r\n                    .map(|(a, v)| a + v)\r\n                    .collect()\r\n            })\r\n    }\r\n}\r\n\r\npub fn run(input: &'static str) -> (usize, usize) {\r\n    let mut input = input.trim().lines();\r\n    let template = input.next().unwrap();\r\n    let insertions = input\r\n        .skip(1)\r\n        .filter_map(|line| line.split_once(\" -> \"))\r\n        .map(|(k, v)| {\r\n            let k = k.as_bytes();\r\n            (\r\n                (k[0].into(), k[1].into()),\r\n                v.chars().next().unwrap() as usize,\r\n            )\r\n        })\r\n        .collect::<HashMap<_, _>>();\r\n\r\n    let polymer = Polymerizer::new(1, &insertions).polymerize(template);\r\n    eprintln!(\"{:?}\", polymer);\r\n\r\n    let (min, max) = polymer\r\n        .into_iter()\r\n        .filter(|c| *c != 0)\r\n        .fold((usize::MAX, 0), |(min, max), v| (min.min(v), max.max(v)));\r\n    let d14p1 = max - min;\r\n\r\n    let polymer = Polymerizer::new(4, &insertions).polymerize(template);\r\n    eprintln!(\"{:?}\", polymer);\r\n\r\n    let (min, max) = polymer\r\n        .into_iter()\r\n        .filter(|c| *c != 0)\r\n        .fold((usize::MAX, 0), |(min, max), v| (min.min(v), max.max(v)));\r\n    let d14p2 = max - min;\r\n\r\n    (d14p1, d14p2)\r\n}\r\n\r\n#[test]\r\nfn test() {\r\n    let input = \"\r\nNNCB\r\n\r\nCH -> B\r\nHH -> N\r\nCB -> H\r\nNH -> C\r\nHB -> C\r\nHC -> B\r\nHN -> C\r\nNN -> C\r\nBH -> H\r\nNC -> B\r\nNB -> B\r\nBN -> B\r\nBB -> N\r\nBC -> B\r\nCC -> N\r\nCN -> C\r\n\";\r\n    assert_eq!(run(input), (1588, 2188189693529));\r\n}\r\n```\r\n\r\n</details>\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.58.0-nightly (936f2600b 2021-11-22)\r\nbinary: rustc\r\ncommit-hash: 936f2600b6c903b04387f74ed5cbce88bb06d243\r\ncommit-date: 2021-11-22\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.58.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nPlease see Backtrace\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   Compiling aoc2021 v0.1.0 (/home/harshasrisri/Code/rust/aoc/2021)\r\nthread 'rustc' panicked at 'index out of bounds: the len is 2 but the index is 2', compiler/rustc_borrowck/src/diagnostics/mutability_errors.rs:450:53\r\nstack backtrace:\r\n   0:     0x7f106ebb921c - std::backtrace_rs::backtrace::libunwind::trace::h7630ba4cba718aa0\r\n                               at /rustc/936f2600b6c903b04387f74ed5cbce88bb06d243/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7f106ebb921c - std::backtrace_rs::backtrace::trace_unsynchronized::he7498e79c157f5ac\r\n                               at /rustc/936f2600b6c903b04387f74ed5cbce88bb06d243/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f106ebb921c - std::sys_common::backtrace::_print_fmt::hdaebadaee17bca49\r\n                               at /rustc/936f2600b6c903b04387f74ed5cbce88bb06d243/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x7f106ebb921c - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h82b0e3aaf8a96140\r\n                               at /rustc/936f2600b6c903b04387f74ed5cbce88bb06d243/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x7f106ec1614c - core::fmt::write::h72801a82c94e6ff1\r\n                               at /rustc/936f2600b6c903b04387f74ed5cbce88bb06d243/library/core/src/fmt/mod.rs:1149:17\r\n   5:     0x7f106eba99c5 - std::io::Write::write_fmt::hc2da38dc44811df8\r\n                               at /rustc/936f2600b6c903b04387f74ed5cbce88bb06d243/library/std/src/io/mod.rs:1697:15\r\n   6:     0x7f106ebbc3e0 - std::sys_common::backtrace::_print::h1c9a1d19c48821c1\r\n                               at /rustc/936f2600b6c903b04387f74ed5cbce88bb06d243/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x7f106ebbc3e0 - std::sys_common::backtrace::print::h7ce8802039fa9d0e\r\n                               at /rustc/936f2600b6c903b04387f74ed5cbce88bb06d243/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x7f106ebbc3e0 - std::panicking::default_hook::{{closure}}::hb2a74a8c1499c326\r\n                               at /rustc/936f2600b6c903b04387f74ed5cbce88bb06d243/library/std/src/panicking.rs:211:50\r\n   9:     0x7f106ebbbf8b - std::panicking::default_hook::hf4f180b00076f2b2\r\n                               at /rustc/936f2600b6c903b04387f74ed5cbce88bb06d243/library/std/src/panicking.rs:228:9\r\n  10:     0x7f106f353871 - rustc_driver[e620c7401644acc4]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n  11:     0x7f106ebbcbf9 - std::panicking::rust_panic_with_hook::he85ce8435493b711\r\n                               at /rustc/936f2600b6c903b04387f74ed5cbce88bb06d243/library/std/src/panicking.rs:610:17\r\n  12:     0x7f106ebbc6b0 - std::panicking::begin_panic_handler::{{closure}}::h31e15f69e6235bd2\r\n                               at /rustc/936f2600b6c903b04387f74ed5cbce88bb06d243/library/std/src/panicking.rs:502:13\r\n  13:     0x7f106ebb96d4 - std::sys_common::backtrace::__rust_end_short_backtrace::hfce2fadb61aaa3ae\r\n                               at /rustc/936f2600b6c903b04387f74ed5cbce88bb06d243/library/std/src/sys_common/backtrace.rs:139:18\r\n  14:     0x7f106ebbc619 - rust_begin_unwind\r\n                               at /rustc/936f2600b6c903b04387f74ed5cbce88bb06d243/library/std/src/panicking.rs:498:5\r\n  15:     0x7f106eb81621 - core::panicking::panic_fmt::h7b8580d81fcbbacd\r\n                               at /rustc/936f2600b6c903b04387f74ed5cbce88bb06d243/library/core/src/panicking.rs:107:14\r\n  16:     0x7f106eb815e2 - core::panicking::panic_bounds_check::h63650a5dfc9aa86f\r\n                               at /rustc/936f2600b6c903b04387f74ed5cbce88bb06d243/library/core/src/panicking.rs:75:5\r\n  17:     0x7f106f940a1d - <core[cc79c391059f8e46]::option::Option<&rustc_middle[93690e4789d7fe1d]::mir::Location>>::map::<rustc_span[2d5555579096f1fe]::span_encoding::Span, <rustc_borrowck[a407a7ce97bd973b]::MirBorrowckCtxt>::report_mutability_error::{closure#2}>\r\n  18:     0x7f106f956c6f - <rustc_borrowck[a407a7ce97bd973b]::MirBorrowckCtxt>::report_mutability_error\r\n  19:     0x7f1070a84215 - <rustc_borrowck[a407a7ce97bd973b]::MirBorrowckCtxt>::access_place\r\n  20:     0x7f106f95cbb9 - <rustc_borrowck[a407a7ce97bd973b]::MirBorrowckCtxt as rustc_mir_dataflow[aac604db03682c84]::framework::visitor::ResultsVisitor>::visit_statement_before_primary_effect\r\n  21:     0x7f1070a264ff - <rustc_mir_dataflow[aac604db03682c84]::framework::direction::Forward as rustc_mir_dataflow[aac604db03682c84]::framework::direction::Direction>::visit_results_in_block::<rustc_borrowck[a407a7ce97bd973b]::dataflow::BorrowckAnalyses<rustc_index[1c51b78c9996c7d7]::bit_set::BitSet<rustc_borrowck[a407a7ce97bd973b]::dataflow::BorrowIndex>, rustc_index[1c51b78c9996c7d7]::bit_set::BitSet<rustc_mir_dataflow[aac604db03682c84]::move_paths::MovePathIndex>, rustc_index[1c51b78c9996c7d7]::bit_set::BitSet<rustc_mir_dataflow[aac604db03682c84]::move_paths::InitIndex>>, rustc_borrowck[a407a7ce97bd973b]::dataflow::BorrowckAnalyses<rustc_mir_dataflow[aac604db03682c84]::framework::engine::Results<rustc_borrowck[a407a7ce97bd973b]::dataflow::Borrows>, rustc_mir_dataflow[aac604db03682c84]::framework::engine::Results<rustc_mir_dataflow[aac604db03682c84]::impls::MaybeUninitializedPlaces>, rustc_mir_dataflow[aac604db03682c84]::framework::engine::Results<rustc_mir_dataflow[aac604db03682c84]::impls::EverInitializedPlaces>>, rustc_borrowck[a407a7ce97bd973b]::MirBorrowckCtxt>\r\n  22:     0x7f1070a8b950 - rustc_borrowck[a407a7ce97bd973b]::do_mir_borrowck\r\n  23:     0x7f1070a1df16 - <rustc_infer[7163d95876195c41]::infer::InferCtxtBuilder>::enter::<rustc_middle[93690e4789d7fe1d]::mir::query::BorrowCheckResult, rustc_borrowck[a407a7ce97bd973b]::mir_borrowck::{closure#0}>\r\n  24:     0x7f1070a7fc06 - rustc_borrowck[a407a7ce97bd973b]::mir_borrowck\r\n  25:     0x7f1070a7c977 - <rustc_borrowck[a407a7ce97bd973b]::provide::{closure#0} as core[cc79c391059f8e46]::ops::function::FnOnce<(rustc_middle[93690e4789d7fe1d]::ty::context::TyCtxt, rustc_span[2d5555579096f1fe]::def_id::LocalDefId)>>::call_once\r\n  26:     0x7f10717709c3 - <rustc_query_system[efb192c4209e4e11]::dep_graph::graph::DepGraph<rustc_middle[93690e4789d7fe1d]::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle[93690e4789d7fe1d]::ty::context::TyCtxt, rustc_span[2d5555579096f1fe]::def_id::LocalDefId, &rustc_middle[93690e4789d7fe1d]::mir::query::BorrowCheckResult>\r\n  27:     0x7f107172a70e - rustc_data_structures[8eb9d08fbf3883e5]::stack::ensure_sufficient_stack::<(&rustc_middle[93690e4789d7fe1d]::mir::query::BorrowCheckResult, rustc_query_system[efb192c4209e4e11]::dep_graph::graph::DepNodeIndex), rustc_query_system[efb192c4209e4e11]::query::plumbing::execute_job<rustc_query_impl[e405c240d479aca8]::plumbing::QueryCtxt, rustc_span[2d5555579096f1fe]::def_id::LocalDefId, &rustc_middle[93690e4789d7fe1d]::mir::query::BorrowCheckResult>::{closure#3}>\r\n  28:     0x7f1070c002b6 - rustc_query_system[efb192c4209e4e11]::query::plumbing::try_execute_query::<rustc_query_impl[e405c240d479aca8]::plumbing::QueryCtxt, rustc_query_system[efb192c4209e4e11]::query::caches::DefaultCache<rustc_span[2d5555579096f1fe]::def_id::LocalDefId, &rustc_middle[93690e4789d7fe1d]::mir::query::BorrowCheckResult>>\r\n  29:     0x7f1070c90e7e - <rustc_query_impl[e405c240d479aca8]::Queries as rustc_middle[93690e4789d7fe1d]::ty::query::QueryEngine>::mir_borrowck\r\n  30:     0x7f1070585d1d - <rustc_session[cec017cef00f19c9]::session::Session>::time::<(), rustc_interface[f89f8228a4e35bc7]::passes::analysis::{closure#2}>\r\n  31:     0x7f10711f4935 - rustc_interface[f89f8228a4e35bc7]::passes::analysis\r\n  32:     0x7f107178d1e0 - <rustc_query_system[efb192c4209e4e11]::dep_graph::graph::DepGraph<rustc_middle[93690e4789d7fe1d]::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle[93690e4789d7fe1d]::ty::context::TyCtxt, (), core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>\r\n  33:     0x7f1071725a63 - rustc_data_structures[8eb9d08fbf3883e5]::stack::ensure_sufficient_stack::<(core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>, rustc_query_system[efb192c4209e4e11]::dep_graph::graph::DepNodeIndex), rustc_query_system[efb192c4209e4e11]::query::plumbing::execute_job<rustc_query_impl[e405c240d479aca8]::plumbing::QueryCtxt, (), core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>::{closure#3}>\r\n  34:     0x7f107168eb16 - rustc_query_system[efb192c4209e4e11]::query::plumbing::try_execute_query::<rustc_query_impl[e405c240d479aca8]::plumbing::QueryCtxt, rustc_query_system[efb192c4209e4e11]::query::caches::DefaultCache<(), core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>>\r\n  35:     0x7f10716f7275 - rustc_query_system[efb192c4209e4e11]::query::plumbing::get_query::<rustc_query_impl[e405c240d479aca8]::queries::analysis, rustc_query_impl[e405c240d479aca8]::plumbing::QueryCtxt>\r\n  36:     0x7f10711ec149 - <rustc_interface[f89f8228a4e35bc7]::passes::QueryContext>::enter::<rustc_driver[e620c7401644acc4]::run_compiler::{closure#1}::{closure#2}::{closure#3}, core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>\r\n  37:     0x7f10711d98b4 - <rustc_interface[f89f8228a4e35bc7]::interface::Compiler>::enter::<rustc_driver[e620c7401644acc4]::run_compiler::{closure#1}::{closure#2}, core[cc79c391059f8e46]::result::Result<core[cc79c391059f8e46]::option::Option<rustc_interface[f89f8228a4e35bc7]::queries::Linker>, rustc_errors[c8a333c965fedc03]::ErrorReported>>\r\n  38:     0x7f10711c9ded - rustc_span[2d5555579096f1fe]::with_source_map::<core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>, rustc_interface[f89f8228a4e35bc7]::interface::create_compiler_and_run<core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>, rustc_driver[e620c7401644acc4]::run_compiler::{closure#1}>::{closure#1}>\r\n  39:     0x7f10711eb18a - rustc_interface[f89f8228a4e35bc7]::interface::create_compiler_and_run::<core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>, rustc_driver[e620c7401644acc4]::run_compiler::{closure#1}>\r\n  40:     0x7f10711cd3ab - <scoped_tls[3fea4c3dcac147b1]::ScopedKey<rustc_span[2d5555579096f1fe]::SessionGlobals>>::set::<rustc_interface[f89f8228a4e35bc7]::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface[f89f8228a4e35bc7]::interface::run_compiler<core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>, rustc_driver[e620c7401644acc4]::run_compiler::{closure#1}>::{closure#0}, core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>::{closure#0}::{closure#0}, core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>\r\n  41:     0x7f10711cc485 - std[a3bc703e0d1c3409]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[f89f8228a4e35bc7]::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface[f89f8228a4e35bc7]::interface::run_compiler<core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>, rustc_driver[e620c7401644acc4]::run_compiler::{closure#1}>::{closure#0}, core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>::{closure#0}, core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>\r\n  42:     0x7f10711ec72a - <<std[a3bc703e0d1c3409]::thread::Builder>::spawn_unchecked<rustc_interface[f89f8228a4e35bc7]::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface[f89f8228a4e35bc7]::interface::run_compiler<core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>, rustc_driver[e620c7401644acc4]::run_compiler::{closure#1}>::{closure#0}, core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>::{closure#0}, core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>::{closure#1} as core[cc79c391059f8e46]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  43:     0x7f106ebc7ea3 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::he162a5c338a10a39\r\n                               at /rustc/936f2600b6c903b04387f74ed5cbce88bb06d243/library/alloc/src/boxed.rs:1694:9\r\n  44:     0x7f106ebc7ea3 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hb27497b21740dd97\r\n                               at /rustc/936f2600b6c903b04387f74ed5cbce88bb06d243/library/alloc/src/boxed.rs:1694:9\r\n  45:     0x7f106ebc7ea3 - std::sys::unix::thread::Thread::new::thread_start::he467e990e49c5136\r\n                               at /rustc/936f2600b6c903b04387f74ed5cbce88bb06d243/library/std/src/sys/unix/thread.rs:106:17\r\n  46:     0x7f106eae3259 - start_thread\r\n  47:     0x7f106e9f85e3 - __GI___clone\r\n  48:                0x0 - <unknown>\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.58.0-nightly (936f2600b 2021-11-22) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [mir_borrowck] borrow-checking `day14::<impl at src/day14.rs:13:1: 77:2>::polymerize::{closure#1}`\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: could not compile `aoc2021`\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "harshasrisri", "id": 750691, "node_id": "MDQ6VXNlcjc1MDY5MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/750691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshasrisri", "html_url": "https://github.com/harshasrisri", "followers_url": "https://api.github.com/users/harshasrisri/followers", "following_url": "https://api.github.com/users/harshasrisri/following{/other_user}", "gists_url": "https://api.github.com/users/harshasrisri/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshasrisri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshasrisri/subscriptions", "organizations_url": "https://api.github.com/users/harshasrisri/orgs", "repos_url": "https://api.github.com/users/harshasrisri/repos", "events_url": "https://api.github.com/users/harshasrisri/events{/privacy}", "received_events_url": "https://api.github.com/users/harshasrisri/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92172/timeline", "performed_via_github_app": null, "state_reason": "completed"}