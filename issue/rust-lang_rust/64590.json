{"url": "https://api.github.com/repos/rust-lang/rust/issues/64590", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64590/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64590/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64590/events", "html_url": "https://github.com/rust-lang/rust/issues/64590", "id": 495472311, "node_id": "MDU6SXNzdWU0OTU0NzIzMTE=", "number": 64590, "title": "Confusing 'unreachable code' error message when macro is involved", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-18T21:50:53Z", "updated_at": "2019-09-20T02:43:01Z", "closed_at": "2019-09-20T02:43:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This code:\r\n\r\n```rust\r\nmacro_rules! early_return {\r\n    () => {\r\n        return ()\r\n    }\r\n}\r\n\r\nfn main() {\r\n    return early_return!();\r\n}\r\n```\r\n\r\nGives the following warning:\r\n\r\n```\r\nwarning: unreachable expression\r\n --> src/main.rs:8:5\r\n  |\r\n8 |     return early_return!();\r\n  |     ^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: #[warn(unreachable_code)] on by default\r\n\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.40s\r\n     Running `target/debug/playground`\r\n```\r\n\r\nThis warning is misleading - it suggests that the entire `return` statement, including the call to `early_return!()` is unreachable.\r\n\r\nThis also occurs in the more 'obviously wrong' case of:\r\n\r\n```rust\r\nfn main() {\r\n    return return;\r\n}\r\n```\r\n\r\n\r\n\r\nIn general, it could be hard to decide what kind of warning message to generate. I think there are two things we could do to improve error messages in most cases:\r\n\r\n1. If the root cause of the unreachable lint (e.g. whatever produces a `!`) was generated by a macro, explicitly indicate this in the warning. This should help make it clear to the user that there is hidden control flow going on.\r\n2. Add special handling for `return` statements. If possible, try to detect that the cause of the unreachability was 'inside' of the `return`, and add a note pointing directly at it (e.g. 'the expression <foo>' unconditionally diverges')", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64590/timeline", "performed_via_github_app": null, "state_reason": "completed"}