{"url": "https://api.github.com/repos/rust-lang/rust/issues/1084", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/1084/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/1084/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/1084/events", "html_url": "https://github.com/rust-lang/rust/issues/1084", "id": 2075482, "node_id": "MDU6SXNzdWUyMDc1NDgy", "number": 1084, "title": "Floating point comparisons in Rust do not follow IEEE 754", "user": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-10-28T03:59:30Z", "updated_at": "2011-10-28T21:54:18Z", "closed_at": "2011-10-28T21:54:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For example, (NaN == NaN) is true in Rust but false in IEEE 754.  As explained in #1083, this is intentional and the goal is to make `==` and `<` act consistently so that NaN can be used as a key in ordered collections, for example.\n\nOne downside of this is that programmers cannot apply knowledge or techniques learned from languages like Java or JavaScript that use IEEE 754 floating-point arithmetic.\n\nAnother problem is that differences between Rust and IEEE 754 are not specified, and do not appear to be implemented consistently.  This makes it hard to know what to expect from Rust.  Issue #1083 lists more problems with the current Rust semantics of NaN, but it is not clear which are intentional and which are not.\n\nIf this issue is closed as WONTFIX, then we should instead open a new issue to document Rust's floating point semantics.\n", "closed_by": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/1084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/1084/timeline", "performed_via_github_app": null, "state_reason": "completed"}