{"url": "https://api.github.com/repos/rust-lang/rust/issues/95871", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95871/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95871/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95871/events", "html_url": "https://github.com/rust-lang/rust/issues/95871", "id": 1198839806, "node_id": "I_kwDOAAsO6M5HdNf-", "number": 95871, "title": "Wrong code generation in core library with ROPI-RWPI relocation model on ARMv7em.", "user": {"login": "Acciente717", "id": 24835541, "node_id": "MDQ6VXNlcjI0ODM1NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/24835541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Acciente717", "html_url": "https://github.com/Acciente717", "followers_url": "https://api.github.com/users/Acciente717/followers", "following_url": "https://api.github.com/users/Acciente717/following{/other_user}", "gists_url": "https://api.github.com/users/Acciente717/gists{/gist_id}", "starred_url": "https://api.github.com/users/Acciente717/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Acciente717/subscriptions", "organizations_url": "https://api.github.com/users/Acciente717/orgs", "repos_url": "https://api.github.com/users/Acciente717/repos", "events_url": "https://api.github.com/users/Acciente717/events{/privacy}", "received_events_url": "https://api.github.com/users/Acciente717/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 55301954, "node_id": "MDU6TGFiZWw1NTMwMTk1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-Arm", "name": "O-Arm", "color": "6e6ec0", "default": false, "description": "Target: 32-bit Arm processors (armv6, armv7, thumb...), including 64-bit Arm in AArch32 state"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2022-04-10T02:08:08Z", "updated_at": "2022-04-30T11:50:52Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "### TL; DR version:\r\nWhen targeting `thumbv7em-none-eabi` with `ropi-rwpi` relocation model, some generated instructions in `core::fmt::num` are wrong. The below naive example won't work in the **debug** build.\r\n```rust\r\n#[no_mangle]\r\npub extern \"C\" fn main() -> ! {\r\n    // It prints out \"2;\", not \"256\".\r\n    hprintln!(\"{}\", 256);  // ARM semihosting print.\r\n    loop {}\r\n}\r\n```\r\n\r\nTo reproduce, see the repo below:\r\nhttps://github.com/Acciente717/ropi-rwpi-err-demo\r\n\r\n### Detailed version:\r\nTracking down with GDB, the wrong instructions are in `_ZN4core3fmt3num3imp7fmt_u32#hash`. The corresponding rust source code is [here](https://github.com/rust-lang/rust/blob/3ea44938e21f0de8ae7d4f6399a8a30f97867c70/library/core/src/fmt/num.rs#L211-L274).\r\n\r\nThe specific Rust statement leading to wrong instructions is:\r\n```rust\r\nstatic DEC_DIGITS_LUT: &[u8; 200] = b\"0001020304050607080910111213141516171819\\\r\n      2021222324252627282930313233343536373839\\\r\n      4041424344454647484950515253545556575859\\\r\n      6061626364656667686970717273747576777879\\\r\n      8081828384858687888990919293949596979899\";\r\n\r\nlet lut_ptr = DEC_DIGITS_LUT.as_ptr();\r\n```\r\n\r\nThe wrong instructions are:\r\n```\r\n805b322:  f243 7124   movw  r1, #14116    ; 0x3724\r\n805b326:  f2c0 0101   movt  r1, #1\r\n805b32a:  4648        mov   r0, r9\r\n805b32c:  5840        ldr   r0, [r0, r1]\r\n805b32e:  21c8        movs  r1, #200    ; 0xc8\r\n805b330:  f003 fc29   bl    805eb86 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h58e80ef4ecfdc5b4E>\r\n```\r\n\r\n#### Why is it wrong?\r\nIn ROPI-RWPI relocation model, read-only data should be stored in Flash, and is accessed by PC-relative addressing. Read-write data should be stored in SRAM, and is accessed by R9-relative addressing. R9 is reserved for this purpose in RWPI, and is called the \"static base\".\r\n\r\n`DEC_DIGITS_LUT` is read-only, but the generated code uses R9-relative addressing. It is essentially accessing some wild memory.\r\n\r\n#### Do you have a minimal example?\r\nUnfortunately, no. As can be seen in the GitHub repo linked above, I tried to pull out the function from `core` and compile it alone. But this time, the compiler gives out the correct instructions:\r\n```\r\n80007d2:  f241 504a   movw  r0, #5450    ; 0x154a\r\n80007d6:  f2c0 0006   movt  r0, #6\r\n80007da:  4478        add   r0, pc\r\n80007dc:  6800        ldr   r0, [r0, #0]\r\n80007de:  21c8        movs  r1, #200    ; 0xc8\r\n80007e0:  f05e f9d1   bl    805eb86 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h58e80ef4ecfdc5b4E>\r\n```\r\n\r\nI have no idea how to fix the bug by myself, but I would like to participate in diagnosing and get it fixed as soon as possible.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.62.0-nightly (f4a7ce997 2022-04-08)\r\nbinary: rustc\r\ncommit-hash: f4a7ce997a1d7546d2b737f8b87d36907bcea2ad\r\ncommit-date: 2022-04-08\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.62.0-nightly\r\nLLVM version: 14.0.0\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95871/timeline", "performed_via_github_app": null, "state_reason": null}