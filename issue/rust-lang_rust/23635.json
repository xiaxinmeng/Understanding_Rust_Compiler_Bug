{"url": "https://api.github.com/repos/rust-lang/rust/issues/23635", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/23635/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/23635/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/23635/events", "html_url": "https://github.com/rust-lang/rust/issues/23635", "id": 63702011, "node_id": "MDU6SXNzdWU2MzcwMjAxMQ==", "number": 23635, "title": "Unable to create a range to max value, e.g. `100..256` for a `Range<u8>`", "user": {"login": "samdoshi", "id": 112490, "node_id": "MDQ6VXNlcjExMjQ5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/112490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samdoshi", "html_url": "https://github.com/samdoshi", "followers_url": "https://api.github.com/users/samdoshi/followers", "following_url": "https://api.github.com/users/samdoshi/following{/other_user}", "gists_url": "https://api.github.com/users/samdoshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/samdoshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samdoshi/subscriptions", "organizations_url": "https://api.github.com/users/samdoshi/orgs", "repos_url": "https://api.github.com/users/samdoshi/repos", "events_url": "https://api.github.com/users/samdoshi/events{/privacy}", "received_events_url": "https://api.github.com/users/samdoshi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-03-23T11:34:02Z", "updated_at": "2016-06-06T18:57:03Z", "closed_at": "2016-06-06T18:57:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "How is one supposed to create a range which includes the maximum value as it's upper bound?\n\nE.g. if I wish to create the range 100 to 255 inclusive for a `u8`, I need use the notation `100..256`:\n\n``` rust\nfn main() {\n    let r: std::ops::Range<u8> = 100..256;\n    println!(\"{:?}\", r);\n}\n```\n\nThe output of which is:\n\n```\n100..0\n```\n\n(we do get a warning when we compile though)\n\n```\ntest.rs:2:39: 2:42 warning: literal out of range for u8, #[warn(overflowing_literals)] on by default\ntest.rs:2     let r: std::ops::Range<u8> = 100..256;\n                                                ^~~\n```\n\nI understand why this is happening based on the implementation of Range, and I'm not sure how one would fix it without changing Range to use an inclusive upper bound (even if the notation stays as is). Maybe a better warning might be of use if I can't be solved?\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/23635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/23635/timeline", "performed_via_github_app": null, "state_reason": "completed"}