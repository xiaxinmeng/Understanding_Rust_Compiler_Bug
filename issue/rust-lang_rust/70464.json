{"url": "https://api.github.com/repos/rust-lang/rust/issues/70464", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70464/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70464/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70464/events", "html_url": "https://github.com/rust-lang/rust/issues/70464", "id": 589050501, "node_id": "MDU6SXNzdWU1ODkwNTA1MDE=", "number": 70464, "title": "Type inference + compiler message problems with closures and array of Option<&str>", "user": {"login": "Luro02", "id": 24826124, "node_id": "MDQ6VXNlcjI0ODI2MTI0", "avatar_url": "https://avatars.githubusercontent.com/u/24826124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Luro02", "html_url": "https://github.com/Luro02", "followers_url": "https://api.github.com/users/Luro02/followers", "following_url": "https://api.github.com/users/Luro02/following{/other_user}", "gists_url": "https://api.github.com/users/Luro02/gists{/gist_id}", "starred_url": "https://api.github.com/users/Luro02/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Luro02/subscriptions", "organizations_url": "https://api.github.com/users/Luro02/orgs", "repos_url": "https://api.github.com/users/Luro02/repos", "events_url": "https://api.github.com/users/Luro02/events{/privacy}", "received_events_url": "https://api.github.com/users/Luro02/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-27T10:56:27Z", "updated_at": "2020-08-11T07:10:03Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nfn main() {\r\n    let array: [Option<&str>; 10] = [None; 10];\r\n\r\n    String::with_capacity(\r\n        16 + array[0].unwrap().len()\r\n            + array\r\n                .iter()\r\n                .skip(1)\r\n                .flat_map(|&o| o)\r\n                .map(|s: &str| s.len())\r\n                .map(|s: usize| s + 4)\r\n                .sum(),\r\n    );\r\n}\r\n```\r\n\r\nI expected to see this happen: it should allocate a string with the size of 16 + the length of the first string + the length of all other elements + 4\r\n\r\nInstead, this happened:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0284]: type annotations needed for `usize`\r\n  --> src/main.rs:11:23\r\n   |\r\n11 |                 .map(|s: usize| s + 4)\r\n   |                       ^ consider giving this closure parameter a type\r\n   |\r\n   = note: cannot resolve `<usize as std::ops::Add<_>>::Output == usize`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0284`.\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nOkay this message is kind of wrong? I mean my type is `usize` and the compiler seems to know that so what should I annotate? (I think it wants me to annotate the `s + 4` which desugars to `s.add(4)`)\r\n\r\n[playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&code=fn%20main()%20%7B%0A%20%20%20%20let%20array%3A%20%5BOption%3C%26str%3E%3B%2010%5D%20%3D%20%5BNone%3B%2010%5D%3B%0A%0A%20%20%20%20String%3A%3Awith_capacity(%0A%20%20%20%20%20%20%20%2016%20%2B%20array%5B0%5D.unwrap().len()%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20array%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.iter()%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.skip(1)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.flat_map(%7C%26o%7C%20o)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.map(%7Cs%3A%20%26str%7C%20s.len())%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.map(%7Cs%3A%20usize%7C%20s%20%2B%204)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.sum()%2C%0A%20%20%20%20)%3B%0A%7D%0A)\r\n\r\n----\r\n\r\nInitially I started with something like this\r\n\r\n```rust\r\nfn main() {\r\n    let array: [Option<&str>; 10] = [None; 10];\r\n\r\n    String::with_capacity(\r\n        16 + array[0].unwrap().len()\r\n        + array\r\n            .iter()\r\n            .skip(1)\r\n            .flat_map(|&o| o)\r\n            .map(|s| s.len() + 4)\r\n            .sum(),\r\n    );\r\n}\r\n```\r\n\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0284]: type annotations needed for `[std::option::Option<&str>; 10]`\r\n --> src/main.rs:6:9\r\n  |\r\n2 |     let array: [Option<&str>; 10] = [None; 10];\r\n  |         ----- consider giving `array` the explicit type `[std::option::Option<&str>; 10]`, where the type parameter `usize` is specified\r\n...\r\n6 |         + array\r\n  |         ^ cannot infer type for type `usize`\r\n  |\r\n  = note: cannot resolve `<usize as std::ops::Add<_>>::Output == usize`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0284`.\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n[playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&code=fn%20main()%20%7B%0A%20%20%20%20let%20array%3A%20%5BOption%3C%26str%3E%3B%2010%5D%20%3D%20%5BNone%3B%2010%5D%3B%0A%0A%20%20%20%20String%3A%3Awith_capacity(%0A%20%20%20%20%20%20%20%2016%20%2B%20array%5B0%5D.unwrap().len()%0A%20%20%20%20%20%20%20%20%2B%20array%0A%20%20%20%20%20%20%20%20%20%20%20%20.iter()%0A%20%20%20%20%20%20%20%20%20%20%20%20.skip(1)%0A%20%20%20%20%20%20%20%20%20%20%20%20.flat_map(%7C%26o%7C%20o)%0A%20%20%20%20%20%20%20%20%20%20%20%20.map(%7Cs%7C%20s.len()%20%2B%204)%0A%20%20%20%20%20%20%20%20%20%20%20%20.sum()%2C%0A%20%20%20%20)%3B%0A%7D%0A)\r\n\r\n\r\nEdit: To make the example compile you have to annotate the sum call (`.sum::<usize>()`) [playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&code=fn%20main()%20%7B%0A%20%20%20%20let%20array%3A%20%5BOption%3C%26str%3E%3B%2010%5D%20%3D%20%5BNone%3B%2010%5D%3B%0A%0A%20%20%20%20String%3A%3Awith_capacity(%0A%20%20%20%20%20%20%20%2016_usize%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20array%5B0%5D.unwrap().len()%0A%20%20%20%20%20%20%20%20%20%20%20%20%2B%20array%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.iter()%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.skip(1)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.flat_map(%7C%26o%7C%20o)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.map(%7Cs%3A%20%26str%7C%20s.len())%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.map(%7Cs%3A%20usize%7C%20s%20%2B%204)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20.sum%3A%3A%3Cusize%3E()%2C%0A%20%20%20%20)%3B%0A%7D%0A)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70464/timeline", "performed_via_github_app": null, "state_reason": null}