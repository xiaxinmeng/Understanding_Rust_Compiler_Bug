{"url": "https://api.github.com/repos/rust-lang/rust/issues/72806", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72806/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72806/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72806/events", "html_url": "https://github.com/rust-lang/rust/issues/72806", "id": 627886826, "node_id": "MDU6SXNzdWU2Mjc4ODY4MjY=", "number": 72806, "title": "Wrong obligation cause span of associated type mismatch", "user": {"login": "xiaotianrandom", "id": 1596825, "node_id": "MDQ6VXNlcjE1OTY4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1596825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiaotianrandom", "html_url": "https://github.com/xiaotianrandom", "followers_url": "https://api.github.com/users/xiaotianrandom/followers", "following_url": "https://api.github.com/users/xiaotianrandom/following{/other_user}", "gists_url": "https://api.github.com/users/xiaotianrandom/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiaotianrandom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiaotianrandom/subscriptions", "organizations_url": "https://api.github.com/users/xiaotianrandom/orgs", "repos_url": "https://api.github.com/users/xiaotianrandom/repos", "events_url": "https://api.github.com/users/xiaotianrandom/events{/privacy}", "received_events_url": "https://api.github.com/users/xiaotianrandom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1624891239, "node_id": "MDU6TGFiZWwxNjI0ODkxMjM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-incorrect", "name": "D-incorrect", "color": "c9f7a3", "default": false, "description": "A diagnostic that is giving misleading or incorrect information"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-31T04:05:20Z", "updated_at": "2020-06-01T00:29:41Z", "closed_at": "2020-06-01T00:29:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Bug\r\n\r\nThe following case ([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=074a0b0c7c96ae12ff9d48104d6e6285)) is slightly modifed based on that in #57663.\r\n\r\n```rust\r\ntrait Bar {\r\n    type Ok;\r\n    type Sibling: Bar2<Ok=char>; // Here is modified, not using Self::Ok anymore\r\n}\r\ntrait Bar2 {\r\n    type Ok;\r\n}\r\n\r\nstruct Foo;\r\nstruct Foo2;\r\n\r\nimpl Bar for Foo {\r\n    type Ok = ();\r\n    type Sibling = Foo2;\r\n}\r\nimpl Bar2 for Foo2 {\r\n    type Ok = u32;\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\nError:\r\n\r\n```\r\nerror[E0271]: type mismatch resolving `<Foo2 as Bar2>::Ok == char`\r\n  --> src/main.rs:13:15\r\n   |\r\n13 |     type Ok = ();\r\n   |               ^^ expected `u32`, found `char`\r\n```\r\n\r\nThis is wrong. It points to `<Foo as Bar>::Ok`, which is not related to the error. `<Foo as Bar>::Ok` just happens to have the same identifier as the mismatched associated type `Bar2::Ok`. If I change the identifier in this line to something else ([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=c8cc98e279d95bed716967de5a41ac76)), the error changes to the following. It is still not clear, but at least not that wrong.\r\n\r\n```\r\nerror[E0271]: type mismatch resolving `<Foo2 as Bar2>::Ok == char`\r\n  --> src/main.rs:12:6\r\n   |\r\n12 | impl Bar for Foo {\r\n   |      ^^^ expected `u32`, found `char`\r\n```\r\n\r\n### Cause\r\n\r\nThis is introduced by the PR #65288. The PR tries to make compile errors of associated type mismatch more informative. For an obligation related to a `ty::ProjectionPredicate`, the PR ([these lines](https://github.com/rust-lang/rust/pull/65288/files#diff-a08e8a5bc604df467fdec291a4a38544R224-R233)) iterates over associated types in the current `impl` (`impl Bar for Foo` in this case) and looks for one having the same identifier as the projected item (`Bar2::Ok` in this case). This is wrong and leads to the bug above. It just happens to work for the case in #57663, because in that case `Bar` requires `type Sibling: Bar2<Ok=Self::Ok>` and the two associated types have the same name `Ok`.\r\n\r\nPR #69793 refactors this code, adding a new branch ([here](https://github.com/rust-lang/rust/pull/69793/files#diff-236fd1c050048463d34c039bc71b21acR169-R179)) to look for `ProjectionPredicate::ty` instead (`char` in this case, not an associated type). This would work correctly for both this case and #57633. But this PR does not remove the old logic.\r\n\r\n### PR\r\nI tried to delete the wrong branch and confirmed that all test cases passed as before. I will create a PR for that change shortly.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72806/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72806/timeline", "performed_via_github_app": null, "state_reason": "completed"}