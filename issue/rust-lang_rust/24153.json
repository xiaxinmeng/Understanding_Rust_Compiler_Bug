{"url": "https://api.github.com/repos/rust-lang/rust/issues/24153", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/24153/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/24153/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/24153/events", "html_url": "https://github.com/rust-lang/rust/issues/24153", "id": 66897761, "node_id": "MDU6SXNzdWU2Njg5Nzc2MQ==", "number": 24153, "title": "Feature request: publish and maintain a copy of libarena on crates.io", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-07T14:17:10Z", "updated_at": "2015-04-11T17:18:28Z", "closed_at": "2015-04-11T17:18:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See https://www.reddit.com/r/rust/comments/31qhyu/using_arena_in_beta/ . I\u2019ve also wanted this myself.\n\nRemoving usage of unstable features would be tricky, but hopefully not impossible. For `alloc` in particular, a work-around I\u2019ve used is:\n\n``` rust\nfn allocate<T>(n: usize) -> *mut T {\n    let vec = Vec::with_capacity(n);\n    let ptr = vec.as_mut_ptr();\n    unsafe { std::mem::forget(vec) };\n    ptr\n}\n\nfn deallocate<T>(ptr: *mut T, n: usize) {\n    Vec::from_raw_parts(ptr, 0, n)  // let it drop\n}\n```\n", "closed_by": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/24153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/24153/timeline", "performed_via_github_app": null, "state_reason": "completed"}