{"url": "https://api.github.com/repos/rust-lang/rust/issues/69932", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69932/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69932/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69932/events", "html_url": "https://github.com/rust-lang/rust/issues/69932", "id": 579472981, "node_id": "MDU6SXNzdWU1Nzk0NzI5ODE=", "number": 69932, "title": "ICE on inconsistent resolution for a macro", "user": {"login": "Kixiron", "id": 25047011, "node_id": "MDQ6VXNlcjI1MDQ3MDEx", "avatar_url": "https://avatars.githubusercontent.com/u/25047011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kixiron", "html_url": "https://github.com/Kixiron", "followers_url": "https://api.github.com/users/Kixiron/followers", "following_url": "https://api.github.com/users/Kixiron/following{/other_user}", "gists_url": "https://api.github.com/users/Kixiron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kixiron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kixiron/subscriptions", "organizations_url": "https://api.github.com/users/Kixiron/orgs", "repos_url": "https://api.github.com/users/Kixiron/repos", "events_url": "https://api.github.com/users/Kixiron/events{/privacy}", "received_events_url": "https://api.github.com/users/Kixiron/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-11T18:46:59Z", "updated_at": "2020-03-11T21:08:51Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "### Code\r\n\r\nThe code is rather long and complicated, and I unfortunately don't have the time or will to attempt reduction as of now, so I committed it as-is to [this file](https://github.com/Kixiron/tagged-box/blob/563c864320a7f613db2961d87666215193e59beb/src/tagged_box_macro.rs).\r\nMy conjecture takes some setup, so bear with me. My code involves meta-macros, or macros that create other macros. While debugging said meta-macro, I had an expanded version of it already in the source file, so something clashed there.\r\nTo encounter the ICE I simply ran `cargo test`\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.41.1 (f3e1a954d 2020-02-24)\r\nbinary: rustc\r\ncommit-hash: f3e1a954d2ead4e2fc197c7da7d71e6c61bad196\r\ncommit-date: 2020-02-24\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.41.1\r\nLLVM version: 9.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n>cargo t\r\n    Blocking waiting for file lock on build directory\r\n   Compiling tagged-box v0.1.1 (G:\\LocalFileServer\\Programming\\Rust\\tagged-box)\r\nerror: a macro named `__expand_tuple` has already been exported\r\n   --> src\\tagged_box_macro.rs:571:9\r\n    |\r\n571 | /         macro_rules! __expand_tuple {\r\n572 | |             $( $finished )*\r\n573 | |         }\r\n    | |_________^ `__expand_tuple` already exported\r\n...\r\n577 | / generate_tuple_expansion! {\r\n578 | |     ($, others)\r\n579 | |     (0, a), (1, b), (2, c), (3, d),\r\n580 | |     (4, e), (5, f), (6, g), (7, h),\r\n...   |\r\n586 | |     (28, cc), (29, dd), (30, ee), (31, ff)\r\n587 | | }\r\n    | |_- in this macro invocation\r\n    |\r\nnote: previous macro export is now shadowed\r\n   --> src\\tagged_box_macro.rs:591:1\r\n    |\r\n591 | / macro_rules! __expand_tuple {\r\n592 | |     ($variant:path) => {\r\n593 | |         $variant()\r\n594 | |     };\r\n...   |\r\n797 | |     };\r\n798 | | }\r\n    | |_^\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `tagged-box`.\r\nwarning: build failed, waiting for other jobs to finish...\r\nerror: a macro named `__expand_tuple` has already been exported\r\n   --> src\\tagged_box_macro.rs:571:9\r\n    |\r\n571 | /         macro_rules! __expand_tuple {\r\n572 | |             $( $finished )*\r\n573 | |         }\r\n    | |_________^ `__expand_tuple` already exported\r\n...\r\n577 | / generate_tuple_expansion! {\r\n578 | |     ($, others)\r\n579 | |     (0, a), (1, b), (2, c), (3, d),\r\n580 | |     (4, e), (5, f), (6, g), (7, h),\r\n...   |\r\n586 | |     (28, cc), (29, dd), (30, ee), (31, ff)\r\n587 | | }\r\n    | |_- in this macro invocation\r\n    |\r\nnote: previous macro export is now shadowed\r\n   --> src\\tagged_box_macro.rs:591:1\r\n    |\r\n591 | / macro_rules! __expand_tuple {\r\n592 | |     ($variant:path) => {\r\n593 | |         $variant()\r\n594 | |     };\r\n...   |\r\n797 | |     };\r\n798 | | }\r\n    | |_^\r\n\r\nerror: unexpected end of macro invocation\r\n   --> src\\tagged_box_macro.rs:904:68\r\n    |\r\n571 |         macro_rules! __expand_tuple {\r\n    |         --------------------------- when calling this macro\r\n...\r\n904 |                     $crate::__expand_tuple!($enum::$variant, tuple, $($ty),*)\r\n    |                                                                    ^ missing tokens in macro arguments\r\n\r\nerror: unknown macro variable `tagged`\r\n    --> src\\tagged_box_macro.rs:545:98\r\n     |\r\n545  |                       let $tuple = $dollar crate::TaggedBox::into_inner::<$dollar variant>($dollar tagged);\r\n     |  __________________________________________________________________________________________________^\r\n546  | |                     $dollar variant($( $access )* $dollar $tuple . $field)\r\n547  | |                 }};\r\n548  | |             ]\r\n...    |\r\n577  | | generate_tuple_expansion! {\r\n578  | |     ($, others)\r\n     | |_____^ unknown macro variable\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: unknown macro variable `tuple`\r\n    --> src\\tagged_box_macro.rs:516:39\r\n     |\r\n516  |               @inner ($dollar, $others, tuple)\r\n     |  _______________________________________^\r\n517  | |             [\r\n518  | |                 // ($variant:path) => {\r\n519  | |                 //     $variant()\r\n...    |\r\n577  | | generate_tuple_expansion! {\r\n578  | |     ($, others)\r\n     | |_____^ unknown macro variable\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: expected expression, found `.`\r\n    --> src\\tagged_box_macro.rs:550:44\r\n     |\r\n550  |               [ $( $access )* $dollar $tuple . $field, ]\r\n     |                                              ^ expected expression\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: unexpected end of macro invocation\r\n   --> src\\tagged_box_macro.rs:826:78\r\n    |\r\n571 |         macro_rules! __expand_tuple {\r\n    |         --------------------------- when calling this macro\r\n...\r\n826 |                 let variant = $crate::__expand_tuple!($enum::$variant, tuple, $($ty),*);\r\n    |                                                                              ^ missing tokens in macro arguments\r\n\r\nerror: unknown macro variable `tagged`\r\n    --> src\\tagged_box_macro.rs:545:98\r\n     |\r\n545  |                       let $tuple = $dollar crate::TaggedBox::into_inner::<$dollar variant>($dollar tagged);\r\n     |  __________________________________________________________________________________________________^\r\n546  | |                     $dollar variant($( $access )* $dollar $tuple . $field)\r\n547  | |                 }};\r\n548  | |             ]\r\n...    |\r\n577  | | generate_tuple_expansion! {\r\n578  | |     ($, others)\r\n     | |_____^ unknown macro variable\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: unknown macro variable `tuple`\r\n    --> src\\tagged_box_macro.rs:516:39\r\n     |\r\n516  |               @inner ($dollar, $others, tuple)\r\n     |  _______________________________________^\r\n517  | |             [\r\n518  | |                 // ($variant:path) => {\r\n519  | |                 //     $variant()\r\n...    |\r\n577  | | generate_tuple_expansion! {\r\n578  | |     ($, others)\r\n     | |_____^ unknown macro variable\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: expected expression, found `.`\r\n    --> src\\tagged_box_macro.rs:550:44\r\n     |\r\n550  |               [ $( $access )* $dollar $tuple . $field, ]\r\n     |                                              ^ expected expression\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: unexpected end of macro invocation\r\n   --> src\\tagged_box_macro.rs:991:68\r\n    |\r\n571 |         macro_rules! __expand_tuple {\r\n    |         --------------------------- when calling this macro\r\n...\r\n991 |                     $crate::__expand_tuple!($enum::$variant, tuple, $( $ty ),*)\r\n    |                                                                    ^ missing tokens in macro arguments\r\n\r\nerror: unknown macro variable `tagged`\r\n    --> src\\tagged_box_macro.rs:545:98\r\n     |\r\n545  |                       let $tuple = $dollar crate::TaggedBox::into_inner::<$dollar variant>($dollar tagged);\r\n     |  __________________________________________________________________________________________________^\r\n546  | |                     $dollar variant($( $access )* $dollar $tuple . $field)\r\n547  | |                 }};\r\n548  | |             ]\r\n...    |\r\n577  | | generate_tuple_expansion! {\r\n578  | |     ($, others)\r\n     | |_____^ unknown macro variable\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: unknown macro variable `tuple`\r\n    --> src\\tagged_box_macro.rs:516:39\r\n     |\r\n516  |               @inner ($dollar, $others, tuple)\r\n     |  _______________________________________^\r\n517  | |             [\r\n518  | |                 // ($variant:path) => {\r\n519  | |                 //     $variant()\r\n...    |\r\n577  | | generate_tuple_expansion! {\r\n578  | |     ($, others)\r\n     | |_____^ unknown macro variable\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: expected expression, found `.`\r\n    --> src\\tagged_box_macro.rs:550:44\r\n     |\r\n550  |               [ $( $access )* $dollar $tuple . $field, ]\r\n     |                                              ^ expected expression\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: unexpected end of macro invocation\r\n    --> src\\tagged_box_macro.rs:1108:111\r\n     |\r\n571  |         macro_rules! __expand_tuple {\r\n     |         --------------------------- when calling this macro\r\n...\r\n1108 |                     let variant = core::mem::ManuallyDrop::new($crate::__expand_tuple!($enum::$variant, tuple, $($ty),*));\r\n     |                                                                                                               ^ missing tokens in macro arguments\r\n\r\nerror: unknown macro variable `tagged`\r\n    --> src\\tagged_box_macro.rs:545:98\r\n     |\r\n545  |                       let $tuple = $dollar crate::TaggedBox::into_inner::<$dollar variant>($dollar tagged);\r\n     |  __________________________________________________________________________________________________^\r\n546  | |                     $dollar variant($( $access )* $dollar $tuple . $field)\r\n547  | |                 }};\r\n548  | |             ]\r\n...    |\r\n577  | | generate_tuple_expansion! {\r\n578  | |     ($, others)\r\n     | |_____^ unknown macro variable\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: unknown macro variable `tuple`\r\n    --> src\\tagged_box_macro.rs:516:39\r\n     |\r\n516  |               @inner ($dollar, $others, tuple)\r\n     |  _______________________________________^\r\n517  | |             [\r\n518  | |                 // ($variant:path) => {\r\n519  | |                 //     $variant()\r\n...    |\r\n577  | | generate_tuple_expansion! {\r\n578  | |     ($, others)\r\n     | |_____^ unknown macro variable\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: expected expression, found `.`\r\n    --> src\\tagged_box_macro.rs:550:44\r\n     |\r\n550  |               [ $( $access )* $dollar $tuple . $field, ]\r\n     |                                              ^ expected expression\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nthread 'rustc' panicked at 'src\\librustc_resolve\\macros.rs:742: inconsistent resolution for a macro', src\\librustc\\util\\bug.rs:37:26\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.41.1 (f3e1a954d 2020-02-24) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n>cargo t\r\n   Compiling tagged-box v0.1.1 (G:\\LocalFileServer\\Programming\\Rust\\tagged-box)\r\nerror: a macro named `__expand_tuple` has already been exported\r\n   --> src\\tagged_box_macro.rs:571:9\r\n    |\r\n571 | /         macro_rules! __expand_tuple {\r\n572 | |             $( $finished )*\r\n573 | |         }\r\n    | |_________^ `__expand_tuple` already exported\r\n...\r\n577 | / generate_tuple_expansion! {\r\n578 | |     ($, others)\r\n579 | |     (0, a), (1, b), (2, c), (3, d),\r\n580 | |     (4, e), (5, f), (6, g), (7, h),\r\n...   |\r\n586 | |     (28, cc), (29, dd), (30, ee), (31, ff)\r\n587 | | }\r\n    | |_- in this macro invocation\r\n    |\r\nnote: previous macro export is now shadowed\r\n   --> src\\tagged_box_macro.rs:591:1\r\n    |\r\n591 | / macro_rules! __expand_tuple {\r\n592 | |     ($variant:path) => {\r\n593 | |         $variant()\r\n594 | |     };\r\n...   |\r\n797 | |     };\r\n798 | | }\r\n    | |_^\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `tagged-box`.\r\nwarning: build failed, waiting for other jobs to finish...\r\nerror: a macro named `__expand_tuple` has already been exported\r\n   --> src\\tagged_box_macro.rs:571:9\r\n    |\r\n571 | /         macro_rules! __expand_tuple {\r\n572 | |             $( $finished )*\r\n573 | |         }\r\n    | |_________^ `__expand_tuple` already exported\r\n...\r\n577 | / generate_tuple_expansion! {\r\n578 | |     ($, others)\r\n579 | |     (0, a), (1, b), (2, c), (3, d),\r\n580 | |     (4, e), (5, f), (6, g), (7, h),\r\n...   |\r\n586 | |     (28, cc), (29, dd), (30, ee), (31, ff)\r\n587 | | }\r\n    | |_- in this macro invocation\r\n    |\r\nnote: previous macro export is now shadowed\r\n   --> src\\tagged_box_macro.rs:591:1\r\n    |\r\n591 | / macro_rules! __expand_tuple {\r\n592 | |     ($variant:path) => {\r\n593 | |         $variant()\r\n594 | |     };\r\n...   |\r\n797 | |     };\r\n798 | | }\r\n    | |_^\r\n\r\nerror: unexpected end of macro invocation\r\n   --> src\\tagged_box_macro.rs:904:68\r\n    |\r\n571 |         macro_rules! __expand_tuple {\r\n    |         --------------------------- when calling this macro\r\n...\r\n904 |                     $crate::__expand_tuple!($enum::$variant, tuple, $($ty),*)\r\n    |                                                                    ^ missing tokens in macro arguments\r\n\r\nerror: unknown macro variable `tagged`\r\n    --> src\\tagged_box_macro.rs:545:98\r\n     |\r\n545  |                       let $tuple = $dollar crate::TaggedBox::into_inner::<$dollar variant>($dollar tagged);\r\n     |  __________________________________________________________________________________________________^\r\n546  | |                     $dollar variant($( $access )* $dollar $tuple . $field)\r\n547  | |                 }};\r\n548  | |             ]\r\n...    |\r\n577  | | generate_tuple_expansion! {\r\n578  | |     ($, others)\r\n     | |_____^ unknown macro variable\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: unknown macro variable `tuple`\r\n    --> src\\tagged_box_macro.rs:516:39\r\n     |\r\n516  |               @inner ($dollar, $others, tuple)\r\n     |  _______________________________________^\r\n517  | |             [\r\n518  | |                 // ($variant:path) => {\r\n519  | |                 //     $variant()\r\n...    |\r\n577  | | generate_tuple_expansion! {\r\n578  | |     ($, others)\r\n     | |_____^ unknown macro variable\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: expected expression, found `.`\r\n    --> src\\tagged_box_macro.rs:550:44\r\n     |\r\n550  |               [ $( $access )* $dollar $tuple . $field, ]\r\n     |                                              ^ expected expression\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: unexpected end of macro invocation\r\n   --> src\\tagged_box_macro.rs:826:78\r\n    |\r\n571 |         macro_rules! __expand_tuple {\r\n    |         --------------------------- when calling this macro\r\n...\r\n826 |                 let variant = $crate::__expand_tuple!($enum::$variant, tuple, $($ty),*);\r\n    |                                                                              ^ missing tokens in macro arguments\r\n\r\nerror: unknown macro variable `tagged`\r\n    --> src\\tagged_box_macro.rs:545:98\r\n     |\r\n545  |                       let $tuple = $dollar crate::TaggedBox::into_inner::<$dollar variant>($dollar tagged);\r\n     |  __________________________________________________________________________________________________^\r\n546  | |                     $dollar variant($( $access )* $dollar $tuple . $field)\r\n547  | |                 }};\r\n548  | |             ]\r\n...    |\r\n577  | | generate_tuple_expansion! {\r\n578  | |     ($, others)\r\n     | |_____^ unknown macro variable\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: unknown macro variable `tuple`\r\n    --> src\\tagged_box_macro.rs:516:39\r\n     |\r\n516  |               @inner ($dollar, $others, tuple)\r\n     |  _______________________________________^\r\n517  | |             [\r\n518  | |                 // ($variant:path) => {\r\n519  | |                 //     $variant()\r\n...    |\r\n577  | | generate_tuple_expansion! {\r\n578  | |     ($, others)\r\n     | |_____^ unknown macro variable\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: expected expression, found `.`\r\n    --> src\\tagged_box_macro.rs:550:44\r\n     |\r\n550  |               [ $( $access )* $dollar $tuple . $field, ]\r\n     |                                              ^ expected expression\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: unexpected end of macro invocation\r\n   --> src\\tagged_box_macro.rs:991:68\r\n    |\r\n571 |         macro_rules! __expand_tuple {\r\n    |         --------------------------- when calling this macro\r\n...\r\n991 |                     $crate::__expand_tuple!($enum::$variant, tuple, $( $ty ),*)\r\n    |                                                                    ^ missing tokens in macro arguments\r\n\r\nerror: unknown macro variable `tagged`\r\n    --> src\\tagged_box_macro.rs:545:98\r\n     |\r\n545  |                       let $tuple = $dollar crate::TaggedBox::into_inner::<$dollar variant>($dollar tagged);\r\n     |  __________________________________________________________________________________________________^\r\n546  | |                     $dollar variant($( $access )* $dollar $tuple . $field)\r\n547  | |                 }};\r\n548  | |             ]\r\n...    |\r\n577  | | generate_tuple_expansion! {\r\n578  | |     ($, others)\r\n     | |_____^ unknown macro variable\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: unknown macro variable `tuple`\r\n    --> src\\tagged_box_macro.rs:516:39\r\n     |\r\n516  |               @inner ($dollar, $others, tuple)\r\n     |  _______________________________________^\r\n517  | |             [\r\n518  | |                 // ($variant:path) => {\r\n519  | |                 //     $variant()\r\n...    |\r\n577  | | generate_tuple_expansion! {\r\n578  | |     ($, others)\r\n     | |_____^ unknown macro variable\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: expected expression, found `.`\r\n    --> src\\tagged_box_macro.rs:550:44\r\n     |\r\n550  |               [ $( $access )* $dollar $tuple . $field, ]\r\n     |                                              ^ expected expression\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: unexpected end of macro invocation\r\n    --> src\\tagged_box_macro.rs:1108:111\r\n     |\r\n571  |         macro_rules! __expand_tuple {\r\n     |         --------------------------- when calling this macro\r\n...\r\n1108 |                     let variant = core::mem::ManuallyDrop::new($crate::__expand_tuple!($enum::$variant, tuple, $($ty),*));\r\n     |                                                                                                               ^ missing tokens in macro arguments\r\n\r\nerror: unknown macro variable `tagged`\r\n    --> src\\tagged_box_macro.rs:545:98\r\n     |\r\n545  |                       let $tuple = $dollar crate::TaggedBox::into_inner::<$dollar variant>($dollar tagged);\r\n     |  __________________________________________________________________________________________________^\r\n546  | |                     $dollar variant($( $access )* $dollar $tuple . $field)\r\n547  | |                 }};\r\n548  | |             ]\r\n...    |\r\n577  | | generate_tuple_expansion! {\r\n578  | |     ($, others)\r\n     | |_____^ unknown macro variable\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: unknown macro variable `tuple`\r\n    --> src\\tagged_box_macro.rs:516:39\r\n     |\r\n516  |               @inner ($dollar, $others, tuple)\r\n     |  _______________________________________^\r\n517  | |             [\r\n518  | |                 // ($variant:path) => {\r\n519  | |                 //     $variant()\r\n...    |\r\n577  | | generate_tuple_expansion! {\r\n578  | |     ($, others)\r\n     | |_____^ unknown macro variable\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nerror: expected expression, found `.`\r\n    --> src\\tagged_box_macro.rs:550:44\r\n     |\r\n550  |               [ $( $access )* $dollar $tuple . $field, ]\r\n     |                                              ^ expected expression\r\n...\r\n1517 | /         tagged_box! {\r\n1518 | |             #[derive(Debug, Clone, PartialEq, Eq)]\r\n1519 | |             struct Container, enum Item {\r\n1520 | |                 Unit,\r\n...    |\r\n1528 | |             }\r\n1529 | |         }\r\n     | |_________- in this macro invocation\r\n\r\nthread 'rustc' panicked at 'src\\librustc_resolve\\macros.rs:742: inconsistent resolution for a macro', src\\librustc\\util\\bug.rs:37:26\r\nstack backtrace:\r\n   0: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n   1: core::fmt::write\r\n   2: <std::io::IoSliceMut as core::fmt::Debug>::fmt\r\n   3: std::panicking::take_hook\r\n   4: std::panicking::take_hook\r\n   5: rustc_driver::report_ice\r\n   6: std::panicking::rust_panic_with_hook\r\n   7: <rustc_resolve::build_reduced_graph::BuildReducedGraphVisitor as syntax::visit::Visitor>::visit_ty\r\n   8: <rustc_resolve::late::PathSource as core::fmt::Debug>::fmt\r\n   9: <rustc_resolve::late::PathSource as core::fmt::Debug>::fmt\r\n  10: <rustc_resolve::late::PathSource as core::fmt::Debug>::fmt\r\n  11: <rustc_resolve::late::PathSource as core::fmt::Debug>::fmt\r\n  12: <rustc_resolve::late::PathSource as core::fmt::Debug>::fmt\r\n  13: rustc_resolve::macros::<impl rustc_resolve::Resolver>::resolve_macro_path\r\n  14: rustc_resolve::Resolver::resolve_crate\r\n  15: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::compile\r\n  16: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::compile\r\n  17: rustc_interface::queries::Queries::expansion\r\n  18: rustc_driver::pretty::print_after_hir_lowering\r\n  19: <syntax_pos::symbol::SymbolStr as core::fmt::Display>::fmt\r\n  20: <chalk_engine::stack::StackIndex as core::convert::From<usize>>::from\r\n  21: <rustc_driver::Compilation as core::fmt::Debug>::fmt\r\n  22: <chalk_engine::stack::StackIndex as core::convert::From<usize>>::from\r\n  23: _rust_maybe_catch_panic\r\n  24: rustc_driver::pretty::print_after_hir_lowering\r\n  25: ZN244_$LT$std..error..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Display$GT$3fmt17\r\n  26: std::sys::windows::thread::Thread::new\r\n  27: BaseThreadInitThunk\r\n  28: RtlUserThreadStart\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.41.1 (f3e1a954d 2020-02-24) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: aborting due to 17 previous errors\r\n\r\nerror: could not compile `tagged-box`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69932/timeline", "performed_via_github_app": null, "state_reason": null}