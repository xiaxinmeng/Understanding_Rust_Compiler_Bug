{"url": "https://api.github.com/repos/rust-lang/rust/issues/72391", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72391/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72391/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72391/events", "html_url": "https://github.com/rust-lang/rust/issues/72391", "id": 622021964, "node_id": "MDU6SXNzdWU2MjIwMjE5NjQ=", "number": 72391, "title": "Weird error message and ICE with generics in array size of where clause", "user": {"login": "lukas-code", "id": 26522220, "node_id": "MDQ6VXNlcjI2NTIyMjIw", "avatar_url": "https://avatars.githubusercontent.com/u/26522220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukas-code", "html_url": "https://github.com/lukas-code", "followers_url": "https://api.github.com/users/lukas-code/followers", "following_url": "https://api.github.com/users/lukas-code/following{/other_user}", "gists_url": "https://api.github.com/users/lukas-code/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukas-code/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukas-code/subscriptions", "organizations_url": "https://api.github.com/users/lukas-code/orgs", "repos_url": "https://api.github.com/users/lukas-code/repos", "events_url": "https://api.github.com/users/lukas-code/events{/privacy}", "received_events_url": "https://api.github.com/users/lukas-code/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-20T19:13:37Z", "updated_at": "2020-05-20T19:21:46Z", "closed_at": "2020-05-20T19:21:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Code\r\n\r\nThis code causes a weird error message:\r\n```Rust\r\nconst fn f<T>() -> usize {\r\n    0\r\n}\r\n\r\npub fn g<T>() where [(); f::<T>()]: {}\r\n\r\nfn main(){}\r\n```\r\n\r\n```\r\nerror[E0277]: the size for values of type `T` cannot be known at compilation time\r\n --> test.rs:5:30\r\n  |\r\n1 | const fn f<T>() -> usize {\r\n  |            - required by this bound in `f`\r\n...\r\n5 | pub fn g<T>() where [(); f::<T>()]: {}\r\n  |          -                   ^ doesn't have a size known at compile-time\r\n  |          |\r\n  |          this type parameter needs to be `std::marker::Sized`\r\n  |\r\n  = help: the trait `std::marker::Sized` is not implemented for `T`\r\n  = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\r\nhelp: consider relaxing the implicit `Sized` restriction\r\n  |\r\n1 | const fn f<T: ?Sized>() -> usize {\r\n  |             ^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\n```\r\n\r\nManually specifying `g<T: Sized>` doesn't change anything.\r\n\r\nChanging `f<T>` to `f<T: ?Sized>` will cause an ICE:\r\n```Rust\r\nconst fn f<T: ?Sized>() -> usize {\r\n    0\r\n}\r\n\r\npub fn g<T>() where [(); f::<T>()]: {}\r\n\r\nfn main(){}\r\n```\r\n\r\n```\r\nerror: internal compiler error: src/librustc_middle/ty/subst.rs:541: type parameter `T/#0` (T/0) out of range when substituting (root type=Some(fn() -> usize {f::<T>})) substs=[]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/a74d1862d4d87a56244958416fd05976c58ca1a8/src/libstd/macros.rs:13:23\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.45.0-nightly (a74d1862d 2020-05-14) running on x86_64-unknown-linux-gnu\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.45.0-nightly (a74d1862d 2020-05-14)\r\nbinary: rustc\r\ncommit-hash: a74d1862d4d87a56244958416fd05976c58ca1a8\r\ncommit-date: 2020-05-14\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.45.0-nightly\r\nLLVM version: 9.0\r\n```\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: src/librustc_middle/ty/subst.rs:541: type parameter `T/#0` (T/0) out of range when substituting (root type=Some(fn() -> usize {f::<T>})) substs=[]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/a74d1862d4d87a56244958416fd05976c58ca1a8/src/libstd/macros.rs:13:23\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1069\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1537\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:218\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:481\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::span_bug\r\n  14: rustc_errors::Handler::span_bug\r\n  15: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc_middle::ty::context::tls::with_opt\r\n  18: rustc_middle::util::bug::opt_span_bug_fmt\r\n  19: rustc_middle::util::bug::span_bug_fmt\r\n  20: <rustc_middle::ty::subst::SubstFolder as rustc_middle::ty::fold::TypeFolder>::fold_ty\r\n  21: rustc_middle::ty::fold::TypeFoldable::fold_with\r\n  22: rustc_middle::ty::structural_impls::<impl rustc_middle::ty::fold::TypeFoldable for &rustc_middle::ty::TyS>::super_fold_with\r\n  23: <rustc_middle::ty::subst::SubstFolder as rustc_middle::ty::fold::TypeFolder>::fold_ty\r\n  24: rustc_middle::ty::structural_impls::<impl rustc_middle::ty::fold::TypeFoldable for &rustc_middle::ty::sty::Const>::super_fold_with\r\n  25: <rustc_middle::ty::subst::SubstFolder as rustc_middle::ty::fold::TypeFolder>::fold_const\r\n  26: rustc_middle::ty::normalize_erasing_regions::<impl rustc_middle::ty::context::TyCtxt>::subst_and_normalize_erasing_regions\r\n  27: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_operand\r\n  28: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::run\r\n  29: rustc_mir::const_eval::eval_queries::const_eval_raw_provider\r\n  30: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::const_eval_raw>::compute\r\n  31: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  32: rustc_query_system::query::plumbing::get_query_impl::{{closure}}\r\n  33: rustc_query_system::query::plumbing::get_query_impl\r\n  34: rustc_mir::const_eval::eval_queries::const_eval_validated_provider\r\n  35: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::const_eval_validated>::compute\r\n  36: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  37: rustc_query_system::query::plumbing::get_query_impl::{{closure}}\r\n  38: rustc_query_system::query::plumbing::get_query_impl\r\n  39: rustc_mir::const_eval::eval_queries::const_eval_validated_provider\r\n  40: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::const_eval_validated>::compute\r\n  41: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  42: rustc_data_structures::stack::ensure_sufficient_stack\r\n  43: rustc_query_system::query::plumbing::get_query_impl\r\n  44: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_global_id\r\n  45: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_resolve\r\n  46: rustc_middle::ty::sty::Const::eval\r\n  47: rustc_middle::ty::structural_impls::<impl rustc_middle::ty::fold::TypeFoldable for &rustc_middle::ty::TyS>::super_fold_with\r\n  48: <rustc_trait_selection::traits::project::AssocTypeNormalizer as rustc_middle::ty::fold::TypeFolder>::fold_ty\r\n  49: rustc_middle::ty::fold::TypeFoldable::fold_with\r\n  50: rustc_trait_selection::traits::project::AssocTypeNormalizer::fold\r\n  51: rustc_data_structures::stack::ensure_sufficient_stack\r\n  52: rustc_trait_selection::traits::fully_normalize\r\n  53: rustc_middle::ty::context::tls::with_context::{{closure}}\r\n  54: rustc_infer::infer::InferCtxtBuilder::enter\r\n  55: rustc_trait_selection::traits::do_normalize_predicates\r\n  56: rustc_trait_selection::traits::normalize_param_env_or_error\r\n  57: rustc_ty::ty::param_env\r\n  58: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::param_env>::compute\r\n  59: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  60: rustc_query_system::query::plumbing::get_query_impl\r\n  61: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  62: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::check_item_well_formed>::compute\r\n  63: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  64: rustc_query_system::query::plumbing::get_query_impl\r\n  65: rustc_query_system::query::plumbing::ensure_query_impl\r\n  66: rustc_data_structures::sync::par_for_each_in\r\n  67: rustc_hir::hir::Crate::par_visit_all_item_likes\r\n  68: rustc_typeck::check_crate\r\n  69: rustc_interface::passes::analysis\r\n  70: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  71: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  72: rustc_data_structures::stack::ensure_sufficient_stack\r\n  73: rustc_query_system::query::plumbing::get_query_impl\r\n  74: rustc_middle::ty::context::tls::enter_global\r\n  75: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  76: scoped_tls::ScopedKey<T>::set\r\n  77: rustc_ast::attr::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.45.0-nightly (a74d1862d 2020-05-14) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [const_eval_raw] const-evaluating `g::{{constant}}#0`\r\n#1 [const_eval_validated] const-evaluating + checking `g::{{constant}}#0`\r\n#2 [const_eval_validated] const-evaluating + checking `g::{{constant}}#0`\r\n#3 [param_env] processing `g`\r\n#4 [check_item_well_formed] processing `g`\r\n#5 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72391/timeline", "performed_via_github_app": null, "state_reason": "completed"}