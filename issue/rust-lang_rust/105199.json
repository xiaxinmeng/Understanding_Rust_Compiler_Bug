{"url": "https://api.github.com/repos/rust-lang/rust/issues/105199", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105199/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105199/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105199/events", "html_url": "https://github.com/rust-lang/rust/issues/105199", "id": 1473842283, "node_id": "I_kwDOAAsO6M5X2Qxr", "number": 105199, "title": "ICE: rustdoc: Unexpected result when selecting Reserved<'a, I> Obligation", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1118598314, "node_id": "MDU6TGFiZWwxMTE4NTk4MzE0", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-synthetic-impls", "name": "A-synthetic-impls", "color": "f7e101", "default": false, "description": "Area: Synthetic impls, used by rustdoc to document auto traits and traits with blanket impls"}, {"id": 3771326768, "node_id": "LA_kwDOAAsO6M7gyeEw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-auto-traits", "name": "A-auto-traits", "color": "f7e101", "default": false, "description": "Area: auto traits (`auto trait Send`)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-12-03T08:17:57Z", "updated_at": "2023-06-03T16:15:27Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\npub trait Stream {\r\n    type Item;\r\n    type Error;\r\n}\r\n\r\npub trait ParseError<I> {\r\n    type Output;\r\n}\r\n\r\nimpl ParseError<char> for u32 {\r\n    type Output = ();\r\n}\r\n\r\nimpl Stream for () {\r\n    type Item = char;\r\n    type Error = char;\r\n}\r\n\r\npub struct Lex<'a, I>\r\n    where I: Stream,\r\n          I::Error: ParseError<char>,\r\n          <<char as Stream>::Error as ParseError<I::Item>>::Output: 'a\r\n{\r\n    x: &'a <I::Error as ParseError<char>>::Output\r\n}\r\n\r\npub struct Reserved<'a, I> where\r\n    I: ParseError<char> + 'a,\r\n    I: ParseError<char> + 'a,\r\n    <<I as Stream>::Error as ParseError<char>>::Output: 'a\r\n\r\n{\r\n    x: Lex<'a, I>\r\n}\r\n\r\nfn main() {\r\n    let r: Reserved<()> = Reserved {\r\n        x: Reserved {\r\n            x: Reserved {\r\n             x: &()\r\n        }\r\n        }\r\n    };\r\n\r\n    let _v = r.x.x;\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\n32e613bbaafee1bcabba48a2257b838f8d1c03d3\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0277]: the trait bound `char: Stream` is not satisfied\r\n  --> ./a3ed373bd420d9a6f1371fa61c7a6a549d1377d2.rs:21:1\r\n   |\r\n21 | pub struct Lex<'a, I>\r\n   | ^^^^^^^^^^^^^^^^^^^^^ the trait `Stream` is not implemented for `char`\r\n   |\r\n   = help: the trait `Stream` is implemented for `()`\r\n\r\nerror[E0277]: the trait bound `char: Stream` is not satisfied\r\n  --> ./a3ed373bd420d9a6f1371fa61c7a6a549d1377d2.rs:29:1\r\n   |\r\n29 | pub struct Reserved<'a, I> where\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Stream` is not implemented for `char`\r\n   |\r\n   = help: the trait `Stream` is implemented for `()`\r\n\r\nerror[E0277]: the trait bound `I: Stream` is not satisfied\r\n  --> ./a3ed373bd420d9a6f1371fa61c7a6a549d1377d2.rs:29:1\r\n   |\r\n29 | pub struct Reserved<'a, I> where\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Stream` is not implemented for `I`\r\n   |\r\nhelp: consider further restricting this bound\r\n   |\r\n30 |     I: ParseError<char> + 'a + Stream,\r\n   |                              ++++++++\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Unexpected result when selecting Reserved<'a, I> Obligation(predicate=Binder(ProjectionPredicate(ProjectionTy { substs: [_, char], item_def_id: DefId(0:8 ~ a3ed373bd420d9a6f1371fa61c7a6a549d1377d2[a5ec]::ParseError::Output) }, Term::Ty(_)), []), depth=2)', compiler/rustc_trait_selection/src/traits/auto_trait.rs:762:33\r\nstack backtrace:\r\n   0:     0x7f7e0996661a - std::backtrace_rs::backtrace::libunwind::trace::hec1c9a33ec35a782\r\n                               at /rustc/c090c6880c0183ba248bde4a16e29ba29ac4fbba/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7f7e0996661a - std::backtrace_rs::backtrace::trace_unsynchronized::hef44794102f9589c\r\n                               at /rustc/c090c6880c0183ba248bde4a16e29ba29ac4fbba/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f7e0996661a - std::sys_common::backtrace::_print_fmt::h3d085ebafa3ff4d4\r\n                               at /rustc/c090c6880c0183ba248bde4a16e29ba29ac4fbba/library/std/src/sys_common/backtrace.rs:65:5\r\n   3:     0x7f7e0996661a - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h1dc483ce0b0acc38\r\n                               at /rustc/c090c6880c0183ba248bde4a16e29ba29ac4fbba/library/std/src/sys_common/backtrace.rs:44:22\r\n   4:     0x7f7e099c920e - core::fmt::write::hdde74b1f9f025400\r\n                               at /rustc/c090c6880c0183ba248bde4a16e29ba29ac4fbba/library/core/src/fmt/mod.rs:1208:17\r\n   5:     0x7f7e09956b35 - std::io::Write::write_fmt::h93bb2bce537087eb\r\n                               at /rustc/c090c6880c0183ba248bde4a16e29ba29ac4fbba/library/std/src/io/mod.rs:1682:15\r\n   6:     0x7f7e099663e5 - std::sys_common::backtrace::_print::hffbee7406e6f5871\r\n                               at /rustc/c090c6880c0183ba248bde4a16e29ba29ac4fbba/library/std/src/sys_common/backtrace.rs:47:5\r\n   7:     0x7f7e099663e5 - std::sys_common::backtrace::print::ha3e39199dd4aff7e\r\n                               at /rustc/c090c6880c0183ba248bde4a16e29ba29ac4fbba/library/std/src/sys_common/backtrace.rs:34:9\r\n   8:     0x7f7e0996912f - std::panicking::default_hook::{{closure}}::h9d3052b99dbdb269\r\n                               at /rustc/c090c6880c0183ba248bde4a16e29ba29ac4fbba/library/std/src/panicking.rs:267:22\r\n   9:     0x7f7e09968e6b - std::panicking::default_hook::hf85cde60e828679e\r\n                               at /rustc/c090c6880c0183ba248bde4a16e29ba29ac4fbba/library/std/src/panicking.rs:286:9\r\n  10:     0x7f7e0996994c - std::panicking::rust_panic_with_hook::h7bb6b938bd4ce622\r\n                               at /rustc/c090c6880c0183ba248bde4a16e29ba29ac4fbba/library/std/src/panicking.rs:688:13\r\n  11:     0x7f7e099696e9 - std::panicking::begin_panic_handler::{{closure}}::h894513d3c9ea77f1\r\n                               at /rustc/c090c6880c0183ba248bde4a16e29ba29ac4fbba/library/std/src/panicking.rs:579:13\r\n  12:     0x7f7e09966acc - std::sys_common::backtrace::__rust_end_short_backtrace::h478da9df1dc8d9c3\r\n                               at /rustc/c090c6880c0183ba248bde4a16e29ba29ac4fbba/library/std/src/sys_common/backtrace.rs:137:18\r\n  13:     0x7f7e099693f2 - rust_begin_unwind\r\n                               at /rustc/c090c6880c0183ba248bde4a16e29ba29ac4fbba/library/std/src/panicking.rs:575:5\r\n  14:     0x7f7e099c5c23 - core::panicking::panic_fmt::h0f7f0682c1639601\r\n                               at /rustc/c090c6880c0183ba248bde4a16e29ba29ac4fbba/library/core/src/panicking.rs:65:14\r\n  15:     0x7f7e0d8d3ed6 - <rustc_trait_selection[397ae88777b610b2]::traits::auto_trait::AutoTraitFinder>::evaluate_predicates\r\n  16:     0x55847d63af96 - <rustc_trait_selection[397ae88777b610b2]::traits::auto_trait::AutoTraitFinder>::find_auto_trait_generics::<rustdoc[5777193071682c2]::clean::types::Generics, <rustdoc[5777193071682c2]::clean::auto_trait::AutoTraitFinder>::generate_for_trait::{closure#0}>\r\n  17:     0x55847d3ea883 - <rustdoc[5777193071682c2]::clean::auto_trait::AutoTraitFinder>::generate_for_trait\r\n  18:     0x55847d4663e7 - <alloc[22a8e43ef760e53a]::vec::Vec<rustdoc[5777193071682c2]::clean::types::Item> as alloc[22a8e43ef760e53a]::vec::spec_from_iter::SpecFromIter<rustdoc[5777193071682c2]::clean::types::Item, core[e5d1a7e8c6989fb6]::iter::adapters::filter_map::FilterMap<alloc[22a8e43ef760e53a]::vec::into_iter::IntoIter<rustc_span[e9db05e073d6ae0e]::def_id::DefId>, <rustdoc[5777193071682c2]::clean::auto_trait::AutoTraitFinder>::get_auto_trait_impls::{closure#0}>>>::from_iter\r\n  19:     0x55847d3eb55e - <rustdoc[5777193071682c2]::clean::auto_trait::AutoTraitFinder>::get_auto_trait_impls\r\n  20:     0x55847d4dd815 - rustdoc[5777193071682c2]::clean::utils::get_auto_trait_and_blanket_impls\r\n  21:     0x55847d5fd9b2 - <rustdoc[5777193071682c2]::passes::collect_trait_impls::SyntheticImplCollector as rustdoc[5777193071682c2]::visit::DocVisitor>::visit_item\r\n  22:     0x55847d5fdafa - <rustdoc[5777193071682c2]::passes::collect_trait_impls::SyntheticImplCollector as rustdoc[5777193071682c2]::visit::DocVisitor>::visit_item\r\n  23:     0x55847d5fabb7 - rustdoc[5777193071682c2]::passes::collect_trait_impls::collect_trait_impls\r\n  24:     0x55847d5d4f4e - <rustc_session[72ee2d53e3941d51]::session::Session>::time::<rustdoc[5777193071682c2]::clean::types::Crate, rustdoc[5777193071682c2]::core::run_global_ctxt::{closure#7}>\r\n  25:     0x55847d5bbc0a - rustdoc[5777193071682c2]::core::run_global_ctxt\r\n  26:     0x55847d5d73c4 - <rustc_interface[163ae487477d9c3c]::passes::QueryContext>::enter::<rustdoc[5777193071682c2]::main_args::{closure#1}::{closure#0}::{closure#1}, core[e5d1a7e8c6989fb6]::result::Result<(), rustc_errors[7f7a26e842223f7b]::ErrorGuaranteed>>\r\n  27:     0x55847d3b085a - <rustc_interface[163ae487477d9c3c]::interface::Compiler>::enter::<rustdoc[5777193071682c2]::main_args::{closure#1}::{closure#0}, core[e5d1a7e8c6989fb6]::result::Result<(), rustc_errors[7f7a26e842223f7b]::ErrorGuaranteed>>\r\n  28:     0x55847d52cc1e - <scoped_tls[e75e6c3262949904]::ScopedKey<rustc_span[e9db05e073d6ae0e]::SessionGlobals>>::set::<rustc_interface[163ae487477d9c3c]::interface::run_compiler<core[e5d1a7e8c6989fb6]::result::Result<(), rustc_errors[7f7a26e842223f7b]::ErrorGuaranteed>, rustdoc[5777193071682c2]::main_args::{closure#1}>::{closure#0}, core[e5d1a7e8c6989fb6]::result::Result<(), rustc_errors[7f7a26e842223f7b]::ErrorGuaranteed>>\r\n  29:     0x55847d5e47a0 - std[819d5ca3b5620c33]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[163ae487477d9c3c]::util::run_in_thread_pool_with_globals<rustc_interface[163ae487477d9c3c]::interface::run_compiler<core[e5d1a7e8c6989fb6]::result::Result<(), rustc_errors[7f7a26e842223f7b]::ErrorGuaranteed>, rustdoc[5777193071682c2]::main_args::{closure#1}>::{closure#0}, core[e5d1a7e8c6989fb6]::result::Result<(), rustc_errors[7f7a26e842223f7b]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[e5d1a7e8c6989fb6]::result::Result<(), rustc_errors[7f7a26e842223f7b]::ErrorGuaranteed>>\r\n  30:     0x55847d6cecdd - <<std[819d5ca3b5620c33]::thread::Builder>::spawn_unchecked_<rustc_interface[163ae487477d9c3c]::util::run_in_thread_pool_with_globals<rustc_interface[163ae487477d9c3c]::interface::run_compiler<core[e5d1a7e8c6989fb6]::result::Result<(), rustc_errors[7f7a26e842223f7b]::ErrorGuaranteed>, rustdoc[5777193071682c2]::main_args::{closure#1}>::{closure#0}, core[e5d1a7e8c6989fb6]::result::Result<(), rustc_errors[7f7a26e842223f7b]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[e5d1a7e8c6989fb6]::result::Result<(), rustc_errors[7f7a26e842223f7b]::ErrorGuaranteed>>::{closure#1} as core[e5d1a7e8c6989fb6]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  31:     0x7f7e09973663 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hd0b2a5e0dbe3c403\r\n                               at /rustc/c090c6880c0183ba248bde4a16e29ba29ac4fbba/library/alloc/src/boxed.rs:2000:9\r\n  32:     0x7f7e09973663 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h082e01feb1661ff6\r\n                               at /rustc/c090c6880c0183ba248bde4a16e29ba29ac4fbba/library/alloc/src/boxed.rs:2000:9\r\n  33:     0x7f7e09973663 - std::sys::unix::thread::Thread::new::thread_start::hf94610e63e426d69\r\n                               at /rustc/c090c6880c0183ba248bde4a16e29ba29ac4fbba/library/std/src/sys/unix/thread.rs:108:17\r\n  34:     0x7f7e097068fd - <unknown>\r\n  35:     0x7f7e09788a60 - <unknown>\r\n  36:                0x0 - <unknown>\r\nerror: aborting due to 3 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105199/timeline", "performed_via_github_app": null, "state_reason": null}