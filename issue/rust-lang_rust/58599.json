{"url": "https://api.github.com/repos/rust-lang/rust/issues/58599", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58599/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58599/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58599/events", "html_url": "https://github.com/rust-lang/rust/issues/58599", "id": 412519388, "node_id": "MDU6SXNzdWU0MTI1MTkzODg=", "number": 58599, "title": "Add LLVM atomic memcpy intrinsics, expose in core/std", "user": {"login": "joshlf", "id": 1046063, "node_id": "MDQ6VXNlcjEwNDYwNjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1046063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshlf", "html_url": "https://github.com/joshlf", "followers_url": "https://api.github.com/users/joshlf/followers", "following_url": "https://api.github.com/users/joshlf/following{/other_user}", "gists_url": "https://api.github.com/users/joshlf/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshlf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshlf/subscriptions", "organizations_url": "https://api.github.com/users/joshlf/orgs", "repos_url": "https://api.github.com/users/joshlf/repos", "events_url": "https://api.github.com/users/joshlf/events{/privacy}", "received_events_url": "https://api.github.com/users/joshlf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 4434017660, "node_id": "LA_kwDOAAsO6M8AAAABCEm9fA", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-atomic", "name": "A-atomic", "color": "f7e101", "default": false, "description": "Area: atomics, barriers, and sync primitives"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 36, "created_at": "2019-02-20T16:36:55Z", "updated_at": "2022-10-14T17:05:37Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Expose LLVM's [\"element wise atomic memory intrinsics\"](https://llvm.org/docs/LangRef.html#element-wise-atomic-memory-intrinsics). In particular:\r\n- Expose `llvm.memcpy.element.unordered.atomic` as `atomic_element_unordered_copy_memory_nonoverlapping`\r\n- Expose `llvm.memmove.element.unordered.atomic` as `\r\natomic_element_unordered_copy_memory`\r\n- Expose `llvm.memset.element.unordered.atomic` as `atomic_element_unordered_set_memory`\r\n\r\nExpose these through functions in the `std::ptr` module. Each function is implemented by the equivalent intrinsic or by a loop of relaxed atomic operations if the intrinsic is not available on the target platform (TODO: Given this platform-specific behavior, can this also be exposed in `core::ptr`?)\r\n- `copy_nonoverlapping_atomic_unordered`, backed by `atomic_element_unordered_copy_memory_nonoverlapping`\r\n- `copy_atomic_unordered`, backed by `atomic_element_unordered_copy_memory`\r\n- `write_atomic_unordered`, backed by `atomic_element_unordered_set_memory`\r\n\r\nPreviously discussed on the internals forum [here](https://internals.rust-lang.org/t/expose-llvm-atomic-memcpy-in-intrinsics/9466).\r\n\r\nFolks with the authority to approve this: Let me know if this is OK to move forward; I'd like to post it to This Week in Rust's CFP.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58599/reactions", "total_count": 4, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 4, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58599/timeline", "performed_via_github_app": null, "state_reason": null}