{"url": "https://api.github.com/repos/rust-lang/rust/issues/75222", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75222/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75222/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75222/events", "html_url": "https://github.com/rust-lang/rust/issues/75222", "id": 674372868, "node_id": "MDU6SXNzdWU2NzQzNzI4Njg=", "number": 75222, "title": "Confusing notes with per-method where-bounds when bounds are not satisfied", "user": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-06T14:48:33Z", "updated_at": "2020-08-07T01:48:38Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The following code:\r\n\r\n```rust\r\ntrait Fruit {\r\n    type Error;\r\n}\r\n\r\nstruct Peach;\r\nimpl Fruit for Peach {\r\n    type Error = ();\r\n}\r\n\r\nstruct Banana<F>(F);\r\nimpl<F> Banana<F> {\r\n    fn peel(&self) -> Result<(), F::Error> where F: Fruit {\r\n        unimplemented!()\r\n    }\r\n}\r\n\r\nfn pineapple() -> Result<(), ()> {\r\n    let banana: Banana<&Peach> = Banana(&Peach);\r\n    banana.peel()?;\r\n    Ok(())\r\n}\r\n```\r\n\r\n[playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=2fe932e57a6ca751fd9f7bf1288f67da)\r\n\r\noutputs the following error:\r\n\r\n```\r\nerror[E0599]: no method named `peel` found for struct `Banana<&Peach>` in the current scope\r\n  --> src/lib.rs:19:12\r\n   |\r\n10 | struct Banana<F>(F);\r\n   | -------------------- method `peel` not found for this\r\n...\r\n19 |     banana.peel()?;\r\n   |            ^^^^ method not found in `Banana<&Peach>`\r\n   |\r\n   = note: the method `peel` exists but the following trait bounds were not satisfied:\r\n           `<&Peach as Fruit>::Error = _`\r\n```\r\n\r\nThe `note` in this error is confusing as it only leads further away from the solution and is also difficult to read. In particular it is talking about trait bounds, but the `<&Peach as Fruit>::Error = _` presented is not even a trait bound. The real problem here is that `F: Fruit` is not satisfied. \r\n\r\nThe error message improves significantly when the bound is moved to the `impl` generic instead as such:\r\n\r\n```rust\r\nimpl<F: Fruit> Banana<F> {\r\n    fn peel(&self) -> Result<(), F::Error> {\r\n        unimplemented!()\r\n    }\r\n}\r\n```\r\n\r\nWe should strive for a similar note when the where-bound is applied to method like in the original example.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75222/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75222/timeline", "performed_via_github_app": null, "state_reason": null}