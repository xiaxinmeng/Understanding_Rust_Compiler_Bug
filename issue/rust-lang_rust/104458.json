{"url": "https://api.github.com/repos/rust-lang/rust/issues/104458", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104458/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104458/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104458/events", "html_url": "https://github.com/rust-lang/rust/issues/104458", "id": 1450275523, "node_id": "I_kwDOAAsO6M5WcXLD", "number": 104458, "title": "Type ascription + cascade of odd suggestions when : accidentally written in struct field name", "user": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 2568792541, "node_id": "MDU6TGFiZWwyNTY4NzkyNTQx", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_ascription", "name": "F-type_ascription", "color": "f9c0cc", "default": false, "description": "`#![feature(type_ascription)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-11-15T19:32:31Z", "updated_at": "2023-01-10T09:30:18Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=589f710ecb28198a06e5dee851bf8613\r\n\r\n```rust\r\nstruct Greeting {\r\n    ohmy: Vec<Vec<String>>,\r\n}\r\nfn main() {\r\n    Greeting {\r\n        oh:my: Vec::new(Vec::new()),\r\n    }\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0425]: cannot find value `my` in this scope\r\n --> src/main.rs:6:12\r\n  |\r\n6 |         oh:my: Vec::new(Vec::new()),\r\n  |            ^^ expecting a type here because of type ascription\r\n\r\nerror[E0214]: parenthesized type parameters may only be used with a `Fn` trait\r\n --> src/main.rs:6:21\r\n  |\r\n6 |         oh:my: Vec::new(Vec::new()),\r\n  |                     ^^^^^^^^^^^^^^^ only `Fn` traits may use parentheses\r\n  |\r\nhelp: use angle brackets instead\r\n  |\r\n6 |         oh:my: Vec::new<Vec::new()>,\r\n  |                        ~          ~\r\n\r\nerror[E0214]: parenthesized type parameters may only be used with a `Fn` trait\r\n --> src/main.rs:6:30\r\n  |\r\n6 |         oh:my: Vec::new(Vec::new()),\r\n  |                              ^^^^^ only `Fn` traits may use parentheses\r\n\r\nerror[E0560]: struct `Greeting` has no field named `oh`\r\n --> src/main.rs:6:9\r\n  |\r\n6 |         oh:my: Vec::new(Vec::new()),\r\n  |         ^^ `Greeting` does not have this field\r\n  |\r\n  = note: available fields are: `ohmy`\r\n\r\nerror[E0107]: missing generics for struct `Vec`\r\n   --> src/main.rs:6:16\r\n    |\r\n6   |         oh:my: Vec::new(Vec::new()),\r\n    |                ^^^ expected at least 1 generic argument\r\n    |\r\nnote: struct defined here, with at least 1 generic parameter: `T`\r\n   --> /home/ben/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:400:12\r\n    |\r\n400 | pub struct Vec<T, #[unstable(feature = \"allocator_api\", issue = \"32838\")] A: Allocator = Global> {\r\n    |            ^^^ -\r\nhelp: add missing generic argument\r\n    |\r\n6   |         oh:my: Vec<T>::new(Vec::new()),\r\n    |                ~~~~~~\r\n\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:5:5\r\n  |\r\n4 |   fn main() {\r\n  |             - expected `()` because of default return type\r\n5 | /     Greeting {\r\n6 | |         oh:my: Vec::new(Vec::new()),\r\n7 | |     }\r\n  | |_____^ expected `()`, found struct `Greeting`\r\n\r\nSome errors have detailed explanations: E0107, E0214, E0308, E0425, E0560.\r\nFor more information about an error, try `rustc --explain E0107`.\r\nerror: could not compile `scratch` due to 6 previous errors\r\n```\r\n\r\nIdeally the output should look like:\r\n\r\nSomething that doesn't suggest type ascription when using a stable compiler :upside_down_face: ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104458/timeline", "performed_via_github_app": null, "state_reason": null}