{"url": "https://api.github.com/repos/rust-lang/rust/issues/26235", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/26235/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/26235/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/26235/events", "html_url": "https://github.com/rust-lang/rust/issues/26235", "id": 87603262, "node_id": "MDU6SXNzdWU4NzYwMzI2Mg==", "number": 26235, "title": "Segfault in safe code on Rust nightly when running rustc --emit=asm,link", "user": {"login": "pythonesque", "id": 923144, "node_id": "MDQ6VXNlcjkyMzE0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/923144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pythonesque", "html_url": "https://github.com/pythonesque", "followers_url": "https://api.github.com/users/pythonesque/followers", "following_url": "https://api.github.com/users/pythonesque/following{/other_user}", "gists_url": "https://api.github.com/users/pythonesque/gists{/gist_id}", "starred_url": "https://api.github.com/users/pythonesque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pythonesque/subscriptions", "organizations_url": "https://api.github.com/users/pythonesque/orgs", "repos_url": "https://api.github.com/users/pythonesque/repos", "events_url": "https://api.github.com/users/pythonesque/events{/privacy}", "received_events_url": "https://api.github.com/users/pythonesque/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123111, "node_id": "MDU6TGFiZWwxMjMxMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-macos", "name": "O-macos", "color": "6e6ec0", "default": false, "description": "Operating system: macOS"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-06-12T04:30:54Z", "updated_at": "2015-12-18T17:06:28Z", "closed_at": "2015-12-18T17:06:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This reliably segfaults for me on a 13 inch 2015 Macbook Air running OS X Yosemite.  I'm not sure what the culprit is yet; it might be trans.  I haven't tested it with stable yet.\n\n``` rust\nfn main() {\n    use std::thread;\n\n    type Key = u32;\n    const NUM_THREADS: usize = 2;\n\n    #[derive(Clone,Copy)] struct Stats<S> { upsert: S, delete: S, insert: S, update: S };\n    impl<S> Stats<S> where S: Copy {\n        fn dot<B, F, T>(self, s: Stats<T>, f: F) -> Stats<B> where F: Fn(S, T) -> B {\n            let Stats { upsert: u1, delete: d1, insert: i1, update: p1 } = self;\n            let Stats { upsert: u2, delete: d2, insert: i2, update: p2 } = s;\n            Stats { upsert: f(u1, u2), delete: f(d1, d2), insert: f(i1, i2), update: f(p1, p2) }\n        }\n        fn new(init: S) -> Self {\n            Stats { upsert: init, delete: init, insert: init, update: init }\n        }\n    }\n    fn make_threads() -> Vec<thread::JoinHandle<()>> {\n        let mut t = Vec::with_capacity(NUM_THREADS);\n        for _ in 0..NUM_THREADS {\n            t.push(thread::spawn(move || {}));\n        }\n        t\n    }\n    let stats = [Stats::new(0) ; NUM_THREADS];\n    make_threads();\n    {\n        let Stats { ref upsert, ref delete, ref insert, ref update } =\n            stats.iter().fold(Stats::new(0), |res, &s| res.dot(s, |x: Key, y: Key| x.wrapping_add(y) ) );\n        println!(\"upserts: {}, deletes: {}, inserts: {}, updates: {}\",\n                 upsert, delete, insert, update);\n    }\n}\n```\n\n---\n\n``` ShellSession\n$ rustc foo.rs -C opt-level=3 --emit=asm,link\n$ ./foo\nIllegal instruction: 4 # or Segmentation fault: 11\n```\n\nMaybe related to https://github.com/rust-lang/rust/issues/24876 ?\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/26235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/26235/timeline", "performed_via_github_app": null, "state_reason": "completed"}