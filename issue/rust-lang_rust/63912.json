{"url": "https://api.github.com/repos/rust-lang/rust/issues/63912", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63912/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63912/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63912/events", "html_url": "https://github.com/rust-lang/rust/issues/63912", "id": 485149707, "node_id": "MDU6SXNzdWU0ODUxNDk3MDc=", "number": 63912, "title": "rustc should error instead of panic when the generator trait is not found", "user": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 289259951, "node_id": "MDU6TGFiZWwyODkyNTk5NTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-help-wanted", "name": "E-help-wanted", "color": "02E10C", "default": false, "description": "Call for participation: Help is requested to fix this issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 679846574, "node_id": "MDU6TGFiZWw2Nzk4NDY1NzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-generators", "name": "A-generators", "color": "f7e101", "default": false, "description": "Area: Generators"}, {"id": 1353613039, "node_id": "MDU6TGFiZWwxMzUzNjEzMDM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lang-item", "name": "A-lang-item", "color": "f7e101", "default": false, "description": "Area: lang items"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-26T09:50:13Z", "updated_at": "2019-08-27T09:58:54Z", "closed_at": "2019-08-27T09:58:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This somehow doesn't occur when putting the `abc` function in a non `#![no_core]` crate, yet I can't find any difference between the `libcore` version of `FnOnce` and this one.\r\n\r\n```rust\r\n#![feature(no_core, lang_items, unboxed_closures)]\r\n#![no_core]\r\n\r\n#[lang = \"sized\"]\r\npub trait Sized {}\r\n\r\n#[lang = \"fn_once\"]\r\n#[rustc_paren_sugar]\r\npub trait FnOnce<Args> {\r\n    type Output;\r\n\r\n    extern \"rust-call\" fn call_once(self, args: Args) -> Self::Output;\r\n}\r\n\r\npub fn abc() -> impl FnOnce(f32) {\r\n    |_| {}\r\n}\r\n\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2015&gist=84ebbafa6a6e8b1d1e57d5190e90ad99))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', src/libcore/option.rs:378:21\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.35/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.35/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:47\r\n   3: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:36\r\n   4: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:200\r\n   5: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:214\r\n   6: rustc::util::common::panic_hook\r\n   7: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:481\r\n   8: std::panicking::continue_panic_fmt\r\n             at src/libstd/panicking.rs:384\r\n   9: rust_begin_unwind\r\n             at src/libstd/panicking.rs:311\r\n  10: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:85\r\n  11: core::panicking::panic\r\n             at src/libcore/panicking.rs:49\r\n  12: rustc_typeck::check::closure::<impl rustc_typeck::check::FnCtxt>::deduce_sig_from_projection\r\n  13: rustc_typeck::check::closure::<impl rustc_typeck::check::FnCtxt>::check_expr_closure\r\n  14: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  15: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  16: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  17: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_return_expr\r\n  18: rustc_typeck::check::check_fn\r\n  19: rustc::ty::context::GlobalCtxt::enter_local\r\n  20: rustc_typeck::check::typeck_tables_of\r\n  21: rustc::ty::query::__query_compute::typeck_tables_of\r\n  22: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_tables_of>::compute\r\n  23: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  24: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  25: rustc_typeck::collect::checked_type_of\r\n  26: rustc_typeck::collect::type_of\r\n  27: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::type_of>::compute\r\n  28: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  29: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  30: rustc::ty::util::<impl rustc::ty::context::TyCtxt>::try_expand_impl_trait_type::OpaqueTypeExpander::expand_opaque_ty\r\n  31: rustc::ty::util::<impl rustc::ty::context::TyCtxt>::try_expand_impl_trait_type\r\n  32: rustc_typeck::check::check_item_type\r\n  33: rustc::hir::map::Map::visit_item_likes_in_module\r\n  34: rustc_typeck::check::check_mod_item_types\r\n  35: rustc::ty::query::__query_compute::check_mod_item_types\r\n  36: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::check_mod_item_types>::compute\r\n  37: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  38: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  39: rustc_typeck::check_crate::{{closure}}\r\n  40: rustc::util::common::time\r\n  41: rustc_typeck::check_crate\r\n  42: rustc_interface::passes::analysis\r\n  43: rustc::ty::query::__query_compute::analysis\r\n  44: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  45: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  46: rustc::ty::context::tls::enter_global\r\n  47: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  48: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  49: rustc_interface::passes::BoxedGlobalCtxt::enter\r\n  50: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  51: std::thread::local::LocalKey<T>::with\r\n  52: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nquery stack during panic:\r\n#0 [typeck_tables_of] processing `abc`\r\n#1 [type_of] processing `abc::{{opaque}}#0`\r\n#2 [check_mod_item_types] checking item types in top-level module\r\n#3 [analysis] running analysis passes on this crate\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.39.0-nightly (9eae1fc0e 2019-08-23) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63912/timeline", "performed_via_github_app": null, "state_reason": "completed"}