{"url": "https://api.github.com/repos/rust-lang/rust/issues/41823", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41823/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41823/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41823/events", "html_url": "https://github.com/rust-lang/rust/issues/41823", "id": 226917967, "node_id": "MDU6SXNzdWUyMjY5MTc5Njc=", "number": 41823, "title": "Cannot Relate Bound Region on const in Trait, compiler panic", "user": {"login": "insipx", "id": 6452260, "node_id": "MDQ6VXNlcjY0NTIyNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/6452260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/insipx", "html_url": "https://github.com/insipx", "followers_url": "https://api.github.com/users/insipx/followers", "following_url": "https://api.github.com/users/insipx/following{/other_user}", "gists_url": "https://api.github.com/users/insipx/gists{/gist_id}", "starred_url": "https://api.github.com/users/insipx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/insipx/subscriptions", "organizations_url": "https://api.github.com/users/insipx/orgs", "repos_url": "https://api.github.com/users/insipx/repos", "events_url": "https://api.github.com/users/insipx/events{/privacy}", "received_events_url": "https://api.github.com/users/insipx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-08T02:03:46Z", "updated_at": "2017-06-22T17:53:10Z", "closed_at": "2017-06-22T17:53:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```\r\npub trait Emulator<'a> {\r\n    const m:State<'a> = State::new();\r\n\r\n    fn init(&self, ram_64K: &mut u8);\r\n\r\n    fn load(&mut self, regs: [u8; Sizes::REGISTER_COUNT as usize]);\r\n\r\n    // Runs DSP for specified number of clocks (~1024000 per second). Every 32 clocks\r\n    // a pair of samples is to be generated\r\n    fn run(clock_count: isize);\r\n}\r\n```\r\nThe repo with this exact code is here: https://github.com/InsidiousMind/smpd/tree/e4e5842ee6c80f3d7e8319c4ceecdb3b0ef36c8f\r\n\r\nthe file being: https://github.com/InsidiousMind/smpd/blob/e4e5842ee6c80f3d7e8319c4ceecdb3b0ef36c8f/SPC_DSP/src/SPC_DSP.rs\r\n\r\nThe code i added was the `const m:State<'a> = State::new()` (specifically panicked at the lifetime, 'a. Did not expect this code to work.) \r\n\r\nI expected to see this happen: Compile, albeit with many errors (scope errors mostly)\r\n\r\nInstead, this happened: ICE, with an error citing \"cannot relate bound region\"\r\n\r\n## Meta\r\n\r\n```\r\nrustc 1.19.0-nightly (777ee2079 2017-05-01)\r\nbinary: rustc\r\ncommit-hash: 777ee20796e80a31d4b7c985dd68eda2941460d6\r\ncommit-date: 2017-05-01\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.19.0-nightly\r\nLLVM version: 4.0\r\n```\r\nbacktrace:\r\n```\r\n   Compiling SPC_DSP v0.1.0 (file:///home/insi/Projects/smpd/SPC_DSP)\r\n     Running `rustc --crate-name SPC_DSP src/lib.rs --crate-type lib --emit=dep-info,link -C debuginfo=2 -C metadata=32ecbd31718c60b7 -C extra-filename=-32ecbd31718c60b7 --out-dir /home/insi/Projects/smpd/SPC_DSP/target/debug/deps -L dependency=/home/insi/Projects/smpd/SPC_DSP/target/debug/deps`\r\nerror[E0425]: cannot find value `m` in this scope\r\n  --> src/SPC_DSP.rs:81:9\r\n   |\r\n81 |         m.set_ram(ram_64K); \r\n   |         ^ did you mean `Self::m`?\r\n\r\nerror[E0425]: cannot find value `m` in this scope\r\n  --> src/SPC_DSP.rs:82:9\r\n   |\r\n82 |         m.mute_voices(0);\r\n   |         ^ did you mean `Self::m`?\r\n\r\nerror[E0425]: cannot find value `m` in this scope\r\n  --> src/SPC_DSP.rs:83:9\r\n   |\r\n83 |         m.disable_surround(false);\r\n   |         ^ did you mean `Self::m`?\r\n\r\nerror[E0425]: cannot find value `m` in this scope\r\n  --> src/SPC_DSP.rs:84:9\r\n   |\r\n84 |         m.set_output(0 as *mut sample_t, 0isize);\r\n   |         ^ did you mean `Self::m`?\r\n\r\nerror[E0425]: cannot find value `m` in this scope\r\n  --> src/SPC_DSP.rs:85:9\r\n   |\r\n85 |         m.reset();\r\n   |         ^ did you mean `Self::m`?\r\n\r\nerror[E0425]: cannot find value `m` in this scope\r\n  --> src/SPC_DSP.rs:99:9\r\n   |\r\n99 |         m.regs = regs;\r\n   |         ^ did you mean `Self::m`?\r\n\r\nerror[E0425]: cannot find value `m` in this scope\r\n   --> src/macros.rs:37:17\r\n    |\r\n37  |     (kon)   => (m.regs[GlobalRegisters::r_kon   as usize]);\r\n    |                 ^ did you mean `Self::m`?\r\n    | \r\n   ::: src/SPC_DSP.rs\r\n    |\r\n107 |         self.m.new_kon = reg!(kon) as isize;\r\n    |                          --------- in this macro invocation\r\n\r\nerror[E0425]: cannot find value `m` in this scope\r\n   --> src/SPC_DSP.rs:108:28\r\n    |\r\n108 |         self.m.mute_voices(m.mute_mask);\r\n    |                            ^ did you mean `Self::m`?\r\n\r\nerror: internal compiler error: /checkout/src/librustc/infer/region_inference/mod.rs:710: cannot relate bound region: ReEarlyBound(1, 'a) <= ReStatic\r\n  --> src/SPC_DSP.rs:66:25\r\n   |\r\n66 |     const m:State<'a> = State::new();\r\n   |                         ^^^^^^^^^^^^\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: run with `RUST_BACKTRACE=1` for a backtrace\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /checkout/src/librustc_errors/lib.rs:375\r\nstack backtrace:\r\n   0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace\r\n             at /checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:60\r\n             at /checkout/src/libstd/panicking.rs:355\r\n   3: std::panicking::default_hook\r\n             at /checkout/src/libstd/panicking.rs:365\r\n   4: std::panicking::rust_panic_with_hook\r\n             at /checkout/src/libstd/panicking.rs:549\r\n   5: std::panicking::begin_panic\r\n   6: rustc_errors::Handler::span_bug\r\n   7: rustc::session::opt_span_bug_fmt::{{closure}}\r\n   8: rustc::session::opt_span_bug_fmt\r\n   9: rustc::session::span_bug_fmt\r\n  10: rustc::infer::region_inference::RegionVarBindings::make_subregion\r\n  11: <rustc::infer::sub::Sub<'combine, 'infcx, 'gcx, 'tcx> as rustc::ty::relate::TypeRelation<'infcx, 'gcx, 'tcx>>::regions\r\n  12: rustc::ty::relate::relate_substs::{{closure}}\r\n  13: <<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter::Adapter<Iter, E> as core::iter::iterator::Iterator>::next\r\n  14: <core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter\r\n  15: <core::result::Result<T, E> as rustc::ty::context::InternIteratorElement<T, R>>::intern_with\r\n  16: rustc::ty::relate::relate_substs\r\n  17: rustc::ty::relate::relate_item_substs\r\n  18: rustc::ty::relate::super_relate_tys\r\n  19: <rustc::infer::sub::Sub<'combine, 'infcx, 'gcx, 'tcx> as rustc::ty::relate::TypeRelation<'infcx, 'gcx, 'tcx>>::tys\r\n  20: rustc::infer::InferCtxt::sub\r\n  21: rustc::infer::InferCtxt::sub_types\r\n  22: rustc_typeck::check::FnCtxt::expected_inputs_for_expected_output\r\n  23: rustc_typeck::check::callee::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::confirm_builtin_call\r\n  24: rustc_typeck::check::callee::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::check_call\r\n  25: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  26: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  27: rustc_typeck::check::typeck_tables_of\r\n  28: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::try_get\r\n  29: rustc::ty::maps::TyCtxtAt::typeck_tables_of\r\n  30: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_tables_of\r\n  31: rustc_typeck::check::typeck_item_bodies\r\n  32: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_item_bodies<'tcx>>::try_get\r\n  33: rustc::ty::maps::TyCtxtAt::typeck_item_bodies\r\n  34: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_item_bodies\r\n  35: rustc_typeck::check_crate\r\n  36: rustc_driver::driver::phase_3_run_analysis_passes::{{closure}}\r\n  37: rustc_driver::driver::phase_3_run_analysis_passes\r\n  38: rustc_driver::driver::compile_input\r\n  39: rustc_driver::run_compiler\r\n  40: std::panicking::try::do_call\r\n  41: __rust_maybe_catch_panic\r\n             at /checkout/src/libpanic_unwind/lib.rs:98\r\n  42: <F as alloc::boxed::FnBox<A>>::call_box\r\n  43: std::sys::imp::thread::Thread::new::thread_start\r\n             at /checkout/src/liballoc/boxed.rs:658\r\n             at /checkout/src/libstd/sys_common/thread.rs:21\r\n             at /checkout/src/libstd/sys/unix/thread.rs:84\r\n  44: start_thread\r\n  45: clone\r\n\r\nerror: Could not compile `SPC_DSP`.\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --crate-name SPC_DSP src/lib.rs --crate-type lib --emit=dep-info,link -C debuginfo=2 -C metadata=32ecbd31718c60b7 -C extra-filename=-32ecbd31718c60b7 --out-dir /home/insi/Projects/smpd/SPC_DSP/target/debug/deps -L dependency=/home/insi/Projects/smpd/SPC_DSP/target/debug/deps` (exit code: 101)\r\n```\r\n\r\n\r\n\r\n\r\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41823/timeline", "performed_via_github_app": null, "state_reason": "completed"}