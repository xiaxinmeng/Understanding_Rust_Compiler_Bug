{"url": "https://api.github.com/repos/rust-lang/rust/issues/111690", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111690/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111690/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111690/events", "html_url": "https://github.com/rust-lang/rust/issues/111690", "id": 1714463365, "node_id": "I_kwDOAAsO6M5mMKKF", "number": 111690, "title": "`try_into` invalid suggestion", "user": {"login": "fennewald", "id": 23765149, "node_id": "MDQ6VXNlcjIzNzY1MTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/23765149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fennewald", "html_url": "https://github.com/fennewald", "followers_url": "https://api.github.com/users/fennewald/followers", "following_url": "https://api.github.com/users/fennewald/following{/other_user}", "gists_url": "https://api.github.com/users/fennewald/gists{/gist_id}", "starred_url": "https://api.github.com/users/fennewald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fennewald/subscriptions", "organizations_url": "https://api.github.com/users/fennewald/orgs", "repos_url": "https://api.github.com/users/fennewald/repos", "events_url": "https://api.github.com/users/fennewald/events{/privacy}", "received_events_url": "https://api.github.com/users/fennewald/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-05-17T18:42:17Z", "updated_at": "2023-05-18T06:13:32Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "### Code\n\n```Rust\nuse std::ops::Deref;\r\n\r\nstruct Foo();\r\n\r\nimpl Deref for Foo {\r\n    type Target = [u8];\r\n\r\n    fn deref(&self) -> &Self::Target {\r\n        &[0, 0, 0, 0]\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let f = Foo();\r\n    let i = i32::from_le_bytes(f.try_into().unwrap());\r\n}\n```\n\n\n### Current output\n\n```Shell\nCompiling tmp v0.1.0 (/home/ubuntu/tmp)\r\nerror[E0277]: the trait bound `[u8; 4]: From<Foo>` is not satisfied\r\n  --> src/main.rs:19:34\r\n   |\r\n19 |     let i = i32::from_le_bytes(f.try_into().unwrap());\r\n   |                                  ^^^^^^^^ the trait `From<Foo>` is not implemented for `[u8; 4]`\r\n   |\r\n   = help: the following other types implement trait `From<T>`:\r\n             <&'input [u8] as From<gimli::read::endian_slice::EndianSlice<'input, Endian>>>\r\n             <[T; 10] as From<(T, T, T, T, T, T, T, T, T, T)>>\r\n             <[T; 11] as From<(T, T, T, T, T, T, T, T, T, T, T)>>\r\n             <[T; 12] as From<(T, T, T, T, T, T, T, T, T, T, T, T)>>\r\n             <[T; 1] as From<(T,)>>\r\n             <[T; 2] as From<(T, T)>>\r\n             <[T; 3] as From<(T, T, T)>>\r\n             <[T; 4] as From<(T, T, T, T)>>\r\n           and 7 others\r\n   = note: required for `Foo` to implement `Into<[u8; 4]>`\r\n   = note: required for `[u8; 4]` to implement `TryFrom<Foo>`\r\n   = note: required for `Foo` to implement `TryInto<[u8; 4]>`\r\nhelp: convert the array to a `&'input [u8]` slice instead\r\n   |\r\n19 |     let i = i32::from_le_bytes(f.&try_into[..]().unwrap());\r\n   |                                  +        ++++\n```\n\n\n### Desired output\n\n```Shell\nhelp: deference `f`\r\n   |\r\n19 |     let i = i32::from_le_bytes((*f).try_into().unwrap());\r\n   |                                ++ +\n```\n\n\n### Rationale and extra context\n\nThe help suggestion is invalid syntax.\n\n### Other cases\n\n_No response_\n\n### Anything else?\n\nGiven the nature of traits and Deref impls, it may be impossible to get the error message that I supply above, but the suggested fix is invalid syntax.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111690/timeline", "performed_via_github_app": null, "state_reason": null}