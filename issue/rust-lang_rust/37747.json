{"url": "https://api.github.com/repos/rust-lang/rust/issues/37747", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/37747/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/37747/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/37747/events", "html_url": "https://github.com/rust-lang/rust/issues/37747", "id": 188956046, "node_id": "MDU6SXNzdWUxODg5NTYwNDY=", "number": 37747, "title": "panic in program that shouldn't panic when compiling at optimization level 1 or 2", "user": {"login": "mrwright", "id": 327157, "node_id": "MDQ6VXNlcjMyNzE1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/327157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrwright", "html_url": "https://github.com/mrwright", "followers_url": "https://api.github.com/users/mrwright/followers", "following_url": "https://api.github.com/users/mrwright/following{/other_user}", "gists_url": "https://api.github.com/users/mrwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrwright/subscriptions", "organizations_url": "https://api.github.com/users/mrwright/orgs", "repos_url": "https://api.github.com/users/mrwright/repos", "events_url": "https://api.github.com/users/mrwright/events{/privacy}", "received_events_url": "https://api.github.com/users/mrwright/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-11-13T06:56:13Z", "updated_at": "2016-11-13T17:16:36Z", "closed_at": "2016-11-13T17:16:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like if a function called from `main` contains just a `loop {}`, and it's compiled at optimization level 1 or 2, the program will panic when run instead of looping as it's supposed to.\r\n\r\nContents of `main.rs`:\r\n```\r\nfn x() { loop {} }\r\n\r\nfn main() { x(); }\r\n```\r\n\r\nI expect this to loop forever when run. Instead, when compiled with `rustc -C opt-level=1 main.rs` and run, it panics; with `RUST_BACKTRACE=1` set, the output is\r\n```\r\nthread 'main' panicked at 'assertion failed: c.borrow().is_none()', ../src/libstd/sys/common/thread_info.rs:51\r\nstack backtrace:\r\n   1:     0x56456e2de7ff - std::sys::backtrace::tracing::imp::write::h6f1d53a70916b90d\r\n   2:     0x56456e2e12ad - std::panicking::default_hook::{{closure}}::h137e876f7d3b5850\r\n   3:     0x56456e2e080a - std::panicking::default_hook::h0ac3811ec7cee78c\r\n   4:     0x56456e2e0d58 - std::panicking::rust_panic_with_hook::hc303199e04562edf\r\n   5:     0x56456e2e0b9f - std::panicking::begin_panic::h341b039f84d0b176\r\n   6:     0x56456e2de3ef - std::sys_common::thread_info::set::h6f96b62c207d3b7d\r\n   7:     0x56456e2dfdd9 - std::rt::lang_start::h538f8960e7644c80\r\n   8:     0x56456e2e8d76 - __rust_maybe_catch_panic\r\n   9:     0x56456e2e0081 - std::rt::lang_start::h538f8960e7644c80\r\n  10:     0x7fb381dce2b0 - __libc_start_main\r\n  11:     0x56456e2da349 - _start\r\n  12:                0x0 - <unknown>\r\n```\r\n\r\nTested on `rustc 1.13.0 (2c6933acc 2016-11-07)`, `rustc 1.13.0-beta.3 (106d18793 2016-11-04)`, and `rustc 1.14.0-nightly (cae6ab1c4 2016-11-05)`; the issue occurs on all three.\r\n\r\nIt also (unsurprisingly) happens with `opt-level=2`. It does not occur at optimization level 0, and doesn't occur if the loop is in `main` itself rather than a function that `main` calls.\r\n\r\nOutput of `rustc --version --verbose` for the stable `rustc`:\r\n```\r\nrustc 1.13.0 (2c6933acc 2016-11-07)               \r\nbinary: rustc\r\ncommit-hash: 2c6933acc05c61e041be764cb1331f6281993f3f\r\ncommit-date: 2016-11-07\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.13.0\r\n```", "closed_by": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/37747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/37747/timeline", "performed_via_github_app": null, "state_reason": "completed"}