{"url": "https://api.github.com/repos/rust-lang/rust/issues/97661", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/97661/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/97661/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/97661/events", "html_url": "https://github.com/rust-lang/rust/issues/97661", "id": 1258568424, "node_id": "I_kwDOAAsO6M5LBDro", "number": 97661, "title": "ICE related to normalizing erasing regions when using rkyv derive macro", "user": {"login": "awygle", "id": 7854806, "node_id": "MDQ6VXNlcjc4NTQ4MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/7854806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awygle", "html_url": "https://github.com/awygle", "followers_url": "https://api.github.com/users/awygle/followers", "following_url": "https://api.github.com/users/awygle/following{/other_user}", "gists_url": "https://api.github.com/users/awygle/gists{/gist_id}", "starred_url": "https://api.github.com/users/awygle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awygle/subscriptions", "organizations_url": "https://api.github.com/users/awygle/orgs", "repos_url": "https://api.github.com/users/awygle/repos", "events_url": "https://api.github.com/users/awygle/events{/privacy}", "received_events_url": "https://api.github.com/users/awygle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-06-02T18:56:56Z", "updated_at": "2022-10-05T02:41:31Z", "closed_at": "2022-10-05T02:41:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nI am sorry this is not further minimized into the `rkyv` source, I'm not especially familiar with that codebase. The particularly weird thing here is that if I build this as a binary rather than a library I do not get the ICE. I got this ICE in stable and the most recent nightly.\r\n\r\nAlso, it is more than likely that this code is wrong (as in, will not function for my desired effect), but it still shouldn't ICE, obviously.\r\n\r\n### Code\r\n\r\n```Rust\r\nuse rkyv::Archive;\r\n\r\n#[derive(Archive)]\r\npub struct UnsequencedInput<'a> {\r\n    payload: &'a [u8]\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.63.0-nightly (12cd71f4d 2022-06-01)\r\nbinary: rustc\r\ncommit-hash: 12cd71f4d3ea6df9c2093781d55134cd9651d754\r\ncommit-date: 2022-06-01\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.63.0-nightly\r\nLLVM version: 14.0.4\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/normalize_erasing_regions.rs:179:90: Failed to norma[46/1972]\r\n8] as rkyv::Archive>::Resolver, maybe try to call `try_normalize_erasing_regions` instead                                 \r\n                                                                                                                          \r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/12cd71f4d3ea6df9c2093781d55134cd9651d754/compiler/rustc_errors/src/lib.r\r\ns:1335:9                                                                                                                  \r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner>::bug::<&alloc::string::String>\r\n   3: <rustc_errors::Handler>::bug::<&alloc::string::String>\r\n   4: rustc_middle::ty::context::tls::with_opt::<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span\r\n>::{closure#0}, ()>\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: <rustc_middle::ty::normalize_erasing_regions::NormalizeAfterErasingRegionsFolder as rustc_middle::ty::fold::TypeFold\r\ner>::fold_ty\r\n   8: <alloc::vec::Vec<(rustc_middle::mir::Place, core::option::Option<rustc_mir_dataflow::move_paths::MovePathIndex>)> as\r\n alloc::vec::spec_from_iter::SpecFromIter<(rustc_middle::mir::Place, core::option::Option<rustc_mir_dataflow::move_paths::\r\nMovePathIndex>), core::iter::adapters::map::Map<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<rustc_m\r\niddle::ty::FieldDef>>, <rustc_mir_dataflow::elaborate_drops::DropCtxt<rustc_mir_transform::elaborate_drops::Elaborator>>::\r\nmove_paths_for_fields::{closure#0}>>>::from_iter\r\n   9: <rustc_mir_dataflow::elaborate_drops::DropCtxt<rustc_mir_transform::elaborate_drops::Elaborator>>::elaborate_drop\r\n  10: <rustc_mir_transform::elaborate_drops::ElaborateDrops as rustc_middle::mir::MirPass>::run_pass\r\n  11: rustc_mir_transform::pass_manager::run_passes\r\n  12: rustc_mir_transform::mir_drops_elaborated_and_const_checked\r\n  13: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::\r\nquery::caches::DefaultCache<rustc_middle::ty::WithOptConstParam<rustc_span::def_id::LocalDefId>, &rustc_data_structures::s\r\nteal::Steal<rustc_middle::mir::Body>>>\r\n  14: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_drops_elaborated_and_const_checked\r\n  15: rustc_mir_transform::optimized_mir\r\n  16: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::\r\nquery::caches::DefaultCache<rustc_span::def_id::DefId, &rustc_middle::mir::Body>>\r\n  17: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::optimized_mir\r\n  18: <rustc_metadata::rmeta::encoder::EncodeContext>::encode_crate_root\r\n  19: rustc_metadata::rmeta::encoder::encode_metadata_impl\r\n  20: rustc_data_structures::sync::join::<rustc_metadata::rmeta::encoder::encode_metadata::{closure#0}, rustc_metadata::rm\r\neta::encoder::encode_metadata::{closure#1}, rustc_metadata::rmeta::encoder::EncodedMetadata, ()>\r\n  21: rustc_metadata::rmeta::encoder::encode_metadata\r\n  22: <rustc_interface::passes::QueryContext>::enter::<<rustc_interface::queries::Queries>::ongoing_codegen::{closure#0}::\r\n{closure#0}, core::result::Result<alloc::boxed::Box<dyn core::any::Any>, rustc_errors::ErrorGuaranteed>>\r\n  23: <rustc_interface::queries::Queries>::ongoing_codegen\r\n  24: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::\r\nResult<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorGuaranteed>>\r\n  25: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::c\r\nreate_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::\r\n{closure#1}>\r\n  26: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Re\r\nsult<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), r\r\nustc_errors::ErrorGuaranteed>> \r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&t\r\nemplate=ice.md\r\n\r\nnote: rustc 1.63.0-nightly (12cd71f4d 2022-06-01) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type lib -C embed-bitcode=no -C debuginfo=2\r\n\r\nnote: some of the compiler flags provided by cargo are hidden \r\n\r\nquery stack during panic:\r\n#0 [mir_drops_elaborated_and_const_checked] elaborating drops for `_::<impl at unsequenced_producer/src/lib.rs:3:10: 3:17>\r\n::resolve`\r\n#1 [optimized_mir] optimizing MIR for `_::<impl at unsequenced_producer/src/lib.rs:3:10: 3:17>::resolve`\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/97661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/97661/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}