{"url": "https://api.github.com/repos/rust-lang/rust/issues/10334", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/10334/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/10334/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/10334/events", "html_url": "https://github.com/rust-lang/rust/issues/10334", "id": 22250075, "node_id": "MDU6SXNzdWUyMjI1MDA3NQ==", "number": 10334, "title": "Move BufferedReader::{read_until, read_line} somewhere else", "user": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-11-07T08:13:37Z", "updated_at": "2013-11-17T10:26:39Z", "closed_at": "2013-11-17T10:26:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "These methods were originally implemented on `BufferedReader` because they require a call to `read` for each byte if they're implemented naively. However, `BufferedReader` isn't the only type for which this can be done efficiently. At the very least, `MemReader` and `BufReader` have obvious fast implementations. One can imagine other `Reader` implementations that are just proxies for an inner implementation and log data usage or whatever where `read_until` will be fast if it's fast on the underlying `Reader`.\n\nI figure we can either add the methods to `Reader` with a warning saying \"this will be really slow on certain `Reader`s\" or split these methods off onto a separate interface that's implemented by things that can do these efficiently. The second option puts a larger burden on library authors but will probably save people from wondering why `read_line` is slow when called on a `TcpStream`.\n\ncc @alexcrichton \n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/10334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/10334/timeline", "performed_via_github_app": null, "state_reason": "completed"}