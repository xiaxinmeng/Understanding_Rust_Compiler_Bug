{"url": "https://api.github.com/repos/rust-lang/rust/issues/36826", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/36826/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/36826/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/36826/events", "html_url": "https://github.com/rust-lang/rust/issues/36826", "id": 180008832, "node_id": "MDU6SXNzdWUxODAwMDg4MzI=", "number": 36826, "title": "Rust programs require recent glibc due to `__cxa_thread_atexit_impl`", "user": {"login": "Timmmm", "id": 376842, "node_id": "MDQ6VXNlcjM3Njg0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/376842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Timmmm", "html_url": "https://github.com/Timmmm", "followers_url": "https://api.github.com/users/Timmmm/followers", "following_url": "https://api.github.com/users/Timmmm/following{/other_user}", "gists_url": "https://api.github.com/users/Timmmm/gists{/gist_id}", "starred_url": "https://api.github.com/users/Timmmm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Timmmm/subscriptions", "organizations_url": "https://api.github.com/users/Timmmm/orgs", "repos_url": "https://api.github.com/users/Timmmm/repos", "events_url": "https://api.github.com/users/Timmmm/events{/privacy}", "received_events_url": "https://api.github.com/users/Timmmm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 123110, "node_id": "MDU6TGFiZWwxMjMxMTA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-linux", "name": "O-linux", "color": "6e6ec0", "default": false, "description": "Operating system: Linux"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-09-29T10:17:18Z", "updated_at": "2019-01-16T00:28:27Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I _think_ this is a bug but I'm not 100% sure. Anyway, I have cross-compiled a simple Rust program with the toolchain `stable-x86_64-pc-windows-gnu` and the target `armv7-unknown-linux-gnueabihf`, using [this GCC cross compiler from Linaro](https://releases.linaro.org/components/toolchain/binaries/5.3-2016.05/arm-linux-gnueabihf/gcc-linaro-5.3.1-2016.05-i686-mingw32_arm-linux-gnueabihf.tar.xz).\n\nHowever when I run it on a reasonably old system I get:\n\n```\n./foo: /lib/libc.so.6: version `GLIBC_2.18' not found (required by ./foo)\n```\n\n`objdump -T foo` reveals that this is the only symbol that needs glibc 2.18. The others all need 2.4.\n\n```\n00000000  w   DF *UND*  00000000  GLIBC_2.18  __cxa_thread_atexit_impl\n```\n\nThe symbol is weakly defined, however the dependency on glibc 2.18 is still strong:\n\n```\n$ readelf -V foo\n...\nVersion needs section '.gnu.version_r' contains 5 entries:\n Addr: 0x0000000000001e4c  Offset: 0x001e4c  Link: 6 (.dynstr)\n  000000: Version: 1  File: ld-linux-armhf.so.3  Cnt: 1\n  0x0010:   Name: GLIBC_2.4  Flags: none  Version: 9\n  0x0020: Version: 1  File: librt.so.1  Cnt: 1\n  0x0030:   Name: GLIBC_2.4  Flags: none  Version: 5\n  0x0040: Version: 1  File: libgcc_s.so.1  Cnt: 4\n  0x0050:   Name: GCC_4.3.0  Flags: none  Version: 10\n  0x0060:   Name: GCC_3.0  Flags: none  Version: 7\n  0x0070:   Name: GCC_3.5  Flags: none  Version: 6\n  0x0080:   Name: GCC_3.3.1  Flags: none  Version: 4\n  0x0090: Version: 1  File: libc.so.6  Cnt: 2\n  0x00a0:   Name: GLIBC_2.18  Flags: none  Version: 8\n  0x00b0:   Name: GLIBC_2.4  Flags: none  Version: 3\n  0x00c0: Version: 1  File: libpthread.so.0  Cnt: 1\n  0x00d0:   Name: GLIBC_2.4  Flags: none  Version: 2\n```\n\nI found a [site](http://www.lightofdawn.org/wiki/wiki.cgi/NewAppsOnOldGlibc) where they should how to hex edit the binary so it shows this:\n\n```\n 0x00a0:   Name: GLIBC_2.18  Flags: WEAK   Version: 8\n```\n\nHowever it still doesn't work:\n\n```\n./foo: /lib/libc.so.6: weak version `GLIBC_2.18' not found (required by ./foo)\n./foo: relocation error: ./foo: symbol __cxa_thread_atexit_impl, version GLIBC_2.18 not defined in file libc.so.6 with link time reference\n```\n\nNow, I wouldn't have thought this was a bug, except that [the code that uses `__cxa_thread_atexit_impl`](https://github.com/rust-lang/rust/blob/d75c84af806b27137ca3d6cfeba4eb904655a7ad/src/libstd/thread/local.rs#L361-L369) seems to have been written intending it to be a weak reference so it _seems_ like a bug.\n\nI'm not an expert on glibc's insanity though so I could be wrong. I posted [a SO question](http://stackoverflow.com/questions/39744926/how-can-i-compile-a-rust-program-so-it-doesnt-use-cxa-thread-atexit-impl) but no answers yet. :-/\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/36826/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/36826/timeline", "performed_via_github_app": null, "state_reason": null}