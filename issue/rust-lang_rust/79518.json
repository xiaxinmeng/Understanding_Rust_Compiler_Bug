{"url": "https://api.github.com/repos/rust-lang/rust/issues/79518", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79518/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79518/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79518/events", "html_url": "https://github.com/rust-lang/rust/issues/79518", "id": 752765084, "node_id": "MDU6SXNzdWU3NTI3NjUwODQ=", "number": 79518, "title": "ICE with const_evaluatable_checked: unable to compare const generics array", "user": {"login": "Frago9876543210", "id": 13465245, "node_id": "MDQ6VXNlcjEzNDY1MjQ1", "avatar_url": "https://avatars.githubusercontent.com/u/13465245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Frago9876543210", "html_url": "https://github.com/Frago9876543210", "followers_url": "https://api.github.com/users/Frago9876543210/followers", "following_url": "https://api.github.com/users/Frago9876543210/following{/other_user}", "gists_url": "https://api.github.com/users/Frago9876543210/gists{/gist_id}", "starred_url": "https://api.github.com/users/Frago9876543210/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Frago9876543210/subscriptions", "organizations_url": "https://api.github.com/users/Frago9876543210/orgs", "repos_url": "https://api.github.com/users/Frago9876543210/repos", "events_url": "https://api.github.com/users/Frago9876543210/events{/privacy}", "received_events_url": "https://api.github.com/users/Frago9876543210/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "closed", "locked": false, "assignee": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-11-28T20:49:15Z", "updated_at": "2021-02-17T20:21:38Z", "closed_at": "2021-02-16T05:45:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n#![allow(incomplete_features)]\r\n#![feature(const_generics, const_evaluatable_checked)]\r\n\r\nuse std::mem;\r\n\r\npub trait HardcodedPayload {\r\n    type ArrayType: AsRef<[u8]> + AsMut<[u8]> + Default + PartialEq;\r\n    const PAYLOAD: Self::ArrayType;\r\n\r\n    fn test() where [u8; mem::size_of::<Self::ArrayType>()]: Sized + PartialEq { //workaround for `[u8; N]`\r\n        let mut buf = [0u8; mem::size_of::<Self::ArrayType>()];\r\n        //*insert read here*\r\n        if buf == Self::PAYLOAD {} //crashed here\r\n    }\r\n}\r\n\r\npub struct UserStruct {\r\n    _a: i32,\r\n}\r\n\r\nimpl HardcodedPayload for UserStruct {\r\n    type ArrayType = [u8; 2];\r\n    const PAYLOAD: Self::ArrayType = [0xff, 0xff];\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0-nightly (1c389ffef 2020-11-24)\r\nbinary: rustc\r\ncommit-hash: 1c389ffeff814726dec325f0f2b0c99107df2673\r\ncommit-date: 2020-11-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.50.0-nightly\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_traits/src/normalize_erasing_regions.rs:37:32: could not fully normalize `Const { ty: fn() -> usize {std::mem::size_of::<<Self as HardcodedPayload>::ArrayType>}, val: Value(Scalar(<ZST>)) }`\r\n\r\nthread 'rustc' panicked at 'Box<Any>', compiler/rustc_errors/src/lib.rs:958:9\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_traits/src/normalize_erasing_regions.rs:37:32: could not fully normalize `Const { ty: fn() -> usize {std::mem::size_of::<<Self as HardcodedPayload>::ArrayType>}, val: Value(Scalar(<ZST>)) }`\r\n\r\nthread 'rustc' panicked at 'Box<Any>', compiler/rustc_errors/src/lib.rs:958:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: rustc_errors::HandlerInner::bug\r\n   2: rustc_errors::Handler::bug\r\n   3: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n   4: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n   5: rustc_middle::ty::context::tls::with_opt\r\n   6: rustc_middle::util::bug::opt_span_bug_fmt\r\n   7: rustc_middle::util::bug::bug_fmt\r\n   8: rustc_infer::infer::InferCtxtBuilder::enter\r\n   9: rustc_traits::normalize_erasing_regions::normalize_generic_arg_after_erasing_regions\r\n  10: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  11: rustc_data_structures::stack::ensure_sufficient_stack\r\n  12: rustc_query_system::query::plumbing::get_query_impl\r\n  13: <rustc_middle::ty::normalize_erasing_regions::NormalizeAfterErasingRegionsFolder as rustc_middle::ty::fold::TypeFolder>::fold_const\r\n  14: rustc_middle::ty::normalize_erasing_regions::<impl rustc_middle::ty::context::TyCtxt>::subst_and_normalize_erasing_regions\r\n  15: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_operand\r\n  16: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::run\r\n  17: rustc_mir::const_eval::eval_queries::eval_to_allocation_raw_provider\r\n  18: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_allocation_raw>::compute\r\n  19: rustc_middle::ty::query::plumbing::<impl rustc_query_system::query::QueryContext for rustc_middle::ty::context::TyCtxt>::start_query::{{closure}}::{{closure}}::{{closure}}\r\n  20: rustc_query_system::query::plumbing::get_query_impl\r\n  21: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  22: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_const_value_raw>::compute\r\n  23: rustc_middle::ty::query::plumbing::<impl rustc_query_system::query::QueryContext for rustc_middle::ty::context::TyCtxt>::start_query::{{closure}}::{{closure}}::{{closure}}\r\n  24: rustc_query_system::query::plumbing::get_query_impl\r\n  25: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  26: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_const_value_raw>::compute\r\n  27: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  28: rustc_data_structures::stack::ensure_sufficient_stack\r\n  29: rustc_query_system::query::plumbing::get_query_impl\r\n  30: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_global_id\r\n  31: rustc_middle::ty::consts::Const::try_eval_usize\r\n  32: rustc_middle::ty::error::<impl rustc_middle::ty::TyS>::sort_string\r\n  33: <rustc_middle::ty::error::TypeError as core::fmt::Display>::fmt\r\n  34: core::fmt::write\r\n             at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/core/src/fmt/mod.rs:1078:17\r\n  35: rustc_infer::infer::error_reporting::<impl rustc_infer::infer::InferCtxt>::note_type_err\r\n  36: rustc_infer::infer::error_reporting::<impl rustc_infer::infer::InferCtxt>::report_and_explain_type_error\r\n  37: rustc_infer::infer::InferCtxt::report_mismatched_types\r\n  38: rustc_typeck::check::demand::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::demand_coerce_diag\r\n  39: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_coercable_to_type\r\n  40: rustc_typeck::check::op::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_overloaded_binop\r\n  41: rustc_typeck::check::op::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_binop\r\n  42: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  43: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  44: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  45: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  46: rustc_typeck::check::_match::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_match\r\n  47: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  48: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  49: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  50: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  51: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  52: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  53: rustc_typeck::check::check::check_fn\r\n  54: rustc_infer::infer::InferCtxtBuilder::enter\r\n  55: rustc_typeck::check::typeck\r\n  56: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck>::compute\r\n  57: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  58: rustc_data_structures::stack::ensure_sufficient_stack\r\n  59: rustc_query_system::query::plumbing::get_query_impl\r\n  60: rustc_query_system::query::plumbing::ensure_query_impl\r\n  61: rustc_typeck::check::typeck_item_bodies\r\n  62: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck_item_bodies>::compute\r\n  63: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  64: rustc_data_structures::stack::ensure_sufficient_stack\r\n  65: rustc_query_system::query::plumbing::get_query_impl\r\n  66: rustc_typeck::check_crate\r\n  67: rustc_interface::passes::analysis\r\n  68: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  69: rustc_query_system::dep_graph::graph::DepGraph<K>::with_eval_always_task\r\n  70: rustc_data_structures::stack::ensure_sufficient_stack\r\n  71: rustc_query_system::query::plumbing::get_query_impl\r\n  72: rustc_interface::passes::QueryContext::enter\r\n  73: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  74: rustc_span::with_source_map\r\n  75: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (1c389ffef 2020-11-24) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [normalize_generic_arg_after_erasing_regions] normalizing `std::mem::size_of::<<Self as HardcodedPayload>::ArrayType>`\r\n#1 [eval_to_allocation_raw] const-evaluating + checking `HardcodedPayload::test::{constant#0}`\r\n#2 [eval_to_const_value_raw] simplifying constant for the type system `HardcodedPayload::test::{constant#0}`\r\n#3 [eval_to_const_value_raw] simplifying constant for the type system `HardcodedPayload::test::{constant#0}`\r\n#4 [typeck] type-checking `HardcodedPayload::test`\r\n#5 [typeck_item_bodies] type-checking all item bodies\r\n#6 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"BoxyUwU\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79518/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79518/timeline", "performed_via_github_app": null, "state_reason": "completed"}