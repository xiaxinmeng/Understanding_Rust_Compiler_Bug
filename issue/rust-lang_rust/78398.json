{"url": "https://api.github.com/repos/rust-lang/rust/issues/78398", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78398/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78398/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78398/events", "html_url": "https://github.com/rust-lang/rust/issues/78398", "id": 729570464, "node_id": "MDU6SXNzdWU3Mjk1NzA0NjQ=", "number": 78398, "title": "ICE with \"-Z ast-json\": Attempted to encode LazyTokenStream", "user": {"login": "dgrunwald", "id": 243140, "node_id": "MDQ6VXNlcjI0MzE0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/243140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgrunwald", "html_url": "https://github.com/dgrunwald", "followers_url": "https://api.github.com/users/dgrunwald/followers", "following_url": "https://api.github.com/users/dgrunwald/following{/other_user}", "gists_url": "https://api.github.com/users/dgrunwald/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgrunwald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgrunwald/subscriptions", "organizations_url": "https://api.github.com/users/dgrunwald/orgs", "repos_url": "https://api.github.com/users/dgrunwald/repos", "events_url": "https://api.github.com/users/dgrunwald/events{/privacy}", "received_events_url": "https://api.github.com/users/dgrunwald/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-10-26T13:37:30Z", "updated_at": "2020-10-28T03:58:28Z", "closed_at": "2020-10-28T03:58:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nhttps://github.com/dgrunwald/rust-cpython\r\nMaster branch; run `make PY=3 test`\r\n\r\n### Meta\r\nrust-cpython has automated tests using `rustc -Z ast-json` to check that all declared symbols in the python3-sys library really exist in the .so file. These tests recently started failing with an ICE in rustc.\r\n\r\nAccording to cargo-bisect-rustc, this is a regression in 22e6b9c68941996daa45786b4145e6196e51f0f4 (#77250)\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling python3-sys v0.5.1 (/mnt/c/work/rust-cpython/python3-sys)\r\nthread 'rustc' panicked at 'Attempted to encode LazyTokenStream', /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/compiler/rustc_ast/src/tokenstream.rs:178:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.49.0-nightly (ffa2e7ae8 2020-10-24) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z ast-json -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: <rustc_ast::tokenstream::LazyTokenStreamInner as rustc_serialize::serialize::Encodable<S>>::encode\r\n   2: <rustc_serialize::json::Encoder as rustc_serialize::serialize::Encoder>::emit_struct\r\n   3: <rustc_serialize::json::Encoder as rustc_serialize::serialize::Encoder>::emit_seq\r\n   4: <rustc_serialize::json::Encoder as rustc_serialize::serialize::Encoder>::emit_struct\r\n   5: <rustc_serialize::json::Encoder as rustc_serialize::serialize::Encoder>::emit_enum\r\n   6: <rustc_serialize::json::Encoder as rustc_serialize::serialize::Encoder>::emit_struct\r\n   7: <rustc_serialize::json::Encoder as rustc_serialize::serialize::Encoder>::emit_seq\r\n   8: <rustc_serialize::json::Encoder as rustc_serialize::serialize::Encoder>::emit_struct\r\n   9: <rustc_serialize::json::Encoder as rustc_serialize::serialize::Encoder>::emit_enum\r\n  10: <rustc_serialize::json::Encoder as rustc_serialize::serialize::Encoder>::emit_struct\r\n  11: <rustc_serialize::json::Encoder as rustc_serialize::serialize::Encoder>::emit_seq\r\n  12: <rustc_serialize::json::Encoder as rustc_serialize::serialize::Encoder>::emit_struct\r\n  13: <rustc_serialize::json::Encoder as rustc_serialize::serialize::Encoder>::emit_struct\r\n  14: <rustc_serialize::json::AsJson<T> as core::fmt::Display>::fmt\r\n  15: core::fmt::write\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/core/src/fmt/mod.rs:1076:17\r\n  16: std::io::Write::write_fmt\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/std/src/io/mod.rs:1516:15\r\n  17: <&std::io::stdio::Stdout as std::io::Write>::write_fmt\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/std/src/io/stdio.rs:655:9\r\n  18: <std::io::stdio::Stdout as std::io::Write>::write_fmt\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/std/src/io/stdio.rs:629:9\r\n  19: std::io::stdio::print_to::{{closure}}\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/std/src/io/stdio.rs:990:28\r\n  20: core::option::Option<T>::unwrap_or_else\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/core/src/option.rs:427:21\r\n  21: std::io::stdio::print_to\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/std/src/io/stdio.rs:971:18\r\n  22: std::io::stdio::_print\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/std/src/io/stdio.rs:1005:5\r\n  23: rustc_interface::passes::configure_and_expand_inner\r\n  24: rustc_interface::passes::configure_and_expand::{{closure}}\r\n  25: rustc_data_structures::box_region::PinnedGenerator<I,A,R>::new\r\n  26: rustc_interface::passes::configure_and_expand\r\n  27: rustc_interface::queries::Queries::expansion\r\n  28: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  29: rustc_span::with_source_map\r\n  30: rustc_interface::interface::create_compiler_and_run\r\n  31: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78398/timeline", "performed_via_github_app": null, "state_reason": "completed"}