{"url": "https://api.github.com/repos/rust-lang/rust/issues/92772", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92772/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92772/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92772/events", "html_url": "https://github.com/rust-lang/rust/issues/92772", "id": 1099476074, "node_id": "I_kwDOAAsO6M5BiKxq", "number": 92772, "title": "error: could not compile #1 [privacy_access_levels] privacy access levels", "user": {"login": "maxpowel", "id": 529550, "node_id": "MDQ6VXNlcjUyOTU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/529550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxpowel", "html_url": "https://github.com/maxpowel", "followers_url": "https://api.github.com/users/maxpowel/followers", "following_url": "https://api.github.com/users/maxpowel/following{/other_user}", "gists_url": "https://api.github.com/users/maxpowel/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxpowel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxpowel/subscriptions", "organizations_url": "https://api.github.com/users/maxpowel/orgs", "repos_url": "https://api.github.com/users/maxpowel/repos", "events_url": "https://api.github.com/users/maxpowel/events{/privacy}", "received_events_url": "https://api.github.com/users/maxpowel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-01-11T18:08:33Z", "updated_at": "2022-01-11T19:01:12Z", "closed_at": "2022-01-11T19:01:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The output was:\r\n\r\n```\r\nthread 'rustc' panicked at 'failed to lookup `SourceFile` in new context', compiler/rustc_query_impl/src/on_disk_cache.rs:500:22\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.59.0-nightly (e100ec5bc 2021-12-21) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [type_of] computing type of `insert::get_client::{opaque#0}`\r\n#1 [privacy_access_levels] privacy access levels\r\nend of query stack\r\nerror: could not compile `rust_lambda`\r\n```\r\nWith RUST_BACKTRACE=1\r\n```\r\n   Compiling rust_lambda v0.1.0 (/home/maxpowel/rust_lambda)\r\nthread 'rustc' panicked at 'failed to lookup `SourceFile` in new context', compiler/rustc_query_impl/src/on_disk_cache.rs:500:22\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/e100ec5bc7cd768ec17d75448b29c9ab4a39272b/library/std/src/panicking.rs:498:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/e100ec5bc7cd768ec17d75448b29c9ab4a39272b/library/core/src/panicking.rs:107:14\r\n   2: core::panicking::panic_display\r\n             at /rustc/e100ec5bc7cd768ec17d75448b29c9ab4a39272b/library/core/src/panicking.rs:63:5\r\n   3: core::option::expect_failed\r\n             at /rustc/e100ec5bc7cd768ec17d75448b29c9ab4a39272b/library/core/src/option.rs:1819:5\r\n   4: <rustc_span::span_encoding::Span as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   5: <rustc_middle::ty::VariantDef as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   6: <rustc_query_impl::on_disk_cache::CacheDecoder as rustc_serialize::serialize::Decoder>::read_seq::<alloc::vec::Vec<rustc_middle::ty::VariantDef>, <alloc::vec::Vec<rustc_middle::ty::VariantDef> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>\r\n   7: <rustc_middle::ty::adt::AdtDef as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   8: <rustc_middle::ty::sty::TyKind as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   9: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  10: <smallvec::SmallVec<[rustc_middle::ty::subst::GenericArg; 8]> as core::iter::traits::collect::Extend<rustc_middle::ty::subst::GenericArg>>::extend::<core::iter::adapters::ResultShunt<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>, alloc::string::String>>\r\n  11: <core::result::Result<rustc_middle::ty::subst::GenericArg, alloc::string::String> as rustc_middle::ty::context::InternIteratorElement<rustc_middle::ty::subst::GenericArg, &rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg>>>::intern_with::<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>, <rustc_middle::ty::context::TyCtxt>::mk_substs<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>>::{closure#0}>\r\n  12: <rustc_middle::ty::sty::TyKind as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  13: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  14: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  15: <smallvec::SmallVec<[rustc_middle::ty::subst::GenericArg; 8]> as core::iter::traits::collect::Extend<rustc_middle::ty::subst::GenericArg>>::extend::<core::iter::adapters::ResultShunt<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>, alloc::string::String>>\r\n  16: <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  17: <rustc_middle::ty::sty::TyKind as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  18: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  19: <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  20: <rustc_middle::ty::sty::TyKind as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  21: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  22: <rustc_query_impl::on_disk_cache::OnDiskCache>::try_load_query_result::<&rustc_middle::ty::TyS>\r\n  23: rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory::<rustc_query_impl::plumbing::QueryCtxt, rustc_span::def_id::DefId, &rustc_middle::ty::TyS>\r\n  24: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::type_of\r\n  25: <rustc_privacy::ReachEverythingInTheInterfaceVisitor>::ty\r\n  26: <rustc_privacy::EmbargoVisitor as rustc_hir::intravisit::Visitor>::visit_item\r\n  27: <rustc_privacy::EmbargoVisitor as rustc_hir::intravisit::Visitor>::visit_ty\r\n  28: rustc_hir::intravisit::walk_item::<rustc_privacy::EmbargoVisitor>\r\n  29: <rustc_privacy::EmbargoVisitor as rustc_hir::intravisit::Visitor>::visit_item\r\n  30: <rustc_privacy::EmbargoVisitor as rustc_hir::intravisit::Visitor>::visit_mod\r\n  31: <rustc_privacy::EmbargoVisitor as rustc_hir::intravisit::Visitor>::visit_item\r\n  32: <rustc_privacy::EmbargoVisitor as rustc_hir::intravisit::Visitor>::visit_mod\r\n  33: rustc_privacy::privacy_access_levels\r\n  34: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), &rustc_middle::middle::privacy::AccessLevels>\r\n  35: rustc_data_structures::stack::ensure_sufficient_stack::<(&rustc_middle::middle::privacy::AccessLevels, rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, (), &rustc_middle::middle::privacy::AccessLevels>::{closure#3}>\r\n  36: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), &rustc_middle::middle::privacy::AccessLevels>>\r\n  37: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::privacy_access_levels, rustc_query_impl::plumbing::QueryCtxt>\r\n  38: <core::panic::unwind_safe::AssertUnwindSafe<rustc_interface::passes::analysis::{closure#5}::{closure#0}> as core::ops::function::FnOnce<()>>::call_once\r\n  39: <rustc_session::session::Session>::time::<(), rustc_interface::passes::analysis::{closure#5}>\r\n  40: rustc_interface::passes::analysis\r\n  41: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), core::result::Result<(), rustc_errors::ErrorReported>>\r\n  42: rustc_data_structures::stack::ensure_sufficient_stack::<(core::result::Result<(), rustc_errors::ErrorReported>, rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, (), core::result::Result<(), rustc_errors::ErrorReported>>::{closure#3}>\r\n  43: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorReported>>>\r\n  44: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  45: <rustc_interface::passes::QueryContext>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}::{closure#3}, core::result::Result<(), rustc_errors::ErrorReported>>\r\n  46: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorReported>>\r\n  47: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  48: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.59.0-nightly (e100ec5bc 2021-12-21) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [type_of] computing type of `insert::get_client::{opaque#0}`\r\n#1 [privacy_access_levels] privacy access levels\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: could not compile `rust_lambda`\r\n```\r\nand the lsb_release -a is\r\n```\r\nDistributor ID: Neon\r\nDescription:    KDE neon User Edition 5.22\r\nRelease:        20.04\r\nCodename:       focal\r\n```\r\n\r\nThe code I tried to compile:\r\n\r\n`main.rs`\r\n```\r\nmod insert;\r\n\r\nuse aws_sdk_dynamodb::{Error};\r\n\r\n#[tokio::main]\r\nasync fn main() -> Result<(), Error> {\r\n    insert::insert();\r\n\r\n    Ok(())\r\n}\r\n```\r\n\r\n`insert.rs`\r\n```\r\nuse aws_sdk_dynamodb::{Client, Error};\r\nuse aws_sdk_dynamodb::model::AttributeValue;\r\n\r\nasync fn get_client() -> Client {\r\n    let config = aws_config::load_from_env().await;\r\n    let client = Client::new(&config);\r\n    client\r\n}\r\n\r\npub async fn insert() -> Result<(), Error> {\r\n    let client = get_client().await;\r\n\r\n    let user_av = AttributeValue::S(String::from(\"HOLA\"));\r\n    let user_id = AttributeValue::S(String::from(\"asdf\"));\r\n\r\n    let request = client\r\n        .put_item()\r\n        .table_name(\"user\")\r\n        .item(\"id\", user_id)\r\n        .item(\"username\", user_av);\r\n    request.send().await?;\r\n    Ok(())\r\n}\r\n```\r\nCargo.toml\r\n```\r\n[package]\r\nname = \"rust_lambda\"\r\nversion = \"0.1.0\"\r\nedition = \"2021\"\r\n\r\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\r\n\r\n[dependencies]\r\naws-sdk-dynamodb = \"0.4.1\"\r\naws-config = \"0.4.1\"\r\ntokio = { version = \"1\", features = [\"full\"] }\r\n```\r\n\r\nand then:\r\n`cargo build`\r\n\r\nAt line 7 ofr main.rs `insert::insert();` I forgot the await so the compiler should display some kind of error. If you try to compile it fixing the code `insert::insert().await?;` it compiles perfectly.\r\n\r\nI'm sorry if the report is very poor or silly, I just saw the messge `we would appreciate a bug report` and wanted to help :)", "closed_by": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92772/timeline", "performed_via_github_app": null, "state_reason": "completed"}