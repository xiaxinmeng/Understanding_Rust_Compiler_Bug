{"url": "https://api.github.com/repos/rust-lang/rust/issues/52780", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52780/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52780/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52780/events", "html_url": "https://github.com/rust-lang/rust/issues/52780", "id": 345248100, "node_id": "MDU6SXNzdWUzNDUyNDgxMDA=", "number": 52780, "title": "thread::ThreadId Display missing", "user": {"login": "mitsuhiko", "id": 7396, "node_id": "MDQ6VXNlcjczOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/7396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitsuhiko", "html_url": "https://github.com/mitsuhiko", "followers_url": "https://api.github.com/users/mitsuhiko/followers", "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}", "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions", "organizations_url": "https://api.github.com/users/mitsuhiko/orgs", "repos_url": "https://api.github.com/users/mitsuhiko/repos", "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}", "received_events_url": "https://api.github.com/users/mitsuhiko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-27T14:29:36Z", "updated_at": "2019-12-10T16:50:01Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently the `thread::ThreadId` can only be debug rendered. That's not entirely great because it renders with the `ThreadId()` thing around. Right now to report the thread ID to sentry we transmute it so we can get the inner u64 out.\r\n\r\nWould it be reasonable to have a `Display` implementation to get a nice string version of the integer in it? There is a bit of precedent for this in Rust: `StatusCode` in `std::process` can be displayed and so can be process IDs (which are just u32s).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52780/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52780/timeline", "performed_via_github_app": null, "state_reason": null}