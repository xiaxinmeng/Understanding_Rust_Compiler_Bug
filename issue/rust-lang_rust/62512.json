{"url": "https://api.github.com/repos/rust-lang/rust/issues/62512", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62512/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62512/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62512/events", "html_url": "https://github.com/rust-lang/rust/issues/62512", "id": 465547929, "node_id": "MDU6SXNzdWU0NjU1NDc5Mjk=", "number": 62512, "title": "Where clause causes type checking to spuriously fail", "user": {"login": "joshlf", "id": 1046063, "node_id": "MDQ6VXNlcjEwNDYwNjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1046063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshlf", "html_url": "https://github.com/joshlf", "followers_url": "https://api.github.com/users/joshlf/followers", "following_url": "https://api.github.com/users/joshlf/following{/other_user}", "gists_url": "https://api.github.com/users/joshlf/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshlf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshlf/subscriptions", "organizations_url": "https://api.github.com/users/joshlf/orgs", "repos_url": "https://api.github.com/users/joshlf/repos", "events_url": "https://api.github.com/users/joshlf/events{/privacy}", "received_events_url": "https://api.github.com/users/joshlf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-09T03:16:51Z", "updated_at": "2019-07-10T08:44:28Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have the following code on Rust 1.36.0 Stable ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=d0008e38e2daa9c21ff2acc813d67c83)):\r\n\r\n```rust\r\ntrait Foo<Input> {\r\n    type Output;\r\n}\r\n\r\ntrait Bar {\r\n    type Input;\r\n\r\n    fn baz<F: Foo<Self::Input>>() -> F::Output\r\n    where\r\n        F::Output: Default;\r\n}\r\n\r\nimpl<T> Bar for T {\r\n    type Input = T;\r\n\r\n    fn baz<F: Foo<Self::Input>>() -> F::Output\r\n    where\r\n        F::Output: Default,\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nI would expect this to compile, but Rust seems confused by the fact that, in the `<T as Bar>::baz` implementation, the `F` type parameter is both `Foo<Self::Input>` and `Foo<T>` (`T` and `Self::Input` are the same type) and complains that it expects `F` to also implement `Foo<T>`:\r\n\r\n```text\r\nerror[E0277]: the trait bound `F: Foo<T>` is not satisfied\r\n  --> src/lib.rs:16:5\r\n   |\r\n16 | /     fn baz<F: Foo<Self::Input>>() -> F::Output\r\n17 | |     where\r\n18 | |         F::Output: Default,\r\n19 | |     {\r\n20 | |     }\r\n   | |_____^ the trait `Foo<T>` is not implemented for `F`\r\n   |\r\n   = help: consider adding a `where F: Foo<T>` bound\r\n```\r\n\r\nHowever, following the advice of adding a `Foo<T>` bound, Rust is again confused by thinking that `Foo<Self::Input>` and `Foo<T>` are two different traits:\r\n\r\n```text\r\nerror[E0221]: ambiguous associated type `Output` in bounds of `F`\r\n  --> src/lib.rs:18:9\r\n   |\r\n2  |     type Output;\r\n   |     ------------\r\n   |     |\r\n   |     ambiguous `Output` from `Foo<T>`\r\n   |     ambiguous `Output` from `Foo<<T as Bar>::Input>`\r\n...\r\n18 |         F::Output: Default,\r\n   |         ^^^^^^^^^ ambiguous associated type `Output`\r\n\r\nerror[E0221]: ambiguous associated type `Output` in bounds of `F`\r\n  --> src/lib.rs:16:38\r\n   |\r\n2  |     type Output;\r\n   |     ------------\r\n   |     |\r\n   |     ambiguous `Output` from `Foo<T>`\r\n   |     ambiguous `Output` from `Foo<<T as Bar>::Input>`\r\n...\r\n16 |     fn baz<F: Foo<Self::Input>>() -> F::Output\r\n   |                                      ^^^^^^^^^ ambiguous associated type `Output`\r\n```\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62512/timeline", "performed_via_github_app": null, "state_reason": null}