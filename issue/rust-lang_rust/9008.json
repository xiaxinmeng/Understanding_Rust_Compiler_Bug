{"url": "https://api.github.com/repos/rust-lang/rust/issues/9008", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/9008/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/9008/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/9008/events", "html_url": "https://github.com/rust-lang/rust/issues/9008", "id": 19084756, "node_id": "MDU6SXNzdWUxOTA4NDc1Ng==", "number": 9008, "title": "Segfault related to trait bounds", "user": {"login": "novalis", "id": 77003, "node_id": "MDQ6VXNlcjc3MDAz", "avatar_url": "https://avatars.githubusercontent.com/u/77003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/novalis", "html_url": "https://github.com/novalis", "followers_url": "https://api.github.com/users/novalis/followers", "following_url": "https://api.github.com/users/novalis/following{/other_user}", "gists_url": "https://api.github.com/users/novalis/gists{/gist_id}", "starred_url": "https://api.github.com/users/novalis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/novalis/subscriptions", "organizations_url": "https://api.github.com/users/novalis/orgs", "repos_url": "https://api.github.com/users/novalis/repos", "events_url": "https://api.github.com/users/novalis/events{/privacy}", "received_events_url": "https://api.github.com/users/novalis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-09-06T01:54:20Z", "updated_at": "2015-01-13T20:41:25Z", "closed_at": "2015-01-13T20:41:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am saying \"related to trait bounds\" because I have managed to get this in a few different ways, all of which involved trait bounds.  But since I don't fully understand how traits work yet, I'm not really sure what is going on.  Here's a few examples:\n\nThis one spits out a zillion of these before dying:\nsegme.rs:14:0: 14:17 error: expected Op<S,S>, but found Op<int,S> (expected struct S but found int)\nsegme.rs:14 impl Bar for S {}\n\n```\nstruct S {\n    a: u64\n}\n\ntrait Op<RHS,Result> {\n    fn foo(&self, rhs: &RHS) -> Result;\n}\n\npub trait Bar: Op<S,Self> {\n}\n\nimpl Bar for S {}\n\nimpl<T:Bar> Op<int, T> for T {\n    fn foo(&self, a: &int) -> T {\n        //yes, I know this doesn't make sense\n        return 0;\n    }\n}\n\nfn main() {}\n```\n\nThis one just segfaults:\n\n```\ntrait Shape {\n    fn n_sides(&self) -> uint;\n}\n\ntrait Quadrilateral : Shape {\n    fn sides(&self) -> ~[float, ..4];\n}\n\nimpl<T:Quadrilateral> Shape for T {\n    fn n_sides(&self) -> uint {\n        return 4;\n    }\n}\n\ntrait Rectangle : Quadrilateral {\n    //only rectangles have equal-sided diagonals\n    fn diagonal(&self) -> float {\n        let sides = self.sides();\n        return (sides[0] * sides[0] + sides[1] * sides[1]).sqrt();\n    }\n}\n\nstruct SquareImpl {\n    side : float\n}\n\nimpl Quadrilateral for SquareImpl {\n    fn sides(&self) -> ~[float, ..4] {\n        let sides : ~[float, ..4] = ~([self.side, self.side, self.side, self.side]);\n        return sides;\n    }\n}\n\nimpl Rectangle for SquareImpl {\n    //Rectangle's diagonal is implemented by Rectangle\n}\n\nfn main() {}\n```\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/9008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/9008/timeline", "performed_via_github_app": null, "state_reason": "completed"}