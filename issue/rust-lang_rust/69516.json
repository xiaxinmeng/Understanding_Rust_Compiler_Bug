{"url": "https://api.github.com/repos/rust-lang/rust/issues/69516", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69516/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69516/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69516/events", "html_url": "https://github.com/rust-lang/rust/issues/69516", "id": 572165337, "node_id": "MDU6SXNzdWU1NzIxNjUzMzc=", "number": 69516, "title": "Lifetime + variance diagnostic clarity bug", "user": {"login": "porglezomp", "id": 1690225, "node_id": "MDQ6VXNlcjE2OTAyMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1690225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/porglezomp", "html_url": "https://github.com/porglezomp", "followers_url": "https://api.github.com/users/porglezomp/followers", "following_url": "https://api.github.com/users/porglezomp/following{/other_user}", "gists_url": "https://api.github.com/users/porglezomp/gists{/gist_id}", "starred_url": "https://api.github.com/users/porglezomp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/porglezomp/subscriptions", "organizations_url": "https://api.github.com/users/porglezomp/orgs", "repos_url": "https://api.github.com/users/porglezomp/repos", "events_url": "https://api.github.com/users/porglezomp/events{/privacy}", "received_events_url": "https://api.github.com/users/porglezomp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}, {"id": 3675472455, "node_id": "LA_kwDOAAsO6M7bE0JH", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-variance", "name": "A-variance", "color": "f7e101", "default": false, "description": "Area: Variance (https://doc.rust-lang.org/nomicon/subtyping.html)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-27T15:35:41Z", "updated_at": "2023-05-08T17:49:31Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was trying to implement a hierarchical environment type which would store a mutable reference to its parent environment. I ended up with a type which reduces down to this:\r\n```rust\r\nstruct Linked<'a> {\r\n    node: Option<&'a mut Linked<'a>>,\r\n}\r\n\r\nimpl Linked<'_> {\r\n    pub fn wrapping<'a, 'b: 'a>(node: &'a mut Linked<'b>) -> Linked<'a> {\r\n        Linked {\r\n            node: Some(&mut node),\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI get the following relatively uninformative diagnostic:\r\n```rust\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0623]: lifetime mismatch\r\n --> src/main.rs:8:24\r\n  |\r\n6 |     pub fn wrapping<'r, 'a: 'r>(node: &'r mut Linked<'a>) -> Linked<'r> {\r\n  |                                       ------------------\r\n  |                                       |\r\n  |                                       these two types are declared with different lifetimes...\r\n7 |         Linked {\r\n8 |             node: Some(&mut node),\r\n  |                        ^^^^^^^^^ ...but data from `node` flows into `node` here\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0623`.\r\n```\r\n\r\nAfter some research, I determined that this is caused by the `&mut` reference making the wrapped type invariant, meaning that you lose the lifetime subtyping.\r\nIndeed, making all of the references immutable makes it pass, which points to the variance issue.\r\n\r\nI would like it if the diagnostic mentioned that `&mut T` was invariant in `T`, and that's why the lifetime subtyping was ineligible.\r\n\r\n### Meta\r\n\r\nPlayground version, `rustc --version --verbose`:\r\n```\r\n1.43.0-nightly (2020-02-26 abc3073c92df034636a8)\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69516/timeline", "performed_via_github_app": null, "state_reason": null}