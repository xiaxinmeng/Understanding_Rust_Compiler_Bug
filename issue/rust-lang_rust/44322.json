{"url": "https://api.github.com/repos/rust-lang/rust/issues/44322", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44322/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44322/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44322/events", "html_url": "https://github.com/rust-lang/rust/issues/44322", "id": 255120715, "node_id": "MDU6SXNzdWUyNTUxMjA3MTU=", "number": 44322, "title": "Using LTO while building as static library causes conflicts", "user": {"login": "CryZe", "id": 1451630, "node_id": "MDQ6VXNlcjE0NTE2MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1451630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CryZe", "html_url": "https://github.com/CryZe", "followers_url": "https://api.github.com/users/CryZe/followers", "following_url": "https://api.github.com/users/CryZe/following{/other_user}", "gists_url": "https://api.github.com/users/CryZe/gists{/gist_id}", "starred_url": "https://api.github.com/users/CryZe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CryZe/subscriptions", "organizations_url": "https://api.github.com/users/CryZe/orgs", "repos_url": "https://api.github.com/users/CryZe/repos", "events_url": "https://api.github.com/users/CryZe/events{/privacy}", "received_events_url": "https://api.github.com/users/CryZe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-09-04T21:45:31Z", "updated_at": "2022-11-10T12:29:50Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you build your Rust project as a static library to link it into a C codebase, you usually want to crank up the optimizations, as also indicated by the librsvg blogpost (towards the end): \r\n\r\nhttps://people.gnome.org/~federico/blog/librsvg-build-infrastructure.html\r\n\r\nThis is all fine, until you want to link in another library built with Rust, which is very likely if you want to incrementally introduce Rust into your codebase. At that point the linker will start complaining about collisions caused by symbols defined by the standard library:\r\n\r\n```\r\n./liblib2.a(lib2-91c10be1e28e3b68.0.o): In function `std::heap::__default_lib_allocator::__rdl_alloc':\r\n/checkout/src/libstd/heap.rs:31: multiple definition of `__rdl_alloc'\r\n./liblib1.a(lib1-25b44f601e0ef586.0.o):/checkout/src/libstd/heap.rs:31: first defined here\r\n./liblib2.a(lib2-91c10be1e28e3b68.0.o): In function `__rdl_alloc_excess':\r\nlib2.cgu-0.rs:(.text.__rdl_alloc_excess+0x0): multiple definition of `__rdl_alloc_excess'\r\n./liblib1.a(lib1-25b44f601e0ef586.0.o):lib1.cgu-0.rs:(.text.__rdl_alloc_excess+0x0): first defined here\r\n./liblib2.a(lib2-91c10be1e28e3b68.0.o): In function `__rdl_alloc_zeroed':\r\nlib2.cgu-0.rs:(.text.__rdl_alloc_zeroed+0x0): multiple definition of `__rdl_alloc_zeroed'\r\n./liblib1.a(lib1-25b44f601e0ef586.0.o):lib1.cgu-0.rs:(.text.__rdl_alloc_zeroed+0x0): first defined here\r\n./liblib2.a(lib2-91c10be1e28e3b68.0.o): In function `__rdl_dealloc':\r\nlib2.cgu-0.rs:(.text.__rdl_dealloc+0x0): multiple definition of `__rdl_dealloc'\r\n./liblib1.a(lib1-25b44f601e0ef586.0.o):lib1.cgu-0.rs:(.text.__rdl_dealloc+0x0): first defined here\r\n./liblib2.a(lib2-91c10be1e28e3b68.0.o): In function `__rdl_grow_in_place':\r\nlib2.cgu-0.rs:(.text.__rdl_grow_in_place+0x0): multiple definition of `__rdl_grow_in_place'\r\n./liblib1.a(lib1-25b44f601e0ef586.0.o):lib1.cgu-0.rs:(.text.__rdl_grow_in_place+0x0): first defined here\r\n./liblib2.a(lib2-91c10be1e28e3b68.0.o): In function `__rdl_oom':\r\nlib2.cgu-0.rs:(.text.__rdl_oom+0x0): multiple definition of `__rdl_oom'\r\n./liblib1.a(lib1-25b44f601e0ef586.0.o):lib1.cgu-0.rs:(.text.__rdl_oom+0x0): first defined here\r\n./liblib2.a(lib2-91c10be1e28e3b68.0.o): In function `__rdl_realloc':\r\nlib2.cgu-0.rs:(.text.__rdl_realloc+0x0): multiple definition of `__rdl_realloc'\r\n./liblib1.a(lib1-25b44f601e0ef586.0.o):lib1.cgu-0.rs:(.text.__rdl_realloc+0x0): first defined here\r\n./liblib2.a(lib2-91c10be1e28e3b68.0.o): In function `__rdl_realloc_excess':\r\nlib2.cgu-0.rs:(.text.__rdl_realloc_excess+0x0): multiple definition of `__rdl_realloc_excess'\r\n./liblib1.a(lib1-25b44f601e0ef586.0.o):lib1.cgu-0.rs:(.text.__rdl_realloc_excess+0x0): first defined here\r\n./liblib2.a(lib2-91c10be1e28e3b68.0.o): In function `__rdl_shrink_in_place':\r\nlib2.cgu-0.rs:(.text.__rdl_shrink_in_place+0x0): multiple definition of `__rdl_shrink_in_place'\r\n./liblib1.a(lib1-25b44f601e0ef586.0.o):lib1.cgu-0.rs:(.text.__rdl_shrink_in_place+0x0): first defined here\r\n./liblib2.a(lib2-91c10be1e28e3b68.0.o): In function `__rdl_usable_size':\r\nlib2.cgu-0.rs:(.text.__rdl_usable_size+0x0): multiple definition of `__rdl_usable_size'\r\n./liblib1.a(lib1-25b44f601e0ef586.0.o):lib1.cgu-0.rs:(.text.__rdl_usable_size+0x0): first defined here\r\n./liblib2.a(lib2-91c10be1e28e3b68.0.o): In function `rust_eh_personality':\r\nlib2.cgu-0.rs:(.text.rust_eh_personality+0x0): multiple definition of `rust_eh_personality'\r\n./liblib1.a(lib1-25b44f601e0ef586.0.o):lib1.cgu-0.rs:(.text.rust_eh_personality+0x0): first defined here\r\n```\r\n\r\nThis only happens if you set `lto = true`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44322/timeline", "performed_via_github_app": null, "state_reason": null}