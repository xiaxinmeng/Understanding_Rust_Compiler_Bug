{"url": "https://api.github.com/repos/rust-lang/rust/issues/25378", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/25378/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/25378/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/25378/events", "html_url": "https://github.com/rust-lang/rust/issues/25378", "id": 76081680, "node_id": "MDU6SXNzdWU3NjA4MTY4MA==", "number": 25378, "title": "std::i32::MIN.abs() results in panicked at 'arithmetic operation overflowed'", "user": {"login": "econoplas", "id": 146786, "node_id": "MDQ6VXNlcjE0Njc4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/146786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/econoplas", "html_url": "https://github.com/econoplas", "followers_url": "https://api.github.com/users/econoplas/followers", "following_url": "https://api.github.com/users/econoplas/following{/other_user}", "gists_url": "https://api.github.com/users/econoplas/gists{/gist_id}", "starred_url": "https://api.github.com/users/econoplas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/econoplas/subscriptions", "organizations_url": "https://api.github.com/users/econoplas/orgs", "repos_url": "https://api.github.com/users/econoplas/repos", "events_url": "https://api.github.com/users/econoplas/events{/privacy}", "received_events_url": "https://api.github.com/users/econoplas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-05-13T18:37:22Z", "updated_at": "2015-05-16T15:26:52Z", "closed_at": "2015-05-14T17:40:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I encountered 'arithmetic operation overflowed' panick when calling std::i32::MIN.abs() and similarly for i8, i16, and i64.\n\nThe docs for 1.0.0-beta.5 std::num abs function says:\n\n  `Int::min_value() will be returned if the number is Int::min_value().`\n\nI suspect `&& self != <$T>::min_value()` is needed in the `if` condition for the block that returns \"!self + 1\" in`abs` implementation such as:\n\n``` rust\n        pub fn abs(self) -> $T {\n            if self.is_negative() && self != $T::min_value() {\n                !self + 1 // wrapping_neg\n            } else {\n                self\n            }\n        }\n```\n\nI tried this code:\n\n``` rust\nfn main() {\n    println!(\"{}\", (std::i8::MIN).abs());   // Expected i8::MIN\n    println!(\"{}\", (std::i16::MIN).abs());  // Expected i16::MIN\n    println!(\"{}\", (std::i32::MIN).abs());  // Expected i32::MIN\n    println!(\"{}\", (std::i64::MIN).abs());  // Expected i64::MIN\n}\n```\n\nI expected to see this happen:\n    -128\n    -32768\n    -2147483648\n    -9223372036854775808\n\nInstead, this happened:\n    `thread '<main>' panicked at 'arithmetic operation overflowed', /tmp/build/rustc-1.0.0-beta.5/src/libcore/num/mod.rs:509`\n## Meta\n\n`rustc --version --verbose`:\nrustc 1.0.0-dev (built 2015-05-13)\nbinary: rustc\ncommit-hash: unknown\ncommit-date: unknown\nbuild-date: 2015-05-13\nhost: x86_64-unknown-linux-gnu\nrelease: 1.0.0-dev\n\n`$ RUST_BACKTRACE=1 ./try_abs2`\n\n```\nthread '<main>' panicked at 'arithmetic operation overflowed', /tmp/build/rustc-1.0.0-beta.5/src/libcore/num/mod.rs:509\nstack backtrace:\n   1:     0x7f181b0a98f9 - sys::backtrace::write::he573c8167e01081cd4r\n   2:     0x7f181b0acab8 - panicking::on_panic::had2e9609e9ec19cdjrw\n   3:     0x7f181b0a5f32 - rt::unwind::begin_unwind_inner::h2b37885f8310bdebt6v\n   4:     0x7f181b0a61ec - rt::unwind::begin_unwind_fmt::h8504c97e3506491474v\n   5:     0x7f181b0ac426 - rust_begin_unwind\n   6:     0x7f181b0d5094 - panicking::panic_fmt::hdf7ef67474c35dd3wwy\n   7:     0x7f181b0d5014 - panicking::panic::hf43ff458bd7d8b953uy\n   8:     0x7f181b0a470d - num::i8::abs::h3652d8ae9a3c4a64Qhc\n   9:     0x7f181b0a432b - main::h50fc8aac82f30ec4eaa\n  10:     0x7f181b0b0a48 - rust_try_inner\n  11:     0x7f181b0b0a35 - rust_try\n  12:     0x7f181b0ae20b - rt::lang_start::hed504002616c7361Olw\n  13:     0x7f181b0a4b7e - main\n  14:     0x7f181a29daf4 - __libc_start_main\n  15:     0x7f181b0a41d8 - <unknown>\n  16:                0x0 - <unknown>\n```\n\nAs a side-node, I tried this with C (gcc 4.8.3) on the same platform (CentOS 7 x86_64) and abs(INT_MIN) returns INT_MIN, and labs(LONG_MIN) returns LONG_MIN in case there is question whether Rust's documented behavior of abs() returning Int::min_value() is consistent with common C/C++ library implementation (and it is).\n\nDisclaimer: This is C code:\n\n``` C\n   printf(\"%d %d\\n\", INT_MIN, abs(INT_MIN));\n   printf(\"%ld %ld\\n\", LONG_MIN, labs(LONG_MIN));\n```\n\nOutput:\n\n```\n    -2147483648 -2147483648\n    -9223372036854775808 -9223372036854775808\n```\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/25378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/25378/timeline", "performed_via_github_app": null, "state_reason": "completed"}