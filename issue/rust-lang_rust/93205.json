{"url": "https://api.github.com/repos/rust-lang/rust/issues/93205", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93205/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93205/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93205/events", "html_url": "https://github.com/rust-lang/rust/issues/93205", "id": 1111593768, "node_id": "I_kwDOAAsO6M5CQZMo", "number": 93205, "title": "Intradoc `Self::` links are \"not in scope\" when used in `impl` blocks across modules", "user": {"login": "MarijnS95", "id": 2325264, "node_id": "MDQ6VXNlcjIzMjUyNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2325264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarijnS95", "html_url": "https://github.com/MarijnS95", "followers_url": "https://api.github.com/users/MarijnS95/followers", "following_url": "https://api.github.com/users/MarijnS95/following{/other_user}", "gists_url": "https://api.github.com/users/MarijnS95/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarijnS95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarijnS95/subscriptions", "organizations_url": "https://api.github.com/users/MarijnS95/orgs", "repos_url": "https://api.github.com/users/MarijnS95/repos", "events_url": "https://api.github.com/users/MarijnS95/events{/privacy}", "received_events_url": "https://api.github.com/users/MarijnS95/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1118567289, "node_id": "MDU6TGFiZWwxMTE4NTY3Mjg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-intra-doc-links", "name": "A-intra-doc-links", "color": "f7e101", "default": false, "description": "Area: Intra-doc links, the ability to link to items in docs by name"}], "state": "closed", "locked": false, "assignee": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2022-01-22T15:13:04Z", "updated_at": "2022-08-11T14:03:16Z", "closed_at": "2022-08-10T20:52:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n/// Autogenerated code goes here\r\nmod generated {\r\n    pub struct MyNewType(pub(crate) u32);\r\n    impl MyNewType {\r\n        pub const FOO: Self = Self(1);\r\n        pub const BAR: Self = Self(2);\r\n\r\n        /// Reexport of [`Self::FOO`]\r\n        pub const FOO2: Self = Self::FOO;\r\n        /// Reexport of [`Self::FOO_BAR`]\r\n        pub const FOO_BAR2: Self = Self::FOO_BAR;\r\n    }\r\n}\r\n\r\npub use generated::*;\r\n\r\n/// Manual extensions for autogenerated code go here\r\nmod prelude {\r\n    impl super::MyNewType {\r\n        /// Contraction of [`Self::FOO`] | [`Self::BAR`]\r\n        pub const FOO_BAR: Self = Self(Self::FOO.0 | Self::BAR.0);\r\n\r\n        /// Contraction of [`Self::FOO`] and [`Self::BAR`], see also [`Self::FOO_BAR`]\r\n        pub fn raw_foo_bar() -> u32 {\r\n            Self::FOO.0 | Self::BAR.0\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI expected to see this happen: `Self::` intradoc links for the `impl` block residing in `mod prelude` (where `MyNewType` is _not_ defined) are valid links.\r\n\r\nInstead, this happened: Rustdoc thinks that `Self`, resolved to `MyNewType`, is not in scope here:\r\n\r\n```rust\r\nwarning: unresolved link to `MyNewType::FOO`\r\n  --> src/lib.rs:20:30\r\n   |\r\n20 |         /// Contraction of [`Self::FOO`] | [`Self::BAR`]\r\n   |                              ^^^^^^^^^ no item named `MyNewType` in scope\r\n   |\r\n   = note: `#[warn(rustdoc::broken_intra_doc_links)]` on by default\r\n\r\nwarning: unresolved link to `MyNewType::BAR`\r\n  --> src/lib.rs:20:46\r\n   |\r\n20 |         /// Contraction of [`Self::FOO`] | [`Self::BAR`]\r\n   |                                              ^^^^^^^^^ no item named `MyNewType` in scope\r\n\r\nwarning: unresolved link to `MyNewType::FOO`\r\n  --> src/lib.rs:23:30\r\n   |\r\n23 |         /// Contraction of [`Self::FOO`] and [`Self::BAR`], see also [`Self::FOO_BAR`]\r\n   |                              ^^^^^^^^^ no item named `MyNewType` in scope\r\n\r\nwarning: unresolved link to `MyNewType::BAR`\r\n  --> src/lib.rs:23:48\r\n   |\r\n23 |         /// Contraction of [`Self::FOO`] and [`Self::BAR`], see also [`Self::FOO_BAR`]\r\n   |                                                ^^^^^^^^^ no item named `MyNewType` in scope\r\n\r\nwarning: unresolved link to `MyNewType::FOO_BAR`\r\n  --> src/lib.rs:23:72\r\n   |\r\n23 |         /// Contraction of [`Self::FOO`] and [`Self::BAR`], see also [`Self::FOO_BAR`]\r\n   |                                                                        ^^^^^^^^^^^^^ no item named `MyNewType` in scope\r\n\r\nwarning: `doc_experiments` (lib doc) generated 5 warnings\r\n```\r\n\r\nA workaround is to make sure that `MyNewType`, without `super::` prefix, is in scope:\r\n\r\n```diff\r\n-    impl super::MyNewType\r\n+    use super::MyNewType;\r\n+    impl MyNewType {\r\n```\r\n\r\nIn other words, it seems that `Self` in intradoc links resolve to the name of the item, not the full path?\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.60.0-nightly (9ad5d82f8 2022-01-18)\r\nbinary: rustc\r\ncommit-hash: 9ad5d82f822b3cb67637f11be2e65c5662b66ec0\r\ncommit-date: 2022-01-18\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.60.0-nightly\r\nLLVM version: 13.0.0\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93205/timeline", "performed_via_github_app": null, "state_reason": "completed"}