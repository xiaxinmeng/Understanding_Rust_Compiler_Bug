{"url": "https://api.github.com/repos/rust-lang/rust/issues/53446", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53446/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53446/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53446/events", "html_url": "https://github.com/rust-lang/rust/issues/53446", "id": 351565975, "node_id": "MDU6SXNzdWUzNTE1NjU5NzU=", "number": 53446, "title": "Unrelated error report for trait bound checking", "user": {"login": "upsuper", "id": 333750, "node_id": "MDQ6VXNlcjMzMzc1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/333750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/upsuper", "html_url": "https://github.com/upsuper", "followers_url": "https://api.github.com/users/upsuper/followers", "following_url": "https://api.github.com/users/upsuper/following{/other_user}", "gists_url": "https://api.github.com/users/upsuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/upsuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/upsuper/subscriptions", "organizations_url": "https://api.github.com/users/upsuper/orgs", "repos_url": "https://api.github.com/users/upsuper/repos", "events_url": "https://api.github.com/users/upsuper/events{/privacy}", "received_events_url": "https://api.github.com/users/upsuper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-17T11:56:08Z", "updated_at": "2020-06-11T17:32:04Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code:\r\n```rust\r\nuse nalgebra::{Dynamic, MatrixMN};\r\nuse std::fmt::Debug;\r\n\r\ntrait CheckedType : Copy + Clone + Debug + Ord {}\r\n\r\nstruct Foo<T: CheckedType> {\r\n    matrix: MatrixMN<T, Dynamic, Dynamic>,\r\n}\r\n```\r\n\r\nThe compilers reports:\r\n```\r\nerror[E0310]: the parameter type `T` may not live long enough\r\n --> src/main.rs:9:5\r\n  |\r\n8 | struct Foo<T: CheckedType> {\r\n  |            -- help: consider adding an explicit lifetime bound `T: 'static`...\r\n9 |     matrix: MatrixMN<T, Dynamic, Dynamic>,\r\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\nnote: ...so that the type `T` will meet its required lifetime bounds\r\n --> src/main.rs:9:5\r\n  |\r\n9 |     matrix: MatrixMN<T, Dynamic, Dynamic>,\r\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\nChecking the definition of `nalgebra::MatrixMN`, it seems the trait bound needs to include `Scalar`, so if I add `nalgebra::Scalar` to the bound of `CheckedType`, then the code passes compile.\r\n\r\nThe error report for the original code seems to be completely unrelated to the actual fix. I suspect this is a compiler bug.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53446/timeline", "performed_via_github_app": null, "state_reason": null}