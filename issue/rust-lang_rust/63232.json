{"url": "https://api.github.com/repos/rust-lang/rust/issues/63232", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63232/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63232/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63232/events", "html_url": "https://github.com/rust-lang/rust/issues/63232", "id": 476438551, "node_id": "MDU6SXNzdWU0NzY0Mzg1NTE=", "number": 63232, "title": "Rust code copyright situation is unclear", "user": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 372080667, "node_id": "MDU6TGFiZWwzNzIwODA2Njc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-core", "name": "T-core", "color": "bfd4f2", "default": false, "description": "Relevant to the core team, which will review and decide on the PR/issue."}, {"id": 4234928242, "node_id": "LA_kwDOAAsO6M78a-By", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-licensing", "name": "A-licensing", "color": "f7e101", "default": false, "description": "Area: compiler licensing"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2019-08-03T10:27:42Z", "updated_at": "2022-06-15T10:32:52Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Edit 2020/11/27 - I've updated the title of this post to reflect that Rust's copyright is generally a mess. There are links throughout this thread to further details.\r\n\r\nOriginal text:\r\n\r\nThe COPYRIGHT file is out of date.\r\n\r\nThis file extends back to the beginning of time and has rarely been updated. It mostly exists to explain that while Rust is MIT/Apache, it also includes LLVM, which has its own license.\r\n\r\nToday, the Rust distribution contains lots and lots of source code, under a wide variety of licenses. The COPYRIGHT file is quite insufficient to describe Rust's license soup.\r\n\r\nRightfully, Rust needs to reproduce the license of all its constituent components. In the meantime though, it would not be inappropriate to just delete this file, or to replace it with simpler temporary language along the lines of \"Rust is mostly Apache / MIT, but some parts have a different license. Sorry, but at this time I can't tell you exactly which, figure it out yourself. TODO FIXME YOLO\"\r\n\r\nOne notable aspect of this file is declaring that \"portions of the FFI code for interacting with the native ABI is derived from the Clay programming language, which carries the following license.\" This language was added by myself from an abundance of caution with the very first x86_64 (probably) FFI commits. It is likely that the FFI source code has changed so much that it no longer carries any resemblance to the clay source code and this language can be dropped, but is probably worth investigating first. If not, then the license, which is just a 2-clause BSD with specific attribution, can be added directly to the x86_64 ffi source.\r\n\r\nSince Rust's licensing is so complex I might suggest a new solution that, instead of reproducing entire licenses, describes which source code is licensed under which license, by name, e.g.\r\n\r\n```\r\n- [mdbook] - [MPL2]\r\n- [openssl] - [BSD+advertising clause]\r\n- src/foo/bar/x86_64.rs - [BSD 2-clause]\r\n...\r\n```\r\n\r\nA good start for creating this list is the `EXCEPTIONS` list in src/tools/tidy/deps, though it is not complete for code that is not a rust crate (LLVM isn't included). The situation is complex enough that it probably shouldn't be done manually, but tooling added to deal with it, probably building off the src/tidy tooling.\r\n\r\nIt's important to be clear in any licensing documentation that the _runtime_ (std/test) is purely Apache-2.0/MIT/$OTHER_PERMISSIVE_LICENSE (i.e. _your_ code isn't \"infected\" by non-permissive licenses), but the tooling contains copyleft code. (Though note that per the EXCEPTIONS list, the fortanix target _does_ include MPL runtime code ...).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63232/timeline", "performed_via_github_app": null, "state_reason": null}