{"url": "https://api.github.com/repos/rust-lang/rust/issues/80384", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80384/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80384/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80384/events", "html_url": "https://github.com/rust-lang/rust/issues/80384", "id": 774900540, "node_id": "MDU6SXNzdWU3NzQ5MDA1NDA=", "number": 80384, "title": "Tracking Issue for `const_refs_to_cell`", "user": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-12-26T16:33:42Z", "updated_at": "2022-09-21T01:04:03Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a tracking issue for taking references to values of types that (may) contain `UnsafeCell` within const contexts.\r\nThe feature gate for the issue is `#![feature(const_refs_to_cell)]`.\r\n\r\n### About tracking issues\r\n\r\nTracking issues are used to record the overall progress of implementation.\r\nThey are also used as hubs connecting to other relevant issues, e.g., bugs or open design questions.\r\nA tracking issue is however *not* meant for large scale discussion, questions, or bug reports about a feature.\r\nInstead, open a dedicated issue for the specific matter and add the relevant feature gate label.\r\n\r\n### Steps\r\n- [ ] Implement the RFC (#80418)\r\n- [ ] Adjust documentation ([see instructions on rustc-dev-guide][doc-guide])\r\n- [ ] Stabilization PR ([see instructions on rustc-dev-guide][stabilization-guide])\r\n\r\n[stabilization-guide]: https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#stabilization-pr\r\n[doc-guide]: https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#documentation-prs\r\n\r\n### Unresolved questions\r\n\r\n* The feature gate permits `const BAR: AtomicUsize = ..; static FOO: &AtomicUsize = &BAR;` and only prevents `const FOO: &AtomicUsize = &BAR;`. This decision was made because the implementation is simpler this way and we would already allow the `static FOO` case if `BAR` were a static itself.\r\n    * This could be problematic, because LLVM ends up deduplicating some unnamed allocations like the one in `static FOO`\r\n* The soundness of this feature depends on the fact that if a `StorageDead` exists for a local, then for every assignment to the local, on each pass from that assignment to any `return`, there will be a `StorageDead` for this local.\r\n* Once we get heap allocations in constants, it would be possible for users to write a `const fn foo() -> &'static Cell<i32>`, which could then be used to initialize a `const FOO: &'static Cell<i32>` which is unsound (and only caught by dynamic checks). The tracking issue for const heap is #79597 \r\n\r\n### Implementation history\r\n\r\n* #80418\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80384/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80384/timeline", "performed_via_github_app": null, "state_reason": null}