{"url": "https://api.github.com/repos/rust-lang/rust/issues/49862", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49862/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49862/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49862/events", "html_url": "https://github.com/rust-lang/rust/issues/49862", "id": 313121333, "node_id": "MDU6SXNzdWUzMTMxMjEzMzM=", "number": 49862, "title": "NLL: must review all .nll.stderr files", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 867465998, "node_id": "MDU6TGFiZWw4Njc0NjU5OTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-diagnostics", "name": "NLL-diagnostics", "color": "f799ea", "default": false, "description": "Working torwads the \"diagnostic parity\" goal"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-10T23:16:37Z", "updated_at": "2018-05-29T13:12:09Z", "closed_at": "2018-05-29T13:12:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "rust-lang/rust#49861 checkpoints the state of NLL *blindly*. I made almost no attempt to check whether the content of each `.nll.stderr` file makes sense.\r\n\r\n(I did sanity check a couple to just make sure that `--compile-mode=nll` seems like it is working, but even then I wouldn't call that skimming any sort of formal review.)\r\n\r\nSo, here's the issue: each instance of `foo.nll.stderr` represents a difference in the output from the AST-borrowck versus NLL borrowck.\r\n\r\nHere are some reasons we might see different output:\r\n\r\n 1. The input file might be an error under lexical lifetimes but be accepted by rustc under NLL. Such cases are marked by either an empty `foo.nll.stderr` or a `#[rustc_error]` diagnostic output (see #49855 for an explanation of that).\r\n   * Sometimes such a case just means that the test should be removed or converted to a `run-pass` test.\r\n   * But most often, preserving the *spirit* of the original test in this case will require revising it in some way. Much of the Rust test suite was written assuming lexical lifetimes and test authors took short-cuts making use of this, e.g. by just taking a mutable borrow and never using it. We often should just fix such tests  by adding a use of the mutable borrow at a \"correct\" point in the source code.\r\n 2. Both modes might reject the input, but NLL may emit a different set of error codes from AST borrowck. We need to review such cases to make sure the change in codes makes sense; and if it doesn't, then we should file a corresponding bug against NLL.\r\n 3. Both modes might reject the input, with the same error codes, but NLL may have different spans or other details in its diagnostic output. We need to review such cases and determine if the change in output includes an unacceptable degradation in quality; if so, then we need to file a bug against NLL (or, quite possibly, note the particular test in a pre-existing bug, since we already know that NLL has a large number of cases where its diagnostic output is not yet up-to-snuff).\r\n\r\nIn this issue, I am going to make a list of all of the `.nll.stderr` files added in rust-lang/rust#49861. The idea is that people can then volunteer to review that stderr output under NLL mode, comparing it to the `stderr` output under AST borrowck, and figure out which case above the test falls into.\r\n", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49862/timeline", "performed_via_github_app": null, "state_reason": "completed"}