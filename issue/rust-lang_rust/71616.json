{"url": "https://api.github.com/repos/rust-lang/rust/issues/71616", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71616/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71616/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71616/events", "html_url": "https://github.com/rust-lang/rust/issues/71616", "id": 607711191, "node_id": "MDU6SXNzdWU2MDc3MTExOTE=", "number": 71616, "title": "Valgrind reports a leak of 32 Bytes for a std::thread.", "user": {"login": "RustProfi", "id": 32622654, "node_id": "MDQ6VXNlcjMyNjIyNjU0", "avatar_url": "https://avatars.githubusercontent.com/u/32622654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RustProfi", "html_url": "https://github.com/RustProfi", "followers_url": "https://api.github.com/users/RustProfi/followers", "following_url": "https://api.github.com/users/RustProfi/following{/other_user}", "gists_url": "https://api.github.com/users/RustProfi/gists{/gist_id}", "starred_url": "https://api.github.com/users/RustProfi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RustProfi/subscriptions", "organizations_url": "https://api.github.com/users/RustProfi/orgs", "repos_url": "https://api.github.com/users/RustProfi/repos", "events_url": "https://api.github.com/users/RustProfi/events{/privacy}", "received_events_url": "https://api.github.com/users/RustProfi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-27T17:10:51Z", "updated_at": "2020-04-29T15:15:13Z", "closed_at": "2020-04-29T15:15:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::thread;\r\nfn main() {\r\n    thread::spawn(|| println!(\"Hello, world!\")).join().unwrap();\r\n}\r\n```\r\nThe code compiles and Hello, world! gets printed as expected but valgrind reports a leak of still reachable 32 Bytes:\r\n\r\n```\r\n==8853== Memcheck, a memory error detector\r\n==8853== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==8853== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\r\n==8853== Command: ./target/release/thread_test\r\n==8853== \r\nHello, world!\r\n==8853== \r\n==8853== HEAP SUMMARY:\r\n==8853==     in use at exit: 32 bytes in 1 blocks\r\n==8853==   total heap usage: 30 allocs, 29 frees, 4,048 bytes allocated\r\n==8853== \r\n==8853== 32 bytes in 1 blocks are still reachable in loss record 1 of 1\r\n==8853==    at 0x4C31B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==8853==    by 0x4E3D7E4: _dlerror_run (dlerror.c:140)\r\n==8853==    by 0x4E3D165: dlsym (dlsym.c:70)\r\n==8853==    by 0x1178B2: fetch (weak.rs:61)\r\n==8853==    by 0x1178B2: get<unsafe extern \"C\" fn(*const libc::unix::linux_like::linux::gnu::b64::x86_64::pthread_attr_t) -> usize> (weak.rs:46)\r\n==8853==    by 0x1178B2: min_stack_size (thread.rs:439)\r\n==8853==    by 0x1178B2: std::sys::unix::thread::Thread::new (thread.rs:51)\r\n==8853==    by 0x10C8DD: std::thread::spawn (in /home/thread_test/target/release/thread_test)\r\n==8853==    by 0x10CE5F: thread_test::main (in /home/thread_test/target/release/thread_test)\r\n==8853==    by 0x10C682: std::rt::lang_start::{{closure}} (in /home/thread_test/target/release/thread_test)\r\n==8853==    by 0x116122: {{closure}} (rt.rs:52)\r\n==8853==    by 0x116122: std::panicking::try::do_call (panicking.rs:303)\r\n==8853==    by 0x118446: __rust_maybe_catch_panic (lib.rs:86)\r\n==8853==    by 0x116B2B: try<i32,closure-0> (panicking.rs:281)\r\n==8853==    by 0x116B2B: catch_unwind<closure-0,i32> (panic.rs:394)\r\n==8853==    by 0x116B2B: std::rt::lang_start_internal (rt.rs:51)\r\n==8853==    by 0x10CEE1: main (in /home/thread_test/target/release/thread_test)\r\n==8853== \r\n==8853== LEAK SUMMARY:\r\n==8853==    definitely lost: 0 bytes in 0 blocks\r\n==8853==    indirectly lost: 0 bytes in 0 blocks\r\n==8853==      possibly lost: 0 bytes in 0 blocks\r\n==8853==    still reachable: 32 bytes in 1 blocks\r\n==8853==         suppressed: 0 bytes in 0 blocks\r\n==8853== \r\n==8853== For counts of detected and suppressed errors, rerun with: -v\r\n==8853== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\r\n\r\n```\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.43.0 (4fb7144ed 2020-04-20)\r\nbinary: rustc\r\ncommit-hash: 4fb7144ed159f94491249e86d5bbd033b5d60550\r\ncommit-date: 2020-04-20\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.43.0\r\nLLVM version: 9.0\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nSince the code runs, there is no backtrace :)\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71616/timeline", "performed_via_github_app": null, "state_reason": "completed"}