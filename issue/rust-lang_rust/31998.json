{"url": "https://api.github.com/repos/rust-lang/rust/issues/31998", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/31998/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/31998/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/31998/events", "html_url": "https://github.com/rust-lang/rust/issues/31998", "id": 137714699, "node_id": "MDU6SXNzdWUxMzc3MTQ2OTk=", "number": 31998, "title": "Surprising lifetime inference with closures", "user": {"login": "comex", "id": 47517, "node_id": "MDQ6VXNlcjQ3NTE3", "avatar_url": "https://avatars.githubusercontent.com/u/47517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comex", "html_url": "https://github.com/comex", "followers_url": "https://api.github.com/users/comex/followers", "following_url": "https://api.github.com/users/comex/following{/other_user}", "gists_url": "https://api.github.com/users/comex/gists{/gist_id}", "starred_url": "https://api.github.com/users/comex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comex/subscriptions", "organizations_url": "https://api.github.com/users/comex/orgs", "repos_url": "https://api.github.com/users/comex/repos", "events_url": "https://api.github.com/users/comex/events{/privacy}", "received_events_url": "https://api.github.com/users/comex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-01T23:04:47Z", "updated_at": "2023-03-10T11:53:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code fails to compile due to a lifetime error: the intent is for the closure to mutably borrow the variable only until it returns, but somehow the lifetime of the borrow gets inferred to last as long as the variable itself.\n\n``` rust\nfn main() {\n    let func = |a| { a; };\n  //let func = |a: &mut u32| { a; };\n  //let func = |a| { };\n    let mut what: u32 = 2;\n    loop {\n        func(&mut what);\n    }\n}\n```\n\n```\na.rs:7:19: 7:23 error: `what` does not live long enough\na.rs:7         func(&mut what);\n                         ^~~~\na.rs:2:27: 9:2 note: reference must be valid for the block suffix following statement 0 at 2:26...\na.rs:2     let func = |a| { a; };\na.rs:3   //let func = |a| { };\na.rs:4   //let func = |a: &mut u32| { a; };\na.rs:5     let mut what: u32 = 2;\na.rs:6     loop {\na.rs:7         func(&mut what);\n       ...\na.rs:5:27: 9:2 note: ...but borrowed value is only valid for the block suffix following statement 1 at 5:26\na.rs:5     let mut what: u32 = 2;\na.rs:6     loop {\na.rs:7         func(&mut what);\na.rs:8     }\na.rs:9 }\n```\n\nEither of the commented alternatives makes compilation succeed.  The first, making the lifetime signature (semi-)explicit, makes sense; it's odd that simply removing a useless reference to the variable also works, though.\n\nAnyway, while I don't know how the lifetime inference algorithm works, and in particular I don't know whether improving the situation could impact backwards compatibility, it's surprising to me that it can't figure out a reasonable lifetime in this case.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/31998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/31998/timeline", "performed_via_github_app": null, "state_reason": null}