{"url": "https://api.github.com/repos/rust-lang/rust/issues/79889", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79889/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79889/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79889/events", "html_url": "https://github.com/rust-lang/rust/issues/79889", "id": 761024077, "node_id": "MDU6SXNzdWU3NjEwMjQwNzc=", "number": 79889, "title": "VTables which end up in the data segment are miscompiled on AVR.", "user": {"login": "branan", "id": 37594, "node_id": "MDQ6VXNlcjM3NTk0", "avatar_url": "https://avatars.githubusercontent.com/u/37594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/branan", "html_url": "https://github.com/branan", "followers_url": "https://api.github.com/users/branan/followers", "following_url": "https://api.github.com/users/branan/following{/other_user}", "gists_url": "https://api.github.com/users/branan/gists{/gist_id}", "starred_url": "https://api.github.com/users/branan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/branan/subscriptions", "organizations_url": "https://api.github.com/users/branan/orgs", "repos_url": "https://api.github.com/users/branan/repos", "events_url": "https://api.github.com/users/branan/events{/privacy}", "received_events_url": "https://api.github.com/users/branan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1884641928, "node_id": "MDU6TGFiZWwxODg0NjQxOTI4", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-AVR", "name": "O-AVR", "color": "6e6ec0", "default": false, "description": "Target: AVR processors (ATtiny, ATmega, etc.)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-12-10T08:29:02Z", "updated_at": "2022-05-09T17:23:31Z", "closed_at": "2022-05-09T17:23:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code snippet should light the pin 13 LED when compiled for the atmega328 and run on an arduino.  It does not. This is possibly related to #74743, and potentially also avr-rust/rust-legacy-fork#47. I initially found this while trying to implement a `RawWakerVTable`, so it is not restricted to compiler-generated vtables - any function pointers which are stored in the data segment are affected.\r\n\r\nAttempting to simplify further (such as using a single function pointer) tends to end up with pointers which are passed entirely in code and never loaded from the data segment. These appear to be compiled correctly.\r\n\r\n```rust\r\n#![no_std]\r\n#![no_main]\r\n#![feature(llvm_asm, test)]\r\n\r\n#[panic_handler]\r\nfn panic(_panic: &core::panic::PanicInfo) -> ! {\r\n    loop {}\r\n}\r\n\r\ntrait Foo {\r\n    unsafe fn foo(&self);\r\n}\r\n\r\nimpl Foo for () {\r\n    unsafe fn foo(&self) {\r\n        llvm_asm!(\r\n            \"SBI 0x04, 5\r\n         SBI 0x05, 5\"\r\n        );\r\n    }\r\n}\r\n\r\n#[inline(never)]\r\nunsafe fn invoke(foo: &dyn Foo) {\r\n    foo.foo()\r\n}\r\n\r\n#[no_mangle]\r\npub unsafe extern \"C\" fn main() {\r\n    invoke(core::hint::black_box(&()));\r\n    loop {}\r\n}\r\n```\r\n\r\nBuilt + Flashed with:\r\n\r\n```\r\n% cargo +nightly build -Z build-std=core --target=avr-unknown-gnu-atmega328 --release\r\n% avrdude -p atmega328p -c arduino -P /dev/tty.usbmodem142401 -Uflash:w:./target/avr-unknown-gnu-atmega328/release/avr-test.elf\r\n```\r\n\r\nStepping through the execution in simavr/gdb makes the failure obvious - the vtable contains the byte-address of the implementation function, but the `icall` instruction (and indeed the instruction pointer of the AVR in general) uses word-addresses.\r\n\r\n```\r\n(gdb) disas\r\nDump of assembler code for function _ZN8avr_test6invoke17h7f830b8dbe21df91E:\r\n   0x000000ae <+0>:\tmovw\tr30, r22\r\n   0x000000b0 <+2>:\tldd\tr18, Z+6\t; 0x06\r\n   0x000000b2 <+4>:\tldd\tr19, Z+7\t; 0x07\r\n   0x000000b4 <+6>:\tmovw\tr30, r18\r\n=> 0x000000b6 <+8>:\ticall\r\n   0x000000b8 <+10>:\tret\r\nEnd of assembler dump.\r\n(gdb) info r\r\n<snip>\r\nr30            0xa8                168\r\nr31            0x0                 0\r\nSREG           0x0                 0\r\nSP             0x8f5               0x8008f5\r\nPC2            0xb6                182\r\npc             0x5b                0xb6 <avr_test::invoke+8>\r\n(gdb) si\r\n0x00000150 in ?? ()\r\n```\r\n\r\nAs can be seen from the GDB output, after loading the VTable entry the Z register (the combination of r30 and r31) contains \"0x00A8\", and execution jumps to \"0x0150\". The vtable should instead include \"0x0054\", which when treated as a word-address will jump to the expected \"0x00A8\".", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79889/timeline", "performed_via_github_app": null, "state_reason": "completed"}