{"url": "https://api.github.com/repos/rust-lang/rust/issues/72078", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72078/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72078/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72078/events", "html_url": "https://github.com/rust-lang/rust/issues/72078", "id": 615372168, "node_id": "MDU6SXNzdWU2MTUzNzIxNjg=", "number": 72078, "title": "trait and struct functions conflicts resolving inconsistence", "user": {"login": "GopherJ", "id": 33961674, "node_id": "MDQ6VXNlcjMzOTYxNjc0", "avatar_url": "https://avatars.githubusercontent.com/u/33961674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GopherJ", "html_url": "https://github.com/GopherJ", "followers_url": "https://api.github.com/users/GopherJ/followers", "following_url": "https://api.github.com/users/GopherJ/following{/other_user}", "gists_url": "https://api.github.com/users/GopherJ/gists{/gist_id}", "starred_url": "https://api.github.com/users/GopherJ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GopherJ/subscriptions", "organizations_url": "https://api.github.com/users/GopherJ/orgs", "repos_url": "https://api.github.com/users/GopherJ/repos", "events_url": "https://api.github.com/users/GopherJ/events{/privacy}", "received_events_url": "https://api.github.com/users/GopherJ/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-10T11:32:15Z", "updated_at": "2021-08-12T02:25:15Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "consider the first example:\r\n```rust\r\npub struct Test;\r\n\r\nimpl Test {\r\n    pub fn say_hi(&self) {\r\n        println!(\"hi from struct\");\r\n    }\r\n}\r\n\r\nimpl TTest for Test {}\r\n\r\npub trait TTest {\r\n    fn say_hi(&mut self) {\r\n        println!(\"hi from trait\");\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let t = Test;\r\n    t.say_hi();\r\n    // hi from struct \r\n}\r\n```\r\n\r\nThis works fine, by default if we didn't use syntax like `TTest::say_hi(&t)` it uses struct's method.\r\n\r\nconsider the second example which didn't work as expected:\r\n\r\n```rust\r\npub struct Test;\r\n\r\nimpl Test {\r\n    pub fn say_hi(&mut self) {\r\n        println!(\"hi from struct\");\r\n    }\r\n}\r\n\r\nimpl TTest for Test {}\r\n\r\npub trait TTest {\r\n    fn say_hi(&self) {\r\n        println!(\"hi from trait\");\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let mut t = Test;\r\n    t.say_hi();\r\n    // hi from trai\r\n}\r\n```\r\n\r\nThis won't work, it called trait's method and gave a warning `warning: variable does not need to be mutable\r\n` while it should call just struct's method\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72078/timeline", "performed_via_github_app": null, "state_reason": null}