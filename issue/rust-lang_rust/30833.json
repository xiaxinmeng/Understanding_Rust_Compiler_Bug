{"url": "https://api.github.com/repos/rust-lang/rust/issues/30833", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/30833/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/30833/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/30833/events", "html_url": "https://github.com/rust-lang/rust/issues/30833", "id": 126070665, "node_id": "MDU6SXNzdWUxMjYwNzA2NjU=", "number": 30833, "title": "Associated types bug related to trait objects", "user": {"login": "defyrlt", "id": 7937837, "node_id": "MDQ6VXNlcjc5Mzc4Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/7937837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/defyrlt", "html_url": "https://github.com/defyrlt", "followers_url": "https://api.github.com/users/defyrlt/followers", "following_url": "https://api.github.com/users/defyrlt/following{/other_user}", "gists_url": "https://api.github.com/users/defyrlt/gists{/gist_id}", "starred_url": "https://api.github.com/users/defyrlt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/defyrlt/subscriptions", "organizations_url": "https://api.github.com/users/defyrlt/orgs", "repos_url": "https://api.github.com/users/defyrlt/repos", "events_url": "https://api.github.com/users/defyrlt/events{/privacy}", "received_events_url": "https://api.github.com/users/defyrlt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-01-12T00:35:51Z", "updated_at": "2019-02-02T22:50:02Z", "closed_at": "2019-02-02T22:50:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "[Playpen](http://is.gd/fWxLn2)\nRelevant code (note that `DoesStuff` is a trait):\n\n``` rust\nimpl Deref for Foobar {\n    type Target = DoesStuff;\n\n    fn deref(&self) -> &Self::Target {\n        match self {\n            &Foobar::Foo(ref e) => {\n                let newref = e.clone();\n                newref as &DoesStuff // error here\n                // newref as &Self::Target // just works..\n                // newref // returning without `as` works (code below works too)\n            }\n            &Foobar::Bar(ref e) => e,\n        }\n    }\n}\n```\n\nError text:\n\n``` rust\n<anon>:26:26: 26:31 error: cannot infer an appropriate lifetime for pattern due to conflicting requirements [E0495]\n<anon>:26             &Foobar::Foo(ref e) => {\n                                   ^~~~~\n<anon>:27:30: 27:39 note: first, the lifetime cannot outlive the method call at 27:29...\n<anon>:27                 let newref = e.clone();\n                                       ^~~~~~~~~\n<anon>:27:30: 27:31 note: ...so that method receiver is valid for the method call\n<anon>:27                 let newref = e.clone();\n                                       ^\n<anon>:24:38: 34:6 note: but, the lifetime must be valid for the anonymous lifetime #1 defined on the block at 24:37...\n<anon>:24     fn deref(&self) -> &Self::Target {\n<anon>:25         match self {\n<anon>:26             &Foobar::Foo(ref e) => {\n<anon>:27                 let newref = e.clone();\n<anon>:28                 newref as &DoesStuff // error here\n<anon>:29                 // newref as &Self::Target // just works..\n          ...\n<anon>:28:17: 28:37 note: ...so that trait type parameters matches those specified on the impl (expected `core::ops::CoerceUnsized<&DoesStuff + 'static>`, found `core::ops::CoerceUnsized<&DoesStuff + 'static>`)\n<anon>:28                 newref as &DoesStuff // error here\n                          ^~~~~~~~~~~~~~~~~~~~\nerror: aborting due to previous error\nplaypen: application terminated with error code 101\n```\n\ncc @mbrubeck since on the IRC you've told me that it's worthy filing an issue  :)\n", "closed_by": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/30833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/30833/timeline", "performed_via_github_app": null, "state_reason": "completed"}