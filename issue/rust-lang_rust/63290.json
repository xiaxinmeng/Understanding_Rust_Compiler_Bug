{"url": "https://api.github.com/repos/rust-lang/rust/issues/63290", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63290/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63290/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63290/events", "html_url": "https://github.com/rust-lang/rust/issues/63290", "id": 476925247, "node_id": "MDU6SXNzdWU0NzY5MjUyNDc=", "number": 63290, "title": "const generics and lifetimes ICE", "user": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-05T15:31:09Z", "updated_at": "2019-08-05T21:13:40Z", "closed_at": "2019-08-05T21:13:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following ICE's on _stable_, beta and nightly, even though `const_generics` is nightly only:\r\n```Rust\r\n#![feature(const_generics)]\r\nuse core::marker::PhantomData;\r\n\r\nstruct Bug<'a, const S: &'a str>(PhantomData<&'a ()>);\r\n\r\nimpl Bug<'_, {\"\"}> {}\r\n```\r\n<details>\r\n<summary>Backtrace:</summary>\r\n\r\n```\r\nCompiling playground v0.0.1 (/playground)\r\nwarning: the feature `const_generics` is incomplete and may cause the compiler to crash\r\n --> src/lib.rs:1:12\r\n  |\r\n1 | #![feature(const_generics)]\r\n  |            ^^^^^^^^^^^^^^\r\n\r\nerror[E0554]: #![feature] may not be used on the stable release channel\r\n --> src/lib.rs:1:1\r\n  |\r\n1 | #![feature(const_generics)]\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: internal compiler error: src/librustc_mir/borrow_check/nll/universal_regions.rs:741: cannot convert `ReEarlyBound(0, 'a)` to a region vid\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:637:9\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:39\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n             at src/libstd/panicking.rs:197\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:211\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:478\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::util::bug::opt_span_bug_fmt\r\n  13: rustc::util::bug::bug_fmt\r\n  14: rustc_mir::borrow_check::nll::universal_regions::UniversalRegionIndices::to_region_vid::{{closure}}\r\n  15: rustc_mir::borrow_check::nll::universal_regions::UniversalRegionIndices::fold_to_region_vids::{{closure}}\r\n  16: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable for &rustc::ty::TyS>::super_fold_with\r\n  17: rustc_mir::borrow_check::nll::universal_regions::UniversalRegions::new\r\n  18: rustc_mir::borrow_check::nll::replace_regions_in_mir\r\n  19: rustc_mir::borrow_check::do_mir_borrowck\r\n  20: rustc::ty::context::GlobalCtxt::enter_local\r\n  21: rustc_mir::borrow_check::mir_borrowck\r\n  22: rustc::ty::query::__query_compute::mir_borrowck\r\n  23: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::mir_borrowck>::compute\r\n  24: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  25: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  26: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::ensure_query\r\n  27: rustc_mir::transform::optimized_mir\r\n  28: rustc::ty::query::__query_compute::optimized_mir\r\n  29: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::optimized_mir>::compute\r\n  30: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  31: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  32: rustc_mir::interpret::eval_context::InterpretCx<M>::load_mir\r\n  33: rustc_mir::const_eval::const_eval_raw_provider\r\n  34: rustc::ty::query::__query_compute::const_eval_raw\r\n  35: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval_raw>::compute\r\n  36: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  37: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  38: rustc_mir::const_eval::const_eval_provider\r\n  39: rustc::ty::query::__query_compute::const_eval\r\n  40: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval>::compute\r\n  41: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  42: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  43: <rustc::traits::project::AssociatedTypeNormalizer as rustc::ty::fold::TypeFolder>::fold_const\r\n  44: <smallvec::SmallVec<A> as core::iter::traits::collect::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  45: rustc::ty::fold::TypeFoldable::fold_with\r\n  46: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable for &rustc::ty::TyS>::super_fold_with\r\n  47: <rustc::traits::project::AssociatedTypeNormalizer as rustc::ty::fold::TypeFolder>::fold_ty\r\n  48: rustc::traits::project::normalize\r\n  49: rustc_typeck::check::FnCtxt::normalize_associated_types_in\r\n  50: rustc::ty::context::GlobalCtxt::enter_local\r\n  51: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  52: rustc::ty::query::__query_compute::check_item_well_formed\r\n  53: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::check_item_well_formed>::compute\r\n  54: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  55: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  56: <rustc_typeck::check::wfcheck::CheckTypeWellFormedVisitor as rustc::hir::itemlikevisit::ParItemLikeVisitor>::visit_item\r\n  57: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:85\r\n  58: rustc_data_structures::sync::par_for_each_in\r\n  59: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:85\r\n  60: rustc::hir::Crate::par_visit_all_item_likes\r\n  61: rustc::util::common::time\r\n  62: rustc_typeck::check_crate\r\n  63: rustc_interface::passes::analysis\r\n  64: rustc::ty::query::__query_compute::analysis\r\n  65: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::analysis>::compute\r\n  66: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  67: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  68: rustc::ty::context::tls::enter_global\r\n  69: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  70: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  71: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  72: std::thread::local::LocalKey<T>::with\r\n  73: scoped_tls::ScopedKey<T>::set\r\n  74: syntax::with_globals\r\nquery stack during panic:\r\n#0 [mir_borrowck] processing `Ree::<'_, _>::{{constant}}#0`\r\n#1 [optimized_mir] processing `Ree::<'_, _>::{{constant}}#0`\r\n --> src/lib.rs:6:14\r\n  |\r\n6 | impl Ree<'_, {\"\"}> {}\r\n  |              ^^^^\r\n#2 [const_eval_raw] const-evaluating `Ree::<'_, _>::{{constant}}#0`\r\n#3 [const_eval] const-evaluating + checking `Ree::<'_, _>::{{constant}}#0`\r\n#4 [check_item_well_formed] processing `Ree<'_, _>`\r\n#5 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to 2 previous errors\r\n```", "closed_by": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63290/timeline", "performed_via_github_app": null, "state_reason": "completed"}