{"url": "https://api.github.com/repos/rust-lang/rust/issues/71550", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71550/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71550/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71550/events", "html_url": "https://github.com/rust-lang/rust/issues/71550", "id": 606752002, "node_id": "MDU6SXNzdWU2MDY3NTIwMDI=", "number": 71550, "title": "Unsoundness due to variance of trait objects WRT associated types", "user": {"login": "trha", "id": 9519031, "node_id": "MDQ6VXNlcjk1MTkwMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9519031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trha", "html_url": "https://github.com/trha", "followers_url": "https://api.github.com/users/trha/followers", "following_url": "https://api.github.com/users/trha/following{/other_user}", "gists_url": "https://api.github.com/users/trha/gists{/gist_id}", "starred_url": "https://api.github.com/users/trha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trha/subscriptions", "organizations_url": "https://api.github.com/users/trha/orgs", "repos_url": "https://api.github.com/users/trha/repos", "events_url": "https://api.github.com/users/trha/events{/privacy}", "received_events_url": "https://api.github.com/users/trha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1791937891, "node_id": "MDU6TGFiZWwxNzkxOTM3ODkx", "url": "https://api.github.com/repos/rust-lang/rust/labels/ICEBreaker-Cleanup-Crew", "name": "ICEBreaker-Cleanup-Crew", "color": "74cc28", "default": false, "description": "Helping to \"clean up\" bugs with minimal examples and bisections"}, {"id": 1966877457, "node_id": "MDU6TGFiZWwxOTY2ODc3NDU3", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-critical", "name": "P-critical", "color": "eb6420", "default": false, "description": "Critical priority"}], "state": "closed", "locked": false, "assignee": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2020-04-25T11:42:46Z", "updated_at": "2020-06-11T08:30:07Z", "closed_at": "2020-06-11T08:30:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "IIUC currently a trait object is always covariant in its associated types, regardless of their positions.\r\n\r\n```rust\r\ntrait Foo {\r\n  type A;\r\n  // `A` appears in contravariant position\r\n  fn foo(&self, _: Self::A) {}\r\n}\r\n\r\nimpl Foo for () {\r\n  type A = &'static ();\r\n}\r\n\r\nfn bar<'a>(_: &'a dyn Foo<A = &'a ()>) {}\r\n\r\nfn main() {\r\n  let x = ();\r\n  // Let 'x be the lifetime of `&x`\r\n  // 'static <: 'x\r\n  // `dyn Foo` covariant to `Foo::A`\r\n  // `&dyn Foo<A = &'static ()>` <: `&dyn Foo<A = &'x ()>`\r\n  bar(&x);\r\n}\r\n```\r\n\r\nThis makes it possible to pass a non-static reference to a function expecting a static reference:\r\n\r\n```rust\r\nuse std::marker::PhantomData;\r\n\r\ntrait Foo {\r\n    type A;\r\n    type B;\r\n    fn foo(&self, x: Self::A) -> Self::B;\r\n}\r\n\r\nstruct Bar<T>(PhantomData<T>);\r\n\r\nimpl<T: 'static> Foo for Bar<T> {\r\n    type A = &'static T;\r\n    type B = &'static T;\r\n    fn foo(&self, x: Self::A) -> Self::B {\r\n        x\r\n    }\r\n}\r\n\r\nfn bad<'a, T>(x: &dyn Foo<A = &'a T, B = &'static T>, k: &'a T) -> &'static T {\r\n    x.foo(k)\r\n}\r\n\r\n/// Extends the lifetime of an arbitrary reference.\r\nfn extend<'a, T>(x: &'a T) -> &'static T {\r\n    bad(&Bar(PhantomData), x)\r\n}\r\n\r\nfn dangle_ref() -> &'static String {\r\n    let x = \"hello world\".to_string();\r\n    extend(&x)\r\n}\r\n\r\nfn main() {\r\n    // This segfaults.\r\n    println!(\"{}\", dangle_ref());\r\n}\r\n```\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71550/reactions", "total_count": 6, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 4}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71550/timeline", "performed_via_github_app": null, "state_reason": "completed"}