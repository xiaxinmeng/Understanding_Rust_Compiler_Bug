{"url": "https://api.github.com/repos/rust-lang/rust/issues/61058", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61058/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61058/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61058/events", "html_url": "https://github.com/rust-lang/rust/issues/61058", "id": 447378840, "node_id": "MDU6SXNzdWU0NDczNzg4NDA=", "number": 61058, "title": "external macros don't evaluate panicking consts when crate-local ones do.", "user": {"login": "rodrimati1992", "id": 18036327, "node_id": "MDQ6VXNlcjE4MDM2MzI3", "avatar_url": "https://avatars.githubusercontent.com/u/18036327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodrimati1992", "html_url": "https://github.com/rodrimati1992", "followers_url": "https://api.github.com/users/rodrimati1992/followers", "following_url": "https://api.github.com/users/rodrimati1992/following{/other_user}", "gists_url": "https://api.github.com/users/rodrimati1992/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodrimati1992/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodrimati1992/subscriptions", "organizations_url": "https://api.github.com/users/rodrimati1992/orgs", "repos_url": "https://api.github.com/users/rodrimati1992/repos", "events_url": "https://api.github.com/users/rodrimati1992/events{/privacy}", "received_events_url": "https://api.github.com/users/rodrimati1992/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-22T23:01:48Z", "updated_at": "2019-10-13T15:17:17Z", "closed_at": "2019-10-13T15:17:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a proc macro crate which produces a panicking constant in its generate code.\r\n\r\nFor some reason the constant outputed by the proc-macro doesn't get evaluated in `cargo check`,even though it gets evaluated when the macro is manually expanded.\r\n\r\nThis is the conversation that motivated me to write this issue:https://github.com/dtolnay/case-studies/pull/6\r\n\r\nI've put all the code [in this repository](https://github.com/rodrimati1992/const_panic_issue).\r\n\r\nAll of these were tried using the current stable.\r\n\r\nCommands to run:\r\n```\r\ngit clone https://github.com/rodrimati1992/const_panic_issue.git\r\ncd ./const_panic_issue/using_const_panic/\r\ncargo check --bin with_proc_macro\r\ncargo check --bin manually_expanded\r\ncargo check --bin with_internal_macro_rules\r\ncargo check --bin with_external_macro_rules\r\n```\r\n\r\n### With a proc macro\r\n\r\n`const_panic_proc_macro` crate:\r\n\r\n```rust\r\nuse proc_macro::TokenStream;\r\nuse quote::quote;\r\n\r\n#[proc_macro]\r\npub fn const_panicking(_input: TokenStream) -> TokenStream {\r\n    TokenStream::from(quote! {\r\n        const E0: usize = [0][3];\r\n    })\r\n}\r\n\r\n```\r\n\r\n`using_proc_macro` crate:\r\n```rust\r\nconst_panic_proc_macro::const_panicking!{}\r\n```\r\n\r\n**The compiler detects no const errors,even though there is an out of bounds error in the constant.**\r\n\r\nOutput:\r\n```\r\ncargo check --bin with_proc_macro\r\n    Checking using_const_panic v0.1.0 (/home/matias/Documents/eclipse_workspace/tmp/panic_in_const/using_const_panic)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.19s\r\n\r\n```\r\n\r\n### Manually expanded version\r\n\r\nHere is the manually expanded version of the macro (in the `manually_expanded` binary in `using_const_panic`):\r\n```rust\r\nconst E0: usize = [0][3];\r\n```\r\n\r\n**When compiled with `cargo check` outputs the out of bounds error.**\r\n\r\nOutput:\r\n```\r\ncargo check --bin manually_expanded\r\n   Compiling const_panic_proc_macro v0.1.0 (/home/matias/Documents/eclipse_workspace/tmp/panic_in_const/const_panic_proc_macro)\r\n    Checking using_const_panic v0.1.0 (/home/matias/Documents/eclipse_workspace/tmp/panic_in_const/using_const_panic)\r\nwarning: constant item is never used: `E0`\r\n --> src/bin/manually_expanded/main.rs:1:1\r\n  |\r\n1 | const E0: usize = [0][3];\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: #[warn(dead_code)] on by default\r\n\r\nerror: any use of this value will cause an error\r\n --> src/bin/manually_expanded/main.rs:1:1\r\n  |\r\n1 | const E0: usize = [0][3];\r\n  | ^^^^^^^^^^^^^^^^^^------^\r\n  |                   |\r\n  |                   index out of bounds: the len is 1 but the index is 3\r\n  |\r\n  = note: #[deny(const_err)] on by default\r\n\r\nerror: aborting due to previous error\r\n\r\n```\r\n\r\n\r\n### With macro_rules in the same crate\r\n\r\nWith a macro_rule declared in the `with_internal_macro_rules` binary in `using_const_panic`:\r\n\r\n```rust\r\nmod local_panic{\r\n    #[macro_export]\r\n    macro_rules! local_panic_const_panicking{\r\n        ()=>{\r\n            const E0: usize = [0][3];\r\n        }\r\n    }\r\n}\r\nlocal_panic_const_panicking!{}\r\n```\r\n\r\n**When compiled with `cargo check` it produces the intended const error.**\r\n\r\nOutput:\r\n```\r\ncargo check --bin with_internal_macro_rules\r\n    Checking using_const_panic v0.1.0 (/home/matias/Documents/eclipse_workspace/tmp/panic_in_const/using_const_panic)\r\nwarning: constant item is never used: `E0`\r\n --> src/bin/with_internal_macro_rules/main.rs:5:13\r\n  |\r\n5 |             const E0: usize = [0][3];\r\n  |             ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n...\r\n9 | local_panic_const_panicking!{}\r\n  | ------------------------------ in this macro invocation\r\n  |\r\n  = note: #[warn(dead_code)] on by default\r\n\r\nerror: any use of this value will cause an error\r\n --> src/bin/with_internal_macro_rules/main.rs:5:13\r\n  |\r\n5 |             const E0: usize = [0][3];\r\n  |             ^^^^^^^^^^^^^^^^^^------^\r\n  |                               |\r\n  |                               index out of bounds: the len is 1 but the index is 3\r\n...\r\n9 | local_panic_const_panicking!{}\r\n  | ------------------------------ in this macro invocation\r\n  |\r\n  = note: #[deny(const_err)] on by default\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: Could not compile `using_const_panic`.\r\n\r\n```\r\n\r\n### With macro_rules from another crate\r\n\r\nWith a macro_rule declared in another crate:\r\n\r\n\r\n\r\n`macro_rules_panic` crate:\r\n\r\n```rust\r\n#[macro_export]\r\nmacro_rules! const_panicking{\r\n    ()=>{\r\n        const E0: usize = [0][3];\r\n    }\r\n}\r\n```\r\n\r\n`with_external_macro_rules` binary in `using_const_panic`:\r\n\r\n```rust\r\nmacro_rules_panic::const_panicking!{}\r\n```\r\n\r\n**This code `cargo check`s without errors,even though it has an out of bounds error in the constant.**\r\n\r\nOutput:\r\n```\r\ncargo check --bin with_external_macro_rules\r\n    Checking using_const_panic v0.1.0 (/home/matias/Documents/eclipse_workspace/tmp/panic_in_const/using_const_panic)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.17s\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61058/timeline", "performed_via_github_app": null, "state_reason": "completed"}