{"url": "https://api.github.com/repos/rust-lang/rust/issues/86547", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86547/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86547/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86547/events", "html_url": "https://github.com/rust-lang/rust/issues/86547", "id": 927138517, "node_id": "MDU6SXNzdWU5MjcxMzg1MTc=", "number": 86547, "title": "Confusing compiler error when returning a `Result<Result>` via `?`-operator", "user": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-06-22T11:39:11Z", "updated_at": "2021-07-15T14:10:20Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=9aac41ba36103dac1f4ae20fa30c86f0\r\n\r\n```rust\r\nfn foo(x: Option<i32>) -> Result<(), &'static str> {\r\n    let _ = x.ok_or_else(|| Err(\"nope\"))?;\r\n    Ok(())\r\n}\r\n\r\nfn main() {\r\n    println!(\"{:?}\", foo(Some(1)));\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0277]: `?` couldn't convert the error to `&str`\r\n --> src/main.rs:2:41\r\n  |\r\n1 | fn foo(x: Option<i32>) -> Result<(), &'static str> {\r\n  |                           ------------------------ expected `&str` because of this\r\n2 |     let _ = x.ok_or_else(|| Err(\"nope\"))?;\r\n  |                                         ^ the trait `From<Result<_, &str>>` is not implemented for `&str`\r\n  |\r\n  = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait\r\n  = note: required by `from`\r\n```\r\n\r\nIdeally the output would mention the double-`Result` wrapping (\"got type `Result<Result<...>>` expected ...\") and suggest removing one layer or `Result::flatten()` or similar.\r\n\r\nIt kind of does the former already if you squint but it's far from obvious (\"the trait `From<Result<_, &str>>` is not implemented for `&str`\").", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86547/timeline", "performed_via_github_app": null, "state_reason": null}