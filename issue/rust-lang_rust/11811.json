{"url": "https://api.github.com/repos/rust-lang/rust/issues/11811", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/11811/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/11811/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/11811/events", "html_url": "https://github.com/rust-lang/rust/issues/11811", "id": 26307018, "node_id": "MDU6SXNzdWUyNjMwNzAxOA==", "number": 11811, "title": "Make `extern mod xxx` optional", "user": {"login": "liigo", "id": 346530, "node_id": "MDQ6VXNlcjM0NjUzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/346530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liigo", "html_url": "https://github.com/liigo", "followers_url": "https://api.github.com/users/liigo/followers", "following_url": "https://api.github.com/users/liigo/following{/other_user}", "gists_url": "https://api.github.com/users/liigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/liigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liigo/subscriptions", "organizations_url": "https://api.github.com/users/liigo/orgs", "repos_url": "https://api.github.com/users/liigo/repos", "events_url": "https://api.github.com/users/liigo/events{/privacy}", "received_events_url": "https://api.github.com/users/liigo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 32, "created_at": "2014-01-26T03:29:06Z", "updated_at": "2014-07-16T05:25:33Z", "closed_at": "2014-05-07T06:00:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@brson suggested me open a new issue on this idea, \"it seems worth exploring\", he said. He don't want this to get buried in #11745 too. See comments in #11787.\n# The Problem\n\nTo use a crate in rust, at least two lines are required currently:\n\n```\nextern mod xxx;\nuse xxx::a::b;\n```\n\nIn a large project, we need to use many crates, particularly after extra's dissolution (#11787). The more crates we need, the more lines `extern mod xxx` need to write, which is a pain:\n\n```\nextern mod crate1; // do we really need to write this?\nextern mod crate2; \nextern mod crate3;\nextern mod crate4;\n......\nuse crate1::*; // compiler can infers \"extern mod crate1\" from here\nuse crate2::*;\nuse crate3::*;\nuse crate4::*;\n......\n```\n# The Solution\n\nSince we must write lines such as `use xxx::a::b`, the compiler should always knows I'm using the crate xxx. So the `extern mod xxx` is redundant, it should be optional, unless compiler got ambiguity in non-common situations.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/11811/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/11811/timeline", "performed_via_github_app": null, "state_reason": "completed"}