{"url": "https://api.github.com/repos/rust-lang/rust/issues/77772", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77772/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77772/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77772/events", "html_url": "https://github.com/rust-lang/rust/issues/77772", "id": 718442479, "node_id": "MDU6SXNzdWU3MTg0NDI0Nzk=", "number": 77772, "title": "Potentially faster dedup_by implementation", "user": {"login": "Plecra", "id": 60934058, "node_id": "MDQ6VXNlcjYwOTM0MDU4", "avatar_url": "https://avatars.githubusercontent.com/u/60934058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Plecra", "html_url": "https://github.com/Plecra", "followers_url": "https://api.github.com/users/Plecra/followers", "following_url": "https://api.github.com/users/Plecra/following{/other_user}", "gists_url": "https://api.github.com/users/Plecra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Plecra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Plecra/subscriptions", "organizations_url": "https://api.github.com/users/Plecra/orgs", "repos_url": "https://api.github.com/users/Plecra/repos", "events_url": "https://api.github.com/users/Plecra/events{/privacy}", "received_events_url": "https://api.github.com/users/Plecra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 166999014, "node_id": "MDU6TGFiZWwxNjY5OTkwMTQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-collections", "name": "A-collections", "color": "f7e101", "default": false, "description": "Area: std::collections."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-10-09T21:53:31Z", "updated_at": "2022-02-08T19:58:44Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "It seems like the `dedup_by` implementation makes two passes over the data, making many more copies than are strictly necessary. Doing this allows the `same_bucket` implementation to panic without causing a leak. I wouldn't call this *bad*, but it was a surprise to see that it was doing the extra work.\r\n\r\nhttps://godbolt.org/z/4To1a1\r\n\r\nMimicking the way `Drain` handles this and temporarily shortening the vector allows us to cut down on the copies (and also conveniently removes a panicking branch).\r\n\r\nI wonder if it makes sense to document the trade-off that `std` makes here? Imo, it'd make it easier to use the library correctly in the way that <https://doc.rust-lang.org/std/vec/struct.Vec.html#current-implementation-7> does.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77772/timeline", "performed_via_github_app": null, "state_reason": null}