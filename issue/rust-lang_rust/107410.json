{"url": "https://api.github.com/repos/rust-lang/rust/issues/107410", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107410/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107410/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107410/events", "html_url": "https://github.com/rust-lang/rust/issues/107410", "id": 1560825324, "node_id": "I_kwDOAAsO6M5dCE3s", "number": 107410, "title": "`rustc` crashes when used with a custom LD_PRELOAD allocator", "user": {"login": "teodorkostov", "id": 3908465, "node_id": "MDQ6VXNlcjM5MDg0NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/3908465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teodorkostov", "html_url": "https://github.com/teodorkostov", "followers_url": "https://api.github.com/users/teodorkostov/followers", "following_url": "https://api.github.com/users/teodorkostov/following{/other_user}", "gists_url": "https://api.github.com/users/teodorkostov/gists{/gist_id}", "starred_url": "https://api.github.com/users/teodorkostov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teodorkostov/subscriptions", "organizations_url": "https://api.github.com/users/teodorkostov/orgs", "repos_url": "https://api.github.com/users/teodorkostov/repos", "events_url": "https://api.github.com/users/teodorkostov/events{/privacy}", "received_events_url": "https://api.github.com/users/teodorkostov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2023-01-28T11:29:31Z", "updated_at": "2023-04-09T02:12:14Z", "closed_at": "2023-04-09T02:12:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "With a build server that has been set with a mindset on security we are having issues when building Rust packages. The build server is enabled to use `hardened_malloc` by default and the security recommendations from [here](https://madaidans-insecurities.github.io/guides/linux-hardening.html#kernel).\r\n\r\nThis was tested on 2 different systems. One with XMP memory prifle and one without. Results are the same.\r\n```sh\r\n$ uname -a\r\nLinux s1 6.0.17-hardened1-1-hardened #1 SMP PREEMPT_DYNAMIC Thu, 05 Jan 2023 15:05:43 +0000 x86_64 GNU/Linux\r\n$ uname -a\r\nLinux s2 6.1.8-arch1-1 #1 SMP PREEMPT_DYNAMIC Tue, 24 Jan 2023 21:07:04 +0000 x86_64 GNU/Linux\r\n```\r\n\r\nWith the `hardened_malloc` we immediately get:\r\n```sh\r\n$ rustc -Vv\r\nfatal allocator error: invalid uninitialized allocator usage\r\nAborted (core dumped)\r\n```\r\n\r\nOK, we can use a different malloc:\r\n```sh\r\n$ LD_PRELOAD=/usr/lib/libtcmalloc_minimal.so rustc -Vv\r\nrustc 1.66.1 (90743e729 2023-01-10) (Arch Linux rust 1:1.66.1-2)\r\nbinary: rustc\r\ncommit-hash: 90743e7298aca107ddaa0c202a4d3604e29bfeb6\r\ncommit-date: 2023-01-10\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.66.1\r\nLLVM version: 15.0.6\r\n```\r\n\r\nHowever, doing something more causes a crash:\r\n```sh\r\n$ LD_PRELOAD=/usr/lib/libtcmalloc_minimal.so rustc --print sysroot\r\n/usr/lib/librustc_driver-16cbdf77defe646b.so(+0x716a93)[0x67d3d1316a93]\r\n/usr/lib/libc.so.6(+0x389e0)[0x67d3d08cc9e0]\r\nrustc(+0x1e31d)[0xd5b7656431d]\r\n/usr/lib/librustc_driver-16cbdf77defe646b.so(+0x9f3f81)[0x67d3d15f3f81]\r\n/usr/lib/librustc_driver-16cbdf77defe646b.so(+0x8c3c3d)[0x67d3d14c3c3d]\r\n/usr/lib/librustc_driver-16cbdf77defe646b.so(+0x8c2dbe)[0x67d3d14c2dbe]\r\n/usr/lib/librustc_driver-16cbdf77defe646b.so(_RNvNtCslQ2unN6K6Cg_18rustc_codegen_llvm9llvm_util15target_features+0x1b)[0x67d3d14ba9fb]\r\n/usr/lib/librustc_driver-16cbdf77defe646b.so(_RNvXs5_CslQ2unN6K6Cg_18rustc_codegen_llvmNtB5_18LlvmCodegenBackendNtNtNtCs3KeIsc1wum1_17rustc_codegen_ssa6traits7backend14CodegenBackend15target_features+0xf)[0x67d3d15be4af]\r\n/usr/lib/librustc_driver-16cbdf77defe646b.so(_RNvNtCs7G3p4STrBhj_15rustc_interface4util17add_configuration+0x34)[0x67d3d1463134]\r\n/usr/lib/librustc_driver-16cbdf77defe646b.so(_RNvNtCs7G3p4STrBhj_15rustc_interface4util14create_session+0x456)[0x67d3d14636b6]\r\n/usr/lib/librustc_driver-16cbdf77defe646b.so(+0x6e48d5)[0x67d3d12e48d5]\r\n/usr/lib/librustc_driver-16cbdf77defe646b.so(+0x6abaf0)[0x67d3d12abaf0]\r\n/usr/lib/librustc_driver-16cbdf77defe646b.so(+0x68f664)[0x67d3d128f664]\r\n/usr/lib/libstd-b8b91f2b1db9cbe6.so(rust_metadata_std_39f522bdf6789109+0xb0ba3)[0x67d3d0b2bba3]\r\n/usr/lib/libc.so.6(+0x868fd)[0x67d3d091a8fd]\r\n/usr/lib/libc.so.6(+0x108d20)[0x67d3d099cd20]\r\nSegmentation fault (core dumped)\r\n```\r\n\r\nHere is an example package that we would like to build:\r\n```\r\nMaking all in rust\r\nmake[1]: Entering directory '/build/suricata/src/suricata-6.0.9/rust'\r\n\\\r\n\tCARGO_HOME=\"/home/user/.cargo\" \\\r\n\tCARGO_TARGET_DIR=\"/build/suricata/src/suricata-6.0.9/rust/target\" \\\r\n\t/usr/bin/cargo build --release  \\\r\n\t\t--features \"function-macro lua lua_int8   \" \r\nerror: failed to run `rustc` to learn about target-specific information\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc - --crate-name ___ --print=file-names --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=cfg` (signal: 11, SIGSEGV: invalid memory reference)\r\n  --- stderr\r\n  /usr/lib/librustc_driver-16cbdf77defe646b.so(+0x716a93)[0x6754c0716a93]\r\n  /usr/lib/libc.so.6(+0x389e0)[0x6754bfe519e0]\r\n  rustc(+0x1e31d)[0x60e673e631d]\r\n  /usr/lib/librustc_driver-16cbdf77defe646b.so(+0x9f3f81)[0x6754c09f3f81]\r\n  /usr/lib/librustc_driver-16cbdf77defe646b.so(+0x8c3c3d)[0x6754c08c3c3d]\r\n  /usr/lib/librustc_driver-16cbdf77defe646b.so(+0x8c2dbe)[0x6754c08c2dbe]\r\n  /usr/lib/librustc_driver-16cbdf77defe646b.so(_RNvNtCslQ2unN6K6Cg_18rustc_codegen_llvm9llvm_util15target_features+0x1b)[0x6754c08ba9fb]\r\n  /usr/lib/librustc_driver-16cbdf77defe646b.so(_RNvXs5_CslQ2unN6K6Cg_18rustc_codegen_llvmNtB5_18LlvmCodegenBackendNtNtNtCs3KeIsc1wum1_17rustc_codegen_ssa6traits7backend14CodegenBackend15target_features+0xf)[0x6754c09be4af]\r\n  /usr/lib/librustc_driver-16cbdf77defe646b.so(_RNvNtCs7G3p4STrBhj_15rustc_interface4util17add_configuration+0x34)[0x6754c0863134]\r\n  /usr/lib/librustc_driver-16cbdf77defe646b.so(_RNvNtCs7G3p4STrBhj_15rustc_interface4util14create_session+0x456)[0x6754c08636b6]\r\n  /usr/lib/librustc_driver-16cbdf77defe646b.so(+0x6e4045)[0x6754c06e4045]\r\n  /usr/lib/librustc_driver-16cbdf77defe646b.so(+0x6ab9a0)[0x6754c06ab9a0]\r\n  /usr/lib/librustc_driver-16cbdf77defe646b.so(+0x68f464)[0x6754c068f464]\r\n  /usr/lib/libstd-b8b91f2b1db9cbe6.so(rust_metadata_std_39f522bdf6789109+0xb0ba3)[0x6754c43cdba3]\r\n  /usr/lib/libc.so.6(+0x868fd)[0x6754bfe9f8fd]\r\n  /usr/lib/libc.so.6(+0x108d20)[0x6754bff21d20]\r\n```\r\n\r\nThe C code of Suricata compiles just fine.\r\n\r\nWhich of our settings from [here](https://madaidans-insecurities.github.io/guides/linux-hardening.html#kernel) should be rolled back in order to build Rust applications?\r\nWhat is planned for Rust to overcome limitations that environments like ours impose?", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107410/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}