{"url": "https://api.github.com/repos/rust-lang/rust/issues/79066", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79066/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79066/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79066/events", "html_url": "https://github.com/rust-lang/rust/issues/79066", "id": 743198878, "node_id": "MDU6SXNzdWU3NDMxOTg4Nzg=", "number": 79066, "title": "broken mir with -Zvalidate-mir", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2504090242, "node_id": "MDU6TGFiZWwyNTA0MDkwMjQy", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-validate", "name": "A-mir-validate", "color": "f7e101", "default": false, "description": "Area: MIR validator (-Z validate-mir)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-11-15T07:04:58Z", "updated_at": "2020-11-20T03:33:46Z", "closed_at": "2020-11-20T03:33:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\nI think all of these happen since https://github.com/rust-lang/rust/pull/78969\r\n\r\n\r\n### Code\r\n`./src/test/ui/trivial-bounds/trivial-bounds-inconsistent-associated-functions.rs`\r\n```Rust\r\n// check-pass\r\n// compile-flags: --emit=mir,link\r\n// Force mir to be emitted, to ensure that const\r\n// propagation doesn't ICE on a function\r\n// with an 'impossible' body. See issue #67696\r\n// Inconsistent bounds with trait implementations\r\n\r\n#![feature(trivial_bounds)]\r\n#![allow(unused)]\r\n\r\ntrait A {\r\n    fn foo(&self) -> Self where Self: Copy;\r\n}\r\n\r\nimpl A for str {\r\n    fn foo(&self) -> Self where Self: Copy { *\"\" }\r\n}\r\n\r\nimpl A for i32 {\r\n    fn foo(&self) -> Self { 3 }\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0-nightly (75042566d 2020-11-15)\r\nbinary: rustc\r\ncommit-hash: 75042566d1c90d912f22e4db43b6d3af98447986\r\ncommit-date: 2020-11-15\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.50.0-nightly\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: broken MIR in Item(WithOptConstParam { did: DefId(0:6 ~ trivial_bounds_inconsistent_associated_functions[317d]::{impl#0}::foo), const_param_did: None }) (input to phase Const) at bb0[2]:\r\n`Operand::Copy` with non-`Copy` type str\r\n  --> ./src/test/ui/trivial-bounds/trivial-bounds-inconsistent-associated-functions.rs:16:46\r\n   |\r\n16 |     fn foo(&self) -> Self where Self: Copy { *\"\" }\r\n   |                                              ^^^\r\n   |\r\n   = note: delayed at compiler/rustc_mir/src/transform/validate.rs:121:36\r\n\r\nerror: internal compiler error: broken MIR in Item(WithOptConstParam { did: DefId(0:6 ~ trivial_bounds_inconsistent_associated_functions[317d]::{impl#0}::foo), const_param_did: None }) (after CheckPackedRef in phase Const) at bb0[2]:\r\n`Operand::Copy` with non-`Copy` type str\r\n  --> ./src/test/ui/trivial-bounds/trivial-bounds-inconsistent-associated-functions.rs:16:46\r\n   |\r\n16 |     fn foo(&self) -> Self where Self: Copy { *\"\" }\r\n   |                                              ^^^\r\n   |\r\n   = note: delayed at compiler/rustc_mir/src/transform/validate.rs:121:36\r\n\r\nerror: internal compiler error: broken MIR in Item(WithOptConstParam { did: DefId(0:6 ~ trivial_bounds_inconsistent_associated_functions[317d]::{impl#0}::foo), const_param_did: None }) (after CheckConstItemMutation in phase Const) at bb0[2]:\r\n`Operand::Copy` with non-`Copy` type str\r\n  --> ./src/test/ui/trivial-bounds/trivial-bounds-inconsistent-associated-functions.rs:16:46\r\n   |\r\n16 |     fn foo(&self) -> Self where Self: Copy { *\"\" }\r\n   |                                              ^^^\r\n   |\r\n   = note: delayed at compiler/rustc_mir/src/transform/validate.rs:121:36\r\n\r\nerror: internal compiler error: broken MIR in Item(WithOptConstParam { did: DefId(0:6 ~ trivial_bounds_inconsistent_associated_functions[317d]::{impl#0}::foo), const_param_did: None }) (after FunctionItemReferences in phase Const) at bb0[2]:\r\n`Operand::Copy` with non-`Copy` type str\r\n  --> ./src/test/ui/trivial-bounds/trivial-bounds-inconsistent-associated-functions.rs:16:46\r\n   |\r\n16 |     fn foo(&self) -> Self where Self: Copy { *\"\" }\r\n   |                                              ^^^\r\n   |\r\n   = note: delayed at compiler/rustc_mir/src/transform/validate.rs:121:36\r\n\r\nerror: internal compiler error: broken MIR in Item(WithOptConstParam { did: DefId(0:6 ~ trivial_bounds_inconsistent_associated_functions[317d]::{impl#0}::foo), const_param_did: None }) (after SimplifyCfg-initial in phase Const) at bb0[2]:\r\n`Operand::Copy` with non-`Copy` type str\r\n  --> ./src/test/ui/trivial-bounds/trivial-bounds-inconsistent-associated-functions.rs:16:46\r\n   |\r\n16 |     fn foo(&self) -> Self where Self: Copy { *\"\" }\r\n   |                                              ^^^\r\n   |\r\n   = note: delayed at compiler/rustc_mir/src/transform/validate.rs:121:36\r\n\r\nerror: internal compiler error: broken MIR in Item(WithOptConstParam { did: DefId(0:6 ~ trivial_bounds_inconsistent_associated_functions[317d]::{impl#0}::foo), const_param_did: None }) (after SanityCheck in phase Const) at bb0[2]:\r\n`Operand::Copy` with non-`Copy` type str\r\n  --> ./src/test/ui/trivial-bounds/trivial-bounds-inconsistent-associated-functions.rs:16:46\r\n   |\r\n16 |     fn foo(&self) -> Self where Self: Copy { *\"\" }\r\n   |                                              ^^^\r\n   |\r\n   = note: delayed at compiler/rustc_mir/src/transform/validate.rs:121:36\r\n\r\nerror: internal compiler error: broken MIR in Item(WithOptConstParam { did: DefId(0:6 ~ trivial_bounds_inconsistent_associated_functions[317d]::{impl#0}::foo), const_param_did: None }) (input to phase ConstPromotion) at bb0[2]:\r\n`Operand::Copy` with non-`Copy` type str\r\n  --> ./src/test/ui/trivial-bounds/trivial-bounds-inconsistent-associated-functions.rs:16:46\r\n   |\r\n16 |     fn foo(&self) -> Self where Self: Copy { *\"\" }\r\n   |                                              ^^^\r\n   |\r\n   = note: delayed at compiler/rustc_mir/src/transform/validate.rs:121:36\r\n\r\nerror: internal compiler error: broken MIR in Item(WithOptConstParam { did: DefId(0:6 ~ trivial_bounds_inconsistent_associated_functions[317d]::{impl#0}::foo), const_param_did: None }) (after PromoteTemps in phase ConstPromotion) at bb0[2]:\r\n`Operand::Copy` with non-`Copy` type str\r\n  --> ./src/test/ui/trivial-bounds/trivial-bounds-inconsistent-associated-functions.rs:16:46\r\n   |\r\n16 |     fn foo(&self) -> Self where Self: Copy { *\"\" }\r\n   |                                              ^^^\r\n   |\r\n   = note: delayed at compiler/rustc_mir/src/transform/validate.rs:121:36\r\n\r\nerror: internal compiler error: broken MIR in Item(WithOptConstParam { did: DefId(0:6 ~ trivial_bounds_inconsistent_associated_functions[317d]::{impl#0}::foo), const_param_did: None }) (after SimplifyCfg-promote-consts in phase ConstPromotion) at bb0[2]:\r\n`Operand::Copy` with non-`Copy` type str\r\n  --> ./src/test/ui/trivial-bounds/trivial-bounds-inconsistent-associated-functions.rs:16:46\r\n   |\r\n16 |     fn foo(&self) -> Self where Self: Copy { *\"\" }\r\n   |                                              ^^^\r\n   |\r\n   = note: delayed at compiler/rustc_mir/src/transform/validate.rs:121:36\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', compiler/rustc_errors/src/lib.rs:974:13\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (75042566d 2020-11-15) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z validate-mir\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', compiler/rustc_errors/src/lib.rs:974:13\r\nstack backtrace:\r\n   0:     0x7fe3adac99a0 - std::backtrace_rs::backtrace::libunwind::trace::h448c56741b6011d3\r\n                               at /rustc/75042566d1c90d912f22e4db43b6d3af98447986/library/std/src/../../backtrace/src/backtrace/libunwind.rs:100:5\r\n   1:     0x7fe3adac99a0 - std::backtrace_rs::backtrace::trace_unsynchronized::h2d26397c5720fdbb\r\n                               at /rustc/75042566d1c90d912f22e4db43b6d3af98447986/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7fe3adac99a0 - std::sys_common::backtrace::_print_fmt::h720a2f61f75b9f58\r\n                               at /rustc/75042566d1c90d912f22e4db43b6d3af98447986/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x7fe3adac99a0 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h8d62bbfda6d5c836\r\n                               at /rustc/75042566d1c90d912f22e4db43b6d3af98447986/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x7fe3adb3ad5c - core::fmt::write::h1857a60b204f1b6a\r\n                               at /rustc/75042566d1c90d912f22e4db43b6d3af98447986/library/core/src/fmt/mod.rs:1078:17\r\n   5:     0x7fe3adabb602 - std::io::Write::write_fmt::h16a9fe7680ac245c\r\n                               at /rustc/75042566d1c90d912f22e4db43b6d3af98447986/library/std/src/io/mod.rs:1521:15\r\n   6:     0x7fe3adacea05 - std::sys_common::backtrace::_print::h9ba51a6db618de7d\r\n                               at /rustc/75042566d1c90d912f22e4db43b6d3af98447986/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x7fe3adacea05 - std::sys_common::backtrace::print::h5f20e41c85e91716\r\n                               at /rustc/75042566d1c90d912f22e4db43b6d3af98447986/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x7fe3adacea05 - std::panicking::default_hook::{{closure}}::h5b7294ca19e8edab\r\n                               at /rustc/75042566d1c90d912f22e4db43b6d3af98447986/library/std/src/panicking.rs:208:50\r\n   9:     0x7fe3adace6a8 - std::panicking::default_hook::hb3948d1f74b6ff4c\r\n                               at /rustc/75042566d1c90d912f22e4db43b6d3af98447986/library/std/src/panicking.rs:227:9\r\n  10:     0x7fe3ae3ae9d8 - rustc_driver::report_ice::h7d9ce14184308134\r\n  11:     0x7fe3adacf306 - std::panicking::rust_panic_with_hook::h55d23fef0ad751bc\r\n                               at /rustc/75042566d1c90d912f22e4db43b6d3af98447986/library/std/src/panicking.rs:597:17\r\n  12:     0x7fe3adacee27 - std::panicking::begin_panic_handler::{{closure}}::h56ae74c6dea6e141\r\n                               at /rustc/75042566d1c90d912f22e4db43b6d3af98447986/library/std/src/panicking.rs:499:13\r\n  13:     0x7fe3adac9e3c - std::sys_common::backtrace::__rust_end_short_backtrace::h3c4721f56689fae4\r\n                               at /rustc/75042566d1c90d912f22e4db43b6d3af98447986/library/std/src/sys_common/backtrace.rs:141:18\r\n  14:     0x7fe3adaced89 - rust_begin_unwind\r\n                               at /rustc/75042566d1c90d912f22e4db43b6d3af98447986/library/std/src/panicking.rs:495:5\r\n  15:     0x7fe3adaced3b - std::panicking::begin_panic_fmt::h447a9fe10c3ac155\r\n                               at /rustc/75042566d1c90d912f22e4db43b6d3af98447986/library/std/src/panicking.rs:437:5\r\n  16:     0x7fe3b145a571 - rustc_errors::HandlerInner::flush_delayed::h378d929150a8afde\r\n  17:     0x7fe3b1456911 - <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop::he9417dbf073870c1\r\n  18:     0x7fe3ae39d646 - core::ptr::drop_in_place::hcca6b73a46593a76\r\n  19:     0x7fe3ae3995c1 - core::ptr::drop_in_place::h8e4d07c90ff848eb\r\n  20:     0x7fe3ae3a2496 - <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop::hc074b46388eddb39\r\n  21:     0x7fe3ae3b990d - core::ptr::drop_in_place::hbbb827a2ac85e252\r\n  22:     0x7fe3ae3b1123 - rustc_span::with_source_map::h29633e90c8bdca16\r\n  23:     0x7fe3ae3c4632 - rustc_interface::interface::create_compiler_and_run::h646ae36fd2c94a87\r\n  24:     0x7fe3ae3b21ea - rustc_span::with_session_globals::hda575f9d899f5c60\r\n  25:     0x7fe3ae3c9eaf - std::sys_common::backtrace::__rust_begin_short_backtrace::hc0d91feb93491fb8\r\n  26:     0x7fe3ae32f218 - core::ops::function::FnOnce::call_once{{vtable.shim}}::h425334629854e612\r\n  27:     0x7fe3adadf2aa - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h9e7afb7a0a438236\r\n                               at /rustc/75042566d1c90d912f22e4db43b6d3af98447986/library/alloc/src/boxed.rs:1307:9\r\n  28:     0x7fe3adadf2aa - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h70c646c4271337a1\r\n                               at /rustc/75042566d1c90d912f22e4db43b6d3af98447986/library/alloc/src/boxed.rs:1307:9\r\n  29:     0x7fe3adadf2aa - std::sys::unix::thread::Thread::new::thread_start::h35d2b8d36f210d02\r\n                               at /rustc/75042566d1c90d912f22e4db43b6d3af98447986/library/std/src/sys/unix/thread.rs:71:17\r\n  30:     0x7fe3ad9d83e9 - start_thread\r\n  31:     0x7fe3ad8f5293 - __GI___clone\r\n  32:                0x0 - <unknown>\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (75042566d 2020-11-15) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z validate-mir\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\r\nThe following samples also did not crash with -Zvalidate-mir with `rustc 1.50.0-nightly (98d66340d 2020-11-14)` but do crash with `rustc 1.50.0-nightly (75042566d 2020-11-15)`\r\n\r\n`./src/test/ui/consts/issue-67696-const-prop-ice.rs`\r\n````Rust\r\n// check-pass\r\n// compile-flags: --emit=mir,link\r\n// Checks that we don't ICE due to attempting to run const prop\r\n// on a function with unsatisifable 'where' clauses\r\n\r\n#![allow(unused)]\r\n\r\ntrait A {\r\n    fn foo(&self) -> Self where Self: Copy;\r\n}\r\n\r\nimpl A for [fn(&())] {\r\n    fn foo(&self) -> Self where Self: Copy { *(&[] as &[_]) }\r\n}\r\n\r\nimpl A for i32 {\r\n    fn foo(&self) -> Self { 3 }\r\n}\r\n\r\nfn main() {}\r\n````\r\n\r\n`./src/test/ui/trivial-bounds/trivial-bounds-inconsistent-well-formed.rs`\r\n````Rust\r\n// run-pass\r\n// Test that inconsistent bounds are used in well-formedness checks\r\n#![feature(trivial_bounds)]\r\n\r\nuse std::fmt::Debug;\r\n\r\npub fn foo() where Vec<str>: Debug, str: Copy {\r\n    //~^ WARNING Debug does not depend on any type or lifetime\r\n    //~| WARNING Copy does not depend on any type or lifetime\r\n    let x = vec![*\"1\"];\r\n    println!(\"{:?}\", x);\r\n}\r\n\r\nfn main() {}\r\n````\r\n\r\n`./src/test/ui/trivial-bounds/trivial-bounds-inconsistent-copy.rs`\r\n\r\n````Rust\r\n// check-pass\r\n// Check tautalogically false `Copy` bounds\r\n#![feature(trivial_bounds)]\r\n\r\nfn copy_string(t: String) -> String where String: Copy { //~ WARNING trivial_bounds\r\n    is_copy(&t);\r\n    let x = t;\r\n    drop(t);\r\n    t\r\n}\r\n\r\nfn copy_out_string(t: &String) -> String where String: Copy { //~ WARNING trivial_bounds\r\n    *t\r\n}\r\n\r\nfn copy_string_with_param<T>(x: String) where String: Copy { //~ WARNING trivial_bounds\r\n    let y = x;\r\n    let z = x;\r\n}\r\n\r\n// Check that no reborrowing occurs\r\nfn copy_mut<'a>(t: &&'a mut i32) -> &'a mut i32 where for<'b> &'b mut i32: Copy {\r\n    //~^ WARNING trivial_bounds\r\n    is_copy(t);\r\n    let x = *t;\r\n    drop(x);\r\n    x\r\n}\r\n\r\nfn is_copy<T: Copy>(t: &T) {}\r\n\r\n\r\nfn main() {}\r\n````\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79066/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79066/timeline", "performed_via_github_app": null, "state_reason": "completed"}