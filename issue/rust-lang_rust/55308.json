{"url": "https://api.github.com/repos/rust-lang/rust/issues/55308", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55308/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55308/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55308/events", "html_url": "https://github.com/rust-lang/rust/issues/55308", "id": 373428057, "node_id": "MDU6SXNzdWUzNzM0MjgwNTc=", "number": 55308, "title": "ICE: `broken MIR: bad type assert (T = &T)` when declaring variable with let ref without assignment", "user": {"login": "hsandt", "id": 1067772, "node_id": "MDQ6VXNlcjEwNjc3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1067772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsandt", "html_url": "https://github.com/hsandt", "followers_url": "https://api.github.com/users/hsandt/followers", "following_url": "https://api.github.com/users/hsandt/following{/other_user}", "gists_url": "https://api.github.com/users/hsandt/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsandt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsandt/subscriptions", "organizations_url": "https://api.github.com/users/hsandt/orgs", "repos_url": "https://api.github.com/users/hsandt/repos", "events_url": "https://api.github.com/users/hsandt/events{/privacy}", "received_events_url": "https://api.github.com/users/hsandt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-24T11:08:34Z", "updated_at": "2018-10-26T15:16:04Z", "closed_at": "2018-10-26T15:16:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "When writing a declaration with `let ref` and a type annotation but no assignment, compilation fails with a broken MIR error. Besides, a verbose build will hint at the whole block containing the faulty declaration, making it difficult to spot the faulty line.\r\n\r\nI assume that this syntax is indeed invalid as there is nothing on the right side to refer to. However, I expected a localized and specific error message.\r\n\r\n**Versions affected**\r\n\r\n```\r\nrustc 1.26.0 (a77568041 2018-05-07)\r\nbinary: rustc\r\ncommit-hash: a7756804103447ea4e68a71ccf071e7ad8f7a03e\r\ncommit-date: 2018-05-07\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.26.0\r\nLLVM version: 6.0\r\n\r\nrustc 1.27.0-nightly (ff2ac35db 2018-05-12)\r\nbinary: rustc\r\ncommit-hash: ff2ac35db93a80b2de5daa4f280bf1503d62c164\r\ncommit-date: 2018-05-12\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.27.0-nightly\r\nLLVM version: 6.0\r\n```\r\n\r\n**MWE**\r\n\r\n* Code\r\n\r\n```\r\nfn main() {\r\n    let ref _i: i32;\r\n}\r\n```\r\n\r\n* Compilation result\r\n\r\n```\r\nerror: internal compiler error: broken MIR in NodeId(4) (UserAssertTy(Canonical { variables: Slice([]), value: i32 }, _1)): bad type assert (i32 = &i32): Sorts(ExpectedFound { expected: &i32, found: i32 })\r\n --> src/main.rs:1:11\r\n  |\r\n1 |   fn main() {\r\n  |  ___________^\r\n2 | |     let ref _i: i32;\r\n3 | | }\r\n  | |_^\r\n```\r\n\r\n* Expected\r\n\r\nA dedicated error message should spot the faulty declaration line and explain that we cannot declare a variable with `let ref` without assignment.\r\nOptionally, it may suggest that the user wanted to write `let _i: &i32` instead, but that's much more subjective (it may confuse the user by having him/her think that ref and the `&` in the type annotation are linked).\r\n\r\nThe declaration used to work in a previous version of Rust, so maybe it used to be an equivalent for `let _i: &i32`, but I only compiled the line without further usage so I never checked.", "closed_by": {"login": "hsandt", "id": 1067772, "node_id": "MDQ6VXNlcjEwNjc3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1067772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsandt", "html_url": "https://github.com/hsandt", "followers_url": "https://api.github.com/users/hsandt/followers", "following_url": "https://api.github.com/users/hsandt/following{/other_user}", "gists_url": "https://api.github.com/users/hsandt/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsandt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsandt/subscriptions", "organizations_url": "https://api.github.com/users/hsandt/orgs", "repos_url": "https://api.github.com/users/hsandt/repos", "events_url": "https://api.github.com/users/hsandt/events{/privacy}", "received_events_url": "https://api.github.com/users/hsandt/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55308/timeline", "performed_via_github_app": null, "state_reason": "completed"}