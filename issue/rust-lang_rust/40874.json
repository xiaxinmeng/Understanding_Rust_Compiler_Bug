{"url": "https://api.github.com/repos/rust-lang/rust/issues/40874", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40874/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40874/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40874/events", "html_url": "https://github.com/rust-lang/rust/issues/40874", "id": 217517340, "node_id": "MDU6SXNzdWUyMTc1MTczNDA=", "number": 40874, "title": "Allow trait objects for traits with methods that have no receiver (static methods)", "user": {"login": "jorendorff", "id": 283361, "node_id": "MDQ6VXNlcjI4MzM2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/283361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorendorff", "html_url": "https://github.com/jorendorff", "followers_url": "https://api.github.com/users/jorendorff/followers", "following_url": "https://api.github.com/users/jorendorff/following{/other_user}", "gists_url": "https://api.github.com/users/jorendorff/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorendorff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorendorff/subscriptions", "organizations_url": "https://api.github.com/users/jorendorff/orgs", "repos_url": "https://api.github.com/users/jorendorff/repos", "events_url": "https://api.github.com/users/jorendorff/events{/privacy}", "received_events_url": "https://api.github.com/users/jorendorff/received_events", "type": "User", "site_admin": true}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-28T10:38:40Z", "updated_at": "2019-08-08T11:43:45Z", "closed_at": "2017-03-28T14:23:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```rust\r\ntrait StringSet {\r\n    fn new() -> Self;\r\n    fn has(&self, s: &str) -> bool;\r\n    fn add(&self, s: &str);\r\n}\r\n\r\nfn f(s: &StringSet) { s.add(\"hello\"); }\r\n\r\nfn main() {}\r\n```\r\n\r\nThis isn't allowed:\r\n\r\n```console\r\nrustc 1.16.0 (30cf806ef 2017-03-10)\r\nerror[E0038]: the trait `StringSet` cannot be made into an object\r\n --> <anon>:7:1\r\n  |\r\n7 | fn f(s: &StringSet) { s.add(\"hello\"); }\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `StringSet` cannot be made into an object\r\n  |\r\n  = note: method `new` has no receiver\r\n```\r\n\r\nWhy not? It seems OK for a trait to have some features that can't be dynamically dispatched through a trait object.\r\n\r\nIn C++, you can have a base class with both virtual methods and static methods, even though there's no such thing as a virtual static method, and no way to dynamically dispatch static methods.\r\n", "closed_by": {"login": "jorendorff", "id": 283361, "node_id": "MDQ6VXNlcjI4MzM2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/283361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorendorff", "html_url": "https://github.com/jorendorff", "followers_url": "https://api.github.com/users/jorendorff/followers", "following_url": "https://api.github.com/users/jorendorff/following{/other_user}", "gists_url": "https://api.github.com/users/jorendorff/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorendorff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorendorff/subscriptions", "organizations_url": "https://api.github.com/users/jorendorff/orgs", "repos_url": "https://api.github.com/users/jorendorff/repos", "events_url": "https://api.github.com/users/jorendorff/events{/privacy}", "received_events_url": "https://api.github.com/users/jorendorff/received_events", "type": "User", "site_admin": true}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40874/timeline", "performed_via_github_app": null, "state_reason": "completed"}