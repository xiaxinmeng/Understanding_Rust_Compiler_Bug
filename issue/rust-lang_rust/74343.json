{"url": "https://api.github.com/repos/rust-lang/rust/issues/74343", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74343/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74343/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74343/events", "html_url": "https://github.com/rust-lang/rust/issues/74343", "id": 656897954, "node_id": "MDU6SXNzdWU2NTY4OTc5NTQ=", "number": 74343, "title": "Doc clarification for `MaybeUninit::zeroed()`", "user": {"login": "kjvalencik", "id": 2471970, "node_id": "MDQ6VXNlcjI0NzE5NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2471970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjvalencik", "html_url": "https://github.com/kjvalencik", "followers_url": "https://api.github.com/users/kjvalencik/followers", "following_url": "https://api.github.com/users/kjvalencik/following{/other_user}", "gists_url": "https://api.github.com/users/kjvalencik/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjvalencik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjvalencik/subscriptions", "organizations_url": "https://api.github.com/users/kjvalencik/orgs", "repos_url": "https://api.github.com/users/kjvalencik/repos", "events_url": "https://api.github.com/users/kjvalencik/events{/privacy}", "received_events_url": "https://api.github.com/users/kjvalencik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-14T21:04:11Z", "updated_at": "2020-08-02T03:47:27Z", "closed_at": "2020-08-02T03:47:27Z", "author_association": "NONE", "active_lock_reason": null, "body": ":wave: Hi! While reading the documentation for `MaybeUninit::zeroed()` I found it unclear whether using this method for a struct where `0` is an invalid bit pattern is correct usage or not.\r\n\r\nThe method description makes it clear that it is acceptable to use this method, only a user cannot assume that it is already valid.\r\n\r\n> It depends on T whether that already makes for proper initialization.\r\n\r\nhttps://doc.rust-lang.org/std/mem/union.MaybeUninit.html#method.zeroed\r\n\r\nHowever, the example introduces some ambiguity.\r\n\r\n> _Incorrect_ usage of this function: initializing a struct with zero, where some fields cannot hold 0 as a valid value.\r\n\r\nThis phrasing seems to suggest that you should *not* use `MaybeUninit::zeroed()` when 0 is not a valid bit pattern. However, I believe the intent is to merely to convey that calling `assume_init()` without otherwise initializing the value is invalid.\r\n\r\nThere are some valid use cases to zero the memory to prevent an accidental security issue from mis-initialization, even if the bit pattern is invalid.\r\n\r\nSuggested alternate phrasing:\r\n> _Incorrect_ usage of this function: assuming zero filled memory is initialized, where some fields cannot hold 0 as a valid value, without overwriting with a valid bit-pattern.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74343/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74343/timeline", "performed_via_github_app": null, "state_reason": "completed"}