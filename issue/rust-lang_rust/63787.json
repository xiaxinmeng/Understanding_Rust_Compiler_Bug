{"url": "https://api.github.com/repos/rust-lang/rust/issues/63787", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63787/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63787/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63787/events", "html_url": "https://github.com/rust-lang/rust/issues/63787", "id": 483464983, "node_id": "MDU6SXNzdWU0ODM0NjQ5ODM=", "number": 63787, "title": "Ref parameter incorrectly decorated with `noalias` attribute", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 49, "created_at": "2019-08-21T14:41:52Z", "updated_at": "2022-07-30T18:50:29Z", "closed_at": "2022-07-30T18:50:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following library:\r\n```rust\r\nuse std::cell::*;\r\n\r\npub fn break_it(rc: &RefCell<i32>, r: Ref<'_, i32>) {\r\n    // `r` has a shared reference, it is passed in as argument and hence\r\n    // a barrier is added that marks this memory as read-only for the entire\r\n    // duration of this function.\r\n    drop(r);\r\n    // *oops* here we can mutate that memory.\r\n    *rc.borrow_mut() = 2;\r\n}\r\n```\r\n[generates IR](https://play.rust-lang.org/?version=nightly&mode=release&edition=2018&gist=459fd0c36c90d82ff9abde235febfc7b) for `break_it` that starts like\r\n```llvm\r\n; playground::break_it\r\n; Function Attrs: noinline nonlazybind uwtable\r\ndefine void @_ZN10playground8break_it17hb8a9beeb2affda19E(\r\n  { i64, i32 }* align 8 dereferenceable(16) %rc,\r\n  i32* noalias nocapture readonly align 4 dereferenceable(4) %r.0,\r\n  i64* nocapture align 8 dereferenceable(8) %r.1)\r\nunnamed_addr #1 personality i32 (i32, i32, i64, %\"unwind::libunwind::_Unwind_Exception\"*, %\"unwind::libunwind::_Unwind_Context\"*)* @rust_eh_personality {\r\n```\r\nNote the `noalias`. That is incorrect, this function violates the noalias assumptions by mutating the data `r` points to through a pointer (`rc`) not derived from `c`. Here's a caller causing bad aliasing:\r\n```rust\r\npub fn main() {\r\n    let rc = RefCell::new(0);\r\n    break_it(&rc, rc.borrow())\r\n}\r\n```\r\n\r\n`RefMut` has the same problem when `-Zmutable-noalias` is set.\r\n\r\nCc @rkruppe @comex", "closed_by": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63787/reactions", "total_count": 9, "+1": 0, "-1": 0, "laugh": 0, "hooray": 7, "confused": 0, "heart": 0, "rocket": 0, "eyes": 2}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63787/timeline", "performed_via_github_app": null, "state_reason": "completed"}