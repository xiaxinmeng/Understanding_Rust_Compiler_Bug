{"url": "https://api.github.com/repos/rust-lang/rust/issues/32449", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/32449/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/32449/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/32449/events", "html_url": "https://github.com/rust-lang/rust/issues/32449", "id": 142879614, "node_id": "MDU6SXNzdWUxNDI4Nzk2MTQ=", "number": 32449, "title": "Allow coercing non-capturing closures to function pointers.", "user": {"login": "archshift", "id": 5377832, "node_id": "MDQ6VXNlcjUzNzc4MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5377832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/archshift", "html_url": "https://github.com/archshift", "followers_url": "https://api.github.com/users/archshift/followers", "following_url": "https://api.github.com/users/archshift/following{/other_user}", "gists_url": "https://api.github.com/users/archshift/gists{/gist_id}", "starred_url": "https://api.github.com/users/archshift/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/archshift/subscriptions", "organizations_url": "https://api.github.com/users/archshift/orgs", "repos_url": "https://api.github.com/users/archshift/repos", "events_url": "https://api.github.com/users/archshift/events{/privacy}", "received_events_url": "https://api.github.com/users/archshift/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-23T07:03:17Z", "updated_at": "2016-03-23T13:53:24Z", "closed_at": "2016-03-23T13:53:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In C++, you are able to pass a non-capturing lambda as a function pointer, as, for example, a function argument:\n\n``` cpp\nvoid foo(void (*foobar)(void)) {\n    // impl\n}\nvoid bar() {\n    foo([]() { /* do something */ });\n}\n```\n\nIt would be incredibly convenient for rust to be able to do the same:\n\n``` rust\nfn foo(foobar: fn()) {\n    // impl\n}\nfn bar() {\n    foo(|| { /* do something */ });\n}\n```\n\nA use case would be a static (const) array of function pointers, where dynamic dispatch is not necessary.\nExample in current rust ([this is a compilable example](https://goo.gl/ohhgMP)):\n\n``` rust\nextern {\n  static mut b: u32;\n  static n: usize;\n}\n\nconst a: [&'static Fn(); 4] = [\n  &|| unsafe { b = 4 },\n  &|| unsafe { b = 2 },\n  &|| unsafe { b = 3 },\n  &|| unsafe { b = 1 },\n];\n\npub fn main() {\n  if n < 4 {\n    a[n]();\n  }\n}\n```\n\nThis obviously relies upon dynamic dispatch to a level that rust is unable to optimize away. Ideally it would be possible to use a table of `fn()`s instead of `&'static Fn()` and rust would be able to coerce the closures into function pointers because nothing needs to be captured.\n\nAnother, possibly more widely-applicable scenario is simply being able to pass a closure into a C function that takes a callback.\n", "closed_by": {"login": "archshift", "id": 5377832, "node_id": "MDQ6VXNlcjUzNzc4MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5377832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/archshift", "html_url": "https://github.com/archshift", "followers_url": "https://api.github.com/users/archshift/followers", "following_url": "https://api.github.com/users/archshift/following{/other_user}", "gists_url": "https://api.github.com/users/archshift/gists{/gist_id}", "starred_url": "https://api.github.com/users/archshift/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/archshift/subscriptions", "organizations_url": "https://api.github.com/users/archshift/orgs", "repos_url": "https://api.github.com/users/archshift/repos", "events_url": "https://api.github.com/users/archshift/events{/privacy}", "received_events_url": "https://api.github.com/users/archshift/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/32449/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/32449/timeline", "performed_via_github_app": null, "state_reason": "completed"}