{"url": "https://api.github.com/repos/rust-lang/rust/issues/110863", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110863/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110863/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110863/events", "html_url": "https://github.com/rust-lang/rust/issues/110863", "id": 1685595120, "node_id": "I_kwDOAAsO6M5keCPw", "number": 110863, "title": "Document the default for `ExitStatus`", "user": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}, {"id": 762300676, "node_id": "MDU6TGFiZWw3NjIzMDA2NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-blocked", "name": "S-blocked", "color": "d3dddd", "default": false, "description": "Status: marked as blocked \u274c on something else such as an RFC or other implementation work."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2023-04-26T19:31:55Z", "updated_at": "2023-04-27T21:16:41Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "> @scottmcm: I think it should at least say somewhere what that default is. Having it come from a derive(Default) on a c_int feels indirect to me as well, so perhaps it would make sense to define it manually in terms of ExitCode::SUCCESS instead, say -- that would also allow putting a doc-comment on the impl.\r\n\r\nWe should document that `Default` for `ExitStatus` is \"process reported successful termination\", ie the result of `ExitCode::success().into()`, and, implement it that way.\r\n\r\n_Originally posted by @ijackson in https://github.com/rust-lang/rust/issues/106425#issuecomment-1396910651_\r\n            ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110863/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110863/timeline", "performed_via_github_app": null, "state_reason": null}