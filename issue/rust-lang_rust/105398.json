{"url": "https://api.github.com/repos/rust-lang/rust/issues/105398", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105398/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105398/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105398/events", "html_url": "https://github.com/rust-lang/rust/issues/105398", "id": 1480393303, "node_id": "I_kwDOAAsO6M5YPQJX", "number": 105398, "title": "Suggest the correct name if using a struct literal and struct update syntax", "user": {"login": "alexwlchan", "id": 301220, "node_id": "MDQ6VXNlcjMwMTIyMA==", "avatar_url": "https://avatars.githubusercontent.com/u/301220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexwlchan", "html_url": "https://github.com/alexwlchan", "followers_url": "https://api.github.com/users/alexwlchan/followers", "following_url": "https://api.github.com/users/alexwlchan/following{/other_user}", "gists_url": "https://api.github.com/users/alexwlchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexwlchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexwlchan/subscriptions", "organizations_url": "https://api.github.com/users/alexwlchan/orgs", "repos_url": "https://api.github.com/users/alexwlchan/repos", "events_url": "https://api.github.com/users/alexwlchan/events{/privacy}", "received_events_url": "https://api.github.com/users/alexwlchan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-12-06T22:52:58Z", "updated_at": "2022-12-06T23:00:48Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=d00e87e77db94bfa1cc76d92b966c599\r\n\r\n```rust\r\n#[derive(Debug)]\r\nstruct Shape<'a> {\r\n    colour: &'a str,\r\n    sides: usize,\r\n}\r\n\r\nfn main() {\r\n    let blue_triangle = Shape {\r\n        colour: \"blue\",\r\n        sides: 3,\r\n    };\r\n\r\n    println!(\"The blue triangle is {:?}\", blue_triangle);\r\n\r\n    let blue_square = {\r\n        sides: 4,\r\n        ..blue_triangle\r\n    };\r\n\r\n    println!(\"The blue square is {:?}\", blue_square);\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror: struct literal body without path\r\n  --> src/main.rs:15:23\r\n   |\r\n15 |       let blue_square = {\r\n   |  _______________________^\r\n16 | |         sides: 4,\r\n17 | |         ..blue_triangle\r\n18 | |     };\r\n   | |_____^\r\n   |\r\nhelp: you might have forgotten to add the struct literal inside the block\r\n   |\r\n15 ~     let blue_square = { SomeStruct {\r\n16 |         sides: 4,\r\n17 |         ..blue_triangle\r\n18 ~     } };\r\n   |\r\n```\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\nerror: struct literal body without path\r\n  --> src/main.rs:15:23\r\n   |\r\n15 |       let blue_square = {\r\n   |  _______________________^\r\n16 | |         sides: 4,\r\n17 | |         ..blue_triangle\r\n18 | |     };\r\n   | |_____^\r\n   |\r\nhelp: you might have forgotten to add the struct literal inside the block\r\n   |\r\n15 ~     let blue_square = { SomeStruct {\r\n16 |         sides: 4,\r\n17 |         ..blue_triangle\r\n18 ~     } };\r\n   |\r\nhelp: perhaps you intended to use this struct literal:\r\n   |\r\n15 ~     let blue_square = Shape {\r\n16 |         sides: 4,\r\n17 |         ..blue_triangle\r\n18 |     };\r\n   |\r\n```\r\n\r\nYou'd want to be somewhat conservative here, but in this case:\r\n\r\n* the struct I'm passing in `..blue_triangle` is a `Shape`\r\n* the field I'm updating is also valid on `Shape`\r\n\r\nFor comparison with a similar construction in another language: TypeScript has a spread operator which is similar to Rust's struct update syntax, and it recognises that I'm overriding a field here without asking me to respecify the type. See [TypeScript Playground example](https://www.typescriptlang.org/play?#code/C4TwDgpgBAygFgQ0lAvFA3gKCjqBjAewBsCBXAJwC4oBnYcgSwDsBzAbm1xoYBMIbqTUgFsARhHIcAvh0wAzUkzzAGBJlDCMmweEggAKJgmERqdLSwA0tRJGq7IASmoA3ArwycchJjWIQAOhIWfQADABU4aAASdCMTKSgGGihYgCkYAHkAOQDzZhYGORB9GlsIRylQx2lMTB86KFEiUghwxgRWIlNYctQMfGIyKigAcmbW0etuPgEoAGYoGUxNZh1y-XGW6HoGTpZuqabt9r2uitkG4GPWmABHUgRyaDR0KACPibaO8+nefmoABYlhxVtoHAYtq1aA8nhAjl97o9njVMEA)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105398/timeline", "performed_via_github_app": null, "state_reason": null}