{"url": "https://api.github.com/repos/rust-lang/rust/issues/39031", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39031/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39031/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39031/events", "html_url": "https://github.com/rust-lang/rust/issues/39031", "id": 200615735, "node_id": "MDU6SXNzdWUyMDA2MTU3MzU=", "number": 39031, "title": "`-Z verbose` causes link failure", "user": {"login": "ChrisBuchholz", "id": 70427, "node_id": "MDQ6VXNlcjcwNDI3", "avatar_url": "https://avatars.githubusercontent.com/u/70427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisBuchholz", "html_url": "https://github.com/ChrisBuchholz", "followers_url": "https://api.github.com/users/ChrisBuchholz/followers", "following_url": "https://api.github.com/users/ChrisBuchholz/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisBuchholz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisBuchholz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisBuchholz/subscriptions", "organizations_url": "https://api.github.com/users/ChrisBuchholz/orgs", "repos_url": "https://api.github.com/users/ChrisBuchholz/repos", "events_url": "https://api.github.com/users/ChrisBuchholz/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisBuchholz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-13T12:09:31Z", "updated_at": "2021-03-25T22:15:57Z", "closed_at": "2021-03-25T22:15:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I stumbled upon a linking error when including `println!()` or `format!()` in functions that would be run by tests in a large project I'm working on. Distilled down to a short reproducible code sample, we have this:\r\n\r\n```rust\r\n#![feature(conservative_impl_trait)]\r\n\r\npub enum Error {\r\n    Invalid,\r\n}\r\n\r\npub type Result = std::result::Result<(), Error>;\r\n\r\n/// ```\r\n/// extern crate errr;\r\n///\r\n/// use errr::{runner, run};\r\n///\r\n/// fn main() {\r\n///     let _ = runner(&\"test test\".to_string(), &run(5));\r\n/// }\r\n/// ```\r\npub fn runner<T>(subject: &T, to_run: &Fn(&T) -> Result) -> Result {\r\n    if let Err(error) = to_run(subject) {\r\n        Err(error)\r\n    } else {\r\n        Ok(())\r\n    }\r\n}\r\n\r\npub fn run(min: usize) -> impl Fn(&String) -> Result {\r\n    move |s: &String| {\r\n        if s.len() >= min {\r\n            Ok(())\r\n        } else {\r\n            println!(\"test test\");\r\n            Err(Error::Invalid)\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let _ = runner(&\"test test\".to_string(), &run(5));\r\n    println!(\"TESTING YEAH\");\r\n}\r\n```\r\n\r\nI have also put it up as a cargo project for testability here: https://github.com/ChrisBuchholz/errr-test/blob/master/src/lib.rs\r\n\r\nRunning `cargo build` as well as `rustc src/lib.rs` succeeds, whereas `cargo test` and `rustc -Z verbose src/lib.rs` errors. If I simply remove the `println!` statement from line 31, the errors disappear and everything works.\r\n\r\nThis is the output from `rustc -Z verbose src/lib.rs`:\r\n\r\n```\r\nerror: linking with `cc` failed: exit code: 1\r\n  |\r\n  = note: \"cc\" \"-m64\" \"-L\" \"/Users/cb/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\" \"lib.0.o\" \"-o\" \"lib\" \"-Wl,-dead_strip\" \"-nodefaultlibs\" \"-L\" \"/Users/cb/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\" \"/Users/cb/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-a260b5db713b337f.rlib\" \"/Users/cb/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/librand-664091cbac310259.rlib\" \"/Users/cb/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcollections-4e19d5a43d7fdd2c.rlib\" \"/Users/cb/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd_unicode-49cd3c7af2b2f27f.rlib\" \"/Users/cb/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libpanic_unwind-18bf5d50673f1daa.rlib\" \"/Users/cb/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libunwind-6b24ec54aa474d14.rlib\" \"/Users/cb/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc-99e0cdfb2e11773a.rlib\" \"/Users/cb/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-7b14c3e63843fe84.rlib\" \"/Users/cb/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liblibc-109501e572ed7296.rlib\" \"/Users/cb/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcore-f1125930d2c15bcd.rlib\" \"/Users/cb/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcompiler_builtins-594db3b2ae45efeb.rlib\" \"-l\" \"System\" \"-l\" \"pthread\" \"-l\" \"c\" \"-l\" \"m\"\r\n  = note: Undefined symbols for architecture x86_64:\r\n  \"_$LT$collections..string..String$u20$as$u20$core..convert..From$LT$$RF$ReEarlyBound$LP$0$C$$u20$$u27$a$RP$$u20$str$GT$$GT$::from::h4e1ae202dd816f18\", referenced from:\r\n      _$LT$str$u20$as$u20$collections..string..ToString$GT$::to_string::h36963c9d20b8cab8 in lib.0.o\r\nld: symbol(s) not found for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nrustc version: `1.16.0-nightly (47c8d9fdc 2017-01-08)`\r\ncargo version: `0.17.0-nightly (40a4ce6 2017-01-06)`\r\n\r\nIt's not a bug introduced in these versions though. I can confirm it has at least been a bug as far back as cargo version `nightly-2016-12-16-x86_64-apple-darwin`.\r\n", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39031/timeline", "performed_via_github_app": null, "state_reason": "completed"}