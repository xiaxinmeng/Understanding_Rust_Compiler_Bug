{"url": "https://api.github.com/repos/rust-lang/rust/issues/22552", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/22552/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/22552/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/22552/events", "html_url": "https://github.com/rust-lang/rust/issues/22552", "id": 58293107, "node_id": "MDU6SXNzdWU1ODI5MzEwNw==", "number": 22552, "title": "The macro recursion limit is too low", "user": {"login": "carllerche", "id": 6180, "node_id": "MDQ6VXNlcjYxODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carllerche", "html_url": "https://github.com/carllerche", "followers_url": "https://api.github.com/users/carllerche/followers", "following_url": "https://api.github.com/users/carllerche/following{/other_user}", "gists_url": "https://api.github.com/users/carllerche/gists{/gist_id}", "starred_url": "https://api.github.com/users/carllerche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carllerche/subscriptions", "organizations_url": "https://api.github.com/users/carllerche/orgs", "repos_url": "https://api.github.com/users/carllerche/repos", "events_url": "https://api.github.com/users/carllerche/events{/privacy}", "received_events_url": "https://api.github.com/users/carllerche/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-02-20T00:25:23Z", "updated_at": "2017-05-07T05:23:32Z", "closed_at": "2017-05-07T05:23:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I started hitting the recursion limit with the following macro (which isn't actually complete yet either)\n\n``` rust\n    use nixtest::assert_errno_eq;\n    use libc::c_int;\n\n    macro_rules! check_errno {\n        ($errno:ident) => {{\n            assert_errno_eq(stringify!($errno), $errno as c_int);\n        }};\n\n        ($errno:ident, $($rest:ident),+) => {{\n            check_errno!($errno);\n            check_errno!($($rest),*);\n        }};\n    }\n\n    check_errno!(\n        EPERM,\n        ENOENT,\n        ESRCH,\n        EINTR,\n        EIO,\n        ENXIO,\n        E2BIG,\n        ENOEXEC,\n        EBADF,\n        ECHILD,\n        EAGAIN,\n        ENOMEM,\n        EACCES,\n        EFAULT,\n        ENOTBLK,\n        EBUSY,\n        EEXIST,\n        EXDEV,\n        ENODEV,\n        ENOTDIR,\n        EISDIR,\n        EINVAL,\n        ENFILE,\n        EMFILE,\n        ENOTTY,\n        ETXTBSY,\n        EFBIG,\n        ENOSPC,\n        ESPIPE,\n        EROFS,\n        EMLINK,\n        EPIPE,\n        EDOM,\n        ERANGE,\n        EDEADLK,\n        ENAMETOOLONG,\n        ENOLCK,\n        ENOSYS,\n        ENOTEMPTY,\n        ELOOP,\n        ENOMSG,\n        EIDRM,\n        ECHRNG,\n        EL2NSYNC,\n        EL3HLT,\n        EL3RST,\n        ELNRNG,\n        EUNATCH,\n        ENOCSI,\n        EL2HLT,\n        EBADE,\n        EBADR,\n        EXFULL,\n        ENOANO,\n        EBADRQC,\n        EBADSLT,\n        EBFONT,\n        ENOSTR,\n        ENODATA,\n        ETIME,\n        ENOSR,\n        ENONET,\n        ENOPKG,\n        EREMOTE,\n        ENOLINK,\n        EADV,\n        ESRMNT,\n        ECOMM,\n        EPROTO,\n        EMULTIHOP,\n        EDOTDOT,\n        EBADMSG,\n        EOVERFLOW,\n        ENOTUNIQ,\n        EBADFD,\n        EREMCHG,\n        ELIBACC,\n        ELIBBAD,\n        ELIBSCN,\n        ELIBMAX,\n        ELIBEXEC,\n        EILSEQ,\n        ERESTART,\n        ESTRPIPE,\n        EUSERS,\n        ENOTSOCK,\n        EDESTADDRREQ,\n        EMSGSIZE,\n        EPROTOTYPE,\n        ENOPROTOOPT,\n        EPROTONOSUPPORT,\n        ESOCKTNOSUPPORT,\n        EOPNOTSUPP,\n        EPFNOSUPPORT\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/22552/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/22552/timeline", "performed_via_github_app": null, "state_reason": "completed"}