{"url": "https://api.github.com/repos/rust-lang/rust/issues/94028", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94028/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94028/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94028/events", "html_url": "https://github.com/rust-lang/rust/issues/94028", "id": 1139227076, "node_id": "I_kwDOAAsO6M5D5znE", "number": 94028, "title": "ICE when running `cargo test`", "user": {"login": "colin-grapl", "id": 62314572, "node_id": "MDQ6VXNlcjYyMzE0NTcy", "avatar_url": "https://avatars.githubusercontent.com/u/62314572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colin-grapl", "html_url": "https://github.com/colin-grapl", "followers_url": "https://api.github.com/users/colin-grapl/followers", "following_url": "https://api.github.com/users/colin-grapl/following{/other_user}", "gists_url": "https://api.github.com/users/colin-grapl/gists{/gist_id}", "starred_url": "https://api.github.com/users/colin-grapl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colin-grapl/subscriptions", "organizations_url": "https://api.github.com/users/colin-grapl/orgs", "repos_url": "https://api.github.com/users/colin-grapl/repos", "events_url": "https://api.github.com/users/colin-grapl/events{/privacy}", "received_events_url": "https://api.github.com/users/colin-grapl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-02-15T21:22:29Z", "updated_at": "2023-02-26T13:28:11Z", "closed_at": "2023-02-26T13:28:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unfortunately, I can't reproduce this. I ran `cargo clean` so that I could start to narrow things down and it went away. It did happen multiple times in a row. \r\n\r\nThis command triggered it:\r\n`RUST_LOG=debug cargo test smoketest -- --nocapture`\r\n\r\nBut this didn't:\r\n`cargo check --all-features --all-targets`\r\n\r\n### Code\r\n\r\nI can't post everything, but here's the line it's referencing. It seems totally benign.\r\n\r\n\"#0 [type_of] computing type of `query::node_query::<impl at graph-query/src/query/node_query.rs:20:1: 91:2>::names::{opaque#0}`\"\r\n\r\nThat is referring to the `new` method. I assume the opaque type it's referring to is `impl Into<String>`. Maybe notable is that `new` is called only by another method `default`, and that is only called in tests.\r\n\r\n```Rust\r\npub struct NodeQuery {\r\n    pub(crate) node_type: String,\r\n    pub(crate) string_queries: StringQueries,\r\n    pub(crate) forward_edge_queries: HashMap<String, Vec<Vec<NodeQueryCell>>>,\r\n    pub(crate) reverse_edges: HashMap<String, String>,\r\n}\r\n\r\nimpl NodeQuery {\r\n    pub fn new(\r\n        node_type: impl Into<String>,\r\n        string_queries: StringQueries,\r\n        forward_edge_queries: HashMap<String, Vec<Vec<NodeQueryCell>>>,\r\n    ) -> Self {\r\n        Self {\r\n            node_type: node_type.into(),\r\n            string_queries,\r\n            forward_edge_queries,\r\n            reverse_edges: HashMap::new(),\r\n        }\r\n    }\r\n\r\n\r\n    pub fn new_cell(\r\n        node_type: impl Into<String>,\r\n        string_queries: StringQueries,\r\n        forward_edge_queries: HashMap<String, Vec<Vec<NodeQueryCell>>>,\r\n    ) -> NodeQueryCell {\r\n        NodeQueryCell::from(Self::new(node_type, string_queries, forward_edge_queries))\r\n    }\r\n\r\n    pub fn default(node_type: impl Into<String>) -> Self {\r\n        Self::new(\r\n            node_type,\r\n            StringQueries::default(),\r\n            HashMap::new(),\r\n        )\r\n    }\r\n\r\n    pub fn default_cell(node_type: impl Into<String>) -> NodeQueryCell {\r\n        NodeQueryCell::from(Self::default(node_type))\r\n    }\r\n\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc --version --verbose\r\nrustc 1.58.1 (db9d1b20b 2022-01-20)\r\nbinary: rustc\r\ncommit-hash: db9d1b20bba1968c1ec1fc49616d4742c1725b4b\r\ncommit-date: 2022-01-20\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.58.1\r\nLLVM version: 13.0.0\r\n\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling graph-query v0.1.0 (/home/colin/grapl-ws/grapl/src/rust/graph-query)\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/compiler/rustc_hir/src/definitions.rs:452:14\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.58.1 (db9d1b20b 2022-01-20) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C opt-level=1 -C embed-bitcode=no -C debuginfo=2 -C debug-assertions=on -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [type_of] computing type of `query::node_query::<impl at graph-query/src/query/node_query.rs:20:1: 91:2>::names::{opaque#0}`\r\n#1 [check_mod_item_types] checking item types in module `query::node_query`\r\nend of query stack\r\nerror: could not compile `graph-query`\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94028/timeline", "performed_via_github_app": null, "state_reason": "completed"}