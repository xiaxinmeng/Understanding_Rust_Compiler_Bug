{"url": "https://api.github.com/repos/rust-lang/rust/issues/111156", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111156/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111156/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111156/events", "html_url": "https://github.com/rust-lang/rust/issues/111156", "id": 1694641744, "node_id": "I_kwDOAAsO6M5lAi5Q", "number": 111156, "title": "Unable to link with ThinLTO against C++ that was built with -fsplit-lto-unit", "user": {"login": "danakj", "id": 342377, "node_id": "MDQ6VXNlcjM0MjM3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/342377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danakj", "html_url": "https://github.com/danakj", "followers_url": "https://api.github.com/users/danakj/followers", "following_url": "https://api.github.com/users/danakj/following{/other_user}", "gists_url": "https://api.github.com/users/danakj/gists{/gist_id}", "starred_url": "https://api.github.com/users/danakj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danakj/subscriptions", "organizations_url": "https://api.github.com/users/danakj/orgs", "repos_url": "https://api.github.com/users/danakj/repos", "events_url": "https://api.github.com/users/danakj/events{/privacy}", "received_events_url": "https://api.github.com/users/danakj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-05-03T19:09:51Z", "updated_at": "2023-05-03T19:14:45Z", "closed_at": "2023-05-03T19:14:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Proposal\r\n\r\n## Background on LTO unit splitting\r\n\r\nClang has an option `-fsplit-lto-unit` that enables the LLVM module flag `EnableSplitLTOUnit`. This flag is enabled from Clang when compiling for ThinLTO and:\r\n* `-fsplit-lto-unit` is specified, or\r\n* `-fsanitize=cfi` is specified, or\r\n* `-fwhole-program-vtables`.\r\n\r\nProjects like Chromium and BoringSSL make use of both [`-fsanitize=cfi`](https://source.chromium.org/search?ss=chromium%2Fchromium%2Fsrc&q=sanitize%3Dcfi) and [`-fwhole-program-vtables`](https://source.chromium.org/chromium/chromium/src/+/main:build/config/compiler/BUILD.gn;l=742;drc=0e3613b1b3bdf57fac2e28206602340b57261d05).\r\n\r\nWithout the ability to enable `EnableSplitLTOUnit` in Rust compilation, it is impossible to link Rust code with C++ code.\r\n\r\nChromium tracking issue for this: https://bugs.chromium.org/p/chromium/issues/detail?id=1229419\r\n\r\n## Proposed solution\r\n\r\nTherefore we propose to add the `-Zsplit-thin-lto-unit` command line flag, which will remain permanently unstable, and which simply enables `EnableSplitLTOUnit` when ThinLTO is enabled with the LLVM backend.\r\n\r\nA PR to do this is here: https://github.com/rust-lang/rust/pull/111155\r\n\r\n## Alternatives\r\n\r\nWe could alternatively consider a flag that takes an LLVM module flag name, allowing any module to be enabled from the command line. However we don't have a need for such a flag now, and there are multiple places (e.g. [location where setting `EnableSplitLTOUnit` does not work](https://bugs.chromium.org/p/chromium/issues/detail?id=1229419#c12)) where LLVM module flags get enabled, so it's not obvious to the author how this would work.\r\n\r\n# Process\r\n\r\nThe main points of the [Major Change Process][MCP] are as follows:\r\n\r\n* [x] File an issue describing the proposal.\r\n* [ ] A compiler team member or contributor who is knowledgeable in the area can **second** by writing `@rustbot second`.\r\n    * Finding a \"second\" suffices for internal changes. If however, you are proposing a new public-facing feature, such as a `-C flag`, then full team check-off is required.\r\n    * Compiler team members can initiate a check-off via `@rfcbot fcp merge` on either the MCP or the PR.\r\n* [ ] Once an MCP is seconded, the Final Comment Period begins. If no objections are raised after 10 days, the MCP is considered **approved**.\r\n\r\nYou can read [more about Major Change Proposals on forge][MCP].\r\n\r\n[MCP]: https://forge.rust-lang.org/compiler/mcp.html\r\n\r\n# Comments\r\n\r\n**This issue is not meant to be used for technical discussion. There is a Zulip stream for that. Use this issue to leave procedural comments, such as volunteering to review, indicating that you second the proposal (or third, etc), or raising a concern that you would like to be addressed.**\r\n", "closed_by": {"login": "danakj", "id": 342377, "node_id": "MDQ6VXNlcjM0MjM3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/342377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danakj", "html_url": "https://github.com/danakj", "followers_url": "https://api.github.com/users/danakj/followers", "following_url": "https://api.github.com/users/danakj/following{/other_user}", "gists_url": "https://api.github.com/users/danakj/gists{/gist_id}", "starred_url": "https://api.github.com/users/danakj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danakj/subscriptions", "organizations_url": "https://api.github.com/users/danakj/orgs", "repos_url": "https://api.github.com/users/danakj/repos", "events_url": "https://api.github.com/users/danakj/events{/privacy}", "received_events_url": "https://api.github.com/users/danakj/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111156/timeline", "performed_via_github_app": null, "state_reason": "completed"}