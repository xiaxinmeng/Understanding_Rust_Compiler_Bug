{"url": "https://api.github.com/repos/rust-lang/rust/issues/84633", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84633/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84633/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84633/events", "html_url": "https://github.com/rust-lang/rust/issues/84633", "id": 869273810, "node_id": "MDU6SXNzdWU4NjkyNzM4MTA=", "number": 84633, "title": "Cannot determine resolution for absolute-path-reexported-macro-generated-`#[macro_export]`ed-macros in some contexts", "user": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-04-27T21:20:17Z", "updated_at": "2023-04-05T17:33:40Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nmod foo {\r\n    macro_rules! mk {() => (\r\n        #[macro_export]\r\n        macro_rules! m {() => (\"Ferris\")}\r\n    )}\r\n    mk!();\r\n    pub use m;\r\n    #[macro_export]\r\n    macro_rules! n {() => (concat!(\"Hello \", $crate::foo::m!()))}\r\n}\r\n\r\nfn main () {\r\n    println!(\"{}\", n!());\r\n}\r\n```\r\n\r\nI expected to see this happen: It compiles and prints `Hello Ferris`\r\n\r\nInstead, this happened:\r\n\r\n```\r\nerror: cannot determine resolution for the macro `$crate::foo::m`\r\n  --> src/main.rs:9:46\r\n   |\r\n9  |     macro_rules! n {() => (concat!(\"Hello \", $crate::foo::m!()))}\r\n   |                                              ^^^^^^^^^^^^^^\r\n...\r\n13 |     println!(\"{}\", n!());\r\n   |                    ---- in this macro invocation\r\n   |\r\n   = note: import resolution is stuck, try simplifying macro imports\r\n   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\r\n```\r\n\r\nThis is a very specific case, if the macro `m` was not macro-generated, it works fine:\r\n\r\n```rust\r\nmod foo {\r\n    #[macro_export]\r\n    macro_rules! m {() => (\"Ferris\")}\r\n    pub use m;\r\n    #[macro_export]\r\n    macro_rules! n {() => (concat!(\"Hello \", $crate::foo::m!()))}\r\n}\r\n```\r\n\r\nIf instead `m!()` is not evaluated within the `concat!` context it also works fine:\r\n\r\n```rust\r\nmod foo {\r\n    macro_rules! mk {() => (\r\n        #[macro_export]\r\n        macro_rules! m {() => (\"Ferris\")}\r\n    )}\r\n    mk!();\r\n    pub use m;\r\n    #[macro_export]\r\n    macro_rules! n {() => ($crate::foo::m!())}\r\n}\r\n```\r\n\r\n### Meta\r\nTested on stable 1.51.0 and `1.53.0-nightly (2021-04-26 9684258936dabda2ba49)`\r\n\r\ncc @danielhenrymantilla ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84633/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84633/timeline", "performed_via_github_app": null, "state_reason": null}