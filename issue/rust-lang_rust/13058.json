{"url": "https://api.github.com/repos/rust-lang/rust/issues/13058", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/13058/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/13058/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/13058/events", "html_url": "https://github.com/rust-lang/rust/issues/13058", "id": 29910504, "node_id": "MDU6SXNzdWUyOTkxMDUwNA==", "number": 13058, "title": "give_expl_lifetime_param is silently dropping other formal lifetime params", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-03-21T15:44:45Z", "updated_at": "2014-11-07T02:02:53Z", "closed_at": "2014-11-07T02:02:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(See also #13057 for the non-deterministic behavior of `give_expl_lifetime_param`.)\n\nFor the input file below, the invocation of rustc that prompts with the \"consider using an explicit lifetime parameter\" hint is providing an erroneous signature.  The reason the provided signature is erroneous is because there is a formal lifetime parameter `'r` that is bound in the generics and also used in the trait bounds of the generics, but the suggested signature drops the formal `'r` parameter (while adding `'a`) but leaves the existing reference to `'r`.\n\nInput file (demo.rs):\n\n``` rust\nuse std::iter::{Range,range};\n\ntrait Itble<'r, T, I: Iterator<T>> { fn iter(&'r self) -> I; }\n\nimpl<'r> Itble<'r, uint, Range<uint>> for (uint, uint) {\n    fn iter(&'r self) -> Range<uint> {\n        let &(min, max) = self;\n        range(min, max)\n    }\n}\n\nfn check<'r, I: Iterator<uint>, T: Itble<'r, uint, I>>(cont: &T) -> bool\n{\n    let cont_iter = cont.iter();\n    let result = cont_iter.fold(Some(0u16), |state, val| {\n        state.map_or(None, |mask| {\n            let bit = 1 << val;\n            if mask & bit == 0 {Some(mask|bit)} else {None}\n        })\n    });\nresult.is_some()\n}\n\nfn main() {\n    check((3u, 5u));\n}\n```\n\nTranscript:\n\n```\n% uname -a\nDarwin fklock-Oenone.local 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64\n% rustc --version\n/Users/fklock/opt/rust-dbg/bin/rustc 0.10-pre (b6d5b8f 2014-03-17 00:21:59 -0700)\nhost: x86_64-apple-darwin\n\n\n% rustc --crate-type lib /tmp/demo.rs\n/tmp/demo.rs:12:1: 22:2 note: consider using an explicit lifetime parameter as shown: fn check<'a, I: Iterator<uint>, T: Itble<'r, uint, I>>(cont: &'a T) -> bool\n/tmp/demo.rs:12 fn check<'r, I: Iterator<uint>, T: Itble<'r, uint, I>>(cont: &T) -> bool\n/tmp/demo.rs:13 {\n/tmp/demo.rs:14 let cont_iter = cont.iter();\n/tmp/demo.rs:15 let result = cont_iter.fold(Some(0u16), |state, val| {\n/tmp/demo.rs:16 state.map_or(None, |mask| {\n/tmp/demo.rs:17 let bit = 1 << val;\n...\n/tmp/demo.rs:14:21: 14:32 error: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n/tmp/demo.rs:14 let cont_iter = cont.iter();\n^~~~~~~~~~~\n/tmp/demo.rs:25:11: 25:19 error: mismatched types: expected `&<generic #1>` but found `(uint,uint)` (expected &-ptr but found tuple)\n/tmp/demo.rs:25 check((3u, 5u));\n^~~~~~~~\n/tmp/demo.rs:25:5: 25:10 error: cannot determine a type for this bounded type parameter: unconstrained type\n/tmp/demo.rs:25 check((3u, 5u));\n^~~~~\n\n\n% rustc --crate-type lib /tmp/demo.rs\n/tmp/demo.rs:14:21: 14:32 error: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n/tmp/demo.rs:14 let cont_iter = cont.iter();\n^~~~~~~~~~~\n/tmp/demo.rs:14:21: 14:25 note: first, the lifetime cannot outlive the expression at 14:20...\n/tmp/demo.rs:14 let cont_iter = cont.iter();\n^~~~\n/tmp/demo.rs:14:21: 14:25 note: ...so that automatically reference is valid at the time of borrow\n/tmp/demo.rs:14 let cont_iter = cont.iter();\n^~~~\n/tmp/demo.rs:14:21: 14:32 note: but, the lifetime must be valid for the method call at 14:20...\n/tmp/demo.rs:14 let cont_iter = cont.iter();\n^~~~~~~~~~~\n/tmp/demo.rs:14:21: 14:25 note: ...so that method receiver is valid for the method call\n/tmp/demo.rs:14 let cont_iter = cont.iter();\n^~~~\n/tmp/demo.rs:25:11: 25:19 error: mismatched types: expected `&<generic #1>` but found `(uint,uint)` (expected &-ptr but found tuple)\n/tmp/demo.rs:25 check((3u, 5u));\n^~~~~~~~\n/tmp/demo.rs:25:5: 25:10 error: cannot determine a type for this bounded type parameter: unconstrained type\n/tmp/demo.rs:25 check((3u, 5u));\n^~~~~\n% \n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/13058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/13058/timeline", "performed_via_github_app": null, "state_reason": "completed"}