{"url": "https://api.github.com/repos/rust-lang/rust/issues/52065", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52065/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52065/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52065/events", "html_url": "https://github.com/rust-lang/rust/issues/52065", "id": 338398763, "node_id": "MDU6SXNzdWUzMzgzOTg3NjM=", "number": 52065, "title": "Allow Pre-Stepping in Step-By?", "user": {"login": "Emerentius", "id": 9992929, "node_id": "MDQ6VXNlcjk5OTI5Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/9992929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Emerentius", "html_url": "https://github.com/Emerentius", "followers_url": "https://api.github.com/users/Emerentius/followers", "following_url": "https://api.github.com/users/Emerentius/following{/other_user}", "gists_url": "https://api.github.com/users/Emerentius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Emerentius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Emerentius/subscriptions", "organizations_url": "https://api.github.com/users/Emerentius/orgs", "repos_url": "https://api.github.com/users/Emerentius/repos", "events_url": "https://api.github.com/users/Emerentius/events{/privacy}", "received_events_url": "https://api.github.com/users/Emerentius/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-07-05T01:13:52Z", "updated_at": "2018-07-12T21:40:11Z", "closed_at": "2018-07-12T21:40:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`step_by` has to special case the first element and this behaviour can act as a performance block because of the necessary branch in `next` as seen with integer ranges. This branch can be removed, by always taking the next element and also stepping ahead in one go but that changes the semantics when the iterator has side-effects.\r\n`step_by` will be stabilized with the next release and I fear that the need to preserve semantics may lock us into a sub-optimally performing `step_by` or some other lacking solution. I propose that we amend a note to `step_by`, allowing us to use the \"always take and step ahead\" semantics for optimization for now. In the future, when we have this issue figured out, we can then limit the cases where pre-stepping is allowed. The general case should not use it.\r\n\r\nOne example where preserving semantics causes inefficiency is `RangeFrom` iterators. When pre-stepping, a `RangeFrom` will overflow its `start` member one iteration earlier and will therefore, in debug mode, panic one iteration earlier. That may cause a panic in a program that doesn't actually use any elements after the overflow, i.e. a program without any user error. If we have to preserve these semantics, `RangeFrom` can not be optimized for `step_by`.\r\n(`RangeFrom` reserves the right to change overflow behaviour so we could \"fix\" this particular one by allowing overflow in debug mode)\r\n\r\nFurthermore, if range iterators need to pre-step for performance reasons, then the currently still unstable `Step` trait's `step*` methods must be limited to be side-effect free or the pre-stepping optimization would be invalid.", "closed_by": {"login": "Emerentius", "id": 9992929, "node_id": "MDQ6VXNlcjk5OTI5Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/9992929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Emerentius", "html_url": "https://github.com/Emerentius", "followers_url": "https://api.github.com/users/Emerentius/followers", "following_url": "https://api.github.com/users/Emerentius/following{/other_user}", "gists_url": "https://api.github.com/users/Emerentius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Emerentius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Emerentius/subscriptions", "organizations_url": "https://api.github.com/users/Emerentius/orgs", "repos_url": "https://api.github.com/users/Emerentius/repos", "events_url": "https://api.github.com/users/Emerentius/events{/privacy}", "received_events_url": "https://api.github.com/users/Emerentius/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52065/timeline", "performed_via_github_app": null, "state_reason": "completed"}