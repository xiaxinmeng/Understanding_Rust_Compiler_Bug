{"url": "https://api.github.com/repos/rust-lang/rust/issues/96985", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96985/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96985/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96985/events", "html_url": "https://github.com/rust-lang/rust/issues/96985", "id": 1234303725, "node_id": "I_kwDOAAsO6M5Jkfrt", "number": 96985, "title": "rustc save-analysis records variant struct-literal spans as referencing enum not variant", "user": {"login": "kdashg", "id": 1471629, "node_id": "MDQ6VXNlcjE0NzE2Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1471629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdashg", "html_url": "https://github.com/kdashg", "followers_url": "https://api.github.com/users/kdashg/followers", "following_url": "https://api.github.com/users/kdashg/following{/other_user}", "gists_url": "https://api.github.com/users/kdashg/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdashg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdashg/subscriptions", "organizations_url": "https://api.github.com/users/kdashg/orgs", "repos_url": "https://api.github.com/users/kdashg/repos", "events_url": "https://api.github.com/users/kdashg/events{/privacy}", "received_events_url": "https://api.github.com/users/kdashg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-05-12T17:48:47Z", "updated_at": "2022-05-14T08:14:51Z", "closed_at": "2022-05-14T08:14:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This came out of investigation into a bug in Mozilla's SearchFox tool output:\r\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1623824\r\n(I went into detail about the investigation there, as well as a proof-of-concept patch)\r\n\r\nIt looks like in a struct-literal construction such as `MyEnum::MyVariant { ... }`, the \"MyVariant\" span ends up recorded as a reference to MyEnum, not MyVariant.\r\n\r\nGiven the following code: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=e34b9b11c38581770e7cd82f1372b264\r\n\r\n```rust=\r\nenum NativeSurfaceOperationDetails {\r\n    CreateExternalSurface {\r\n        id: usize,\r\n        is_opaque: bool,\r\n    },\r\n}\r\n\r\n// -\r\n\r\nfn construct() -> NativeSurfaceOperationDetails {\r\n    NativeSurfaceOperationDetails::CreateExternalSurface {\r\n        id: 5,\r\n        is_opaque: true,\r\n    }\r\n}\r\n\r\nfn print(e: NativeSurfaceOperationDetails) {\r\n    match e {\r\n        NativeSurfaceOperationDetails::CreateExternalSurface { id, is_opaque } => {\r\n            println!(\"id: {}, is_opaque: {}\", id, is_opaque);\r\n        }\r\n    }\r\n}\r\n\r\n// -\r\n\r\nfn main() {\r\n    let e = construct();\r\n    print(e);\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\n    {\r\n      \"kind\": \"Type\",\r\n      \"span\": {\r\n        \"file_name\": \"enum-variant-ctor.rs\",\r\n        \"byte_start\": 177,\r\n        \"byte_end\": 206,\r\n        \"line_start\": 11,\r\n        \"line_end\": 11,\r\n        \"column_start\": 4,\r\n        \"column_end\": 33\r\n      },\r\n      \"ref_id\": {\r\n        \"krate\": 0,\r\n        \"index\": 3\r\n      }\r\n    },\r\n    {\r\n      \"kind\": \"Type\",\r\n      \"span\": {\r\n        \"file_name\": \"enum-variant-ctor.rs\",\r\n        \"byte_start\": 208,\r\n        \"byte_end\": 229,\r\n        \"line_start\": 11,\r\n        \"line_end\": 11,\r\n        \"column_start\": 35,\r\n        \"column_end\": 56\r\n      },\r\n      \"ref_id\": {\r\n        \"krate\": 0,\r\n        \"index\": 3\r\n      }\r\n    },\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\n\r\n```\r\n    {\r\n      \"kind\": \"Type\",\r\n      \"span\": {\r\n        \"file_name\": \"enum-variant-ctor.rs\",\r\n        \"byte_start\": 177,\r\n        \"byte_end\": 206,\r\n        \"line_start\": 11,\r\n        \"line_end\": 11,\r\n        \"column_start\": 4,\r\n        \"column_end\": 33\r\n      },\r\n      \"ref_id\": {\r\n        \"krate\": 0,\r\n        \"index\": 3\r\n      }\r\n    },\r\n    {\r\n      \"kind\": \"Type\",\r\n      \"span\": {\r\n        \"file_name\": \"enum-variant-ctor.rs\",\r\n        \"byte_start\": 208,\r\n        \"byte_end\": 229,\r\n        \"line_start\": 11,\r\n        \"line_end\": 11,\r\n        \"column_start\": 35,\r\n        \"column_end\": 56\r\n      },\r\n      \"ref_id\": {\r\n        \"krate\": 0,\r\n        \"index\": 4   // <--\r\n      }\r\n    },\r\n```\r\n\r\nWhen searching for references to a particular variant, save-analysis should give us the information to enumerate them, including when used as struct literals.\r\nThe downstream effect of this in our SearchFox tool is that we get more hits for the string \"CreateExternalSurface\" than we do for the enum variant symbol `NativeSurfaceOperationDetails::CreateExternalSurface`:\r\nhttps://searchfox.org/mozilla-central/search?q=CreateExternalSurface&path=*.rs\r\nhttps://searchfox.org/mozilla-central/search?q=symbol:webrender%3A%3Acomposite%3A%3ANativeSurfaceOperationDetails%3A%3ACreateExternalSurface&redirect=false", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96985/timeline", "performed_via_github_app": null, "state_reason": "completed"}