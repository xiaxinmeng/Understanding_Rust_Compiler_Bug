{"url": "https://api.github.com/repos/rust-lang/rust/issues/89204", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89204/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89204/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89204/events", "html_url": "https://github.com/rust-lang/rust/issues/89204", "id": 1005639010, "node_id": "I_kwDOAAsO6M478NVi", "number": 89204, "title": "Adding a needless .into should produce a better error.", "user": {"login": "EvanCarroll", "id": 19922, "node_id": "MDQ6VXNlcjE5OTIy", "avatar_url": "https://avatars.githubusercontent.com/u/19922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EvanCarroll", "html_url": "https://github.com/EvanCarroll", "followers_url": "https://api.github.com/users/EvanCarroll/followers", "following_url": "https://api.github.com/users/EvanCarroll/following{/other_user}", "gists_url": "https://api.github.com/users/EvanCarroll/gists{/gist_id}", "starred_url": "https://api.github.com/users/EvanCarroll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EvanCarroll/subscriptions", "organizations_url": "https://api.github.com/users/EvanCarroll/orgs", "repos_url": "https://api.github.com/users/EvanCarroll/repos", "events_url": "https://api.github.com/users/EvanCarroll/events{/privacy}", "received_events_url": "https://api.github.com/users/EvanCarroll/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-09-23T16:38:08Z", "updated_at": "2021-09-23T16:39:22Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Suggested from [this question](https://stackoverflow.com/q/69303389/124486) on SO.\r\n\r\nThis code,\r\n\r\n```rust\r\nseq += rhs.into();\r\n```\r\n\r\nWill produce this error,\r\n\r\n```rust\r\nerror[E0283]: type annotations needed\r\n  --> src/sequence.rs:50:5\r\n   |\r\n19 | seq += rhs.into();\r\n   |     ^^ ---------- this method call resolves to `T`\r\n   |     |\r\n   |     cannot infer type for type parameter `T`\r\n   |\r\n   = note: cannot satisfy `_: Into<u64>`\r\n   = note: required because of the requirements on the impl of `AddAssign<_>` for `Sequence`\r\n```\r\n\r\nThis can lead you down a rabbit hole. The right answer is far more simple: **remove the `.into()`**\r\n\r\n```\r\nseq += rhs;\r\n```\r\nI would like error to say (copied from SO),\r\n\r\n> You have a double Into indirection. Since your type already implements `AddAssign<T> where T: Into<u64>`, then there is no need to add `.into()` to your right-hand member.\r\n\r\nThat's ideal. Alternatively it could just work. (I'm still kind of confused why it doesn't), but the solution is far easier and nicer than either,\r\n\r\n    seq += u64::from(rhs);\r\n    Into<u64>::into(rhs);\r\n\r\nLastly, providing the above syntax which is more complex but would otherwise solve the problem would be nice too.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89204/timeline", "performed_via_github_app": null, "state_reason": null}