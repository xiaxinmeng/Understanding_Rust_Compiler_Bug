{"url": "https://api.github.com/repos/rust-lang/rust/issues/81232", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81232/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81232/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81232/events", "html_url": "https://github.com/rust-lang/rust/issues/81232", "id": 790565045, "node_id": "MDU6SXNzdWU3OTA1NjUwNDU=", "number": 81232, "title": "Confusing error & warning message when importing a function and using it as if it were a module", "user": {"login": "joshuawarner32", "id": 182686, "node_id": "MDQ6VXNlcjE4MjY4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/182686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshuawarner32", "html_url": "https://github.com/joshuawarner32", "followers_url": "https://api.github.com/users/joshuawarner32/followers", "following_url": "https://api.github.com/users/joshuawarner32/following{/other_user}", "gists_url": "https://api.github.com/users/joshuawarner32/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshuawarner32/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshuawarner32/subscriptions", "organizations_url": "https://api.github.com/users/joshuawarner32/orgs", "repos_url": "https://api.github.com/users/joshuawarner32/repos", "events_url": "https://api.github.com/users/joshuawarner32/events{/privacy}", "received_events_url": "https://api.github.com/users/joshuawarner32/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-01-21T01:01:33Z", "updated_at": "2021-01-22T00:41:58Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "When importing a function and using it (accidentally!) as if it were a module, rustc says the name doesn't exist. This lead me to quite a bit of head-scratching. I would humbly suggest either clarifying the error message in such a case, or adding a 'note:' with such a clarification.\r\n\r\nI tried this code (playground link: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=e9602022b26521481d93c47608503185):\r\n\r\n```rust\r\n// Context: This is an attempt to distill down the essence of a confusing set of\r\n// error messages I saw while using rust at my day job. Apologies if this is a little wordy,\r\n// but I feel it's important to set context to understand my mindset when I hit this issue.\r\n//\r\n// My task of the day involved setting up some communication between threads.\r\n// I decided to use crossbeam for this. I glanced at the docs briefly, as well\r\n// as some existing uses laying around in our codebase.\r\n//\r\n// Somehow, not having looked in detail, I built up the faulty assumption\r\n// that the relevant pieces of crossbeam_channel would be organized something like this:\r\n//\r\n// ```\r\n// // crossbeam_channel/lib.rs\r\n// pub mod bounded {\r\n//     pub struct Sender { /*...*/ }\r\n//     pub struct Receiver { /*...*/ }\r\n//     pub fn channel() -> (Sender, Receiver) { /*...*/}\r\n// }\r\n// pub mod unbounded {\r\n//     pub struct Sender { /*...*/ }\r\n//     pub struct Receiver { /*...*/ }\r\n//     pub fn channel() -> (Sender, Receiver) { /*...*/}\r\n// }\r\n// pub mod oneshot { // I know now this is not a thing in crossbeam ;)\r\n//     pub struct Sender { /*...*/ }\r\n//     pub struct Receiver { /*...*/ }\r\n//     pub fn channel() -> (Sender, Receiver) { /*...*/}\r\n// }\r\n// ```\r\n//\r\n// This is of course _wrong_, and the real code is more like:\r\n//\r\n// ```\r\n// // crossbeam_channel/lib.rs\r\n// pub struct Sender { /*...*/ }\r\n// pub struct Receiver { /*...*/ }\r\n// pub fn bounded(bound: usize) -> (Sender, Receiver) { /*...*/}\r\n// pub fn unbounded() -> (Sender, Receiver) { /*...*/}\r\n// ```\r\n//\r\n// but setting that aside for the moment, I decided to import what I _thought_\r\n// was a module (crossbeam_channel::unbounded), and start using types/functions from it.\r\n//\r\n// I thought I had an existing import of 'unbounded' elsewhere in the file, so I decided to\r\n// rename the crossbeam import with `as`, like so:\r\n\r\nuse crossbeam_channel::unbounded as crossbeam_unbounded; // 0.8.0\r\n// ^^^ warning: unused import: `crossbeam_channel::unbounded as crossbeam_unbounded`\r\n//\r\n// The fact that I see _both_ this warning and the undeclared error below made this more confusing.\r\n// Note, in the real compiler output, both errors appear _before_ the warning. \r\n\r\nstruct MyStruct {\r\n    receiver: crossbeam_unbounded::Receiver<()>,\r\n    // ^^^ 'error[E0433]: failed to resolve: use of undeclared crate or module `crossbeam_unbounded`'\r\n    //\r\n    // Suggestion: it'd be really helpful to either modify the error message itself\r\n    // or else add a 'note:', to make it clear that crossbeam_unbounded _is_ in scope,\r\n    // it's just a function rather than a module.\r\n    //\r\n    // e.g. 'note: there is a `crossbeam_unbounded` is in scope, but it's a function not a module'\r\n}\r\n\r\nfn my_fn(unimportant_param: usize) -> MyStruct {\r\n    let (sender, receiver) = crossbeam_unbounded::channel();\r\n    // ^^^ 'error[E0433]: failed to resolve: use of undeclared crate or module `crossbeam_unbounded`'\r\n    // (same suggestion here as above)\r\n\r\n    // do something with sender... or whatever\r\n    MyStruct {\r\n        receiver,\r\n    }\r\n}\r\n\r\n// At this point, I was a bit flabargasted - the compiler clearly sees the import!\r\n//\r\n// I double-checked that I used the same name, copy-pasting one on top of the other.\r\n//\r\n// Then I thought, \"oh maybe there's some intervening mod declaration so these aren't in the same scope\"\r\n// (the real file is much, _much_ longer)\r\n//\r\n// But nope, they're definitely in the same scope.\r\n//\r\n// I moved the first use of `crossbeam_unbounded` to directly after the import,\r\n// and of course received the same error.\r\n```\r\n\r\nI expected to see this happen:\r\n* The compiler should let me know, somewhere in it's output, that the name is actually in scope, but it's not the right 'kind' of name (e.g. a function instead of a module).\r\n* This would be a great use-case for a 'note:' or a 'help:' output\r\n\r\nInstead, this happened:\r\n* I scratched my head for ~30 minutes, thinking I was running into some sort of bizarre compiler bug where the compiler somehow wasn't tracking the imports correctly\r\n* I then figured out that the error was actually mine.\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.49.0 (e1884a8e3 2020-12-29)\r\nbinary: rustc\r\ncommit-hash: e1884a8e3c3e813aada8254edfa120e85bf5ffca\r\ncommit-date: 2020-12-29\r\nhost: x86_64-apple-darwin\r\nrelease: 1.49.0\r\n```\r\n\r\n(this also repros on the latest nightly in the playground, as of writing)\r\n\r\nNot sure how difficult it would be to implement this, but if it's a reasonable 'beginner' issue, I'd be down to try to implement this.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81232/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81232/timeline", "performed_via_github_app": null, "state_reason": null}