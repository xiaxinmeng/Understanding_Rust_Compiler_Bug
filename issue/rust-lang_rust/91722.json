{"url": "https://api.github.com/repos/rust-lang/rust/issues/91722", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91722/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91722/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91722/events", "html_url": "https://github.com/rust-lang/rust/issues/91722", "id": 1075935786, "node_id": "I_kwDOAAsO6M5AIXoq", "number": 91722, "title": "read_to_end / read_to_string returns Invalid Input (\"buffer too small\") on Windows MSVC", "user": {"login": "agausmann", "id": 6611767, "node_id": "MDQ6VXNlcjY2MTE3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/6611767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agausmann", "html_url": "https://github.com/agausmann", "followers_url": "https://api.github.com/users/agausmann/followers", "following_url": "https://api.github.com/users/agausmann/following{/other_user}", "gists_url": "https://api.github.com/users/agausmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/agausmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agausmann/subscriptions", "organizations_url": "https://api.github.com/users/agausmann/orgs", "repos_url": "https://api.github.com/users/agausmann/repos", "events_url": "https://api.github.com/users/agausmann/events{/privacy}", "received_events_url": "https://api.github.com/users/agausmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123109, "node_id": "MDU6TGFiZWwxMjMxMDk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows", "name": "O-windows", "color": "6e6ec0", "default": false, "description": "Operating system: Windows"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}, {"id": 2238437210, "node_id": "MDU6TGFiZWwyMjM4NDM3MjEw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-io", "name": "A-io", "color": "f7e101", "default": false, "description": "Area: std::io, std::fs, std::net and std::path"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2021-12-09T19:42:05Z", "updated_at": "2022-01-05T02:46:22Z", "closed_at": "2022-01-04T23:01:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::io::{stdin, Read};\r\n\r\nfn main() {\r\n    let mut input = Vec::new();\r\n    stdin().read_to_end(&mut input).unwrap();\r\n\r\n    // Or:\r\n    /*\r\n    let mut input = String::new();\r\n    stdin().read_to_string(&mut input).unwrap();\r\n    */\r\n\r\n    println!(\"{:?}\", input);\r\n}\r\n```\r\n\r\nThis code can result in the error:\r\n\r\n```\r\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Error { kind: InvalidInput, message: \"Windows stdin in console mode does not support a buffer too small to guarantee holding one arbitrary UTF-8 character (4 bytes)\" }', main.rs:5:37\r\n```\r\n\r\nThis error is likely to happen when input is read in small chunks (e.g. a few characters per line, when line buffering is used), to slowly fill the string/vec close to its capacity. Currently, it is easily reproduceable by pressing return 15 times on the terminal input. \r\n\r\nThis error is uncontrollable by me; when I call read_to_end, the actual read calls and the buffer sizes used are entirely controlled by code in `std`. I'd expect it to just do the right thing in this case and provide the correct size buffer, and not raise an error that the end user can't easily recover from.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.57.0 (f1edd0429 2021-11-29)\r\nbinary: rustc\r\ncommit-hash: f1edd0429582dd29cccacaf50fd134b05593bd9c\r\ncommit-date: 2021-11-29\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.57.0\r\nLLVM version: 13.0.0\r\n```\r\n\r\nAlso reproducible on nightly:\r\n```\r\nrustc 1.59.0-nightly (efec54529 2021-12-04)\r\nbinary: rustc\r\ncommit-hash: efec545293b9263be9edfb283a7aa66350b3acbf\r\ncommit-date: 2021-12-04\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.59.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\nPretty sure this isn't relevant, as the panic is from an `unwrap()` in my code because of an error value created in `std`. But here you go:\r\n\r\n```\r\nstack backtrace:\r\n   0: std::panicking::begin_panic_handler\r\n             at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\\/library\\std\\src\\panicking.rs:498\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\\/library\\core\\src\\panicking.rs:107\r\n   2: core::result::unwrap_failed\r\n             at /rustc/efec545293b9263be9edfb283a7aa66350b3acbf\\/library\\core\\src\\result.rs:1660\r\n   3: core::result::Result<T,E>::unwrap\r\n   4: core::ptr::const_ptr::<impl *const T>::is_null\r\n   5: core::ops::function::FnOnce::call_once\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91722/timeline", "performed_via_github_app": null, "state_reason": "completed"}