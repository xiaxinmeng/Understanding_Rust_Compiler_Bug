{"url": "https://api.github.com/repos/rust-lang/rust/issues/98891", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98891/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98891/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98891/events", "html_url": "https://github.com/rust-lang/rust/issues/98891", "id": 1293214611, "node_id": "I_kwDOAAsO6M5NFOOT", "number": 98891, "title": "E0283 and E0284 on same expression uselessly duplicate identical help", "user": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-07-04T13:57:46Z", "updated_at": "2022-07-04T14:12:28Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\nalong with any information you feel relevant to replicating the bug.\n\nIf you cannot produce a minimal reproduction case (something that would work in\nisolation), please provide the steps or even link to a repository that causes\nthe problematic output to occur.\n-->\n\nGiven the following code: [[playground]](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=ad231695c1c3e37f3fbbb20551d2ade7)\n\n```rust\nuse std::borrow::Borrow;\n\npub trait IntoOwned<B>: Sized + Borrow<B>\nwhere\n    B: ?Sized,\n{\n    type Owned;\n    fn into_owned(self) -> Self::Owned;\n}\n\nimpl<'a, B> IntoOwned<B> for &'a B\nwhere\n    B: ?Sized + ToOwned,\n{\n    type Owned = <B as ToOwned>::Owned;\n    fn into_owned(self) -> Self::Owned {\n        self.to_owned()\n    }\n}\n\nimpl<T> IntoOwned<T> for T {\n    type Owned = T;\n    fn into_owned(self) -> Self::Owned {\n        self\n    }\n}\n\nfn main() {\n    let hello: &str = \"Hello World!\";\n    let owned: String = hello.into_owned();\n    println!(\"{owned}\");\n}\n```\n\nThe current output is:\n\n```\nerror[E0284]: type annotations needed\n  --> src/main.rs:30:31\n   |\n30 |     let owned: String = hello.into_owned();\n   |                               ^^^^^^^^^^\n   |\n   = note: cannot satisfy `<&str as IntoOwned<_>>::Owned == String`\nhelp: try using a fully qualified path to specify the expected types\n   |\n30 |     let owned: String = <&str as IntoOwned<B>>::into_owned(hello);\n   |                         +++++++++++++++++++++++++++++++++++     ~\n\nerror[E0283]: type annotations needed\n  --> src/main.rs:30:31\n   |\n30 |     let owned: String = hello.into_owned();\n   |                               ^^^^^^^^^^\n   |\nnote: multiple `impl`s satisfying `&str: IntoOwned<_>` found\n  --> src/main.rs:11:1\n   |\n11 | impl<'a, B> IntoOwned<B> for &'a B\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n...\n21 | impl<T> IntoOwned<T> for T {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^\nhelp: try using a fully qualified path to specify the expected types\n   |\n30 |     let owned: String = <&str as IntoOwned<B>>::into_owned(hello);\n   |                         +++++++++++++++++++++++++++++++++++     ~\n```\n\n<!-- The following is not always necessary. -->\nIdeally the output should be a single error, something like:\n\n```\nerror: type annotations needed\n  --> src/main.rs:30:31\n   |\n30 |     let owned: String = hello.into_owned();\n   |                               ^^^^^^^^^^\n   |\n   = note: cannot satisfy `<&str as IntoOwned<_>>::Owned == String`\nnote: multiple `impl`s satisfying `&str: IntoOwned<_>` found\n  --> src/main.rs:11:1\n   |\n11 | impl<'a, B> IntoOwned<B> for &'a B\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n...\n21 | impl<T> IntoOwned<T> for T {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^\nhelp: try using a fully qualified path to specify the expected types\n   |\n30 |     let owned: String = <&str as IntoOwned<B>>::into_owned(hello);\n   |                         +++++++++++++++++++++++++++++++++++     ~\n```\n\n<!--\nIf the problem is not self-explanatory, please provide a rationale for the\nchange.\n-->\n\n<!--\nIf dramatically different output is caused by small changes, consider also\nadding them here.\n\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions. The output might also be\ndifferent depending on the Edition.\n-->\n\nUsing UFCS (but leaving `B` as an inference variable) to avoid method lookup only emits E0283 and not E0284. This suggests that E0283 is the \"more canonical\" root error.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98891/timeline", "performed_via_github_app": null, "state_reason": null}