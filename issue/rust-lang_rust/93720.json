{"url": "https://api.github.com/repos/rust-lang/rust/issues/93720", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93720/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93720/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93720/events", "html_url": "https://github.com/rust-lang/rust/issues/93720", "id": 1125373717, "node_id": "I_kwDOAAsO6M5DE9cV", "number": 93720, "title": "Overflow should be caught earlier in standard query mode: ErrorReporting", "user": {"login": "juliancoffee", "id": 42647349, "node_id": "MDQ6VXNlcjQyNjQ3MzQ5", "avatar_url": "https://avatars.githubusercontent.com/u/42647349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juliancoffee", "html_url": "https://github.com/juliancoffee", "followers_url": "https://api.github.com/users/juliancoffee/followers", "following_url": "https://api.github.com/users/juliancoffee/following{/other_user}", "gists_url": "https://api.github.com/users/juliancoffee/gists{/gist_id}", "starred_url": "https://api.github.com/users/juliancoffee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juliancoffee/subscriptions", "organizations_url": "https://api.github.com/users/juliancoffee/orgs", "repos_url": "https://api.github.com/users/juliancoffee/repos", "events_url": "https://api.github.com/users/juliancoffee/events{/privacy}", "received_events_url": "https://api.github.com/users/juliancoffee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-02-07T00:44:24Z", "updated_at": "2022-06-24T15:00:34Z", "closed_at": "2022-06-24T15:00:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\nSo, I was trying to make a function that has basically the following signature.\r\n`bubble<T, const N: u8>(x: T) -> [[..[T]..]]` where resulting type is array of depth N using `generic_const_exprs`.\r\nI understand that this isn't the code you would need to write in real life, but I thought it would be helpful to report ICE and provide a minimalistic example.\r\nThis is probably related to #87001, but also triggers ICE and uses `specialization` feature.\r\n### Code\r\n\r\n```Rust\r\n#![feature(specialization)]\r\n#![feature(generic_const_exprs)]\r\n#![recursion_limit = \"400\"]\r\n\r\ntrait MyFn<Args> {\r\n    type Output;\r\n    fn call(self, args: Args) -> Self::Output;\r\n}\r\n\r\nstruct Bubble<T, const N: u8> {\r\n    t: std::marker::PhantomData<T>,\r\n}\r\n\r\n\r\nimpl<T> MyFn<T> for Bubble<T, 1> {\r\n    type Output = [T; 1];\r\n    fn call(self, args: T) -> [T; 1] {\r\n        [args]\r\n    }\r\n}\r\n\r\nimpl<T, const N: u8> MyFn<T> for Bubble<T, N>\r\nwhere\r\n    [(); {N - 1}]:,\r\n    Bubble::<[T; 1], {N - 1}>: MyFn<[T; 1]>,\r\n{\r\n    type Output = [T; 1];\r\n    fn call(self, args: T) -> [T; 1] {\r\n        let f = Bubble::<[T; 1], {N - 1}>{t: std::marker::PhantomData};\r\n        f.call([args])\r\n    }\r\n}\r\n\r\nfn main() {\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.58.0-nightly (dd549dcab 2021-11-25)\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling clozuer v0.1.0 (/tmp/clozuer)\r\nwarning: the feature `specialization` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/main.rs:1:12\r\n  |\r\n1 | #![feature(specialization)]\r\n  |            ^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #31844 <https://github.com/rust-lang/rust/issues/31844> for more information\r\n  = help: consider using `min_specialization` instead, which is more stable and complete\r\n\r\nwarning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/main.rs:2:12\r\n  |\r\n2 | #![feature(generic_const_exprs)]\r\n  |            ^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\r\n\r\nwarning: unnecessary braces around const expression\r\n  --> src/main.rs:24:10\r\n   |\r\n24 |     [(); {N - 1}]:,\r\n   |          ^     ^\r\n   |\r\n   = note: `#[warn(unused_braces)]` on by default\r\nhelp: remove these braces\r\n   |\r\n24 -     [(); {N - 1}]:,\r\n24 +     [(); N - 1]:,\r\n   | \r\n\r\nerror[E0080]: evaluation of `<Bubble<[^0; 1], {N - 1}> as MyFn<[^0; 1]>>::{constant#2}` failed\r\n  --> src/main.rs:25:23\r\n   |\r\n25 |     Bubble::<[T; 1], {N - 1}>: MyFn<[T; 1]>,\r\n   |                       ^^^^^ attempt to compute `0_u8 - 1_u8`, which would overflow\r\n\r\nerror[E0080]: evaluation of `<Bubble<[^0; 1], 0_u8> as MyFn<[^0; 1]>>::{constant#2}` failed\r\n  --> src/main.rs:25:23\r\n   |\r\n25 |     Bubble::<[T; 1], {N - 1}>: MyFn<[T; 1]>,\r\n   |                       ^^^^^ attempt to compute `0_u8 - 1_u8`, which would overflow\r\n\r\nthread 'rustc' panicked at 'Overflow should be caught earlier in standard query mode: ErrorReporting', compiler/rustc_trait_selection/src/traits/select/mod.rs:420:14\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.58.0-nightly (dd549dcab 2021-11-25) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [specialization_graph_of] building specialization graph of trait `MyFn`\r\n#1 [coherent_trait] coherence checking all impls of trait `MyFn`\r\nend of query stack\r\nFor more information about this error, try `rustc --explain E0080`.\r\nwarning: `clozuer` (bin \"clozuer\") generated 3 warnings\r\nerror: could not compile `clozuer` due to 2 previous errors; 3 warnings emitted\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   Compiling clozuer v0.1.0 (/tmp/clozuer)\r\nwarning: the feature `specialization` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/main.rs:1:12\r\n  |\r\n1 | #![feature(specialization)]\r\n  |            ^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #31844 <https://github.com/rust-lang/rust/issues/31844> for more information\r\n  = help: consider using `min_specialization` instead, which is more stable and complete\r\n\r\nwarning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/main.rs:2:12\r\n  |\r\n2 | #![feature(generic_const_exprs)]\r\n  |            ^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\r\n\r\nwarning: unnecessary braces around const expression\r\n  --> src/main.rs:24:10\r\n   |\r\n24 |     [(); {N - 1}]:,\r\n   |          ^     ^\r\n   |\r\n   = note: `#[warn(unused_braces)]` on by default\r\nhelp: remove these braces\r\n   |\r\n24 -     [(); {N - 1}]:,\r\n24 +     [(); N - 1]:,\r\n   | \r\n\r\nerror[E0080]: evaluation of `<Bubble<[^0; 1], {N - 1}> as MyFn<[^0; 1]>>::{constant#2}` failed\r\n  --> src/main.rs:25:23\r\n   |\r\n25 |     Bubble::<[T; 1], {N - 1}>: MyFn<[T; 1]>,\r\n   |                       ^^^^^ attempt to compute `0_u8 - 1_u8`, which would overflow\r\n\r\nerror[E0080]: evaluation of `<Bubble<[^0; 1], 0_u8> as MyFn<[^0; 1]>>::{constant#2}` failed\r\n  --> src/main.rs:25:23\r\n   |\r\n25 |     Bubble::<[T; 1], {N - 1}>: MyFn<[T; 1]>,\r\n   |                       ^^^^^ attempt to compute `0_u8 - 1_u8`, which would overflow\r\n\r\nthread 'rustc' panicked at 'Overflow should be caught earlier in standard query mode: ErrorReporting', compiler/rustc_trait_selection/src/traits/select/mod.rs:420:14\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/dd549dcab404ec4c7d07b5a83aca5bdd7171138f/library/std/src/panicking.rs:498:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/dd549dcab404ec4c7d07b5a83aca5bdd7171138f/library/core/src/panicking.rs:107:14\r\n   2: core::result::unwrap_failed\r\n             at /rustc/dd549dcab404ec4c7d07b5a83aca5bdd7171138f/library/core/src/result.rs:1613:5\r\n   3: <&mut rustc_trait_selection::traits::coherence::overlap_within_probe::{closure#2} as core::ops::function::FnMut<(&rustc_infer::traits::Obligation<rustc_middle::ty::Predicate>,)>>::call_mut\r\n   4: <core::iter::adapters::chain::Chain<core::iter::adapters::copied::Copied<core::slice::iter::Iter<rustc_middle::ty::Predicate>>, alloc::vec::into_iter::IntoIter<rustc_middle::ty::Predicate>> as core::iter::traits::iterator::Iterator>::try_fold::<(), core::iter::adapters::map::map_try_fold<rustc_middle::ty::Predicate, rustc_middle::ty::Predicate, (), core::ops::control_flow::ControlFlow<rustc_infer::traits::Obligation<rustc_middle::ty::Predicate>>, rustc_trait_selection::traits::coherence::overlap_within_probe::{closure#0}, core::iter::adapters::map::map_try_fold<rustc_middle::ty::Predicate, rustc_infer::traits::Obligation<rustc_middle::ty::Predicate>, (), core::ops::control_flow::ControlFlow<rustc_infer::traits::Obligation<rustc_middle::ty::Predicate>>, rustc_trait_selection::traits::coherence::overlap_within_probe::{closure#1}, core::iter::traits::iterator::Iterator::find::check<rustc_infer::traits::Obligation<rustc_middle::ty::Predicate>, &mut rustc_trait_selection::traits::coherence::overlap_within_probe::{closure#2}>::{closure#0}>::{closure#0}>::{closure#0}, core::ops::control_flow::ControlFlow<rustc_infer::traits::Obligation<rustc_middle::ty::Predicate>>>\r\n   5: rustc_trait_selection::traits::coherence::overlap_within_probe\r\n   6: <rustc_infer::infer::InferCtxtBuilder>::enter::<bool, rustc_trait_selection::traits::coherence::overlapping_impls<<rustc_middle::traits::specialization_graph::Children as rustc_trait_selection::traits::specialize::specialization_graph::ChildrenExt>::insert::{closure#2}, <rustc_middle::traits::specialization_graph::Children as rustc_trait_selection::traits::specialize::specialization_graph::ChildrenExt>::insert::{closure#3}, core::result::Result<(bool, bool), rustc_trait_selection::traits::specialize::OverlapError>>::{closure#3}>\r\n   7: rustc_trait_selection::traits::coherence::overlapping_impls::<<rustc_middle::traits::specialization_graph::Children as rustc_trait_selection::traits::specialize::specialization_graph::ChildrenExt>::insert::{closure#2}, <rustc_middle::traits::specialization_graph::Children as rustc_trait_selection::traits::specialize::specialization_graph::ChildrenExt>::insert::{closure#3}, core::result::Result<(bool, bool), rustc_trait_selection::traits::specialize::OverlapError>>\r\n   8: <rustc_middle::traits::specialization_graph::Children as rustc_trait_selection::traits::specialize::specialization_graph::ChildrenExt>::insert\r\n   9: <rustc_middle::traits::specialization_graph::Graph as rustc_trait_selection::traits::specialize::specialization_graph::GraphExt>::insert\r\n  10: rustc_trait_selection::traits::specialize::specialization_graph_provider\r\n  11: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::DefId, rustc_middle::traits::specialization_graph::Graph>\r\n  12: rustc_data_structures::stack::ensure_sufficient_stack::<(rustc_middle::traits::specialization_graph::Graph, rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, rustc_span::def_id::DefId, rustc_middle::traits::specialization_graph::Graph>::{closure#3}>\r\n  13: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::ArenaCache<rustc_span::def_id::DefId, rustc_middle::traits::specialization_graph::Graph>>\r\n  14: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::specialization_graph_of, rustc_query_impl::plumbing::QueryCtxt>\r\n  15: rustc_typeck::coherence::coherent_trait\r\n  16: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::DefId, ()>\r\n  17: rustc_data_structures::stack::ensure_sufficient_stack::<((), rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, rustc_span::def_id::DefId, ()>::{closure#3}>\r\n  18: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::DefId, ()>>\r\n  19: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::coherent_trait, rustc_query_impl::plumbing::QueryCtxt>\r\n  20: rustc_typeck::coherence::check_coherence\r\n  21: <rustc_session::session::Session>::track_errors::<rustc_typeck::check_crate::{closure#3}, ()>\r\n  22: rustc_typeck::check_crate\r\n  23: rustc_interface::passes::analysis\r\n  24: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), core::result::Result<(), rustc_errors::ErrorReported>>\r\n  25: rustc_data_structures::stack::ensure_sufficient_stack::<(core::result::Result<(), rustc_errors::ErrorReported>, rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, (), core::result::Result<(), rustc_errors::ErrorReported>>::{closure#3}>\r\n  26: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorReported>>>\r\n  27: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  28: <rustc_interface::passes::QueryContext>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}::{closure#3}, core::result::Result<(), rustc_errors::ErrorReported>>\r\n  29: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorReported>>\r\n  30: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  31: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>\r\n  32: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.58.0-nightly (dd549dcab 2021-11-25) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [specialization_graph_of] building specialization graph of trait `MyFn`\r\n#1 [coherent_trait] coherence checking all impls of trait `MyFn`\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nFor more information about this error, try `rustc --explain E0080`.\r\nwarning: `clozuer` (bin \"clozuer\") generated 3 warnings\r\nerror: could not compile `clozuer` due to 2 previous errors; 3 warnings emitted\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93720/timeline", "performed_via_github_app": null, "state_reason": "completed"}