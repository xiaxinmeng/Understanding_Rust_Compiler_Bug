{"url": "https://api.github.com/repos/rust-lang/rust/issues/92148", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92148/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92148/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92148/events", "html_url": "https://github.com/rust-lang/rust/issues/92148", "id": 1085442706, "node_id": "I_kwDOAAsO6M5AsoqS", "number": 92148, "title": "ICE - ErrorReporting Overflow should not reach `report_selection_err` call", "user": {"login": "matheus-consoli", "id": 27595790, "node_id": "MDQ6VXNlcjI3NTk1Nzkw", "avatar_url": "https://avatars.githubusercontent.com/u/27595790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matheus-consoli", "html_url": "https://github.com/matheus-consoli", "followers_url": "https://api.github.com/users/matheus-consoli/followers", "following_url": "https://api.github.com/users/matheus-consoli/following{/other_user}", "gists_url": "https://api.github.com/users/matheus-consoli/gists{/gist_id}", "starred_url": "https://api.github.com/users/matheus-consoli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matheus-consoli/subscriptions", "organizations_url": "https://api.github.com/users/matheus-consoli/orgs", "repos_url": "https://api.github.com/users/matheus-consoli/repos", "events_url": "https://api.github.com/users/matheus-consoli/events{/privacy}", "received_events_url": "https://api.github.com/users/matheus-consoli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-12-21T05:09:31Z", "updated_at": "2022-03-26T12:52:17Z", "closed_at": "2022-03-26T12:52:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I slipped on ICE while trying to formulate an example of a problem I was showing to some friends. Essentially, I was trying to implement a trait `Trait` to a `Vec<T>` where `T` itself impls `Trait`. The implementation wasn't done yet, but I ran it anyway, and the compiler `panic`ked during the error report with:\r\n\r\n```rust\r\nerror: internal compiler error: compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs:855:17: ErrorReporting Overflow should not reach `report_selection_err` call\r\n```\r\n\r\n### Code\r\n\r\n[playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=5a35c2b1a6f0915cbaf7f205cf2e0c27)\r\n\r\n```rust\r\ntrait Blah<T> {\r\n    type Output;\r\n    fn foo(t: T) -> Self::Output;\r\n}\r\n\r\nimpl Blah<i32> for i32 {\r\n    type Output = i64;\r\n\r\n    fn foo(t: i32) -> Self::Output {\r\n        t as Self::Output\r\n    }\r\n}\r\n\r\nimpl<B, F> Blah<Vec<F>> for B\r\nwhere\r\n    B: Blah<F>,\r\n{\r\n    type Output = Vec<T::Output>;\r\n\r\n    fn foo(t: T) -> Self::Output {\r\n        t.into_iter(F::foo).collect()\r\n    }\r\n}\r\n```\r\nI messed up with the Generics names, note that I even used a type named `T` that wasn't even declared ~~(my humble guess is that this is the starting point to the overflow)~~.\r\n\r\nEDIT2: my guess was wrong! The code is soooo fucked up that even using a declared type the compiles stills `panick`ing\r\n\r\n<details><summary>and this also fails</summary>\r\n<p>\r\n\r\n```rust\r\nimpl<B, T> Blah<Vec<T>> for B\r\nwhere\r\n    B: Blah<T>,\r\n{\r\n    type Output = Vec<B::Output>;\r\n\r\n    fn foo(t: T) -> Self::Output {\r\n        t.into_iter(T::foo).collect()\r\n    }\r\n}\r\n\r\n```\r\n</p>\r\n</details>\r\n\r\nAnd, just for the sake of completeness, I was trying to implement [this](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=56ab011ac053709d5a7a94215f6609c8).\r\n\r\n### Meta\r\nFound it both on Stable and Nightly:\r\n\r\n#### Stable\r\n`rustc +stable --version --verbose`:\r\n```\r\nrustc 1.57.0 (f1edd0429 2021-11-29)\r\nbinary: rustc\r\ncommit-hash: f1edd0429582dd29cccacaf50fd134b05593bd9c\r\ncommit-date: 2021-11-29\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.57.0\r\nLLVM version: 13.0.0\r\n```\r\n<details><summary><strong>Nightly</strong></summary>\r\n<p>\r\n\r\n`rustc +nightly --version --verbose`:\r\n\r\n```\r\nrustc 1.59.0-nightly (23f69235a 2021-12-20)\r\nbinary: rustc\r\ncommit-hash: 23f69235ad2eb9b44ac1a55eeaa3f9b484d9de4a\r\ncommit-date: 2021-12-20\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.59.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n### Error output\r\n\r\n```rust\r\n$ cargo +stable c\r\n    Checking ice v0.1.0 (/tmp/ice)\r\nerror[E0433]: failed to resolve: use of undeclared type `T`\r\n  --> src/main.rs:18:23\r\n   |\r\n18 |     type Output = Vec<T::Output>;\r\n   |                       ^ use of undeclared type `T`\r\n\r\nerror[E0412]: cannot find type `T` in this scope\r\n  --> src/main.rs:20:15\r\n   |\r\n14 | impl<B, F> Blah<Vec<F>> for B\r\n   |      - similarly named type parameter `B` defined here\r\n...\r\n20 |     fn foo(t: T) -> Self::Output {\r\n   |               ^ help: a type parameter with a similar name exists: `B`\r\n\r\nerror[E0601]: `main` function not found in crate `ice`\r\n  --> src/main.rs:1:1\r\n   |\r\n1  | / trait Blah<T> {\r\n2  | |     type Output;\r\n3  | |     fn foo(t: T) -> Self::Output;\r\n4  | | }\r\n...  |\r\n22 | |     }\r\n23 | | }\r\n   | |_^ consider adding a `main` function to `src/main.rs`\r\n\r\nerror: internal compiler error: compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs:846:17: ErrorReporting Overflow should not reach `report_selection_err` call\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1146:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0 (f1edd0429 2021-11-29) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C linker=/usr/bin/clang -C incremental -C link-arg=--ld-path=/usr/bin/mold --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `<impl at src/main.rs:14:1: 23:2>::foo`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\nend of query stack\r\nSome errors have detailed explanations: E0412, E0433, E0601.\r\nFor more information about an error, try `rustc --explain E0412`.\r\nerror: could not compile `ice` due to 3 previous errors\r\n```\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs:846:17: ErrorReporting Overflow should not reach `report_selection_err` call\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1146:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: std::panic::panic_any\r\n   2: rustc_errors::HandlerInner::bug\r\n   3: rustc_errors::Handler::bug\r\n   4: rustc_middle::ty::context::tls::with_opt\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtExt>::report_selection_error\r\n   8: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtPrivExt>::report_fulfillment_error\r\n   9: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtExt>::report_fulfillment_errors\r\n  10: rustc_typeck::check::fn_ctxt::_impl::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::resolve_vars_with_obligations\r\n  11: rustc_typeck::check::coercion::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::try_coerce\r\n  12: rustc_typeck::check::demand::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::demand_coerce_diag\r\n  13: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  14: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_method_argument_types\r\n  15: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  16: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  17: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  18: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  19: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  20: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  21: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  22: rustc_typeck::check::check::check_fn\r\n  23: rustc_infer::infer::InferCtxtBuilder::enter\r\n  24: rustc_typeck::check::typeck\r\n  25: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  26: rustc_data_structures::stack::ensure_sufficient_stack\r\n  27: rustc_query_system::query::plumbing::try_execute_query\r\n  28: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  29: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  30: rustc_data_structures::sync::par_for_each_in\r\n  31: rustc_typeck::check::typeck_item_bodies\r\n  32: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  33: rustc_data_structures::stack::ensure_sufficient_stack\r\n  34: rustc_query_system::query::plumbing::try_execute_query\r\n  35: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck_item_bodies\r\n  36: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  37: rustc_typeck::check_crate\r\n  38: rustc_interface::passes::analysis\r\n  39: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  40: rustc_data_structures::stack::ensure_sufficient_stack\r\n  41: rustc_query_system::query::plumbing::try_execute_query\r\n  42: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  43: rustc_interface::passes::QueryContext::enter\r\n  44: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  45: rustc_span::with_source_map\r\n  46: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0 (f1edd0429 2021-11-29) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C linker=/usr/bin/clang -C incremental -C link-arg=--ld-path=/usr/bin/mold --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `<impl at src/main.rs:14:1: 23:2>::foo`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nSome errors have detailed explanations: E0412, E0433, E0601.\r\nFor more information about an error, try `rustc --explain E0412`.\r\nerror: could not compile `ice` due to 3 previous errors\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92148/timeline", "performed_via_github_app": null, "state_reason": "completed"}