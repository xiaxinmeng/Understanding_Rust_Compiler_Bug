{"url": "https://api.github.com/repos/rust-lang/rust/issues/110745", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110745/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110745/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110745/events", "html_url": "https://github.com/rust-lang/rust/issues/110745", "id": 1680215660, "node_id": "I_kwDOAAsO6M5kJg5s", "number": 110745, "title": "ICE: debug assertions: E0061 suggests garbage code if struct name == fn name ", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 4199206102, "node_id": "LA_kwDOAAsO6M76SszW", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-debug-assertions", "name": "requires-debug-assertions", "color": "76dcde", "default": false, "description": "This issue requires debug-assertions in some way"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-04-23T23:14:43Z", "updated_at": "2023-04-26T10:30:11Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Code\r\n\r\nYou need debug assertions for the ice!\r\n\r\n```Rust\r\n#![crate_type=\"lib\"]\r\n\r\n#[derive(Clone)]\r\nstruct A<T, U>(T, U);\r\n\r\nfn A() {}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\n<version>\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0428]: the name `A` is defined multiple times\r\n --> EE2C38A2D5621C3FBE37D753F1BC19AFC487F6962D8B7E352367BEA9C0337700.rs:6:1\r\n  |\r\n4 | struct A<T, U>(T, U);\r\n  | --------------------- previous definition of the value `A` here\r\n5 |\r\n6 | fn A() {}\r\n  | ^^^^^^ `A` redefined here\r\n  |\r\n  = note: `A` must be defined only once in the value namespace of this module\r\n\r\nerror[E0061]: this function takes 0 arguments but 2 arguments were supplied\r\n --> EE2C38A2D5621C3FBE37D753F1BC19AFC487F6962D8B7E352367BEA9C0337700.rs:3:10\r\n  |\r\n3 | #[derive(Clone)]\r\n  |          ^^^^^\r\n4 | struct A<T, U>(T, U);\r\n  |                -  - unexpected argument of type `U`\r\n  |                |\r\n  |                unexpected argument of type `T`\r\n  |\r\nnote: function defined here\r\n --> EE2C38A2D5621C3FBE37D753F1BC19AFC487F6962D8B7E352367BEA9C0337700.rs:6:4\r\n  |\r\n6 | fn A() {}\r\n  |    ^\r\n  = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)\r\nhelp: remove the extra arguments\r\n  |\r\n3 - #[derive(Clone)]\r\n4 - struct A<T, U>(T, U);\r\n3 + #[derive(Clon, U);\r\n  |\r\n\r\nerror[E0308]: mismatched types\r\n --> EE2C38A2D5621C3FBE37D753F1BC19AFC487F6962D8B7E352367BEA9C0337700.rs:3:10\r\n  |\r\n3 | #[derive(Clone)]\r\n  |          ^^^^^\r\n  |          |\r\n  |          expected `A<T, U>`, found `()`\r\n  |          expected `A<T, U>` because of return type\r\n  |\r\n  = note: expected struct `A<T, U>`\r\n          found unit type `()`\r\n  = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: aborting due to 3 previous errors\r\n\r\nSome errors have detailed explanations: E0061, E0308, E0428.\r\nFor more information about an error, try `rustc --explain E0061`.\r\n```\r\n\r\nThe\r\n```\r\n3 - #[derive(Clone)]\r\n4 - struct A<T, U>(T, U);\r\n3 + #[derive(Clon, U);\r\n```\r\npart is especially interesting :laughing: \r\n\r\n![wtf_rust](https://user-images.githubusercontent.com/476013/233871251-017645a4-c2b6-472d-9b87-f3958205afc5.png)\r\n\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror[E0428]: the name `A` is defined multiple times\r\n --> EE2C38A2D5621C3FBE37D753F1BC19AFC487F6962D8B7E352367BEA9C0337700.rs:6:1\r\n  |\r\n4 | struct A<T, U>(T, U);\r\n  | --------------------- previous definition of the value `A` here\r\n5 |\r\n6 | fn A() {}\r\n  | ^^^^^^ `A` redefined here\r\n  |\r\n  = note: `A` must be defined only once in the value namespace of this module\r\nthread 'rustc' panicked at 'assertion failed: `(left == right)`\r\n  left: `Some([SubstitutionPart { span: EE2C38A2D5621C3FBE37D753F1BC19AFC487F6962D8B7E352367BEA9C0337700.rs:3:14: 4:17 (#4), snippet: \"\" }, SubstitutionPart { span: EE2C38A2D5621C3FBE37D753F1BC19AFC487F6962D8B7E352367BEA9C0337700.rs:4:16: 4:17 (#4), snippet: \"\" }])`,\r\n right: `None`: suggestion must not have overlapping parts', /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_errors/src/diagnostic.rs:632:9\r\nstack backtrace:\r\n   0:     0x7fc8e32feeb0 - std::backtrace_rs::backtrace::libunwind::trace::hbf78ef88fed844ac\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7fc8e32feeb0 - std::backtrace_rs::backtrace::trace_unsynchronized::h35213943d90d267c\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7fc8e32feeb0 - std::sys_common::backtrace::_print_fmt::h22ba8bfb93a0a925\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/sys_common/backtrace.rs:65:5\r\n   3:     0x7fc8e32feeb0 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h4d082456b766373f\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/sys_common/backtrace.rs:44:22\r\n   4:     0x7fc8e33adec8 - core::fmt::write::he3860e7dd81c785d\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/core/src/fmt/mod.rs:1247:17\r\n   5:     0x7fc8e331403f - std::io::Write::write_fmt::he5c3c49e127ce77e\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/io/mod.rs:1712:15\r\n   6:     0x7fc8e32fecb5 - std::sys_common::backtrace::_print::hbf9982c7c009c352\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/sys_common/backtrace.rs:47:5\r\n   7:     0x7fc8e32fecb5 - std::sys_common::backtrace::print::h8ed700e06ac6907c\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/sys_common/backtrace.rs:34:9\r\n   8:     0x7fc8e333d1c3 - std::panicking::default_hook::{{closure}}::h51962e62c530968d\r\n   9:     0x7fc8e333cdf9 - std::panicking::default_hook::h4d87bf54451529eb\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/panicking.rs:293:9\r\n  10:     0x7fc8e5b70905 - <alloc[32b43e9536c01a3]::boxed::Box<dyn for<'a, 'b> core[c5d5d662f7508502]::ops::function::Fn<(&'a core[c5d5d662f7508502]::panic::panic_info::PanicInfo<'b>,), Output = ()> + core[c5d5d662f7508502]::marker::Send + core[c5d5d662f7508502]::marker::Sync> as core[c5d5d662f7508502]::ops::function::Fn<(&core[c5d5d662f7508502]::panic::panic_info::PanicInfo,)>>::call\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/alloc/src/boxed.rs:1976:9\r\n  11:     0x7fc8e5b70905 - rustc_driver_impl[17d9f77bedede00f]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_driver_impl/src/lib.rs:1208:17\r\n  12:     0x7fc8e333db12 - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::hadc44a34952fbfd6\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/alloc/src/boxed.rs:1976:9\r\n  13:     0x7fc8e333db12 - std::panicking::rust_panic_with_hook::h5a54165269cb41b9\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/panicking.rs:704:13\r\n  14:     0x7fc8e32ff68e - std::panicking::begin_panic_handler::{{closure}}::h20e65ba4620c9639\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/panicking.rs:595:13\r\n  15:     0x7fc8e32fef96 - std::sys_common::backtrace::__rust_end_short_backtrace::heb6999246060ea55\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/sys_common/backtrace.rs:150:18\r\n  16:     0x7fc8e333d652 - rust_begin_unwind\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/panicking.rs:584:5\r\n  17:     0x7fc8e33c8373 - core::panicking::panic_fmt::h446694351a19189a\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/core/src/panicking.rs:67:14\r\n  18:     0x7fc8e33c8a33 - core::panicking::assert_failed_inner::hf5d9d5304461a0b9\r\n  19:     0x7fc8e624eae9 - core[c5d5d662f7508502]::panicking::assert_failed::<core[c5d5d662f7508502]::option::Option<&[rustc_errors[a8991bf26d602792]::SubstitutionPart; 2usize]>, core[c5d5d662f7508502]::option::Option<&[rustc_errors[a8991bf26d602792]::SubstitutionPart; 2usize]>>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/core/src/panicking.rs:228:5\r\n  20:     0x7fc8e6375c45 - <rustc_errors[a8991bf26d602792]::diagnostic::Diagnostic>::multipart_suggestion_with_style::<&alloc[32b43e9536c01a3]::string::String>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_errors/src/diagnostic.rs:632:9\r\n  21:     0x7fc8e618972b - <rustc_errors[a8991bf26d602792]::diagnostic::Diagnostic>::multipart_suggestion::<&alloc[32b43e9536c01a3]::string::String>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_errors/src/diagnostic.rs:588:9\r\n  22:     0x7fc8e618972b - <rustc_errors[a8991bf26d602792]::diagnostic_builder::DiagnosticBuilder<rustc_span[586fe534fb00e1b1]::ErrorGuaranteed>>::multipart_suggestion::<&alloc[32b43e9536c01a3]::string::String>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_errors/src/diagnostic_builder.rs:481:35\r\n  23:     0x7fc8e618972b - <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::report_arg_errors\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs:1221:17\r\n  24:     0x7fc8e6184e79 - <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_argument_types\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs:453:13\r\n  25:     0x7fc8e614871f - <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::confirm_builtin_call\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/callee.rs:460:9\r\n  26:     0x7fc8e6146ccc - <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_call\r\n  27:     0x7fc8e61df4e9 - <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_expr_kind\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:336:45\r\n  28:     0x7fc8e61620ec - <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args::{closure#0}\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:240:18\r\n  29:     0x7fc8e61620ec - stacker[f871904c967749]::maybe_grow::<rustc_middle[8ef286a0c1cfdec]::ty::Ty, <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args::{closure#0}>\r\n                               at /home/matthias/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.15/src/lib.rs:55:9\r\n  30:     0x7fc8e61620ec - rustc_data_structures[e2bc31891c4386a2]::stack::ensure_sufficient_stack::<rustc_middle[8ef286a0c1cfdec]::ty::Ty, <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args::{closure#0}>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_data_structures/src/stack.rs:17:5\r\n  31:     0x7fc8e61620ec - <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:236:18\r\n  32:     0x7fc8e61ddea2 - <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:190:9\r\n  33:     0x7fc8e618dc99 - <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_block_with_expected::{closure#0}::{closure#0}\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs:1551:50\r\n  34:     0x7fc8e618dc99 - <core[c5d5d662f7508502]::option::Option<&&rustc_hir[6b5be662643facdd]::hir::Expr>>::map::<rustc_middle[8ef286a0c1cfdec]::ty::Ty, <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_block_with_expected::{closure#0}::{closure#0}>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/core/src/option.rs:1089:29\r\n  35:     0x7fc8e618dc99 - <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_block_with_expected::{closure#0}\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs:1551:42\r\n  36:     0x7fc8e618dc99 - <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::with_breakable_ctxt::<<rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_block_with_expected::{closure#0}, ()>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/fn_ctxt/_impl.rs:1468:22\r\n  37:     0x7fc8e618dc99 - <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_block_with_expected\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs:1544:26\r\n  38:     0x7fc8e61df139 - <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_expr_kind\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:335:41\r\n  39:     0x7fc8e61620ec - <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args::{closure#0}\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:240:18\r\n  40:     0x7fc8e61620ec - stacker[f871904c967749]::maybe_grow::<rustc_middle[8ef286a0c1cfdec]::ty::Ty, <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args::{closure#0}>\r\n                               at /home/matthias/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.15/src/lib.rs:55:9\r\n  41:     0x7fc8e61620ec - rustc_data_structures[e2bc31891c4386a2]::stack::ensure_sufficient_stack::<rustc_middle[8ef286a0c1cfdec]::ty::Ty, <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args::{closure#0}>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_data_structures/src/stack.rs:17:5\r\n  42:     0x7fc8e61620ec - <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:236:18\r\n  43:     0x7fc8e61ddea2 - <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:190:9\r\n  44:     0x7fc8e6163f36 - <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_expr_with_hint\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:142:9\r\n  45:     0x7fc8e6163f36 - <rustc_hir_typeck[6b842261c8b16f1c]::fn_ctxt::FnCtxt>::check_return_expr\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/expr.rs:832:30\r\n  46:     0x7fc8e6369297 - rustc_hir_typeck[6b842261c8b16f1c]::check::check_fn\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/check.rs:122:9\r\n  47:     0x7fc8e6292924 - rustc_hir_typeck[6b842261c8b16f1c]::typeck_with_fallback::<rustc_hir_typeck[6b842261c8b16f1c]::typeck::{closure#0}>::{closure#0}\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/lib.rs:215:9\r\n  48:     0x7fc8e6292924 - rustc_hir_typeck[6b842261c8b16f1c]::typeck_with_fallback::<rustc_hir_typeck[6b842261c8b16f1c]::typeck::{closure#0}>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/lib.rs:175:36\r\n  49:     0x7fc8e6292924 - rustc_hir_typeck[6b842261c8b16f1c]::typeck\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_hir_typeck/src/lib.rs:157:5\r\n  50:     0x7fc8e776a9bc - <rustc_query_impl[d1b11ab99dd699c5]::queries::typeck as rustc_query_system[5cd5da38e1781535]::query::config::QueryConfig<rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt>>::compute\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_query_impl/src/plumbing.rs:524:21\r\n  51:     0x7fc8e776a9bc - rustc_query_system[5cd5da38e1781535]::query::plumbing::execute_job_non_incr::<rustc_query_impl[d1b11ab99dd699c5]::queries::typeck, rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt>::{closure#0}\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_query_system/src/query/plumbing.rs:464:72\r\n  52:     0x7fc8e776a9bc - rustc_middle[8ef286a0c1cfdec]::ty::context::tls::enter_context::<rustc_query_system[5cd5da38e1781535]::query::plumbing::execute_job_non_incr<rustc_query_impl[d1b11ab99dd699c5]::queries::typeck, rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt>::{closure#0}, rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>>::{closure#0}\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_middle/src/ty/context/tls.rs:82:9\r\n  53:     0x7fc8e776a9bc - <std[876bbee9698a2b49]::thread::local::LocalKey<core[c5d5d662f7508502]::cell::Cell<*const ()>>>::try_with::<rustc_middle[8ef286a0c1cfdec]::ty::context::tls::enter_context<rustc_query_system[5cd5da38e1781535]::query::plumbing::execute_job_non_incr<rustc_query_impl[d1b11ab99dd699c5]::queries::typeck, rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt>::{closure#0}, rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>>::{closure#0}, rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/thread/local.rs:252:16\r\n  54:     0x7fc8e776a9bc - <std[876bbee9698a2b49]::thread::local::LocalKey<core[c5d5d662f7508502]::cell::Cell<*const ()>>>::with::<rustc_middle[8ef286a0c1cfdec]::ty::context::tls::enter_context<rustc_query_system[5cd5da38e1781535]::query::plumbing::execute_job_non_incr<rustc_query_impl[d1b11ab99dd699c5]::queries::typeck, rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt>::{closure#0}, rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>>::{closure#0}, rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/library/std/src/thread/local.rs:228:9\r\n  55:     0x7fc8e776a9bc - rustc_middle[8ef286a0c1cfdec]::ty::context::tls::enter_context::<rustc_query_system[5cd5da38e1781535]::query::plumbing::execute_job_non_incr<rustc_query_impl[d1b11ab99dd699c5]::queries::typeck, rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt>::{closure#0}, rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_middle/src/ty/context/tls.rs:79:9\r\n  56:     0x7fc8e776a9bc - <rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt as rustc_query_system[5cd5da38e1781535]::query::QueryContext>::start_query::<rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>, rustc_query_system[5cd5da38e1781535]::query::plumbing::execute_job_non_incr<rustc_query_impl[d1b11ab99dd699c5]::queries::typeck, rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt>::{closure#0}>::{closure#0}\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_query_impl/src/plumbing.rs:127:13\r\n  57:     0x7fc8e776a9bc - rustc_middle[8ef286a0c1cfdec]::ty::context::tls::with_related_context::<<rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt as rustc_query_system[5cd5da38e1781535]::query::QueryContext>::start_query<rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>, rustc_query_system[5cd5da38e1781535]::query::plumbing::execute_job_non_incr<rustc_query_impl[d1b11ab99dd699c5]::queries::typeck, rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt>::{closure#0}>::{closure#0}, rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>>::{closure#0}\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_middle/src/ty/context/tls.rs:133:9\r\n  58:     0x7fc8e776a9bc - rustc_middle[8ef286a0c1cfdec]::ty::context::tls::with_context::<rustc_middle[8ef286a0c1cfdec]::ty::context::tls::with_related_context<<rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt as rustc_query_system[5cd5da38e1781535]::query::QueryContext>::start_query<rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>, rustc_query_system[5cd5da38e1781535]::query::plumbing::execute_job_non_incr<rustc_query_impl[d1b11ab99dd699c5]::queries::typeck, rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt>::{closure#0}>::{closure#0}, rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>>::{closure#0}, rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>>::{closure#0}\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_middle/src/ty/context/tls.rs:111:36\r\n  59:     0x7fc8e776a9bc - rustc_middle[8ef286a0c1cfdec]::ty::context::tls::with_context_opt::<rustc_middle[8ef286a0c1cfdec]::ty::context::tls::with_context<rustc_middle[8ef286a0c1cfdec]::ty::context::tls::with_related_context<<rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt as rustc_query_system[5cd5da38e1781535]::query::QueryContext>::start_query<rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>, rustc_query_system[5cd5da38e1781535]::query::plumbing::execute_job_non_incr<rustc_query_impl[d1b11ab99dd699c5]::queries::typeck, rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt>::{closure#0}>::{closure#0}, rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>>::{closure#0}, rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>>::{closure#0}, rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_middle/src/ty/context/tls.rs:100:18\r\n  60:     0x7fc8e776a9bc - rustc_middle[8ef286a0c1cfdec]::ty::context::tls::with_context::<rustc_middle[8ef286a0c1cfdec]::ty::context::tls::with_related_context<<rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt as rustc_query_system[5cd5da38e1781535]::query::QueryContext>::start_query<rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>, rustc_query_system[5cd5da38e1781535]::query::plumbing::execute_job_non_incr<rustc_query_impl[d1b11ab99dd699c5]::queries::typeck, rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt>::{closure#0}>::{closure#0}, rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>>::{closure#0}, rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_middle/src/ty/context/tls.rs:111:5\r\n  61:     0x7fc8e776a9bc - rustc_middle[8ef286a0c1cfdec]::ty::context::tls::with_related_context::<<rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt as rustc_query_system[5cd5da38e1781535]::query::QueryContext>::start_query<rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>, rustc_query_system[5cd5da38e1781535]::query::plumbing::execute_job_non_incr<rustc_query_impl[d1b11ab99dd699c5]::queries::typeck, rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt>::{closure#0}>::{closure#0}, rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_middle/src/ty/context/tls.rs:124:5\r\n  62:     0x7fc8e776a9bc - <rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt as rustc_query_system[5cd5da38e1781535]::query::QueryContext>::start_query::<rustc_middle[8ef286a0c1cfdec]::query::erase::Erased<[u8; 8usize]>, rustc_query_system[5cd5da38e1781535]::query::plumbing::execute_job_non_incr<rustc_query_impl[d1b11ab99dd699c5]::queries::typeck, rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt>::{closure#0}>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_query_impl/src/plumbing.rs:112:9\r\n  63:     0x7fc8e776a9bc - rustc_query_system[5cd5da38e1781535]::query::plumbing::execute_job_non_incr::<rustc_query_impl[d1b11ab99dd699c5]::queries::typeck, rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_query_system/src/query/plumbing.rs:464:18\r\n  64:     0x7fc8e776a9bc - rustc_query_system[5cd5da38e1781535]::query::plumbing::execute_job::<rustc_query_impl[d1b11ab99dd699c5]::queries::typeck, rustc_query_impl[d1b11ab99dd699c5]::plumbing::QueryCtxt>\r\n                               at /home/matthias/vcs/github/rust_debug_assertions/compiler/rustc_query_system/src/query/plumbing.rs:402:17\r\n.....\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110745/timeline", "performed_via_github_app": null, "state_reason": null}