{"url": "https://api.github.com/repos/rust-lang/rust/issues/80062", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80062/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80062/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80062/events", "html_url": "https://github.com/rust-lang/rust/issues/80062", "id": 768108596, "node_id": "MDU6SXNzdWU3NjgxMDg1OTY=", "number": 80062, "title": "ICE: 'index out of bounds: the len is 0 but the index is 0', compiler/rustc_middle/src/ty/mod.rs:893:14", "user": {"login": "chengniansun", "id": 4554271, "node_id": "MDQ6VXNlcjQ1NTQyNzE=", "avatar_url": "https://avatars.githubusercontent.com/u/4554271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chengniansun", "html_url": "https://github.com/chengniansun", "followers_url": "https://api.github.com/users/chengniansun/followers", "following_url": "https://api.github.com/users/chengniansun/following{/other_user}", "gists_url": "https://api.github.com/users/chengniansun/gists{/gist_id}", "starred_url": "https://api.github.com/users/chengniansun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chengniansun/subscriptions", "organizations_url": "https://api.github.com/users/chengniansun/orgs", "repos_url": "https://api.github.com/users/chengniansun/repos", "events_url": "https://api.github.com/users/chengniansun/events{/privacy}", "received_events_url": "https://api.github.com/users/chengniansun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 2392976201, "node_id": "MDU6TGFiZWwyMzkyOTc2MjAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/const-generics-fixed-by-min_const_generics", "name": "const-generics-fixed-by-min_const_generics", "color": "3f5dca", "default": false, "description": "A bug that has been fixed once `min_const_generics` is enabled."}], "state": "closed", "locked": false, "assignee": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2020-12-15T19:49:56Z", "updated_at": "2020-12-31T00:23:13Z", "closed_at": "2020-12-31T00:23:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\nSorry if this is a duplicate. I tried to search but failed to fine a duplicate one. \r\n\r\n### Code\r\n\r\n```Rust\r\nfn sof<usize>() -> usize {}\r\nfn test<T>() {\r\n    let _: [u8; sof::<T>()];\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0-nightly (fa4163942 2020-12-14)\r\nbinary: rustc\r\ncommit-hash: fa416394275d2468d104b8f72ac31b1ddf7ee52e\r\ncommit-date: 2020-12-14\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.50.0-nightly\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nwarning: type parameter `usize` should have an upper camel case name\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:1:8\r\n  |\r\n1 | fn sof<usize>() -> usize {}\r\n  |        ^^^^^ help: convert the identifier to upper camel case (notice the capitalization): `Usize`\r\n  |\r\n  = note: `#[warn(non_camel_case_types)]` on by default\r\n\r\nerror[E0601]: `main` function not found in crate `perses_node_priority_with_dfs_delta_reduced_mutant`\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:1:1\r\n  |\r\n1 | / fn sof<usize>() -> usize {}\r\n2 | | fn test<T>() {\r\n3 | |     let _: [u8; sof::<T>()];\r\n4 | | }\r\n  | |_^ consider adding a `main` function to `perses_node_priority_with_dfs_delta_reduced_mutant.rs`\r\n\r\nerror[E0308]: mismatched types\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:1:20\r\n  |\r\n1 | fn sof<usize>() -> usize {}\r\n  |    --- -----       ^^^^^ expected type parameter `usize`, found `()`\r\n  |    |   |\r\n  |    |   this type parameter\r\n  |    implicitly returns `()` as its body has no tail or `return` expression\r\n  |\r\n  = note: expected type parameter `usize`\r\n                  found unit type `()`\r\n\r\nerror[E0277]: the size for values of type `T` cannot be known at compilation time\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:3:23\r\n  |\r\n1 | fn sof<usize>() -> usize {}\r\n  |        ----- required by this bound in `sof`\r\n2 | fn test<T>() {\r\n  |         - this type parameter needs to be `Sized`\r\n3 |     let _: [u8; sof::<T>()];\r\n  |                       ^ doesn't have a size known at compile-time\r\n  |\r\nhelp: consider relaxing the implicit `Sized` restriction\r\n  |\r\n1 | fn sof<usize: ?Sized>() -> usize {}\r\n  |             ^^^^^^^^\r\n\r\nthread 'rustc' panicked at 'index out of bounds: the len is 0 but the index is 0', compiler/rustc_middle/src/ty/mod.rs:893:14\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (fa4163942 2020-12-14) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `test::{constant#0}`\r\n#1 [eval_to_allocation_raw] const-evaluating + checking `test::{constant#0}`\r\nend of query stack\r\nerror: aborting due to 3 previous errors; 1 warning emitted\r\n\r\nSome errors have detailed explanations: E0277, E0308, E0601.\r\nFor more information about an error, try `rustc --explain E0277`.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nwarning: type parameter `usize` should have an upper camel case name\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:1:8\r\n  |\r\n1 | fn sof<usize>() -> usize {}\r\n  |        ^^^^^ help: convert the identifier to upper camel case (notice the capitalization): `Usize`\r\n  |\r\n  = note: `#[warn(non_camel_case_types)]` on by default\r\n\r\nerror[E0601]: `main` function not found in crate `perses_node_priority_with_dfs_delta_reduced_mutant`\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:1:1\r\n  |\r\n1 | / fn sof<usize>() -> usize {}\r\n2 | | fn test<T>() {\r\n3 | |     let _: [u8; sof::<T>()];\r\n4 | | }\r\n  | |_^ consider adding a `main` function to `perses_node_priority_with_dfs_delta_reduced_mutant.rs`\r\n\r\nerror[E0308]: mismatched types\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:1:20\r\n  |\r\n1 | fn sof<usize>() -> usize {}\r\n  |    --- -----       ^^^^^ expected type parameter `usize`, found `()`\r\n  |    |   |\r\n  |    |   this type parameter\r\n  |    implicitly returns `()` as its body has no tail or `return` expression\r\n  |\r\n  = note: expected type parameter `usize`\r\n                  found unit type `()`\r\n\r\nerror[E0277]: the size for values of type `T` cannot be known at compilation time\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:3:23\r\n  |\r\n1 | fn sof<usize>() -> usize {}\r\n  |        ----- required by this bound in `sof`\r\n2 | fn test<T>() {\r\n  |         - this type parameter needs to be `Sized`\r\n3 |     let _: [u8; sof::<T>()];\r\n  |                       ^ doesn't have a size known at compile-time\r\n  |\r\nhelp: consider relaxing the implicit `Sized` restriction\r\n  |\r\n1 | fn sof<usize: ?Sized>() -> usize {}\r\n  |             ^^^^^^^^\r\n\r\nthread 'rustc' panicked at 'index out of bounds: the len is 0 but the index is 0', compiler/rustc_middle/src/ty/mod.rs:893:14\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/fa416394275d2468d104b8f72ac31b1ddf7ee52e/library/std/src/panicking.rs:493:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/fa416394275d2468d104b8f72ac31b1ddf7ee52e/library/core/src/panicking.rs:92:14\r\n   2: core::panicking::panic_bounds_check\r\n             at /rustc/fa416394275d2468d104b8f72ac31b1ddf7ee52e/library/core/src/panicking.rs:69:5\r\n   3: rustc_middle::ty::Generics::param_at\r\n   4: rustc_middle::ty::error::<impl rustc_middle::ty::context::TyCtxt>::note_and_explain_type_err\r\n   5: rustc_infer::infer::error_reporting::<impl rustc_infer::infer::InferCtxt>::note_type_err\r\n   6: rustc_infer::infer::error_reporting::<impl rustc_infer::infer::InferCtxt>::report_and_explain_type_error\r\n   7: rustc_infer::infer::InferCtxt::report_mismatched_types\r\n   8: rustc_typeck::check::demand::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::demand_coerce_diag\r\n   9: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_coercable_to_type\r\n  10: rustc_infer::infer::InferCtxtBuilder::enter\r\n  11: rustc_typeck::check::typeck\r\n  12: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  13: rustc_data_structures::stack::ensure_sufficient_stack\r\n  14: rustc_query_system::query::plumbing::get_query_impl\r\n  15: rustc_middle::ty::context::TyCtxt::typeck_opt_const_arg\r\n  16: rustc_mir::const_eval::eval_queries::eval_to_allocation_raw_provider\r\n  17: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_allocation_raw>::compute\r\n  18: rustc_middle::ty::query::plumbing::<impl rustc_query_system::query::QueryContext for rustc_middle::ty::context::TyCtxt>::start_query::{{closure}}::{{closure}}::{{closure}}\r\n  19: rustc_query_system::query::plumbing::get_query_impl\r\n  20: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  21: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_const_value_raw>::compute\r\n  22: rustc_middle::ty::query::plumbing::<impl rustc_query_system::query::QueryContext for rustc_middle::ty::context::TyCtxt>::start_query::{{closure}}::{{closure}}::{{closure}}\r\n  23: rustc_query_system::query::plumbing::get_query_impl\r\n  24: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  25: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_const_value_raw>::compute\r\n  26: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  27: rustc_data_structures::stack::ensure_sufficient_stack\r\n  28: rustc_query_system::query::plumbing::get_query_impl\r\n  29: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_global_id\r\n  30: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_resolve\r\n  31: <rustc_trait_selection::traits::project::AssocTypeNormalizer as rustc_middle::ty::fold::TypeFolder>::fold_const\r\n  32: rustc_middle::ty::structural_impls::<impl rustc_middle::ty::fold::TypeFoldable for &rustc_middle::ty::TyS>::super_fold_with\r\n  33: <rustc_trait_selection::traits::project::AssocTypeNormalizer as rustc_middle::ty::fold::TypeFolder>::fold_ty\r\n  34: rustc_data_structures::stack::ensure_sufficient_stack\r\n  35: rustc_trait_selection::traits::project::normalize\r\n  36: <rustc_infer::infer::InferCtxt as rustc_trait_selection::infer::InferCtxtExt>::partially_normalize_associated_types_in\r\n  37: rustc_typeck::check::inherited::Inherited::normalize_associated_types_in\r\n  38: <rustc_typeck::check::fn_ctxt::FnCtxt as rustc_typeck::astconv::AstConv>::normalize_ty\r\n  39: <dyn rustc_typeck::astconv::AstConv>::ast_ty_to_ty_inner\r\n  40: <rustc_typeck::check::gather_locals::GatherLocalsVisitor as rustc_hir::intravisit::Visitor>::visit_local\r\n  41: rustc_hir::intravisit::walk_expr\r\n  42: rustc_typeck::check::check::check_fn\r\n  43: rustc_infer::infer::InferCtxtBuilder::enter\r\n  44: rustc_typeck::check::typeck\r\n  45: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck>::compute\r\n  46: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  47: rustc_data_structures::stack::ensure_sufficient_stack\r\n  48: rustc_query_system::query::plumbing::get_query_impl\r\n  49: rustc_query_system::query::plumbing::ensure_query_impl\r\n  50: rustc_typeck::check::typeck_item_bodies\r\n  51: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck_item_bodies>::compute\r\n  52: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  53: rustc_data_structures::stack::ensure_sufficient_stack\r\n  54: rustc_query_system::query::plumbing::get_query_impl\r\n  55: rustc_typeck::check_crate\r\n  56: rustc_interface::passes::analysis\r\n  57: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  58: rustc_query_system::dep_graph::graph::DepGraph<K>::with_eval_always_task\r\n  59: rustc_data_structures::stack::ensure_sufficient_stack\r\n  60: rustc_query_system::query::plumbing::get_query_impl\r\n  61: rustc_interface::passes::QueryContext::enter\r\n  62: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  63: rustc_span::with_source_map\r\n  64: rustc_interface::interface::create_compiler_and_run\r\n  65: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (fa4163942 2020-12-14) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `test::{constant#0}`\r\n#1 [eval_to_allocation_raw] const-evaluating + checking `test::{constant#0}`\r\n#2 [eval_to_const_value_raw] simplifying constant for the type system `test::{constant#0}`\r\n#3 [eval_to_const_value_raw] simplifying constant for the type system `test::{constant#0}`\r\n#4 [typeck] type-checking `test`\r\n#5 [typeck_item_bodies] type-checking all item bodies\r\n#6 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to 3 previous errors; 1 warning emitted\r\n\r\nSome errors have detailed explanations: E0277, E0308, E0601.\r\nFor more information about an error, try `rustc --explain E0277`.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80062/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80062/timeline", "performed_via_github_app": null, "state_reason": "completed"}