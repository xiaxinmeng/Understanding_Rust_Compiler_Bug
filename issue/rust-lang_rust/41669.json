{"url": "https://api.github.com/repos/rust-lang/rust/issues/41669", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41669/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41669/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41669/events", "html_url": "https://github.com/rust-lang/rust/issues/41669", "id": 225402998, "node_id": "MDU6SXNzdWUyMjU0MDI5OTg=", "number": 41669, "title": "compiler panic in 'filesystem/ui/bin/browser' in thml5ever v0.12.1", "user": {"login": "andrewufrank", "id": 928208, "node_id": "MDQ6VXNlcjkyODIwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/928208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewufrank", "html_url": "https://github.com/andrewufrank", "followers_url": "https://api.github.com/users/andrewufrank/followers", "following_url": "https://api.github.com/users/andrewufrank/following{/other_user}", "gists_url": "https://api.github.com/users/andrewufrank/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewufrank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewufrank/subscriptions", "organizations_url": "https://api.github.com/users/andrewufrank/orgs", "repos_url": "https://api.github.com/users/andrewufrank/repos", "events_url": "https://api.github.com/users/andrewufrank/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewufrank/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-01T08:16:05Z", "updated_at": "2017-05-01T17:55:35Z", "closed_at": "2017-05-01T17:55:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "it is not very clear from the output, what should be reported and what details about my environment you would be interested in. could you automatically produce the output (or a routine to produce the information) such that it could be `cut and paste` in the message. This would likely simplify your triage of the messages:\r\n\r\nhere the output - \r\n```\r\n$ make all\r\n#filesystem/bin/dmesg filesystem/bin/info  filesystem/bin/watch\r\nmkdir -p filesystem/ui/bin\r\nRUSTC=\"/home/frank/redox/rustc.sh\" RUSTDOC=\"./rustdoc.sh\" CARGO_INCREMENTAL=1 cargo rustc --manifest-path programs/orbutils/Cargo.toml --bin browser --target x86_64-unknown-redox --release -- -C codegen-units=`nproc` -o filesystem/ui/bin/browser\r\nwarning: package replacement is not used: https://github.com/rust-lang/crates.io-index#mio:0.6.2\r\nwarning: package replacement is not used: https://github.com/rust-lang/crates.io-index#redox_event:0.1.0\r\nwarning: package replacement is not used: https://github.com/rust-lang/crates.io-index#ralloc:1.0.0\r\nwarning: package replacement is not used: https://github.com/rust-lang/crates.io-index#same-file:0.1.2\r\nwarning: package replacement is not used: https://github.com/rust-lang/crates.io-index#extra:0.1.0\r\nwarning: package replacement is not used: https://github.com/rust-lang/crates.io-index#pager:0.1.0\r\nwarning: package replacement is not used: https://github.com/rust-lang/crates.io-index#tar:0.4.11\r\n   Compiling image v0.12.4\r\n   Compiling tendril v0.2.3\r\n   Compiling html5ever v0.12.1\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: run with `RUST_BACKTRACE=1` for a backtrace\r\n\r\nthread 'rustc' panicked at 'assertion failed: !unsize', /checkout/src/librustc_typeck/check/mod.rs:2212\r\nstack backtrace:\r\n   0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace\r\n             at /checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:60\r\n             at /checkout/src/libstd/panicking.rs:355\r\n   3: std::panicking::default_hook\r\n             at /checkout/src/libstd/panicking.rs:365\r\n   4: std::panicking::rust_panic_with_hook\r\n             at /checkout/src/libstd/panicking.rs:549\r\n   5: std::panicking::begin_panic\r\n   6: rustc_typeck::check::FnCtxt::try_index_step\r\n   7: rustc_typeck::check::method::confirm::ConfirmContext::confirm\r\n   8: rustc_typeck::check::method::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::lookup_method\r\n   9: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  10: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  11: rustc_typeck::check::FnCtxt::check_stmt\r\n  12: rustc_typeck::check::FnCtxt::check_block_with_expected::{{closure}}\r\n  13: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  14: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  15: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  16: rustc_typeck::check::FnCtxt::check_return_expr\r\n  17: rustc_typeck::check::check_fn\r\n  18: rustc_typeck::check::typeck_tables_of\r\n  19: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::try_get\r\n  20: rustc::ty::maps::TyCtxtAt::typeck_tables_of\r\n  21: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_tables_of\r\n  22: rustc_typeck::check::typeck_item_bodies\r\n  23: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_item_bodies<'tcx>>::try_get\r\n  24: rustc::ty::maps::TyCtxtAt::typeck_item_bodies\r\n  25: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_item_bodies\r\n  26: rustc_typeck::check_crate\r\n  27: rustc_driver::driver::phase_3_run_analysis_passes::{{closure}}\r\n  28: rustc_driver::driver::phase_3_run_analysis_passes\r\n  29: rustc_driver::driver::compile_input\r\n  30: rustc_driver::run_compiler\r\n  31: std::panicking::try::do_call\r\n  32: __rust_maybe_catch_panic\r\n             at /checkout/src/libpanic_unwind/lib.rs:98\r\n  33: <F as alloc::boxed::FnBox<A>>::call_box\r\n  34: std::sys::imp::thread::Thread::new::thread_start\r\n             at /checkout/src/liballoc/boxed.rs:658\r\n             at /checkout/src/libstd/sys_common/thread.rs:21\r\n             at /checkout/src/libstd/sys/unix/thread.rs:84\r\n  35: start_thread\r\n  36: __clone\r\n\r\nerror: Could not compile `image`.\r\nBuild failed, waiting for other jobs to finish...\r\nerror: build failed\r\nmk/userspace/orbutils.mk:13: recipe for target 'filesystem/ui/bin/browser' failed\r\nmake: *** [filesystem/ui/bin/browser] Error 101\r\n\r\n```\r\nadditional comment:\r\nit would be better advertisement if you could have a repository where the code is clean enough that it installs and new users, like me, could get a working copy quickly to get an impression and to decide if they want to continue. sort of regular releases which are snapshots (most likely) to compile. \r\nit is an exciting project, but you need to build your base of followers. for this an initial positive experience is a great plus.", "closed_by": {"login": "andrewufrank", "id": 928208, "node_id": "MDQ6VXNlcjkyODIwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/928208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewufrank", "html_url": "https://github.com/andrewufrank", "followers_url": "https://api.github.com/users/andrewufrank/followers", "following_url": "https://api.github.com/users/andrewufrank/following{/other_user}", "gists_url": "https://api.github.com/users/andrewufrank/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewufrank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewufrank/subscriptions", "organizations_url": "https://api.github.com/users/andrewufrank/orgs", "repos_url": "https://api.github.com/users/andrewufrank/repos", "events_url": "https://api.github.com/users/andrewufrank/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewufrank/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41669/timeline", "performed_via_github_app": null, "state_reason": "completed"}