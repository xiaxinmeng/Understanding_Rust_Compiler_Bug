{"url": "https://api.github.com/repos/rust-lang/rust/issues/11820", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/11820/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/11820/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/11820/events", "html_url": "https://github.com/rust-lang/rust/issues/11820", "id": 26313789, "node_id": "MDU6SXNzdWUyNjMxMzc4OQ==", "number": 11820, "title": "Trait method resolution is overly eager for nested pointers & types", "user": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-01-26T13:29:10Z", "updated_at": "2015-03-17T13:29:53Z", "closed_at": "2015-03-17T13:29:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`&T` has an impl of `Clone` for all `T` (i.e. `(&T).clone()` should always work), however having `&TypeThatConditionallyImplementsClone<T>` is not always clonable, because (it appears that) the compiler will lock itself into using the `Clone` impl for the inner type, but find that `T` doesn't satisfy the requirements and so error.\n\n``` rust\n#[allow(dead_code)];\n\nstruct NoClone;\n\n#[cfg(error)]\nfn err() {\n    let x = Some(NoClone);\n    let y = &x;\n    let _: &Option<NoClone> = y.clone();\n}\n\nfn ok() {\n    let x = NoClone;\n    let y = &x;\n    let _: &NoClone = y.clone();\n}\n\nfn main() { }\n```\n\nWithout `--cfg error` it compiles fine, but with it:\n\n```\npointer-option-method.rs:9:31: 9:41 error: failed to find an implementation of trait std::clone::Clone for NoClone\npointer-option-method.rs:9     let _: &Option<NoClone> = y.clone();\n                                                         ^~~~~~~~~~\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/11820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/11820/timeline", "performed_via_github_app": null, "state_reason": "completed"}