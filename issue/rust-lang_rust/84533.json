{"url": "https://api.github.com/repos/rust-lang/rust/issues/84533", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84533/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84533/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84533/events", "html_url": "https://github.com/rust-lang/rust/issues/84533", "id": 866859777, "node_id": "MDU6SXNzdWU4NjY4NTk3Nzc=", "number": 84533, "title": "Functions, closures, and HRTB-trait-objects can implement traits such that validity of associated types is never checked.", "user": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 125141240, "node_id": "MDU6TGFiZWwxMjUxNDEyNDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-dst", "name": "A-dst", "color": "f7e101", "default": false, "description": "Area: Dynamically Sized Types"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 3921861239, "node_id": "LA_kwDOAAsO6M7pwtp3", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-bug-has-test", "name": "S-bug-has-test", "color": "862eff", "default": false, "description": "A `known-bug` test has been added for this bug."}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2021-04-24T23:37:01Z", "updated_at": "2023-04-25T00:51:52Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "_Make sure to also read through the next few comments of mine, where I present some other, significantly different examples of related problems (that\u2019s where HRTBs become relevant, and closures, fn-pointers and trait objects play a role). I also explain the T-lang tag there with a question on changing the meaning of HRTBs that include associated types. Possibly it\u2019s even a sensible thing to split this issue up into two issues._\r\n\r\nSo if I write a function such as\r\n```rust\r\nfn foo<'b, 'a>() -> PhantomData<&'b &'a ()> {\r\n    PhantomData\r\n}\r\n```\r\nthen `foo`\u2019s return type is only valid if `'a: 'b`. When we call the function this is enforced a the call site, e.g.\r\n```rust\r\nfn caller<'b, 'a>() {\r\n    foo::<'b, 'a>();\r\n}\r\n```\r\ndoesn\u2019t work, with\r\n```rust\r\nerror[E0491]: in type `&'b &'a ()`, reference has a longer lifetime than the data it references\r\n --> src/lib.rs:8:5\r\n  |\r\n8 |     foo::<'b, 'a>();\r\n  |     ^^^^^^^^^^^^^^^\r\n  |\r\nnote: the pointer is valid for the lifetime `'b` as defined on the function body at 7:11\r\n --> src/lib.rs:7:11\r\n  |\r\n7 | fn caller<'b, 'a>() {\r\n  |           ^^\r\nnote: but the referenced data is only valid for the lifetime `'a` as defined on the function body at 7:15\r\n --> src/lib.rs:7:15\r\n  |\r\n7 | fn caller<'b, 'a>() {\r\n  |               ^^\r\n\r\nerror: aborting due to previous error\r\n```\r\n([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=0735b1090d7b275ab12a940867788c5f))\r\n\r\nHowever, if we _just_ instantiate the lifetime parameters, there\u2019s apparently no check being performed at all, i.e.\r\n```rust\r\nfn caller<'b, 'a>() {\r\n    foo::<'b, 'a>;\r\n}\r\n```\r\ncompiles just fine. ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=efe80b69733df331716f18eea6f4130c)).\r\n\r\nThis seems questionable, the type of `foo::<'b, 'a>` implements `FnOnce` with `Output = PhantomData<&'b &'a ()>`, and it is in fact possible to use this output type to circumvent the borrow checker:\r\n```rust\r\nuse std::marker::PhantomData;\r\n\r\nfn foo<'b, 'a>() -> PhantomData<&'b &'a ()> {\r\n    PhantomData\r\n}\r\n\r\nfn extend_lifetime<'a, 'b, T: ?Sized>(x: &'a T) -> &'b T {\r\n    let f = foo::<'b, 'a>;\r\n    f.baz(x)\r\n}\r\n\r\ntrait Foo<'a, 'b, T: ?Sized> {\r\n    fn baz(self, s: &'a T) -> &'b T;\r\n}\r\nimpl<'a, 'b, R, F, T: ?Sized> Foo<'a, 'b, T> for F\r\nwhere\r\n    F: Fn() -> R,\r\n    R: ProofForConversion<'a, 'b, T>,\r\n{\r\n    fn baz(self, s: &'a T) -> &'b T {\r\n        self().convert(s)\r\n    }\r\n}\r\n\r\ntrait ProofForConversion<'a, 'b, T: ?Sized> {\r\n    fn convert(self, s: &'a T) -> &'b T;\r\n}\r\nimpl<'a, 'b, T: ?Sized> ProofForConversion<'a, 'b, T> for PhantomData<&'b &'a ()> {\r\n    fn convert(self, s: &'a T) -> &'b T {\r\n        s\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let d;\r\n    {\r\n        let x = \"Hello World\".to_string();\r\n        d = extend_lifetime(&x);\r\n    }\r\n    println!(\"{}\", d);\r\n}\r\n```\r\n```\r\n\ufffdZV&\u001eV\u0004\r\n```\r\n([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=5167c528f2e0dfa4a4fbe5af4e20c081))\r\n\r\n@rustbot modify labels: A-lifetimes, A-typesystem, T-compiler\r\nand someone please add \u201cI-unsound \ud83d\udca5\u201d.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84533/timeline", "performed_via_github_app": null, "state_reason": null}