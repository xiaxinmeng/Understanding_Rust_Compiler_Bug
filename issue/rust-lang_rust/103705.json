{"url": "https://api.github.com/repos/rust-lang/rust/issues/103705", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103705/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103705/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103705/events", "html_url": "https://github.com/rust-lang/rust/issues/103705", "id": 1427943238, "node_id": "I_kwDOAAsO6M5VHK9G", "number": 103705, "title": "Compiler suggests to add [closure@\u2026] to source code when it can be inferred instead.", "user": {"login": "vi", "id": 173219, "node_id": "MDQ6VXNlcjE3MzIxOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/173219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vi", "html_url": "https://github.com/vi", "followers_url": "https://api.github.com/users/vi/followers", "following_url": "https://api.github.com/users/vi/following{/other_user}", "gists_url": "https://api.github.com/users/vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vi/subscriptions", "organizations_url": "https://api.github.com/users/vi/orgs", "repos_url": "https://api.github.com/users/vi/repos", "events_url": "https://api.github.com/users/vi/events{/privacy}", "received_events_url": "https://api.github.com/users/vi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}, {"id": 3921861239, "node_id": "LA_kwDOAAsO6M7pwtp3", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-bug-has-test", "name": "S-bug-has-test", "color": "862eff", "default": false, "description": "A `known-bug` test has been added for this bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-10-28T23:10:14Z", "updated_at": "2022-11-14T13:57:29Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Unminimized example:\r\n\r\n```\r\nerror[E0283]: type annotations needed\r\n   --> crates/websocat-ioless/src/lib.rs:346:27\r\n    |\r\n346 |                 let w = w.sink_map_err(|e : std::io::Error |e.into());\r\n    |                           ^^^^^^^^^^^^\r\n    |\r\n    = note: multiple `impl`s satisfying `BytesCodec: Encoder<_>` found in the `tokio_util` crate:\r\n            - impl Encoder<BytesMut> for BytesCodec;\r\n            - impl Encoder<websocat_api::bytes::Bytes> for BytesCodec;\r\n    = note: required for `FramedWrite<Pin<Box<dyn tokio::io::AsyncWrite + std::marker::Send>>, BytesCodec>` to implement `websocat_api::futures::Sink<_>`\r\nhelp: try using a fully qualified path to specify the expected types\r\n    |\r\n346 |                 let w = <FramedWrite<Pin<Box<dyn tokio::io::AsyncWrite + std::marker::Send>>, BytesCodec> as SinkExt<Item>>::sink_map_err::<websocat_api::anyhow::Error, [closure@crates/websocat-ioless/src/lib.rs:346:40: 346:61]>(w, |e : std::io::Error |e.into());\r\n    |                         +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ ~\r\n```\r\n\r\n(in https://github.com/vi/websocat/commit/9ef27b9a06fa4e44b0a572136f14717cc4c5e997, caused by upgrade from tokio-util `0.6` -> `0.7`)\r\n\r\n~~And I'm not sure how do I explicitly choose the impl I want when it is buried deep in third-party generics.~~\r\n\r\n~~Aren't coherence rules designed to prevent this by the way?~~\r\n\r\nThe diagnostic is useful, but contains a lot of types that can be inferred instead, including the closure type. `<_ as SinkExt<bytes::Bytes>>::sink_map_err` makes it compile. It would be better if code suggestion preserved as much reliance on the type inference as possible.\r\n\r\n`rustc 1.66.0-nightly (0da281b60 2022-10-27)`.", "closed_by": {"login": "vi", "id": 173219, "node_id": "MDQ6VXNlcjE3MzIxOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/173219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vi", "html_url": "https://github.com/vi", "followers_url": "https://api.github.com/users/vi/followers", "following_url": "https://api.github.com/users/vi/following{/other_user}", "gists_url": "https://api.github.com/users/vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vi/subscriptions", "organizations_url": "https://api.github.com/users/vi/orgs", "repos_url": "https://api.github.com/users/vi/repos", "events_url": "https://api.github.com/users/vi/events{/privacy}", "received_events_url": "https://api.github.com/users/vi/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103705/timeline", "performed_via_github_app": null, "state_reason": "reopened"}