{"url": "https://api.github.com/repos/rust-lang/rust/issues/68315", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68315/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68315/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68315/events", "html_url": "https://github.com/rust-lang/rust/issues/68315", "id": 551515200, "node_id": "MDU6SXNzdWU1NTE1MTUyMDA=", "number": 68315, "title": "Adding io::{Read, Write} traits in libcore?", "user": {"login": "gendx", "id": 4346404, "node_id": "MDQ6VXNlcjQzNDY0MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4346404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gendx", "html_url": "https://github.com/gendx", "followers_url": "https://api.github.com/users/gendx/followers", "following_url": "https://api.github.com/users/gendx/following{/other_user}", "gists_url": "https://api.github.com/users/gendx/gists{/gist_id}", "starred_url": "https://api.github.com/users/gendx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gendx/subscriptions", "organizations_url": "https://api.github.com/users/gendx/orgs", "repos_url": "https://api.github.com/users/gendx/repos", "events_url": "https://api.github.com/users/gendx/events{/privacy}", "received_events_url": "https://api.github.com/users/gendx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-17T16:34:57Z", "updated_at": "2020-01-17T16:44:16Z", "closed_at": "2020-01-17T16:44:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, libcore contains `core::fmt::Write` but (as far as I understand) nothing of the `std::io::` namespace.\r\n\r\nHowever, `core::fmt::Write` is more constrained than `std::io::Write`, in that it only allows to write UTF-8 strings, as opposed to slices of bytes in general. It seems to me that `std::io::Write` as a trait doesn't require any specific OS support (contrary to `File`, `Stdout`, etc.), and as such would be useful in libcore and would integrate well there.\r\n\r\nFor an example where it would be useful in a `no_std` context, see https://github.com/tock/tock/issues/1449. In this case, one could essentially re-write the `io::Write` trait, but this seems quite redundant (and wouldn't inter-operate with crates that require a genuine `io::Write` in their API).\r\n\r\nIn general, it seems to me that `std::io::{Read, Write}`, as well as a other utilities such as `Cursor` or `BufReader` would have their place in libcore, to be able to use them in `no_std` contexts. Or is there any technical difficultly that I missed?", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68315/timeline", "performed_via_github_app": null, "state_reason": "completed"}