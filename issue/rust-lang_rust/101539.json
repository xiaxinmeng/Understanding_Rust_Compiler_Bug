{"url": "https://api.github.com/repos/rust-lang/rust/issues/101539", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/101539/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/101539/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/101539/events", "html_url": "https://github.com/rust-lang/rust/issues/101539", "id": 1364867798, "node_id": "I_kwDOAAsO6M5RWjrW", "number": 101539, "title": "incorrect diagnostic on irrefutable while-let with break", "user": {"login": "pabigot", "id": 964298, "node_id": "MDQ6VXNlcjk2NDI5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/964298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pabigot", "html_url": "https://github.com/pabigot", "followers_url": "https://api.github.com/users/pabigot/followers", "following_url": "https://api.github.com/users/pabigot/following{/other_user}", "gists_url": "https://api.github.com/users/pabigot/gists{/gist_id}", "starred_url": "https://api.github.com/users/pabigot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pabigot/subscriptions", "organizations_url": "https://api.github.com/users/pabigot/orgs", "repos_url": "https://api.github.com/users/pabigot/repos", "events_url": "https://api.github.com/users/pabigot/events{/privacy}", "received_events_url": "https://api.github.com/users/pabigot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-09-07T15:46:20Z", "updated_at": "2022-09-07T16:04:36Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\nReviewing https://github.com/rust-lang/rust/issues/87335#issuecomment-1238970455 after finding a need for a `while-let` loop that provides access to an else pattern I crafted [this program](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=568083e3e5861a1f02b7d8434a27ccba):\r\n\r\n```rust\r\nfn main() {\r\n    println!(\"in\");\r\n    let mut x: Result<(), &'static str> = Ok(());\r\n    'wl: while let _ = match x {\r\n        Ok(v) => {\r\n            println!(\"match ok {:?}\", v);\r\n            x = Err(\"text\");\r\n        },\r\n        Err(_) => break 'wl,\r\n    } {\r\n        println!(\"body\");\r\n    }\r\n    println!(\"out\");\r\n}\r\n```\r\n\r\nThe rustc diagnostic output is:\r\n\r\n```\r\nwarning: irrefutable `while let` pattern\r\n  --> src/main.rs:4:16\r\n   |\r\n4  |       'wl: while let _ = match x {\r\n   |  ________________^\r\n5  | |         Ok(v) => {\r\n6  | |             println!(\"match ok {:?}\", v);\r\n7  | |             x = Err(\"text\");\r\n8  | |         },\r\n9  | |         Err(_) => break 'wl,\r\n10 | |     } {\r\n   | |_____^\r\n   |\r\n   = note: `#[warn(irrefutable_let_patterns)]` on by default\r\n   = note: this pattern will always match, so the loop will never exit\r\n   = help: consider instead using a `loop { ... }` with a `let` inside it\r\n```\r\n\r\nwhile the application output is:\r\n```\r\nin\r\nmatch ok ()\r\nbody\r\nout\r\n```\r\n\r\nIdeally the output should have no diagnostic, because the loop clearly exits.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/101539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/101539/timeline", "performed_via_github_app": null, "state_reason": null}