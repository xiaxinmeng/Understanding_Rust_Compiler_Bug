{"url": "https://api.github.com/repos/rust-lang/rust/issues/109059", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/109059/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/109059/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/109059/events", "html_url": "https://github.com/rust-lang/rust/issues/109059", "id": 1620530989, "node_id": "I_kwDOAAsO6M5gl1ct", "number": 109059, "title": "internal compiler error: opaque type with non-universal region substs", "user": {"login": "Mari-W", "id": 32612440, "node_id": "MDQ6VXNlcjMyNjEyNDQw", "avatar_url": "https://avatars.githubusercontent.com/u/32612440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mari-W", "html_url": "https://github.com/Mari-W", "followers_url": "https://api.github.com/users/Mari-W/followers", "following_url": "https://api.github.com/users/Mari-W/following{/other_user}", "gists_url": "https://api.github.com/users/Mari-W/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mari-W/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mari-W/subscriptions", "organizations_url": "https://api.github.com/users/Mari-W/orgs", "repos_url": "https://api.github.com/users/Mari-W/repos", "events_url": "https://api.github.com/users/Mari-W/events{/privacy}", "received_events_url": "https://api.github.com/users/Mari-W/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 3921860029, "node_id": "LA_kwDOAAsO6M7pwtW9", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-has-mcve", "name": "S-has-mcve", "color": "862eff", "default": false, "description": "A Minimal Complete and Verifiable Example has been found for this issue"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-03-12T22:13:54Z", "updated_at": "2023-06-04T08:45:22Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Code\r\nCrashes for static references in general.\r\n```Rust\r\n#![allow(incomplete_features)]\r\n#![feature(adt_const_params)]\r\n#![allow(dead_code)]\r\n\r\n#[derive(PartialEq, Eq)]\r\nstruct S;\r\n\r\ntrait T<const C: &'static S> {}\r\n\r\nfn foo<const C: &'static S>(t: impl T<C>) -> impl T<C> {\r\n    t\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.70.0-nightly (8a73f50d8 2023-03-11)\r\nbinary: rustc\r\ncommit-hash: 8a73f50d875840b8077b8ec080fa41881d7ce40d\r\ncommit-date: 2023-03-11\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.70.0-nightly\r\nLLVM version: 15.0.7\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\r\n\r\nerror: internal compiler error: opaque type with non-universal region substs\r\n  --> unnamed-bin/src/main.rs:11:5\r\n   |\r\n11 |     t\r\n   |     ^\r\n   |\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n0: <rustc_errors::HandlerInner>::emit_diagnostic\r\n1: <rustc_errors::Handler>::delay_span_bug::<rustc_span::span_encoding::Span, &str>\r\n2: <rustc_borrowck::region_infer::RegionInferenceContext>::infer_opaque_types::{closure#0}::{closure#2}\r\n3: <rustc_middle::ty::Ty as rustc_type_ir::fold::TypeFoldable<rustc_middle::ty::context::TyCtxt>>::try_fold_with::<rustc_middle::ty::fold::RegionFolder>\r\n4: <rustc_middle::ty::fold::RegionFolder as rustc_type_ir::fold::FallibleTypeFolder<rustc_middle::ty::context::TyCtxt>>::try_fold_const\r\n5: <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_type_ir::fold::TypeFoldable<rustc_middle::ty::context::TyCtxt>>::fold_with::<rustc_middle::ty::fold::RegionFolder>\r\n6: <rustc_borrowck::region_infer::RegionInferenceContext>::infer_opaque_types\r\n7: rustc_borrowck::nll::compute_regions\r\n8: rustc_borrowck::do_mir_borrowck\r\n9: <rustc_borrowck::provide::{closure#0} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId)>>::call_once\r\n10: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::mir_borrowck, rustc_query_impl::plumbing::QueryCtxt>\r\n11: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_borrowck\r\n12: rustc_hir_analysis::collect::type_of::type_of\r\n13: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::type_of, rustc_query_impl::plumbing::QueryCtxt>\r\n14: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::type_of\r\n15: rustc_hir_analysis::check::check::check_mod_item_types\r\n16: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::check_mod_item_types, rustc_query_impl::plumbing::QueryCtxt>\r\n17: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::check_mod_item_types\r\n18: <rustc_middle::hir::map::Map>::for_each_module::<rustc_hir_analysis::check_crate::{closure#6}::{closure#0}>\r\n19: rustc_hir_analysis::check_crate\r\n20: rustc_interface::passes::analysis\r\n21: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n22: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n23: <rustc_middle::ty::context::GlobalCtxt>::enter::<rustc_driver_impl::run_compiler::{closure#1}::{closure#2}::{closure#4}, core::result::Result<(), rustc_span::ErrorGuaranteed>>\r\n24: rustc_span::with_source_map::<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\r\n25: std::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>\r\n26: <<std::thread::Builder>::spawn_unchecked_<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>::{closure#1} as core::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n27: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n           at /rustc/8a73f50d875840b8077b8ec080fa41881d7ce40d/library/alloc/src/boxed.rs:1988:9\r\n28: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n           at /rustc/8a73f50d875840b8077b8ec080fa41881d7ce40d/library/alloc/src/boxed.rs:1988:9\r\n29: std::sys::unix::thread::Thread::new::thread_start\r\n           at /rustc/8a73f50d875840b8077b8ec080fa41881d7ce40d/library/std/src/sys/unix/thread.rs:108:17\r\n30: start_thread\r\n           at ./nptl/./nptl/pthread_create.c:442:8\r\n31: clone3\r\n           at ./misc/../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\r\n \r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.70.0-nightly (8a73f50d8 2023-03-11) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C linker=x86_64-linux-gnu-gcc -C incremental=[REDACTED]\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/109059/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/109059/timeline", "performed_via_github_app": null, "state_reason": null}