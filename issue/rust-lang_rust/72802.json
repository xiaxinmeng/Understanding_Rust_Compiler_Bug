{"url": "https://api.github.com/repos/rust-lang/rust/issues/72802", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72802/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72802/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72802/events", "html_url": "https://github.com/rust-lang/rust/issues/72802", "id": 627867529, "node_id": "MDU6SXNzdWU2Mjc4Njc1Mjk=", "number": 72802, "title": "stdio handles (stdin, stdout, stderr) should be `Seek` at least on Unix", "user": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-31T01:34:29Z", "updated_at": "2023-03-06T12:46:46Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, `std::io::Stdin` et al do not implement `Seek`.\r\n\r\nIt is true that a Unix program is not guaranteed that its stdin/stdout/stderr will be seekable. Often they won't be.  But, they may be.  If stdin is redirected from a file, for example, `lseek` (the system call) will work fine.\r\n\r\nThe `Seek` trait does not promise that `seek` actually works.  `seek` returns `io::Result` (quite properly).  Indeed a `std::io::File` object can easily refer to a non-seekable object, depending what path was passed.\r\n\r\nConversely, not implementing `Seek` makes it impossible to perform this operation in safe Rust.  There are perhaps some workarounds like asking to open `/dev/stdin`, but they are non-portable and often quite horrible.  Using `unsafe { libc::lseek(...) }` is quite straightforward (apart, perhaps, from a question about whether `lseek64` should be used instead) but we shouldn't expect our users to do that when we could have provided a safe way.\r\n\r\nThere are file data integrity and synchronisation issues with `Seek`.  But these are not significantly worse for stdin/out/err than for `std::fs::File`.  They are not a memory safety issue and we have already  chosen to address this in the documentation rather than through the type system.\r\n\r\nI come from a Unix background.  I don't know what the situation is on Windows.  But, the fact that in Standard C, it is legal to call `fseek` on `stdin` (for example) suggests that the correct answer for Rust is to permit the user to try to call `seek` on all platforms.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72802/reactions", "total_count": 9, "+1": 9, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72802/timeline", "performed_via_github_app": null, "state_reason": null}