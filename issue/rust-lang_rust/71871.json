{"url": "https://api.github.com/repos/rust-lang/rust/issues/71871", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71871/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71871/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71871/events", "html_url": "https://github.com/rust-lang/rust/issues/71871", "id": 611761833, "node_id": "MDU6SXNzdWU2MTE3NjE4MzM=", "number": 71871, "title": "WebAssembly ABI mismatch between clang and rust", "user": {"login": "tomaka", "id": 1412254, "node_id": "MDQ6VXNlcjE0MTIyNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1412254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomaka", "html_url": "https://github.com/tomaka", "followers_url": "https://api.github.com/users/tomaka/followers", "following_url": "https://api.github.com/users/tomaka/following{/other_user}", "gists_url": "https://api.github.com/users/tomaka/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomaka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomaka/subscriptions", "organizations_url": "https://api.github.com/users/tomaka/orgs", "repos_url": "https://api.github.com/users/tomaka/repos", "events_url": "https://api.github.com/users/tomaka/events{/privacy}", "received_events_url": "https://api.github.com/users/tomaka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 474645165, "node_id": "MDU6TGFiZWw0NzQ2NDUxNjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-wasm", "name": "O-wasm", "color": "6e6ec0", "default": false, "description": "Target: WASM (WebAssembly), http://webassembly.org/"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 4288196623, "node_id": "LA_kwDOAAsO6M7_mLAP", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-abi", "name": "A-abi", "color": "f7e101", "default": false, "description": "Area: Concerning the \"application binary interface\" between functions."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-04T10:19:02Z", "updated_at": "2022-08-28T08:52:09Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I compile this C code to `wasm32-wasi`:\r\n\r\n```c\r\ntypedef struct Vector {\r\n    int a;\r\n    int b;\r\n} Vector;\r\n\r\nextern int extract_a(Vector v) {\r\n    return v.a;\r\n}\r\n```\r\n\r\nAnd this Rust code to `wasm32-wasi`:\r\n\r\n```rust\r\n#[repr(C)]\r\nstruct Vector {\r\n    a: i32,\r\n    b: i32,\r\n}\r\n\r\nextern \"C\" {\r\n    fn extract_a(v: Vector) -> i32;\r\n}\r\n\r\nfn main() {\r\n    unsafe {\r\n        extract_a(Vector { a: 5, b: 4 });\r\n    }\r\n}\r\n```\r\n\r\nAnd try link them together, I'm getting linking errors:\r\n\r\n```\r\n  = note: lld: error: function signature mismatch: extract_a\r\n          >>> defined as (i32, i32) -> i32 in /home/pierre/Projets/wasm-abi-test/target/wasm32-wasi/debug/deps/wasm_abi_test.67xpw7l331r9o5x.rcgu.o\r\n          >>> defined as (i32) -> i32 in /home/pierre/Projets/wasm-abi-test/target/wasm32-wasi/debug/build/wasm-abi-test-9c49ce7f6c5ca031/out/libfoo.a(test.o)\r\n```\r\n\r\nIt seems that, according to clang, passing a struct by value should inline the fields, while for Rust it should be passed by pointer.\r\n\r\nI uploaded an example project here: https://github.com/tomaka/wasm-abi-test\r\nIt can be built with something like:\r\n> AR_wasm32_wasi=/path/to/wasi-sdk-10.0/bin/ar CC_wasm32_wasi=/path/to/wasi-sdk-10.0/bin/clang cargo run --target=wasm32-wasi\r\n\r\nRust version: rustc 1.44.0-nightly (38114ff16 2020-03-21)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71871/timeline", "performed_via_github_app": null, "state_reason": null}