{"url": "https://api.github.com/repos/rust-lang/rust/issues/45670", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45670/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45670/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45670/events", "html_url": "https://github.com/rust-lang/rust/issues/45670", "id": 270101841, "node_id": "MDU6SXNzdWUyNzAxMDE4NDE=", "number": 45670, "title": "[NLL] convert NLL `Region` representation into a bit set", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-10-31T20:07:48Z", "updated_at": "2017-12-01T17:49:14Z", "closed_at": "2017-12-01T17:49:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The present set of NLL patches uses a terribly inefficient representation for regions consisting of two btrees. I think what we probably want is to use a `librustc_data_structures::bitvec::BitMatrix`, which is a 2D matrix where each cell can be a boolean. The \"rows\" here would be the region indices and the \"columns\" would be the locations + free regions.\r\n\r\nAs of https://github.com/rust-lang/rust/pull/45668, the representation of `Region` is encapsulated within the `region_context.rs` module, so this change should be fairly easy to make. The basic idea would be that, when we initialize the `RegionInferenceContext`, we have on hand everything we need to allocate the `BitMatrix` -- that is, we know how many rows and columns we will need. \r\n\r\nSo the basic steps would be:\r\n\r\n- Create a map from each free region to its column index\r\n    - For convenience, these may want to be the same as the free region's variable index (which also start from 0).\r\n- Create a map from each MIR `Location` to its column index.\r\n    - These would start from the column indices used for free regions.\r\n    - The code to enumerate locations [can be found in `init_free_regions`](https://github.com/nikomatsakis/rust/blob/9ca6dbe18608d798d161641bd8114aa06d6fa23a/src/librustc_mir/transform/nll/region_infer.rs#L169-L179); it is basically a loop over the basic blocks and then the locations within each basic block.\r\n- [Remove the `value` field from `RegionDefinition`](https://github.com/nikomatsakis/rust/blob/9ca6dbe18608d798d161641bd8114aa06d6fa23a/src/librustc_mir/transform/nll/region_infer.rs#L57)\r\n    - We will replace it with a `BitMatrix` [stored as a field in the `RegionInferenceContext`](https://github.com/nikomatsakis/rust/blob/9ca6dbe18608d798d161641bd8114aa06d6fa23a/src/librustc_mir/transform/nll/region_infer.rs#L22)\r\n- Adjust users of the `value` field like [`region_contains_point`](https://github.com/nikomatsakis/rust/blob/9ca6dbe18608d798d161641bd8114aa06d6fa23a/src/librustc_mir/transform/nll/region_infer.rs#L210), this should be largely straightforward\r\n- We'll have to [adjust the bitset propagation code](https://github.com/nikomatsakis/rust/blob/9ca6dbe18608d798d161641bd8114aa06d6fa23a/src/librustc_mir/transform/nll/region_infer.rs#L282-L283) -- this could be tricky since it has to copy from one row into another, but I think `BitMatrix` already supports some APIs for that, we may want to add a few more or just tweak how `DFS` works", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45670/timeline", "performed_via_github_app": null, "state_reason": "completed"}