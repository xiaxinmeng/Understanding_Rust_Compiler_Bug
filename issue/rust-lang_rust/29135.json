{"url": "https://api.github.com/repos/rust-lang/rust/issues/29135", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/29135/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/29135/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/29135/events", "html_url": "https://github.com/rust-lang/rust/issues/29135", "id": 112001392, "node_id": "MDU6SXNzdWUxMTIwMDEzOTI=", "number": 29135, "title": "Unable to link static rust library to 32-bit C program on windows.", "user": {"login": "shadowmint", "id": 355760, "node_id": "MDQ6VXNlcjM1NTc2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/355760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shadowmint", "html_url": "https://github.com/shadowmint", "followers_url": "https://api.github.com/users/shadowmint/followers", "following_url": "https://api.github.com/users/shadowmint/following{/other_user}", "gists_url": "https://api.github.com/users/shadowmint/gists{/gist_id}", "starred_url": "https://api.github.com/users/shadowmint/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shadowmint/subscriptions", "organizations_url": "https://api.github.com/users/shadowmint/orgs", "repos_url": "https://api.github.com/users/shadowmint/repos", "events_url": "https://api.github.com/users/shadowmint/events{/privacy}", "received_events_url": "https://api.github.com/users/shadowmint/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-10-18T05:06:44Z", "updated_at": "2015-10-18T11:37:34Z", "closed_at": "2015-10-18T11:37:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is a reproducible test case: https://github.com/shadowmint/rust-extern\n\nThis code works fine on mac and linux, but not on windows.\n\nOn windows, the msys linker reports:\n\n```\ndoug@Tio /c/projects/rust-all/rust-extern/build\n$ make\n[ 50%] Linking C executable external.exe\nCMakeFiles/external.dir/objects.a(test.c.obj):test.c:(.text+0x2a): undefined reference to `rs_str'\nCMakeFiles/external.dir/objects.a(test.c.obj):test.c:(.text+0x3e): undefined reference to `rs_trigger'\nCMakeFiles/external.dir/objects.a(test.c.obj):test.c:(.text+0x4a): undefined reference to `rs_trigger'\nCMakeFiles/external.dir/objects.a(test.c.obj):test.c:(.text+0x56): undefined reference to `rs_register'\nCMakeFiles/external.dir/objects.a(test.c.obj):test.c:(.text+0x62): undefined reference to `rs_trigger'\nCMakeFiles/external.dir/objects.a(test.c.obj):test.c:(.text+0x6e): undefined reference to `rs_trigger'\nc:/mingw/bin/../lib/gcc/mingw32/4.8.1/../../../../mingw32/bin/ld.exe: CMakeFiles\n/external.dir/objects.a(test.c.obj): bad reloc address 0x20 in section `.eh_frame'\nc:/mingw/bin/../lib/gcc/mingw32/4.8.1/../../../../mingw32/bin/ld.exe: final link\n failed: Invalid operation\ncollect2.exe: error: ld returned 1 exit status\nmake[2]: *** [external.exe] Error 1\nmake[1]: *** [CMakeFiles/external.dir/all] Error 2\nmake: *** [all] Error 2\n```\n\nHowever, the link flags being used are perfectly normal:\n\n```\n/C/MinGW/bin/gcc.exe     -Wl,--whole-archive CMakeFiles/external.dir/objects.a -Wl,--no-whole-archive  -o external.exe -Wl,--out-implib,libexternal.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles/external.dir/linklibs.rsp\n```\n\nwhere linklibs.rsp is:\n\n```\n ../target/debug/libextern.a -lws2_32 -luserenv -ladvapi32 -lkernel32 -luser3lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32\n```\n\nNotice specifically as mentioned in the repository README, a fake c based fixture for the same api is included in the the `c` folder; when linked against this library, the compile step works fine. That is to say, the cmake build step to compile the c target is correct.\n\nIt's difficult to tell exactly what's going on here, but it seems like the static library generated by rustc isn't being picked up as a valid file by gcc.\n\n```\n$ rustc --version\nrustc 1.3.0 (9a92aaf19 2015-09-15)\nfrom: https://static.rust-lang.org/dist/rust-1.3.0-i686-pc-windows-gnu.msi\n```\n\nNotice that this is the 32-bit version of both rustc and msys.\n\nI would guess that I was doing something wrong here, but this repository _actually worked_ on rust 1.0; so something has changed in the way things work between then and now?\n", "closed_by": {"login": "shadowmint", "id": 355760, "node_id": "MDQ6VXNlcjM1NTc2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/355760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shadowmint", "html_url": "https://github.com/shadowmint", "followers_url": "https://api.github.com/users/shadowmint/followers", "following_url": "https://api.github.com/users/shadowmint/following{/other_user}", "gists_url": "https://api.github.com/users/shadowmint/gists{/gist_id}", "starred_url": "https://api.github.com/users/shadowmint/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shadowmint/subscriptions", "organizations_url": "https://api.github.com/users/shadowmint/orgs", "repos_url": "https://api.github.com/users/shadowmint/repos", "events_url": "https://api.github.com/users/shadowmint/events{/privacy}", "received_events_url": "https://api.github.com/users/shadowmint/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/29135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/29135/timeline", "performed_via_github_app": null, "state_reason": "completed"}