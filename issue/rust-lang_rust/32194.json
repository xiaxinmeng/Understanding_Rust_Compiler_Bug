{"url": "https://api.github.com/repos/rust-lang/rust/issues/32194", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/32194/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/32194/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/32194/events", "html_url": "https://github.com/rust-lang/rust/issues/32194", "id": 140245355, "node_id": "MDU6SXNzdWUxNDAyNDUzNTU=", "number": 32194, "title": "rustbuild: can't cross compile compiler-rt for ARM", "user": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-11T17:34:32Z", "updated_at": "2016-03-16T15:02:25Z", "closed_at": "2016-03-16T15:02:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "rustbuild is using cmake to build compiler-rt instead of Makefiles like the old build system does,\nand there are some issues that make the build fail when the target is ARM.\n### Background info\n\nFor ARM, there 3 floats ABI (see `-mfloat-abi` in [1](https://gcc.gnu.org/onlinedocs/gcc/ARM-Options.html)):\n- `soft`: processor has no Floating Point Unit (FPU), floating point operations are software\n  routines/library calls.\n- `hard`: processor has FPU, floating point operations are hardware instructions.\n- `softfp`: processor has FPU, can use the hardware instructions but still uses `soft` calling\n  convention.\n\nAs far as Rust is concerned:\n- `arm(v7)-unknown-linux-gnueabihf` uses the `hard` ABI.\n- `arm-unknown-linux-gnueabi` uses the `soft` ABI.\n### Observations when using cmake\n\nIn general:\n- compiler-rt makes a [distinction](https://github.com/rust-lang/compiler-rt/blob/b6087e82ba1384c4af3adf2dc68e92316f0d4caf/cmake/config-ix.cmake#L210-L211) between an `arm` target and an `armhf` target in its sanity\n  checks, but then goes off and generates the [same set of symbols](https://github.com/rust-lang/compiler-rt/blob/b6087e82ba1384c4af3adf2dc68e92316f0d4caf/lib/builtins/CMakeLists.txt#L331) for both targets. Not a\n  problem, but why then bother making a distinction in the first place?\n- (a) compiler-rt demands a C++ compiler in its checks even though it's not used at all to compile\n  the builtins that form part of libcompiler-rt.a. This forces the user to install a g++ compiler\n  were gcc was sufficient before (in the Makefile case). This particularly annoying for `musl`\n  targets where only a `musl-gcc` wrapper is available in the buildbots. Note: It seems the C++\n  compiler is required to compile the sanitizers, but we don't build those right now.\n- When libcompiler-rt.a is built using cmake for ARM it has [more symbols](https://gist.github.com/japaric/97bce36543e7c55149a4) than when is built\n  using the Makefile system. Note the `*vfp` symbols which are in the cmake version but not in the\n  Makefile version; they are relevant in the next section.\n\nWhen targeting `arm-unknown-linux-gnueabi`:\n- (b) The extra `*vfp` symbols can't be compiled for this target; you get a compiler error: \"Error:\n  selected processor does not support ARM mode\". At least that's the case with Ubuntu's\n  `arm-linux-gnueabi-gcc` toolchain and a crosstool-ng generated toolchain.\n\nWhen targeting `arm(v7)-unknown-linux-gnueabihf`:\n- (c) compiler-rt [expects](https://github.com/rust-lang/compiler-rt/blob/b6087e82ba1384c4af3adf2dc68e92316f0d4caf/cmake/config-ix.cmake#L210-L211) the arm compiler to be able to generate programs for both the `soft`\n  ABI and the `hard` ABI. The arm toolchains shipped in Ubuntu have no problems with this check\n  (both tests pass), but when a crosstool-ng compiler is used this check fails in the `soft`\n  case and the cmake build is aborted.\n\nOther than that, I have had no problems (cross) compiling compiler-rt to i686, x86_64, mips or\nmipsel apart from the annoying extra g++ requirement.\n### What to do?\n\nThe simplest way to get rid of all these issues is to build compiler-rt using Makefiles at least\nwhen the target is ARM. The other alternative is to patch compiler-rt:\n- To fix (a), we can disable the C++ compiler check because we are not compiling the sanitizers\n  (yet).\n- For (b), we can filter out the problematic symbols (about 34 assembly files) when compiling for\n  soft float ARM. It's OK, I think, to exclude these symbols because our current releases don't include\n  them for any ARM target (AFAICT).\n- For (c), we could disable the `soft` float check when the target is hard float ARM.\n\nThoughts @alexcrichton?\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/32194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/32194/timeline", "performed_via_github_app": null, "state_reason": "completed"}