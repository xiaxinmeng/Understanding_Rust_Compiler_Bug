{"url": "https://api.github.com/repos/rust-lang/rust/issues/12857", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/12857/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/12857/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/12857/events", "html_url": "https://github.com/rust-lang/rust/issues/12857", "id": 29321161, "node_id": "MDU6SXNzdWUyOTMyMTE2MQ==", "number": 12857, "title": "lifetime variables in type bounds not properly enforced", "user": {"login": "dwrensha", "id": 495768, "node_id": "MDQ6VXNlcjQ5NTc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/495768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwrensha", "html_url": "https://github.com/dwrensha", "followers_url": "https://api.github.com/users/dwrensha/followers", "following_url": "https://api.github.com/users/dwrensha/following{/other_user}", "gists_url": "https://api.github.com/users/dwrensha/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwrensha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwrensha/subscriptions", "organizations_url": "https://api.github.com/users/dwrensha/orgs", "repos_url": "https://api.github.com/users/dwrensha/repos", "events_url": "https://api.github.com/users/dwrensha/events{/privacy}", "received_events_url": "https://api.github.com/users/dwrensha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2014-03-13T02:24:09Z", "updated_at": "2014-07-26T00:54:27Z", "closed_at": "2014-07-26T00:54:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Please see the `MessageReader::get_root` function below and the call to it in `main()`. It seems that `'a` is not properly constrained.\n\nThis is related to #5121 and #12807.\n\n```\n// lifetimes.rs\n\n\n// Like a slice.\npub struct StructReader<'a> {\n    buf : *u8,\n    len : uint,\n    marker : std::kinds::marker::ContravariantLifetime<'a>,\n}\n\n// Something that can be constructed from a StructReader<'a>,\n// and will have the same lifetime 'a.\npub trait FromStructReader<'a> {\n    fn new(struct_reader : StructReader<'a>) -> Self;\n}\n\npub struct MessageReader {\n    buf : ~[u8],\n}\n\nimpl MessageReader {\n\n    // borrow `self` with lifetime `'a`, and construct a `T` that lives no longer than `'a`.\n    pub fn get_root<'a, T : FromStructReader<'a>>(&'a self) -> T {\n        FromStructReader::<'a>::new(\n            StructReader {buf : self.buf.as_ptr(),\n                          len : self.buf.len(),\n                          marker : std::kinds::marker::ContravariantLifetime::<'a>,\n            })\n    }\n}\n\npub struct FooReader<'a> {\n    reader : StructReader<'a>\n}\n\nimpl <'a> FromStructReader<'a> for FooReader<'a> {\n    fn new(struct_reader : StructReader<'a>) -> FooReader<'a> {\n        FooReader { reader : struct_reader}\n    }\n}\n\nimpl <'a> FooReader<'a> {\n    pub fn get(&self, idx : uint) -> u8 {\n        assert!(idx < self.reader.len);\n        unsafe {\n            *self.reader.buf.offset(idx as int)\n        }\n    }\n\n}\n\npub fn main () {\n    let bar = {\n        let message = MessageReader {buf : ~[1,2,3,4,5]};\n        let foo : FooReader = message.get_root();\n        foo\n    }; // this shouldn't typecheck, because `foo` cannot outlive `message`\n\n    let _x : ~[u8] = ~[9,9,9,9,9,9,9,9,9,9,9,9];\n\n    println!(\"bar.get(0) = {}\", bar.get(0));\n}\n```\n\nI expect this program not to typecheck, because it allows a `FooReader` to live longer than the `StructReader` it was constructed from.\n\nHowever, we get:\n\n```\n$ rustc lifetimes.rs \n$ ./lifetimes \nbar.get(0) = 9\n```\n", "closed_by": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/12857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/12857/timeline", "performed_via_github_app": null, "state_reason": "completed"}