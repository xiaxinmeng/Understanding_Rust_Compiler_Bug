{"url": "https://api.github.com/repos/rust-lang/rust/issues/49796", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49796/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49796/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49796/events", "html_url": "https://github.com/rust-lang/rust/issues/49796", "id": 312391335, "node_id": "MDU6SXNzdWUzMTIzOTEzMzU=", "number": 49796, "title": "ICE when emitting a $crate-containing macro_rules! macro in a proc-macro", "user": {"login": "abonander", "id": 3198595, "node_id": "MDQ6VXNlcjMxOTg1OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3198595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abonander", "html_url": "https://github.com/abonander", "followers_url": "https://api.github.com/users/abonander/followers", "following_url": "https://api.github.com/users/abonander/following{/other_user}", "gists_url": "https://api.github.com/users/abonander/gists{/gist_id}", "starred_url": "https://api.github.com/users/abonander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abonander/subscriptions", "organizations_url": "https://api.github.com/users/abonander/orgs", "repos_url": "https://api.github.com/users/abonander/repos", "events_url": "https://api.github.com/users/abonander/events{/privacy}", "received_events_url": "https://api.github.com/users/abonander/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-09T04:42:10Z", "updated_at": "2018-04-09T08:53:35Z", "closed_at": "2018-04-09T08:53:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Proc-macro crate:\r\n\r\n```rust\r\n#![feature(proc_macro)]\r\nextern crate proc_macro;\r\n\r\nuse proc_macro::TokenStream;\r\n\r\n#[proc_macro]\r\npub fn emit_crate_var(input: TokenStream) -> TokenStream {\r\n    \"{ \r\n        macro_rules! __hack (\r\n            () => ($crate::my_fn())\r\n        );\r\n    \r\n        __hack!()\r\n    }\".parse().unwrap() \r\n}\r\n```\r\n\r\nThe emitted macro can be written for and used in an item context and the ICE occurs in the same place, `impl rustc_resolve::Resolver::macro_def_scope`.\r\n\r\nConsuming crate:\r\n```rust\r\n#![feature(proc_macro)]\r\n\r\nextern crate pmacro;\r\n\r\nuse pmacro::emit_crate_var;\r\n\r\npub fn my_fn() {}\r\n\r\nfn main() {\r\n    emit_crate_var!()\r\n}\r\n```\r\n\r\nICE and backtrace (for the above example):\r\n```\r\nthread 'main' panicked at 'no entry found for key', libcore\\option.rs:916:5\r\nstack backtrace:\r\n   0: <std::collections::hash::map::DefaultHasher as core::fmt::Debug>::fmt\r\n   1: std::sys::windows::c::TryAcquireSRWLockShared\r\n   2: std::panicking::take_hook\r\n   3: std::panicking::take_hook\r\n   4: rustc::ty::structural_impls::<impl rustc::ty::context::Lift<'tcx> for rustc::middle::const_val::ErrKind<'a>>::lift_to_tcx\r\n   5: std::panicking::rust_panic_with_hook\r\n   6: std::panicking::begin_panic_fmt\r\n   7: rust_begin_unwind\r\n   8: core::panicking::panic_fmt\r\n   9: core::option::expect_failed\r\n  10: rustc_resolve::build_reduced_graph::<impl rustc_resolve::Resolver<'a>>::macro_def_scope\r\n  11: rustc_resolve::Resolver::resolve_crate\r\n  12: rustc_resolve::Resolver::resolve_crate\r\n  13: rustc_resolve::resolve_imports::ImportResolver::resolve_imports\r\n  14: rustc_resolve::macros::<impl syntax::ext::base::Resolver for rustc_resolve::Resolver<'a>>::resolve_imports\r\n  15: syntax::ext::expand::MacroExpander::expand_crate\r\n  16: syntax::ext::expand::MacroExpander::expand_crate\r\n  17: rustc_driver::driver::build_output_filenames\r\n  18: rustc_driver::driver::build_output_filenames\r\n  19: rustc_driver::driver::count_nodes\r\n  20: rustc_driver::driver::compile_input\r\n  21: rustc_driver::run_compiler\r\n  22: <unknown>\r\n  23: <rustc_driver::pretty::UserIdentifiedItem as core::fmt::Debug>::fmt\r\n  24: rustc_driver::main\r\n  25: <unknown>\r\n  26: std::panicking::update_panic_count\r\n  27: _rust_maybe_catch_panic\r\n  28: std::rt::lang_start_internal\r\n  29: <unknown>\r\n  30: <unknown>\r\n  31: BaseThreadInitThunk\r\n  32: RtlUserThreadStart\r\nquery stack during panic:\r\nend of query stack\r\nerror: Could not compile `crate-var-test`.\r\n```", "closed_by": {"login": "abonander", "id": 3198595, "node_id": "MDQ6VXNlcjMxOTg1OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3198595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abonander", "html_url": "https://github.com/abonander", "followers_url": "https://api.github.com/users/abonander/followers", "following_url": "https://api.github.com/users/abonander/following{/other_user}", "gists_url": "https://api.github.com/users/abonander/gists{/gist_id}", "starred_url": "https://api.github.com/users/abonander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abonander/subscriptions", "organizations_url": "https://api.github.com/users/abonander/orgs", "repos_url": "https://api.github.com/users/abonander/repos", "events_url": "https://api.github.com/users/abonander/events{/privacy}", "received_events_url": "https://api.github.com/users/abonander/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49796/timeline", "performed_via_github_app": null, "state_reason": "completed"}