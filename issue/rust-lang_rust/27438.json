{"url": "https://api.github.com/repos/rust-lang/rust/issues/27438", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/27438/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/27438/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/27438/events", "html_url": "https://github.com/rust-lang/rust/issues/27438", "id": 98422921, "node_id": "MDU6SXNzdWU5ODQyMjkyMQ==", "number": 27438, "title": "Correctly handle dllimport on Windows", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123109, "node_id": "MDU6TGFiZWwxMjMxMDk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows", "name": "O-windows", "color": "6e6ec0", "default": false, "description": "Operating system: Windows"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 117, "created_at": "2015-07-31T16:20:45Z", "updated_at": "2020-07-29T15:55:00Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently the compiler makes basically no attempt to correctly use `dllimport`. As a bit of a refresher, the Windows linker requires that if you're importing symbols from a DLL that they're tagged with `dllimport`. This helps wire things up correctly at runtime and link-time. To help us out, though, the linker will patch up a few cases where `dllimport` is missing where it would otherwise be required. If a function in another DLL is linked to without `dllimport` then the linker will inject a local shim which adds a bit of indirection and runtime overhead but allows the crate to link correctly. For importing constants from other DLLs, however, MSVC linker requires that dllimport is annotated correctly. MinGW linkers can sometimes workaround it (see [this commit](https://github.com/llvm/llvm-project/commit/eac1b05f1db91097eb37d975e07789ce039cf7f7) description.\r\n\r\nIf we're targeting windows, then the compiler currently puts `dllimport` on all imported constants from external crates, regardless of whether it's actually being imported from another crate. We rely on the linker fixing up all imports of functions. This ends up meaning that some crates don't link correctly, however (see this comment: https://github.com/rust-lang/rust/issues/26591#issuecomment-123513631).\r\n\r\nWe should fix the compiler's handling of dllimport in a few ways:\r\n- Functions should be tagged with `dllimport` where appropriate\r\n- FFI functions should also be tagged with `dllimport` where appropriate\r\n- Constants should not always be tagged with `dllimport` if they're not actually being imported from a DLL.\r\n\r\nI currently have a few thoughts running around in my head for fixing this, but nothing seems plausible enough to push on.\r\n\r\nEDIT: Updated as @mati865 requested [here](https://github.com/rust-lang/rust/issues/27438#issuecomment-665739234).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/27438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/27438/timeline", "performed_via_github_app": null, "state_reason": null}