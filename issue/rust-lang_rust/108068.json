{"url": "https://api.github.com/repos/rust-lang/rust/issues/108068", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108068/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108068/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108068/events", "html_url": "https://github.com/rust-lang/rust/issues/108068", "id": 1585006814, "node_id": "I_kwDOAAsO6M5eeUje", "number": 108068, "title": "Improve codegen of large Copy parameters under CopyProp to match DestinationPropagation", "user": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-02-15T00:04:23Z", "updated_at": "2023-04-10T18:43:53Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This will probably bitrot, but this is a working godbolt link at the moment: https://godbolt.org/z/v446e66jG\r\n\r\nCurrently this program:\r\n```rust\r\ntype T = [u8; 256];\r\npub fn f(a: T, b: fn(_: T, _: T)) {\r\n    b(a, a)\r\n}\r\n```\r\nCompiles to this IR:\r\n```llvm\r\ndefine void @f(ptr noalias nocapture noundef readonly dereferenceable(256) %a, ptr nocapture noundef nonnull readonly %b) unnamed_addr #0 !dbg !6 {\r\nstart:\r\n  %_5 = alloca [256 x i8], align 1\r\n  %_4 = alloca [256 x i8], align 1\r\n  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %_4), !dbg !11\r\n  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(256) %_4, ptr noundef nonnull align 1 dereferenceable(256) %a, i64 256, i1 false), !dbg !11\r\n  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %_5), !dbg !12\r\n  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(256) %_5, ptr noundef nonnull align 1 dereferenceable(256) %a, i64 256, i1 false), !dbg !12\r\n  call void %b(ptr noalias nocapture noundef nonnull dereferenceable(256) %_4, ptr noalias nocapture noundef nonnull dereferenceable(256) %_5), !dbg !13\r\n  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %_5), !dbg !14\r\n  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %_4), !dbg !14\r\n  ret void, !dbg !15\r\n}\r\n```\r\nBut if we pass `-Zmir-enable-passes=+DestinationPropagation`, we eliminate a `memcpy`:\r\n```llvm\r\ndefine void @f(ptr noalias nocapture noundef dereferenceable(256) %a, ptr nocapture noundef nonnull readonly %b) unnamed_addr #0 !dbg !6 {\r\nstart:\r\n  %_3 = alloca [256 x i8], align 1\r\n  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %_3), !dbg !11\r\n  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(256) %_3, ptr noundef nonnull align 1 dereferenceable(256) %a, i64 256, i1 false), !dbg !11\r\n  call void %b(ptr noalias nocapture noundef nonnull dereferenceable(256) %_3, ptr noalias nocapture noundef nonnull dereferenceable(256) %a), !dbg !12\r\n  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %_3), !dbg !13\r\n  ret void, !dbg !14\r\n}\r\n```\r\n\r\nBut with `CopyProp` enabled, we do not manage this optimization. This is probably a coordination problem between codegen, MIR optimizations, and MIR semantics: https://github.com/rust-lang/rust/pull/105813#issuecomment-1362959104", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108068/timeline", "performed_via_github_app": null, "state_reason": null}