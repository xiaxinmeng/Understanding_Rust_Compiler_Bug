{"url": "https://api.github.com/repos/rust-lang/rust/issues/95038", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95038/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95038/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95038/events", "html_url": "https://github.com/rust-lang/rust/issues/95038", "id": 1172427401, "node_id": "I_kwDOAAsO6M5F4dKJ", "number": 95038, "title": "Unclear diagnostic with closures pass by reference", "user": {"login": "Yuri6037", "id": 6407288, "node_id": "MDQ6VXNlcjY0MDcyODg=", "avatar_url": "https://avatars.githubusercontent.com/u/6407288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yuri6037", "html_url": "https://github.com/Yuri6037", "followers_url": "https://api.github.com/users/Yuri6037/followers", "following_url": "https://api.github.com/users/Yuri6037/following{/other_user}", "gists_url": "https://api.github.com/users/Yuri6037/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yuri6037/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yuri6037/subscriptions", "organizations_url": "https://api.github.com/users/Yuri6037/orgs", "repos_url": "https://api.github.com/users/Yuri6037/repos", "events_url": "https://api.github.com/users/Yuri6037/events{/privacy}", "received_events_url": "https://api.github.com/users/Yuri6037/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-03-17T14:12:44Z", "updated_at": "2022-03-17T14:12:44Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\n#![feature(fmt_internals)]\r\n\r\nuse std::sync::Arc;\r\nuse std::marker::PhantomData;\r\n\r\nstruct ThreadPool<'env> {\r\n    task_queue: Arc<PhantomData<Box<dyn FnOnce() + 'env>>>,\r\n}\r\n\r\nimpl<'env> ThreadPool<'env> {\r\n    fn new() -> Self {\r\n        Self {\r\n            task_queue: Arc::new(PhantomData),\r\n        }\r\n    }\r\n\r\n    fn send<F: FnOnce() + 'env>(&mut self, _f: F) {}\r\n}\r\n\r\npub fn test_func<'a>(mut iter: impl Iterator<Item = &'a ()>) {\r\n    let mut pool: ThreadPool = ThreadPool::new();\r\n    let v = iter.next().unwrap();\r\n    pool.send(|| {\r\n        let _ = ::core::fmt::ArgumentV1::new_debug(&v);\r\n    });\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[[E0597]](https://doc.rust-lang.org/nightly/error-index.html#E0597): `v` does not live long enough\r\n  [--> src/lib.rs:24:53\r\n](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=8e43f71b340a7059ee643fdd6acb861f#)   |\r\n23 |     pool.send(|| {\r\n   |               -- value captured here\r\n24 |         let _ = ::core::fmt::ArgumentV1::new_debug(&v);\r\n   |                                                     ^ borrowed value does not live long enough\r\n25 |     });\r\n26 | }\r\n   | -\r\n   | |\r\n   | `v` dropped here while still borrowed\r\n   | borrow might be used here, when `pool` is dropped and runs the destructor for type `ThreadPool<'_>`\r\n   |\r\n   = note: values in a scope are dropped in the opposite order they are defined\r\n\r\nFor more information about this error, try `rustc --explain E0597`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should mention that `&&Path` (which is what causes the source error) is passed or that the use of `move` keyword in the closure declaration may be needed.\r\n\r\nThis is a problem because I people on the IRC lost near 20 minutes at debugging that issue.\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95038/timeline", "performed_via_github_app": null, "state_reason": null}