{"url": "https://api.github.com/repos/rust-lang/rust/issues/42857", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42857/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42857/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42857/events", "html_url": "https://github.com/rust-lang/rust/issues/42857", "id": 238133175, "node_id": "MDU6SXNzdWUyMzgxMzMxNzU=", "number": 42857, "title": "Failed rlib archive processing with rustc 1.17 compiled against LLVM 4.0", "user": {"login": "copumpkin", "id": 2623, "node_id": "MDQ6VXNlcjI2MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/2623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copumpkin", "html_url": "https://github.com/copumpkin", "followers_url": "https://api.github.com/users/copumpkin/followers", "following_url": "https://api.github.com/users/copumpkin/following{/other_user}", "gists_url": "https://api.github.com/users/copumpkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/copumpkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copumpkin/subscriptions", "organizations_url": "https://api.github.com/users/copumpkin/orgs", "repos_url": "https://api.github.com/users/copumpkin/repos", "events_url": "https://api.github.com/users/copumpkin/events{/privacy}", "received_events_url": "https://api.github.com/users/copumpkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-06-23T12:50:07Z", "updated_at": "2022-10-24T23:48:10Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I apologize that this isn't the best bug description, but after several hours on this, I still haven't been able to reduce it to get a small repro that would fit the template, so I'll describe what I know so far and hope that someone has hints for how to debug further so I can improve this issue report (or close it if it turns out to be unrelated to `rustc`!)\r\n\r\nI'm running on macOS with rustc 1.17.0 compiled against a mostly vanilla LLVM 4.0, under the Nix package manager (which doesn't have 1.18.0 yet or I'd try that; it doesn't look like the relevant code has changed much so I haven't put much effort on that front yet).\r\n\r\nWhen I try to build https://github.com/pantsbuild/pants/tree/master/src/rust/engine in that environment (it's a Python module written in rust), I get most of the way through compilation but then rustc barfs with the following message:\r\n\r\n```\r\nerror: failed to build archive: bad archive: truncated or malformed archive (offset to next archive member past the end of the archive after member collections-ef2067477795e5ee.9.bytecode.deflate)\r\n```\r\n\r\n(the failure is consistent but not always on the collections library; I've seen it happen on libstd too)\r\n\r\nThe strings in that error message tell me that it's likely coming from https://github.com/rust-lang/rust/blob/1.17.0/src/librustc_trans/back/archive.rs#L228 and one of the two iterator loops over archive children below there (due to the \"bad archive\" error snippet that's added to each child).\r\n\r\nLooking at the relevant rlibs, I can get pure LLVM to spit out exactly the same error message just by running `llvm-nm` (which is conveniently bundled with the macOS developer kit) against it:\r\n\r\n```\r\n$ nm /nix/store/kwn3vvcbl7rwxlz8j3vppdwwqjkkl3mz-rustc-1.17.0/lib/rustlib/x86_64-apple-darwin/lib/libcollections-ef2067477795e5ee.rlib\r\n\r\n[lots of reasonable symbols]\r\n\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/nm: /nix/store/kwn3vvcbl7rwxlz8j3vppdwwqjkkl3mz-rustc-1.17.0/lib/rustlib/x86_64-apple-darwin/lib/libcollections-ef2067477795e5ee.rlib(rust.metadata.bin) The end of the file was unexpectedly encountered\r\n\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/nm: /nix/store/kwn3vvcbl7rwxlz8j3vppdwwqjkkl3mz-rustc-1.17.0/lib/rustlib/x86_64-apple-darwin/lib/libcollections-ef2067477795e5ee.rlib truncated or malformed archive (offset to next archive member past the end of the archive after member collections-ef2067477795e5ee.9.bytecode.deflate)\r\n```\r\n\r\nI think the warning on `rust.metadata.bin` is expected since it's not something that `nm` understands, but the final error message about the truncated or malformed archive is identical to what `rustc` spits out.\r\n\r\nWhat I've been able to make of this is that something between `rustc`, LLVM 4, or my weird Nix build of the two of them together is either producing invalid rlib/.a archives or producing valid archives that the LLVM archive iterator then doesn't know how to handle when it consumes them again later.\r\n\r\nAs an additional data point, Nix allows us to run almost exactly the same build on multiple platforms (almost same combination of flags, dependencies, etc.) and I can run the exact same build just fine on Linux. So this seems to be some unhappiness with Darwin in particular...\r\n\r\nAnyway, I'm not expecting anyone to be able to figure out the issue based on the weird situation I describe above, but would appreciate any debugging hints anyone has to help me track this down; if this turns out to be a real issue in rustc or LLVM, I'll file new issues or update this one as I learn more, but right now I'm getting kind of stumped. My best debugging approach so far is creating (sloow) custom `rustc` builds with prints sprinked across relevant code to see what's going on, so I'd welcome anything less painful than that.\r\n\r\ncc @alexcrichton who is seemingly deeply involved in archive.rs and friends\r\n\r\n# Verbose version\r\n\r\n```\r\n/nix/store/kwn3vvcbl7rwxlz8j3vppdwwqjkkl3mz-rustc-1.17.0/bin/rustc --version --verbose\r\nrustc 1.17.0\r\nbinary: rustc\r\ncommit-hash: unknown\r\ncommit-date: unknown\r\nhost: x86_64-apple-darwin\r\nrelease: 1.17.0\r\nLLVM version: 4.0\r\n```\r\n\r\nEdit: I've tried various `-Z` options that sound potentially helpful but none of them told me anything around the point of the crash. Here are some of the ones I tried to no avail: `print-llvm-passes`, `debug-llvm`, `verbose`, `print-link-args`", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42857/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42857/timeline", "performed_via_github_app": null, "state_reason": null}