{"url": "https://api.github.com/repos/rust-lang/rust/issues/8406", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/8406/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/8406/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/8406/events", "html_url": "https://github.com/rust-lang/rust/issues/8406", "id": 17838940, "node_id": "MDU6SXNzdWUxNzgzODk0MA==", "number": 8406, "title": "RFC: static constants of type ~[T]", "user": {"login": "stepancheg", "id": 28969, "node_id": "MDQ6VXNlcjI4OTY5", "avatar_url": "https://avatars.githubusercontent.com/u/28969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stepancheg", "html_url": "https://github.com/stepancheg", "followers_url": "https://api.github.com/users/stepancheg/followers", "following_url": "https://api.github.com/users/stepancheg/following{/other_user}", "gists_url": "https://api.github.com/users/stepancheg/gists{/gist_id}", "starred_url": "https://api.github.com/users/stepancheg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stepancheg/subscriptions", "organizations_url": "https://api.github.com/users/stepancheg/orgs", "repos_url": "https://api.github.com/users/stepancheg/repos", "events_url": "https://api.github.com/users/stepancheg/events{/privacy}", "received_events_url": "https://api.github.com/users/stepancheg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-08-08T23:05:04Z", "updated_at": "2013-10-31T16:28:03Z", "closed_at": "2013-10-29T04:17:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Rust needs static constants of type: `~[T]` (and probably other `~T` types).\n\nIn certain use cases `&'static [T]` is not sufficient.\n\nStatic `~[T]` constants are needed to declare static constants of struct types that have `~[T]` fields:\n\n```\nstruct Foo { items: ~[u32] }\nstatic foo_default_instance: Foo = Foo { items: ~[] }\n```\n\nWhich is in turn needed to implement non-copying `get_xxx_ref_or_default` functions.\n\n```\nstruct Bar {\n    foo: Option<Far> // None means uninitialized\n}\n\nimpl Bar<'self> {\n    // get a reference to foo if it is set, or default instance otherwize\n    fn get_foo(&self) -> &'self Foo {\n        if self.foo.is_some() {\n            foo.get_ref()\n        } else {\n            foo_default_instance\n        }\n    }\n}\n```\n\nThe feature would be helpful in [rust-protobuf](https://github.com/stepancheg/rust-protobuf) library.\n", "closed_by": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/8406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/8406/timeline", "performed_via_github_app": null, "state_reason": "completed"}