{"url": "https://api.github.com/repos/rust-lang/rust/issues/100198", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/100198/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/100198/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/100198/events", "html_url": "https://github.com/rust-lang/rust/issues/100198", "id": 1330787357, "node_id": "I_kwDOAAsO6M5PUjQd", "number": 100198, "title": "[ICE] with lines()", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-08-06T16:02:28Z", "updated_at": "2022-08-07T07:13:54Z", "closed_at": "2022-08-07T07:13:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "This reduced code:\r\n\r\n```rust\r\nfn main() {\r\n    let _ =\r\n    \"0\"\r\n    .lines()\r\n    .map(|r| r\r\n             .split_whitespace()\r\n             .map(|s| s.parse::<u32>().unwrap())\r\n             .collect::<Vec<_>>())\r\n    .reduce(|x, y| y.iter().zip(x)\r\n                   .map(|(a, b)| a + b)\r\n                   .collect());\r\n}\r\n```\r\n\r\nGives:\r\n\r\n```\r\nthread 'rustc' panicked at 'invalid enum variant tag while decoding `ExpnKind`, expected 0..5', /rustc/affe0d3a00e92fa7885e3f5d2c5073fde432d154\\compiler\\rustc_span\\src\\hygiene.rs:1045:46\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/affe0d3a00e92fa7885e3f5d2c5073fde432d154/library\\std\\src/panicking.rs:584:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/affe0d3a00e92fa7885e3f5d2c5073fde432d154/library\\core\\src/panicking.rs:142:14\r\n   2: <rustc_span::hygiene::ExpnData as rustc_serialize::serialize::Decodable<rustc_metadata::rmeta::decoder::DecodeContext>>::decode\r\n   3: <rustc_span::hygiene::ExpnId as rustc_serialize::serialize::Decodable<rustc_metadata::rmeta::decoder::DecodeContext>>::decode\r\n   4: <rustc_span::hygiene::SyntaxContextData as rustc_serialize::serialize::Decodable<rustc_metadata::rmeta::decoder::DecodeContext>>::decode\r\n   5: <rustc_span::hygiene::SyntaxContext as rustc_serialize::serialize::Decodable<rustc_metadata::rmeta::decoder::DecodeContext>>::decode\r\n   6: <rustc_span::span_encoding::Span as rustc_serialize::serialize::Decodable<rustc_metadata::rmeta::decoder::DecodeContext>>::decode\r\n   7: <alloc::vec::Vec<rustc_middle::mir::Statement> as rustc_serialize::serialize::Decodable<rustc_metadata::rmeta::decoder::DecodeContext>>::decode\r\n   8: <rustc_middle::mir::BasicBlockData as rustc_serialize::serialize::Decodable<rustc_metadata::rmeta::decoder::DecodeContext>>::decode\r\n   9: <alloc::vec::Vec<rustc_middle::mir::BasicBlockData> as rustc_serialize::serialize::Decodable<rustc_metadata::rmeta::decoder::DecodeContext>>::decode\r\n  10: <rustc_middle::mir::Body as rustc_serialize::serialize::Decodable<rustc_metadata::rmeta::decoder::DecodeContext>>::decode\r\n  11: rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::optimized_mir\r\n  12: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::DefId, &rustc_middle::mir::Body>>\r\n  13: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::optimized_mir, rustc_query_impl::plumbing::QueryCtxt>\r\n  14: <rustc_middle::ty::context::TyCtxt>::instance_mir\r\n  15: rustc_monomorphize::collector::collect_neighbours\r\n  16: rustc_monomorphize::collector::collect_items_rec\r\n  17: rustc_monomorphize::collector::collect_items_rec\r\n  18: rustc_monomorphize::collector::collect_items_rec\r\n  19: rustc_monomorphize::collector::collect_items_rec\r\n  20: rustc_monomorphize::collector::collect_items_rec\r\n  21: rustc_monomorphize::collector::collect_items_rec\r\n  22: rustc_monomorphize::collector::collect_items_rec\r\n  23: <core::panic::unwind_safe::AssertUnwindSafe<rustc_data_structures::sync::par_for_each_in<alloc::vec::Vec<rustc_middle::mir::mono::MonoItem>, rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}::{closure#0}>::{closure#0}::{closure#0}> as core::ops::function::FnOnce<()>>::call_once\r\n  24: rustc_data_structures::sync::par_for_each_in::<alloc::vec::Vec<rustc_middle::mir::mono::MonoItem>, rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}::{closure#0}>\r\n  25: <rustc_session::session::Session>::time::<(), rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}>\r\n  26: rustc_monomorphize::collector::collect_crate_mono_items\r\n  27: rustc_monomorphize::partitioning::collect_and_partition_mono_items\r\n  28: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>>\r\n  29: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt>\r\n  30: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::collect_and_partition_mono_items\r\n  31: rustc_codegen_ssa::base::codegen_crate::<rustc_codegen_llvm::LlvmCodegenBackend>\r\n  32: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  33: <rustc_session::session::Session>::time::<alloc::boxed::Box<dyn core::any::Any>, rustc_interface::passes::start_codegen::{closure#0}>\r\n  34: <rustc_interface::passes::QueryContext>::enter::<<rustc_interface::queries::Queries>::ongoing_codegen::{closure#0}::{closure#0}, core::result::Result<alloc::boxed::Box<dyn core::any::Any>, rustc_errors::ErrorGuaranteed>>\r\n  35: <rustc_interface::queries::Queries>::ongoing_codegen\r\n  36: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>\r\n  37: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.64.0-nightly (affe0d3a0 2022-08-05) running on x86_64-pc-windows-gnu\r\n\r\nquery stack during panic:\r\n#0 [optimized_mir] optimizing MIR for `<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index`\r\n#1 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n```\r\n\r\nUsing:\r\n\r\n```\r\nrustc 1.64.0-nightly (affe0d3a0 2022-08-05)\r\nbinary: rustc\r\ncommit-hash: affe0d3a00e92fa7885e3f5d2c5073fde432d154\r\ncommit-date: 2022-08-05\r\nhost: x86_64-pc-windows-gnu\r\nrelease: 1.64.0-nightly\r\nLLVM version: 14.0.6\r\n```", "closed_by": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/100198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/100198/timeline", "performed_via_github_app": null, "state_reason": "completed"}