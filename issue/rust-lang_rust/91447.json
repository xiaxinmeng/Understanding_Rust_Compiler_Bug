{"url": "https://api.github.com/repos/rust-lang/rust/issues/91447", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91447/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91447/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91447/events", "html_url": "https://github.com/rust-lang/rust/issues/91447", "id": 1069354839, "node_id": "I_kwDOAAsO6M4_vQ9X", "number": 91447, "title": "Possible performance loss with f32 arithmetic", "user": {"login": "Yuri6037", "id": 6407288, "node_id": "MDQ6VXNlcjY0MDcyODg=", "avatar_url": "https://avatars.githubusercontent.com/u/6407288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yuri6037", "html_url": "https://github.com/Yuri6037", "followers_url": "https://api.github.com/users/Yuri6037/followers", "following_url": "https://api.github.com/users/Yuri6037/following{/other_user}", "gists_url": "https://api.github.com/users/Yuri6037/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yuri6037/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yuri6037/subscriptions", "organizations_url": "https://api.github.com/users/Yuri6037/orgs", "repos_url": "https://api.github.com/users/Yuri6037/repos", "events_url": "https://api.github.com/users/Yuri6037/events{/privacy}", "received_events_url": "https://api.github.com/users/Yuri6037/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2139259423, "node_id": "MDU6TGFiZWwyMTM5MjU5NDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-floating-point", "name": "A-floating-point", "color": "f7e101", "default": false, "description": "Area: Floating point numbers and arithmetic"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2021-12-02T10:03:56Z", "updated_at": "2022-03-05T22:20:28Z", "closed_at": "2022-03-05T21:51:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've tried, out of curiosity, a floating point arithmetic test and found quite a big difference between C++ and Rust.\r\n\r\nThe code used in rust\r\n```rust\r\npub struct Stats\r\n{\r\n    x: f32,\r\n    y: f32,\r\n    z: f32\r\n}\r\n\r\npub fn sum(a: &Stats, b: &Stats) -> Stats\r\n{\r\n    Stats {\r\n        x: a.x + b.x,\r\n        y: a.y + b.y,\r\n        z: a.z + b.z\r\n    }\r\n}\r\n```\r\n\r\nThe code used in C++\r\n```cpp\r\nstruct Stats\r\n{\r\n    float x;\r\n    float y;\r\n    float z;\r\n};\r\n\r\nStats sum(const Stats &a, const Stats &b)\r\n{\r\n    return Stats {\r\n        a.x + b.x,\r\n        a.y + b.y,\r\n        a.z + b.z\r\n    };\r\n}\r\n```\r\n\r\nHere is a link to a godbolt for side-by-side comparision of assembly output: https://godbolt.org/z/dqc4b74rv\r\n\r\nRust seem to absolutely want the floats back into e* registers instead of keeping them in xmm registers, C++ leaves them into the xmm registers. In some cases it might more advantageous to leave the floats in xmm registers for future operations on them rather then passing them back into the e* registers.", "closed_by": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91447/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91447/timeline", "performed_via_github_app": null, "state_reason": "completed"}