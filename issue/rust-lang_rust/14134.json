{"url": "https://api.github.com/repos/rust-lang/rust/issues/14134", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/14134/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/14134/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/14134/events", "html_url": "https://github.com/rust-lang/rust/issues/14134", "id": 33301355, "node_id": "MDU6SXNzdWUzMzMwMTM1NQ==", "number": 14134, "title": "code cleanup: if visit::walk_foo(a, b, c) discards b, then b should not be in its API.", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-12T11:58:19Z", "updated_at": "2014-05-14T16:16:45Z", "closed_at": "2014-05-14T16:16:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The pattern for our `syntax::visit` module is that each visit method has a default implementation that just walks the substructure of that node in the AST.\n\nWhat I often do when implementing a visitor is cut-and-paste the trait definition (with its default methods) into my new visitor and then consider each method to determine whether it should (1.) do extra-work, and/or (2.) stop the traversal, or (3.) just use the default impl.\n\nWhen I see something like:\n\n```\nfn visit_struct_def(&mut self, s: &StructDef, i: Ident, g: &Generics, n: NodeId, e: E) {\n    walk_struct_def(self, s, i, g, n, e)\n}\n```\n\nI might assume: \"Ah, the walk routine is already going to look at `i` and `g`, so if I need to look at those in my own code, then I can just inherit the visitor's default method.\"\n\nThe problem with that assumption is this:\n\n```\npub fn walk_struct_def<E: Clone, V: Visitor<E>>(visitor: &mut V,\n                                                struct_definition: &StructDef,\n                                                _: Ident,\n                                                _: &Generics,\n                                                _: NodeId,\n                                                env: E) {\n   ...\n}\n```\n\nMy proposal solution: Any `fn walk_foo` in visit.rs should not have any parameters that are ignored.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/14134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/14134/timeline", "performed_via_github_app": null, "state_reason": "completed"}