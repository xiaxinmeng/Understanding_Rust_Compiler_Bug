{"url": "https://api.github.com/repos/rust-lang/rust/issues/65386", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65386/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65386/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65386/events", "html_url": "https://github.com/rust-lang/rust/issues/65386", "id": 506352348, "node_id": "MDU6SXNzdWU1MDYzNTIzNDg=", "number": 65386, "title": "tuple variant error message is confusing", "user": {"login": "ultrasaurus", "id": 41906, "node_id": "MDQ6VXNlcjQxOTA2", "avatar_url": "https://avatars.githubusercontent.com/u/41906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ultrasaurus", "html_url": "https://github.com/ultrasaurus", "followers_url": "https://api.github.com/users/ultrasaurus/followers", "following_url": "https://api.github.com/users/ultrasaurus/following{/other_user}", "gists_url": "https://api.github.com/users/ultrasaurus/gists{/gist_id}", "starred_url": "https://api.github.com/users/ultrasaurus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ultrasaurus/subscriptions", "organizations_url": "https://api.github.com/users/ultrasaurus/orgs", "repos_url": "https://api.github.com/users/ultrasaurus/repos", "events_url": "https://api.github.com/users/ultrasaurus/events{/privacy}", "received_events_url": "https://api.github.com/users/ultrasaurus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2019-10-13T17:12:25Z", "updated_at": "2020-01-16T06:27:31Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "originally described in blog post: https://www.ultrasaurus.com/2019/10/rust-whats-a-tuple-variant/\r\n\r\nsample code:\r\n```\r\nfn get_num() -> Result<i32, &'static str> {\r\n  let result = 4;\r\n  OK(result)\r\n}\r\n```\r\n\r\nerror message:\r\n```\r\nerror[E0425]: cannot find function `OK` in this scope\r\n  --> examples/tuple.rs:13:3\r\n   |\r\n13 |   OK(result)\r\n   |   ^^ help: a tuple variant with a similar name exists: `Ok`\r\n```\r\n\r\nError message suggestions:\r\n\r\n- [ ] From @estebank [playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=280fbc298c88c11b2a73c9d32b3c3424) \r\n   - [x] point to line 2 (even if defined in standard library) *and* the compiled code which differs by case (addressed in #65421, #65912)\r\n  - [ ] include additional context in the error: \"a similar name exists: `Ok` (which is a tuple variant of `enum Result`)\" -- then the reference to \"tuple variant\" has context and there's a clear reference to look up in the docs\r\n- [x] special error for a difference in captilization (from @estebank via [tweet](https://twitter.com/ekuber/status/1183414672667504640)) (addressed in #65398)\r\n- [x] change help text to make clear that this symbol is not recognized (when I ran into this, I thought at first that perhaps I had created a conflicting definition of a tuple variant that was somehow defined elsewhere), perhaps something like \"help: `OK` has not yet been defined, perhaps you meant to refer to: `Ok`, which has a similar name\" (addressed in #65421)\r\n- [x] call out the specific difference when suggesting similar term -- colors are really nice for visually-oriented people, but not super accessible.  Could also include \"O[K/k]\" which would really help when difference is embedded in a string \"foo::ba[r/z]::App\" (example from @estebank [tweet](https://twitter.com/ekuber/status/1183416770289266688)) -- see related https://github.com/rust-lang/rust/issues/57413\r\n\r\nGeneral terminology suggestions:\r\n\r\n- [ ] stop referring to \"tuple-like enum\" and \"tuple-like struct\" and instead come up with a more precise term, such as \"named tuple\" (or \"typed tuple\" but I like the former better) which could be declared as a struct or as part of an enum.  \r\n- [ ] refer to the struct / enum use of tuples in the book, here: https://doc.rust-lang.org/1.7.0/book/primitive-types.html#tuples link to [Tuple structs](https://doc.rust-lang.org/1.7.0/book/structs.html#tuple-structs) and create a similar titled sub-section of [enum](https://doc.rust-lang.org/1.7.0/book/enums.html) and include a link to that\r\n- [ ] standardize naming of struct and enum and create logical parallel: unit enum / unit struct  OR enum unit variant / struct unit variant (I prefer the former with fewer words)\r\n- when you standardize on the names, consider annotate them [here](https://doc.rust-lang.org/1.7.0/book/enums.html):\r\n```\r\nenum Message {\r\n    Quit,                                           // unit enum\r\n    ChangeColor(i32, i32, i32),    // tuple enum\r\n    Move { x: i32, y: i32 },              // struct enum\r\n    Write(String),                           // also a tuple enum\r\n}\r\n```\r\n(by the way, the above example is very good serving as both an introduction to the section content and an easy syntax reference that is quick to find later)\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65386/reactions", "total_count": 7, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 6, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65386/timeline", "performed_via_github_app": null, "state_reason": null}