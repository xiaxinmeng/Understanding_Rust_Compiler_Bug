{"url": "https://api.github.com/repos/rust-lang/rust/issues/52380", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52380/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52380/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52380/events", "html_url": "https://github.com/rust-lang/rust/issues/52380", "id": 341244512, "node_id": "MDU6SXNzdWUzNDEyNDQ1MTI=", "number": 52380, "title": "include_str fails with large files", "user": {"login": "benaryorg", "id": 6145260, "node_id": "MDQ6VXNlcjYxNDUyNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/6145260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benaryorg", "html_url": "https://github.com/benaryorg", "followers_url": "https://api.github.com/users/benaryorg/followers", "following_url": "https://api.github.com/users/benaryorg/following{/other_user}", "gists_url": "https://api.github.com/users/benaryorg/gists{/gist_id}", "starred_url": "https://api.github.com/users/benaryorg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benaryorg/subscriptions", "organizations_url": "https://api.github.com/users/benaryorg/orgs", "repos_url": "https://api.github.com/users/benaryorg/repos", "events_url": "https://api.github.com/users/benaryorg/events{/privacy}", "received_events_url": "https://api.github.com/users/benaryorg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630799571, "node_id": "MDU6TGFiZWw2MzA3OTk1NzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compilemem", "name": "I-compilemem", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to memory usage during compilation."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-14T15:32:51Z", "updated_at": "2020-07-20T12:54:09Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I just tried to `include_str!()` a 14g file.\r\nIt failed with:\r\n\r\n<details>\r\n<summary>failure with 16g file</summary>\r\n\r\n```text\r\n% cargo build\r\n   Compiling foobar v0.1.0 (file:///home/benaryorg/.local/tmp/tmp.nlZAcHIVlh)\r\nfatal runtime error: memory allocation failed\r\nerror: Could not compile `foobar`.\r\n```\r\n</details>\r\n\r\n---\r\n\r\nSame error with everything down to five gigabytes (which would fit in my ram thrice).\r\nThen I thought, hey, 32-bit and ran the following:\r\n\r\n<details>\r\n<summary>failure with 2^32+1 file</summary>\r\n\r\n```text\r\n% truncate -s 4294967297 file # 2^32 + 1\r\n% cargo build\r\n   Compiling foobar v0.1.0 (file:///home/benaryorg/.local/tmp/tmp.nlZAcHIVlh)\r\nfatal runtime error: memory allocation failed\r\nerror: Could not compile `foobar`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n</details>\r\n<details>\r\n<summary>failure with 2^32 file</summary>\r\n\r\n```\r\n% truncate -s 4294967296 file # 2 ^ 32\r\n% cargo build\r\n   Compiling foobar v0.1.0 (file:///home/benaryorg/.local/tmp/tmp.nlZAcHIVlh)\r\nfatal runtime error: memory allocation failed\r\nerror: Could not compile `foobar`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n</details>\r\n<details>\r\n<summary>failure with 2^32-1 file</summary>\r\n\r\n```\r\n% truncate -s 4294967295 file # 2^32 - 1\r\n% cargo build\r\n   Compiling foobar v0.1.0 (file:///home/benaryorg/.local/tmp/tmp.nlZAcHIVlh)\r\nthread 'main' panicked at 'assertion failed: line_len == 0 || ((*lines)[line_len - 1] < pos)', libsyntax_pos/lib.rs:969:9\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.27.1 (5f2b325f6 2018-07-07) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `foobar`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>failure with 2^32-1 file & RUST_BACKTRACE</summary>\r\n\r\n```\r\n% RUST_BACKTRACE=1 cargo build\r\n   Compiling foobar v0.1.0 (file:///home/benaryorg/.local/tmp/tmp.nlZAcHIVlh)\r\nthread 'main' panicked at 'assertion failed: line_len == 0 || ((*lines)[line_len - 1] < pos)', libsyntax_pos/lib.rs:969:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:467\r\n   6: std::panicking::begin_panic\r\n   7: syntax_pos::FileMap::next_line\r\n   8: syntax::codemap::CodeMap::new_filemap_and_lines\r\n   9: syntax::ext::source_util::expand_include_str\r\n  10: <F as syntax::ext::base::TTMacroExpander>::expand\r\n  11: syntax::ext::expand::MacroExpander::expand_invoc\r\n  12: syntax::ext::expand::MacroExpander::expand\r\n  13: syntax::ext::expand::MacroExpander::expand_crate\r\n  14: rustc_driver::driver::phase_2_configure_and_expand_inner::{{closure}}\r\n  15: rustc::util::common::time\r\n  16: rustc_driver::driver::phase_2_configure_and_expand\r\n  17: rustc_driver::driver::compile_input\r\n  18: rustc_driver::run_compiler_impl\r\n  19: <scoped_tls::ScopedKey<T>>::set\r\n  20: syntax::with_globals\r\n  21: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  22: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:105\r\n  23: rustc_driver::run\r\n  24: rustc_driver::main\r\n  25: std::rt::lang_start::{{closure}}\r\n  26: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  27: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:105\r\n  28: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:374\r\n             at libstd/rt.rs:58\r\n  29: main\r\n  30: __libc_start_main\r\n  31: <unknown>\r\nquery stack during panic:\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.27.1 (5f2b325f6 2018-07-07) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `foobar`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n</details>\r\n\r\n---\r\n\r\nContent of the file was generated by `base64 /dev/urandom | pv -Ss 16g > file` (and subsequently `truncate`d).\r\nA file created using `truncate` yields only the error of \u22652\u00b3\u00b2 as described above though, so the error might have to do with `include_str!`.\r\n\r\n---\r\n\r\nThis is happening on:\r\n\r\n<details>\r\n<summary>tested rustc stable</summary>\r\n\r\n```\r\n% rustc --version --verbose\r\nrustc 1.27.1 (5f2b325f6 2018-07-07)\r\nbinary: rustc\r\ncommit-hash: 5f2b325f64ed6caa7179f3e04913db437656ec7e\r\ncommit-date: 2018-07-07\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.27.1\r\nLLVM version: 6.0\r\n```\r\n</details>\r\n<details>\r\n<summary>tested rustc nightly</summary>\r\n\r\n```\r\n% rustup run nightly rustc --version --verbose\r\nrustc 1.29.0-nightly (254f8796b 2018-07-13)\r\nbinary: rustc\r\ncommit-hash: 254f8796b729810846e2b97620032ecaf103db33\r\ncommit-date: 2018-07-13\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.29.0-nightly\r\nLLVM version: 7.0\r\n```\r\n</details>\r\n\r\n---\r\n\r\nUsed code:\r\n\r\n```rust\r\nfn main()\r\n{\r\n\tlet _res = include_str!(\"../file\");\r\n}\r\n```\r\n\r\n---\r\n\r\nNightly yields a litte more info:\r\n\r\n<details>\r\n<summary>nightly with backtrace and empty (truncated) file</summary>\r\n\r\n```\r\n% RUST_BACKTRACE=1 rustup run nightly cargo build --verbose\r\n   Compiling foobar v0.1.0 (file:///home/benaryorg/.local/tmp/tmp.nlZAcHIVlh)\r\n     Running `rustc --crate-name foobar src/main.rs --crate-type bin --emit=dep-info,link -C debuginfo=2 -C metadata=0edabc38d37db739 -C extra-filename=-0edabc38d37db739 --out-dir /home/benaryorg/.local/tmp/tmp.nlZAcHIVlh/target/debug/deps -C incremental=/home/benaryorg/.local/tmp/tmp.nlZAcHIVlh/target/debug/incremental -L dependency=/home/benaryorg/.local/tmp/tmp.nlZAcHIVlh/target/debug/deps`\r\nmemory allocation of 8589934592 bytes failed                                                                           error: Could not compile `foobar`.\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --crate-name foobar src/main.rs --crate-type bin --emit=dep-info,link -C debuginfo=2 -C metadata=0edabc38d37db739 -C extra-filename=-0edabc38d37db739 --out-dir /home/benaryorg/.local/tmp/tmp.nlZAcHIVlh/target/debug/deps -C incremental=/home/benaryorg/.local/tmp/tmp.nlZAcHIVlh/target/debug/incremental -L dependency=/home/benaryorg/.local/tmp/tmp.nlZAcHIVlh/target/debug/deps` (signal: 6, SIGABRT: process abort signal)\r\n```\r\n</details>\r\n\r\n---\r\n\r\n**Edit:** seems as if the problem is happening due to running out of RAM because of doubling allocation sizes. Reported `memory allocation of ${n} bytes failed` messages on nightly are always powers of two and htop shows those allocations adding up pretty well. However this also happens with a 1g file. Running out of 16g of RAM when `include_str!()`ing a 1g file shouldn't happen, yet I can't tell where the problematic allocation(s) happen(s). \r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52380/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52380/timeline", "performed_via_github_app": null, "state_reason": null}