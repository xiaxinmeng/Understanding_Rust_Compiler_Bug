{"url": "https://api.github.com/repos/rust-lang/rust/issues/33101", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/33101/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/33101/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/33101/events", "html_url": "https://github.com/rust-lang/rust/issues/33101", "id": 149621425, "node_id": "MDU6SXNzdWUxNDk2MjE0MjU=", "number": 33101, "title": "Macro in extern crate fails to resolve when imported with another macro", "user": {"login": "kylewlacy", "id": 1362179, "node_id": "MDQ6VXNlcjEzNjIxNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1362179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylewlacy", "html_url": "https://github.com/kylewlacy", "followers_url": "https://api.github.com/users/kylewlacy/followers", "following_url": "https://api.github.com/users/kylewlacy/following{/other_user}", "gists_url": "https://api.github.com/users/kylewlacy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylewlacy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylewlacy/subscriptions", "organizations_url": "https://api.github.com/users/kylewlacy/orgs", "repos_url": "https://api.github.com/users/kylewlacy/repos", "events_url": "https://api.github.com/users/kylewlacy/events{/privacy}", "received_events_url": "https://api.github.com/users/kylewlacy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-20T00:46:25Z", "updated_at": "2016-04-20T16:36:24Z", "closed_at": "2016-04-20T16:36:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "# What works\n\nIf I have a `hello!` macro in a module...\n\n``` rust\n// src/hello.rs\nmacro_rules! hello {\n    () => {\n        println!(\"Hello, wrold!\");\n    }\n}\n```\n\nI can use it like this:\n\n``` rust\n// src/main.rs\n#[macro_use] mod hello;\n\nfn main() {\n    hello!();\n}\n\n// $ cargo run\n// Hello, wrold!\n```\n\nI can also, if I so choose, extract this into _another_ macro that actually does the importing (a sort of \"prelude macro\"), then I can use the `hello!` macro as normal:\n\n``` rust\n// src/main.rs\nmacro_rules! prelude {\n    () => {\n        #[macro_use] mod hello;\n    }\n}\n\nprelude!();\n\nfn main() {\n    hello!();\n}\n\n// $ cargo run\n// Hello, wrold!\n```\n\n(see [kylewlacy/rust-macro-include/macro-include-mod](https://github.com/kylewlacy/rust-macro-include/tree/master/macro-include-mod) for a complete cargo project)\n# What doesn't work\n\nNow, I want to work with an external library that exposes a macro, called `hola!`:\n\n``` rust\n// lib/hola/src/lib.rs\n#[macro_export]\nmacro_rules! hola {\n    () => {\n        println!(\"Hola, wrold!\");\n    }\n}\n```\n\nI can, as normal, use it like this:\n\n``` rust\n// src/main.rs\n#[macro_use] extern crate hola;\n\nfn main() {\n    hola!();\n}\n\n// $ cargo run\n// Hola, wrold!\n```\n\nBut, if I try to use another \"prelude macro\" to import _this_ macro, I get an error:\n\n``` rust\n// src/main.rs\nmacro_rules! prelude {\n    () => {\n        #[macro_use] extern crate hola;\n    }\n}\n\nprelude!();\n\nfn main() {\n    hola!();\n}\n\n// $ cargo run\n//    Compiling macro-include-crate v0.1.0 (...)\n// src/main.rs:10:5: 10:9 error: macro undefined: 'hola!'\n// src/main.rs:10     hola!();\n//                    ^~~~\n// error: aborting due to previous error\n// error: Could not compile `macro-include-crate`.\n```\n\n(see [kylewlacy/rust-macro-include/macro-include-crate](https://github.com/kylewlacy/rust-macro-include/tree/master/macro-include-crate) for a complete cargo project)\n\n---\n\nSo, is the above behavior expected, or is it a bug?\n# Rust version\n\nTested on the stable (`rustc 1.8.0 (db2939409 2016-04-11)`), beta (`rustc 1.9.0-beta.1 (37a2869af 2016-04-12)`), and nightly (`rustc 1.10.0-nightly (ed7c56796 2016-04-17)`) compiler channels on OS X (10.11.4)\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/33101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/33101/timeline", "performed_via_github_app": null, "state_reason": "completed"}