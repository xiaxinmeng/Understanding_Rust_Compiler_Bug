{"url": "https://api.github.com/repos/rust-lang/rust/issues/83097", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83097/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83097/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83097/events", "html_url": "https://github.com/rust-lang/rust/issues/83097", "id": 831000191, "node_id": "MDU6SXNzdWU4MzEwMDAxOTE=", "number": 83097, "title": "Confusing error reported for trait impls on DST with the last field being Sized  ", "user": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1624891239, "node_id": "MDU6TGFiZWwxNjI0ODkxMjM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-incorrect", "name": "D-incorrect", "color": "c9f7a3", "default": false, "description": "A diagnostic that is giving misleading or incorrect information"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-03-13T21:28:08Z", "updated_at": "2021-03-16T02:20:21Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Given the following code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=d9a00dc0e329f0ea73b037f3af9f26db\r\n\r\n```rust\r\nuse std::marker::PhantomData;\r\n\r\ntrait Trait {}\r\n\r\nstruct Unsized([u8], ());\r\nstruct Foo<T: ?Sized>(PhantomData<T>);\r\n\r\nimpl<T> Trait for Foo<T> {}\r\nimpl Trait for Foo<Unsized> {}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0119]: conflicting implementations of trait `Trait` for type `Foo<Unsized>`:\r\n --> src/main.rs:9:1\r\n  |\r\n8 | impl<T> Trait for Foo<T> {}\r\n  | ------------------------ first implementation here\r\n9 | impl Trait for Foo<Unsized> {}\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `Foo<Unsized>`\r\n\r\n```\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\nerror[E0277]: the size for values of type `[u8]` cannot be known at compilation time\r\n --> src/lib.rs:1:16\r\n  |\r\n5 | struct Unsized([u8], ());\r\n  |                ^^^^ doesn't have a size known at compile-time\r\n  |\r\n  = help: the trait `Sized` is not implemented for `[u8]`\r\n  = note: only the last field of a struct may have a dynamically sized type\r\n  = help: change the field's type to have a statically known size\r\nhelp: borrowed types always have a statically known size\r\n  |\r\n5 | struct Unsized(&[u8], ());\r\n  |                ^\r\nhelp: the `Box` type always has a statically known size and allocates its contents in the heap\r\n  |\r\n5 | struct Unsized(Box<[u8]>, ());\r\n  |                ^^^^    ^\r\n\r\nerror: aborting due to previous error\r\n\r\n```\r\n\r\nNote: this error is particularly confusing because the trait impls \\*dont\\* overlap after fixing the field ordering error\r\n\r\ncc @estebank ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83097/timeline", "performed_via_github_app": null, "state_reason": null}