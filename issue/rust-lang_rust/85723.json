{"url": "https://api.github.com/repos/rust-lang/rust/issues/85723", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85723/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85723/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85723/events", "html_url": "https://github.com/rust-lang/rust/issues/85723", "id": 902384011, "node_id": "MDU6SXNzdWU5MDIzODQwMTE=", "number": 85723, "title": "Improve help message when using `&'a mut &'a T` and `&'a mut [&'a T]`", "user": {"login": "robinmoussu", "id": 6200547, "node_id": "MDQ6VXNlcjYyMDA1NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/6200547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robinmoussu", "html_url": "https://github.com/robinmoussu", "followers_url": "https://api.github.com/users/robinmoussu/followers", "following_url": "https://api.github.com/users/robinmoussu/following{/other_user}", "gists_url": "https://api.github.com/users/robinmoussu/gists{/gist_id}", "starred_url": "https://api.github.com/users/robinmoussu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robinmoussu/subscriptions", "organizations_url": "https://api.github.com/users/robinmoussu/orgs", "repos_url": "https://api.github.com/users/robinmoussu/repos", "events_url": "https://api.github.com/users/robinmoussu/events{/privacy}", "received_events_url": "https://api.github.com/users/robinmoussu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 3675472455, "node_id": "LA_kwDOAAsO6M7bE0JH", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-variance", "name": "A-variance", "color": "f7e101", "default": false, "description": "Area: Variance (https://doc.rust-lang.org/nomicon/subtyping.html)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-05-26T13:20:35Z", "updated_at": "2021-12-27T03:59:00Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "This is a follow-up of a discussion I initiated on [internals](https://internals.rust-lang.org/t/i-think-the-compiler-could-give-a-better-help-message-here/14742) after watching [crust of Rust: Subtyping and Variance](https://www.youtube.com/watch?v=iVYWDIW71jk).\r\n\r\nBoth `&'a mut &'a T` and `&'a mut [&'a T]` are (I think) always a bug in a program, and never what the programmer intended. What he wanted to write was `&'a mut &'b T` and `&'a mut [&'b T]` (ie. having two different lifetimes).\r\n\r\n[playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=49c0f22394880a47759aedd41a84566c)\r\n\r\nNote: `&'a mut [&'a T]` gives the same error than the following one (see the playground for more details). Using such pattern as an argument to a function, or a the field of a structure is equally buggy.\r\n\r\n```rust\r\nfn foo<'a>(_: &'a mut &'a str) { }\r\n\r\nfn main() {\r\n    let mut x = \"test\";\r\n    foo(&mut x);\r\n    assert_eq!(x, \"test\");\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```rust\r\nerror[E0502]: cannot borrow `x` as immutable because it is also borrowed as mutable\r\n  --> src/main.rs:15:9\r\n   |\r\n14 |         foo(&mut x);\r\n   |             ------ mutable borrow occurs here\r\n15 |         assert_eq!(x, \"test\");\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^\r\n   |         |\r\n   |         immutable borrow occurs here\r\n   |         mutable borrow later used here\r\n```\r\n\r\n\r\nI think that the output should look something like:\r\n\r\n```rust\r\nhelp: it is possible that you want to use two different lifetimes\r\n 5 |  fn foo<'a>(_: &'a mut &'a str) {\r\n   |                 ^^      ^^\r\nhelp: you may try to introduce a new lifetime\r\n 5 | fn foo<'a1, 'a2>(_: &'a1 mut &'a2 str) {\r\n   |        ^^^  ^^^      ^^^      ^^^\r\nhelp: You can learn more about variance and lifetimes (todo: put a link)\r\n```\r\n\r\n---\r\n\r\nTL;DR and notes:\r\n\r\n - `&'a mut &'a T` and `&'a mut [&'a T]` are valid Rust, but is (IMHO) never what the programmer intended to write\r\n - While  `&'a &'a T` is also probably buggy, in practice it never cause issue since `&` doesn\u2019t requires uniqueness for the borrow. This link shouldn\u2019t warn against it.\r\n - `&'a mut S<'a>` is valid, this lint shouldn\u2019t warn against it.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85723/timeline", "performed_via_github_app": null, "state_reason": null}