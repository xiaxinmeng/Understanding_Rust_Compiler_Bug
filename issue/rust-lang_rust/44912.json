{"url": "https://api.github.com/repos/rust-lang/rust/issues/44912", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44912/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44912/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44912/events", "html_url": "https://github.com/rust-lang/rust/issues/44912", "id": 261503347, "node_id": "MDU6SXNzdWUyNjE1MDMzNDc=", "number": 44912, "title": "Make or (|) patterns work with match default binding modes", "user": {"login": "tbg", "id": 5076964, "node_id": "MDQ6VXNlcjUwNzY5NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5076964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbg", "html_url": "https://github.com/tbg", "followers_url": "https://api.github.com/users/tbg/followers", "following_url": "https://api.github.com/users/tbg/following{/other_user}", "gists_url": "https://api.github.com/users/tbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbg/subscriptions", "organizations_url": "https://api.github.com/users/tbg/orgs", "repos_url": "https://api.github.com/users/tbg/repos", "events_url": "https://api.github.com/users/tbg/events{/privacy}", "received_events_url": "https://api.github.com/users/tbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-29T01:00:06Z", "updated_at": "2022-01-29T01:00:15Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the following example which (at the time of writing, i.e. #44614) fails:\r\n\r\n```rust\r\npub fn main() {\r\n    let x = &Some((3, 3));\r\n    let _: &i32 = match x {\r\n        // Here, each of the patterns are treated independently\r\n        //\r\n        // FIXME(tschottdorf): make this compile without the actual `|`.\r\n        // @nikomatsakis suggested perhaps just removing the code which\r\n        // complains but wasn't sure whether it's still required for anything.\r\n        // Opinions?\r\n        //\r\n        //          Some((x, 3)) | &Some((ref x, 5)) => x,\r\n        //                - first binding     ^ bound in different ways\r\n        /*Some((x, 3)) |*/ &Some((ref x, 5)) => x,\r\n        _ => &5i32,\r\n    };\r\n}\r\n```\r\n\r\nIt's not clear whether the rule that prevents this from compiling is still worthwhile.\r\n\r\n@nikomatsakis had this to say:\r\n\r\n> I suspect we can just remove it but it may be used by some code somewhere\r\ni.e., I'm pretty sure the old trans code (obviated by MIR now) used to rely on that (that each binding had a single \"mode\") but...\r\nwell, maybe MIR builder does too, who knows\r\nhonestly maybe not worth supporting\r\n(well, I guess that if we keep the check, we would want to check the inferred mode -- probably better if we ditch it and figure out if we have to change anything else as a result)\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44912/timeline", "performed_via_github_app": null, "state_reason": null}