{"url": "https://api.github.com/repos/rust-lang/rust/issues/106101", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/106101/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/106101/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/106101/events", "html_url": "https://github.com/rust-lang/rust/issues/106101", "id": 1509850132, "node_id": "I_kwDOAAsO6M5Z_nwU", "number": 106101, "title": "Too many errors on non-breaking space characters in source code", "user": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-12-23T23:26:19Z", "updated_at": "2023-01-16T12:30:46Z", "closed_at": "2023-01-16T12:30:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Rustc emits a separate error for every single time U+00A0 appears in the source file.\r\n\r\n_(See #106098 for how someone might very reasonably end up with non-breaking space characters in their source code. Even if that issue gets resolved in rustdoc, I still think rustc's parser needs to handle this better, because non-breaking spaces might be copied in from some other website, or from documentation rendered by older versions of rustdoc.)_\r\n\r\nMy preferred behavior would be that rustc should emit just a single error on the **first** non-breaking space in the entire file. Then silently interpret every subsequent non-breaking space in the file as an ordinary space.\r\n\r\nIf that is too tricky, a more conservative change that would still be an improvement would be to emit a single error for a consecutive sequence of non-breaking space characters (i.e. this would typically result in one error per line, instead of one error per space).\r\n\r\n### Repro:\r\n\r\n```console\r\n$ echo -e '\\u00a0\\u00a0\\u00a0\\u00a0fn main() {}' | rustc /dev/stdin -o a.out\r\nerror: unknown start of token: \\u{a0}\r\n --> /dev/stdin:1:1\r\n  |\r\n1 | \u00a0\u00a0\u00a0\u00a0fn main() {}\r\n  | ^\r\n  |\r\nhelp: Unicode character '\u00a0' (No-Break Space) looks like ' ' (Space), but it is not\r\n  |\r\n1 |  \u00a0\u00a0\u00a0fn main() {}\r\n  | +\r\n\r\nerror: unknown start of token: \\u{a0}\r\n --> /dev/stdin:1:2\r\n  |\r\n1 | \u00a0\u00a0\u00a0\u00a0fn main() {}\r\n  |  ^\r\n  |\r\nhelp: Unicode character '\u00a0' (No-Break Space) looks like ' ' (Space), but it is not\r\n  |\r\n1 | \u00a0 \u00a0\u00a0fn main() {}\r\n  |  +\r\n\r\nerror: unknown start of token: \\u{a0}\r\n --> /dev/stdin:1:3\r\n  |\r\n1 | \u00a0\u00a0\u00a0\u00a0fn main() {}\r\n  |   ^\r\n  |\r\nhelp: Unicode character '\u00a0' (No-Break Space) looks like ' ' (Space), but it is not\r\n  |\r\n1 | \u00a0\u00a0 \u00a0fn main() {}\r\n  |   +\r\n\r\nerror: unknown start of token: \\u{a0}\r\n --> /dev/stdin:1:4\r\n  |\r\n1 | \u00a0\u00a0\u00a0\u00a0fn main() {}\r\n  |    ^\r\n  |\r\nhelp: Unicode character '\u00a0' (No-Break Space) looks like ' ' (Space), but it is not\r\n  |\r\n1 | \u00a0\u00a0\u00a0 fn main() {}\r\n  |    +\r\n\r\nerror: aborting due to 4 previous errors\r\n```\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/106101/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/106101/timeline", "performed_via_github_app": null, "state_reason": "completed"}