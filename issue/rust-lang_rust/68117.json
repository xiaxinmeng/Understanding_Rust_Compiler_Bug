{"url": "https://api.github.com/repos/rust-lang/rust/issues/68117", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68117/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68117/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68117/events", "html_url": "https://github.com/rust-lang/rust/issues/68117", "id": 548378002, "node_id": "MDU6SXNzdWU1NDgzNzgwMDI=", "number": 68117, "title": "Return Result After Mutable Borrow in Loop", "user": {"login": "Tloru", "id": 17747189, "node_id": "MDQ6VXNlcjE3NzQ3MTg5", "avatar_url": "https://avatars.githubusercontent.com/u/17747189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tloru", "html_url": "https://github.com/Tloru", "followers_url": "https://api.github.com/users/Tloru/followers", "following_url": "https://api.github.com/users/Tloru/following{/other_user}", "gists_url": "https://api.github.com/users/Tloru/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tloru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tloru/subscriptions", "organizations_url": "https://api.github.com/users/Tloru/orgs", "repos_url": "https://api.github.com/users/Tloru/repos", "events_url": "https://api.github.com/users/Tloru/events{/privacy}", "received_events_url": "https://api.github.com/users/Tloru/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-11T04:13:15Z", "updated_at": "2020-01-11T11:47:31Z", "closed_at": "2020-01-11T11:47:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm writing a fairly standard bytecode interpreter in Rust. The core VM loop looks something like this:\r\n```rust\r\n// contains mutable program state\r\nstruct VM { /* ip, stack, etc. */ }\r\n\r\nimpl VM {\r\n    fn step(&mut self) -> Result<(), &str> {\r\n        // decode and execute a single potentially fallible bytecode op\r\n        // oh, an error occured:\r\n        return Err(\"(\u2022_\u2022 ?)\")\r\n    }\r\n    \r\n    pub fn run(&mut self) -> Result<(), &str> {\r\n        // stepping through the program\r\n        loop {\r\n            // stop running if something goes wrong\r\n            self.step()?\r\n        }\r\n    }\r\n}\r\n```\r\nHowever, this code fails to compile, throwing`E0499`:\r\n```\r\nerror[E0499]: cannot borrow `*self` as mutable more than once at a time\r\n  --> src/lib.rs:15:13\r\n   |\r\n11 |     pub fn run(&mut self) -> Result<(), &str> {\r\n   |                - let's call the lifetime of this reference `'1`\r\n...\r\n15 |             self.step()?\r\n   |             ^^^^       - returning this value requires that `*self` is borrowed for `'1`\r\n   |             |\r\n   |             mutable borrow starts here in previous iteration of loop\r\n```\r\nI think I understand why this error is occurring - `self.step()?` mutably borrows `self`, and upon the next iteration of the loop, another mutable reference to `self` can not be taken out. Is there any way to restructure the above code while still maintaining the same behaviour without encountering an error?\r\n\r\nI'm not sure how to proceed - I've refactored the code many times, following suggestions from: \r\nhttps://stackoverflow.com/questions/39622783/how-can-i-do-a-mutable-borrow-in-a-for-loop\r\nhttps://stackoverflow.com/questions/36667723/can-i-reset-a-borrow-of-a-local-in-a-loop\r\nhttps://users.rust-lang.org/t/single-threaded-code-mutable-borrow-in-loop/20879/7\r\nhttps://github.com/rust-lang/rust/issues/21906\r\n... And a few other sources I've left out for brevity.\r\n\r\nOne question is particular is very similar to the above situation, however the answers offered were less than satisfactory, as I don't mind changing the structure / signatures of my program to achieve satisfactory results:\r\nhttps://stackoverflow.com/questions/46393890/mutable-borrow-in-loop\r\n\r\nThat's all :)\r\nAny help or pointers in the right direction are appreciated.", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68117/timeline", "performed_via_github_app": null, "state_reason": "completed"}