{"url": "https://api.github.com/repos/rust-lang/rust/issues/61815", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61815/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61815/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61815/events", "html_url": "https://github.com/rust-lang/rust/issues/61815", "id": 455983908, "node_id": "MDU6SXNzdWU0NTU5ODM5MDg=", "number": 61815, "title": "Projecting to an associated constant fails but with wrong reason", "user": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1405345617, "node_id": "MDU6TGFiZWwxNDA1MzQ1NjE3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lazy-normalization", "name": "A-lazy-normalization", "color": "f7e101", "default": false, "description": "Area: lazy normalization (tracking issue: #60471)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-13T22:43:14Z", "updated_at": "2020-02-06T15:46:17Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When you have:\r\n\r\n```rust\r\ntrait Tr {\r\n    const C: usize = 0;\r\n    fn fun(x: [u8; Self::C]) -> [u8; 0] { x }\r\n}\r\n```\r\n\r\nyou get the usual problem:\r\n\r\n```\r\nerror[E0599]: no associated item named `C` found for type `Self` in the current scope\r\n --> src/lib.rs:3:26\r\n  |\r\n3 |     fn fun(x: [u8; Self::C]) -> [u8; 0] { x }\r\n  |                          ^ associated item not found in `Self`\r\n  |\r\n  = help: items from traits can only be used if the trait is implemented and in scope\r\n  = note: the following trait defines an item `C`, perhaps you need to implement it:\r\n          candidate #1: `Tr`\r\n```\r\n\r\nThat this errors is *right*. However, it fails for the wrong reason.\r\n\r\nWhat should happen here is that `Self::C` is seen as an opaque constant the value of which you don't get to assume in `fun`'s body. Therefore you should get a type error:\r\n\r\n```\r\n\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:L:C\r\n  |\r\nL |     fn fun(x: [u8; Self::C]) -> [u8; 0] { x }\r\n  |                                           ^ expected [u8; 0], found [u8; Self::C]\r\n  |\r\n  = note: expected type `[u8; 0]`\r\n             found type `[u8; Self::C]`\r\n```\r\n\r\ncc https://github.com/rust-lang/rust/pull/61812\r\ncc https://github.com/rust-lang/rust/issues/29661", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61815/timeline", "performed_via_github_app": null, "state_reason": null}