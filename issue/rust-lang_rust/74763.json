{"url": "https://api.github.com/repos/rust-lang/rust/issues/74763", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74763/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74763/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74763/events", "html_url": "https://github.com/rust-lang/rust/issues/74763", "id": 665669587, "node_id": "MDU6SXNzdWU2NjU2Njk1ODc=", "number": 74763, "title": "#[track_caller] for allocator APIs?", "user": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-25T22:17:23Z", "updated_at": "2020-07-26T09:55:38Z", "closed_at": "2020-07-25T22:36:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Apologies if this has been raised before, but I've been playing around with trying to track where allocations happen with something like so:\r\n\r\n```Rust\r\nuse libc_print::libc_println;\r\nuse std::alloc::{GlobalAlloc, Layout};\r\nuse std::panic::Location;\r\n\r\npub struct TracedAlloc<T: GlobalAlloc> {\r\n    pub allocator: T,\r\n}\r\n\r\nunsafe impl<T> GlobalAlloc for TracedAlloc<T>\r\nwhere\r\n    T: GlobalAlloc,\r\n{\r\n    #[track_caller]\r\n    unsafe fn alloc(&self, layout: Layout) -> *mut u8 {\r\n        libc_println!(\"Alloc {:?} at {:?}\", layout, Location::caller());\r\n        self.allocator.alloc(layout)\r\n    }\r\n\r\n    #[track_caller]\r\n    unsafe fn dealloc(&self, ptr: *mut u8, layout: Layout) {\r\n        libc_println!(\"Dealloc {:?} at {:?}\", layout, Location::caller());\r\n        self.allocator.dealloc(ptr, layout)\r\n    }\r\n}\r\n```\r\n\r\nHowever the caller location is always the line I've put `#[global_allocator]` which makes `#[track_caller]` useless in this context.\r\n\r\n_Originally posted by @xd009642 in https://github.com/rust-lang/rust/issues/47809#issuecomment-663910253_\r\n\r\n---\r\n\r\nnote from @anp: I'm not sure how the global allocator hooks in but this might be possible?", "closed_by": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74763/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74763/timeline", "performed_via_github_app": null, "state_reason": "completed"}