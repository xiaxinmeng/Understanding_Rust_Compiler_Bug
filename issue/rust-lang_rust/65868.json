{"url": "https://api.github.com/repos/rust-lang/rust/issues/65868", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65868/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65868/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65868/events", "html_url": "https://github.com/rust-lang/rust/issues/65868", "id": 512969228, "node_id": "MDU6SXNzdWU1MTI5NjkyMjg=", "number": 65868, "title": "Slightly confusing grammar in pinning docs.", "user": {"login": "nathan-at-least", "id": 4369700, "node_id": "MDQ6VXNlcjQzNjk3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4369700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathan-at-least", "html_url": "https://github.com/nathan-at-least", "followers_url": "https://api.github.com/users/nathan-at-least/followers", "following_url": "https://api.github.com/users/nathan-at-least/following{/other_user}", "gists_url": "https://api.github.com/users/nathan-at-least/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathan-at-least/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathan-at-least/subscriptions", "organizations_url": "https://api.github.com/users/nathan-at-least/orgs", "repos_url": "https://api.github.com/users/nathan-at-least/repos", "events_url": "https://api.github.com/users/nathan-at-least/events{/privacy}", "received_events_url": "https://api.github.com/users/nathan-at-least/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-27T13:53:43Z", "updated_at": "2019-10-27T15:22:47Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I've just read the `std::pin` docs as part of learning `std::future::Future` and attempting to write my own combinator. This section is pretty dense for my first read, and only at the very end, when it mentioned `Future` combinators did I realize I had a misunderstanding through the entire reading due to [this phrase](https://github.com/rust-lang/rust/blob/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/libcore/pin.rs#L211) in the projections section ([link to rendered docs](https://doc.rust-lang.org/std/pin/#projections-and-structural-pinning)):\r\n\r\n> every field can be either projected to a pinned reference, or have pinning removed as part of the projection\r\n\r\nAt the end, the sentence that made me realize I had a misunderstanding [is here](https://github.com/rust-lang/rust/blob/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/libcore/pin.rs#L338-L341):\r\n\r\n> But if your combinator contains any other data that does not need to be pinned, you can make those fields not structural and hence freely access them with a mutable reference even when you just have Pin<&mut Self> (such as in your own poll implementation).\r\n\r\nMy misunderstanding, on reading the first quote, was to believe that if any field is a pinned projection, then all other fields must also be pinned projections, or if any field is not, all other fields must not be. For me, if the first phrase said this instead, I think it would be clearer:\r\n\r\n> each field can either be projected to a pinned reference, or have pinning removed as part of the projection.\r\n\r\nI'm a native English speaker, and I'm still not sure if the difference between my suggestion and the current text implies the technical difference I intend here, and I'm not sure if other readers might encounter a similar confusion. (Technical writing is hard!)\r\n\r\nTo really drive it home, maybe append the following sentence:\r\n\r\n> Fields may be projected to pinned or unpinned references independent of other fields.\r\n\r\nI hope this helps make it easier for first-time readers to understand the projections and structural pinning section a bit better.\r\n\r\nThanks for your effort!\r\n\r\nps: Rust is awesome, and the core/std docs are excellent. ;-)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65868/timeline", "performed_via_github_app": null, "state_reason": null}