{"url": "https://api.github.com/repos/rust-lang/rust/issues/71723", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71723/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71723/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71723/events", "html_url": "https://github.com/rust-lang/rust/issues/71723", "id": 610439060, "node_id": "MDU6SXNzdWU2MTA0MzkwNjA=", "number": 71723, "title": "Async function leads to a \"more general type\" error", "user": {"login": "stephaneyfx", "id": 24405066, "node_id": "MDQ6VXNlcjI0NDA1MDY2", "avatar_url": "https://avatars.githubusercontent.com/u/24405066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephaneyfx", "html_url": "https://github.com/stephaneyfx", "followers_url": "https://api.github.com/users/stephaneyfx/followers", "following_url": "https://api.github.com/users/stephaneyfx/following{/other_user}", "gists_url": "https://api.github.com/users/stephaneyfx/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephaneyfx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephaneyfx/subscriptions", "organizations_url": "https://api.github.com/users/stephaneyfx/orgs", "repos_url": "https://api.github.com/users/stephaneyfx/repos", "events_url": "https://api.github.com/users/stephaneyfx/events{/privacy}", "received_events_url": "https://api.github.com/users/stephaneyfx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}], "state": "open", "locked": false, "assignee": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 16, "created_at": "2020-04-30T22:48:56Z", "updated_at": "2022-07-11T02:21:11Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Rustc complains about a type being more general than the other when testing if the `Future` returned by an `async` function is `Send`. The same code without `async` sugar is accepted by the compiler.\r\n\r\nThis might be related to #60658.\r\n\r\nI tried to minimize further, but removing `.flatten()`, the boxing with a trait object or even the mapping to an empty stream makes the code compile.\r\n\r\n[Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=e390e86879b7d131ad619292c2c429e5)\r\n\r\n```rust\r\nuse futures::{\r\n    future::ready,\r\n    stream::{empty, iter},\r\n    Stream, StreamExt,\r\n};\r\nuse std::future::Future;\r\nuse std::pin::Pin;\r\n\r\nfn is_send<T: Send>(_: T) {}\r\n\r\npub fn test() {\r\n    let _ = is_send(make_future()); // Ok\r\n    let _ = is_send(make_future_2());\r\n}\r\n\r\nfn make_future() -> impl Future<Output = ()> {\r\n    iter(Some({\r\n        let s = empty::<()>();\r\n        Box::pin(s) as Pin<Box<dyn Stream<Item = ()> + Send + 'static>>\r\n    }))\r\n    .map(|_| empty::<()>())\r\n    .flatten()\r\n    .for_each(|_| ready(()))\r\n}\r\n\r\n// Same as make_future, just async\r\nasync fn make_future_2() {\r\n    iter(Some({\r\n        let s = empty::<()>();\r\n        Box::pin(s) as Pin<Box<dyn Stream<Item = ()> + Send + 'static>>\r\n    }))\r\n    .map(|_| empty::<()>())\r\n    .flatten()\r\n    .for_each(|_| ready(()))\r\n    .await\r\n}\r\n```\r\n\r\n### Expected result\r\nIt compiles successfully -- `is_send(make_future())` and `is_send(make_future_2())` are both accepted by the compiler.\r\n\r\n### Actual result\r\n`is_send(make_future_2())` is rejected with the following error:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/lib.rs:13:13\r\n   |\r\n13 |     let _ = is_send(make_future_2());\r\n   |             ^^^^^^^ one type is more general than the other\r\n   |\r\n   = note: expected type `std::ops::FnOnce<(std::pin::Pin<std::boxed::Box<dyn futures_core::stream::Stream<Item = ()> + std::marker::Send>>,)>`\r\n              found type `std::ops::FnOnce<(std::pin::Pin<std::boxed::Box<dyn futures_core::stream::Stream<Item = ()> + std::marker::Send>>,)>`\r\n```\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"nikomatsakis\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71723/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71723/timeline", "performed_via_github_app": null, "state_reason": null}