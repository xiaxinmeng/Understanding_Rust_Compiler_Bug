{"url": "https://api.github.com/repos/rust-lang/rust/issues/88938", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88938/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88938/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88938/events", "html_url": "https://github.com/rust-lang/rust/issues/88938", "id": 996215924, "node_id": "I_kwDOAAsO6M47YQx0", "number": 88938, "title": "ICE \"Found outer attribute Attribute...\" with #[derive(thiserrror::Error)] and #[allow(..)]", "user": {"login": "jgallagher", "id": 1435635, "node_id": "MDQ6VXNlcjE0MzU2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1435635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgallagher", "html_url": "https://github.com/jgallagher", "followers_url": "https://api.github.com/users/jgallagher/followers", "following_url": "https://api.github.com/users/jgallagher/following{/other_user}", "gists_url": "https://api.github.com/users/jgallagher/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgallagher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgallagher/subscriptions", "organizations_url": "https://api.github.com/users/jgallagher/orgs", "repos_url": "https://api.github.com/users/jgallagher/repos", "events_url": "https://api.github.com/users/jgallagher/events{/privacy}", "received_events_url": "https://api.github.com/users/jgallagher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-09-14T16:34:14Z", "updated_at": "2021-11-08T01:08:16Z", "closed_at": "2021-11-08T01:08:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nuse thiserror::Error;\r\n\r\n#![warn(single_use_lifetimes)] // not legal here, but the ICE disappears if this is moved above the `use`\r\n\r\n#[derive(Error)]\r\n#[allow(single_use_lifetimes)]\r\nenum Foo {\r\n    #[error(\"blah blah\")]\r\n    Bar,\r\n}\r\n```\r\n\r\nPlayground link: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=b149086e3735754ac70811ca05103814\r\n\r\nThis might be a dupe of #87936, but the combination of the `#![warn(..)]` placement and the fact that this is just using a proc macro led me to think it's possible it's different enough to be interesting.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.55.0 (c8dfcfe04 2021-09-06)\r\nbinary: rustc\r\ncommit-hash: c8dfcfe046a7680554bf4eb612bad840e7631c4b\r\ncommit-date: 2021-09-06\r\nhost: x86_64-apple-darwin\r\nrelease: 1.55.0\r\nLLVM version: 12.0.1\r\n```\r\n\r\nAlso occurs in nightly:\r\n\r\n```\r\nrustc 1.57.0-nightly (9bb77da74 2021-09-13)\r\nbinary: rustc\r\ncommit-hash: 9bb77da74dac4768489127d21e32db19b59ada5b\r\ncommit-date: 2021-09-13\r\nhost: x86_64-apple-darwin\r\nrelease: 1.57.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: an inner attribute is not permitted in this context\r\n --> src/main.rs:3:1\r\n  |\r\n3 | #![warn(single_use_lifetimes)] // not legal here, but the ICE disappears if this is moved above the `use`\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: inner attributes, like `#![no_std]`, annotate the item enclosing them, and are usually found at the beginning of source files. Outer attributes, like `#[test]`, annotate the item following them.\r\n\r\nthread 'rustc' panicked at 'Found outer attribute Attribute { kind: Normal(AttrItem { path: Path { span: src/main.rs:6:3: 6:8 (#0), segments: [PathSegment { ident: allow#0, id: NodeId(4294967040), args: None }], tokens: None }, args: Delimited(DelimSpan { open: src/main.rs:6:8: 6:9 (#0), close: src/main.rs:6:29: 6:30 (#0) }, Parenthesis, TokenStream([(Token(Token { kind: Ident(\"single_use_lifetimes\", false), span: src/main.rs:6:9: 6:29 (#0) }), Alone)])), tokens: None }, Some(LazyTokenStream(AttrAnnotatedTokenStream([(Token(Token { kind: Pound, span: src/main.rs:6:1: 6:2 (#0) }), Alone), (Delimited(DelimSpan { open: src/main.rs:6:2: 6:3 (#0), close: src/main.rs:6:30: 6:31 (#0) }, Bracket, AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"allow\", false), span: src/main.rs:6:3: 6:8 (#0) }), Alone), (Delimited(DelimSpan { open: src/main.rs:6:8: 6:9 (#0), close: src/main.rs:6:29: 6:30 (#0) }, Paren, AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"single_use_lifetimes\", false), span: src/main.rs:6:9: 6:29 (#0) }), Alone)])), Alone)])), Alone)])))), id: AttrId(2), style: Outer, span: src/main.rs:6:1: 6:31 (#0) } after inner attrs [Attribute { kind: Normal(AttrItem { path: Path { span: src/main.rs:3:4: 3:8 (#0), segments: [PathSegment { ident: warn#0, id: NodeId(4294967040), args: None }], tokens: None }, args: Delimited(DelimSpan { open: src/main.rs:3:8: 3:9 (#0), close: src/main.rs:3:29: 3:30 (#0) }, Parenthesis, TokenStream([(Token(Token { kind: Ident(\"single_use_lifetimes\", false), span: src/main.rs:3:9: 3:29 (#0) }), Alone)])), tokens: None }, Some(LazyTokenStream(AttrAnnotatedTokenStream([(Token(Token { kind: Pound, span: src/main.rs:3:1: 3:2 (#0) }), Joint), (Token(Token { kind: Not, span: src/main.rs:3:2: 3:3 (#0) }), Alone), (Delimited(DelimSpan { open: src/main.rs:3:3: 3:4 (#0), close: src/main.rs:3:30: 3:31 (#0) }, Bracket, AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"warn\", false), span: src/main.rs:3:4: 3:8 (#0) }), Alone), (Delimited(DelimSpan { open: src/main.rs:3:8: 3:9 (#0), close: src/main.rs:3:29: 3:30 (#0) }, Paren, AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"single_use_lifetimes\", false), span: src/main.rs:3:9: 3:29 (#0) }), Alone)])), Alone)])), Alone)])))), id: AttrId(0), style: Inner, span: src/main.rs:3:1: 3:31 (#0) }]', compiler/rustc_ast/src/tokenstream.rs:224:33\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.55.0 (c8dfcfe04 2021-09-06) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C split-debuginfo=unpacked -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: _rust_begin_unwind\r\n   1: std::panicking::begin_panic_fmt\r\n   2: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once\r\n   3: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next\r\n   4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter\r\n   5: rustc_ast::tokenstream::AttrAnnotatedTokenStream::to_tokenstream\r\n   6: rustc_parse::prepend_attrs\r\n   7: rustc_parse::nt_to_tokenstream\r\n   8: <rustc_expand::proc_macro::ProcMacroDerive as rustc_expand::base::MultiItemModifier>::expand\r\n   9: rustc_expand::expand::MacroExpander::fully_expand_fragment\r\n  10: rustc_expand::expand::MacroExpander::expand_crate\r\n  11: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  12: rustc_interface::passes::configure_and_expand\r\n  13: rustc_interface::queries::Queries::expansion\r\n  14: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  15: rustc_span::with_source_map\r\n  16: rustc_interface::interface::create_compiler_and_run\r\n  17: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88938/timeline", "performed_via_github_app": null, "state_reason": "completed"}