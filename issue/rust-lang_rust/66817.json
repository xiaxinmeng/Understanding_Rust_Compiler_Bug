{"url": "https://api.github.com/repos/rust-lang/rust/issues/66817", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66817/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66817/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66817/events", "html_url": "https://github.com/rust-lang/rust/issues/66817", "id": 529526322, "node_id": "MDU6SXNzdWU1Mjk1MjYzMjI=", "number": 66817, "title": "Issue with non-lifetime trait used ion associated type in HRTB context", "user": {"login": "Lucretiel", "id": 1823405, "node_id": "MDQ6VXNlcjE4MjM0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1823405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lucretiel", "html_url": "https://github.com/Lucretiel", "followers_url": "https://api.github.com/users/Lucretiel/followers", "following_url": "https://api.github.com/users/Lucretiel/following{/other_user}", "gists_url": "https://api.github.com/users/Lucretiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lucretiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lucretiel/subscriptions", "organizations_url": "https://api.github.com/users/Lucretiel/orgs", "repos_url": "https://api.github.com/users/Lucretiel/repos", "events_url": "https://api.github.com/users/Lucretiel/events{/privacy}", "received_events_url": "https://api.github.com/users/Lucretiel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-27T19:06:31Z", "updated_at": "2019-11-27T19:08:43Z", "closed_at": "2019-11-27T19:08:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider this example ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=8b167e1b80dbeca0a61c34b56ccbb0b0)):\r\n\r\n```rust\r\nuse std::fmt::{self, Display, Formatter};\r\n\r\n// This struct provides a `Display` implementation that iterates over\r\n// &collection, writing each element in sequence.\r\npub struct Concat<C> {\r\n    collection: C,\r\n}\r\n\r\nimpl<C> Display for Concat<C>\r\n    where for <'a> &'a C: IntoIterator,\r\n    for <'a> <&'a C as IntoIterator>::Item: Display,\r\n{\r\n    fn fmt(&self, f: &mut Formatter) -> fmt::Result {\r\n        self.collection.into_iter().try_for_each(move |element| {\r\n            element.fmt(f)\r\n        })\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let collection = vec![1u32, 2, 3, 4, 5, 6];\r\n    let concat = Concat { collection };\r\n    println!(\"{}\", concat);\r\n}\r\n```\r\n\r\nWe define a struct, `Concat`, that provides a `Display` implementation by immutably iterating over `collection` and writing each element to `f` in sequence. This trait implementation depends on the following trait bounds:\r\n\r\n```rust\r\nfor<'a> &'a C: IntoIterator,  // immutable iteration\r\nfor<'a> <&'a C as IntoIterator>::Item: Display  // Items are displayable\r\n```\r\n\r\nHowever, the latter trait bound appears to not be binding correctly, as the example code fails to compile with the following error:\r\n\r\n```\r\nerror[E0277]: `<&'a std::vec::Vec<u32> as std::iter::IntoIterator>::Item` doesn't implement `std::fmt::Display`\r\n  --> src/main.rs:23:20\r\n   |\r\n23 |     println!(\"{}\", concat);\r\n   |                    ^^^^^^ `<&'a std::vec::Vec<u32> as std::iter::IntoIterator>::Item` cannot be formatted with the default formatter\r\n   |\r\n   = help: the trait `for<'a> std::fmt::Display` is not implemented for `<&'a std::vec::Vec<u32> as std::iter::IntoIterator>::Item`\r\n   = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead\r\n   = note: required because of the requirements on the impl of `std::fmt::Display` for `Concat<std::vec::Vec<u32>>`\r\n   = note: required by `std::fmt::Display::fmt`\r\n```\r\n\r\nIt's worth noting that the code *does* compile if you don't include the usage in `main`. I've tried a lot of variations on this code, but the issue seems to boil down to the fact that Rust seems to consider `for<'a> Display` different than display.\r\n\r\nI posted this [issue](https://stackoverflow.com/q/53364798/864406) on stackoverflow, and got a [response](https://stackoverflow.com/a/53365549/864406) with the following workaround:\r\n\r\n```rust\r\nmod private {\r\n    use std::fmt;\r\n    pub trait Display<'a>: fmt::Display {}\r\n    impl<'a, T> Display<'a> for T where T: fmt::Display {}\r\n}\r\n\r\nimpl<C> fmt::Display for Concat<C>\r\nwhere\r\n    for<'a> &'a Container: IntoIterator,\r\n    for<'a> <&'a Container as IntoIterator>::Item: private::Display<'a>,\r\n...\r\n```\r\n\r\nIn summary, there appears to be an issue with binding an associated type to a trait in an HRTB context.", "closed_by": {"login": "Lucretiel", "id": 1823405, "node_id": "MDQ6VXNlcjE4MjM0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1823405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lucretiel", "html_url": "https://github.com/Lucretiel", "followers_url": "https://api.github.com/users/Lucretiel/followers", "following_url": "https://api.github.com/users/Lucretiel/following{/other_user}", "gists_url": "https://api.github.com/users/Lucretiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lucretiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lucretiel/subscriptions", "organizations_url": "https://api.github.com/users/Lucretiel/orgs", "repos_url": "https://api.github.com/users/Lucretiel/repos", "events_url": "https://api.github.com/users/Lucretiel/events{/privacy}", "received_events_url": "https://api.github.com/users/Lucretiel/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66817/timeline", "performed_via_github_app": null, "state_reason": "completed"}