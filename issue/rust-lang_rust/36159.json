{"url": "https://api.github.com/repos/rust-lang/rust/issues/36159", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/36159/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/36159/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/36159/events", "html_url": "https://github.com/rust-lang/rust/issues/36159", "id": 174181897, "node_id": "MDU6SXNzdWUxNzQxODE4OTc=", "number": 36159, "title": "rustdoc panics when some unstable features is used without `#![feature(\u2026)]`", "user": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-31T04:28:13Z", "updated_at": "2017-01-04T11:25:19Z", "closed_at": "2017-01-04T11:25:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(May be same as #31647?)\n\nWith the source:\n\n``` rust\n#[b] struct S;\n```\n\nRunning `rustdoc 1.rs` gives the error:\n\n```\nerror: The attribute `b` is currently unknown to the compiler and may have meaning added to it in the future (see issue #29642)\n --> 1.rs:1:1\n  |\n1 | #[b]\n  | ^^^^\n  |\n  = help: add #![feature(custom_attribute)] to the crate attributes to enable\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: run with `RUST_BACKTRACE=1` for a backtrace\n\nthread 'rustc' panicked at 'phase_2_configure_and_expand aborted in rustdoc!: 1', ../src/libcore/result.rs:783\nstack backtrace:\n   1:        0x10901be0a - std::sys::backtrace::tracing::imp::write::h46f28e67d38b4637\n   2:        0x10902a5cf - std::panicking::default_hook::{{closure}}::h1d3243f546573ff4\n   3:        0x109028bcd - std::panicking::default_hook::h96c288d728df3ebf\n   4:        0x109029266 - std::panicking::rust_panic_with_hook::hb1322e5f2588b4db\n   5:        0x109029104 - std::panicking::begin_panic::hfbeda5aad583dc32\n   6:        0x109029022 - std::panicking::begin_panic_fmt::h4fe9fb9d5109c4bf\n   7:        0x109028f87 - rust_begin_unwind\n   8:        0x109088e50 - core::panicking::panic_fmt::h4395919ece15c671\n   9:        0x104989912 - core::result::unwrap_failed::h7169715daa6d1b4b\n  10:        0x104a57626 - rustdoc::core::run_core::h3ae16d38e236204c\n  11:        0x104981826 - std::panicking::try::do_call::h3d5952fa0eca5ef1\n  12:        0x1090311aa - __rust_maybe_catch_panic\n  13:        0x1049a7e36 - <F as alloc::boxed::FnBox<A>>::call_box::ha55f7783d6f9e562\n  14:        0x109027a44 - std::sys::thread::Thread::new::thread_start::h5b631f48cd23f128\n  15:     0x7fff92d3499c - _pthread_body\n  16:     0x7fff92d34919 - _pthread_start\n```\n\nSimilar for other features like:\n- `fn main() { Ok(())?; }`\n- `fn main() { box 1; }`\n- `const fn f() {}`\n- `#[structural_match] struct S;`\n- `#![no_core]`\n- `#[naked] fn a() {}`\n- `#[start] fn start() {}`\n- `fn b() { 1: i32; }`\n- `fn b() { let a: ! = 0; }`\n- `fn a() { 1...2; }`\n- `trait T { type A = i32; }`\n- `trait T { const a: i32; }`\n- `trait T {} impl T for .. {}`\n- `fn \u00e1() {}`\n- `extern \"rust-intrinsic\" fn a() {}`\n\nBut some features are fine (won't panic):\n- `unsafe fn main() { std::intrinsics::ctpop(1); }` // and other library features\n- `fn main() { asm!(\"\"); }`\n- `#![cfg(target_feature=\"simd\")]`\n- `fn a() { concat_idents!(a); }`\n\nRepro on both stable and nightly (1.11 \u2013 1.13).\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/36159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/36159/timeline", "performed_via_github_app": null, "state_reason": "completed"}