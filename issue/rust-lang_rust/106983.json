{"url": "https://api.github.com/repos/rust-lang/rust/issues/106983", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/106983/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/106983/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/106983/events", "html_url": "https://github.com/rust-lang/rust/issues/106983", "id": 1536535815, "node_id": "I_kwDOAAsO6M5bla0H", "number": 106983, "title": "Don't run late lints that are disabled in the entire crate", "user": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-01-17T15:02:17Z", "updated_at": "2023-01-19T15:46:10Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Related: https://github.com/rust-lang/rust/issues/59024\r\n\r\n\r\nRustc comes with a respectable number of lints, but clippy comes with a _lot_. Furthermore, Clippy has the concept of a \"restriction\" lint: a lint that is probably not useful to most users (and is not itself a judgement on \"good rust style\") but will be useful for codebases operating under certain constraints (for example, the lints that forbid unwrap/expect/panic/indexing). \r\n\r\nThe current linting infrastructure runs all lints at all times, only using lint levels to determine if a lint must be emitted. This basically means that most codebases running clippy are spending a lot of time running the code for lints they never see. This is true for rustc as well, though it has fewer Allow lints by default.\r\n\r\nI proposed https://github.com/rust-lang/rust/issues/59024 in the past so that lint code only gets run when the lint is enabled. There are some tricky architecture constraints around hotswapping the lint list whilst traversing the AST.\r\n\r\n_However_, I don't think there's anything stopping us from doing this at a global level: it should not be hard or expensive to collect the list of enabled lints in the crate by the time late lint passes run, just collect all non-`allow()` lint attributes and combine them with the defaults, removing any that were manually disabled at the crate level.\r\n\r\nThoughts? Clippy is not _super_ slow and this isn't a bottleneck, but as we add lints this becomes more of a problem, and it also prevents us from adding potentially computationally expensive restriction lints (one of the best things about restriction lints is that we can be more flexible around them!)\r\n\r\n\r\ncc @rust-lang/clippy ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/106983/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/106983/timeline", "performed_via_github_app": null, "state_reason": null}