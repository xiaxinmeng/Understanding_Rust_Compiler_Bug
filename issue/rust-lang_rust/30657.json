{"url": "https://api.github.com/repos/rust-lang/rust/issues/30657", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/30657/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/30657/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/30657/events", "html_url": "https://github.com/rust-lang/rust/issues/30657", "id": 124427404, "node_id": "MDU6SXNzdWUxMjQ0Mjc0MDQ=", "number": 30657, "title": "f32 methods which work differently on MSVC are not inlined cross-crate.", "user": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-31T03:30:18Z", "updated_at": "2016-01-12T21:15:24Z", "closed_at": "2016-01-12T21:15:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Note the missing `#[inline]` on the inner functions:\n\n``` rust\n    #[inline]\n    pub fn floor(self) -> f32 {\n        return floorf(self);\n\n        // On MSVC LLVM will lower many math intrinsics to a call to the\n        // corresponding function. On MSVC, however, many of these functions\n        // aren't actually available as symbols to call, but rather they are all\n        // `static inline` functions in header files. This means that from a C\n        // perspective it's \"compatible\", but not so much from an ABI\n        // perspective (which we're worried about).\n        //\n        // The inline header functions always just cast to a f64 and do their\n        // operation, so we do that here as well, but only for MSVC targets.\n        //\n        // Note that there are many MSVC-specific float operations which\n        // redirect to this comment, so `floorf` is just one case of a missing\n        // function on MSVC, but there are many others elsewhere.\n        #[cfg(target_env = \"msvc\")]\n        fn floorf(f: f32) -> f32 { (f as f64).floor() as f32 }\n        #[cfg(not(target_env = \"msvc\"))]\n        fn floorf(f: f32) -> f32 { unsafe { intrinsics::floorf32(f) } }\n    }\n```\n\nNowadays it could probably be:\n\n``` rust\n    #[inline]\n    pub fn floor(self) -> f32 {\n        #[cfg(target_env = \"msvc\")]\n        return (self as f64).floor() as f32;\n        #[cfg(not(target_env = \"msvc\"))]\n        return unsafe { intrinsics::floorf32(self) };\n    }\n```\n\nThe full list:\n\n```\nfloor\nceil\npowf\nexp\nln\nlog10\nsin\ncos\nacosf\nasinf\natan2f\natanf\ncoshf\nfrexpf\nldexpf\nsinhf\ntanf\ntanhf\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/30657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/30657/timeline", "performed_via_github_app": null, "state_reason": "completed"}