{"url": "https://api.github.com/repos/rust-lang/rust/issues/90378", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90378/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90378/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90378/events", "html_url": "https://github.com/rust-lang/rust/issues/90378", "id": 1038601295, "node_id": "I_kwDOAAsO6M4958xP", "number": 90378, "title": "replace parameters order matter", "user": {"login": "Stargateur", "id": 7503742, "node_id": "MDQ6VXNlcjc1MDM3NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/7503742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stargateur", "html_url": "https://github.com/Stargateur", "followers_url": "https://api.github.com/users/Stargateur/followers", "following_url": "https://api.github.com/users/Stargateur/following{/other_user}", "gists_url": "https://api.github.com/users/Stargateur/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stargateur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stargateur/subscriptions", "organizations_url": "https://api.github.com/users/Stargateur/orgs", "repos_url": "https://api.github.com/users/Stargateur/repos", "events_url": "https://api.github.com/users/Stargateur/events{/privacy}", "received_events_url": "https://api.github.com/users/Stargateur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-10-28T14:40:15Z", "updated_at": "2023-02-19T12:11:53Z", "closed_at": "2023-02-19T12:11:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[`replace`](https://doc.rust-lang.org/std/mem/fn.replace.html) can be annoying to use as one liner because of the borrow checker, a good solution is to swap arguments order:\r\n\r\n```rust\r\nfn main() {\r\n    let mut i = 0;\r\n    \r\n    assert_eq!(0, replace(i + 1, &mut i));\r\n    assert_eq!(1, std::mem::replace(&mut i, i + 1));\r\n    assert_eq!(2, i);\r\n}\r\n\r\nfn replace<T>(src: T, dest: &mut T) -> T {\r\n  core::mem::replace(dest, src)\r\n}\r\n```\r\n\r\n```none\r\nrror[E0503]: cannot use `i` because it was mutably borrowed\r\n --> src/main.rs:5:45\r\n  |\r\n5 |     assert_eq!(1, std::mem::replace(&mut i, i + 1));\r\n  |                   ----------------- ------  ^ use of borrowed `i`\r\n  |                   |                 |\r\n  |                   |                 borrow of `i` occurs here\r\n  |                   borrow later used by call\r\n```\r\n\r\nUnfortunately, in my knowledge even Rust edition can't allow this breaking change, I see potential solution:\r\n\r\n1. add a new function in mem module (what name ? `replace2()` ?)\r\n2. breaking change somehow\r\n3. do nothing and live with it", "closed_by": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90378/reactions", "total_count": 3, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 3}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90378/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}