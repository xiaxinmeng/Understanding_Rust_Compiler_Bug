{"url": "https://api.github.com/repos/rust-lang/rust/issues/64074", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64074/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64074/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64074/events", "html_url": "https://github.com/rust-lang/rust/issues/64074", "id": 487914223, "node_id": "MDU6SXNzdWU0ODc5MTQyMjM=", "number": 64074, "title": "debuginfo/issue22656 test assertion fails with LLDB 8", "user": {"login": "ranweiler", "id": 515835, "node_id": "MDQ6VXNlcjUxNTgzNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/515835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranweiler", "html_url": "https://github.com/ranweiler", "followers_url": "https://api.github.com/users/ranweiler/followers", "following_url": "https://api.github.com/users/ranweiler/following{/other_user}", "gists_url": "https://api.github.com/users/ranweiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranweiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranweiler/subscriptions", "organizations_url": "https://api.github.com/users/ranweiler/orgs", "repos_url": "https://api.github.com/users/ranweiler/repos", "events_url": "https://api.github.com/users/ranweiler/events{/privacy}", "received_events_url": "https://api.github.com/users/ranweiler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 120005, "node_id": "MDU6TGFiZWwxMjAwMDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-testsuite", "name": "A-testsuite", "color": "f7e101", "default": false, "description": "Area: The testsuite used to check the correctness of rustc"}, {"id": 203130, "node_id": "MDU6TGFiZWwyMDMxMzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-debuginfo", "name": "A-debuginfo", "color": "f7e101", "default": false, "description": "Area: Debugging information in compiled programs (DWARF, PDB, etc.)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-01T18:01:53Z", "updated_at": "2019-09-18T21:42:33Z", "closed_at": "2019-09-18T21:42:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Problem\r\n\r\nThe test `debuginfo/issue-22656` has the following failing assertion:\r\n```\r\n// lldbg-check:[...]$1 = StructWithZeroSizedField { x: ZeroSizedStruct, y: 123, z: ZeroSizedStruct, w: 456 }\r\n```\r\nNote the `g`, so this is for an LLDB that is _not_ rust-enabled.\r\n\r\nHere's what I see in the failing test stdout:\r\n```\r\n---- [debuginfo-gdb+lldb] debuginfo/issue-22656.rs stdout ----\r\nNOTE: compiletest thinks it is using LLDB version 800\r\nNOTE: compiletest thinks it is using LLDB without native rust support\r\n...\r\nprint zs\r\n(issue_22656::StructWithZeroSizedField) $1 = StructWithZeroSizedField { x: ZeroSizedStruct { }, y: 123, z: ZeroSizedStruct { }, w: 456 }\r\n...\r\n```\r\n<details>\r\n<summary>Full dump</summary>\r\n\r\n```\r\nrunning 1 test\r\nF\r\nfailures:\r\n\r\n---- [debuginfo-gdb+lldb] debuginfo/issue-22656.rs stdout ----\r\nNOTE: compiletest thinks it is using LLDB version 800\r\nNOTE: compiletest thinks it is using LLDB without native rust support\r\n\r\nerror: line not found in debugger output: [...]$1 = StructWithZeroSizedField { x: ZeroSizedStruct, y: 123, z: ZeroSizedStruct, w: 456 }\r\nstatus: exit code: 0\r\ncommand: \"/bin/python2.7\" \"/home/joe/src/rust/src/etc/lldb_batchmode.py\" \"/home/joe/src/rust/build/x86_64-unknown-linux-gnu/test/debuginfo/issue-22656/a\" \"/home/joe/src/rust/build/x86_64-unknown-linux-gnu/test/debuginfo/issue-22656/issue-22656.debugger.script\"\r\nstdout:\r\n------------------------------------------\r\nLLDB batch-mode script\r\n----------------------\r\nDebugger commands script is '/home/joe/src/rust/build/x86_64-unknown-linux-gnu/test/debuginfo/issue-22656/issue-22656.debugger.script'.\r\nTarget executable is '/home/joe/src/rust/build/x86_64-unknown-linux-gnu/test/debuginfo/issue-22656/a'.\r\nCurrent working directory is '/home/joe/src/rust'\r\nCreating a target for '/home/joe/src/rust/build/x86_64-unknown-linux-gnu/test/debuginfo/issue-22656/a'\r\nsettings set auto-confirm true\r\n\r\nversion\r\nlldb version 8.0.0\r\ncommand script import /home/joe/src/rust/./src/etc/lldb_rust_formatters.py\r\ntype summary add --no-value --python-function lldb_rust_formatters.print_val -x \".*\" --category Rust\r\ntype category enable Rust\r\n\r\nbreakpoint set --file 'issue-22656.rs' --line 46\r\nBreakpoint 1: where = a`issue_22656::main::h884ad816d93c48d2 + 89 at issue-22656.rs:46:4, address = 0x00000000000015e9\r\nrun\r\nHit breakpoint 1.1: where = a`issue_22656::main::h884ad816d93c48d2 + 89 at issue-22656.rs:46:4, address = 0x00005555555555e9, resolved, hit count = 1\r\nProcess 14229 stopped * thread #1, name = 'a', stop reason = breakpoint 1.1 frame #0: 0x00005555555555e9 a`issue_22656::main::h884ad816d93c48d2 at issue-22656.rs:46:4 43 w: 456 44 }; 45 -> 46 zzz(); // #break ^ 47 } 48 49 fn zzz() { () } Process 14229 launched: '/home/joe/src/rust/build/x86_64-unknown-linux-gnu/test/debuginfo/issue-22656/a' (x86_64)\r\nprint v\r\n(alloc::vec::Vec<int>) $0 = vec![1, 2, 3]\r\nprint zs\r\n(issue_22656::StructWithZeroSizedField) $1 = StructWithZeroSizedField { x: ZeroSizedStruct { }, y: 123, z: ZeroSizedStruct { }, w: 456 }\r\nquit\r\nNone\r\n\r\n------------------------------------------\r\nstderr:\r\n------------------------------------------\r\n\r\n------------------------------------------\r\n\r\n\r\n\r\nfailures:\r\n    [debuginfo-gdb+lldb] debuginfo/issue-22656.rs\r\n\r\ntest result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 122 filtered out\r\n```\r\n\r\n</details>\r\n\r\nSo, it seems like LLDB 8 - even without built-in Rust support - does a better job than older versions when printing that local. It only fails to resolve the local var name `zs`.\r\n\r\nIt could be that we think there's something off about my local lldb. If not, and lldb 8+ is just doing a better job by default, we may need to refine the conditional assertions in the debuginfo tests, since they depend on debugger version. \r\n\r\n## Versions\r\n**Platform:** x86-64 Linux\r\n**Distro:** Void Linux\r\n**lldb:** 8.0.0\r\n\r\nMy lldb version string:\r\n```\r\n$ lldb --version\r\nlldb version 8.0.0\r\n```\r\nNote the absence of the string `rust-enabled`, which is what we look for in `tools/compiletest/main.rs:extract_lldb_version` to set `lldb_native_rust`.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64074/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64074/timeline", "performed_via_github_app": null, "state_reason": "completed"}