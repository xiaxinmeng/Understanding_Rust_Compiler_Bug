{"url": "https://api.github.com/repos/rust-lang/rust/issues/52170", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52170/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52170/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52170/events", "html_url": "https://github.com/rust-lang/rust/issues/52170", "id": 339333013, "node_id": "MDU6SXNzdWUzMzkzMzMwMTM=", "number": 52170, "title": "Compiler unexpectedly panics", "user": {"login": "wagk", "id": 5961525, "node_id": "MDQ6VXNlcjU5NjE1MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5961525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wagk", "html_url": "https://github.com/wagk", "followers_url": "https://api.github.com/users/wagk/followers", "following_url": "https://api.github.com/users/wagk/following{/other_user}", "gists_url": "https://api.github.com/users/wagk/gists{/gist_id}", "starred_url": "https://api.github.com/users/wagk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wagk/subscriptions", "organizations_url": "https://api.github.com/users/wagk/orgs", "repos_url": "https://api.github.com/users/wagk/repos", "events_url": "https://api.github.com/users/wagk/events{/privacy}", "received_events_url": "https://api.github.com/users/wagk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-09T07:23:59Z", "updated_at": "2019-01-30T23:51:11Z", "closed_at": "2019-01-30T23:51:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was told I should submit a report with regards to an internal compiler error.\r\n\r\nI tried this code:\r\n\r\n`src\\lib.rs`\r\n```\r\nmod read;\r\nuse read::read;\r\n```\r\n\r\n`src\\read\\mod.rs`\r\n```\r\nmod parse;\r\nuse std::io;\r\n\r\n#[derive(Debug)]\r\npub enum UserInput {\r\n    EOF,\r\n    Value(String),\r\n}\r\n\r\npub fn read() -> UserInput {\r\n    let stream = io::stdin();\r\n    let handle = stream.lock();\r\n    read_line(handle).unwrap()\r\n}\r\n\r\nfn read_line<R>(mut reader: R) -> io::Result<UserInput>\r\nwhere\r\n    R: io::BufRead,\r\n{\r\n    let mut input = String::new();\r\n    match reader.read_line(&mut input)? {\r\n        0 => Ok(UserInput::EOF),\r\n        _ => Ok(UserInput::Value(input)),\r\n    }\r\n}\r\n\r\n#[cfg(test)]\r\nmod tests {\r\n\r\n    use super::*;\r\n\r\n    // This might be the wrong way to implement testing input strings\r\n    fn test_string(string: &str) {\r\n        let input = string;\r\n        let result = {\r\n            let buffer = io::BufReader::new(input.as_bytes());\r\n            match read_line(buffer).unwrap() {\r\n                UserInput::EOF => panic!(\"The input should not be empty\"),\r\n                UserInput::Value(output) => output,\r\n            }\r\n        };\r\n\r\n        assert_eq!(input, result);\r\n    }\r\n\r\n    #[test]\r\n    fn test_read_line() {\r\n        test_string(\"abcABC123\");\r\n        test_string(\"hello mal world\");\r\n        test_string(\"[]{}'\\\" ;:()\");\r\n        test_string(\"hello world abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789 (;:() []{}\\\"'* ;:() []{}\\\"'* ;:() []{}\\\"'*)\");\r\n    }\r\n\r\n}\r\n```\r\n\r\n`src\\read\\parse.rs`\r\n```\r\nextern crate regex;\r\nuse self::regex::Regex;\r\n\r\nfn tokenize_re(input: &str) -> Vec<String> {\r\n    let mut _tags = Vec::<String>::new();\r\n    let mut _stream = input.chars();\r\n\r\n    let _regexpr = r\".\";\r\n\r\n    let _matcher = Regex::new(_regexpr).unwrap();\r\n\r\n    _tags\r\n}\r\n\r\n#[cfg(test)]\r\nmod tests {\r\n\r\n    use super::*;\r\n\r\n    #[test]\r\n    fn test_tokenize() {\r\n        let test_tokens = |input: &str, expected: Vec<&str>| {\r\n            tokenize_re(input)\r\n                .iter()\r\n                .zip(expected.iter())\r\n                .inspect(|(&x, &y)| {\r\n                    println!(\"{}, {}\", x, y);\r\n                })\r\n                .for_each(|(x, y)| {\r\n                    assert_eq!(x, y);\r\n                });\r\n        };\r\n\r\n        test_tokens(\"()\", vec![\"(\", \")\"]);\r\n        test_tokens(\"(some)\", vec![\"(\", \"some\", \")\"]);\r\n    }\r\n\r\n}\r\n```\r\n## Output\r\n```\r\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: (MoveData { move_paths: [MovePath { place: _0 }, MovePath { place: _1 }, MovePath { place: _2 }, MovePath { place: _3 }, MovePath { place: _4 }, MovePath { place: _5 }, MovePath { place: _6 }, MovePath { place: _7 }, MovePath { place: _8 }, MovePath { place: _9 }, MovePath { place: _10 }, MovePath { place: _11 }, MovePath { place: _12 }, MovePath { place: _13 }, MovePath { place: _14 }, MovePath { place: _15 }, MovePath { place: _16 }, MovePath { place: _17 }, MovePath { place: _18 }, MovePath { place: _19 }, MovePath { place: _20 }, MovePath { place: _21 }, MovePath { place: _22 }, MovePath { place: _23 }, MovePath { place: _24 }, MovePath { place: _25 }, MovePath { place: _26 }, MovePath { place: _27 }, MovePath { place: _28 }, MovePath { place: _29 }, MovePath { place: _30 }, MovePath { place: _31 }, MovePath { place: _32 }, MovePath { place: _33 }, MovePath { place: _34 }, MovePath { place: _35 }, MovePath { place: _36 }, MovePath { place: _37 }, MovePath { place: _38 }, MovePath { place: _39 }, MovePath { place: _40 }, MovePath { place: _41 }, MovePath { place: _42 }, MovePath { place: _43 }, MovePath { place: _44 }, MovePath { place: _45 }, MovePath { place: _46 }, MovePath { place: _47 }, MovePath { place: _48 }], moves: [mp8@bb0[10], mp8@bb0[11], mp22@bb0[21], mp23@bb0[21], mp23@bb0[22], mp22@bb0[23], mp28@bb0[34], mp29@bb0[34], mp29@bb2[0], mp28@bb2[1], mp31@bb2[7], mp32@bb2[7], mp3@bb3[0], mp32@bb4[0], mp31@bb4[1], mp27@bb4[2], mp30@bb4[2], mp30@bb4[3], mp27@bb4[4], mp26@bb4[5], mp25@bb4[6], mp18@bb4[9], mp18@bb4[10], mp34@bb4[16], mp34@bb4[17], mp7@bb4[18], mp17@bb4[18], mp33@bb4[18], mp33@bb5[0], mp17@bb5[1], mp7@bb5[2], mp6@bb5[3], mp6@bb6[0], mp35@bb6[1], mp19@bb6[2], mp20@bb6[3], mp21@bb6[4], mp9@bb6[5], mp4@bb6[7], mp3@bb6[8], mp3@bb7[0], mp0@bb7[1]], loc_map: LocationMap { map: [[[], [], [], [], [], [], [], [], [], [], [mo0], [mo1], [], [], [], [], [], [], [], [], [], [mo2, mo3], [mo4], [mo5], [], [], [], [], [], [], [], [], [], [], [mo6, mo7]], [[]], [[mo8], [mo9], [], [], [], [], [], [mo10, mo11]], [[mo12]], [[mo13], [mo14], [mo15, mo16], [mo17], [mo18], [mo19], [mo20], [], [], [mo21], [mo22], [], [], [], [], [], [mo23], [mo24], [mo25, mo26, mo27]], [[mo28], [mo29], [mo30], [mo31]], [[mo32], [mo33], [mo34], [mo35], [mo36], [mo37], [], [mo38], [mo39]], [[mo40], [mo41]]] }, path_map: [[mo41], [], [], [mo12, mo39, mo40], [mo38], [], [mo31, mo32], [mo25, mo30], [mo0, mo1], [mo37], [], [], [], [], [], [], [], [mo26, mo29], [mo21, mo22], [mo34], [mo35], [mo36], [mo2, mo5], [mo3, mo4], [], [mo20], [mo19], [mo15, mo18], [mo6, mo9], [mo7, mo8], [mo16, mo17], [mo10, mo14], [mo11, mo13], [mo27, mo28], [mo23, mo24], [mo33], [], [], [], [], [], [], [], [], [], [], [], [], []], rev_lookup: MovePathLookup { locals: [mp0, mp1, mp2, mp3, mp4, mp5, mp6, mp7, mp8, mp9, mp10, mp11, mp12, mp13, mp14, mp15, mp16, mp17, mp18, mp19, mp20, mp21, mp22, mp23, mp24, mp25, mp26, mp27, mp28, mp29, mp30, mp31, mp32, mp33, mp34, mp35, mp36, mp37, mp38, mp39, mp40, mp41, mp42, mp43, mp44, mp45, mp46, mp47, mp48], projections: {} }, inits: [mp1@slur\\src\\read\\parse.rs:144:26: 146:18 (Deep), mp2@slur\\src\\read\\parse.rs:144:27: 144:35 (Deep), mp3@slur\\src\\read\\parse.rs:144:29: 144:30 (Deep), mp4@slur\\src\\read\\parse.rs:144:33: 144:34 (Deep), mp9@<println macros>:3:18: 3:43 (Deep), mp8@<println macros>:3:18: 3:43 (Deep), mp7@<println macros>:3:18: 3:43 (Deep), mp22@slur\\src\\read\\parse.rs:145:40: 145:41 (Deep), mp23@slur\\src\\read\\parse.rs:145:43: 145:44 (Deep), mp21@<println macros>:3:18: 3:43 (Deep), mp24@<println macros>:3:18: 3:43 (Deep), mp25@slur\\src\\lib.rs:1:1: 1:1 (Deep), mp26@slur\\src\\lib.rs:1:1: 1:1 (Deep), mp28@slur\\src\\read\\parse.rs:145:40: 145:41 (Deep), mp29@slur\\src\\read\\parse.rs:145:40: 145:41 (Deep), mp27@<print macros>:2:27: 2:58 (NonPanicPathOnly), mp31@slur\\src\\read\\parse.rs:145:43: 145:44 (Deep), mp32@slur\\src\\read\\parse.rs:145:43: 145:44 (Deep), mp30@<print macros>:2:27: 2:58 (NonPanicPathOnly), mp20@<println macros>:3:18: 3:43 (Deep), mp19@<println macros>:3:18: 3:43 (Deep), mp18@<println macros>:3:18: 3:43 (Deep), mp17@<println macros>:3:18: 3:43 (Deep), mp35@<print macros>:2:27: 2:58 (Deep), mp34@<print macros>:2:27: 2:58 (Deep), mp33@<print macros>:2:27: 2:58 (Deep), mp6@<print macros>:2:27: 2:58 (NonPanicPathOnly), mp5@<print macros>:2:1: 2:60 (NonPanicPathOnly), mp0@slur\\src\\read\\parse.rs:144:37: 146:18 (Deep)], init_loc_map: LocationMap { map: [[[], [in2], [], [in3], [], [], [], [], [in4], [in5], [in6], [], [], [], [], [], [], [], [in7], [], [in8], [in9], [], [], [in10], [], [in11], [], [in12], [], [], [in13], [], [in14], [in15]], [[]], [[], [], [], [], [in16], [], [in17], [in18]], [[]], [[], [], [in19], [], [], [], [], [in20], [in21], [in22], [], [], [], [], [in23], [in24], [in25], [], [in26]], [[], [], [], [in27]], [[], [], [], [], [], [], [in28], [], []], [[], []]] }, init_path_map: [[in28], [in0], [in1], [in2], [in3], [in27], [in26], [in6], [in5], [in4], [], [], [], [], [], [], [], [in22], [in21], [in20], [in19], [in9], [in7], [in8], [in10], [in11], [in12], [in15], [in13], [in14], [in18], [in16], [in17], [in25], [in24], [in23], [], [], [], [], [], [], [], [], [], [], [], [], []] }, [IllegalMove { cannot_move_out_of: IllegalMoveOrigin { span: slur\\src\\read\\parse.rs:144:29: 144:30, kind: BorrowedContent } }])', libcore\\result.rs:945:5\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.27.0 (3eda71b00 2018-06-19) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n```", "closed_by": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52170/timeline", "performed_via_github_app": null, "state_reason": "completed"}