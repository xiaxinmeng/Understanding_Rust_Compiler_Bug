{"url": "https://api.github.com/repos/rust-lang/rust/issues/89971", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89971/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89971/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89971/events", "html_url": "https://github.com/rust-lang/rust/issues/89971", "id": 1028179444, "node_id": "I_kwDOAAsO6M49SMX0", "number": 89971, "title": "rustc panic when annotating incorrectly", "user": {"login": "moshevds", "id": 1497288, "node_id": "MDQ6VXNlcjE0OTcyODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1497288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moshevds", "html_url": "https://github.com/moshevds", "followers_url": "https://api.github.com/users/moshevds/followers", "following_url": "https://api.github.com/users/moshevds/following{/other_user}", "gists_url": "https://api.github.com/users/moshevds/gists{/gist_id}", "starred_url": "https://api.github.com/users/moshevds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moshevds/subscriptions", "organizations_url": "https://api.github.com/users/moshevds/orgs", "repos_url": "https://api.github.com/users/moshevds/repos", "events_url": "https://api.github.com/users/moshevds/events{/privacy}", "received_events_url": "https://api.github.com/users/moshevds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-10-17T00:25:55Z", "updated_at": "2021-11-08T00:53:19Z", "closed_at": "2021-11-08T00:53:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\nCargo.toml:\r\n```toml\r\n[package]\r\nname = \"rustc-panic-example\"\r\nversion = \"0.1.0\"\r\nedition = \"2018\"\r\n[dependencies]\r\nserde = { version = \"1.0.127\", features = [\"derive\"] }\r\n```\r\nsrc/main.rs:\r\n```Rust\r\nuse serde::Serialize;\r\n#![allow(unreachable_code)]\r\n#[derive(Serialize)]\r\n#[allow(unreachable_code)]\r\nstruct Foo(());\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.57.0-nightly (c1026539b 2021-10-15)\r\nbinary: rustc\r\ncommit-hash: c1026539bd22e9d070988deaa47b1360cbc76436\r\ncommit-date: 2021-10-15\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.57.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'Found outer attribute Attribute { kind: Normal(AttrItem { path: Path { span: src/main.rs:4:3: 4:8 (#0), segments: [PathSegment { ident: allow#0, id: NodeId(4294967040), args: None }], tokens: None }, args: Delimited(DelimSpan { open: src/main.rs:4:8: 4:9 (#0), close: src/main.rs:4:25: 4:26 (#0) }, Parenthesis, TokenStream([(Token(Token { kind: Ident(\"unreachable_code\", false), span: src/main.rs:4:9: 4:25 (#0) }), Alone)])), tokens: None }, Some(LazyTokenStream(AttrAnnotatedTokenStream([(Token(Token { kind: Pound, span: src/main.rs:4:1: 4:2 (#0) }), Alone), (Delimited(DelimSpan { open: src/main.rs:4:2: 4:3 (#0), close: src/main.rs:4:26: 4:27 (#0) }, Bracket, AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"allow\", false), span: src/main.rs:4:3: 4:8 (#0) }), Alone), (Delimited(DelimSpan { open: src/main.rs:4:8: 4:9 (#0), close: src/main.rs:4:25: 4:26 (#0) }, Paren, AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"unreachable_code\", false), span: src/main.rs:4:9: 4:25 (#0) }), Alone)])), Alone)])), Alone)])))), id: AttrId(4), style: Outer, span: src/main.rs:4:1: 4:27 (#0) } after inner attrs [Attribute { kind: Normal(AttrItem { path: Path { span: src/main.rs:2:4: 2:9 (#0), segments: [PathSegment { ident: allow#0, id: NodeId(4294967040), args: None }], tokens: None }, args: Delimited(DelimSpan { open: src/main.rs:2:9: 2:10 (#0), close: src/main.rs:2:26: 2:27 (#0) }, Parenthesis, TokenStream([(Token(Token { kind: Ident(\"unreachable_code\", false), span: src/main.rs:2:10: 2:26 (#0) }), Alone)])), tokens: None }, Some(LazyTokenStream(AttrAnnotatedTokenStream([(Token(Token { kind: Pound, span: src/main.rs:2:1: 2:2 (#0) }), Joint), (Token(Token { kind: Not, span: src/main.rs:2:2: 2:3 (#0) }), Alone), (Delimited(DelimSpan { open: src/main.rs:2:3: 2:4 (#0), close: src/main.rs:2:27: 2:28 (#0) }, Bracket, AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"allow\", false), span: src/main.rs:2:4: 2:9 (#0) }), Alone), (Delimited(DelimSpan { open: src/main.rs:2:9: 2:10 (#0), close: src/main.rs:2:26: 2:27 (#0) }, Paren, AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"unreachable_code\", false), span: src/main.rs:2:10: 2:26 (#0) }), Alone)])), Alone)])), Alone)])))), id: AttrId(2), style: Inner, span: src/main.rs:2:1: 2:28 (#0) }]', compiler/rustc_ast/src/tokenstream.rs:224:33\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/c1026539bd22e9d070988deaa47b1360cbc76436/library/std/src/panicking.rs:517:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/c1026539bd22e9d070988deaa47b1360cbc76436/library/core/src/panicking.rs:100:14\r\n   2: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once\r\n   3: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next\r\n   4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter\r\n   5: rustc_ast::tokenstream::AttrAnnotatedTokenStream::to_tokenstream\r\n   6: rustc_parse::prepend_attrs\r\n   7: rustc_parse::nt_to_tokenstream\r\n   8: <rustc_expand::proc_macro::ProcMacroDerive as rustc_expand::base::MultiItemModifier>::expand\r\n   9: rustc_expand::expand::MacroExpander::fully_expand_fragment\r\n  10: rustc_expand::expand::MacroExpander::expand_crate\r\n  11: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  12: rustc_interface::passes::configure_and_expand\r\n  13: rustc_interface::queries::Queries::expansion\r\n  14: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  15: rustc_span::with_source_map\r\n  16: scoped_tls::ScopedKey<T>::set\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89971/timeline", "performed_via_github_app": null, "state_reason": "completed"}