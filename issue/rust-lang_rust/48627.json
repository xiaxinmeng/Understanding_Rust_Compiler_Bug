{"url": "https://api.github.com/repos/rust-lang/rust/issues/48627", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48627/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48627/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48627/events", "html_url": "https://github.com/rust-lang/rust/issues/48627", "id": 301261612, "node_id": "MDU6SXNzdWUzMDEyNjE2MTI=", "number": 48627, "title": "rustc fails to remove dead code in exactly one instance of multiple similar code", "user": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}], "state": "closed", "locked": false, "assignee": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 16, "created_at": "2018-03-01T03:02:22Z", "updated_at": "2020-05-23T18:53:02Z", "closed_at": "2020-05-23T18:53:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I made a mistake in some code, which essentially made everything statically panic. Which is fine. The problem is that in exactly one instance of the same kind of code, rustc actually failed to remove the non-panicking branch. Note this /might/ be a duplicate of #48253. At least, similarly to #48253, it appears to be a regression in 1.24.0, according to godbolt.\r\n\r\nA copy/pastable-to-godbolt and reduced version of the mistaken code is:\r\n```rust\r\n#[allow(non_camel_case_types)] \r\npub enum c_void {\r\n    // Two dummy variants so the #[repr] attribute can be used.\r\n    #[doc(hidden)]\r\n    __variant1,\r\n    #[doc(hidden)]\r\n    __variant2,\r\n}\r\n\r\npub extern \"C\" fn malloc(size: usize) -> *mut c_void {\r\n    FUNCS.malloc.unwrap()(size)\r\n}\r\npub extern \"C\" fn calloc(nmemb: usize, size: usize) -> *mut c_void {\r\n    FUNCS.calloc.unwrap()(nmemb, size)\r\n}\r\npub extern \"C\" fn realloc(ptr: *mut c_void, size: usize) -> *mut c_void {\r\n    FUNCS.realloc.unwrap()(ptr, size)\r\n}\r\n\r\npub struct MallocTable {\r\n    malloc: Option<extern \"C\" fn(usize) -> *mut c_void>,\r\n    calloc: Option<extern \"C\" fn(usize, usize) -> *mut c_void>,\r\n    realloc: Option<extern \"C\" fn(*mut c_void, usize) -> *mut c_void>,\r\n}\r\n\r\npub static FUNCS: MallocTable =\r\n    MallocTable{malloc: None,\r\n                calloc: None,\r\n                realloc: None};\r\n```\r\n\r\nThis generates the following assembly (skipping the data fields):\r\n```asm\r\nexample::malloc:\r\n  push rbp\r\n  mov rbp, rsp\r\n  mov rax, qword ptr [rip + example::FUNCS@GOTPCREL]\r\n  mov rax, qword ptr [rax]\r\n  test rax, rax\r\n  je .LBB0_1\r\n  call rax\r\n  pop rbp\r\n  ret\r\n.LBB0_1:\r\n  lea rdi, [rip + .Lref.2]\r\n  call core::panicking::panic@PLT\r\n  ud2\r\n  ud2\r\n  ud2\r\n\r\nexample::calloc:\r\n  push rbp\r\n  mov rbp, rsp\r\n  lea rdi, [rip + .Lref.2]\r\n  call core::panicking::panic@PLT\r\n  ud2\r\n  ud2\r\n  ud2\r\n\r\nexample::realloc:\r\n  push rbp\r\n  mov rbp, rsp\r\n  lea rdi, [rip + .Lref.2]\r\n  call core::panicking::panic@PLT\r\n  ud2\r\n  ud2\r\n  ud2\r\n```\r\n\r\nNote how `calloc` and `realloc` are properly just directly panicking because FUNCS is immutable and initialized with empty function pointers, leading to unwrap always panicking, but the same doesn't happen for `malloc`. Interestingly, removing `realloc` makes `malloc` optimized the same way as the others.\r\n\r\nThe code generated by 1.23.0 was:\r\n```asm\r\nexample::malloc:\r\n  push rbp\r\n  mov rbp, rsp\r\n  lea rdi, [rip + ref.2]\r\n  call core::panicking::panic@PLT\r\n  ud2\r\n\r\nexample::calloc:\r\n  push rbp\r\n  mov rbp, rsp\r\n  lea rdi, [rip + ref.2]\r\n  call core::panicking::panic@PLT\r\n  ud2\r\n\r\nexample::realloc:\r\n  push rbp\r\n  mov rbp, rsp\r\n  lea rdi, [rip + ref.2]\r\n  call core::panicking::panic@PLT\r\n  ud2\r\n```", "closed_by": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48627/timeline", "performed_via_github_app": null, "state_reason": "completed"}