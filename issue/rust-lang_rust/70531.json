{"url": "https://api.github.com/repos/rust-lang/rust/issues/70531", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70531/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70531/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70531/events", "html_url": "https://github.com/rust-lang/rust/issues/70531", "id": 589773436, "node_id": "MDU6SXNzdWU1ODk3NzM0MzY=", "number": 70531, "title": "Unused MIR statement directly before return", "user": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 1904923801, "node_id": "MDU6TGFiZWwxOTA0OTIzODAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-cranelift", "name": "A-cranelift", "color": "f7e101", "default": false, "description": "Things relevant to the [future] cranelift backend"}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}], "state": "closed", "locked": false, "assignee": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-03-29T11:44:25Z", "updated_at": "2020-04-03T01:22:36Z", "closed_at": "2020-04-03T01:22:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```bash\r\n$ rustc foo.rs --crate-type lib --emit mir -Cpanic=abort\r\n```\r\n\r\n```rust\r\nfn map(x: Option<Box<()>>) -> Option<Box<()>> {\r\n    match x {\r\n        None => None,\r\n        Some(x) => Some(x),\r\n    }\r\n}\r\n```\r\n\r\n```rust\r\n// WARNING: This output format is intended for human consumers only\r\n// and is subject to change without notice. Knock yourself out.\r\nfn  map(_1: std::option::Option<std::boxed::Box<()>>) -> std::option::Option<std::boxed::Box<()>> {\r\n    debug x => _1;                       // in scope 0 at a.rs:1:8: 1:9\r\n    let mut _0: std::option::Option<std::boxed::Box<()>>; // return place in scope 0 at a.rs:1:31: 1:46\r\n    let mut _2: isize;                   // in scope 0 at a.rs:3:9: 3:13\r\n    let _3: std::boxed::Box<()>;         // in scope 0 at a.rs:4:14: 4:15\r\n    let mut _4: std::boxed::Box<()>;     // in scope 0 at a.rs:4:25: 4:26\r\n    let mut _5: isize;                   // in scope 0 at a.rs:6:1: 6:2\r\n    scope 1 {\r\n        debug x => _3;                   // in scope 1 at a.rs:4:14: 4:15\r\n    }\r\n\r\n    bb0: {\r\n        _2 = discriminant(_1);           // bb0[0]: scope 0 at a.rs:3:9: 3:13\r\n        switchInt(move _2) -> [0isize: bb3, 1isize: bb1, otherwise: bb2]; // bb0[1]: scope 0 at a.rs:3:9: 3:13\r\n    }\r\n\r\n    bb1: {\r\n        StorageLive(_3);                 // bb1[0]: scope 0 at a.rs:4:14: 4:15\r\n        _3 = move ((_1 as Some).0: std::boxed::Box<()>); // bb1[1]: scope 0 at a.rs:4:14: 4:15\r\n        StorageLive(_4);                 // bb1[2]: scope 1 at a.rs:4:25: 4:26\r\n        _4 = move _3;                    // bb1[3]: scope 1 at a.rs:4:25: 4:26\r\n        ((_0 as Some).0: std::boxed::Box<()>) = move _4; // bb1[4]: scope 1 at a.rs:4:20: 4:27\r\n        discriminant(_0) = 1;            // bb1[5]: scope 1 at a.rs:4:20: 4:27\r\n        StorageDead(_4);                 // bb1[6]: scope 1 at a.rs:4:26: 4:27\r\n        StorageDead(_3);                 // bb1[7]: scope 0 at a.rs:4:27: 4:28\r\n        goto -> bb4;                     // bb1[8]: scope 0 at a.rs:2:5: 5:6\r\n    }\r\n\r\n    bb2: {\r\n        unreachable;                     // bb2[0]: scope 0 at a.rs:2:11: 2:12\r\n    }\r\n\r\n    bb3: {\r\n        discriminant(_0) = 0;            // bb3[0]: scope 0 at a.rs:3:17: 3:21\r\n        goto -> bb4;                     // bb3[1]: scope 0 at a.rs:2:5: 5:6\r\n    }\r\n\r\n    bb4: {\r\n        _5 = discriminant(_1);           // bb4[0]: scope 0 at a.rs:6:1: 6:2\r\n        return;                          // bb4[1]: scope 0 at a.rs:6:2: 6:2\r\n    }\r\n}\r\n```\r\n\r\nThe `_5 = discriminant(_1);` doesn't have any effect.\r\n\r\n(Labeling `A-cranelift` because this prevents codegen of the `goto -> bb4` like `return`. Which may result in a few extra instructions being emitted to move registers and jump to the return block for cg_clif.)\r\n\r\n@rustbot modify labels: +A-mir +A-mir-opt +A-cranelift", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70531/timeline", "performed_via_github_app": null, "state_reason": "completed"}