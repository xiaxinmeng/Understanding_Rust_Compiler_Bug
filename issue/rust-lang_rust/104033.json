{"url": "https://api.github.com/repos/rust-lang/rust/issues/104033", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104033/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104033/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104033/events", "html_url": "https://github.com/rust-lang/rust/issues/104033", "id": 1437227694, "node_id": "I_kwDOAAsO6M5Vqlqu", "number": 104033, "title": "Suboptimal code generation for thread_local!", "user": {"login": "stepancheg", "id": 28969, "node_id": "MDQ6VXNlcjI4OTY5", "avatar_url": "https://avatars.githubusercontent.com/u/28969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stepancheg", "html_url": "https://github.com/stepancheg", "followers_url": "https://api.github.com/users/stepancheg/followers", "following_url": "https://api.github.com/users/stepancheg/following{/other_user}", "gists_url": "https://api.github.com/users/stepancheg/gists{/gist_id}", "starred_url": "https://api.github.com/users/stepancheg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stepancheg/subscriptions", "organizations_url": "https://api.github.com/users/stepancheg/orgs", "repos_url": "https://api.github.com/users/stepancheg/repos", "events_url": "https://api.github.com/users/stepancheg/events{/privacy}", "received_events_url": "https://api.github.com/users/stepancheg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-06T00:02:30Z", "updated_at": "2022-11-06T10:29:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Code:\r\n\r\n```\r\nuse std::cell::*;\r\n\r\nthread_local! {\r\n    static X: Cell<Vec<u32>> = const { Cell::new(Vec::new()) };\r\n}\r\n\r\npub fn thread_local() {\r\n    X.with(|x| {\r\n        let mut xx = x.take();\r\n        xx.pop();\r\n        x.set(xx);\r\n    })\r\n}\r\n```\r\n\r\nEmits:\r\n\r\n```\r\nexample::thread_local:\r\n  push rbx\r\n  sub rsp, 16\r\n  lea rdi, [rip + example::X::__getit::STATE.0@TLSLD]\r\n  call __tls_get_addr@PLT\r\n  mov rbx, rax\r\n  movzx eax, byte ptr [rax + example::X::__getit::STATE.0@DTPOFF]\r\n  cmp eax, 1\r\n  je .LBB1_3\r\n  test eax, eax\r\n  jne .LBB1_4\r\n  lea rdi, [rbx + example::X::__getit::VAL@DTPOFF]\r\n  lea rsi, [rip + example::X::__getit::destroy]\r\n  call qword ptr [rip + std::sys::unix::thread_local_dtor::register_dtor@GOTPCREL]\r\n  mov rax, rbx\r\n  mov byte ptr [rbx + example::X::__getit::STATE.0@DTPOFF], 1\r\n.LBB1_3:\r\n  mov rcx, qword ptr [rbx + example::X::__getit::VAL@DTPOFF+16]\r\n  xor edx, edx\r\n  sub rcx, 1\r\n  cmovae rdx, rcx\r\n  mov qword ptr [rbx + example::X::__getit::VAL@DTPOFF+16], rdx\r\n  add rsp, 16\r\n  pop rbx\r\n  ret\r\n.LBB1_4:\r\n  lea rdi, [rip + .L__unnamed_1]\r\n  lea rcx, [rip + .L__unnamed_2]\r\n  lea r8, [rip + .L__unnamed_3]\r\n  lea rdx, [rsp + 8]\r\n  mov esi, 70\r\n  call qword ptr [rip + core::result::unwrap_failed@GOTPCREL]\r\n  ud2\r\n```\r\n\r\n([Compiler explorer](https://rust.godbolt.org/z/5aMMPKe6z))\r\n\r\nHere default path (when thread-local is initialized) is after the jump to `LBB1_3`.\r\n\r\nThe issue seems to be missing `#[cold]` annotation in `register_dtor` function or missing `likely(STATE == 1)`:\r\n\r\nhttps://github.com/rust-lang/rust/blob/1286ee23e4e2dec8c1696d3d76c6b26d97bbcf82/library/std/src/thread/local.rs#L237-L254", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104033/timeline", "performed_via_github_app": null, "state_reason": null}