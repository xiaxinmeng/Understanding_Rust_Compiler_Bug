{"url": "https://api.github.com/repos/rust-lang/rust/issues/74508", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74508/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74508/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74508/events", "html_url": "https://github.com/rust-lang/rust/issues/74508", "id": 660766096, "node_id": "MDU6SXNzdWU2NjA3NjYwOTY=", "number": 74508, "title": "Hide comments about constants in MIR dumps if they bring no additional information", "user": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-07-19T11:03:12Z", "updated_at": "2020-08-27T16:22:42Z", "closed_at": "2020-08-27T16:22:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "cc @lcnr @eddyb \r\n\r\nWe sometimes have super verbose things in MIR like\r\n\r\n```rust\r\n         assert(const true, \"index out of bounds: the len is {} but the index is {}\", const 4_usize, const 2_usize) -> bb1; // scope 0 at $DIR/array_index.rs:5:18: 5:33\r\n                                          // ty::Const\r\n                                          // + ty: bool\r\n                                          // + val: Value(Scalar(0x01))\r\n                                          // mir::Constant\r\n                                          // + span: $DIR/array_index.rs:5:18: 5:33\r\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x01)) }\r\n                                          // ty::Const\r\n                                          // + ty: usize\r\n                                          // + val: Value(Scalar(0x0000000000000004))\r\n                                          // mir::Constant\r\n                                          // + span: $DIR/array_index.rs:5:18: 5:33\r\n                                          // + literal: Const { ty: usize, val: Value(Scalar(0x0000000000000004)) }\r\n                                          // ty::Const\r\n                                          // + ty: usize\r\n                                          // + val: Value(Scalar(0x0000000000000002))\r\n                                          // mir::Constant\r\n                                          // + span: $DIR/array_index.rs:5:18: 5:33\r\n                                          // + literal: Const { ty: usize, val: Value(Scalar(0x0000000000000002)) }\r\n```\r\n\r\nThese constants give no useful additional information, as everything is already contained in the mir terminator. I think we could start out with just not printing these statements if the type is an integer, bool or char, which should cover most use cases. A more complex analysis could later look at constant in more detail and decide whether the verbose printing could be helpful.", "closed_by": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74508/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74508/timeline", "performed_via_github_app": null, "state_reason": "completed"}