{"url": "https://api.github.com/repos/rust-lang/rust/issues/7264", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/7264/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/7264/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/7264/events", "html_url": "https://github.com/rust-lang/rust/issues/7264", "id": 15823289, "node_id": "MDU6SXNzdWUxNTgyMzI4OQ==", "number": 7264, "title": "RFC: Default trait kind-bounds based on sigil", "user": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235777, "node_id": "MDU6TGFiZWwyMzU3Nzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-grammar", "name": "A-grammar", "color": "f7e101", "default": false, "description": "Area: The grammar of Rust"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-06-20T21:11:02Z", "updated_at": "2014-06-16T21:56:44Z", "closed_at": "2013-07-03T03:51:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am working on #3569, and there has arisen a question of reasonable defaults. The question is exactly the same for traits as for closures, so WLOG I'll use closures as an example.\n\nPart of the motivation is to be able to capture non-Owned and/or borrowed (non-static) things in `~fn()` and `@fn()` closures. So, what today is written `~fn()` and `@fn()` will in the future mean the same as `~fn:Owned()` and `@fn:'static()`.\n\nBut I anticipate the \"implied bounds\" we have today being far and away the most common use cases even when you can specify your own bounds (e.g., you wanna be able to use heap fns/traits as return types)... and it might be a pain to need to write `~fn:Owned()` and `@fn:'static()` all the time. As much as I like the type grammar to be principled, I'm sitting on a diff that makes this change across libs std, extra, syntax, and rustc, and it's 73 files large.\n\nSo my proposal is if you don't write a bounds list at all, the default bounds are used, and if you want to override that, you have to write an empty bounds list (\"`~fn:()`\"). I figure the defaults will be dependent on the pointer sigil; Niko also suggested having `'static` be the default for all of them, but neither of us like that. So, here is a table which shows what the function types will look like in each proposed scheme.\n\n```\n                            (proposed)\ntoday       principled      defaults-by-sigil   defaults-all-same\n------------------------------------------------------------------\n&fn()       &fn()           &fn()               &fn:()\n~fn()       ~fn:Owned()     ~fn()               ~fn:Owned()\n            ~fn()           ~fn:()              ~fn:()\n@fn()       @fn:'static()   @fn()               @fn()\n            @fn()           @fn:()              @fn:()\n```\n\nThe potential downside of the defaults-by-sigil plan is that if you write something like `~fn:Const()`, it may be surprising that that doesn't mean the same as `~fn:Const+Owned()`.\n\nOne final option that I didn't show on the table is just to always keep the \"default\" bound, so you couldn't capture borrowed pointers in heap fns/traits, but you could further limit the environment with more bounds. So you couldn't write `~fn:()` and capture a & or @-pointer, but `~fn:Const()` would mean the same as `~fn:Const+Owned()`.\n", "closed_by": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/7264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/7264/timeline", "performed_via_github_app": null, "state_reason": "completed"}