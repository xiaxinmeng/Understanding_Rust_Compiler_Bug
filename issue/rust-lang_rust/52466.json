{"url": "https://api.github.com/repos/rust-lang/rust/issues/52466", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52466/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52466/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52466/events", "html_url": "https://github.com/rust-lang/rust/issues/52466", "id": 342011577, "node_id": "MDU6SXNzdWUzNDIwMTE1Nzc=", "number": 52466, "title": "Confusing error message during invariant access through associated type", "user": {"login": "Bert-Proesmans", "id": 2027877, "node_id": "MDQ6VXNlcjIwMjc4Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/2027877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bert-Proesmans", "html_url": "https://github.com/Bert-Proesmans", "followers_url": "https://api.github.com/users/Bert-Proesmans/followers", "following_url": "https://api.github.com/users/Bert-Proesmans/following{/other_user}", "gists_url": "https://api.github.com/users/Bert-Proesmans/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bert-Proesmans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bert-Proesmans/subscriptions", "organizations_url": "https://api.github.com/users/Bert-Proesmans/orgs", "repos_url": "https://api.github.com/users/Bert-Proesmans/repos", "events_url": "https://api.github.com/users/Bert-Proesmans/events{/privacy}", "received_events_url": "https://api.github.com/users/Bert-Proesmans/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-17T17:22:04Z", "updated_at": "2019-01-30T21:48:15Z", "closed_at": "2019-01-30T21:48:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "<details>\r\n<summary>Playground code</summary>  \r\n\r\n```rust\r\ntrait RPCService {\r\n    type Method;\r\n}\r\n\r\n#[repr(u32)]\r\nenum ConnectMethods {\r\n    Bind = 0,\r\n    Connect = 1,\r\n}\r\n\r\nstruct ConnectService {}\r\nimpl ConnectService {}\r\n\r\nimpl RPCService for ConnectService {\r\n    type Method = ConnectMethods;\r\n}\r\n\r\n\r\nfn main() {\r\n    let bind_id = <ConnectService as RPCService>::Method::Bind;\r\n}\r\n```\r\n\r\n</details>\r\n\r\n([Playground](https://play.rust-lang.org/?gist=45cae875737791705dd413854beddf0f&version=nightly&mode=debug&edition=2015))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (file:///playground)\r\nerror[E0599]: no variant named `Bind` found for type `ConnectMethods` in the current scope\r\n  --> src/main.rs:20:19\r\n   |\r\n6  | enum ConnectMethods {\r\n   | ------------------- variant `Bind` not found here\r\n...\r\n20 |     let bind_id = <ConnectService as RPCService>::Method::Bind;\r\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ variant not found in `ConnectMethods`\r\n   |\r\n   = note: did you mean `ConnectMethods::Bind`?\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0599`.\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\nThe actual issue is that the compiler message doesn't allow for deduction if this is intended behaviour or not. The message is also a blatant lie because the invariant is present inside the enum.\r\n\r\nThinking about this example I understand that this is not intended to work, because the enum's scope is not imported into the caller's scope.   \r\nComparing this to associated methods; associated methods are brought into scope if the linked type is imported, also const items are automatically imported.  \r\nThis behaviour also happens when that type is accessed through an associated type, meaning the same associated methods and const items are accessible through the associated type. This requires no additional imports.  \r\nThe error message indicates that the items from the enum scope are not automatically imported by access through an associated type.\r\n\r\nI suppose this situation has been discussed before and the current behaviour, a compile error, came out of it. A different error message would be the solution for this issue, in my opinion.", "closed_by": {"login": "Bert-Proesmans", "id": 2027877, "node_id": "MDQ6VXNlcjIwMjc4Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/2027877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bert-Proesmans", "html_url": "https://github.com/Bert-Proesmans", "followers_url": "https://api.github.com/users/Bert-Proesmans/followers", "following_url": "https://api.github.com/users/Bert-Proesmans/following{/other_user}", "gists_url": "https://api.github.com/users/Bert-Proesmans/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bert-Proesmans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bert-Proesmans/subscriptions", "organizations_url": "https://api.github.com/users/Bert-Proesmans/orgs", "repos_url": "https://api.github.com/users/Bert-Proesmans/repos", "events_url": "https://api.github.com/users/Bert-Proesmans/events{/privacy}", "received_events_url": "https://api.github.com/users/Bert-Proesmans/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52466/timeline", "performed_via_github_app": null, "state_reason": "completed"}