{"url": "https://api.github.com/repos/rust-lang/rust/issues/63573", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63573/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63573/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63573/events", "html_url": "https://github.com/rust-lang/rust/issues/63573", "id": 480872810, "node_id": "MDU6SXNzdWU0ODA4NzI4MTA=", "number": 63573, "title": "Bad compiler warning when code resolves to multiple experimental APIs", "user": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-14T20:27:24Z", "updated_at": "2020-06-11T17:36:53Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With Rust 1.36.0, `Range` has two implementations of `is_empty`, one in an inherent impl, the other in an impl for the `std::iter::ExactSizeIterator` trait. Both of these methods are experimental in this version of Rust.\r\n\r\nGiven the following code:\r\n\r\n```rust\r\nfn main() {\r\n    let r = 1u16..10;\r\n    println!(\"{:?}\", r.is_empty());\r\n}\r\n```\r\n\r\nThis produces the following output:\r\n\r\n```\r\nerror[E0034]: multiple applicable items in scope\r\n --> src/main.rs:3:24\r\n  |\r\n3 |     println!(\"{:?}\", r.is_empty());\r\n  |                        ^^^^^^^^ multiple `is_empty` found\r\n  |\r\n  = note: candidate #1 is defined in an impl for the type `std::ops::Range<_>`\r\n  = note: candidate #2 is defined in an impl of the trait `std::iter::ExactSizeIterator` for the type `std::ops::Range<u16>`\r\n  = help: to disambiguate the method call, write `std::iter::ExactSizeIterator::is_empty(r)` instead\r\n```\r\n\r\nThe problem is this warning does not tell me that either method is experimental. I also get the exact same error with `Range::is_empty`:\r\n\r\n```rust\r\nuse std::ops::Range;\r\nfn main() {\r\n    let r = 1u16..10;\r\n    println!(\"{:?}\", Range::is_empty(&r));\r\n}\r\n```\r\n\r\nApplying the suggested advice to use the `ExactSizeIterator` version produces the expected error (telling me that it's experimental and how to enable it), but the only way to get the expected error when trying to call the inherent impl is to disable the implicit prelude:\r\n\r\n```rust\r\n#![no_implicit_prelude]\r\nextern crate std;\r\nfn main() {\r\n    let r = 1u16..10;\r\n    std::println!(\"{:?}\", r.is_empty());\r\n}\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63573/timeline", "performed_via_github_app": null, "state_reason": null}