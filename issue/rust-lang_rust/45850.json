{"url": "https://api.github.com/repos/rust-lang/rust/issues/45850", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45850/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45850/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45850/events", "html_url": "https://github.com/rust-lang/rust/issues/45850", "id": 271998092, "node_id": "MDU6SXNzdWUyNzE5OTgwOTI=", "number": 45850, "title": "\"this expression will panic at run-time\" warnings can't be suppressed ", "user": {"login": "emilio", "id": 1323194, "node_id": "MDQ6VXNlcjEzMjMxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1323194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilio", "html_url": "https://github.com/emilio", "followers_url": "https://api.github.com/users/emilio/followers", "following_url": "https://api.github.com/users/emilio/following{/other_user}", "gists_url": "https://api.github.com/users/emilio/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilio/subscriptions", "organizations_url": "https://api.github.com/users/emilio/orgs", "repos_url": "https://api.github.com/users/emilio/repos", "events_url": "https://api.github.com/users/emilio/events{/privacy}", "received_events_url": "https://api.github.com/users/emilio/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-07T21:55:24Z", "updated_at": "2021-11-10T01:06:58Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here's a reduced test-case:\r\n\r\n```rust\r\nlet a = [0u8; 2usize];\r\nprintln!(\"{}\", a[0]);\r\nprintln!(\"{}\", a[1]);\r\n\r\nif a.len() == 3 {\r\n    println!(\"{}\", a[2]);\r\n}\r\n```\r\n\r\nNow some background.\r\n\r\nIn Servo we generate large amounts of rust code using different systems. Today @upsuper was trying to generate shared code for two different structs that have different fields, let's simplify it as:\r\n\r\n```rust\r\nstruct Foo {\r\n    bar: [u8; 2],\r\n}\r\n\r\nstruct Bar {\r\n    bar: [u8; 3],\r\n}\r\n```\r\n\r\nTo generate shared code for both, he wanted to do something like:\r\n\r\n```rust\r\nlet instance = ${var}; // Instance is either `Foo` or `Bar`, we'll expand this twice.\r\ndo_something_with(instance.bar[0]);\r\ndo_something_with(instance.bar[1]);\r\nif instance.bar.len() == 3 {\r\n    do_something_with(instance.bar[2]);\r\n}\r\n```\r\n\r\nHowever, that generates an unsuppresable warning like:\r\n\r\n```\r\n^^^^ index out of bounds: the len is 2 but the index is 2\r\n```\r\n\r\nSo it seems that Rust doesn't account for that code being unreachable in the `Foo` case.\r\n\r\nIn any case, being able to suppress that warning would've made this code straight-forward. Instead of that we probably need to work around it with something like:\r\n\r\n```rust\r\n#[inline(always)]\r\nfn doit(a: &[u8]) {\r\n    do_something_with(a[0]);\r\n    do_something_with(a[1]);\r\n    if a.len() == 3 {\r\n        do_something_with(a[2]);\r\n    }\r\n}\r\n\r\ndoit(&instance.bar)\r\n```\r\n\r\nWhich is not great.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45850/timeline", "performed_via_github_app": null, "state_reason": null}