{"url": "https://api.github.com/repos/rust-lang/rust/issues/100408", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/100408/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/100408/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/100408/events", "html_url": "https://github.com/rust-lang/rust/issues/100408", "id": 1336010291, "node_id": "I_kwDOAAsO6M5PoeYz", "number": 100408, "title": "Missed optimization with mir-opt-level 4", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-08-11T14:04:02Z", "updated_at": "2023-04-05T17:33:54Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "This code with an inner immediately invoked lambda function:\r\n\r\n```rust\r\nuse std::num::NonZeroI32;\r\n\r\npub fn foo(x: NonZeroI32) -> i32 {\r\n\t(|x: &NonZeroI32| 33 / x.get())(&x)\r\n}\r\n```\r\n\r\nCompiled using:\r\n\r\n```\r\nrustc 1.65.0-nightly (f03ce3096 2022-08-08)\r\nbinary: rustc\r\ncommit-hash: f03ce30962cf1b2a5158667eabae8bf6e8d1cb03\r\ncommit-date: 2022-08-08\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.65.0-nightly\r\nLLVM version: 14.0.6\r\n```\r\n\r\nWith arguments:\r\n\r\n```\r\n--edition 2021 -C opt-level=3 -Z mir-opt-level=3\r\n```\r\n\r\nGives a nice asm:\r\n\r\n```asm\r\nfoo:\r\n        mov     eax, 33\r\n        xor     edx, edx\r\n        idiv    edi\r\n        ret\r\n```\r\n\r\nBut cranking opt up to the 4th level:\r\n\r\n```\r\n--edition 2021 -C opt-level=3 -Z mir-opt-level=4\r\n```\r\n\r\nGives an asm similar to not using the lambda function at all:\r\n\r\n```asm\r\nfoo:\r\n        test    edi, edi\r\n        je      .LBB0_2\r\n        mov     eax, 33\r\n        xor     edx, edx\r\n        idiv    edi\r\n        ret\r\n.LBB0_2:\r\n        push    rax\r\n        lea     rdi, [rip + str.0]\r\n        lea     rdx, [rip + .L__unnamed_1]\r\n        mov     esi, 25\r\n        call    qword ptr [rip + core::panicking::panic@GOTPCREL]\r\n        ud2\r\n```\r\n\r\n(Inspired by: https://old.reddit.com/r/rust/comments/wkw55b/help_matching_c_codegen_for_a_small_function/ijr7o5x/ ).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/100408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/100408/timeline", "performed_via_github_app": null, "state_reason": null}