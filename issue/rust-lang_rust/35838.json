{"url": "https://api.github.com/repos/rust-lang/rust/issues/35838", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/35838/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/35838/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/35838/events", "html_url": "https://github.com/rust-lang/rust/issues/35838", "id": 172231726, "node_id": "MDU6SXNzdWUxNzIyMzE3MjY=", "number": 35838, "title": "ffi::CString::new(string-literal) is suboptimal", "user": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2016-08-19T22:23:42Z", "updated_at": "2022-01-26T21:15:42Z", "closed_at": "2022-01-26T21:15:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed this while doing some ltrace using alloc_system on my panicking program. A small test case is\n\n``` rust\n#![feature(alloc_system)]\nextern crate alloc_system;\nfn main() {\n    panic!();\n}\n```\n\nWhat I noticed is the following pattern:\n- ptr = malloc(14)\n- memcpy(ptr, \"RUST_BACKTRACE\", 14)\n- memchr(\"RUST_BACKTRACE\", '\\0', 14)\n- ptr = realloc(ptr, 28)\n- ptr = realloc(ptr, 15)\n  (not in ltrace, but likely: ptr[15] = '\\0')\n\nIf realloc is not in-place, that's 3 copies of the string, and 3 allocations.\n\nThis all stems from the use of `env::var_os(\"RUST_BACKTRACE\")` in `librustc_driver/lib.rs`, which ends up doing `ffi::CString::new(\"RUST_BACKTRACE\")` (and indeed replacing panic!() in the test case above with that `ffi::CString::new` call yields the same copy/alloc pattern.\n\nIronically, the \"RUST_BACKTRACE\" static string which is copied the first time, is already null terminated in the executable binary's rodata section.\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/35838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/35838/timeline", "performed_via_github_app": null, "state_reason": "completed"}