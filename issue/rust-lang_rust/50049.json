{"url": "https://api.github.com/repos/rust-lang/rust/issues/50049", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50049/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50049/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50049/events", "html_url": "https://github.com/rust-lang/rust/issues/50049", "id": 315414535, "node_id": "MDU6SXNzdWUzMTU0MTQ1MzU=", "number": 50049, "title": "Detect unconditional recursion in Drop", "user": {"login": "omarabid", "id": 909237, "node_id": "MDQ6VXNlcjkwOTIzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/909237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omarabid", "html_url": "https://github.com/omarabid", "followers_url": "https://api.github.com/users/omarabid/followers", "following_url": "https://api.github.com/users/omarabid/following{/other_user}", "gists_url": "https://api.github.com/users/omarabid/gists{/gist_id}", "starred_url": "https://api.github.com/users/omarabid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omarabid/subscriptions", "organizations_url": "https://api.github.com/users/omarabid/orgs", "repos_url": "https://api.github.com/users/omarabid/repos", "events_url": "https://api.github.com/users/omarabid/events{/privacy}", "received_events_url": "https://api.github.com/users/omarabid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 43009118, "node_id": "MDU6TGFiZWw0MzAwOTExOA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-destructors", "name": "A-destructors", "color": "f7e101", "default": false, "description": "Area: destructors (Drop, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-18T10:05:53Z", "updated_at": "2022-04-21T16:36:41Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "If you instantiate the same struct in the Drop function, the program will loop indefinitely and crash.\r\n\r\nThe Code\r\n\r\n```rust\r\nstruct ToDrop;\r\n\r\nimpl Drop for ToDrop {\r\n    fn drop(&mut self) {\r\n        let m = ToDrop;\r\n        println!( \"ToDrop is being dropped\" );\r\n    }\r\n}\r\nfn main() {\r\n    let x =  ToDrop;\r\n}\r\n```\r\n\r\nWell, I expected the compiler to catch this at compilation. So this could be an area of improvement.\r\n\r\nHere is another variation that also causes a stackoverflow without intializing the same variable\r\n\r\n\r\n```rust\r\nstruct A;\r\nstruct B;\r\n\r\nimpl Drop for A {\r\n    fn drop( &mut self ) {\r\n        let b = B;\r\n    }\r\n}\r\n\r\nimpl Drop for B {\r\n    fn drop( &mut self ) {\r\n        let a = A;\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let a = A;\r\n}\r\n\r\n```\r\n\r\nThe error message at execution\r\n\r\n```\r\nthread 'main' has overflowed its stack\r\nfatal runtime error: stack overflow\r\nAbort trap: 6\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50049/timeline", "performed_via_github_app": null, "state_reason": null}