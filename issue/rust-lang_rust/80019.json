{"url": "https://api.github.com/repos/rust-lang/rust/issues/80019", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80019/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80019/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80019/events", "html_url": "https://github.com/rust-lang/rust/issues/80019", "id": 765789064, "node_id": "MDU6SXNzdWU3NjU3ODkwNjQ=", "number": 80019, "title": "Creating Objective-C selectors fails compilation at ld phase", "user": {"login": "nvzqz", "id": 10367662, "node_id": "MDQ6VXNlcjEwMzY3NjYy", "avatar_url": "https://avatars.githubusercontent.com/u/10367662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nvzqz", "html_url": "https://github.com/nvzqz", "followers_url": "https://api.github.com/users/nvzqz/followers", "following_url": "https://api.github.com/users/nvzqz/following{/other_user}", "gists_url": "https://api.github.com/users/nvzqz/gists{/gist_id}", "starred_url": "https://api.github.com/users/nvzqz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nvzqz/subscriptions", "organizations_url": "https://api.github.com/users/nvzqz/orgs", "repos_url": "https://api.github.com/users/nvzqz/repos", "events_url": "https://api.github.com/users/nvzqz/events{/privacy}", "received_events_url": "https://api.github.com/users/nvzqz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 123111, "node_id": "MDU6TGFiZWwxMjMxMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-macos", "name": "O-macos", "color": "6e6ec0", "default": false, "description": "Operating system: macOS"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-12-14T02:21:21Z", "updated_at": "2020-12-14T23:20:13Z", "closed_at": "2020-12-14T23:20:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::ffi::c_void;\r\n\r\n#[link(name = \"objc\", kind = \"dylib\")]\r\nextern \"C\" {}\r\n\r\n#[repr(transparent)]\r\n#[derive(Debug)]\r\npub struct SEL(*const c_void);\r\n\r\nunsafe impl Sync for SEL {}\r\n\r\n#[link_section = \"__TEXT,__objc_methname,cstring_literals\"]\r\n#[no_mangle]\r\n#[used]\r\nstatic aClass: [u8; 6] = *b\"class\\0\";\r\n\r\n#[link_section = \"__DATA,__objc_selrefs,literal_pointers,no_dead_strip\"]\r\n#[used]\r\nstatic CLASS_SEL: SEL = SEL(aClass.as_ptr().cast());\r\n\r\nfn main() {\r\n    let sel: &SEL = &CLASS_SEL;\r\n\r\n    println!(\"{:?}\", sel);\r\n}\r\n```\r\n\r\nI expected to see this happen: The Objective-C runtime to register `CLASS_SEL` on startup and the pointer within `CLASS_SEL` be printed according to the `Debug` impl.\r\n\r\nInstead, this happened: a compile failure when invoking `ld`.\r\n\r\n<details><summary>Output:</summary>\r\n<p>\r\n\r\n```txt\r\nerror: linking with `cc` failed: exit code: 1\r\n  |\r\n  = note: \"cc\" \"-m64\" \"-arch\" \"x86_64\" \"-L\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.23krzzzlv7ezytc3.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.27yqtl2ylu03xj6q.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.2grqpfl6x3qw6iog.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.3dt6412lsuw6p800.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.3s3n8189tgrmo8kg.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.40m92p34zpuv3v5w.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.49tlrzb126jrkxo6.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.4ao0x1z97rza55sf.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.4yul2o9rg14svn1q.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.9o9lxkvkswp6als.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.eq4nwdbclem533e.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.jnq2xws0k8hqned.rcgu.o\" \"-o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.38all9tx0n3ois7v.rcgu.o\" \"-Wl,-dead_strip\" \"-nodefaultlibs\" \"-L\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps\" \"-L\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\" \"-lobjc\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-688c1376a25c049d.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libpanic_unwind-078f89c2cdb6d46b.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libobject-fec020208bc1ad3c.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libaddr2line-38540dcacc9fd218.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libgimli-6f613179f618c598.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/librustc_demangle-4d1a5d7118aaeaf2.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libhashbrown-d88fab3b1b9d8356.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/librustc_std_workspace_alloc-a21754532a052f2f.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libunwind-2e9ebc4127641a96.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcfg_if-82d0f961232a05ca.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liblibc-370b1b71f08bac3c.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc-816106c1f35f5421.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/librustc_std_workspace_core-20f3a030f1a56a86.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcore-60333aa00936c5ce.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcompiler_builtins-116aaeaea873ef94.rlib\" \"-lSystem\" \"-lresolv\" \"-lc\" \"-lm\"\r\n  = note: 0  0x109353078  __assert_rtn + 123\r\n          1  0x109354581  mach_o::relocatable::PointerToCStringSection<x86_64>::targetCString(mach_o::relocatable::Atom<x86_64> const*, ld::IndirectBindingTable const&) const (.cold.2) + 0\r\n          2  0x109231810  mach_o::relocatable::PointerToCStringSection<x86_64>::targetCString(mach_o::relocatable::Atom<x86_64> const*, ld::IndirectBindingTable const&) const + 152\r\n          3  0x109231678  mach_o::relocatable::PointerToCStringSection<x86>::contentHash(mach_o::relocatable::Atom<x86> const*, ld::IndirectBindingTable const&) const + 70\r\n          4  0x109230485  mach_o::relocatable::Atom<arm64>::contentHash(ld::IndirectBindingTable const&) const + 39\r\n          5  0x109284568  std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<ld::Atom const*, unsigned int>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<ld::Atom const*, unsigned int>, std::__1::__unordered_map_hasher<ld::Atom const*, std::__1::__hash_value_type<ld::Atom const*, unsigned int>, ld::tool::SymbolTable::ReferencesHashFuncs, true>, std::__1::__unordered_map_equal<ld::Atom const*, std::__1::__hash_value_type<ld::Atom const*, unsigned int>, ld::tool::SymbolTable::ReferencesHashFuncs, true>, std::__1::allocator<std::__1::__hash_value_type<ld::Atom const*, unsigned int> > >::find<ld::Atom const*>(ld::Atom const* const&) + 40\r\n          6  0x10927f999  ld::tool::SymbolTable::findSlotForReferences(ld::Atom const*, ld::Atom const**) + 127\r\n          7  0x1092884d0  ld::tool::Resolver::convertReferencesToIndirect(ld::Atom const&) + 190\r\n          8  0x1092880fd  ld::tool::Resolver::doAtom(ld::Atom const&) + 1519\r\n          9  0x10922debf  mach_o::relocatable::File<arm64>::forEachAtom(ld::File::AtomHandler&) const + 57\r\n          10  0x10927ae8e  ld::tool::InputFiles::forEachInitialAtom(ld::File::AtomHandler&, ld::Internal&) + 842\r\n          11  0x10928ba5a  ld::tool::Resolver::resolve() + 44\r\n          12  0x109211f85  main + 334\r\n          13  0x7fff689c3cc9  start + 1\r\n          A linker snapshot was created at:\r\n              /tmp/rust_selector_example-2020-11-13-211415.ld-snapshot\r\n          ld: Assertion failed: (0 && \"unsupported reference to selector\"), function targetCString, file /Library/Caches/com.apple.xbs/Sources/ld64/ld64-609/src/ld/parsers/macho_relocatable_file.cpp, line 6626.\r\n          clang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n          \r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `rust-selector-example`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nI made [rust-selector-example](https://github.com/nvzqz/rust-selector-example) to demonstrate this along with the output files.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.48.0 (7eac88abb 2020-11-16)\r\nbinary: rustc\r\ncommit-hash: 7eac88abb2e57e752f3302f02be5f3ce3d7adfb4\r\ncommit-date: 2020-11-16\r\nhost: x86_64-apple-darwin\r\nrelease: 1.48.0\r\nLLVM version: 11.0\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\nSame output as above.\r\n\r\n```\r\n   Compiling rust-selector-example v0.1.0 (/Users/nvzqz/dev/projects/rust/rust-selector-example)\r\nerror: linking with `cc` failed: exit code: 1\r\n  |\r\n  = note: \"cc\" \"-m64\" \"-arch\" \"x86_64\" \"-L\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.23krzzzlv7ezytc3.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.27yqtl2ylu03xj6q.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.2grqpfl6x3qw6iog.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.3dt6412lsuw6p800.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.3s3n8189tgrmo8kg.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.40m92p34zpuv3v5w.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.49tlrzb126jrkxo6.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.4ao0x1z97rza55sf.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.4yul2o9rg14svn1q.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.9o9lxkvkswp6als.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.eq4nwdbclem533e.rcgu.o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.jnq2xws0k8hqned.rcgu.o\" \"-o\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps/rust_selector_example.38all9tx0n3ois7v.rcgu.o\" \"-Wl,-dead_strip\" \"-nodefaultlibs\" \"-L\" \"/Users/nvzqz/dev/projects/rust/rust-selector-example/target/debug/deps\" \"-L\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\" \"-lobjc\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-688c1376a25c049d.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libpanic_unwind-078f89c2cdb6d46b.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libobject-fec020208bc1ad3c.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libaddr2line-38540dcacc9fd218.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libgimli-6f613179f618c598.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/librustc_demangle-4d1a5d7118aaeaf2.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libhashbrown-d88fab3b1b9d8356.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/librustc_std_workspace_alloc-a21754532a052f2f.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libunwind-2e9ebc4127641a96.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcfg_if-82d0f961232a05ca.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liblibc-370b1b71f08bac3c.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc-816106c1f35f5421.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/librustc_std_workspace_core-20f3a030f1a56a86.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcore-60333aa00936c5ce.rlib\" \"/Users/nvzqz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcompiler_builtins-116aaeaea873ef94.rlib\" \"-lSystem\" \"-lresolv\" \"-lc\" \"-lm\"\r\n  = note: 0  0x106756078  __assert_rtn + 123\r\n          1  0x106757581  mach_o::relocatable::PointerToCStringSection<x86_64>::targetCString(mach_o::relocatable::Atom<x86_64> const*, ld::IndirectBindingTable const&) const (.cold.2) + 0\r\n          2  0x106634810  mach_o::relocatable::PointerToCStringSection<x86_64>::targetCString(mach_o::relocatable::Atom<x86_64> const*, ld::IndirectBindingTable const&) const + 152\r\n          3  0x106634678  mach_o::relocatable::PointerToCStringSection<x86>::contentHash(mach_o::relocatable::Atom<x86> const*, ld::IndirectBindingTable const&) const + 70\r\n          4  0x106633485  mach_o::relocatable::Atom<arm64>::contentHash(ld::IndirectBindingTable const&) const + 39\r\n          5  0x106687568  std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<ld::Atom const*, unsigned int>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<ld::Atom const*, unsigned int>, std::__1::__unordered_map_hasher<ld::Atom const*, std::__1::__hash_value_type<ld::Atom const*, unsigned int>, ld::tool::SymbolTable::ReferencesHashFuncs, true>, std::__1::__unordered_map_equal<ld::Atom const*, std::__1::__hash_value_type<ld::Atom const*, unsigned int>, ld::tool::SymbolTable::ReferencesHashFuncs, true>, std::__1::allocator<std::__1::__hash_value_type<ld::Atom const*, unsigned int> > >::find<ld::Atom const*>(ld::Atom const* const&) + 40\r\n          6  0x106682999  ld::tool::SymbolTable::findSlotForReferences(ld::Atom const*, ld::Atom const**) + 127\r\n          7  0x10668b4d0  ld::tool::Resolver::convertReferencesToIndirect(ld::Atom const&) + 190\r\n          8  0x10668b0fd  ld::tool::Resolver::doAtom(ld::Atom const&) + 1519\r\n          9  0x106630ebf  mach_o::relocatable::File<arm64>::forEachAtom(ld::File::AtomHandler&) const + 57\r\n          10  0x10667de8e  ld::tool::InputFiles::forEachInitialAtom(ld::File::AtomHandler&, ld::Internal&) + 842\r\n          11  0x10668ea5a  ld::tool::Resolver::resolve() + 44\r\n          12  0x106614f85  main + 334\r\n          A linker snapshot was created at:\r\n              /tmp/rust_selector_example-2020-11-13-211329.ld-snapshot\r\n          ld: Assertion failed: (0 && \"unsupported reference to selector\"), function targetCString, file /Library/Caches/com.apple.xbs/Sources/ld64/ld64-609/src/ld/parsers/macho_relocatable_file.cpp, line 6626.\r\n          clang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n          \r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `rust-selector-example`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nRelated issue: https://github.com/nvzqz/fruity/issues/2.", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80019/timeline", "performed_via_github_app": null, "state_reason": "completed"}