{"url": "https://api.github.com/repos/rust-lang/rust/issues/85171", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85171/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85171/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85171/events", "html_url": "https://github.com/rust-lang/rust/issues/85171", "id": 886377095, "node_id": "MDU6SXNzdWU4ODYzNzcwOTU=", "number": 85171, "title": "Lifetime coercion with lifetime bounds on traits", "user": {"login": "elwerene", "id": 136320, "node_id": "MDQ6VXNlcjEzNjMyMA==", "avatar_url": "https://avatars.githubusercontent.com/u/136320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elwerene", "html_url": "https://github.com/elwerene", "followers_url": "https://api.github.com/users/elwerene/followers", "following_url": "https://api.github.com/users/elwerene/following{/other_user}", "gists_url": "https://api.github.com/users/elwerene/gists{/gist_id}", "starred_url": "https://api.github.com/users/elwerene/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elwerene/subscriptions", "organizations_url": "https://api.github.com/users/elwerene/orgs", "repos_url": "https://api.github.com/users/elwerene/repos", "events_url": "https://api.github.com/users/elwerene/events{/privacy}", "received_events_url": "https://api.github.com/users/elwerene/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-05-11T07:47:26Z", "updated_at": "2021-05-12T06:16:22Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I had lifetime errors with `async_trait`. I made a minimal example which triggers the same error message:\r\n\r\n```rust\r\nfn main() {}\r\n\r\ntrait Worker {\r\n    fn work<'a, 'b>(input: &'a mut String) -> &'b String\r\n    where\r\n        'a: 'b;\r\n}\r\n\r\ntrait WorkerCoerced {\r\n    fn work<'a>(input: &'a mut String) -> &'a String;\r\n}\r\n\r\nimpl<T> WorkerCoerced for T\r\nwhere\r\n    T: Worker,\r\n{\r\n    fn work<'a>(input: &'a mut String) -> &'a String {\r\n        T::work(input)\r\n    }\r\n}\r\n\r\nstruct Storage;\r\nimpl Storage {\r\n    fn add_work_function(&mut self, work_function: for<'a> fn(&'a mut String) -> &'a String) {}\r\n\r\n    fn add_worker<WORKER: Worker>(&mut self) {\r\n        self.add_work_function(WORKER::work); // Error: one type is more general than the other\r\n    }\r\n\r\n    fn add_worker_coerced<WORKERCOERCED: WorkerCoerced>(&mut self) {\r\n        self.add_work_function(WORKERCOERCED::work); // Works\r\n    }\r\n}\r\n```\r\n[Playground of above code](https://play.rust-lang.org/?version=beta&mode=debug&edition=2018&gist=cc5346cd562be7f449eb7a0e15b81d6d)\r\n\r\nI expected the rust compiler to coerce the lifetimes and do not throw an error in `Storage.add_worker` instead it throws this error:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:27:32\r\n   |\r\n27 |         self.add_work_function(WORKER::work); // Error: one type is more general than the other\r\n   |                                ^^^^^^^^^^^^ one type is more general than the other\r\n   |\r\n   = note: expected fn pointer `for<'a> fn(&'a mut String) -> &'a String`\r\n              found fn pointer `fn(&mut String) -> &String`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nIf I coerce the lifetimes with the other trait `WorkerCoerced` and implement it with a blanket implementation, then it compiles and works (see `Storage.add_worker_coerced`)\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.52.1 (9bc8c42bb 2021-05-09)\r\nbinary: rustc\r\ncommit-hash: 9bc8c42bb2f19e745a63f3445f1ac248fb015e53\r\ncommit-date: 2021-05-09\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.52.1\r\nLLVM version: 12.0.0\r\n```\r\nI tested the above code as well on current beta and nightly (as of 2021-05-11)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85171/timeline", "performed_via_github_app": null, "state_reason": null}