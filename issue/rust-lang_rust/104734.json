{"url": "https://api.github.com/repos/rust-lang/rust/issues/104734", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104734/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104734/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104734/events", "html_url": "https://github.com/rust-lang/rust/issues/104734", "id": 1460439366, "node_id": "I_kwDOAAsO6M5XDIlG", "number": 104734, "title": "Unexpected, premature `File` drop in absence of `std::mem::forget`", "user": {"login": "rvolosatovs", "id": 12877905, "node_id": "MDQ6VXNlcjEyODc3OTA1", "avatar_url": "https://avatars.githubusercontent.com/u/12877905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rvolosatovs", "html_url": "https://github.com/rvolosatovs", "followers_url": "https://api.github.com/users/rvolosatovs/followers", "following_url": "https://api.github.com/users/rvolosatovs/following{/other_user}", "gists_url": "https://api.github.com/users/rvolosatovs/gists{/gist_id}", "starred_url": "https://api.github.com/users/rvolosatovs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rvolosatovs/subscriptions", "organizations_url": "https://api.github.com/users/rvolosatovs/orgs", "repos_url": "https://api.github.com/users/rvolosatovs/repos", "events_url": "https://api.github.com/users/rvolosatovs/events{/privacy}", "received_events_url": "https://api.github.com/users/rvolosatovs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-11-22T19:28:07Z", "updated_at": "2022-11-22T21:03:48Z", "closed_at": "2022-11-22T21:03:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#[cfg(test)]\r\nmod tests {\r\n    use std::env::temp_dir;\r\n    use std::fs::File;\r\n    use std::io::{Read, Seek, Write};\r\n    use std::os::unix::prelude::{AsRawFd, FromRawFd, OpenOptionsExt, RawFd};\r\n\r\n    fn inner(fd: RawFd) {\r\n        let mut file = unsafe { File::from_raw_fd(fd) };\r\n\r\n        let mut s = String::new();\r\n        file.read_to_string(&mut s).expect(\"failed to read\");\r\n        assert_eq!(s, \"test\");\r\n\r\n        #[cfg(feature = \"inner-forget\")]\r\n        std::mem::forget(file);\r\n    }\r\n\r\n    fn outer() {\r\n        let mut file = File::options()\r\n            .read(true)\r\n            .write(true)\r\n            .custom_flags(libc::O_TMPFILE)\r\n            .open(temp_dir())\r\n            .expect(\"failed to create temporary file\");\r\n\r\n        file.write(b\"test\").expect(\"failed to write to file\");\r\n        file.rewind().expect(\"failed to seek file\");\r\n\r\n        let fd = file.as_raw_fd();\r\n\r\n        #[cfg(feature = \"outer-forget\")]\r\n        std::mem::forget(file);\r\n\r\n        inner(fd);\r\n    }\r\n\r\n    // NOTE: The failure is significantly easier to reproduce with three or more tests running.\r\n    // It has been reproduced with two simultaneous tests.\r\n    // It is not clear if the failure is reproducible with a single test case.\r\n\r\n    #[test]\r\n    fn one() {\r\n        outer()\r\n    }\r\n\r\n    #[test]\r\n    fn two() {\r\n        outer()\r\n    }\r\n\r\n    #[test]\r\n    fn three() {\r\n        outer()\r\n    }\r\n\r\n    #[test]\r\n    fn four() {\r\n        outer()\r\n    }\r\n}\r\n```\r\n\r\nI expected to see this happen: success, even in absence of `std::mem::forget`\r\n\r\nInstead, this happened: when `std::mem::forget` is not called in either `inner` or `outer` function, test sometimes fails on L28, before `AsRawFd::as_raw_fd` call. See https://github.com/rvolosatovs/fd-leak\r\n\r\nSurprisingly, calling `std::mem::forget` from within `inner` also fixes the issue - I would not expect that to happen.\r\n\r\nI would also expect `ManuallyDrop` to extend the lifetime of `file`:\r\n```diff\r\ndiff --git a/src/lib.rs b/src/lib.rs\r\nindex fa94a93..809cdab 100644\r\n--- a/src/lib.rs\r\n+++ b/src/lib.rs\r\n@@ -29,10 +29,14 @@ mod tests {\r\n \r\n         let fd = file.as_raw_fd();\r\n \r\n+        let file = std::mem::ManuallyDrop::new(file);\r\n+\r\n         #[cfg(feature = \"outer-forget\")]\r\n         std::mem::forget(file);\r\n \r\n         inner(fd);\r\n+\r\n+        std::mem::ManuallyDrop::into_inner(file);\r\n     }\r\n \r\n     // NOTE: The failure is significantly easier to reproduce with three or more tests running.\r\n```\r\nWhich is not the case\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.65.0 (897e37553 2022-11-02)\r\nbinary: rustc\r\ncommit-hash: 897e37553bba8b42751c67658967889d11ecd120\r\ncommit-date: 2022-11-02\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.65.0\r\nLLVM version: 15.0.0\r\n```\r\n\r\n```\r\nrustc 1.67.0-nightly (a28f3c88e 2022-11-20)\r\nbinary: rustc\r\ncommit-hash: a28f3c88e50a77bc2a91889241248c4543854e61\r\ncommit-date: 2022-11-20\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.67.0-nightly\r\nLLVM version: 15.0.4\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nRUST_BACKTRACE=full cargo test                  \r\n    Finished test [unoptimized + debuginfo] target(s) in 0.02s\r\n     Running unittests src/lib.rs (target/debug/deps/fd_leak-e25310d11ee23443)\r\n\r\nrunning 4 tests\r\ntest tests::one ... ok\r\ntest tests::four ... ok\r\ntest tests::three ... ok\r\ntest tests::two ... FAILED\r\n\r\nfailures:\r\n\r\n---- tests::two stdout ----\r\nthread 'tests::two' panicked at 'failed to seek file: Os { code: 9, kind: Uncategorized, message: \"Bad file descriptor\" }', src/lib.rs:28:23\r\nstack backtrace:\r\n   0:     0x55eb7ea725a0 - std::backtrace_rs::backtrace::libunwind::trace::heb7a33f2fe285dd9\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x55eb7ea725a0 - std::backtrace_rs::backtrace::trace_unsynchronized::hdd483bbded009146\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x55eb7ea725a0 - std::sys_common::backtrace::_print_fmt::h66820ec1712881f4\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/sys_common/backtrace.rs:65:5\r\n   3:     0x55eb7ea725a0 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hd2c196610029335c\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/sys_common/backtrace.rs:44:22\r\n   4:     0x55eb7ea95b4e - core::fmt::write::h2ca7d8a2085ff483\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/core/src/fmt/mod.rs:1208:17\r\n   5:     0x55eb7ea6f4c5 - std::io::Write::write_fmt::hcad46088d384a7c3\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/io/mod.rs:1682:15\r\n   6:     0x55eb7ea72365 - std::sys_common::backtrace::_print::h34ed3ab353b4c6af\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/sys_common/backtrace.rs:47:5\r\n   7:     0x55eb7ea72365 - std::sys_common::backtrace::print::h6c57f031c456c068\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/sys_common/backtrace.rs:34:9\r\n   8:     0x55eb7ea7413f - std::panicking::default_hook::{{closure}}::hec2c128303361806\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/panicking.rs:267:22\r\n   9:     0x55eb7ea73dfe - std::panicking::default_hook::hd13da34753ba960b\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/panicking.rs:283:9\r\n  10:     0x55eb7ea46707 - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::h5201491dfad1b856\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/alloc/src/boxed.rs:2032:9\r\n  11:     0x55eb7ea46707 - test::test_main::{{closure}}::he18ce205e5b5b19a\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/test/src/lib.rs:135:21\r\n  12:     0x55eb7ea7485d - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::h216311a9e3952096\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/alloc/src/boxed.rs:2032:9\r\n  13:     0x55eb7ea7485d - std::panicking::rust_panic_with_hook::h73ea3535d824209e\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/panicking.rs:692:13\r\n  14:     0x55eb7ea745d7 - std::panicking::begin_panic_handler::{{closure}}::hd671ecd225a3dd76\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/panicking.rs:579:13\r\n  15:     0x55eb7ea72a4c - std::sys_common::backtrace::__rust_end_short_backtrace::hfb14ec03ea3b23c0\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/sys_common/backtrace.rs:137:18\r\n  16:     0x55eb7ea742f2 - rust_begin_unwind\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/panicking.rs:575:5\r\n  17:     0x55eb7ea149d3 - core::panicking::panic_fmt::h60d6645d301b37b5\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/core/src/panicking.rs:65:14\r\n  18:     0x55eb7ea14c33 - core::result::unwrap_failed::ha4e2202a7759b47f\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/core/src/result.rs:1791:5\r\n  19:     0x55eb7ea1526f - core::result::Result<T,E>::expect::hc79ac13a974c22a5\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/core/src/result.rs:1070:23\r\n  20:     0x55eb7ea17c4d - fd_leak::tests::outer::h96195e8250fed54c\r\n                               at /home/rvolosatovs/src/github.com/enarx/fd-leak/src/lib.rs:28:9\r\n  21:     0x55eb7ea17cb6 - fd_leak::tests::two::hfc0baf4a4a6563e3\r\n                               at /home/rvolosatovs/src/github.com/enarx/fd-leak/src/lib.rs:49:9\r\n  22:     0x55eb7ea158e7 - fd_leak::tests::two::{{closure}}::h0f34485421b54f0b\r\n                               at /home/rvolosatovs/src/github.com/enarx/fd-leak/src/lib.rs:48:14\r\n  23:     0x55eb7ea17355 - core::ops::function::FnOnce::call_once::h9504b984ebcccf77\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/core/src/ops/function.rs:507:5\r\n  24:     0x55eb7ea4b9cf - core::ops::function::FnOnce::call_once::hcdfabbc783fc005e\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/core/src/ops/function.rs:507:5\r\n  25:     0x55eb7ea4b9cf - test::__rust_begin_short_backtrace::ha801a83b51fc7703\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/test/src/lib.rs:637:18\r\n  26:     0x55eb7ea1de4c - test::run_test::{{closure}}::h6198e4affa99f9a6\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/test/src/lib.rs:628:30\r\n  27:     0x55eb7ea1de4c - core::ops::function::FnOnce::call_once{{vtable.shim}}::h7f25ebb12fd78fc3\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/core/src/ops/function.rs:507:5\r\n  28:     0x55eb7ea4a9b6 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hf5d0e8ff49b108f8\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/alloc/src/boxed.rs:2000:9\r\n  29:     0x55eb7ea4a9b6 - <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once::ha2b1c400f96a1a4b\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/core/src/panic/unwind_safe.rs:271:9\r\n  30:     0x55eb7ea4a9b6 - std::panicking::try::do_call::hc71592039bdc38e9\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/panicking.rs:483:40\r\n  31:     0x55eb7ea4a9b6 - std::panicking::try::h08ecb4504cfedfc5\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/panicking.rs:447:19\r\n  32:     0x55eb7ea4a9b6 - std::panic::catch_unwind::hb97d2c3c5155970b\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/panic.rs:137:14\r\n  33:     0x55eb7ea4a9b6 - test::run_test_in_process::hca91b79341c56cd1\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/test/src/lib.rs:660:27\r\n  34:     0x55eb7ea4a9b6 - test::run_test::run_test_inner::{{closure}}::h5ac461c4fd4af9c3\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/test/src/lib.rs:554:39\r\n  35:     0x55eb7ea184b4 - test::run_test::run_test_inner::{{closure}}::h4349ca39f8d5f6f9\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/test/src/lib.rs:581:37\r\n  36:     0x55eb7ea184b4 - std::sys_common::backtrace::__rust_begin_short_backtrace::h8aa33885e724cab6\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/sys_common/backtrace.rs:121:18\r\n  37:     0x55eb7ea1ded5 - std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}::h4ca378ad3d438f78\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/thread/mod.rs:550:17\r\n  38:     0x55eb7ea1ded5 - <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once::hcabdd1157f46f045\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/core/src/panic/unwind_safe.rs:271:9\r\n  39:     0x55eb7ea1ded5 - std::panicking::try::do_call::h46f3095b7564eaa5\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/panicking.rs:483:40\r\n  40:     0x55eb7ea1ded5 - std::panicking::try::hee62ffac36e64677\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/panicking.rs:447:19\r\n  41:     0x55eb7ea1ded5 - std::panic::catch_unwind::h27ff2680cbabe863\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/panic.rs:137:14\r\n  42:     0x55eb7ea1ded5 - std::thread::Builder::spawn_unchecked_::{{closure}}::h9c0ef1e4434dee3b\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/thread/mod.rs:549:30\r\n  43:     0x55eb7ea1ded5 - core::ops::function::FnOnce::call_once{{vtable.shim}}::hc4cd48a559d98026\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/core/src/ops/function.rs:507:5\r\n  44:     0x55eb7ea78bf3 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::ha6912b1affeedc9f\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/alloc/src/boxed.rs:2000:9\r\n  45:     0x55eb7ea78bf3 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h3ca4ddbfb732ff99\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/alloc/src/boxed.rs:2000:9\r\n  46:     0x55eb7ea78bf3 - std::sys::unix::thread::Thread::new::thread_start::ha349c7e697b17ac9\r\n                               at /rustc/a28f3c88e50a77bc2a91889241248c4543854e61/library/std/src/sys/unix/thread.rs:108:17\r\n  47:     0x7f9d89fe7ff2 - start_thread\r\n  48:     0x7f9d8a06abfc - clone3\r\n  49:                0x0 - <unknown>\r\n\r\n\r\nfailures:\r\n    tests::two\r\n\r\ntest result: FAILED. 3 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "rvolosatovs", "id": 12877905, "node_id": "MDQ6VXNlcjEyODc3OTA1", "avatar_url": "https://avatars.githubusercontent.com/u/12877905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rvolosatovs", "html_url": "https://github.com/rvolosatovs", "followers_url": "https://api.github.com/users/rvolosatovs/followers", "following_url": "https://api.github.com/users/rvolosatovs/following{/other_user}", "gists_url": "https://api.github.com/users/rvolosatovs/gists{/gist_id}", "starred_url": "https://api.github.com/users/rvolosatovs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rvolosatovs/subscriptions", "organizations_url": "https://api.github.com/users/rvolosatovs/orgs", "repos_url": "https://api.github.com/users/rvolosatovs/repos", "events_url": "https://api.github.com/users/rvolosatovs/events{/privacy}", "received_events_url": "https://api.github.com/users/rvolosatovs/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104734/timeline", "performed_via_github_app": null, "state_reason": "completed"}