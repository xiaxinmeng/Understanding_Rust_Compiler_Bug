{"url": "https://api.github.com/repos/rust-lang/rust/issues/78456", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78456/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78456/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78456/events", "html_url": "https://github.com/rust-lang/rust/issues/78456", "id": 730947079, "node_id": "MDU6SXNzdWU3MzA5NDcwNzk=", "number": 78456, "title": "ICE: tuple_fields called on non-tuple with type_alias_impl_trait, async block, and non-static trait lifetime", "user": {"login": "samlich", "id": 1349989, "node_id": "MDQ6VXNlcjEzNDk5ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/1349989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samlich", "html_url": "https://github.com/samlich", "followers_url": "https://api.github.com/users/samlich/followers", "following_url": "https://api.github.com/users/samlich/following{/other_user}", "gists_url": "https://api.github.com/users/samlich/gists{/gist_id}", "starred_url": "https://api.github.com/users/samlich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samlich/subscriptions", "organizations_url": "https://api.github.com/users/samlich/orgs", "repos_url": "https://api.github.com/users/samlich/repos", "events_url": "https://api.github.com/users/samlich/events{/privacy}", "received_events_url": "https://api.github.com/users/samlich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-10-27T23:31:14Z", "updated_at": "2020-10-28T19:02:30Z", "closed_at": "2020-10-28T14:16:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nRemoving or making the lifetime static fixes it, as does removing the early return (but not making it conditional). Moving the async part to a standalone function also does not crash. `Undef` can be defined, but doesn't have to be.\r\n\r\nhttps://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=de619bbd48328b8854fd77e3338dfb3c\r\n\r\n```Rust\r\n#![feature(type_alias_impl_trait)]\r\n#![no_std]\r\n\r\npub trait Tr<'x> {\r\n    type Fut: core::future::Future<Output = ()>;\r\n\r\n    fn f() -> Self::Fut;\r\n}\r\n\r\nimpl<'x> Tr<'x> for () {\r\n    type Fut = impl core::future::Future<Output = ()>;\r\n\r\n    fn f() -> Self::Fut {\r\n        async {\r\n            //if false {\r\n            return ();\r\n            //}\r\n            let res: Undef = ();\r\n            res\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.49.0-nightly (ffa2e7ae8 2020-10-24)\r\nbinary: rustc\r\ncommit-hash: ffa2e7ae8fbf9badc035740db949b9dae271c29f\r\ncommit-date: 2020-10-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.49.0-nightly\r\nLLVM version: 11.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n    Running `rustc --crate-name tuple_fields --edition=2018 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=c6835f7100680813 -C extra-filename=-c6835f7100680813 --out-dir /home/s/.cargo_target/debug/deps -C incremental=/home/s/.cargo_target/debug/incremental -L dependency=/home/s/.cargo_target/debug/deps -C link-arg=-fuse-ld=lld`\r\nerror[E0412]: cannot find type `Undef` in this scope\r\n  --> src/lib.rs:18:22\r\n   |\r\n18 |             let res: Undef = ();\r\n   |                      ^^^^^ not found in this scope\r\n\r\nwarning: unreachable statement\r\n  --> src/lib.rs:18:13\r\n   |\r\n16 |             return ();\r\n   |             --------- any code following this expression is unreachable\r\n17 |             //}\r\n18 |             let res: Undef = ();\r\n   |             ^^^^^^^^^^^^^^^^^^^^ unreachable statement\r\n   |\r\n   = note: `#[warn(unreachable_code)]` on by default\r\n\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/sty.rs:2150:18: tuple_fields called on non-tuple\r\n\r\nthread 'rustc' panicked at 'Box<Any>', compiler/rustc_errors/src/lib.rs:945:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.49.0-nightly (ffa2e7ae8 2020-10-24) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental -C link-arg=-fuse-ld=lld --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `<() as Tr<'x>>::f`\r\n#1 [type_of] computing type of `<() as Tr<'x>>::Fut::{opaque#0}`\r\nend of query stack\r\nerror: aborting due to 2 previous errors; 1 warning emitted\r\n\r\nFor more information about this error, try `rustc --explain E0412`.\r\nerror: could not compile `tuple_fields`\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --crate-name tuple_fields --edition=2018 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=c6835f7100680813 -C extra-filename=-c6835f7100680813 --out-dir /home/s/.cargo_target/debug/deps -C incremental=/home/s/.cargo_target/debug/incremental -L dependency=/home/s/.cargo_target/debug/deps -C link-arg=-fuse-ld=lld` (exit code: 101)\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<Any>', compiler/rustc_errors/src/lib.rs:945:9                                                                                                                                                                                                                                        [24/44328]\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: rustc_errors::HandlerInner::bug\r\n   2: rustc_errors::Handler::bug\r\n   3: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n   4: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n   5: rustc_middle::ty::context::tls::with_opt\r\n   6: rustc_middle::util::bug::opt_span_bug_fmt\r\n   7: rustc_middle::util::bug::bug_fmt\r\n   8: rustc_middle::ty::sty::<impl rustc_middle::ty::TyS>::tuple_fields\r\n   9: <rustc_trait_selection::opaque_types::ConstrainOpaqueTypeRegionVisitor<OP> as rustc_middle::ty::fold::TypeVisitor>::visit_ty\r\n  10: rustc_middle::ty::fold::TypeFoldable::visit_with\r\n  11: rustc_middle::ty::structural_impls::<impl rustc_middle::ty::fold::TypeFoldable for &rustc_middle::ty::TyS>::super_visit_with\r\n  12: <rustc_trait_selection::opaque_types::ConstrainOpaqueTypeRegionVisitor<OP> as rustc_middle::ty::fold::TypeVisitor>::visit_ty\r\n  13: <rustc_infer::infer::InferCtxt as rustc_trait_selection::opaque_types::InferCtxtExt>::constrain_opaque_types\r\n  14: rustc_typeck::check::regionck::RegionCtxt::visit_fn_body\r\n  15: rustc_hir::intravisit::walk_expr\r\n  16: <rustc_typeck::check::regionck::RegionCtxt as rustc_hir::intravisit::Visitor>::visit_expr\r\n  17: rustc_hir::intravisit::walk_expr\r\n  18: <rustc_typeck::check::regionck::RegionCtxt as rustc_hir::intravisit::Visitor>::visit_expr\r\n  19: <rustc_typeck::check::regionck::RegionCtxt as rustc_hir::intravisit::Visitor>::visit_expr\r\n  20: rustc_typeck::check::regionck::RegionCtxt::visit_fn_body\r\n  21: rustc_typeck::check::regionck::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::regionck_fn\r\n  22: rustc_infer::infer::InferCtxtBuilder::enter\r\n  23: rustc_typeck::check::typeck\r\n  24: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck>::compute\r\n  25: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  26: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  27: rustc_data_structures::stack::ensure_sufficient_stack\r\n  28: rustc_query_system::query::plumbing::get_query_impl\r\n  29: rustc_typeck::collect::type_of::find_opaque_ty_constraints::ConstraintLocator::check\r\n  30: rustc_hir::intravisit::walk_impl_item_ref\r\n  31: rustc_hir::intravisit::walk_item\r\n  32: rustc_typeck::collect::type_of::type_of\r\n  33: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::type_of>::compute\r\n  34: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  35: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  36: rustc_data_structures::stack::ensure_sufficient_stack\r\n  37: rustc_query_system::query::plumbing::get_query_impl\r\n  38: rustc_typeck::check::check::check_item_type\r\n  39: rustc_middle::hir::map::Map::visit_item_likes_in_module\r\n  40: rustc_typeck::check::check::check_mod_item_types\r\n  41: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::check_mod_item_types>::compute\r\n  42: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  43: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  44: rustc_data_structures::stack::ensure_sufficient_stack\r\n  45: rustc_query_system::query::plumbing::get_query_impl\r\n  46: rustc_query_system::query::plumbing::ensure_query_impl\r\n  47: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  48: rustc_typeck::check_crate\r\n  49: rustc_interface::passes::analysis\r\n  50: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  51: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  52: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  53: rustc_middle::ty::query::plumbing::<impl rustc_query_system::query::QueryContext for rustc_middle::ty::context::TyCtxt>::start_query::{{closure}}::{{closure}}::{{closure}}\r\n  54: rustc_query_system::query::plumbing::get_query_impl\r\n  55: rustc_interface::passes::QueryContext::enter\r\n  56: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  57: rustc_span::with_source_map\r\n  58: rustc_interface::interface::create_compiler_and_run\r\n  59: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "samlich", "id": 1349989, "node_id": "MDQ6VXNlcjEzNDk5ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/1349989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samlich", "html_url": "https://github.com/samlich", "followers_url": "https://api.github.com/users/samlich/followers", "following_url": "https://api.github.com/users/samlich/following{/other_user}", "gists_url": "https://api.github.com/users/samlich/gists{/gist_id}", "starred_url": "https://api.github.com/users/samlich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samlich/subscriptions", "organizations_url": "https://api.github.com/users/samlich/orgs", "repos_url": "https://api.github.com/users/samlich/repos", "events_url": "https://api.github.com/users/samlich/events{/privacy}", "received_events_url": "https://api.github.com/users/samlich/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78456/timeline", "performed_via_github_app": null, "state_reason": "completed"}