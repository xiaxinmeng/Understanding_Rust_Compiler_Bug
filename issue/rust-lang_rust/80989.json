{"url": "https://api.github.com/repos/rust-lang/rust/issues/80989", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80989/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80989/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80989/events", "html_url": "https://github.com/rust-lang/rust/issues/80989", "id": 785376387, "node_id": "MDU6SXNzdWU3ODUzNzYzODc=", "number": 80989, "title": "Compiler generates loop that unnecessarily repeats a comparison every iteration.", "user": {"login": "Asminthe", "id": 5125478, "node_id": "MDQ6VXNlcjUxMjU0Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/5125478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Asminthe", "html_url": "https://github.com/Asminthe", "followers_url": "https://api.github.com/users/Asminthe/followers", "following_url": "https://api.github.com/users/Asminthe/following{/other_user}", "gists_url": "https://api.github.com/users/Asminthe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Asminthe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Asminthe/subscriptions", "organizations_url": "https://api.github.com/users/Asminthe/orgs", "repos_url": "https://api.github.com/users/Asminthe/repos", "events_url": "https://api.github.com/users/Asminthe/events{/privacy}", "received_events_url": "https://api.github.com/users/Asminthe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-01-13T19:21:23Z", "updated_at": "2023-04-05T17:36:24Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "In some situations, the compiler seems to correctly deduce that it only needs to do one comparison for array boundary checking, but places that comparison inside a loop when it could have been placed outside.\r\n\r\nHere is a simple function that demonstrates the issue: https://godbolt.org/z/KExT6c\r\n\r\n![image](https://user-images.githubusercontent.com/5125478/104498722-efb1f180-5590-11eb-8466-42fd0e5c0c5a.png)\r\n\r\nImmediately following the .LBB0_2: label are cmp and ja instructions that do not need to be inside the loop.  Either the branch is taken on the first iteration or it is never taken, as rcx is unchanging within the loop.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80989/timeline", "performed_via_github_app": null, "state_reason": null}