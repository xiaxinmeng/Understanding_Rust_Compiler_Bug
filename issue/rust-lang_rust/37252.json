{"url": "https://api.github.com/repos/rust-lang/rust/issues/37252", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/37252/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/37252/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/37252/events", "html_url": "https://github.com/rust-lang/rust/issues/37252", "id": 183717315, "node_id": "MDU6SXNzdWUxODM3MTczMTU=", "number": 37252, "title": "LLVM assertion when `cargo build`ing `std` with `panic=abort`", "user": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-18T15:17:39Z", "updated_at": "2016-11-25T04:50:48Z", "closed_at": "2016-11-25T04:50:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### STR\n\n```\n$ cargo new --bin foo && cd $_\n$ edit Cargo.toml && cat $_\n```\n\n``` toml\n# Cargo.toml\n[package]\nname = \"foo\"\nversion = \"0.1.0\"\n\n[dependencies]\nstd = { path = \"$(rustc --print sysroot)/lib/rustlib/src/rust/src/libstd\" }\n\n[profile.dev]\npanic = \"abort\"\n```\n\n```\n$ cargo build -j1\n   Compiling build_helper v0.1.0 (file://$sysroot/lib/rustlib/src/rust/src/build_helper)\n   Compiling unwind v0.0.0 (file://$sysroot/lib/rustlib/src/rust/src/libunwind)\n   Compiling core v0.0.0 (file://$sysroot/lib/rustlib/src/rust/src/libcore)\n   Compiling alloc v0.0.0 (file://$sysroot/lib/rustlib/src/rust/src/liballoc)\n   Compiling libc v0.0.0 (file://$sysroot/lib/rustlib/src/rust/src/rustc/libc_shim)\n   Compiling panic_abort v0.0.0 (file://$sysroot/lib/rustlib/src/rust/src/libpanic_abort)\n   Compiling alloc_system v0.0.0 (file://$sysroot/lib/rustlib/src/rust/src/liballoc_system)\n   Compiling rustc_unicode v0.0.0 (file://$sysroot/lib/rustlib/src/rust/src/librustc_unicode)\n   Compiling rand v0.0.0 (file://$sysroot/lib/rustlib/src/rust/src/librand)\n   Compiling gcc v0.3.37\n   Compiling compiler_builtins v0.0.0 (file://$sysroot/lib/rustlib/src/rust/src/libcompiler_builtins)\nwarning: ar: `u' modifier ignored since `D' is thedefault (see `U')\n   Compiling std v0.0.0 (file://$sysroot/lib/rustlib/src/rust/src/libstd)\n   Compiling collections v0.0.0 (file://$sysroot/lib/rustlib/src/rust/src/libcollections)\n   Compiling panic_unwind v0.0.0 (file://$sysroot/lib/rustlib/src/rust/src/libpanic_unwind)\nrustc: /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/llvm/lib/IR/Instructions.cpp:1436: void llvm::StoreInst::AssertOK(): Assertion`getOperand(0)->getType() == cast<PointerType>(getOperand(1)->getType())->getElementType() && \"Ptr must be a pointer to Val type!\"' failed.\nerror: Could not compile `panic_unwind`.\n```\n### Meta\n\n```\n$ rustc -Vv\nrustc 1.14.0-nightly (6dc035ed9 2016-10-15)\nbinary: rustc\ncommit-hash: 6dc035ed911672c6a1f7afc9eed15fb08e574e5b\ncommit-date: 2016-10-15\nhost: x86_64-unknown-linux-gnu\nrelease: 1.14.0-nightly\n```\n\n---\n\nThe issue, I think, is that Cargo tries to build `panic_unwind` with\n`panic=abort`. Perhaps, we could fix this by adding a Cargo feature that\ndisables the compilation of `panic_unwind` and that's supposed to be used in\nconjunction with `panic=abort`. Of course, it'd be better if this was automatic\nbut I don't think that's possible.\n\ncc @alexcrichton\ncc #36610\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/37252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/37252/timeline", "performed_via_github_app": null, "state_reason": "completed"}