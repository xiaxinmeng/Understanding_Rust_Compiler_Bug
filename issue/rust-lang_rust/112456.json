{"url": "https://api.github.com/repos/rust-lang/rust/issues/112456", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112456/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112456/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112456/events", "html_url": "https://github.com/rust-lang/rust/issues/112456", "id": 1749719344, "node_id": "I_kwDOAAsO6M5oSpkw", "number": 112456, "title": "ICE: \"forcing query with already existing `DepNode`\" with many async calls", "user": {"login": "GunnarMorrigan", "id": 13799935, "node_id": "MDQ6VXNlcjEzNzk5OTM1", "avatar_url": "https://avatars.githubusercontent.com/u/13799935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GunnarMorrigan", "html_url": "https://github.com/GunnarMorrigan", "followers_url": "https://api.github.com/users/GunnarMorrigan/followers", "following_url": "https://api.github.com/users/GunnarMorrigan/following{/other_user}", "gists_url": "https://api.github.com/users/GunnarMorrigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/GunnarMorrigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GunnarMorrigan/subscriptions", "organizations_url": "https://api.github.com/users/GunnarMorrigan/orgs", "repos_url": "https://api.github.com/users/GunnarMorrigan/repos", "events_url": "https://api.github.com/users/GunnarMorrigan/events{/privacy}", "received_events_url": "https://api.github.com/users/GunnarMorrigan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}, {"id": 2420759390, "node_id": "MDU6TGFiZWwyNDIwNzU5Mzkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-query-system", "name": "A-query-system", "color": "f7e101", "default": false, "description": "Area: The rustc query system (https://rustc-dev-guide.rust-lang.org/query.html)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-06-09T11:30:35Z", "updated_at": "2023-06-19T16:04:21Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Code\r\n\r\nI can not provide all rust code and I was unable to recreate a minimal reproducable example. I have tried for some time now.\r\nI currently run nightly to have access to async in trait feature.\r\nThe async in trait is used to abstract dbus implementations using zbus for production and for development a direct object is returned.\r\nThe zbus production code performs 1 proxy creation async call and 16 dbus calls.\r\n\r\nIf I remove all the async dbus calls rustc does not crash:\r\n\r\n```Rust\r\npub trait ModemTrait: Sized + Send + Sync + 'static {\r\n    fn new() -> impl Future<Output = Result<Self, HalError>> + Send;\r\n    fn get_modem_info(&self) -> impl Future<Output = Result<ModemInfo, HalError>> + Send + '_;\r\n}\r\n\r\npub struct ModemController {\r\n    conn: Connection,\r\n}\r\n\r\nimpl ModemTrait for ModemController {\r\n    async fn new() -> Result<Self, HalError> {\r\n        let conn = Connection::system().await?;\r\n\r\n        let ret = Self { conn };\r\n\r\n        Ok(ret)\r\n    }\r\n\r\n    fn get_modem_info(&self) -> impl Future<Output = Result<ModemInfo, HalError>> + Send + '_ {\r\n        async {\r\n            let proxy = PppDbusProxy::new(&self.conn).await?;\r\n\r\n            // Ok(ModemInfo::default())\r\n\r\n            Ok(ModemInfo {\r\n                sim_pin_status: proxy.get_sim_pin_status().await?,\r\n                initialized: proxy.is_initialized().await?,\r\n                online: proxy.is_online().await?,\r\n                modem_manufacturer: proxy.get_modem_manufacturer().await?,\r\n                modem_model: proxy.get_modem_model().await?,\r\n                modem_imei: proxy.get_modem_imei().await?,\r\n                modem_firmware_version: proxy.get_modem_firmware_version().await?,\r\n                iccid: proxy.get_ccid().await?,\r\n                network_type: proxy.get_network_type().await?,\r\n                network_operator: proxy.get_network_operator().await?,\r\n                signal_power: proxy.get_signal_power().await?,\r\n                signal_power_condition: proxy.get_signal_power_condition().await?,\r\n                signal_quality_rating: proxy.get_signal_quality_rating().await?,\r\n                signal_quality_source: proxy.get_signal_quality_source().await?,\r\n                mobile_network_operator_profile: proxy\r\n                    .get_mobile_network_operators_profile()\r\n                    .await?,\r\n                ppp_connection_start: proxy.get_ppp_connection_start_time().await?,\r\n            })\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.72.0-nightly (a97c36dd2 2023-06-07)\r\nbinary: rustc\r\ncommit-hash: a97c36dd2e6f711949fc9b790476e93bd9e6d1f4\r\ncommit-date: 2023-06-07\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.72.0-nightly\r\nLLVM version: 16.0.5\r\n```\r\n\r\n### Error output\r\n\r\nSee backtrace\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\r\n- query-key: Canonical { value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: All, constness: NotConst }, value: Binder(TraitPredicate(<for<'a, 'b, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j, 'k, 'l, 'm, 'n, 'o, 'p, 'q, 'r, 's, 't, 'u, 'v> {std::future::ResumeTy, &'a hal::modem::PppDbusProxy<'b>, hal::modem::PppDbusProxy<'c>, &'d zbus::proxy::Proxy<'e>, zbus::proxy::Proxy<'f>, &'g str, (), &'h (), impl futures::Future<Output = std::result::Result<i32, zbus::error::Error>>, impl futures::Future<Output = std::result::Result<i32, zbus::error::Error>>} as std::marker::Send>, polarity:Positive), []) }, max_universe: U0, variables: [] }\r\n- dep-node: evaluate_obligation(b9c844e08ed73076-be2511b0687549ec)', /rustc/a97c36dd2e6f711949fc9b790476e93bd9e6d1f4\\compiler\\rustc_query_system\\src\\dep_graph\\graph.rs:350:9\r\nstack backtrace:\r\n   0:     0x7ffde0d6616c - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h9f8452425a9293aa\r\n   1:     0x7ffde0d9f42b - core::fmt::write::h2eda102ff29c5ee0\r\n   2:     0x7ffde0d5b899 - <std::io::IoSlice as core::fmt::Debug>::fmt::he00f0eb5510d32b6\r\n   3:     0x7ffde0d65f1b - std::sys::common::alloc::realloc_fallback::h0fb58e6852cd6235\r\n   4:     0x7ffde0d69779 - std::panicking::default_hook::h3f902ef65094b7fd\r\n   5:     0x7ffde0d6942f - std::panicking::default_hook::h3f902ef65094b7fd\r\n   6:     0x7ffdd02758ba - rustc_driver_impl[47427ea40f3562ca]::install_ice_hook\r\n   7:     0x7ffde0d69ea0 - std::panicking::rust_panic_with_hook::h8862750156c5b4fc\r\n   8:     0x7ffde0d69c2d - <std::panicking::begin_panic_handler::StrPanicPayload as core::panic::BoxMeUp>::get::h50bc229817f9c976\r\n   9:     0x7ffde0d66d99 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h9f8452425a9293aa\r\n  10:     0x7ffde0d69930 - rust_begin_unwind\r\n  11:     0x7ffde0dd2e25 - core::panicking::panic_fmt::h183ebee5e4d5a07e\r\n  12:     0x7ffdcfc208a4 - rustc_query_impl[b3acef907b3c9332]::query_callbacks\r\n  13:     0x7ffdcfbf8aa7 - rustc_query_impl[b3acef907b3c9332]::query_callbacks\r\n  14:     0x7ffdd000d59a - <rustc_trait_selection[cae6069403985fd3]::traits::fulfill::FulfillProcessor as rustc_data_structures[f61cfa0a0c0e7b14]::obligation_forest::ObligationProcessor>::process_obligation\r\n  15:     0x7ffdcff43ab0 - <rustc_lint[ba9bc166ab672c34]::nonstandard_style::NonUpperCaseGlobals as rustc_lint[ba9bc166ab672c34]::passes::LateLintPass>::check_generic_param\r\n  16:     0x7ffdd000abe1 - <rustc_trait_selection[cae6069403985fd3]::traits::fulfill::FulfillmentContext as rustc_infer[2c113e582cf24f1]::traits::engine::TraitEngine>::select_where_possible\r\n  17:     0x7ffdcfb2c4ec - <polonius_engine[d666f5c24090ec1]::facts::AllFacts<rustc_borrowck[a4658bf187082e81]::facts::RustcFacts> as rustc_borrowck[a4658bf187082e81]::facts::AllFactsExt>::enabled\r\n  18:     0x7ffdcfb8dce4 - rustc_query_impl[b3acef907b3c9332]::query_callbacks\r\n  19:     0x7ffdcfbb89e4 - rustc_query_impl[b3acef907b3c9332]::query_callbacks\r\n  20:     0x7ffdce5e8bf5 - rustc_query_impl[b3acef907b3c9332]::profiling_support::alloc_self_profile_query_strings\r\n  21:     0x7ffdce53a7aa - rustc_query_impl[b3acef907b3c9332]::profiling_support::alloc_self_profile_query_strings\r\n  22:     0x7ffdcfc53d18 - rustc_query_impl[b3acef907b3c9332]::query_callbacks\r\n  23:     0x7ffdcfbcd3dc - rustc_query_impl[b3acef907b3c9332]::query_callbacks\r\n  24:     0x7ffdcf38e201 - <winapi_util[be25da47fda99d33]::file::Information>::number_of_links\r\n  25:     0x7ffdcfb8d550 - rustc_query_impl[b3acef907b3c9332]::query_callbacks\r\n  26:     0x7ffdcfc19434 - rustc_query_impl[b3acef907b3c9332]::query_callbacks\r\n  27:     0x7ffdcfbf8e49 - rustc_query_impl[b3acef907b3c9332]::query_callbacks\r\n  28:     0x7ffdd01044df - <rustc_middle[2d27bf43a2f0f270]::ty::instance::Instance>::expect_resolve\r\n  29:     0x7ffdcf5aeb3d - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_constant\r\n  30:     0x7ffdcf5ab99d - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  31:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  32:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  33:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  34:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  35:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  36:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  37:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  38:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  39:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  40:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  41:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  42:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  43:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  44:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  45:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  46:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  47:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  48:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  49:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  50:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  51:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  52:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  53:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  54:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  55:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  56:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  57:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  58:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  59:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  60:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  61:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  62:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  63:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  64:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  65:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  66:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  67:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  68:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  69:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  70:     0x7ffdcf5acf3b - <rustc_monomorphize[86b5476df028a03b]::collector::MirUsedCollector as rustc_middle[2d27bf43a2f0f270]::mir::visit::Visitor>::visit_operand\r\n  71:     0x7ffdce2c469a - rustc_monomorphize[86b5476df028a03b]::provide\r\n  72:     0x7ffdce2c42f2 - rustc_monomorphize[86b5476df028a03b]::provide\r\n  73:     0x7ffdce2c0009 - rustc_monomorphize[86b5476df028a03b]::provide\r\n  74:     0x7ffdce2c0a50 - rustc_monomorphize[86b5476df028a03b]::provide\r\n  75:     0x7ffdce52b92a - rustc_query_impl[b3acef907b3c9332]::profiling_support::alloc_self_profile_query_strings\r\n  76:     0x7ffdce50eaad - rustc_query_impl[b3acef907b3c9332]::profiling_support::alloc_self_profile_query_strings\r\n  77:     0x7ffdce5e8a8c - rustc_query_impl[b3acef907b3c9332]::profiling_support::alloc_self_profile_query_strings\r\n  78:     0x7ffdce538be7 - rustc_query_impl[b3acef907b3c9332]::profiling_support::alloc_self_profile_query_strings\r\n  79:     0x7ffdce59bc4a - rustc_query_impl[b3acef907b3c9332]::profiling_support::alloc_self_profile_query_strings\r\n  80:     0x7ffdd2093d00 - <rustc_query_impl[b3acef907b3c9332]::plumbing::QueryCtxt as rustc_query_system[f98e4918ea2c4399]::query::QueryContext>::depth_limit_error\r\n  81:     0x7ffdcdb6d7d0 - <rustc_codegen_llvm[4a50c542f08b5a28]::llvm_::ffi::Type>::i8p_llcx\r\n  82:     0x7ffdcdb528e9 - <rustc_codegen_llvm[4a50c542f08b5a28]::LlvmCodegenBackend as rustc_codegen_ssa[ad0b9fd6d43b463a]::traits::backend::CodegenBackend>::codegen_crate\r\n  83:     0x7ffdcdb17db8 - rustc_interface[df1410a9ca1fcbf5]::passes::start_codegen\r\n  84:     0x7ffdcdb25fb3 - rustc_interface[df1410a9ca1fcbf5]::util::build_output_filenames\r\n  85:     0x7ffdcdb1da55 - <rustc_interface[df1410a9ca1fcbf5]::queries::Queries>::ongoing_codegen\r\n  86:     0x7ffdcdad8f14 - rustc_driver_impl[47427ea40f3562ca]::main\r\n  87:     0x7ffdcdaf8a3b - <rustc_middle[2d27bf43a2f0f270]::ty::SymbolName as core[cbb6584da310abea]::fmt::Debug>::fmt\r\n  88:     0x7ffdcdaf6c76 - <rustc_middle[2d27bf43a2f0f270]::ty::SymbolName as core[cbb6584da310abea]::fmt::Debug>::fmt\r\n  89:     0x7ffde0d7d2cc - std::sys::windows::thread::Thread::new::hdc4d105fd5a00159\r\n  90:     0x7ffe83ef7614 - BaseThreadInitThunk\r\n  91:     0x7ffe842426a1 - RtlUserThreadStart\r\n\r\nerror: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.72.0-nightly (a97c36dd2 2023-06-07) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED]\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [evaluate_obligation] evaluating trait selection obligation `for<'a, 'b, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j, 'k, 'l, 'm, 'n, 'o, 'p, 'q, 'r, 's, 't, 'u, 'v> {core::future::ResumeTy, &'a hal::modem::PppDbusProxy<'b>, hal::modem::PppDbusProxy<'c>, &'d zbus::proxy::Proxy<'e>, zbus::proxy::Proxy<'f>, &'g str, (), &'h \r\n(), zbus::proxy::Proxy<'a>::call::{opaque#0}, zbus::proxy::Proxy<'a>::call::{opaque#0}}: core::marker::Send`\r\n#1 [codegen_select_candidate] computing candidate for `<axum_api::ApiState<hal::Cu, hal::ups_mon::UpsMon, hal::modem::ModemController, hal::led_ctrl::LedCtrl>::modem_info as axum::handler::Handler<(axum_core::extract::private::ViaParts, axum::extract::state::State<alloc::sync::Arc<axum_api::ApiState<hal::Cu, hal::ups_mon::UpsMon, hal::modem::ModemController, hal::led_ctrl::LedCtrl>>>), alloc::sync::Arc<axum_api::ApiState<hal::Cu, hal::ups_mon::UpsMon, hal::modem::ModemController, hal::led_ctrl::LedCtrl>>>>`\r\n#2 [resolve_instance] resolving instance `<axum_api::ApiState<hal::Cu, hal::ups_mon::UpsMon, hal::modem::ModemController, hal::led_ctrl::LedCtrl>::modem_info as axum::handler::Handler<(axum_core::extract::private::ViaParts, axum::extract::state::State<alloc::sync::Arc<axum_api::ApiState<hal::Cu, hal::ups_mon::UpsMon, hal::modem::ModemController, hal::led_ctrl::LedCtrl>>>), alloc::sync::Arc<axum_api::ApiState<hal::Cu, hal::ups_mon::UpsMon, hal::modem::ModemController, hal::led_ctrl::LedCtrl>>>>::with_state`\r\n#3 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112456/timeline", "performed_via_github_app": null, "state_reason": null}