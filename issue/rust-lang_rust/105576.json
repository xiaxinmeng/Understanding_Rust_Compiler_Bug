{"url": "https://api.github.com/repos/rust-lang/rust/issues/105576", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105576/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105576/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105576/events", "html_url": "https://github.com/rust-lang/rust/issues/105576", "id": 1490498321, "node_id": "I_kwDOAAsO6M5Y1zMR", "number": 105576, "title": "Const RangeInclusive<T> used within match case raises error E0308", "user": {"login": "bvanseg", "id": 51012994, "node_id": "MDQ6VXNlcjUxMDEyOTk0", "avatar_url": "https://avatars.githubusercontent.com/u/51012994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bvanseg", "html_url": "https://github.com/bvanseg", "followers_url": "https://api.github.com/users/bvanseg/followers", "following_url": "https://api.github.com/users/bvanseg/following{/other_user}", "gists_url": "https://api.github.com/users/bvanseg/gists{/gist_id}", "starred_url": "https://api.github.com/users/bvanseg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bvanseg/subscriptions", "organizations_url": "https://api.github.com/users/bvanseg/orgs", "repos_url": "https://api.github.com/users/bvanseg/repos", "events_url": "https://api.github.com/users/bvanseg/events{/privacy}", "received_events_url": "https://api.github.com/users/bvanseg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-12-11T22:07:38Z", "updated_at": "2022-12-11T22:29:10Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::ops::RangeInclusive;\r\n\r\nconst MEMORY_RANGE: RangeInclusive<u16> = 0x00FF..=0x3FFF;\r\n\r\nfn main() {\r\n    let address: u16 = 0x0FFF;\r\n\r\n    match address {\r\n        // This is valid.\r\n        0x00FF..=0x3FFF => { /* ... */ },\r\n        // This is not valid.\r\n        MEMORY_RANGE => { /* ... */ }\r\n    }\r\n}\r\n```\r\n\r\nI expected to see this happen: MEMORY_RANGE to compile without error.\r\n\r\nInstead, this happened: MEMORY_RANGE as a case within the match raises a compiler error `error[E0308]: mismatched types`.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.65.0 (897e37553 2022-11-02)\r\nbinary: rustc\r\ncommit-hash: 897e37553bba8b42751c67658967889d11ecd120\r\ncommit-date: 2022-11-02\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.65.0\r\nLLVM version: 15.0.0\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:12:9\r\n   |\r\n3  | const MEMORY_RANGE: RangeInclusive<u16> = 0x00FF..=0x3FFF;\r\n   | --------------------------------------- constant defined here\r\n...\r\n8  |     match address {\r\n   |           ------- this expression has type `u16`\r\n...\r\n12 |         MEMORY_RANGE => { /* ... */ }\r\n   |         ^^^^^^^^^^^^\r\n   |         |\r\n   |         expected `u16`, found struct `RangeInclusive`\r\n   |         `MEMORY_RANGE` is interpreted as a constant, not a new binding\r\n   |\r\n   = note: expected type `u16`\r\n            found struct `RangeInclusive<u16>`\r\nhelp: you may want to move the range into the match block\r\n   |\r\n12 |         0x00FF..=0x3FFF => { /* ... */ }\r\n   |         ~~~~~~~~~~~~~~~\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105576/timeline", "performed_via_github_app": null, "state_reason": null}