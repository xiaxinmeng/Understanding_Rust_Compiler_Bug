{"url": "https://api.github.com/repos/rust-lang/rust/issues/917", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/917/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/917/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/917/events", "html_url": "https://github.com/rust-lang/rust/issues/917", "id": 1642346, "node_id": "MDU6SXNzdWUxNjQyMzQ2", "number": 917, "title": "Maybe move should be a unary op?", "user": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2011-09-14T10:12:47Z", "updated_at": "2012-08-01T18:21:21Z", "closed_at": "2012-08-01T00:33:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If I have\n\n```\nlet x = [];\n// build up a big vector somehow\nret {a: x, b: something};\n```\n\nI'd want to move the vector into the record, rather than copy it. The move-temporary-value optimization already ensures that, if the given expression is a temporary, it would be moved into the record, and that the result record will be moved, not copied, to the ret pointer. If we had something like `move x`, similar to `copy x`, but de-initializing its source, we could do this whole 'build data structure and return' in a zero-copy way.\n", "closed_by": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/917/timeline", "performed_via_github_app": null, "state_reason": "completed"}