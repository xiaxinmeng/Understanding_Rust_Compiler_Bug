{"url": "https://api.github.com/repos/rust-lang/rust/issues/49237", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49237/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49237/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49237/events", "html_url": "https://github.com/rust-lang/rust/issues/49237", "id": 307268662, "node_id": "MDU6SXNzdWUzMDcyNjg2NjI=", "number": 49237, "title": "Regression of compilation times on the latest nightly (2018-03-20)", "user": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}], "state": "closed", "locked": false, "assignee": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 18, "created_at": "2018-03-21T14:29:05Z", "updated_at": "2018-10-29T09:39:03Z", "closed_at": "2018-10-29T09:39:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For [keccak](https://github.com/RustCrypto/sponges) crate I use simple loop unrolling macros:\r\n```Rust\r\nmacro_rules! unroll5 {\r\n    ($var:ident, $body:block) => {\r\n        { const $var: usize = 0; $body; }\r\n        { const $var: usize = 1; $body; }\r\n        { const $var: usize = 2; $body; }\r\n        { const $var: usize = 3; $body; }\r\n        { const $var: usize = 4; $body; }\r\n    };\r\n}\r\n```\r\n\r\nWhich combined generate a lot of unrolled code as a final result. On the latest Nightly it takes a lot more time to compile the crate than previously:\r\n```sh\r\n$ cargo clean; rustup run stable cargo build\r\n   Compiling keccak v0.1.0 (...)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 3.9 secs\r\ncargo clean; rustup run stable cargo check\r\n   Compiling keccak v0.1.0 (...)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 2.30 secs\r\n$ cargo clean; rustup run nightly cargo build\r\n   Compiling keccak v0.1.0 (...)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 18.65 secs\r\n$ cargo clean; rustup run nightly cargo check\r\n   Compiling keccak v0.1.0 (...)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 2.32 secs\r\n```\r\nHere I've used only 10 iterations instead of 24 in the `unroll24` macro, full version takes more than several minutes to compile. Judging by `cargo check` warnings expansion takes approximately the same time and the drastic difference comes from later stages.\r\n\r\nEDIT: `RUSTFLAGS=\"-Z time-passes\" rustup run nightly cargo build` produces the following result:\r\n<details>\r\n  <summary>Click to expand</summary>\r\n\r\n```\r\n  time: 0.001; rss: 48MB\tparsing\r\n  time: 0.000; rss: 50MB\tgarbage collect incremental cache directory\r\n  time: 0.000; rss: 50MB\trecursion limit\r\n  time: 0.000; rss: 50MB\tcrate injection\r\n  time: 0.000; rss: 50MB\tplugin loading\r\n  time: 0.000; rss: 50MB\tplugin registration\r\n  time: 0.000; rss: 50MB\tbackground load prev dep-graph\r\n  time: 0.059; rss: 71MB\texpansion\r\n  time: 0.000; rss: 71MB\tmaybe building test harness\r\n  time: 0.001; rss: 71MB\tmaybe creating a macro crate\r\n  time: 0.003; rss: 71MB\tcreating allocators\r\n  time: 0.002; rss: 71MB\tAST validation\r\n  time: 0.013; rss: 74MB\tname resolution\r\n  time: 0.002; rss: 74MB\tcomplete gated feature checking\r\n  time: 0.000; rss: 74MB\tblocked while dep-graph loading finishes\r\n  time: 0.016; rss: 80MB\tlowering ast -> hir\r\n  time: 0.008; rss: 80MB\tearly lint checks\r\n  time: 0.021; rss: 83MB\tindexing hir\r\n  time: 0.000; rss: 79MB\tload query result cache\r\n  time: 0.000; rss: 79MB\tlooking for entry point\r\n  time: 0.000; rss: 79MB\tlooking for plugin registrar\r\n  time: 0.001; rss: 79MB\tloop checking\r\n  time: 0.000; rss: 81MB\tattribute checking\r\n  time: 0.006; rss: 84MB\tstability checking\r\n  time: 0.012; rss: 88MB\ttype collecting\r\n  time: 0.000; rss: 88MB\toutlives testing\r\n  time: 0.000; rss: 88MB\timpl wf inference\r\n  time: 0.000; rss: 88MB\tcoherence checking\r\n  time: 0.000; rss: 88MB\tvariance testing\r\n  time: 0.046; rss: 106MB\twf checking\r\n  time: 0.023; rss: 109MB\titem-types checking\r\n  time: 1.518; rss: 121MB\titem-bodies checking\r\n  time: 0.031; rss: 122MB\trvalue promotion\r\n  time: 0.014; rss: 122MB\tprivacy checking\r\n  time: 0.002; rss: 122MB\tintrinsic checking\r\n  time: 0.006; rss: 122MB\tmatch checking\r\n  time: 0.084; rss: 118MB\tliveness checking\r\n  time: 0.324; rss: 134MB\tborrow checking\r\n  time: 0.002; rss: 135MB\tMIR borrow checking\r\n  time: 0.000; rss: 135MB\tMIR effect checking\r\n  time: 0.003; rss: 135MB\tdeath checking\r\n  time: 0.000; rss: 135MB\tunused lib feature checking\r\n  time: 0.039; rss: 138MB\tlint checking\r\n  time: 0.000; rss: 138MB\tdumping chalk-like clauses\r\n  time: 0.000; rss: 138MB\tresolving dependency formats\r\n    time: 0.037; rss: 140MB\twrite metadata\r\n    time: 14.945; rss: 143MB\ttranslation item collection\r\n    time: 0.000; rss: 143MB\tcodegen unit partitioning\r\n    time: 0.142; rss: 151MB\ttranslate to LLVM IR\r\n    time: 0.000; rss: 151MB\tassert dep graph\r\n    time: 0.000; rss: 152MB\tllvm function passes [2lyh15q6cjwzy18c]\r\n    time: 0.000; rss: 152MB\tllvm module passes [2lyh15q6cjwzy18c]\r\n    time: 0.002; rss: 159MB\tcodegen passes [2lyh15q6cjwzy18c]\r\n      time: 0.024; rss: 160MB\tpersist query result cache\r\n    time: 0.030; rss: 162MB\tllvm function passes [30rksvufw6ddw8se]\r\n    time: 0.004; rss: 163MB\tllvm module passes [30rksvufw6ddw8se]\r\n      time: 0.011; rss: 161MB\tpersist dep-graph\r\n    time: 0.034; rss: 161MB\tserialize dep graph\r\n  time: 15.160; rss: 161MB\ttranslation\r\n    time: 0.526; rss: 117MB\tcodegen passes [30rksvufw6ddw8se]\r\n  time: 0.645; rss: 108MB\tLLVM passes\r\n  time: 0.000; rss: 108MB\tserialize work products\r\n  time: 0.001; rss: 108MB\tlinking\r\n```\r\n</details>", "closed_by": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49237/timeline", "performed_via_github_app": null, "state_reason": "completed"}