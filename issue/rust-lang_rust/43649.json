{"url": "https://api.github.com/repos/rust-lang/rust/issues/43649", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43649/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43649/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43649/events", "html_url": "https://github.com/rust-lang/rust/issues/43649", "id": 248133823, "node_id": "MDU6SXNzdWUyNDgxMzM4MjM=", "number": 43649, "title": "struct addrinfo needs padding on Solaris/SPARC", "user": {"login": "dhduvall", "id": 7074165, "node_id": "MDQ6VXNlcjcwNzQxNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/7074165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhduvall", "html_url": "https://github.com/dhduvall", "followers_url": "https://api.github.com/users/dhduvall/followers", "following_url": "https://api.github.com/users/dhduvall/following{/other_user}", "gists_url": "https://api.github.com/users/dhduvall/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhduvall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhduvall/subscriptions", "organizations_url": "https://api.github.com/users/dhduvall/orgs", "repos_url": "https://api.github.com/users/dhduvall/repos", "events_url": "https://api.github.com/users/dhduvall/events{/privacy}", "received_events_url": "https://api.github.com/users/dhduvall/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 632899563, "node_id": "MDU6TGFiZWw2MzI4OTk1NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-SPARC", "name": "O-SPARC", "color": "6e6ec0", "default": false, "description": "Target: SPARC processors"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-08-04T22:44:29Z", "updated_at": "2017-08-08T02:08:31Z", "closed_at": "2017-08-08T02:08:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Solaris, `struct addrinfo` is defined like this:\r\n```C\r\nstruct addrinfo {\r\n        int ai_flags;           /* AI_PASSIVE, AI_CANONNAME, ... */\r\n        int ai_family;          /* PF_xxx */\r\n        int ai_socktype;        /* SOCK_xxx */\r\n        int ai_protocol;        /* 0 or IPPROTO_xxx for IPv4 and IPv6 */\r\n#ifdef __sparcv9\r\n        int _ai_pad;            /* for backwards compat with old size_t */\r\n#endif /* __sparcv9 */\r\n        socklen_t ai_addrlen;\r\n        char *ai_canonname;     /* canonical name for hostname */\r\n        struct sockaddr *ai_addr;       /* binary address */\r\n        struct addrinfo *ai_next;       /* next structure in linked list */\r\n};\r\n```\r\nThat padding member needs to be represented in Rust's copy.  This is pretty straightforward, if a bit ugly. The following patch against the 1.19.0 sources fixes all the networking related test failures on SPARC:\r\n```diff\r\n--- rustc-1.19.0-src/src/liblibc/src/unix/solaris/mod.rs\r\n+++ rustc-1.19.0-src/src/liblibc/src/unix/solaris/mod.rs\r\n@@ -204,6 +204,8 @@\r\n         pub ai_family: ::c_int,\r\n         pub ai_socktype: ::c_int,\r\n         pub ai_protocol: ::c_int,\r\n+        #[cfg(target_arch = \"sparc64\")]\r\n+        pub __sparcv9_pad: ::c_int,\r\n         pub ai_addrlen: ::socklen_t,\r\n         pub ai_canonname: *mut ::c_char,\r\n         pub ai_addr: *mut ::sockaddr,\r\n--- rustc-1.19.0-src/src/libstd/sys_common/net.rs\r\n+++ rustc-1.19.0-src/src/libstd/sys_common/net.rs\r\n@@ -165,8 +165,21 @@\r\n     init();\r\n \r\n     let c_host = CString::new(host)?;\r\n+    #[cfg(all(target_os = \"solaris\", target_arch = \"sparc64\"))]\r\n     let hints = c::addrinfo {\r\n         ai_flags: 0,\r\n+        ai_family: 0,\r\n+        ai_socktype: c::SOCK_STREAM,\r\n+        ai_protocol: 0,\r\n+        __sparcv9_pad: 0,\r\n+        ai_addrlen: 0,\r\n+        ai_addr: ptr::null_mut(),\r\n+        ai_canonname: ptr::null_mut(),\r\n+        ai_next: ptr::null_mut()\r\n+    };\r\n+    #[cfg(not(all(target_os = \"solaris\", target_arch = \"sparc64\")))]\r\n+    let hints = c::addrinfo {\r\n+        ai_flags: 0,\r\n         ai_family: 0,\r\n         ai_socktype: c::SOCK_STREAM,\r\n         ai_protocol: 0,\r\n```\r\nBecause this is against 1.19.0, so the `#[cfg]` directive isn't yet allowed inside the initializer, though presumably that could be used on `master`, or beta with `struct_field_attributes`.\r\n\r\nBut I'm struggling to find an idiomatic way to do this in such a way that it needn't be mentioned in `net.rs` at all, and just defaulted to `0` in `solaris/mod.rs`, as well as a way to make it non-`pub`. I haven't yet tried it, but I assume I could use the `Default` trait.  But that would still require me to add `..Default::default()` to the initializer, and I would need to make the change to all the `struct addrinfo` definitions in libc.\r\n\r\nIs there a better way to fix this?", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43649/timeline", "performed_via_github_app": null, "state_reason": "completed"}