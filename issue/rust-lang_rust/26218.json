{"url": "https://api.github.com/repos/rust-lang/rust/issues/26218", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/26218/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/26218/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/26218/events", "html_url": "https://github.com/rust-lang/rust/issues/26218", "id": 87337480, "node_id": "MDU6SXNzdWU4NzMzNzQ4MA==", "number": 26218, "title": "operator overload: compiler ignores candidate Index \"impls\" that are \"deeper\" in the autoderef loop", "user": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-11T12:57:28Z", "updated_at": "2019-12-25T16:11:55Z", "closed_at": "2019-12-25T16:11:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### STR\n\n``` rust\nuse std::ops::{Deref, Index};\n\npub struct Foo(Bar);\n\npub struct Bar;\n\nimpl Deref for Foo {\n    type Target = Bar;\n\n    fn deref(&self) -> &Bar { &self.0 }\n}\n\nimpl Index<()> for Foo {\n    type Output = ();\n\n    fn index(&self, _: ()) -> &() {\n        unimplemented!()\n    }\n}\n\nimpl Index<i32> for Bar {\n    type Output = ();\n\n    fn index(&self, _: i32) -> &() {\n        unimplemented!()\n    }\n}\n\nfn test(foo: Foo) {\n    foo[()]; // OK\n    foo[0];\n    //~^ error: expected `()` found `i32` (BUT, it should work just like the line below)\n    foo.deref()[0]; // OK\n}\n\nfn main() {}\n```\n### Version\n\n```\nrustc 1.2.0-nightly (613e57b44 2015-06-01) (built 2015-06-02)\n```\n\nAFAIC, the problem is that the compiler only tries to unify against the first candidate implementation (in this case `Foo: Index<()>`) that finds in the autoderef loop, but in this case there was a matching candidate deeper in the autoderef loop: `Bar: Index<i32>` after one deref.\n### Workaround\n\nAs a workaround, you can \"forward\" `Bar`'s `Index` implementation as an `Index` implementation on `Foo`:\n\n``` rust\nimpl Index<i32> for Foo {\n    type Output = ();\n\n    fn index(&self, i: i32) -> &() {\n        self.deref().index(i)\n    }\n}\n```\n\nNow the three expression type check:\n\n``` rust\nfn test(foo: Foo) {\n    foo[()]; // OK\n    foo[0];  // OK\n    foo.deref()[0]; // OK\n}\n```\n\nBut this is annoying, if `Bar` has lots of `Index` implementations, then you'll need to forward each one.\n\nThe compiler should exhaustively try all the candidates in the autoderef loop instead of giving up on the first one.\n\ncc @nikomatsakis \n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/26218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/26218/timeline", "performed_via_github_app": null, "state_reason": "completed"}