{"url": "https://api.github.com/repos/rust-lang/rust/issues/96487", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96487/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96487/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96487/events", "html_url": "https://github.com/rust-lang/rust/issues/96487", "id": 1217716014, "node_id": "I_kwDOAAsO6M5IlN8u", "number": 96487, "title": "Increased code size due to unnecessary memcpy libcall in `MaybeUninit::assume_init`", "user": {"login": "piegamesde", "id": 14054505, "node_id": "MDQ6VXNlcjE0MDU0NTA1", "avatar_url": "https://avatars.githubusercontent.com/u/14054505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piegamesde", "html_url": "https://github.com/piegamesde", "followers_url": "https://api.github.com/users/piegamesde/followers", "following_url": "https://api.github.com/users/piegamesde/following{/other_user}", "gists_url": "https://api.github.com/users/piegamesde/gists{/gist_id}", "starred_url": "https://api.github.com/users/piegamesde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piegamesde/subscriptions", "organizations_url": "https://api.github.com/users/piegamesde/orgs", "repos_url": "https://api.github.com/users/piegamesde/repos", "events_url": "https://api.github.com/users/piegamesde/events{/privacy}", "received_events_url": "https://api.github.com/users/piegamesde/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049491442, "node_id": "MDU6TGFiZWwxMDQ5NDkxNDQy", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-heavy", "name": "I-heavy", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to binary size of generated code."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-04-27T18:12:00Z", "updated_at": "2022-07-30T22:58:39Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After updating the compiler toolchain, I noticed that my binary got about 100 bytes larger. In my extremely size constrained environment, this is an increase of 5%. After a lot of minimizing, I tracked the main increase down to `MaybeUninit::assume_init`. It adds a new call to libc's `memcpy`. As far as I can tell, the code is moving the value on the stack a few bytes around, which is pointless (alignment should not be the issue here).\r\n\r\nThis might be related to #61011\r\n\r\n### Code\r\n\r\n[Godbolt link](https://godbolt.org/#g:!((g:!((g:!((h:codeEditor,i:(filename:'1',fontScale:14,fontUsePx:'0',j:1,lang:rust,selection:(endColumn:42,endLineNumber:17,positionColumn:42,positionLineNumber:17,selectionStartColumn:42,selectionStartLineNumber:17,startColumn:42,startLineNumber:17),source:'%23!!%5Bno_std%5D%0A%23!!%5Bno_main%5D%0A%23!!%5Bfeature(linkage)%5D%0A%0Ause+core::*%3B%0A%0A%23%5Bno_mangle%5D%0Aunsafe+fn+main()+-%3E+!!+%7B%0A%09let+flash:+%26FirmwareSig+%3D+%26*(0xe0000000+as+*const+FirmwareSig)%3B%0A%09let+mut+signature+%3D+mem::MaybeUninit::%3CFirmwareSig%3E::uninit()%3B%0A%0A%09memcpy(%0A%09%09(%26mut+signature)+as+*mut+mem::MaybeUninit::%3CFirmwareSig%3E+as+*mut+u8,%0A%09%09flash+as+*const+FirmwareSig+as+*const+u8,%0A%09%09mem::size_of::%3CFirmwareSig%3E(),%0A%09)%3B%0A%09let+signature+%3D+signature.assume_init()%3B%0A%0A%09let+pubkey_hash+%3D+sha256(%0A%09%09%26mem::transmute::%3C_,+%5Bu8%3B+mem::size_of::%3CPubkey%3E()%5D%3E(signature.pubkey)+as+%26%5Bu8%5D%0A%09)%3B%0A%0A%09if+%26pubkey_hash+%3D%3D+%26signature.pubkeys_hashes%5Bsignature.pubkey_id%5D+%7B%0A%09%7D+else+%7B%0A%09%09panic!!()%3B%0A%09%7D%0A%0A%09loop+%7B%7D%0A%7D%0A%0Atype+Hash+%3D+%5Bu8%3B+32%5D%3B%0Atype+Pubkey+%3D+%5B%5BHash%3B+2%5D%3B+256%5D%3B%0A%0A%23%5Brepr(C)%5D+%0Astruct+FirmwareSig+%7B%0A%09pubkey_id:+usize,%0A%09pubkey:+Pubkey,%0A%09pubkeys_hashes:+%5BHash%3B+32%5D,%0A%7D%0A%0A%23%5Bpanic_handler%5D%0Apub+fn+panic(_info:+%26panic::PanicInfo)+-%3E+!!+%7B%0A%09/*+We+always+run+panic%3Dabort+*/%0A%09unsafe+%7B+abort()%3B+%7D%0A%7D%0A%0A//+Stubs%0Aextern+%22Rust%22+%7B%0A%09fn+abort()+-%3E+!!%3B%0A++++fn+sha256(bytes:+%26%5Bu8%5D)+-%3E+%5Bu8%3B+32%5D%3B%0A++++fn+memcpy(dest:+*mut+u8,+src:+*const+u8,+n:+usize)%3B%0A%7D%0A'),l:'5',n:'0',o:'Rust+source+%231',t:'0')),k:67.41230591865605,l:'4',n:'0',o:'',s:0,t:'0'),(g:!((h:compiler,i:(compiler:nightly,filters:(b:'0',binary:'1',commentOnly:'0',demangle:'0',directives:'0',execute:'1',intel:'0',libraryCode:'0',trim:'1'),flagsViewOpen:'1',fontScale:14,fontUsePx:'0',j:1,lang:rust,libs:!(),options:'--target%3Driscv32i-unknown-none-elf+-C+opt-level%3Ds+-C+panic%3Dabort+-C+codegen-units%3D1+-C+lto%3Dfat+-C+codegen-units%3D1+--cfg+!'feature%3D%22panic_immediate_abort%22!'',selection:(endColumn:1,endLineNumber:1,positionColumn:1,positionLineNumber:1,selectionStartColumn:1,selectionStartLineNumber:1,startColumn:1,startLineNumber:1),source:1,tree:'1'),l:'5',n:'0',o:'rustc+nightly+(Rust,+Editor+%231,+Compiler+%231)',t:'0'),(h:output,i:(compilerName:'rustc+nightly',editorid:1,fontScale:14,fontUsePx:'0',j:1,wrap:'1'),l:'5',n:'0',o:'Output+of+rustc+nightly+(Compiler+%231)',t:'0')),k:32.587694081343955,l:'4',n:'0',o:'',s:0,t:'0')),l:'2',n:'0',o:'',t:'0')),version:4)\r\n\r\n### Version it worked on\r\n\r\nThe last version I got it to run on was `nightly-2022-02-01`, but it might be working until as late as `2022-02-28` (I had some unrelated compile errors that made bisecting hard).\r\n\r\n### Version with regression\r\n\r\nThe older nightly with regression is `2022-03-12`\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.61.0-nightly (335ffbfa5 2022-03-11)\r\nbinary: rustc\r\ncommit-hash: 335ffbfa547df94ac236f5c56130cecf99c8d82b\r\ncommit-date: 2022-03-11\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.61.0-nightly\r\nLLVM version: 14.0.0\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96487/timeline", "performed_via_github_app": null, "state_reason": null}