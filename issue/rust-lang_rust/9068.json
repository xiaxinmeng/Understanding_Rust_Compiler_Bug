{"url": "https://api.github.com/repos/rust-lang/rust/issues/9068", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/9068/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/9068/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/9068/events", "html_url": "https://github.com/rust-lang/rust/issues/9068", "id": 19174860, "node_id": "MDU6SXNzdWUxOTE3NDg2MA==", "number": 9068, "title": "Borrow checker reports multiple mutable borrows when there's only one", "user": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-09-09T03:49:46Z", "updated_at": "2015-01-20T20:52:46Z", "closed_at": "2015-01-20T20:52:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Perhaps I'm going about it wrong, but I would hope that the following code would compile:\n\n```\n#[deriving(Clone, Eq, Encodable, Decodable)]\nstruct WorkMap(TreeMap<~str, KindMap>);\n\n#[deriving(Clone, Eq, Encodable, Decodable)]\nstruct KindMap(TreeMap<~str, ~str>);\n\nimpl WorkMap {\n    fn new() -> WorkMap { WorkMap(TreeMap::new()) }\n\n    fn insert_work_key(&mut self, k: WorkKey, val: ~str) {\n        let WorkKey { kind, name } = k;\n        match self.find_mut(&name) {\n            Some(&KindMap(ref mut m)) => { m.insert(kind, val); },\n            None => {\n                let mut new_map = TreeMap::new();\n                new_map.insert(kind, val);\n                self.insert(name, KindMap(new_map));\n            }\n        }\n    }\n}\n```\n\nThe error message:\n\n```\n/Users/tjc/rust/src/libextra/workcache.rs:126:16: 126:21 error: cannot borrow `(*self)#0` as mutable more than once at a time\n/Users/tjc/rust/src/libextra/workcache.rs:126                 self.insert(name, KindMap(new_map));\n                                                              ^~~~~\n/Users/tjc/rust/src/libextra/workcache.rs:121:14: 121:19 note: second borrow of `(*self)#0` as mutable occurs here\n/Users/tjc/rust/src/libextra/workcache.rs:121         match self.find_mut(&name) {\n                                                            ^~~~~\n```\n\nIt would be nice if the borrow checker knew that in the `None` branch, there was no longer a reference to `self` arising from the call to `find_mut`, so at the call to `insert`, there are no other mutable borrows of `self`. Naively, I'd think this would fall under flow-sensitivity, but maybe not?\n\n/cc @nikomatsakis \n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/9068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/9068/timeline", "performed_via_github_app": null, "state_reason": "completed"}