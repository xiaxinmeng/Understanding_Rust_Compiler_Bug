{"url": "https://api.github.com/repos/rust-lang/rust/issues/85841", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85841/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85841/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85841/events", "html_url": "https://github.com/rust-lang/rust/issues/85841", "id": 906909949, "node_id": "MDU6SXNzdWU5MDY5MDk5NDk=", "number": 85841, "title": "Inefficient assembly for semantically equivalent way of matching on enum", "user": {"login": "e00E", "id": 1462179, "node_id": "MDQ6VXNlcjE0NjIxNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1462179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/e00E", "html_url": "https://github.com/e00E", "followers_url": "https://api.github.com/users/e00E/followers", "following_url": "https://api.github.com/users/e00E/following{/other_user}", "gists_url": "https://api.github.com/users/e00E/gists{/gist_id}", "starred_url": "https://api.github.com/users/e00E/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/e00E/subscriptions", "organizations_url": "https://api.github.com/users/e00E/orgs", "repos_url": "https://api.github.com/users/e00E/repos", "events_url": "https://api.github.com/users/e00E/events{/privacy}", "received_events_url": "https://api.github.com/users/e00E/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-05-30T23:12:51Z", "updated_at": "2022-12-01T13:16:26Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://godbolt.org/z/fYfohcsax\r\n\r\n```rust\r\n#[derive(Clone, Copy)]\r\npub enum E {\r\n    E0,\r\n    E1,\r\n    E2,\r\n    E3,\r\n}\r\n\r\nimpl E {\r\n    pub fn next0(self) -> Option<Self> {\r\n        match self {\r\n            E::E0 => Some(E::E1),\r\n            E::E1 => Some(E::E2),\r\n            E::E2 => Some(E::E3),\r\n            E::E3 => None,\r\n        }\r\n    }\r\n\r\n    pub fn next1(self) -> Option<Self> {\r\n        Some(match self {\r\n            E::E0 => E::E1,\r\n            E::E1 => E::E2,\r\n            E::E2 => E::E3,\r\n            E::E3 => return None,\r\n        })\r\n    }\r\n}\r\n```\r\n\r\nOptimized assembly on stable 1.52.0 and nightly:\r\n\r\n```asm\r\nexample::E::next0:\r\n        lea     eax, [rdi + 1]\r\n        ret\r\n\r\nexample::E::next1:\r\n        mov     al, 4\r\n        mov     cl, 1\r\n        movzx   edx, dil\r\n        lea     rsi, [rip + .LJTI1_0]\r\n        movsxd  rdx, dword ptr [rsi + 4*rdx]\r\n        add     rdx, rsi\r\n        jmp     rdx\r\n.LBB1_1:\r\n        mov     cl, 2\r\n        jmp     .LBB1_3\r\n.LBB1_2:\r\n        mov     cl, 3\r\n.LBB1_3:\r\n        mov     eax, ecx\r\n.LBB1_4:\r\n        ret\r\n.LJTI1_0:\r\n        .long   .LBB1_3-.LJTI1_0\r\n        .long   .LBB1_1-.LJTI1_0\r\n        .long   .LBB1_2-.LJTI1_0\r\n        .long   .LBB1_4-.LJTI1_0\r\n```\r\n\r\nI expected next1 to compile to the same assembly as next0.\r\n\r\nEdit 2022-12-01: Not fixed on current stable 1.65 and nightly.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85841/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85841/timeline", "performed_via_github_app": null, "state_reason": null}