{"url": "https://api.github.com/repos/rust-lang/rust/issues/112313", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112313/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112313/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112313/events", "html_url": "https://github.com/rust-lang/rust/issues/112313", "id": 1741705307, "node_id": "I_kwDOAAsO6M5n0FBb", "number": 112313, "title": "building for mipsel, link fails on missing symbol __sync_fetch_and_add_8, which doesn't exist on mips and shouldn't be getting called", "user": {"login": "SeanMollet", "id": 3322854, "node_id": "MDQ6VXNlcjMzMjI4NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3322854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SeanMollet", "html_url": "https://github.com/SeanMollet", "followers_url": "https://api.github.com/users/SeanMollet/followers", "following_url": "https://api.github.com/users/SeanMollet/following{/other_user}", "gists_url": "https://api.github.com/users/SeanMollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/SeanMollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SeanMollet/subscriptions", "organizations_url": "https://api.github.com/users/SeanMollet/orgs", "repos_url": "https://api.github.com/users/SeanMollet/repos", "events_url": "https://api.github.com/users/SeanMollet/events{/privacy}", "received_events_url": "https://api.github.com/users/SeanMollet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2483744621, "node_id": "MDU6TGFiZWwyNDgzNzQ0NjIx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-code-coverage", "name": "A-code-coverage", "color": "f7e101", "default": false, "description": "Area: Source-based code coverage (-Cinstrument-coverage)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-06-05T12:45:59Z", "updated_at": "2023-06-19T20:19:39Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to build for mipsel-unknown-linux-gnu\r\nx86_64 host, ubuntu 22.04\r\nFreshly built from github source toolchain, with profiler = true in config.toml and mipsel-unknown-linux-gnu target as well as the host target. Built with x.py dist, using the stage 2 results as my build toolchain.\r\n\r\nBuilding anything with RUSTFLAGS=\"-C instrument-coverage\" set, leads to the following link error on several object files :\r\n\r\nSingle example:\r\n```\r\nsrc/index.crates.io-6f17d22bba15001f/hyper-0.14.26/src/common/buf.rs:33: undefined reference to `__sync_fetch_and_add_8'\r\n```\r\n\r\nBuilding the same code without the flag works fine. Resulting binary works fine.\r\n\r\nPer the following GCC bug, MIPS 32 doesn't support 8 byte atomic operations:\r\nhttps://gcc.gnu.org/bugzilla/show_bug.cgi?id=56300\r\n\r\nIn the project/target/mipsel-unknown-linux-gnu folder, running \r\n```\r\ngrep -r __sync_fetch_and_add_8\r\n```\r\nShows that nearly every file includes a call to this non-existent function. I assume it's coming from the profiler somehow. \r\n\r\nExecuting the same command in my toolchain build/x86_64-unknown-linux-gnu/stage2\r\n\r\n```\r\ngrep: lib/rustlib/x86_64-unknown-linux-gnu/lib/libLLVM-16-rust-1.72.0-nightly.so: binary file matches\r\ngrep: lib/libLLVM-16-rust-1.72.0-nightly.so: binary file matches\r\n```\r\n\r\nThis is where I get stuck. The mipsel rust standard lib is under that directory, so my grep should catch any calls to __sync_fetch_and_add_8 contained in the standard lib. There don't appear to be any. The only cases I find are in libLLVM, which is built for x86_64. It's reasonable for them to be there, since x86_64 does support __sync_fetch_and_add_8.\r\n\r\nYou'll have to forgive my ignorance here, I'm still quite new to rust. I don't understand the intricacies of the build process well enough to figure out how a call to __sync_fetch_and_add_8 is getting pulled into object files targeting MIPS, when the only library instance of a call to there is in the x86_64 library. \r\n\r\nWhat I am fairly certain of though is that it shouldn't be getting pulled in.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112313/timeline", "performed_via_github_app": null, "state_reason": null}