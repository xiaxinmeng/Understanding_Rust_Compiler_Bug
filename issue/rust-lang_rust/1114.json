{"url": "https://api.github.com/repos/rust-lang/rust/issues/1114", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/1114/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/1114/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/1114/events", "html_url": "https://github.com/rust-lang/rust/issues/1114", "id": 2117822, "node_id": "MDU6SXNzdWUyMTE3ODIy", "number": 1114, "title": "mod std can't import option::t as option then re-export it", "user": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-11-02T03:11:30Z", "updated_at": "2011-11-02T16:46:03Z", "closed_at": "2011-11-02T11:20:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've just tried this in std:\n\n```\nimport option = option::t;\nexport option;\n```\n\nand it gets this error\n\n```\n../src/lib/std.rs:2:0: 2:25 error: unresolved modulename: option\n../src/lib/std.rs:2 import option = option::t;\n```\n\nThere's a workaround, but I think this is probably the pattern we want to work for raising types like option::t out of their modules.\n", "closed_by": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/1114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/1114/timeline", "performed_via_github_app": null, "state_reason": "completed"}