{"url": "https://api.github.com/repos/rust-lang/rust/issues/61243", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61243/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61243/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61243/events", "html_url": "https://github.com/rust-lang/rust/issues/61243", "id": 448982936, "node_id": "MDU6SXNzdWU0NDg5ODI5MzY=", "number": 61243, "title": "WASI should have a cdylib output", "user": {"login": "nhynes", "id": 2353785, "node_id": "MDQ6VXNlcjIzNTM3ODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2353785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhynes", "html_url": "https://github.com/nhynes", "followers_url": "https://api.github.com/users/nhynes/followers", "following_url": "https://api.github.com/users/nhynes/following{/other_user}", "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions", "organizations_url": "https://api.github.com/users/nhynes/orgs", "repos_url": "https://api.github.com/users/nhynes/repos", "events_url": "https://api.github.com/users/nhynes/events{/privacy}", "received_events_url": "https://api.github.com/users/nhynes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-27T20:25:09Z", "updated_at": "2019-05-27T20:26:12Z", "closed_at": "2019-05-27T20:26:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently `wasm32-wasi` does not support the cdylib output type, which is unfortunate because this means that only Rust programs can consume programs that target wasi (through the rlib output).\r\n\r\nAs a motivating example, consider a database wrapper Wasm module. One might want to write it safely in Rust and use it from another Wasm module loaded at runtime. The database wrapper would want to use WASI syscalls to access the database process. This is not possible because Rust WASI modules cannot be made into cdylibs.\r\n\r\nProposal: support WASI `sys` for cdylib output.", "closed_by": {"login": "nhynes", "id": 2353785, "node_id": "MDQ6VXNlcjIzNTM3ODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2353785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhynes", "html_url": "https://github.com/nhynes", "followers_url": "https://api.github.com/users/nhynes/followers", "following_url": "https://api.github.com/users/nhynes/following{/other_user}", "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions", "organizations_url": "https://api.github.com/users/nhynes/orgs", "repos_url": "https://api.github.com/users/nhynes/repos", "events_url": "https://api.github.com/users/nhynes/events{/privacy}", "received_events_url": "https://api.github.com/users/nhynes/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61243/timeline", "performed_via_github_app": null, "state_reason": "completed"}