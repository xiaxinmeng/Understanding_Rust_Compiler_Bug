{"url": "https://api.github.com/repos/rust-lang/rust/issues/111229", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111229/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111229/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111229/events", "html_url": "https://github.com/rust-lang/rust/issues/111229", "id": 1696960150, "node_id": "I_kwDOAAsO6M5lJY6W", "number": 111229, "title": "mutable_transmutes lint should catch transmutes from a type without interior mutability to one with", "user": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": {"login": "ChayimFriedman2", "id": 24700207, "node_id": "MDQ6VXNlcjI0NzAwMjA3", "avatar_url": "https://avatars.githubusercontent.com/u/24700207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChayimFriedman2", "html_url": "https://github.com/ChayimFriedman2", "followers_url": "https://api.github.com/users/ChayimFriedman2/followers", "following_url": "https://api.github.com/users/ChayimFriedman2/following{/other_user}", "gists_url": "https://api.github.com/users/ChayimFriedman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChayimFriedman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChayimFriedman2/subscriptions", "organizations_url": "https://api.github.com/users/ChayimFriedman2/orgs", "repos_url": "https://api.github.com/users/ChayimFriedman2/repos", "events_url": "https://api.github.com/users/ChayimFriedman2/events{/privacy}", "received_events_url": "https://api.github.com/users/ChayimFriedman2/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ChayimFriedman2", "id": 24700207, "node_id": "MDQ6VXNlcjI0NzAwMjA3", "avatar_url": "https://avatars.githubusercontent.com/u/24700207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChayimFriedman2", "html_url": "https://github.com/ChayimFriedman2", "followers_url": "https://api.github.com/users/ChayimFriedman2/followers", "following_url": "https://api.github.com/users/ChayimFriedman2/following{/other_user}", "gists_url": "https://api.github.com/users/ChayimFriedman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChayimFriedman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChayimFriedman2/subscriptions", "organizations_url": "https://api.github.com/users/ChayimFriedman2/orgs", "repos_url": "https://api.github.com/users/ChayimFriedman2/repos", "events_url": "https://api.github.com/users/ChayimFriedman2/events{/privacy}", "received_events_url": "https://api.github.com/users/ChayimFriedman2/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2023-05-05T03:40:31Z", "updated_at": "2023-05-18T14:57:39Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\nThank you for filing a regression report! \ud83d\udc1b A regression is something that changed between versions of Rust but was not supposed to.\n\nPlease provide a short summary of the regression, along with any information you feel is relevant to replicate it.\n-->\n\nI'm filing this as a regression, although the summary is worded in a feature request-ish way.\n\nSo, the regression itself is this: code that transmutes from a type without interior mutability to one with interior mutability leads to really bad outcomes after the bump to LLVM 16, because of the changes in https://github.com/llvm/llvm-project/commit/01859da84bad95fd51d6a03b08b60c660e642a4f. This is a pattern that happens in the wild, probably mostly around FFI. At least, that's how it happens in the Firefox codebase.\n\n### Code\n\nHere is a reduced testcase using a similar pattern to what Firefox is using:\n\n```rust\npub struct Foo(std::cell::UnsafeCell<usize>);\n\npub struct Bar([u8; 0]);\n\npub fn foo(f: &Bar) {\n    unsafe {\n        let f = std::mem::transmute::<&Bar, &Foo>(f);\n        *(f.0.get()) += 1;\n    }\n}\n```\n\nWith rustc up to 1.69.0 in --release mode, this produces the following IR:\n```llvm-ir\ndefine void @_ZN10playground3foo17hc0e352349f95f9ecE(ptr noalias nocapture noundef nonnull readonly align 1 %f) unnamed_addr #0 {\nstart:\n  %0 = load i64, ptr %f, align 8, !noundef !2\n  %1 = add i64 %0, 1\n  store i64 %1, ptr %f, align 8\n  ret void\n}\n```\n\nWith rustc 1.70.0-beta.2 in --release mode, this produces the following IR:\n```llvm-ir\ndefine void @_ZN10playground3foo17h2141d3a0b5fe8d73E(ptr noalias nocapture noundef nonnull readonly align 1 %f) unnamed_addr #0 {\nstart:\n  ret void\n}\n```\n\nNote how everything is gone because the input pointer is marked as noalias readonly, and thus the code is not expected to change what it points to, so it's all removed. This is the typical example of undefined behavior leading to the optimizer doing unexpected things. I'm not arguing that there isn't undefined behavior. The undefined behavior existed before. But with LLVM 16, now the undefined behavior is actively dangerous.\n\nNow, to come back to the feature-request-y summary I wrote, the following code does not compile:\n```rust\npub struct Bar([u8; 0]);\n\npub fn foo(f: &Bar) {\n    unsafe {\n        let _ = std::mem::transmute::<&Bar, &mut Bar>(f);\n    }\n}\n```\n\nThe produced error is:\n```\nerror: transmuting &T to &mut T is undefined behavior, even if the reference is unused, consider instead using an UnsafeCell\n```\n\nI would argue that the code that is now compiled to nothing should also produce a similar error, and that error should be shipped in 1.70.0.\n\nCc: @pcwalton, @nikic\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"ChayimFriedman2\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111229/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111229/timeline", "performed_via_github_app": null, "state_reason": null}