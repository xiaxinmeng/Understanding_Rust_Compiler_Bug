{"url": "https://api.github.com/repos/rust-lang/rust/issues/48994", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48994/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48994/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48994/events", "html_url": "https://github.com/rust-lang/rust/issues/48994", "id": 304939149, "node_id": "MDU6SXNzdWUzMDQ5MzkxNDk=", "number": 48994, "title": "Collecting into a Result<Vec<_>> doesn't reserve the capacity in advance", "user": {"login": "scurest", "id": 11024420, "node_id": "MDQ6VXNlcjExMDI0NDIw", "avatar_url": "https://avatars.githubusercontent.com/u/11024420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scurest", "html_url": "https://github.com/scurest", "followers_url": "https://api.github.com/users/scurest/followers", "following_url": "https://api.github.com/users/scurest/following{/other_user}", "gists_url": "https://api.github.com/users/scurest/gists{/gist_id}", "starred_url": "https://api.github.com/users/scurest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scurest/subscriptions", "organizations_url": "https://api.github.com/users/scurest/orgs", "repos_url": "https://api.github.com/users/scurest/repos", "events_url": "https://api.github.com/users/scurest/events{/privacy}", "received_events_url": "https://api.github.com/users/scurest/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-03-13T21:18:07Z", "updated_at": "2023-02-16T02:20:14Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Couldn't find an issue for this and don't know if it counts but filing anyway.\r\n\r\n----\r\n\r\nIf you have \r\n\r\n    fn foo(s: &[i8]) -> Vec<u8> {\r\n        s.iter()\r\n        .map(|&x| x as u8)\r\n        .collect()\r\n    }\r\n\r\nthe `SpecExtend` machinery ensures that the vector has `s.len()` space reserved in advance. However if you change it to return a result\r\n\r\n\r\n    fn foo(s: &[i8]) -> Result<Vec<u8>> {\r\n        s.iter()\r\n        .map(|&x| if x < 0 { Err(...) } else { Ok(x as u8) } )\r\n        .collect()\r\n    }\r\n\r\nthen (based on examining the LLVM IR and heaptracker's \"Temporary\" measurements) that optimization has quietly been lost.\r\n\r\nThis is technically correct in the sense that the first element yielded could be an `Err` of course (the size hint for the `Adapter` in `Result`'s `FromIterator` impl has a lower bound of 0). But this pessimizes the good path to take more memory and be slower in favor of possibly saving memory on the bad one, which seems backwards.\r\n\r\nIs there a specialization that could be added to fix this?", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48994/reactions", "total_count": 7, "+1": 7, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48994/timeline", "performed_via_github_app": null, "state_reason": null}