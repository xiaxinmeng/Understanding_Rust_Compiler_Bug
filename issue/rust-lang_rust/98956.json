{"url": "https://api.github.com/repos/rust-lang/rust/issues/98956", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98956/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98956/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98956/events", "html_url": "https://github.com/rust-lang/rust/issues/98956", "id": 1294694313, "node_id": "I_kwDOAAsO6M5NK3ep", "number": 98956, "title": "param env construction cycles with `feature(generic_const_exprs)`", "user": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-07-05T19:42:41Z", "updated_at": "2022-07-05T19:46:22Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "the following [code](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=73665d949cd16a9d65eb2d445a870389)\r\n```rust\r\n#![feature(generic_const_exprs)]\r\n\r\ntrait Trait<const N: usize> {\r\n    type Assoc;\r\n}\r\n\r\nfn foo<T, const N: usize>()\r\nwhere\r\n  T: Clone,\r\n  T: Trait<{ N + 1 }, Assoc = Box<T>>,\r\n  <T as Trait<{ N + 1 }>>::Assoc: Clone, {}\r\n```\r\ncycles with:\r\n```\r\nerror[[E0391]](https://doc.rust-lang.org/nightly/error-index.html#E0391): cycle detected when building an abstract representation for the const argument foo::{constant#1}\r\n  --> src/lib.rs:11:15\r\n   |\r\n11 |   <T as Trait<{ N + 1 }>>::Assoc: Clone, {}\r\n   |               ^^^^^^^^^\r\n   |\r\nnote: ...which requires building THIR for `foo::{constant#1}`...\r\n  --> src/lib.rs:11:15\r\n   |\r\n11 |   <T as Trait<{ N + 1 }>>::Assoc: Clone, {}\r\n   |               ^^^^^^^^^\r\nnote: ...which requires type-checking the const argument `foo::{constant#1}`...\r\n  --> src/lib.rs:11:15\r\n   |\r\n11 |   <T as Trait<{ N + 1 }>>::Assoc: Clone, {}\r\n   |               ^^^^^^^^^\r\nnote: ...which requires computing normalized predicates of `foo::{constant#1}`...\r\n  --> src/lib.rs:11:15\r\n   |\r\n11 |   <T as Trait<{ N + 1 }>>::Assoc: Clone, {}\r\n   |               ^^^^^^^^^\r\nnote: ...which requires trying to unify the generic constants foo::{constant#1} and foo::{constant#0}...\r\n  --> src/lib.rs:11:15\r\n   |\r\n11 |   <T as Trait<{ N + 1 }>>::Assoc: Clone, {}\r\n   |               ^^^^^^^^^\r\n   = note: ...which again requires building an abstract representation for the const argument foo::{constant#1}, completing the cycle\r\nnote: cycle used when trying to unify the generic constants foo::{constant#1} and foo::{constant#0}\r\n  --> src/lib.rs:11:15\r\n   |\r\n11 |   <T as Trait<{ N + 1 }>>::Assoc: Clone, {}\r\n   |               ^^^^^^^^^\r\n```\r\n\r\nThis is noticably different than most generic_const_exprs cycles as this is caused by the `tcx.param_env` query normalizing the paramenv which requires equating the two `N + 1` anon consts in order to normalize `<T as Trait<{ N + 1 }>>::Assoc` to `Box<T>`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98956/timeline", "performed_via_github_app": null, "state_reason": null}