{"url": "https://api.github.com/repos/rust-lang/rust/issues/9564", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/9564/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/9564/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/9564/events", "html_url": "https://github.com/rust-lang/rust/issues/9564", "id": 20163618, "node_id": "MDU6SXNzdWUyMDE2MzYxOA==", "number": 9564, "title": "Converting a [string] to a **c_char is subtlely difficult", "user": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-09-27T10:43:26Z", "updated_at": "2017-01-03T17:05:10Z", "closed_at": "2017-01-03T17:05:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It's currently non-trivial to do a `&[&str]` -> `**c_char` conversion correctly; I think there should be a function in `std::c_str` that handles this (as well as optionally null terminating the `**c_char`).\n\n`v` is a `&[&str]`, `f` is a function taking a `**c_char`. I've put the types of intermediates for clarity.\n### Incorrect\n#### a\n\n``` rust\nv.as_imm_buf(|buf: *&str, _| f(buf as **c_char))\n```\n\nThe `*&str` &rarr; `**c_char` cast is wrong.\n#### b\n\n``` rust\nlet ptrs: ~[*c_char] = v.map(|s: & &str| s.with_c_str(|cstr: *c_char| cstr));\nptrs.as_imm_buf(|buf: **c_char, _| f(buf))\n```\n\n The `*c_char` from `with_c_str` shouldn't leave the closure, since it `with_c_str` allocates an internal buffer. (This is a general problem with methods that pass a raw pointer to a closure: it is extremely easy and tempting to just return that pointer immediately and thus (possibly) create a dangling reference.)\n### Correct\n\n(at least, I think it is correct)\n\n``` rust\nlet c_strs: ~[CString] = v.map(|s: & &str| s.to_c_str());\nlet mut ptrs: ~[*c_char] = c_strs.map(|c: &CString| c.with_ref(|ptr| ptr));\nif null_terminate {\n    ptrs.push(std::ptr::null());\n}\nptrs.as_imm_buf(|buf: **c_char, _| f(buf))\n```\n\nThe `c_strs` vector _must_ live at least as at least as long as the `**c_char` is used. In this (unusual) case, returning the `*c_char` from `with_ref` is ok (if `c_strs` is kept alive long enough).\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/9564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/9564/timeline", "performed_via_github_app": null, "state_reason": "completed"}