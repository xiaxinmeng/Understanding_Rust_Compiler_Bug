{"url": "https://api.github.com/repos/rust-lang/rust/issues/106947", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/106947/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/106947/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/106947/events", "html_url": "https://github.com/rust-lang/rust/issues/106947", "id": 1535413481, "node_id": "I_kwDOAAsO6M5bhIzp", "number": 106947, "title": "error: invalid register `tp`: the thread pointer cannot be used as an operand for inline asm", "user": {"login": "vsukhoml", "id": 4700535, "node_id": "MDQ6VXNlcjQ3MDA1MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4700535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsukhoml", "html_url": "https://github.com/vsukhoml", "followers_url": "https://api.github.com/users/vsukhoml/followers", "following_url": "https://api.github.com/users/vsukhoml/following{/other_user}", "gists_url": "https://api.github.com/users/vsukhoml/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsukhoml/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsukhoml/subscriptions", "organizations_url": "https://api.github.com/users/vsukhoml/orgs", "repos_url": "https://api.github.com/users/vsukhoml/repos", "events_url": "https://api.github.com/users/vsukhoml/events{/privacy}", "received_events_url": "https://api.github.com/users/vsukhoml/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 91598611, "node_id": "MDU6TGFiZWw5MTU5ODYxMQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inline-assembly", "name": "A-inline-assembly", "color": "f7e101", "default": false, "description": "Area: inline asm!(..)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2023-01-16T19:47:16Z", "updated_at": "2023-04-07T19:42:23Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "There are certain assumptions made by Rust (LLVM?) about register usage on various platforms (RISC-V in this example) which are true only for some platforms, but not true for variety of embedded use cases.  `clang` provide some workarounds with register variables extension and options like `-ffixed-x10`, but in Rust it is not clear how to efficiently get same functionality without copy of 'reserved' register into 'general purpose one'.\r\n\r\n```\r\n unsafe fn get_sys_buf() -> *mut u8 {\r\n        let syscall_buf: *mut u8;\r\n        unsafe { asm!(\"\", out(\"tp\") syscall_buf) };\r\n        syscall_buf\r\n    }\r\n``` \r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/106947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/106947/timeline", "performed_via_github_app": null, "state_reason": null}