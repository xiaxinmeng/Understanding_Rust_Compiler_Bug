{"url": "https://api.github.com/repos/rust-lang/rust/issues/95582", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95582/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95582/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95582/events", "html_url": "https://github.com/rust-lang/rust/issues/95582", "id": 1190456330, "node_id": "I_kwDOAAsO6M5G9OwK", "number": 95582, "title": "Seemingly incorrect borrow analysis of disjoint code paths", "user": {"login": "kaylynn234", "id": 51037748, "node_id": "MDQ6VXNlcjUxMDM3NzQ4", "avatar_url": "https://avatars.githubusercontent.com/u/51037748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaylynn234", "html_url": "https://github.com/kaylynn234", "followers_url": "https://api.github.com/users/kaylynn234/followers", "following_url": "https://api.github.com/users/kaylynn234/following{/other_user}", "gists_url": "https://api.github.com/users/kaylynn234/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaylynn234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaylynn234/subscriptions", "organizations_url": "https://api.github.com/users/kaylynn234/orgs", "repos_url": "https://api.github.com/users/kaylynn234/repos", "events_url": "https://api.github.com/users/kaylynn234/events{/privacy}", "received_events_url": "https://api.github.com/users/kaylynn234/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-04-02T01:38:01Z", "updated_at": "2022-04-03T08:45:12Z", "closed_at": "2022-04-03T08:45:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "More specifically, it appears that disjoint code paths are being \"merged\" somewhere down the track, which results in a confusing error that doesn't really make sense.\r\n\r\nI was able to find a fairly simple min repro:\r\n```rust\r\nfn main() {\r\n    let mut foobles = Example::default();\r\n    let cool_text = foobles.get_or_insert_foo(\"Hello\");\r\n\r\n    println!(\"{}, world!\", cool_text);\r\n}\r\n\r\n#[derive(Default)]\r\nstruct Example {\r\n    foo: Option<String>,\r\n}\r\n\r\nimpl Example {\r\n    fn get_or_insert_foo(&mut self, value: &'static str) -> &mut String {\r\n        if let Some(foo) = self.foo.as_mut() {\r\n            return foo;\r\n        }\r\n\r\n        self.foo = Some(value.to_owned());\r\n        self.foo.as_mut().unwrap()\r\n    }\r\n}\r\n```\r\nI expected this code to compile. and print `Hello, world!` to standard output. \r\n\r\nInstead, a confusing error is presented:\r\n```\r\nerror[E0506]: cannot assign to `self.foo` because it is borrowed\r\n  --> src\\main.rs:19:9\r\n   |\r\n14 |     fn get_or_insert_foo(&mut self, value: &str) -> &mut String {\r\n   |                          - let's call the lifetime of this reference `'1`\r\n15 |         if let Some(foo) = self.foo.as_mut() {\r\n   |                            ----------------- borrow of `self.foo` occurs here\r\n16 |             return foo;\r\n   |                    --- returning this value requires that `self.foo` is borrowed for `'1`\r\n...\r\n19 |         self.foo = Some(value.to_owned());\r\n   |         ^^^^^^^^ assignment to borrowed `self.foo` occurs here\r\n\r\nerror[E0499]: cannot borrow `self.foo` as mutable more than once at a time\r\n  --> src\\main.rs:20:9\r\n   |\r\n14 |     fn get_or_insert_foo(&mut self, value: &str) -> &mut String {\r\n   |                          - let's call the lifetime of this reference `'1`\r\n15 |         if let Some(foo) = self.foo.as_mut() {\r\n   |                            ----------------- first mutable borrow occurs here\r\n16 |             return foo;\r\n   |                    --- returning this value requires that `self.foo` is borrowed for `'1`\r\n...\r\n20 |         self.foo.as_mut().unwrap()\r\n   |         ^^^^^^^^^^^^^^^^^ second mutable borrow occurs here\r\n\r\nSome errors have detailed explanations: E0499, E0506.\r\nFor more information about an error, try `rustc --explain E0499`.\r\nerror: could not compile `rustc-disjoint-borrow` due to 2 previous errors\r\n```\r\nI've tried a few variations of something similar to this now, and have been able to trigger this error using both `match` and `if let`. I *assume* that's because the latter is desugared to the former, but it still struck me as odd.\r\n\r\nIt's also important for me to note that the fluff from `main` doesn't affect the error.\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.61.0-nightly (0677edc86 2022-03-31)\r\nbinary: rustc\r\ncommit-hash: 0677edc86e342f333d4828b0ee1ef395a4e70fe5\r\ncommit-date: 2022-03-31\r\nhost: x86_64-pc-windows-gnu\r\nrelease: 1.61.0-nightly\r\nLLVM version: 14.0.0\r\n```\r\n\r\nI've also tried this on the latest stable release, to no avail. This issue seems to be present as far back as Rust 1.40 as well, but I haven't checked any further than that. I did a search through open/previous issues but wasn't able to find much - apologies if I'm rehashing something that's been brought up before!\r\n\r\nUnfortunately I can't provide a backtrace (since the code doesn't compile) and the logging output from `rustc` is far too gargantuan to put here. Sorry :/", "closed_by": {"login": "kaylynn234", "id": 51037748, "node_id": "MDQ6VXNlcjUxMDM3NzQ4", "avatar_url": "https://avatars.githubusercontent.com/u/51037748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaylynn234", "html_url": "https://github.com/kaylynn234", "followers_url": "https://api.github.com/users/kaylynn234/followers", "following_url": "https://api.github.com/users/kaylynn234/following{/other_user}", "gists_url": "https://api.github.com/users/kaylynn234/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaylynn234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaylynn234/subscriptions", "organizations_url": "https://api.github.com/users/kaylynn234/orgs", "repos_url": "https://api.github.com/users/kaylynn234/repos", "events_url": "https://api.github.com/users/kaylynn234/events{/privacy}", "received_events_url": "https://api.github.com/users/kaylynn234/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95582/timeline", "performed_via_github_app": null, "state_reason": "completed"}