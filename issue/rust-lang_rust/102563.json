{"url": "https://api.github.com/repos/rust-lang/rust/issues/102563", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102563/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102563/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102563/events", "html_url": "https://github.com/rust-lang/rust/issues/102563", "id": 1393631002, "node_id": "I_kwDOAAsO6M5TER8a", "number": 102563, "title": "Mock environment testing for bootstrap", "user": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 120005, "node_id": "MDU6TGFiZWwxMjAwMDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-testsuite", "name": "A-testsuite", "color": "f7e101", "default": false, "description": "Area: The testsuite used to check the correctness of rustc"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}, {"id": 3812070271, "node_id": "LA_kwDOAAsO6M7jN5N_", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-technical-debt", "name": "A-technical-debt", "color": "f7e101", "default": false, "description": "Area: Internal cleanup work"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-10-02T03:48:01Z", "updated_at": "2023-04-16T21:52:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There are lots of config knobs in bootstrap, and it is hard to understand how they interact. Consider two recent examples off the top of my head:\r\n\r\n* https://github.com/rust-lang/rust/pull/101833#discussion_r984872396\r\n    * Broke the flag `is_rust_llvm`\r\n* https://github.com/rust-lang/rust/pull/101072#discussion_r956528035\r\n    * Implemented the aforementioned flag\r\n    * (Nearly) broke the flag `llvm_from_ci`\r\n    * Caught in review by someone who knew the implementation details of that flag\r\n\r\nWe should really catch these issues in tests, not review, and avoid relying too much on specific reviewers who know parts of the code.\r\n\r\nSince bootstrap does I/O and interacts with external tooling, it is inherently difficult to test. The strategy I know involves mocking out the build environment (enough to make tests run in <~1s). From there you can record what the implementation does and take two approaches for the test:\r\n\r\n* Assert on specific conditions, like \"the flag `-D FOO` was passed to LLVM cmake\" or \"foo/bar/baz was moved to foo/bar/quux\".\r\n* Record everything in a golden file for some \"representative\" set of configurations. You can update these with `--bless`. This helps guard against unexpected behavior changes.\r\n\r\nI think both are helpful. In fact, combining the two is exactly what we do in ui tests.\r\n\r\ncc @jyn514 @Mark-Simulacrum ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102563/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102563/timeline", "performed_via_github_app": null, "state_reason": null}