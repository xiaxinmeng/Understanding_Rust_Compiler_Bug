{"url": "https://api.github.com/repos/rust-lang/rust/issues/88655", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88655/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88655/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88655/events", "html_url": "https://github.com/rust-lang/rust/issues/88655", "id": 988394921, "node_id": "MDU6SXNzdWU5ODgzOTQ5MjE=", "number": 88655, "title": "rustc doesn't seem to understand ~const bounds on associated types", "user": {"login": "Techcable", "id": 4615889, "node_id": "MDQ6VXNlcjQ2MTU4ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/4615889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Techcable", "html_url": "https://github.com/Techcable", "followers_url": "https://api.github.com/users/Techcable/followers", "following_url": "https://api.github.com/users/Techcable/following{/other_user}", "gists_url": "https://api.github.com/users/Techcable/gists{/gist_id}", "starred_url": "https://api.github.com/users/Techcable/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Techcable/subscriptions", "organizations_url": "https://api.github.com/users/Techcable/orgs", "repos_url": "https://api.github.com/users/Techcable/repos", "events_url": "https://api.github.com/users/Techcable/events{/privacy}", "received_events_url": "https://api.github.com/users/Techcable/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 268744493, "node_id": "MDU6TGFiZWwyNjg3NDQ0OTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-fn", "name": "A-const-fn", "color": "f7e101", "default": false, "description": "Area: const fn foo(..) {..}. Pure functions which can be applied at compile time."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1769279746, "node_id": "MDU6TGFiZWwxNzY5Mjc5NzQ2", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_trait_impl", "name": "F-const_trait_impl", "color": "f9c0cc", "default": false, "description": "`#![feature(const_trait_impl)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-09-05T00:38:55Z", "updated_at": "2021-09-09T04:35:10Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=abc6cfe40a0911b439606a30554ed7a9)]:\r\n\r\n```rust\r\n#![feature(const_trait_impl, const_fn_trait_bound)]\r\n\r\npub trait ConstableTrait {\r\n    fn foo(&self) -> u32;\r\n}\r\n\r\npub trait ExTrait {\r\n    type Assoc: ~const ConstableTrait;\r\n}\r\n\r\nstruct ShouldBeInferred<T: ExTrait> {\r\n    a: T::Assoc\r\n}\r\nimpl<T: ExTrait> ShouldBeInferred<T> {\r\n    pub const fn should_infer(&self) -> u32 {\r\n        self.a.foo()\r\n    }\r\n}\r\n```\r\n\r\nI expected to see this happen:\r\n`ShouldBeInferred::should_infer` should understand that `T::AssocTrait: ~const ConstableTrait` and `self.a.foo()` is a const-fn.\r\n\r\nInstead, this happened: \r\nThe compiler doesn't seem to infer the `T::AssocTrait: ~const ConstableTrait` bound gives an error `self.a.foo()` is *not* callable in a constant context.\r\n\r\nI might be misunderstanding the purpose of `~const` bounds on associated types. Please correct me if I am :)\r\n\r\nAlso great work so far on `const fn`. It's really starting to shine :) \r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.0-nightly (b7404c898 2021-09-03)\r\nbinary: rustc\r\ncommit-hash: b7404c898a1a6933b71c72428a6dce551bcc1be7\r\ncommit-date: 2021-09-03\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.56.0-nightly\r\nLLVM version: 13.0.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88655/timeline", "performed_via_github_app": null, "state_reason": null}