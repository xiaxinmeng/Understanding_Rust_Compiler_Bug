{"url": "https://api.github.com/repos/rust-lang/rust/issues/39207", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39207/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39207/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39207/events", "html_url": "https://github.com/rust-lang/rust/issues/39207", "id": 202193301, "node_id": "MDU6SXNzdWUyMDIxOTMzMDE=", "number": 39207, "title": "Tracking issue for `legacy_constructor_visibility` compatibility lint", "user": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 630636017, "node_id": "MDU6TGFiZWw2MzA2MzYwMTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-future-compatibility", "name": "C-future-compatibility", "color": "f5f1fd", "default": false, "description": "Category: future compatibility lints"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-20T17:09:40Z", "updated_at": "2019-11-08T19:09:59Z", "closed_at": "2019-11-08T19:09:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### What is this lint about\r\n\r\nhttps://github.com/rust-lang/rust/pull/38932 introduces new rules for privacy of tuple struct constructors. Constructor is a function automatically created by a tuple struct having the same name as the struct itself.\r\n```\r\nstruct S(u8); // defines `struct S { ... }` and `fn S(u8) -> S` \r\n```\r\nSee [RFC 1506](https://github.com/rust-lang/rfcs/blob/master/text/1506-adt-kinds.md) for more details.\r\n\r\nWith these new rules constructor function of a public `struct S(....)` is defined as private if at least one of the fields is private.\r\nMore precisely, `visibility(constructor_fn) = min(visibility(struct), visibility(field_1), ..., visibility(field_N))` (this definition takes [RFC 1422](https://github.com/rust-lang/rfcs/blob/master/text/1422-pub-restricted.md) into account).\r\n\r\nThis change is done to make a struct with private fields being a tuple struct an implementation detail. So libraries can freely change it into non-tuple struct and back, and nothing breaks.\r\nThis change is *mostly* backward compatible due to some ad-hoc privacy checks existing previously (e.g. `error[E0450]: cannot invoke tuple struct constructor with private fields`), however there's one pattern that is broken by it:\r\n\r\n```\r\nmod m {\r\n    // Tuple struct with a private field.\r\n    // Type S is pub(pub).\r\n    // The field S::0 is pub(m).\r\n    // Constructor S is min(pub(pub), pub(m)) -> pub(m).\r\n    pub struct S(u8);\r\n    \r\n    fn f() {\r\n        // Try to use S from the root module in value namespace.\r\n        // No success, ::S exists only in type namespace.\r\n        // How to fix: use S from this module instead of ::S from the root module.\r\n        ::S;\r\n    }\r\n}\r\n\r\n// This imports S only in type namespace, value S is too private.\r\n// This is expected filtering behavior of imports described in RFC 1560.\r\nuse m::S;\r\n\r\nfn main() {}\r\n```\r\n\r\n`legacy_constructor_visibility` lint tries to detect this patterns and make name resolution succeed with a warning to keep backward compatibility. However, this detection is pretty hacky and not entirely precise, so it will need to go away eventually.\r\n\r\n#### How to fix this warning/error\r\n\r\nUse the constructor from its original location X and not through reexports in modules outer to X.\r\n\r\n#### Current status\r\n- [x] https://github.com/rust-lang/rust/pull/38932 introduces the `legacy_constructor_visibility` lint as deny-by-default\r\n- [ ] PR ? makes the `legacy_constructor_visibility` lint a hard error\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39207/timeline", "performed_via_github_app": null, "state_reason": "completed"}