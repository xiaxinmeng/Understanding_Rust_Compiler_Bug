{"url": "https://api.github.com/repos/rust-lang/rust/issues/106269", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/106269/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/106269/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/106269/events", "html_url": "https://github.com/rust-lang/rust/issues/106269", "id": 1513992367, "node_id": "I_kwDOAAsO6M5aPbCv", "number": 106269, "title": "Suboptimal `eq` compilation on structs compared to equivalent C++ code", "user": {"login": "Kmeakin", "id": 19665139, "node_id": "MDQ6VXNlcjE5NjY1MTM5", "avatar_url": "https://avatars.githubusercontent.com/u/19665139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kmeakin", "html_url": "https://github.com/Kmeakin", "followers_url": "https://api.github.com/users/Kmeakin/followers", "following_url": "https://api.github.com/users/Kmeakin/following{/other_user}", "gists_url": "https://api.github.com/users/Kmeakin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kmeakin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kmeakin/subscriptions", "organizations_url": "https://api.github.com/users/Kmeakin/orgs", "repos_url": "https://api.github.com/users/Kmeakin/repos", "events_url": "https://api.github.com/users/Kmeakin/events{/privacy}", "received_events_url": "https://api.github.com/users/Kmeakin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2022-12-29T19:25:07Z", "updated_at": "2023-04-05T17:32:50Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `eq` implementation produces worse code than the equivalent C++ code ([Rust](https://godbolt.org/z/M3fd3qfzM), [C++](https://godbolt.org/z/9Phach8PP))\r\n\r\n# I tried this code:\r\n\r\n```rust\r\npub struct S {\r\n    a: u8,\r\n    b: u8,\r\n    c: u8,\r\n    d: u8,\r\n}\r\n\r\npub fn eq(s1: &S, s2: &S) -> bool {\r\n    s1.a == s2.a && s1.b == s2.b && s1.c == s2.c && s1.d == s2.d\r\n}\r\n```\r\n\r\n# I expected to see this happen:\r\nThe resulting assembly should load and compare a single u64:\r\n```asm\r\nexample::eq:\r\n        ldr     w8, [x0]\r\n        ldr     w9, [x1]\r\n        cmp     w8, w9\r\n        cset    w0, eq\r\n        ret\r\n```\r\n\r\n# Instead, this happened:\r\nThe assembly loads and compares each u8 individually:\r\n```asm\r\nexample::eq:\r\n        ldrb    w9, [x0]\r\n        mov     w8, wzr\r\n        ldrb    w10, [x1]\r\n        cmp     w9, w10\r\n        b.ne    .LBB0_4\r\n        ldrb    w9, [x0, #1]\r\n        ldrb    w10, [x1, #1]\r\n        cmp     w9, w10\r\n        b.ne    .LBB0_4\r\n        ldrb    w8, [x0, #2]\r\n        ldrb    w9, [x1, #2]\r\n        cmp     w8, w9\r\n        b.ne    .LBB0_5\r\n        ldrb    w8, [x0, #3]\r\n        ldrb    w9, [x1, #3]\r\n        cmp     w8, w9\r\n        cset    w8, eq\r\n.LBB0_4:\r\n        mov     w0, w8\r\n        ret\r\n.LBB0_5:\r\n        mov     w0, wzr\r\n        ret\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.68.0-nightly (88c58e3c2 2022-12-26)\r\nbinary: rustc\r\ncommit-hash: 88c58e3c2c097ebffac425d9e080dcb1aadf790e\r\ncommit-date: 2022-12-26\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.68.0-nightly\r\nLLVM version: 15.0.6\r\nCompiler returned: 0\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/106269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/106269/timeline", "performed_via_github_app": null, "state_reason": null}