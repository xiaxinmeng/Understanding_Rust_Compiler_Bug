{"url": "https://api.github.com/repos/rust-lang/rust/issues/64715", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64715/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64715/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64715/events", "html_url": "https://github.com/rust-lang/rust/issues/64715", "id": 497238115, "node_id": "MDU6SXNzdWU0OTcyMzgxMTU=", "number": 64715, "title": "Tracking issue for reserved impl `impl<T> From<!> for T`", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 3537216829, "node_id": "LA_kwDOAAsO6M7S1aU9", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-perma-unstable", "name": "S-tracking-perma-unstable", "color": "4682b4", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-23T17:48:10Z", "updated_at": "2022-06-22T17:54:11Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Background\r\n\r\nThis is a **tracking issue** for a temporary limitation related to the `From` trait and the `!` type. Specifically, we wish to eventually add an impl like the following:\r\n\r\n```rust\r\nimpl<T> From<!> to T { }\r\n```\r\n\r\nWe cannot do so now because it would overlap with existing impls. Specifically, the impl `impl<T> From<T> for T` as well as impls of the form `impl<T> From<T> for Foo<T>`, which exist for a number of smart pointer types. There are some plans for how we might add such an impl in the future, described below.\r\n\r\n## What is allowed today\r\n\r\nCurrently you are permitted to add impls of `From<!>` for your own types:\r\n\r\n```rust\r\nstruct LocalType;\r\nimpl From<!> for LocalType { }\r\n```\r\n\r\nThis is true even though such impls will overlap our planned addition: after all, we already have a number of overlapping cases to deal with.\r\n\r\nHowever, you are **not** permitted to assume that `From<!>` is **not** implemented. If that double negative threw you for a loop, consider this example (which will not compile):\r\n\r\n```rust\r\nstruct LocalType;\r\ntrait SomeTrait { }\r\nimpl<T: From<!>> SomeTrait for T { }\r\nimpl SomeTrait for LocalType { }\r\n```\r\n\r\nHere, the two impls do not presently overlap. This is because `LocalType: From<!>` is not implemented. However, if we were to add the `impl<T> From<!> for T` impl that we would like to add, then these two impls would start to overlap, and your code would stop compiling. Thus we say that this program assumes that `From<!>` is **not** implemented -- because it cannot pass the coherence check unless that is the case. This is precisely the sort of case that is not currently allowed. For more information, see [RFC 1023](https://rust-lang.github.io/rfcs/1023-rebalancing-coherence.html), which introduced the rules limiting negative reasoning.\r\n\r\n## How might we add the reserved impl in the future?\r\n\r\nThe precise mechanism to permit us to add the `From<!> for T` impl is not yet clear. The current \"plan of record\" is to extend the [\"marker trait mechanism\"](https://github.com/rust-lang/rust/issues/29864) to accommodate the idea of impls whose entire body consists of unreachable methods and to permit overlap.\r\n\r\ncc #64631 -- the internal rustc mechanism used to achieve this limitation\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64715/timeline", "performed_via_github_app": null, "state_reason": null}