{"url": "https://api.github.com/repos/rust-lang/rust/issues/110887", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110887/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110887/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110887/events", "html_url": "https://github.com/rust-lang/rust/issues/110887", "id": 1686328988, "node_id": "I_kwDOAAsO6M5kg1ac", "number": 110887, "title": "ICE: `Trying to feed an already recorded value for query type_of key`", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 3921860029, "node_id": "LA_kwDOAAsO6M7pwtW9", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-has-mcve", "name": "S-has-mcve", "color": "862eff", "default": false, "description": "A Minimal Complete and Verifiable Example has been found for this issue"}], "state": "closed", "locked": false, "assignee": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2023-04-27T08:03:11Z", "updated_at": "2023-05-18T15:49:15Z", "closed_at": "2023-05-18T15:49:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n#![crate_type=\"lib\"]\r\ntrait Bar<const N: BB> {}\r\ntrait BB = Bar<{ 2 + 1 }>;\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.71.0-nightly (1c42cb4ef 2023-04-26)\r\nbinary: rustc\r\ncommit-hash: 1c42cb4ef0544fbfaa500216e53382d6b079c001\r\ncommit-date: 2023-04-26\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.71.0-nightly\r\nLLVM version: 16.0.2\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0658]: trait aliases are experimental\r\n --> EED31F0DF9B9A1537D3A5A1FC8D89EFAC1A02554F65D38EB39520EC6C56421DD.rs:3:1\r\n  |\r\n3 | trait BB = Bar<{ 2 + 1 }>;\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: see issue #41517 <https://github.com/rust-lang/rust/issues/41517> for more information\r\n  = help: add `#![feature(trait_alias)]` to the crate attributes to enable\r\n\r\nwarning: trait objects without an explicit `dyn` are deprecated\r\n --> EED31F0DF9B9A1537D3A5A1FC8D89EFAC1A02554F65D38EB39520EC6C56421DD.rs:2:20\r\n  |\r\n2 | trait Bar<const N: BB> {}\r\n  |                    ^^\r\n  |\r\n  = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\r\n  = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\r\n  = note: `#[warn(bare_trait_objects)]` on by default\r\nhelp: use `dyn`\r\n  |\r\n2 | trait Bar<const N: dyn BB> {}\r\n  |                    +++\r\n\r\nerror[E0391]: cycle detected when computing type of `Bar::N`\r\n --> EED31F0DF9B9A1537D3A5A1FC8D89EFAC1A02554F65D38EB39520EC6C56421DD.rs:2:11\r\n  |\r\n2 | trait Bar<const N: BB> {}\r\n  |           ^^^^^^^^^^^\r\n  |\r\nnote: ...which requires computing the implied predicates of `BB`...\r\n --> EED31F0DF9B9A1537D3A5A1FC8D89EFAC1A02554F65D38EB39520EC6C56421DD.rs:3:1\r\n  |\r\n3 | trait BB = Bar<{ 2 + 1 }>;\r\n  | ^^^^^^^^\r\n  = note: ...which again requires computing type of `Bar::N`, completing the cycle\r\nnote: cycle used when computing explicit predicates of trait `Bar`\r\n --> EED31F0DF9B9A1537D3A5A1FC8D89EFAC1A02554F65D38EB39520EC6C56421DD.rs:2:1\r\n  |\r\n2 | trait Bar<const N: BB> {}\r\n  | ^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror[E0391]: cycle detected when computing type of `Bar::N`\r\n --> EED31F0DF9B9A1537D3A5A1FC8D89EFAC1A02554F65D38EB39520EC6C56421DD.rs:2:11\r\n  |\r\n2 | trait Bar<const N: BB> {}\r\n  |           ^^^^^^^^^^^\r\n  |\r\n  = note: ...which immediately requires computing type of `Bar::N` again\r\nnote: cycle used when computing explicit predicates of trait `Bar`\r\n --> EED31F0DF9B9A1537D3A5A1FC8D89EFAC1A02554F65D38EB39520EC6C56421DD.rs:2:1\r\n  |\r\n2 | trait Bar<const N: BB> {}\r\n  | ^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: `(left == right)`\r\n  left: `Fingerprint(6165256526804378725, 10024937989532815698)`,\r\n right: `Fingerprint(6898402961433838233, 16874419383706554687)`: Trying to feed an already recorded value for query type_of key=DefId(0:6 ~ EED31F0DF9B9A1537D3A5A1FC8D89EFAC1A02554F65D38EB39520EC6C56421DD[5e14]::BB::{constant#0}):\r\nold value: EarlyBinder([type error])\r\nnew value: EarlyBinder((dyn Bar<{ 2 + 1 }> + 'static))', compiler/rustc_middle/src/ty/query.rs:541:1\r\nstack backtrace:\r\n   0:     0x7f52bb3c7e73 - std::backtrace_rs::backtrace::libunwind::trace::h0c8179e89cc9893e\r\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7f52bb3c7e73 - std::backtrace_rs::backtrace::trace_unsynchronized::hfadffaff9fceb6ba\r\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f52bb3c7e73 - std::sys_common::backtrace::_print_fmt::ha49f609af156c4cb\r\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/sys_common/backtrace.rs:65:5\r\n   3:     0x7f52bb3c7e73 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h0ad104dc9ebb0bab\r\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/sys_common/backtrace.rs:44:22\r\n   4:     0x7f52bb428c8f - core::fmt::write::h076b507083203424\r\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/core/src/fmt/mod.rs:1247:17\r\n   5:     0x7f52bb3baea1 - std::io::Write::write_fmt::ha4c326e8c8c981e1\r\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/io/mod.rs:1712:15\r\n   6:     0x7f52bb3c7c85 - std::sys_common::backtrace::_print::hbc9e8503f2c8583b\r\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/sys_common/backtrace.rs:47:5\r\n   7:     0x7f52bb3c7c85 - std::sys_common::backtrace::print::he24fec1d9c5516a7\r\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/sys_common/backtrace.rs:34:9\r\n   8:     0x7f52bb3ca847 - std::panicking::default_hook::{{closure}}::hf29caaf6379226a6\r\n   9:     0x7f52bb3ca635 - std::panicking::default_hook::h0765c9476c979227\r\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/panicking.rs:288:9\r\n  10:     0x7f52ba1bf8c5 - <rustc_driver_impl[b4ece89b41fa04d8]::DEFAULT_HOOK::{closure#0}::{closure#0} as core[a53159a38bb5d97c]::ops::function::FnOnce<(&core[a53159a38bb5d97c]::panic::panic_info::PanicInfo,)>>::call_once::{shim:vtable#0}\r\n  11:     0x7f52bb3caf85 - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::h7a83df3f1b1b39ec\r\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/alloc/src/boxed.rs:1976:9\r\n  12:     0x7f52bb3caf85 - std::panicking::rust_panic_with_hook::h060701a46b500fdf\r\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/panicking.rs:695:13\r\n  13:     0x7f52bb3cacf9 - std::panicking::begin_panic_handler::{{closure}}::hcfb53c4ced379f9a\r\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/panicking.rs:582:13\r\n  14:     0x7f52bb3c82b6 - std::sys_common::backtrace::__rust_end_short_backtrace::h2100286b873f9af0\r\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/sys_common/backtrace.rs:150:18\r\n  15:     0x7f52bb3caa52 - rust_begin_unwind\r\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/panicking.rs:578:5\r\n  16:     0x7f52bb424f23 - core::panicking::panic_fmt::hcbb1fb2c2e65f651\r\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/core/src/panicking.rs:67:14\r\n  17:     0x7f52bb4254c9 - core::panicking::assert_failed_inner::hbcfc8b9959306cd0\r\n  18:     0x7f52ba695cfc - core[a53159a38bb5d97c]::panicking::assert_failed::<rustc_data_structures[ecde4e0aacf74356]::fingerprint::Fingerprint, rustc_data_structures[ecde4e0aacf74356]::fingerprint::Fingerprint>\r\n  19:     0x7f52b94e61aa - <rustc_middle[74d31bc1c7288efd]::ty::context::TyCtxt>::feed_anon_const_type\r\n  20:     0x7f52b94e3499 - rustc_hir_analysis[72726d43727a00d0]::astconv::generics::create_substs_for_generic_args::<<dyn rustc_hir_analysis[72726d43727a00d0]::astconv::AstConv>::create_substs_for_ast_path::{closure#0}::SubstsForAstPathCtxt>\r\n  21:     0x7f52b9518179 - <dyn rustc_hir_analysis[72726d43727a00d0]::astconv::AstConv>::instantiate_poly_trait_ref_inner\r\n  22:     0x7f52b9516edb - <dyn rustc_hir_analysis[72726d43727a00d0]::astconv::AstConv>::instantiate_poly_trait_ref\r\n  23:     0x7f52b9516a70 - <dyn rustc_hir_analysis[72726d43727a00d0]::astconv::AstConv>::add_bounds::<core[a53159a38bb5d97c]::slice::iter::Iter<rustc_hir[91d5175e7694dd08]::hir::GenericBound>>\r\n  24:     0x7f52b95161b6 - rustc_hir_analysis[72726d43727a00d0]::collect::predicates_of::implied_predicates_with_filter\r\n  25:     0x7f52b9aae6aa - rustc_hir_analysis[72726d43727a00d0]::collect::predicates_of::super_predicates_of\r\n  26:     0x7f52b982c8bf - rustc_query_system[38efe1ae13b76606]::query::plumbing::try_execute_query::<rustc_query_impl[d894186be28c7657]::queries::super_predicates_of, rustc_query_impl[d894186be28c7657]::plumbing::QueryCtxt>\r\n  27:     0x7f52b982c028 - <rustc_query_impl[d894186be28c7657]::Queries as rustc_middle[74d31bc1c7288efd]::ty::query::QueryEngine>::super_predicates_of\r\n  28:     0x7f52b8b07698 - <rustc_hir_analysis[72726d43727a00d0]::collect::CollectItemTypesVisitor as rustc_hir[91d5175e7694dd08]::intravisit::Visitor>::visit_item\r\n  29:     0x7f52b8b05c07 - <rustc_middle[74d31bc1c7288efd]::hir::map::Map>::visit_item_likes_in_module::<rustc_hir_analysis[72726d43727a00d0]::collect::CollectItemTypesVisitor>\r\n  30:     0x7f52b8b05b2c - rustc_hir_analysis[72726d43727a00d0]::collect::collect_mod_item_types\r\n  31:     0x7f52b9822b53 - rustc_query_system[38efe1ae13b76606]::query::plumbing::try_execute_query::<rustc_query_impl[d894186be28c7657]::queries::collect_mod_item_types, rustc_query_impl[d894186be28c7657]::plumbing::QueryCtxt>\r\n  32:     0x7f52b9822789 - <rustc_query_impl[d894186be28c7657]::Queries as rustc_middle[74d31bc1c7288efd]::ty::query::QueryEngine>::collect_mod_item_types\r\n  33:     0x7f52b969afcb - <rustc_middle[74d31bc1c7288efd]::hir::map::Map>::for_each_module::<rustc_hir_analysis[72726d43727a00d0]::check_crate::{closure#0}::{closure#0}::{closure#0}>\r\n  34:     0x7f52b969ab82 - <rustc_session[86cf650fda0448f5]::session::Session>::track_errors::<rustc_hir_analysis[72726d43727a00d0]::check_crate::{closure#0}, ()>\r\n  35:     0x7f52b9697eb4 - rustc_hir_analysis[72726d43727a00d0]::check_crate\r\n  36:     0x7f52b969201d - rustc_interface[69aa8c17999313ff]::passes::analysis\r\n  37:     0x7f52b993e3a2 - rustc_query_system[38efe1ae13b76606]::query::plumbing::try_execute_query::<rustc_query_impl[d894186be28c7657]::queries::analysis, rustc_query_impl[d894186be28c7657]::plumbing::QueryCtxt>\r\n  38:     0x7f52b993e0b0 - <rustc_query_impl[d894186be28c7657]::Queries as rustc_middle[74d31bc1c7288efd]::ty::query::QueryEngine>::analysis\r\n  39:     0x7f52b93ba90a - <rustc_middle[74d31bc1c7288efd]::ty::context::GlobalCtxt>::enter::<rustc_driver_impl[b4ece89b41fa04d8]::run_compiler::{closure#1}::{closure#2}::{closure#4}, core[a53159a38bb5d97c]::result::Result<(), rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>>\r\n  40:     0x7f52b93b9b48 - <rustc_interface[69aa8c17999313ff]::interface::Compiler>::enter::<rustc_driver_impl[b4ece89b41fa04d8]::run_compiler::{closure#1}::{closure#2}, core[a53159a38bb5d97c]::result::Result<core[a53159a38bb5d97c]::option::Option<rustc_interface[69aa8c17999313ff]::queries::Linker>, rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>>\r\n  41:     0x7f52b93b7b6f - rustc_span[5acbb0d3e38bbf81]::set_source_map::<core[a53159a38bb5d97c]::result::Result<(), rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>, rustc_interface[69aa8c17999313ff]::interface::run_compiler<core[a53159a38bb5d97c]::result::Result<(), rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>, rustc_driver_impl[b4ece89b41fa04d8]::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\r\n  42:     0x7f52b93b7200 - std[b0e36382822581c2]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[69aa8c17999313ff]::util::run_in_thread_pool_with_globals<rustc_interface[69aa8c17999313ff]::interface::run_compiler<core[a53159a38bb5d97c]::result::Result<(), rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>, rustc_driver_impl[b4ece89b41fa04d8]::run_compiler::{closure#1}>::{closure#0}, core[a53159a38bb5d97c]::result::Result<(), rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[a53159a38bb5d97c]::result::Result<(), rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>>\r\n  43:     0x7f52b93b6b21 - <<std[b0e36382822581c2]::thread::Builder>::spawn_unchecked_<rustc_interface[69aa8c17999313ff]::util::run_in_thread_pool_with_globals<rustc_interface[69aa8c17999313ff]::interface::run_compiler<core[a53159a38bb5d97c]::result::Result<(), rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>, rustc_driver_impl[b4ece89b41fa04d8]::run_compiler::{closure#1}>::{closure#0}, core[a53159a38bb5d97c]::result::Result<(), rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[a53159a38bb5d97c]::result::Result<(), rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>>::{closure#1} as core[a53159a38bb5d97c]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  44:     0x7f52bb3d5365 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h2b4cb02d9a218e1d\r\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/alloc/src/boxed.rs:1962:9\r\n  45:     0x7f52bb3d5365 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hbd8144eacfab6e10\r\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/alloc/src/boxed.rs:1962:9\r\n  46:     0x7f52bb3d5365 - std::sys::unix::thread::Thread::new::thread_start::h95499a4b2fca6f4a\r\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/sys/unix/thread.rs:108:17\r\n  47:     0x7f52b6e9ebb5 - <unknown>\r\n  48:     0x7f52b6f20d90 - <unknown>\r\n  49:                0x0 - <unknown>\r\n\r\nerror: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.71.0-nightly (1c42cb4ef 2023-04-26) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [super_predicates_of] computing the super predicates of `BB`\r\n#1 [collect_mod_item_types] collecting item types in top-level module\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to 3 previous errors; 1 warning emitted\r\n\r\nSome errors have detailed explanations: E0391, E0658.\r\nFor more information about an error, try `rustc --explain E0391`.\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110887/timeline", "performed_via_github_app": null, "state_reason": "completed"}