{"url": "https://api.github.com/repos/rust-lang/rust/issues/51020", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51020/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51020/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51020/events", "html_url": "https://github.com/rust-lang/rust/issues/51020", "id": 325990631, "node_id": "MDU6SXNzdWUzMjU5OTA2MzE=", "number": 51020, "title": "ICE on some funky moving in/out on nightly ... ", "user": {"login": "przygienda", "id": 1717259, "node_id": "MDQ6VXNlcjE3MTcyNTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1717259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/przygienda", "html_url": "https://github.com/przygienda", "followers_url": "https://api.github.com/users/przygienda/followers", "following_url": "https://api.github.com/users/przygienda/following{/other_user}", "gists_url": "https://api.github.com/users/przygienda/gists{/gist_id}", "starred_url": "https://api.github.com/users/przygienda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/przygienda/subscriptions", "organizations_url": "https://api.github.com/users/przygienda/orgs", "repos_url": "https://api.github.com/users/przygienda/repos", "events_url": "https://api.github.com/users/przygienda/events{/privacy}", "received_events_url": "https://api.github.com/users/przygienda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 867483626, "node_id": "MDU6TGFiZWw4Njc0ODM2MjY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-fixed-by-NLL", "name": "NLL-fixed-by-NLL", "color": "f799ea", "default": false, "description": "Bugs fixed, but only when NLL is enabled."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-24T07:08:53Z", "updated_at": "2019-02-16T20:08:47Z", "closed_at": "2019-02-16T20:08:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "ICE\r\n\r\nI tried this code:\r\n\r\n```\r\nextern crate itertools;\r\nuse itertools::Itertools;\r\nuse std::collections::HashMap;\r\n\r\nfn main() {\r\n    let v: Vec<_> = vec![(4, (0, 5)), (5, (6, 7))].into_iter().collect();\r\n\r\n    {\r\n        // make sure no port duplicates for some ports\r\n        let dupportsfound = v.iter().sorted_by_key(|v| v.0);\r\n\r\n        let dupportsfound = dupportsfound\r\n            .into_iter()\r\n            .group_by(|v| v.0)\r\n            .into_iter()\r\n            .filter(|(_, mut gi)| gi.by_ref().count() > 1)\r\n            .map(|(g, _)| g)\r\n            .collect::<Vec<_>>();\r\n\r\n        if dupportsfound.len() > 0 {\r\n            panic!(format!(\r\n                \"Duplicate use found for {:?}\",\r\n                dupportsfound\r\n            ));\r\n        }\r\n    }\r\n\r\n    let v = v\r\n        .into_iter()\r\n        .collect::<HashMap<_, _>>();\r\n        \r\n    println!(\"{:?}\",v);\r\n}\r\n\r\n```\r\n\r\nBacktrace:\r\n\r\n```\r\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: (MoveData { move_paths: [MovePath { place: _0 }, MovePath { place: _1 }, MovePath { place: _2 }, MovePath { place: _3 }, MovePath { place: _4 }, MovePath { place: _5 }, MovePath { place: _6 }, MovePath { place: _7 }], moves: [mp7@bb0[7], mp7@bb2[1], mp5@bb2[2], mp3@bb3[0], mp5@bb4[0], mp4@bb4[1], mp4@bb4[2], mp6@bb4[3], mp3@bb4[4], mp3@bb5[0], mp0@bb5[1]], loc_map: LocationMap { map: [[[], [], [], [], [], [], [], [mo0]], [[]], [[], [mo1], [mo2]], [[mo3]], [[mo4], [mo5], [mo6], [mo7], [mo8]], [[mo9], [mo10]]] }, path_map: [[mo10], [], [], [mo3, mo8, mo9], [mo5, mo6], [mo2, mo4], [mo7], [mo0, mo1]], rev_lookup: MovePathLookup { locals: [mp0, mp1, mp2, mp3, mp4, mp5, mp6, mp7], projections: {} }, inits: [mp1@src/topology/mod.rs:348:33: 348:70 (Deep), mp2@src/topology/mod.rs:348:34: 348:45 (Deep), mp3@src/topology/mod.rs:348:38: 348:44 (Deep), mp7@src/topology/mod.rs:348:47: 348:49 (Deep), mp6@src/topology/mod.rs:348:47: 348:58 (NonPanicPathOnly), mp5@src/topology/mod.rs:348:47: 348:58 (Deep), mp4@src/topology/mod.rs:348:47: 348:66 (NonPanicPathOnly), mp0@src/topology/mod.rs:348:47: 348:70 (Deep)], init_loc_map: LocationMap { map: [[[], [in2], [], [], [], [], [in3], [in4]], [[]], [[in5], [], [in6]], [[]], [[], [in7], [], [], []], [[], []]] }, init_path_map: [[in7], [in0], [in1], [in2], [in6], [in5], [in4], [in3]] }, [IllegalMove { cannot_move_out_of: IllegalMoveOrigin { span: src/topology/mod.rs:348:38: 348:44, kind: BorrowedContent } }])', libcore/result.rs:945:5\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n   1: std::sys_common::backtrace::print\r\n   2: std::panicking::default_hook::{{closure}}\r\n   3: std::panicking::default_hook\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n   6: std::panicking::begin_panic_fmt\r\n   7: rust_begin_unwind\r\n   8: core::panicking::panic_fmt\r\n   9: core::result::unwrap_failed\r\n  10: <rustc_mir::transform::elaborate_drops::ElaborateDrops as rustc_mir::transform::MirPass>::run_pass\r\n  11: rustc_mir::transform::optimized_mir::{{closure}}\r\n  12: rustc_mir::transform::optimized_mir\r\n  13: rustc::ty::maps::<impl rustc::ty::maps::config::QueryConfig<'tcx> for rustc::ty::maps::queries::optimized_mir<'tcx>>::compute\r\n  14: rustc::ty::context::tls::with_context\r\n  15: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  16: rustc::ty::context::tls::with_related_context\r\n  17: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  18: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  19: rustc::ty::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::instance_mir\r\n  20: rustc_mir::monomorphize::collector::collect_items_rec\r\n  21: rustc_mir::monomorphize::collector::collect_items_rec\r\n  22: rustc_mir::monomorphize::collector::collect_items_rec\r\n  23: rustc_mir::monomorphize::collector::collect_items_rec\r\n  24: rustc_mir::monomorphize::collector::collect_items_rec\r\n  25: rustc_mir::monomorphize::collector::collect_items_rec\r\n  26: rustc_mir::monomorphize::collector::collect_items_rec\r\n  27: rustc_mir::monomorphize::collector::collect_items_rec\r\n  28: rustc_mir::monomorphize::collector::collect_items_rec\r\n  29: rustc_mir::monomorphize::collector::collect_items_rec\r\n  30: rustc_mir::monomorphize::collector::collect_items_rec\r\n  31: rustc_mir::monomorphize::collector::collect_items_rec\r\n  32: rustc_mir::monomorphize::collector::collect_items_rec\r\n  33: rustc_mir::monomorphize::collector::collect_items_rec\r\n  34: rustc_mir::monomorphize::collector::collect_items_rec\r\n  35: rustc_mir::monomorphize::collector::collect_items_rec\r\n  36: rustc_mir::monomorphize::collector::collect_items_rec\r\n  37: rustc_mir::monomorphize::collector::collect_items_rec\r\n  38: rustc_mir::monomorphize::collector::collect_items_rec\r\n  39: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  40: rustc::util::common::time\r\n  41: rustc_codegen_llvm::base::collect_and_partition_mono_items\r\n  42: rustc::ty::context::tls::with_context\r\n  43: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  44: rustc::ty::context::tls::with_related_context\r\n  45: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  46: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  47: rustc_codegen_llvm::base::codegen_crate\r\n  48: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate\r\n  49: rustc::util::common::time\r\n  50: rustc_driver::driver::phase_4_codegen\r\n  51: rustc_driver::driver::compile_input::{{closure}}\r\n  52: rustc::ty::context::tls::enter_context\r\n  53: <std::thread::local::LocalKey<T>>::with\r\n  54: rustc::ty::context::TyCtxt::create_and_enter\r\n  55: rustc_driver::driver::compile_input\r\n  56: rustc_driver::run_compiler_with_pool\r\n  57: syntax::with_globals\r\n  58: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  59: __rust_maybe_catch_panic\r\n  60: rustc_driver::run\r\n  61: rustc_driver::main\r\n  62: std::rt::lang_start::{{closure}}\r\n  63: std::panicking::try::do_call\r\n  64: __rust_maybe_catch_panic\r\n  65: std::rt::lang_start_internal\r\n  66: main\r\nquery stack during panic:\r\n#0 [optimized_mir] processing `topology::YamlTopology::run::{{closure}}::{{closure}}`\r\n#1 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.28.0-nightly (71e87be38 2018-05-22) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n```", "closed_by": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51020/timeline", "performed_via_github_app": null, "state_reason": "completed"}