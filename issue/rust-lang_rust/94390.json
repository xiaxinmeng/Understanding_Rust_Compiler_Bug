{"url": "https://api.github.com/repos/rust-lang/rust/issues/94390", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94390/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94390/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94390/events", "html_url": "https://github.com/rust-lang/rust/issues/94390", "id": 1151247843, "node_id": "I_kwDOAAsO6M5EnqXj", "number": 94390, "title": "Rust 1.59 rustc greatly increased compile time with include_str!", "user": {"login": "sstangl", "id": 171223, "node_id": "MDQ6VXNlcjE3MTIyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/171223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sstangl", "html_url": "https://github.com/sstangl", "followers_url": "https://api.github.com/users/sstangl/followers", "following_url": "https://api.github.com/users/sstangl/following{/other_user}", "gists_url": "https://api.github.com/users/sstangl/gists{/gist_id}", "starred_url": "https://api.github.com/users/sstangl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sstangl/subscriptions", "organizations_url": "https://api.github.com/users/sstangl/orgs", "repos_url": "https://api.github.com/users/sstangl/repos", "events_url": "https://api.github.com/users/sstangl/events{/privacy}", "received_events_url": "https://api.github.com/users/sstangl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2022-02-26T05:36:18Z", "updated_at": "2023-04-05T17:34:48Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following repo/hash compiles with rustc v1.58, but loops forever in v1.59 and Nightly (1.61): https://github.com/sstangl/openpowerlifting/commit/ac057e388ac911fda2e93acd8689d13f6df23034\r\n\r\nThe problem appears to be with the compilation of a very small crate (`modules/langpack`) that uses `include_str!` to include some JSON files. The problematic method is the implementation of `default()`:\r\n\r\n```rust\r\n    fn default() -> LangInfo {\r\n        LangInfo {\r\n            cz: json::from_str(include_str!(\"../translations/cz.json\")).expect(\"cz\"),\r\n            de: json::from_str(include_str!(\"../translations/de.json\")).expect(\"de\"),\r\n            el: json::from_str(include_str!(\"../translations/el.json\")).expect(\"el\"),\r\n            en: json::from_str(include_str!(\"../translations/en.json\")).expect(\"en\"),\r\n            eo: json::from_str(include_str!(\"../translations/eo.json\")).expect(\"eo\"),\r\n            es: json::from_str(include_str!(\"../translations/es.json\")).expect(\"es\"),\r\n            fi: json::from_str(include_str!(\"../translations/fi.json\")).expect(\"fi\"),\r\n            fr: json::from_str(include_str!(\"../translations/fr.json\")).expect(\"fr\"),\r\n            hr: json::from_str(include_str!(\"../translations/hr.json\")).expect(\"hr\"),\r\n            hu: json::from_str(include_str!(\"../translations/hu.json\")).expect(\"hu\"),\r\n            it: json::from_str(include_str!(\"../translations/it.json\")).expect(\"it\"),\r\n            ja: json::from_str(include_str!(\"../translations/ja.json\")).expect(\"ja\"),\r\n            ko: json::from_str(include_str!(\"../translations/ko.json\")).expect(\"ko\"),\r\n            lt: json::from_str(include_str!(\"../translations/lt.json\")).expect(\"lt\"),\r\n            nl: json::from_str(include_str!(\"../translations/nl.json\")).expect(\"nl\"),\r\n            pl: json::from_str(include_str!(\"../translations/pl.json\")).expect(\"pl\"),\r\n            pt: json::from_str(include_str!(\"../translations/pt.json\")).expect(\"pt\"),\r\n            sk: json::from_str(include_str!(\"../translations/sk.json\")).expect(\"sk\"),\r\n            sl: json::from_str(include_str!(\"../translations/sl.json\")).expect(\"sl\"),\r\n            sr: json::from_str(include_str!(\"../translations/sr.json\")).expect(\"sr\"),\r\n            sv: json::from_str(include_str!(\"../translations/sv.json\")).expect(\"sv\"),\r\n            ru: json::from_str(include_str!(\"../translations/ru.json\")).expect(\"ru\"),\r\n            tr: json::from_str(include_str!(\"../translations/tr.json\")).expect(\"tr\"),\r\n            uk: json::from_str(include_str!(\"../translations/uk.json\")).expect(\"uk\"),\r\n            vi: json::from_str(include_str!(\"../translations/vi.json\")).expect(\"vi\"),\r\n            zh_hant: json::from_str(include_str!(\"../translations/zh-Hant.json\")).expect(\"zh_hant\"),\r\n            zh_hans: json::from_str(include_str!(\"../translations/zh-Hans.json\")).expect(\"zh_hans\"),\r\n        }\r\n    }\r\n```\r\n\r\nWhen this function is removed, compilation succeeds.\r\n\r\nGDB shows a thread stuck within LLVM, doing various optimizations, in a seemingly-endless loop (I waited several minutes. Previously this compilation with 1.58.1 took ~32s):\r\n```\r\n  6    Thread 0x7f6b9fbff640 (LWP 171415) \"LTO langpack.a3\" 0x00007f6bbeb4cd3f in llvm::SSAUpdater::GetValueAtEndOfBlockInternal(llvm::BasicBlock*) ()\r\n```\r\n```\r\n  5    Thread 0x7f6ba03ff640 (LWP 171218) \"opt langpack.a3\" 0x00007f6bbe3f34cf in llvm::removeUnreachableBlocks(llvm::Function&, llvm::DomTreeUpdater*, llvm::MemorySSAUpdater*) ()\r\n```\r\n```\r\n  5    Thread 0x7fa58c3ff640 (LWP 170073) \"opt langpack.a3\" 0x00007fa5aa4f21e4 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) ()\r\n```\r\n\r\n### Steps to Reproduce\r\n1. `git clone https://github.com/sstangl/openpowerlifting.git`\r\n2. `git checkout ac057e388ac911fda2e93acd8689d13f6df23034`\r\n3. `cd modules/langpack`\r\n4. `cargo build`\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.59.0 (9d1b2106e 2022-02-23)\r\nbinary: rustc\r\ncommit-hash: 9d1b2106e23b1abd32fce1f17267604a5102f57a\r\ncommit-date: 2022-02-23\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.59.0\r\nLLVM version: 13.0.0\r\n```\r\n\r\nThe problem also exists with Nightly:\r\n```\r\nrustc 1.61.0-nightly (4b043faba 2022-02-24)\r\nbinary: rustc\r\ncommit-hash: 4b043faba34ccc053a4d0110634c323f6c03765e\r\ncommit-date: 2022-02-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.61.0-nightly\r\nLLVM version: 14.0.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94390/timeline", "performed_via_github_app": null, "state_reason": null}