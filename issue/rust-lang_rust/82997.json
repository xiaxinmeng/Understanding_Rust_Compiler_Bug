{"url": "https://api.github.com/repos/rust-lang/rust/issues/82997", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82997/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82997/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82997/events", "html_url": "https://github.com/rust-lang/rust/issues/82997", "id": 828500302, "node_id": "MDU6SXNzdWU4Mjg1MDAzMDI=", "number": 82997, "title": "Bug when mixing /**/ and // comments on * operator", "user": {"login": "ALRBP", "id": 26524976, "node_id": "MDQ6VXNlcjI2NTI0OTc2", "avatar_url": "https://avatars.githubusercontent.com/u/26524976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ALRBP", "html_url": "https://github.com/ALRBP", "followers_url": "https://api.github.com/users/ALRBP/followers", "following_url": "https://api.github.com/users/ALRBP/following{/other_user}", "gists_url": "https://api.github.com/users/ALRBP/gists{/gist_id}", "starred_url": "https://api.github.com/users/ALRBP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ALRBP/subscriptions", "organizations_url": "https://api.github.com/users/ALRBP/orgs", "repos_url": "https://api.github.com/users/ALRBP/repos", "events_url": "https://api.github.com/users/ALRBP/events{/privacy}", "received_events_url": "https://api.github.com/users/ALRBP/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-03-11T00:03:12Z", "updated_at": "2021-03-12T01:05:34Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Take this code:\r\n```rust\r\nfn main()\r\n{\r\n    let mut x = 1;\r\n    let y = &mut x;\r\n    for _ in 0..10\r\n    {\r\n        x+=1;\r\n    }\r\n    for _ in 0..10\r\n    {\r\n        *y+=1;\r\n    }\r\n    println!(\"{}\",*y)\r\n}\r\n```\r\nIt compiles.\r\n\r\nYou can comment both increment lines with // comments:\r\n```rust\r\nfn main()\r\n{\r\n    let mut x = 1;\r\n    let y = &mut x;\r\n    for _ in 0..10\r\n    {\r\n        //x+=1;\r\n    }\r\n    for _ in 0..10\r\n    {\r\n        //*y+=1;\r\n    }\r\n    println!(\"{}\",*y)\r\n}\r\n```\r\nIt compiles.\r\n\r\nYou can comment both for loops with /\\*\\*/ comments:\r\n```rust\r\nfn main()\r\n{\r\n    let mut x = 1;\r\n    let y = &mut x;\r\n    /*for _ in 0..10\r\n    {\r\n        x+=1;\r\n    }*/\r\n    /*for _ in 0..10\r\n    {\r\n        *y+=1;\r\n    }*/\r\n    println!(\"{}\",*y)\r\n}\r\n```\r\nIt compiles.\r\n\r\nYou can mix /\\*\\*/ comment on for loops and increment lines:\r\n```rust\r\nfn main()\r\n{\r\n    let mut x = 1;\r\n    let y = &mut x;\r\n    /*for _ in 0..10\r\n    {\r\n        /*x+=1;*/\r\n    }*/\r\n    /*for _ in 0..10\r\n    {\r\n        /**y+=1;*/\r\n    }*/\r\n    println!(\"{}\",*y)\r\n}\r\n```\r\nIt compiles.\r\n\r\nYou can also mix /\\*\\*/ and // comments on the first for loop and its increment:\r\n```rust\r\nfn main()\r\n{\r\n    let mut x = 1;\r\n    let y = &mut x;\r\n    /*for _ in 0..10\r\n    {\r\n        //x+=1;\r\n    }*/\r\n    for _ in 0..10\r\n    {\r\n        *y+=1;\r\n    }\r\n    println!(\"{}\",*y)\r\n}\r\n```\r\nIt compiles.\r\n\r\nBut if you try to mix /\\*\\*/ and // comments on the second for loop and its increment:\r\n```rust\r\nfn main()\r\n{\r\n    let mut x = 1;\r\n    let y = &mut x;\r\n    for _ in 0..10\r\n    {\r\n        x+=1;\r\n    }\r\n    /*for _ in 0..10\r\n    {\r\n        //*y+=1;\r\n    }*/\r\n    println!(\"{}\",*y)\r\n}\r\n```\r\nIt does not compile\r\n```\r\nerror[E0758]: unterminated block comment\r\n  --> src/main.rs:9:5\r\n   |\r\n9  | /     /*for _ in 0..10\r\n10 | |     {\r\n11 | |         //*y+=1;\r\n12 | |     }*/\r\n13 | |     println!(\"{}\",*y)\r\n14 | | }\r\n   | |__^\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nIt seems that, when parsing a /\\*\\*/ comment, rustc does not recognize // comments. This is not an issue in general but in the particular case where // is followed by a dereference operator \\* (\"//\\*\"), then rustc reads \"/\\*\" and takes this as another level of /\\*\\*/ comment.\r\n\r\nI am not an expert in Rust and I know that /\\*\\*/ comments are not idiomatic, but I still think this should not happen.\r\nI noticed that my syntax highlighter (KSyntaxHighlighting) makes the same mistake, but it is likely that it is still a bug that happen to be present in both, rustc and the Rust language description of KSyntaxHighlighting (same with GitHub's). Maybe I am wrong and this is intended but, in that case, I would like to know. I have read nothing about mixing /\\*\\*/ and // comments but if it works in most cases, having particular cases where it does not work is a confusing behavior.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82997/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82997/timeline", "performed_via_github_app": null, "state_reason": null}