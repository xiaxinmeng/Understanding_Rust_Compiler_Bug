{"url": "https://api.github.com/repos/rust-lang/rust/issues/17224", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/17224/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/17224/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/17224/events", "html_url": "https://github.com/rust-lang/rust/issues/17224", "id": 42688785, "node_id": "MDU6SXNzdWU0MjY4ODc4NQ==", "number": 17224, "title": "Guide: Fixing Inverse in Generics section", "user": {"login": "prakhar1989", "id": 649249, "node_id": "MDQ6VXNlcjY0OTI0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/649249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prakhar1989", "html_url": "https://github.com/prakhar1989", "followers_url": "https://api.github.com/users/prakhar1989/followers", "following_url": "https://api.github.com/users/prakhar1989/following{/other_user}", "gists_url": "https://api.github.com/users/prakhar1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/prakhar1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prakhar1989/subscriptions", "organizations_url": "https://api.github.com/users/prakhar1989/orgs", "repos_url": "https://api.github.com/users/prakhar1989/repos", "events_url": "https://api.github.com/users/prakhar1989/events{/privacy}", "received_events_url": "https://api.github.com/users/prakhar1989/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-09-13T06:42:10Z", "updated_at": "2015-01-16T06:03:12Z", "closed_at": "2015-01-16T06:03:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the section on Generics, the inverse function is introduced which gives inverse of a `f32` and `f64`. The section uses this following code to demonstrate the usage of `Traits` but then doesn't provide an example of how to fix the original problem.\n\n``` rust\nfn inverse<T>(x: T) -> Result<T, String> {\n    if x == 0.0 { return Err(\"x cannot be zero!\".to_string()); }\n\n    Ok(1.0 / x)\n}\n```\n\nAs a beginner, I found it a bit hard to make this work as the solution is quite unintuitive for someone new to rust. \n\n``` rust\nfn inverse<T: Float>(x: T) -> Result<T, String> {\n    // converting slice to String\n    let f0: T = std::num::Zero::zero();\n    let f1: T = std::num::One::one();\n    if x == f0 { return Err(\"x cannot be zero!\".to_string()); }\n    Ok(f1 / x)\n}\n```\n\nIt would be great if after the diversion to `Traits` the generics section closes off with a solution to the `inverse` problem with a bit of explanation of `std::num` module.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/17224/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/17224/timeline", "performed_via_github_app": null, "state_reason": "completed"}