{"url": "https://api.github.com/repos/rust-lang/rust/issues/69924", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69924/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69924/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69924/events", "html_url": "https://github.com/rust-lang/rust/issues/69924", "id": 579331319, "node_id": "MDU6SXNzdWU1NzkzMzEzMTk=", "number": 69924, "title": "Corrupt backtrace printing", "user": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36953, "node_id": "MDU6TGFiZWwzNjk1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-runtime", "name": "A-runtime", "color": "f7e101", "default": false, "description": "Area: std's runtime and \"pre-main\" init for handling backtraces, unwinds, stack overflows"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-11T15:03:12Z", "updated_at": "2020-03-12T13:46:44Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The panic is caused by a problem in my code, but I expected a backtrace without garbage like `U\u2592`.\r\n\r\n```bash\r\n$ rustc -V\r\nrustc 1.43.0-nightly (3dbade652 2020-03-09)\r\n$ git clone https://github.com/bjorn3/rustc_codegen_cranelift\r\n$ cd rustc_codegen_cranelift\r\n$ git checkout 3e111967d297173b410ed4ad174e5bb0379ed6a2\r\n$ ./prepare.sh && ./test.sh\r\n$ # You can abort the previous command once hyperfine is running\r\n$ cd simple-raytracer\r\n$ CG_CLIF_INCR_CACHE=1 ../cargo.sh build\r\n$ rm target/x86_64-unknown-linux-gnu/debug/deps/libraytracer-*.rlib\r\n$ CG_CLIF_INCR_CACHE=1 ../cargo.sh build\r\n$ # The broken backtrace\r\n```\r\n\r\nSorry for the long repro steps. I don't know how to reduce this.\r\n\r\n```\r\nthread 'rustc' panicked at 'LTO unsupported', src/driver.rs:291:38\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1063\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1428\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:474\r\n  12: is_prefix_of17h94b348dc8c888b79E\r\n  13: teral4span17h10eecf4264bfcf69E\r\n  14: U\u2592\r\n  15: core::iter::traits::iterator::Iterator::fold::ok::{{closure}}\r\n  16: core::iter::traits::iterator::Iterator::try_fold\r\n  17: \r\n  18: U\u2592\r\n  19: \r\n  20: \r\n  21: \ufffd/\r\n  22: \r\n  23: oc_macro28fallback5Ident4span17h67e781d6d0fd26b5E\r\n  24: f9b2563E\r\n  25: macro26strnom6Cursor4find17h96007a5d5e73adc2E\r\n  26: into_iter28_$u7b$$u7b$closure$u7d$$u7d$17he06b301940fa9f5cE\r\n  27: cept_table107\r\n  28: rustc_codegen_cranelift::driver::codegen_crate\r\n  29: <rustc_codegen_cranelift::CraneliftCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate\r\n  30: rustc_interface::passes::start_codegen\r\n  31: rustc::ty::context::tls::enter_global\r\n  32: rustc_interface::queries::Queries::ongoing_codegen\r\n  33: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.0-nightly (3dbade652 2020-03-09) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z panic-abort-tests -Z codegen-backend=/home/bjorn/Documenten/cg_clif/target/debug/librustc_codegen_cranelift.so -C debuginfo=2 -C incremental -C panic=abort -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\n(bjorn3/rustc_codegen_cranelift@3e111967d297173b410ed4ad174e5bb0379ed6a2 keep alive for this commit)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69924/timeline", "performed_via_github_app": null, "state_reason": null}