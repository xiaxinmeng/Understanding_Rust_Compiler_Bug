{"url": "https://api.github.com/repos/rust-lang/rust/issues/106120", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/106120/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/106120/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/106120/events", "html_url": "https://github.com/rust-lang/rust/issues/106120", "id": 1510078423, "node_id": "I_kwDOAAsO6M5aAffX", "number": 106120, "title": "Linking with XCFrameworks doesn't work", "user": {"login": "MatrixDev", "id": 1215187, "node_id": "MDQ6VXNlcjEyMTUxODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1215187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MatrixDev", "html_url": "https://github.com/MatrixDev", "followers_url": "https://api.github.com/users/MatrixDev/followers", "following_url": "https://api.github.com/users/MatrixDev/following{/other_user}", "gists_url": "https://api.github.com/users/MatrixDev/gists{/gist_id}", "starred_url": "https://api.github.com/users/MatrixDev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MatrixDev/subscriptions", "organizations_url": "https://api.github.com/users/MatrixDev/orgs", "repos_url": "https://api.github.com/users/MatrixDev/repos", "events_url": "https://api.github.com/users/MatrixDev/events{/privacy}", "received_events_url": "https://api.github.com/users/MatrixDev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38105576, "node_id": "MDU6TGFiZWwzODEwNTU3Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-ios", "name": "O-ios", "color": "6e6ec0", "default": false, "description": "Operating system: iOS"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-12-24T12:29:51Z", "updated_at": "2023-03-02T07:19:36Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\n// build.rs\r\nprintln!(\"cargo:rustc-link-search=framework=../../Frameworks/MacOS/Banuba/bnb-0.37.1/iOS/\");\r\nprintln!(\"cargo:rustc-link-lib=framework=BNBEffectPlayerC\");\r\n```\r\n\r\nFolder structure (with frameworks):\r\n```\r\n- Frameworks/MacOS/Banuba/bnb-0.37.1/iOS\r\n  - BNBEffectPlayerC.xcframework\r\n    - ios-arm64\r\n      - BNBEffectPlayerC.framework\r\n    - ios-arm64_x86_64-simulator\r\n      - BNBEffectPlayerC.framework\r\n    - Info.plist\r\n```\r\n\r\n# Expected behavior\r\nI expected for the program to successfully link with `BNBEffectPlayerC` library and automatically select correct 'sub-framework' based on the build target. Something like this:\r\n- `aarch64-apple-ios` => `ios-arm64`\r\n- `aarch64-apple-ios-sim` => `ios-arm64_x86_64-simulator`\r\n- `x86_64-apple-ios` => `ios-arm64_x86_64-simulator`\r\n\r\n# Actual behavior\r\nInstead, linking fails with following error:\r\n```\r\ncargo build --release --target aarch64-apple-ios\r\n   Compiling banuba v0.1.0 (/Users/oleksandr/banuba-rs)\r\nerror: linking with `cc` failed: exit status: 1\r\n  = note: \"cc\" \"-Wl, {tons and tons of arguments}\r\n  = note: ld: framework not found BNBEffectPlayerC\r\n          clang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n\r\n# Workaround\r\nFollowing workaround is ugly and to properly implement it we should parse `Info.plist` to select correct framework but it will require much more effort:\r\n```rust\r\n// build.rs\r\nlet is_simulator = env::var(\"TARGET\").unwrap() == \"aarch64-apple-ios-sim\" || target == \"x86_64-apple-ios\";\r\nlet framework_folder = match is_simulator {\r\n    true => \"ios-arm64_x86_64-simulator\",\r\n    false => \"ios-arm64\",\r\n};\r\nprintln!(\"cargo:rustc-link-search=framework=../../Frameworks/MacOS/Banuba/bnb-0.37.1/iOS/BNBEffectPlayerC.xcframework/{}\", framework_folder);\r\nprintln!(\"cargo:rustc-link-lib=framework=BNBEffectPlayerC\");\r\n\r\n```\r\n\r\n# Proposed solution\r\nMaybe it whould be better to add one more linking variant, something like `xcframework`?\r\n```rust\r\n// build.rs\r\nprintln!(\"cargo:rustc-link-search=xcframework=../../Frameworks/MacOS/Banuba/bnb-0.37.1/iOS/\");\r\nprintln!(\"cargo:rustc-link-lib=xcframework=BNBEffectPlayerC\");\r\n```\r\n\r\n# Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.66.0 (69f9c33d7 2022-12-12)\r\nbinary: rustc\r\ncommit-hash: 69f9c33d71c871fc16ac445211281c6e7a340943\r\ncommit-date: 2022-12-12\r\nhost: aarch64-apple-darwin\r\nrelease: 1.66.0\r\nLLVM version: 15.0.2\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/106120/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/106120/timeline", "performed_via_github_app": null, "state_reason": null}