{"url": "https://api.github.com/repos/rust-lang/rust/issues/50034", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50034/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50034/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50034/events", "html_url": "https://github.com/rust-lang/rust/issues/50034", "id": 315176848, "node_id": "MDU6SXNzdWUzMTUxNzY4NDg=", "number": 50034, "title": "Room for improvement in diagnostics where closures aren't 'static", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-17T18:22:44Z", "updated_at": "2020-08-11T02:15:54Z", "closed_at": "2020-08-11T02:15:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[Given code like](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=5f0c1f2108be600ff441bd4a1b90d54c):\r\n\r\n```rust\r\nstruct A {}\r\n\r\nimpl A {\r\n    fn foo(&mut self) {\r\n        let x = move || {\r\n            drop(self);\r\n        };\r\n        foo(x);\r\n    }\r\n}\r\n\r\nfn foo<T: 'static>(_t: T) {}\r\n\r\nfn main() {}\r\n```\r\n\r\nthe diagnostics emitted are:\r\n\r\n```\r\nerror[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\r\n --> foo.rs:5:17\r\n  |\r\n5 |           let x = move || {\r\n  |  _________________^\r\n6 | |             drop(self);\r\n7 | |         };\r\n  | |_________^\r\n  |\r\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 4:5...\r\n --> foo.rs:4:5\r\n  |\r\n4 | /     fn foo(&mut self) {\r\n5 | |         let x = move || {\r\n6 | |             drop(self);\r\n7 | |         };\r\n8 | |         foo(x);\r\n9 | |     }\r\n  | |_____^\r\n  = note: ...so that the types are compatible:\r\n          expected &mut A\r\n             found &mut A\r\n  = note: but, the lifetime must be valid for the static lifetime...\r\nnote: ...so that the type `[closure@foo.rs:5:17: 7:10 self:&mut A]` will meet its required lifetime bounds\r\n --> foo.rs:8:9\r\n  |\r\n8 |         foo(x);\r\n  |         ^^^\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0495`.\r\n```\r\n\r\nIn general you have to squint for awhile to see that `self:&mut A` in the error message is probably the culprit. It'd be super-extra-awesome if rustc could diagnose which captured variables in a closure are causing it to have a non `'static` lifetime and point directly at the `self` here to indicate that it's the issue.", "closed_by": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50034/timeline", "performed_via_github_app": null, "state_reason": "completed"}