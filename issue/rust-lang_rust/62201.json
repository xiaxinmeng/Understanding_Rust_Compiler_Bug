{"url": "https://api.github.com/repos/rust-lang/rust/issues/62201", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62201/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62201/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62201/events", "html_url": "https://github.com/rust-lang/rust/issues/62201", "id": 461867040, "node_id": "MDU6SXNzdWU0NjE4NjcwNDA=", "number": 62201, "title": "HRTB prevent mem::transmute and mem::MaybeUninit from working", "user": {"login": "SeeSpring", "id": 30735327, "node_id": "MDQ6VXNlcjMwNzM1MzI3", "avatar_url": "https://avatars.githubusercontent.com/u/30735327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SeeSpring", "html_url": "https://github.com/SeeSpring", "followers_url": "https://api.github.com/users/SeeSpring/followers", "following_url": "https://api.github.com/users/SeeSpring/following{/other_user}", "gists_url": "https://api.github.com/users/SeeSpring/gists{/gist_id}", "starred_url": "https://api.github.com/users/SeeSpring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SeeSpring/subscriptions", "organizations_url": "https://api.github.com/users/SeeSpring/orgs", "repos_url": "https://api.github.com/users/SeeSpring/repos", "events_url": "https://api.github.com/users/SeeSpring/events{/privacy}", "received_events_url": "https://api.github.com/users/SeeSpring/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-28T05:46:59Z", "updated_at": "2023-02-05T21:30:08Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code prevents `mem::MaybeUninit` and `mem::transmute` from creating values. \r\n\r\n```rust\r\ntrait Ty<'a> {\r\n    type V;\r\n}\r\n\r\ntrait SIter: for<'a> Ty<'a> {\r\n    fn f<F>(&self, f: F)\r\n    where\r\n        F: for<'r> Fn(<Self as Ty<'r>>::V);\r\n}\r\n\r\nstruct S<I>(I);\r\n\r\nimpl<'a, I: Ty<'a>> Ty<'a> for S<I> {\r\n    type V = <I as Ty<'a>>::V;\r\n}\r\n\r\ntrait Is<'a> {\r\n    type V;\r\n}\r\n\r\nimpl<'a, T> Is<'a> for T {\r\n    type V = T;\r\n}\r\n\r\nimpl<I: SIter, Item> SIter for S<I>\r\nwhere\r\n    // for<'r> Self: Ty<'r, V = <I as Ty<'r>>::V>,\r\n    for<'r> S<I>: Ty<'r, V = Item>,\r\n    for<'r> I: Ty<'r, V = Item>,\r\n    // for<'r> <Self as Ty<'r>>::V: Is<'r, V = <I as Ty<'r>>::V>,\r\n{\r\n    fn f<F>(&self, f: F)\r\n    where\r\n        F: Fn(<Self as Ty>::V),\r\n    {\r\n        self.0.f(|item| unsafe {\r\n            // let item: <Self as Ty>::V = std::mem::transmute_copy(&item);\r\n            let item: <Self as Ty>::V = std::mem::MaybeUninit::uninit().assume_init();\r\n            // let item: <Self as Ty>::V = loop {};\r\n            f(item)\r\n        })\r\n    }\r\n}\r\n\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=1a2fc7bec9aa84a18b9ab59a1d18167a))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0308]: mismatched types\r\n  --> src/lib.rs:40:15\r\n   |\r\n40 |             f(item)\r\n   |               ^^^^ expected associated type, found type parameter\r\n   |\r\n   = note: expected type `<S<I> as Ty<'_>>::V`\r\n              found type `Item`\r\n\r\nerror[E0277]: expected a `std::ops::Fn<(Item,)>` closure, found `F`\r\n  --> src/lib.rs:40:13\r\n   |\r\n40 |             f(item)\r\n   |             ^^^^^^^ expected an `Fn<(Item,)>` closure, found `F`\r\n   |\r\n   = help: the trait `std::ops::Fn<(Item,)>` is not implemented for `F`\r\n   = help: consider adding a `where F: std::ops::Fn<(Item,)>` bound\r\n\r\nerror: aborting due to 2 previous errors\r\n\r\nSome errors have detailed explanations: E0277, E0308.\r\nFor more information about an error, try `rustc --explain E0277`.\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\nThe code works fine without any unsafe if I remove all lifetimes from it.\r\n```rust\r\ntrait Ty {\r\n    type V;\r\n}\r\n\r\ntrait SIter: Ty {\r\n    fn f<F>(&self, f: F)\r\n    where\r\n        F: Fn(<Self as Ty>::V);\r\n}\r\n\r\nstruct S<I>(I);\r\n\r\nimpl<I: Ty> Ty for S<I> {\r\n    type V = <I as Ty>::V;\r\n}\r\n\r\n// trait Is<'a> {\r\n//     type V;\r\n// }\r\n\r\n// impl<'a, T> Is<'a> for T {\r\n//     type V = T;\r\n// }\r\n\r\nimpl<I: SIter> SIter for S<I>\r\nwhere\r\n    // for<'r> Self: Ty<'r, V = <I as Ty<'r>>::V>,\r\n    // for<'r> S<I>: Ty<'r, V = Item>,\r\n    // for<'r> I: Ty<'r, V = Item>,\r\n    // for<'r> <Self as Ty<'r>>::V: Is<'r, V = <I as Ty<'r>>::V>,\r\n{\r\n    fn f<F>(&self, f: F)\r\n    where\r\n        F: Fn(<Self as Ty>::V),\r\n    {\r\n        self.0.f(|item| unsafe {\r\n            // let item: <Self as Ty>::V = std::mem::transmute_copy(&item);\r\n            // let item: <Self as Ty>::V = std::mem::MaybeUninit::uninit().assume_init();\r\n            // let item: <Self as Ty>::V = loop {};\r\n            f(item)\r\n        })\r\n    }\r\n}\r\n\r\n```\r\n([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=936da463b2547b9d225f3dc217b3d8af))\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62201/timeline", "performed_via_github_app": null, "state_reason": null}