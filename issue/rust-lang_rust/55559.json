{"url": "https://api.github.com/repos/rust-lang/rust/issues/55559", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55559/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55559/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55559/events", "html_url": "https://github.com/rust-lang/rust/issues/55559", "id": 376215390, "node_id": "MDU6SXNzdWUzNzYyMTUzOTA=", "number": 55559, "title": ".count() too slow", "user": {"login": "npip99", "id": 8939474, "node_id": "MDQ6VXNlcjg5Mzk0NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8939474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/npip99", "html_url": "https://github.com/npip99", "followers_url": "https://api.github.com/users/npip99/followers", "following_url": "https://api.github.com/users/npip99/following{/other_user}", "gists_url": "https://api.github.com/users/npip99/gists{/gist_id}", "starred_url": "https://api.github.com/users/npip99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/npip99/subscriptions", "organizations_url": "https://api.github.com/users/npip99/orgs", "repos_url": "https://api.github.com/users/npip99/repos", "events_url": "https://api.github.com/users/npip99/events{/privacy}", "received_events_url": "https://api.github.com/users/npip99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-11-01T01:05:49Z", "updated_at": "2023-04-05T17:37:00Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I noticed something peculiar in #33038, notably\r\n\r\n> So in short, the slowdown is caused by .count() using 64 bit integers. Which is strange, because the length of the vector is known be less than 2^32 - is there any way to optimize Vec or count() to use something smaller than usize?\r\n\r\nIn my understanding, `.count()` using `usize` directly contradicts\r\n\r\n> So how do you know which type of integer to use? If you\u2019re unsure, Rust\u2019s defaults are generally good choices, and integer types default to i32: this type is generally the fastest, even on 64-bit systems. The primary situation in which you\u2019d use isize or usize is when indexing some sort of collection.\r\n\r\nfrom https://doc.rust-lang.org/book/second-edition/ch03-02-data-types.html\r\n\r\n`.count()` is certainly never realistically being used for indexing, so according to the above paragraph it should default to `i32` on 64bit systems (This is referring to automatic typing of integer literals, but as an idea it remains valid). If this was already thoroughly discussed, I apologize. If not, I think it needs a second look. I think that in the majority of use cases, the users of Rust would much prefer `.count()` be three times faster, as opposed to being able to surpass 4 Billion.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55559/timeline", "performed_via_github_app": null, "state_reason": null}