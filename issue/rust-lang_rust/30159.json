{"url": "https://api.github.com/repos/rust-lang/rust/issues/30159", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/30159/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/30159/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/30159/events", "html_url": "https://github.com/rust-lang/rust/issues/30159", "id": 119863318, "node_id": "MDU6SXNzdWUxMTk4NjMzMTg=", "number": 30159, "title": "Unexpected warning with use statement", "user": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-12-02T04:04:27Z", "updated_at": "2015-12-11T07:56:34Z", "closed_at": "2015-12-11T07:56:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[Playground link](http://is.gd/fyfwV5) for all of the examples.\n\nUsing this code:\n\n``` rust\ntrait Trait {\n    fn func(&self);\n}\n\npub struct Struct;\n\nimpl Trait for Struct {\n    fn func(&self) { }\n}\n\n#[cfg(test)]\nmod test_level_0 {\n    use super::Trait;\n    pub use super::*;\n\n    mod test_level_1 {\n        pub use super::*;\n\n        #[test]\n        fn test() {\n            Struct.func();\n        }\n    }\n}\n```\n\nGives me this warning:\n\n```\n<anon>:13:9: 13:21 warning: unused import, #[warn(unused_imports)] on by default\n<anon>:13     use super::Trait;\n                  ^~~~~~~~~~~~\n```\n\nBut, removing that line gives me this error:\n\n```\n<anon>:20:20: 20:26 error: no method named `func` found for type `Struct` in the current scope\n<anon>:20             Struct.func();\n                             ^~~~~~\n<anon>:20:20: 20:26 help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:\n<anon>:20:20: 20:26 help: candidate #1: use `Trait`\nerror: aborting due to previous error\nplaypen: application terminated with error code 101\n```\n\nSwitching the code to use these `use` statements:\n\n``` rust\ntrait Trait {\n    fn func(&self);\n}\n\npub struct Struct;\n\nimpl Trait for Struct {\n    fn func(&self) { }\n}\n\n#[cfg(test)]\nmod test_level_0 {\n    use super::Trait;\n    pub use super::{Trait, Struct};\n\n    mod test_level_1 {\n        pub use super::*;\n\n        #[test]\n        fn test() {\n            Struct.func();\n        }\n    }\n}\n```\n\nGIves me:\n\n```\n<anon>:14:21: 14:26 error: `Trait` is private, and cannot be reexported [E0365]\n<anon>:14     pub use super::{Trait, Struct};\n                              ^~~~~\n<anon>:14:21: 14:26 help: see the detailed explanation for E0365\n<anon>:14:21: 14:26 note: Consider declaring module `Trait` as a `pub mod`\n<anon>:14     pub use super::{Trait, Struct};\n                              ^~~~~\n<anon>:14:21: 14:26 error: a trait named `Trait` has already been imported in this module [E0252]\n<anon>:14     pub use super::{Trait, Struct};\n                              ^~~~~\n<anon>:14:21: 14:26 help: see the detailed explanation for E0252\n<anon>:13:5: 13:22 note: previous import of `Trait` here\n<anon>:13     use super::Trait;\n              ^~~~~~~~~~~~~~~~~\nerror: aborting due to 2 previous errors\nplaypen: application terminated with error code 101\n```\n\nAnd my last attempt:\n\n``` rust\ntrait Trait {\n    fn func(&self);\n}\n\npub struct Struct;\n\nimpl Trait for Struct {\n    fn func(&self) { }\n}\n\n#[cfg(test)]\nmod test_level_0 {\n    use super::Trait;\n    pub use super::Struct;\n\n    mod test_level_1 {\n        pub use super::*;\n\n        #[test]\n        fn test() {\n            Struct.func();\n        }\n    }\n}\n```\n\nGives me:\n\n```\n<anon>:21:20: 21:26 error: no method named `func` found for type `Struct` in the current scope\n<anon>:21             Struct.func();\n                             ^~~~~~\n<anon>:21:20: 21:26 help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:\n<anon>:21:20: 21:26 help: candidate #1: use `Trait`\nerror: aborting due to previous error\nplaypen: application terminated with error code 101\n```\n\nSo it seems that `use`ing a private item followed by `pub use super::*` will export the private item publicly. I could be misunderstanding something here, but where I'm running into this, `test_level_1` is actually a plugin that does `pub use super::*`, so the warning version is the only one that will compile. In other words, I can't just write the mods as:\n\n``` rust\n#[cfg(test)]\nmod test_level_0 {\n    pub use super::*;\n\n    mod test_level_1 {\n        use Trait;\n        pub use super::*;\n\n        #[test]\n        fn test() {\n            Struct.func();\n        }\n    }\n}\n```\n", "closed_by": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/30159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/30159/timeline", "performed_via_github_app": null, "state_reason": "completed"}