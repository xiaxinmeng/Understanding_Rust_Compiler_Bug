{"url": "https://api.github.com/repos/rust-lang/rust/issues/92626", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92626/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92626/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92626/events", "html_url": "https://github.com/rust-lang/rust/issues/92626", "id": 1095733782, "node_id": "I_kwDOAAsO6M5BT5IW", "number": 92626, "title": "Inferring const parameters to wrapper type causes rustc to panic.", "user": {"login": "nzentzis", "id": 172775, "node_id": "MDQ6VXNlcjE3Mjc3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/172775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nzentzis", "html_url": "https://github.com/nzentzis", "followers_url": "https://api.github.com/users/nzentzis/followers", "following_url": "https://api.github.com/users/nzentzis/following{/other_user}", "gists_url": "https://api.github.com/users/nzentzis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nzentzis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nzentzis/subscriptions", "organizations_url": "https://api.github.com/users/nzentzis/orgs", "repos_url": "https://api.github.com/users/nzentzis/repos", "events_url": "https://api.github.com/users/nzentzis/events{/privacy}", "received_events_url": "https://api.github.com/users/nzentzis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-01-06T22:03:49Z", "updated_at": "2022-01-18T09:58:47Z", "closed_at": "2022-01-18T09:58:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\n[Playground link](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=09d2ecb597fe07adb5f6cc7e4cab1c67)\r\n\r\n```Rust\r\nstruct Test<T, const N: usize>([T; N]);\r\n\r\nimpl<T: Copy+Default, const N: usize> Default for Test<T, N> {\r\n    fn default() -> Self {\r\n        Self([T::default(); N])\r\n    }\r\n}\r\n\r\nimpl<T, const N: usize> std::ops::Deref for Test<T, N> {\r\n    type Target = [T; N];\r\n    \r\n    fn deref(&self) -> &[T; N] {\r\n        &self.0\r\n    }\r\n}\r\n\r\nimpl<T, const N: usize> std::ops::DerefMut for Test<T, N> {\r\n    fn deref_mut(&mut self) -> &mut [T; N] {\r\n        &mut self.0\r\n    }\r\n}\r\n\r\nfn test() -> Test<u64, 16> {\r\n    let mut out = Test::default();\r\n    for val in out.iter_mut() {\r\n        *val = 0u64;\r\n    }\r\n    \r\n    out\r\n}\r\n```\r\n\r\nRemoving the const generic parameter `N` or annotating `out` inside `test` with an explicit type (e.g. `let mut out: Test<u64, 16> = Test::default();`) avoids the compiler panic.\r\n\r\n### Meta\r\nReproduces on stable, beta, and the nightly version available on the Playground. Backtrace and error output information are copied from Playground output.\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0601]: `main` function not found in crate `playground`\r\n  --> src/main.rs:1:1\r\n   |\r\n1  | / struct Test<T, const N: usize>([T; N]);\r\n2  | |\r\n3  | | impl<T: Copy+Default, const N: usize> Default for Test<T, N> {\r\n4  | |     fn default() -> Self {\r\n...  |\r\n29 | |     out\r\n30 | | }\r\n   | |_^ consider adding a `main` function to `src/main.rs`\r\n\r\nthread 'rustc' panicked at 'index out of bounds: the len is 13 but the index is 16', /cargo/registry/src/github.com-1ecc6299db9ec823/ena-0.14.0/src/snapshot_vec.rs:199:10\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/f1ce0e6a00593493a12e0e3662119786c761f375/library/std/src/panicking.rs:498:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/f1ce0e6a00593493a12e0e3662119786c761f375/library/core/src/panicking.rs:107:14\r\n   2: core::panicking::panic_bounds_check\r\n             at /rustc/f1ce0e6a00593493a12e0e3662119786c761f375/library/core/src/panicking.rs:75:5\r\n   3: <rustc_infer::infer::equate::Equate as rustc_middle::ty::relate::TypeRelation>::relate::<&rustc_middle::ty::TyS>\r\n   4: rustc_middle::ty::relate::super_relate_tys::<rustc_infer::infer::equate::Equate>\r\n   5: <rustc_infer::infer::equate::Equate as rustc_middle::ty::relate::TypeRelation>::relate::<&rustc_middle::ty::TyS>\r\n   6: <rustc_infer::infer::sub::Sub as rustc_middle::ty::relate::TypeRelation>::relate_with_variance::<&rustc_middle::ty::TyS>\r\n   7: rustc_middle::ty::relate::super_relate_tys::<rustc_infer::infer::sub::Sub>\r\n   8: <rustc_infer::infer::sub::Sub as rustc_middle::ty::relate::TypeRelation>::tys\r\n   9: <rustc_infer::infer::at::At>::sup::<&rustc_middle::ty::TyS>\r\n  10: <rustc_typeck::check::method::confirm::ConfirmContext>::confirm\r\n  11: <rustc_typeck::check::fn_ctxt::FnCtxt>::lookup_method\r\n  12: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  13: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  14: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  15: <rustc_typeck::check::fn_ctxt::FnCtxt>::confirm_builtin_call\r\n  16: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n  17: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  18: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  19: <rustc_typeck::check::fn_ctxt::FnCtxt>::demand_scrutinee_type\r\n  20: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_match\r\n  21: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  22: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  23: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  24: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  25: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  26: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  27: rustc_typeck::check::check::check_fn\r\n  28: <rustc_infer::infer::InferCtxtBuilder>::enter::<&rustc_middle::ty::context::TypeckResults, <rustc_typeck::check::inherited::InheritedBuilder>::enter<rustc_typeck::check::typeck_with_fallback<rustc_typeck::check::typeck::{closure#0}>::{closure#1}, &rustc_middle::ty::context::TypeckResults>::{closure#0}>\r\n  29: rustc_typeck::check::typeck\r\n  30: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>>\r\n  31: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  32: <rustc_middle::hir::map::Map>::par_body_owners::<rustc_typeck::check::typeck_item_bodies::{closure#0}>\r\n  33: rustc_typeck::check::typeck_item_bodies\r\n  34: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), ()>>\r\n  35: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::typeck_item_bodies, rustc_query_impl::plumbing::QueryCtxt>\r\n  36: <rustc_session::session::Session>::time::<(), rustc_typeck::check_crate::{closure#7}>\r\n  37: rustc_typeck::check_crate\r\n  38: rustc_interface::passes::analysis\r\n  39: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorReported>>>\r\n  40: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  41: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorReported>>\r\n  42: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  43: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>\r\n  44: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.59.0-nightly (f1ce0e6a0 2022-01-05) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `test`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nFor more information about this error, try `rustc --explain E0601`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'index out of bounds: the len is 13 but the index is 16', /cargo/registry/src/github.com-1ecc6299db9ec823/ena-0.14.0/src/snapshot_vec.rs:199:10\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/f1ce0e6a00593493a12e0e3662119786c761f375/library/std/src/panicking.rs:498:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/f1ce0e6a00593493a12e0e3662119786c761f375/library/core/src/panicking.rs:107:14\r\n   2: core::panicking::panic_bounds_check\r\n             at /rustc/f1ce0e6a00593493a12e0e3662119786c761f375/library/core/src/panicking.rs:75:5\r\n   3: <rustc_infer::infer::equate::Equate as rustc_middle::ty::relate::TypeRelation>::relate::<&rustc_middle::ty::TyS>\r\n   4: rustc_middle::ty::relate::super_relate_tys::<rustc_infer::infer::equate::Equate>\r\n   5: <rustc_infer::infer::equate::Equate as rustc_middle::ty::relate::TypeRelation>::relate::<&rustc_middle::ty::TyS>\r\n   6: <rustc_infer::infer::sub::Sub as rustc_middle::ty::relate::TypeRelation>::relate_with_variance::<&rustc_middle::ty::TyS>\r\n   7: rustc_middle::ty::relate::super_relate_tys::<rustc_infer::infer::sub::Sub>\r\n   8: <rustc_infer::infer::sub::Sub as rustc_middle::ty::relate::TypeRelation>::tys\r\n   9: <rustc_infer::infer::at::At>::sup::<&rustc_middle::ty::TyS>\r\n  10: <rustc_typeck::check::method::confirm::ConfirmContext>::confirm\r\n  11: <rustc_typeck::check::fn_ctxt::FnCtxt>::lookup_method\r\n  12: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  13: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  14: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  15: <rustc_typeck::check::fn_ctxt::FnCtxt>::confirm_builtin_call\r\n  16: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n  17: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  18: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  19: <rustc_typeck::check::fn_ctxt::FnCtxt>::demand_scrutinee_type\r\n  20: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_match\r\n  21: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  22: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  23: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  24: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  25: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  26: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  27: rustc_typeck::check::check::check_fn\r\n  28: <rustc_infer::infer::InferCtxtBuilder>::enter::<&rustc_middle::ty::context::TypeckResults, <rustc_typeck::check::inherited::InheritedBuilder>::enter<rustc_typeck::check::typeck_with_fallback<rustc_typeck::check::typeck::{closure#0}>::{closure#1}, &rustc_middle::ty::context::TypeckResults>::{closure#0}>\r\n  29: rustc_typeck::check::typeck\r\n  30: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>>\r\n  31: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  32: <rustc_middle::hir::map::Map>::par_body_owners::<rustc_typeck::check::typeck_item_bodies::{closure#0}>\r\n  33: rustc_typeck::check::typeck_item_bodies\r\n  34: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), ()>>\r\n  35: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::typeck_item_bodies, rustc_query_impl::plumbing::QueryCtxt>\r\n  36: <rustc_session::session::Session>::time::<(), rustc_typeck::check_crate::{closure#7}>\r\n  37: rustc_typeck::check_crate\r\n  38: rustc_interface::passes::analysis\r\n  39: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorReported>>>\r\n  40: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  41: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorReported>>\r\n  42: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  43: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>\r\n  44: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"compiler-errors\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92626/timeline", "performed_via_github_app": null, "state_reason": "completed"}