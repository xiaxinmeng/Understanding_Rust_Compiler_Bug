{"url": "https://api.github.com/repos/rust-lang/rust/issues/65712", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65712/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65712/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65712/events", "html_url": "https://github.com/rust-lang/rust/issues/65712", "id": 510989543, "node_id": "MDU6SXNzdWU1MTA5ODk1NDM=", "number": 65712, "title": "Specific error message when trying to exhaustively match on pointer types", "user": {"login": "SergioBenitez", "id": 1480321, "node_id": "MDQ6VXNlcjE0ODAzMjE=", "avatar_url": "https://avatars.githubusercontent.com/u/1480321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SergioBenitez", "html_url": "https://github.com/SergioBenitez", "followers_url": "https://api.github.com/users/SergioBenitez/followers", "following_url": "https://api.github.com/users/SergioBenitez/following{/other_user}", "gists_url": "https://api.github.com/users/SergioBenitez/gists{/gist_id}", "starred_url": "https://api.github.com/users/SergioBenitez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SergioBenitez/subscriptions", "organizations_url": "https://api.github.com/users/SergioBenitez/orgs", "repos_url": "https://api.github.com/users/SergioBenitez/repos", "events_url": "https://api.github.com/users/SergioBenitez/events{/privacy}", "received_events_url": "https://api.github.com/users/SergioBenitez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-22T23:46:36Z", "updated_at": "2020-11-19T18:49:59Z", "closed_at": "2020-11-19T18:49:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As the title suggests, exhaustive pattern checking for `usize` and `isize` fails when checks for similar patterns for `{i,u}{n}` succeed. Consider the following program ([playground link]):\r\n\r\n```rust\r\n// Okay.\r\nfn g(len: u8) {\r\n    match len {\r\n        0 => { }\r\n        1 => { }\r\n        2 => { }\r\n        3 ..= std::u8::MAX => { }\r\n    }\r\n}\r\n\r\n// Fails.\r\nfn f(len: usize) {\r\n    match len {\r\n        0 => {},\r\n        1 => {},\r\n        2 => {},\r\n        3 ..= std::usize::MAX => {},\r\n    }\r\n}\r\n\r\n// Okay.\r\nfn j(len: i32) {\r\n    match len {\r\n        std::i32::MIN ..= -1 => {},\r\n        0 => { }\r\n        1 => { }\r\n        2 => { }\r\n        3 ..= std::i32::MAX => { }\r\n    }\r\n}\r\n\r\n// Fails.\r\nfn h(len: isize) {\r\n    match len {\r\n        std::isize::MIN ..= -1 => {},\r\n        0 => { }\r\n        1 => { }\r\n        2 => { }\r\n        3 ..= std::isize::MAX => { }\r\n    }\r\n}\r\n```\r\n\r\nWhile checking succeeds for `g` (`u8`) and `j` (`i32`), it fails for `f` (`usize`) and `h` (`isize`).\r\n\r\ncc @varkor\r\n\r\n[playground link]: https://play.rust-lang.org/?version=nightly&mode=release&edition=2018&gist=4d8f55f11f9d173c114269bd4c3f6653\r\n\r\n---\r\n\r\nThis is intentional (exhaustive matching on pointers is tracked at https://github.com/rust-lang/rust/issues/56354), but where we _would_ exhaustively match, then we could suggest using `#![feature(precise_pointer_size_matching)]` and explain why the pattern wasn't exhaustively matched.", "closed_by": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65712/timeline", "performed_via_github_app": null, "state_reason": "completed"}