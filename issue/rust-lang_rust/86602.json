{"url": "https://api.github.com/repos/rust-lang/rust/issues/86602", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86602/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86602/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86602/events", "html_url": "https://github.com/rust-lang/rust/issues/86602", "id": 929405711, "node_id": "MDU6SXNzdWU5Mjk0MDU3MTE=", "number": 86602, "title": "Are the `#![feature(layout_for_ptr)]` functions sound to call on invalid data pointers?", "user": {"login": "repnop", "id": 24203105, "node_id": "MDQ6VXNlcjI0MjAzMTA1", "avatar_url": "https://avatars.githubusercontent.com/u/24203105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/repnop", "html_url": "https://github.com/repnop", "followers_url": "https://api.github.com/users/repnop/followers", "following_url": "https://api.github.com/users/repnop/following{/other_user}", "gists_url": "https://api.github.com/users/repnop/gists{/gist_id}", "starred_url": "https://api.github.com/users/repnop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/repnop/subscriptions", "organizations_url": "https://api.github.com/users/repnop/orgs", "repos_url": "https://api.github.com/users/repnop/repos", "events_url": "https://api.github.com/users/repnop/events{/privacy}", "received_events_url": "https://api.github.com/users/repnop/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}, {"id": 2242906716, "node_id": "MDU6TGFiZWwyMjQyOTA2NzE2", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-raw-pointers", "name": "A-raw-pointers", "color": "f7e101", "default": false, "description": "Area: raw pointers, MaybeUninit, NonNull"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-06-24T16:23:40Z", "updated_at": "2021-06-26T10:47:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Reading the documentation for the [`#![feature(layout_for_ptr)]`](https://github.com/rust-lang/rust/issues/69835) functions, it doesn't mention if it accepts invalid data pointer values (e.g. a pointer created with `core::ptr::null()`), but seems to suggest that it does:\r\n> If `T` is `Sized`, this function is always safe to call.\r\n\r\nbut there's a comment mentioning that the pointer must be valid inside the functions, e.g.:\r\nhttps://github.com/rust-lang/rust/blob/456a03227e3c81a51631f87ec80cac301e5fa6d7/library/core/src/mem/mod.rs#L375-L378\r\n\r\nI would think that the answer is yes since its operating on the metadata of the pointer and not the pointer value itself (and with my limited testing, this seems like the current behavior). However, in either case I think its worth explicitly mentioning the validity of the pointer in the documentation for the functions.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86602/timeline", "performed_via_github_app": null, "state_reason": null}