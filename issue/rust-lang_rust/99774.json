{"url": "https://api.github.com/repos/rust-lang/rust/issues/99774", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99774/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99774/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99774/events", "html_url": "https://github.com/rust-lang/rust/issues/99774", "id": 1318658420, "node_id": "I_kwDOAAsO6M5OmSF0", "number": 99774, "title": "Found unstable fingerprints for mir_borrowck, probably related to async code", "user": {"login": "Mingun", "id": 450131, "node_id": "MDQ6VXNlcjQ1MDEzMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/450131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mingun", "html_url": "https://github.com/Mingun", "followers_url": "https://api.github.com/users/Mingun/followers", "following_url": "https://api.github.com/users/Mingun/following{/other_user}", "gists_url": "https://api.github.com/users/Mingun/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mingun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mingun/subscriptions", "organizations_url": "https://api.github.com/users/Mingun/orgs", "repos_url": "https://api.github.com/users/Mingun/repos", "events_url": "https://api.github.com/users/Mingun/events{/privacy}", "received_events_url": "https://api.github.com/users/Mingun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-07-26T19:21:22Z", "updated_at": "2022-07-26T21:48:09Z", "closed_at": "2022-07-26T21:48:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nUnfortunately it is not reproduced anymore, so I cannot create a minimal example. The problem was reproduced in that state. Before that I've doing a rebase and compiled the 2 previous commits using the same command.\r\n\r\nThe bug happened on this commit:\r\nhttps://github.com/Mingun/quick-xml/tree/rustc-panic\r\n\r\nCheckout the branch and run in the root repo directory:\r\n```console\r\ncargo test --all-features\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\nI use stable compiler:\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.61.0 (fe5b13d68 2022-05-18)\r\nbinary: rustc\r\ncommit-hash: fe5b13d681f25ee6474be29d748c65adcd91f69e\r\ncommit-date: 2022-05-18\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.61.0\r\nLLVM version: 14.0.0\r\n```\r\n\r\nI've also tried\r\n```\r\ncargo +nightly test --all-features\r\n```\r\nand (after small compilation fix)\r\n```\r\ncargo test --features async-tokio\r\n```\r\nas suggested by issue template, but problem did not reproduced. Also, after these commands it is no more reproduced by the original command. The compilation finishes successfully, although during panic it seems that borrow checker tried to complain about something.\r\n\r\nBefore the problem is arised, I've compiled similarly the same code (while I've worked on a PR for quick-xml) without problems. So this bug happened only once (but stable until I've run `cargo test` which seems to rewrite the file cache).\r\n\r\n### Error output\r\n\r\nThe full command output:\r\n```\r\nPS D:\\Projects\\quick-xml> cargo test --all-features\r\n   Compiling quick-xml v0.23.0 (D:\\Projects\\quick-xml)\r\nerror: lifetime may not live long enough\r\n   --> src\\reader\\mod.rs:141:39\r\n    |\r\n137 |               &mut self,\r\n    |               - let's call the lifetime of this reference `'1`\r\n...\r\n141 |           ) -> Result<Option<&'b [u8]>> {\r\n    |  _______________________________________^\r\n142 | |             // search byte must be within the ascii range\r\n143 | |             debug_assert!(byte.is_ascii());\r\n144 | |\r\n...   |\r\n181 | |             }\r\n182 | |         }\r\n    | |_________^ associated function was supposed to return data with lifetime `'b` but it is returning data with lifetime `'1`\r\n    |\r\n   ::: src\\reader\\async_reader.rs:21:27\r\n    |\r\n21  |       impl_buffered_source!('b, reader, async, await);\r\n    |       -----------------------------------------------\r\n    |       |                     |\r\n    |       |                     lifetime `'b` defined here\r\n    |       in this macro invocation\r\n    |\r\n    = note: this error originates in the macro `impl_buffered_source` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: lifetime may not live long enough\r\n   --> src\\reader\\mod.rs:180:17\r\n    |\r\n137 |             &mut self,\r\n    |             - let's call the lifetime of this reference `'1`\r\n...\r\n180 |                 Ok(Some(&buf[start..]))\r\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^ associated function was supposed to return data with lifetime `'1` but it is returning data with lifetime `'b`\r\n    |\r\n   ::: src\\reader\\async_reader.rs:21:27\r\n    |\r\n21  |     impl_buffered_source!('b, reader, async, await);\r\n    |     -----------------------------------------------\r\n    |     |                     |\r\n    |     |                     lifetime `'b` defined here\r\n    |     in this macro invocation\r\n    |\r\n    = note: this error originates in the macro `impl_buffered_source` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: internal compiler error: encountered incremental compilation error with mir_borrowck(quick_xml[bff6]::reader::async_reader::{impl#0}::read_bytes_until)\r\n  |\r\n  = help: This is a known issue with the compiler. Run `cargo clean -p quick_xml` or `cargo clean` to allow your project to compile\r\n  = note: Please follow the instructions below to create a bug report with the provided information\r\n  = note: See <https://github.com/rust-lang/rust/issues/84970> for more information\r\n\r\nthread 'rustc' panicked at 'Found unstable fingerprints for mir_borrowck(quick_xml[bff6]::reader::async_reader::{impl#0}::read_bytes_until): BorrowCheckResult { concrete_opaque_types: VecMap([(OpaqueTypeKey { def_id: DefId(0:6217 ~ quick_xml[bff6]::reader::async_reader::{impl#0}::read_bytes_until::{opaque#0}), substs: [R, ReFree(DefId(0:6215 ~ quick_xml[bff6]::reader::async_reader::{impl#0}::read_bytes_until), BrNamed(DefId(0:8720 ~ quick_xml[bff6]::reader::async_reader::{impl#0}::read_bytes_until::'_), '_)), ReFree(DefId(0:6215 ~ quick_xml[bff6]::reader::async_reader::{impl#0}::read_bytes_until), BrNamed(DefId(0:8720 ~ quick_xml[bff6]::reader::async_reader::{impl#0}::read_bytes_until::'_), '_)), ReFree(DefId(0:6215 ~ quick_xml[bff6]::reader::async_reader::{impl#0}::read_bytes_until), BrNamed(DefId(0:8721 ~ quick_xml[bff6]::reader::async_reader::{impl#0}::read_bytes_until::'_#1), '_))] }, OpaqueHiddenType { span: src\\reader\\mod.rs:141:39: 182:10 (#4938), ty: [type error] })]), closure_requirements: None, used_mut_upvars: [], tainted_by_errors: Some(ErrorGuaranteed(())) }', compiler\\rustc_query_system\\src\\query\\plumbing.rs:626:9\r\nstack backtrace:\r\n   0:     0x7ffadc02988f - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h50aa8caf753a2b27\r\n   1:     0x7ffadc054c3a - core::fmt::write::h838fc71521d9a769\r\n   2:     0x7ffadc01c709 - <std::io::IoSliceMut as core::fmt::Debug>::fmt::h36f954dfa88567a7\r\n   3:     0x7ffadc02ceab - std::panicking::default_hook::h14f77031689d5a65\r\n   4:     0x7ffadc02ca9e - std::panicking::default_hook::h14f77031689d5a65\r\n   5:     0x7ffac8f02ee6 - rustc_driver[644f353906beda0e]::pretty::print_after_hir_lowering                                                                 \r\n   6:     0x7ffadc02d78a - std::panicking::rust_panic_with_hook::h093296cdc6b43259\r\n   7:     0x7ffadc02d4dd - <std::panicking::begin_panic_handler::StrPanicPayload as core::panic::BoxMeUp>::get::h87de4eb99e2d660b\r\n   8:     0x7ffadc02a197 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h50aa8caf753a2b27\r\n   9:     0x7ffadc02d1b9 - rust_begin_unwind\r\n  10:     0x7ffadc092d15 - core::panicking::panic_fmt::h9a20e90cefbba781\r\n  11:     0x7ffacdb417e0 - rustc_query_system[36f3c4afb232c86b]::query::plumbing::incremental_verify_ich_cold\r\n  12:     0x7ffacc8def3e - <rustc_query_impl[5f7022dda011ac8e]::queries::global_backend_features as rustc_query_system[36f3c4afb232c86b]::query::config::QueryDescription<rustc_query_impl[5f7022dda011ac8e]::plumbing::QueryCtxt>>::describe\r\n  13:     0x7ffacc9030a5 - <rustc_query_impl[5f7022dda011ac8e]::queries::global_backend_features as rustc_query_system[36f3c4afb232c86b]::query::config::QueryDescription<rustc_query_impl[5f7022dda011ac8e]::plumbing::QueryCtxt>>::describe\r\n  14:     0x7ffacc83a819 - <rustc_query_impl[5f7022dda011ac8e]::queries::global_backend_features as rustc_query_system[36f3c4afb232c86b]::query::config::QueryDescription<rustc_query_impl[5f7022dda011ac8e]::plumbing::QueryCtxt>>::describe\r\n  15:     0x7ffacc934248 - <rustc_query_impl[5f7022dda011ac8e]::queries::global_backend_features as rustc_query_system[36f3c4afb232c86b]::query::config::QueryDescription<rustc_query_impl[5f7022dda011ac8e]::plumbing::QueryCtxt>>::describe\r\n  16:     0x7ffacd56a706 - <rustc_middle[f8c5bc87ecf9dc9e]::ty::context::TyCtxt>::mir_borrowck_opt_const_arg\r\n  17:     0x7ffacb7097c0 - <rustc_mir_transform[2dafa68c8673e644]::mir_keys::GatherCtors as rustc_hir[ff973f7ee110f744]::intravisit::Visitor>::visit_variant_data\r\n  18:     0x7ffacc644263 - <rustc_query_impl[5f7022dda011ac8e]::on_disk_cache::EncodedSourceFileId as core[14ebc1417b592300]::fmt::Debug>::fmt\r\n  19:     0x7ffacc6ff614 - <rustc_query_impl[5f7022dda011ac8e]::queries::global_backend_features as rustc_query_system[36f3c4afb232c86b]::query::config::QueryDescription<rustc_query_impl[5f7022dda011ac8e]::plumbing::QueryCtxt>>::describe\r\n  20:     0x7ffacc808ffe - <rustc_query_impl[5f7022dda011ac8e]::queries::global_backend_features as rustc_query_system[36f3c4afb232c86b]::query::config::QueryDescription<rustc_query_impl[5f7022dda011ac8e]::plumbing::QueryCtxt>>::describe\r\n  21:     0x7ffacc96ec41 - <rustc_query_impl[5f7022dda011ac8e]::queries::global_backend_features as rustc_query_system[36f3c4afb232c86b]::query::config::QueryDescription<rustc_query_impl[5f7022dda011ac8e]::plumbing::QueryCtxt>>::describe\r\n  22:     0x7ffacc622931 - <rustc_query_impl[5f7022dda011ac8e]::Queries as rustc_middle[f8c5bc87ecf9dc9e]::ty::query::QueryEngine>::try_mark_green\r\n  23:     0x7ffacb70b28f - <rustc_mir_transform[2dafa68c8673e644]::mir_keys::GatherCtors as rustc_hir[ff973f7ee110f744]::intravisit::Visitor>::visit_variant_data\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\nI've rerun command with the environment variable set:\r\n\r\n```\r\nPS D:\\Projects\\quick-xml> $env:RUST_BACKTRACE=1\r\nPS D:\\Projects\\quick-xml> cargo test --all-features\r\n   Compiling quick-xml v0.23.0 (D:\\Projects\\quick-xml)\r\nerror: lifetime may not live long enough                                                                                                                    \r\n   --> src\\reader\\mod.rs:141:39\r\n    |\r\n137 |               &mut self,\r\n    |               - let's call the lifetime of this reference `'1`\r\n...\r\n141 |           ) -> Result<Option<&'b [u8]>> {\r\n    |  _______________________________________^\r\n142 | |             // search byte must be within the ascii range\r\n143 | |             debug_assert!(byte.is_ascii());\r\n144 | |\r\n...   |\r\n181 | |             }\r\n182 | |         }\r\n    | |_________^ associated function was supposed to return data with lifetime `'b` but it is returning data with lifetime `'1`\r\n    |\r\n   ::: src\\reader\\async_reader.rs:21:27\r\n    |\r\n21  |       impl_buffered_source!('b, reader, async, await);\r\n    |       -----------------------------------------------\r\n    |       |                     |\r\n    |       |                     lifetime `'b` defined here\r\n    |       in this macro invocation\r\n    |\r\n    = note: this error originates in the macro `impl_buffered_source` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: lifetime may not live long enough\r\n   --> src\\reader\\mod.rs:180:17\r\n    |\r\n137 |             &mut self,\r\n    |             - let's call the lifetime of this reference `'1`\r\n...\r\n180 |                 Ok(Some(&buf[start..]))\r\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^ associated function was supposed to return data with lifetime `'1` but it is returning data with lifetime `'b`\r\n    |\r\n   ::: src\\reader\\async_reader.rs:21:27\r\n    |\r\n21  |     impl_buffered_source!('b, reader, async, await);\r\n    |     -----------------------------------------------\r\n    |     |                     |\r\n    |     |                     lifetime `'b` defined here\r\n    |     in this macro invocation\r\n    |\r\n    = note: this error originates in the macro `impl_buffered_source` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: internal compiler error: encountered incremental compilation error with mir_borrowck(quick_xml[bff6]::reader::async_reader::{impl#0}::read_bytes_until)\r\n  |\r\n  = help: This is a known issue with the compiler. Run `cargo clean -p quick_xml` or `cargo clean` to allow your project to compile\r\n  = note: Please follow the instructions below to create a bug report with the provided information\r\n  = note: See <https://github.com/rust-lang/rust/issues/84970> for more information\r\n\r\nthread 'rustc' panicked at 'Found unstable fingerprints for mir_borrowck(quick_xml[bff6]::reader::async_reader::{impl#0}::read_bytes_until): BorrowCheckResult { concrete_opaque_types: VecMap([(OpaqueTypeKey { def_id: DefId(0:6217 ~ quick_xml[bff6]::reader::async_reader::{impl#0}::read_bytes_until::{opaque#0}), substs: [R, ReFree(DefId(0:6215 ~ quick_xml[bff6]::reader::async_reader::{impl#0}::read_bytes_until), BrNamed(DefId(0:8720 ~ quick_xml[bff6]::reader::async_reader::{impl#0}::read_bytes_until::'_), '_)), ReFree(DefId(0:6215 ~ quick_xml[bff6]::reader::async_reader::{impl#0}::read_bytes_until), BrNamed(DefId(0:8720 ~ quick_xml[bff6]::reader::async_reader::{impl#0}::read_bytes_until::'_), '_)), ReFree(DefId(0:6215 ~ quick_xml[bff6]::reader::async_reader::{impl#0}::read_bytes_until), BrNamed(DefId(0:8721 ~ quick_xml[bff6]::reader::async_reader::{impl#0}::read_bytes_until::'_#1), '_))] }, OpaqueHiddenType { span: src\\reader\\mod.rs:141:39: 182:10 (#4938), ty: [type error] })]), closure_requirements: None, used_mut_upvars: [], tainted_by_errors: Some(ErrorGuaranteed(())) }', compiler\\rustc_query_system\\src\\query\\plumbing.rs:626:9\r\nstack backtrace:\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.                                                                     \r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.61.0 (fe5b13d68 2022-05-18) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [mir_borrowck] borrow-checking `reader::async_reader::<impl at src\\reader\\async_reader.rs:20:1: 22:2>::read_bytes_until`\r\n#1 [mir_drops_elaborated_and_const_checked] elaborating drops for `reader::async_reader::<impl at src\\reader\\async_reader.rs:20:1: 22:2>::read_bytes_until` \r\n#2 [optimized_mir] optimizing MIR for `reader::async_reader::<impl at src\\reader\\async_reader.rs:20:1: 22:2>::read_bytes_until`\r\n#3 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: could not compile `quick-xml` due to 3 previous errors                                                                                               \r\nwarning: build failed, waiting for other jobs to finish...\r\nPS D:\\Projects\\quick-xml>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99774/timeline", "performed_via_github_app": null, "state_reason": "completed"}