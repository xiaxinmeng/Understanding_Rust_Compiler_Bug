{"url": "https://api.github.com/repos/rust-lang/rust/issues/55842", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55842/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55842/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55842/events", "html_url": "https://github.com/rust-lang/rust/issues/55842", "id": 379403964, "node_id": "MDU6SXNzdWUzNzk0MDM5NjQ=", "number": 55842, "title": "Bump minimum LLVM version to LLVM 6", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 34, "created_at": "2018-11-10T08:36:45Z", "updated_at": "2018-12-18T02:02:11Z", "closed_at": "2018-12-18T02:02:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It's that time of the year again - almost 6 months since we bumped the minimum supported system LLVM to version 5 (#51899). Now that emscripten has been updated to LVM 6.0.1  (#55626 - thank you @nikic ) I wanted to bump the minimum supported version to 6. \r\n\r\nHowever, there has been some controversy about the minimum supported LLVM version lagging too much behind the bundled one, resulting in a lot of frustration for both contributors, users, and packagers (https://internals.rust-lang.org/t/rust-vs-llvm/8604).\r\n\r\nSupporting older versions is particularly problematic because:\r\n\r\n* we \"take our time\" upstreaming our patches, which are often required for things to work properly\r\n* rustc **at best** just `bugs!` on older LLVM versions when using some language features, at worst it silently compiles with incorrect codegen - distro packagers don't see tests failing because we/them silence them.\r\n\r\nI don't know how aware are distro packagers of these issues. I know that @cuviper and @infinity0 are aware of them, e.g., when packaging for a distro often the testsuite has to \"pass\" but it only passes with system LLVMs because we basically silence all tests that do not pass. \r\n\r\nThat is, currently, even though we let Rust build silently with LLVM 5, many parts of the language / compiler are just unusable (SIMD, wasm, ...). This is currently also the case for LLVM 6, and even LLVM 7!\r\n\r\nSo I think it is worth to reconsider our stance on this. I personally think that we should come up with an enforceable policy about the minimum system LLVM version that we support, and that the policy has to be better than \"the last 3 LLVM releases\" to add any value. If we were to continuously support the last released LLVM version (version 7 right now), we could, slowly:\r\n\r\n* try to get most of the tests working properly on the supported system LLVM,\r\n* try to upstream most / all of our patches, provide workarounds in rustc for those that cannot be upstreamed.\r\n\r\nCurrently, because we support the last 4 LLVM releases, an upstreamed patch lets us remove code in rustc in ~2 - 2.5 years. If we were to only support the last LLVM version, that would be reduced to 6 months, making it significantly more profitable to upstream our patches. It might also make sense to keep workarounds around to keep things going if we know these only have to live for 6 months. \r\n\r\nAlso, it is unclear to me what's the value of shipping new Rust versions on distros using a 2 year old LLVM. Couldn't these distros just ship an older Rust version that's known to work with the distros LLVM version ? (by known I mean, where most tests pass instead of being silenced).\r\n\r\nSo what I'd like to know is:\r\n\r\n* is it possible at all for stakeholders to move to LLVM 7 now ? If not, why not? \r\n* what are the pros / cons of moving to LLVM now ? \r\n* do you think that a policy of supporting the last LLVM version (7 right now) is feasible? \r\n\r\nI think that moving to something like that would be first step. And once everything is working release-wise for everybody, we can consider strengthening this policy to try to keep all / most tests running for one full LLVM release, and to at least encourage workarounds in rustc for the last LLVM version.\r\n\r\nSo what do you think? In particular, what do distro packagers thing? I know that @cuviper mentioned that Fedora 28 still only has LLVM6 and that it is supported till June 2019, but by ~February 2019 Rust will be targeting LLVM9 already which is released in August 2019.\r\n\r\n---\r\n\r\ncc @infinity0 @cuviper @Keruspe @glandium @alexcrichton ", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55842/reactions", "total_count": 8, "+1": 4, "-1": 1, "laugh": 0, "hooray": 0, "confused": 0, "heart": 3, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55842/timeline", "performed_via_github_app": null, "state_reason": "completed"}