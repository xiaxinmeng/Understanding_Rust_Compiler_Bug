{"url": "https://api.github.com/repos/rust-lang/rust/issues/40032", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40032/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40032/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40032/events", "html_url": "https://github.com/rust-lang/rust/issues/40032", "id": 209469386, "node_id": "MDU6SXNzdWUyMDk0NjkzODY=", "number": 40032, "title": "Need a way to close standard output", "user": {"login": "zackw", "id": 325899, "node_id": "MDQ6VXNlcjMyNTg5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/325899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackw", "html_url": "https://github.com/zackw", "followers_url": "https://api.github.com/users/zackw/followers", "following_url": "https://api.github.com/users/zackw/following{/other_user}", "gists_url": "https://api.github.com/users/zackw/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackw/subscriptions", "organizations_url": "https://api.github.com/users/zackw/orgs", "repos_url": "https://api.github.com/users/zackw/repos", "events_url": "https://api.github.com/users/zackw/events{/privacy}", "received_events_url": "https://api.github.com/users/zackw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 657353545, "node_id": "MDU6TGFiZWw2NTczNTM1NDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-accepted", "name": "C-feature-accepted", "color": "f5f1fd", "default": false, "description": "Category: A feature request that has been accepted pending implementation."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-22T14:27:38Z", "updated_at": "2021-11-25T08:40:39Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It is sometimes appropriate for a program to close its standard output stream long before it's done running.  For instance, I have a [C program](https://github.com/zackw/tbbscraper/blob/master/collector/scripts/tunnel-ns.c) that sets up some system-wide state, waits for its parent to be done using that setup, and then tears it down again.  (It's a separate program from the parent because it has to be setuid.)  It notifies the parent that it's done setting up by closing its stdout, which is expected to be a pipe.\r\n\r\nYou _can_ do this in Rust, but only by going behind the stdlib's back and calling `libc::close(1)`.  I would like there to be an official way to do this, without going behind the stdlib's back.  A concrete proposal: `Stdout` (and `Stderr`) add a `close` method.  These flush buffered output, close the underlying OS-level file descriptor, and then immediately reopen it on `/dev/null`, taking care to ensure that the well-known fd number is retained.  It remains OK to use `io::stdout()` after calling `close` on it.\r\n\r\n(Reopening the OS-level file descriptor on `/dev/null` is to accommodate third-party libraries that may assume it is always safe to write to file descriptors 1 and/or 2, and/or that the `open()` primitive will never return descriptors numbered 0, 1, or 2.)\r\n\r\n(Windows doesn't exactly have \"file descriptors\" but it _does_ have the concept of \"standard handles\" and there is a 1:1 mapping from the Unixy terms I used above to Windows equivalents.)\r\n\r\n(For consistency, the internal method for \"replacing `Stdout` and `Stderr` with an arbitrary instance of `Write`\" (mentioned in #40007) should also perform this `close` operation.)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40032/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40032/timeline", "performed_via_github_app": null, "state_reason": null}