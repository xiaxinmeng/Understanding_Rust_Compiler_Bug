{"url": "https://api.github.com/repos/rust-lang/rust/issues/49777", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49777/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49777/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49777/events", "html_url": "https://github.com/rust-lang/rust/issues/49777", "id": 312287842, "node_id": "MDU6SXNzdWUzMTIyODc4NDI=", "number": 49777, "title": "miri: invalid enum discriminant value read", "user": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-04-08T09:06:01Z", "updated_at": "2018-04-24T20:59:27Z", "closed_at": "2018-04-24T20:59:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running it with priroda, the value for which the discriminant is read is `0xff`\r\n\r\n```\r\n---- [ui] run-pass/issue-15523-big.rs stdout ----\r\n\tnormalized stderr:\r\nerror[E0080]: constant evaluation error\r\n  --> $DIR/issue-15523-big.rs:17:21\r\n   |\r\n17 | #[derive(PartialEq, PartialOrd)]\r\n   |                     ^^^^^^^^^^ invalid enum discriminant value read\r\n   |\r\nnote: inside call to `<Eu64 as std::cmp::PartialOrd>::partial_cmp`\r\n  --> /home/bjorn/Documenten/rust2/src/libcore/cmp.rs:647:15\r\n   |\r\n647|         match self.partial_cmp(other) {\r\n   |               ^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: inside call to `<Eu64 as std::cmp::PartialOrd>::lt`\r\n  --> $DIR/issue-15523-big.rs:37:13\r\n   |\r\n37 |     assert!(Eu64::Pos2 < Eu64::PosMax);\r\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: inside call to `main`\r\n  --> /home/bjorn/Documenten/rust2/src/libstd/rt.rs:74:34\r\n   |\r\n74 |     lang_start_internal(&move || main().report(), argc, argv)\r\n   |                                  ^^^^^^\r\nnote: inside call to `closure`\r\n  --> /home/bjorn/Documenten/rust2/src/libstd/rt.rs:59:75\r\n   |\r\n59 |             ::sys_common::backtrace::__rust_begin_short_backtrace(move || main())\r\n   |                                                                           ^^^^^^\r\nnote: inside call to `closure`\r\n  --> /home/bjorn/Documenten/rust2/src/libstd/sys_common/backtrace.rs:136:5\r\n   |\r\n136|     f()\r\n   |     ^^^\r\nnote: inside call to `std::sys_common::backtrace::__rust_begin_short_backtrace::<[closure@DefId(1/1:1802 ~ std[a0b6]::rt[0]::lang_start_internal[0]::{{closure}}[0]::{{closure}}[0]) 0:&std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32>`\r\n  --> /home/bjorn/Documenten/rust2/src/libstd/rt.rs:59:13\r\n   |\r\n59 |             ::sys_common::backtrace::__rust_begin_short_backtrace(move || main())\r\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: inside call to `closure`\r\n  --> /home/bjorn/Documenten/rust2/src/libstd/panicking.rs:306:40\r\n   |\r\n306|             ptr::write(&mut (*data).r, f());\r\n   |                                        ^^^\r\nnote: inside call to `std::panicking::try::do_call::<[closure@DefId(1/1:1801 ~ std[a0b6]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&&std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32>`\r\n  --> /home/bjorn/Documenten/rust2/src/libstd/panicking.rs:302:5\r\n   |\r\n302| /     fn do_call<F: FnOnce() -> R, R>(data: *mut u8) {\r\n303| |         unsafe {\r\n304| |             let data = data as *mut Data<F, R>;\r\n305| |             let f = ptr::read(&mut (*data).f);\r\n306| |             ptr::write(&mut (*data).r, f());\r\n307| |         }\r\n308| |     }\r\n   | |_____^\r\nnote: inside call to `std::panicking::try::<i32, [closure@DefId(1/1:1801 ~ std[a0b6]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&&std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe]>`\r\n  --> /home/bjorn/Documenten/rust2/src/libstd/panic.rs:361:9\r\n   |\r\n361|         panicking::try(f)\r\n   |         ^^^^^^^^^^^^^^^^^\r\nnote: inside call to `std::panic::catch_unwind::<[closure@DefId(1/1:1801 ~ std[a0b6]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&&std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32>`\r\n  --> /home/bjorn/Documenten/rust2/src/libstd/rt.rs:58:25\r\n   |\r\n58 |           let exit_code = panic::catch_unwind(|| {\r\n   |  _________________________^\r\n59 | |             ::sys_common::backtrace::__rust_begin_short_backtrace(move || main())\r\n60 | |         });\r\n   | |__________^\r\nnote: inside call to `std::rt::lang_start_internal`\r\n  --> /home/bjorn/Documenten/rust2/src/libstd/rt.rs:74:5\r\n   |\r\n74 |     lang_start_internal(&move || main().report(), argc, argv)\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0080`.\r\n```\r\n\r\ncc @oli-obk\r\nblocking solson/miri#364", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49777/timeline", "performed_via_github_app": null, "state_reason": "completed"}