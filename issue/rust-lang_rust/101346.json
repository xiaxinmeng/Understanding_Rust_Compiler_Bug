{"url": "https://api.github.com/repos/rust-lang/rust/issues/101346", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/101346/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/101346/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/101346/events", "html_url": "https://github.com/rust-lang/rust/issues/101346", "id": 1360647823, "node_id": "I_kwDOAAsO6M5RGdaP", "number": 101346, "title": "Incorrect handling of lateout pairs in inline asm", "user": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 91598611, "node_id": "MDU6TGFiZWw5MTU5ODYxMQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inline-assembly", "name": "A-inline-assembly", "color": "f7e101", "default": false, "description": "Area: inline asm!(..)"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 3793391339, "node_id": "LA_kwDOAAsO6M7iGo7r", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-none", "name": "WG-none", "color": "c2e0c6", "default": false, "description": "Indicates that no working group is assigned to an issue, but it *does* have an active owner"}], "state": "open", "locked": false, "assignee": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 21, "created_at": "2022-09-02T22:11:07Z", "updated_at": "2022-11-24T21:37:00Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "(issue is loosely owned, in terms of P-high tracking, by @wesleywiser and @pnkfelix keeping their eyes on https://github.com/llvm/llvm-project/issues/57550)\r\n\r\n### Updated bug description\r\nThe following Rust function:\r\n```rust\r\npub fn foo() -> u32 {\r\n    let t1: u32;\r\n    let t2: u32;\r\n    unsafe {\r\n        asm!(\r\n            \"mov {0:e}, 1\",\r\n            \"mov eax, 42\",\r\n            lateout(reg) t1,\r\n            lateout(\"eax\") t2,\r\n            options(nostack),\r\n        );\r\n    }\r\n    t1\r\n}\r\n```\r\nGets compiled into this obviously incorrect assembly:\r\n```asm\r\nexample::foo:\r\n        mov     eax, 1\r\n        mov     eax, 42\r\n        ret\r\n```\r\nGodbolt link: https://rust.godbolt.org/z/Yb9v7WobM\r\n\r\nLLVM incorrectly reuses register for a pair of `lateout`s if it can see that one of those does not get used later.\r\n\r\n### Original description below\r\n\r\nWe get spurious segfaults in the `chacha20` crate when we run tests compiled for i686 target (`i686-unknown-linux-gnu` to be exact), see https://github.com/RustCrypto/stream-ciphers/issues/304 for more information. Interestingly enough, Rust 1.56 does not have this issue, only 1.57 and later. [Changes](https://github.com/RustCrypto/utils/pull/792) in the `cpufeatures` crate which revealed the issue look quite innocent. The issue also disappears if `zeroize` feature is disabled, which is quite tangential to `cpufeatures` (it only adds `Drop` impls). Even weirder, @aumetra's [findings](https://github.com/RustCrypto/stream-ciphers/issues/304#issuecomment-1235837221) show that segfault happens at the following line:\r\n```rust\r\nlet mut buf = [0u8; MAX_SEEK];\r\n```\r\n\r\nGranted, the `chacha20` crate contains a fair bit of unsafe code, as well as its dependencies, so the issue may be caused by unsoundness somewhere in our crates. But the circumstantial evidence makes a potential compiler bug quite probable.\r\n\r\n<!-- TRIAGEBOT_START -->\r\n\r\n<!-- TRIAGEBOT_ASSIGN_START -->\r\n\r\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"nikic\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\r\n\r\n<!-- TRIAGEBOT_ASSIGN_END -->\r\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/101346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/101346/timeline", "performed_via_github_app": null, "state_reason": null}