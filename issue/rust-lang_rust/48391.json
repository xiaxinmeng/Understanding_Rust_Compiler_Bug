{"url": "https://api.github.com/repos/rust-lang/rust/issues/48391", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48391/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48391/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48391/events", "html_url": "https://github.com/rust-lang/rust/issues/48391", "id": 298825618, "node_id": "MDU6SXNzdWUyOTg4MjU2MTg=", "number": 48391, "title": "__extendsfdf2 function erroneously emitted in wasm32-unknown-unknown", "user": {"login": "fitzgen", "id": 74571, "node_id": "MDQ6VXNlcjc0NTcx", "avatar_url": "https://avatars.githubusercontent.com/u/74571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fitzgen", "html_url": "https://github.com/fitzgen", "followers_url": "https://api.github.com/users/fitzgen/followers", "following_url": "https://api.github.com/users/fitzgen/following{/other_user}", "gists_url": "https://api.github.com/users/fitzgen/gists{/gist_id}", "starred_url": "https://api.github.com/users/fitzgen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fitzgen/subscriptions", "organizations_url": "https://api.github.com/users/fitzgen/orgs", "repos_url": "https://api.github.com/users/fitzgen/repos", "events_url": "https://api.github.com/users/fitzgen/events{/privacy}", "received_events_url": "https://api.github.com/users/fitzgen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 474645165, "node_id": "MDU6TGFiZWw0NzQ2NDUxNjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-wasm", "name": "O-wasm", "color": "6e6ec0", "default": false, "description": "Target: WASM (WebAssembly), http://webassembly.org/"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-21T02:56:44Z", "updated_at": "2018-02-27T19:29:45Z", "closed_at": "2018-02-27T19:29:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[Playground link](https://play.rust-lang.org/?gist=2b6a97fb2002d25942b9f85ac161dc34&version=nightly)\r\n\r\nThis Rust:\r\n\r\n```rust\r\n![crate_type = \"cdylib\"]\r\n\r\n#[no_mangle]\r\npub extern \"C\" fn function() {}\r\n```\r\n\r\nWhen compiled to wasm32-unknown-unknown produces:\r\n\r\n```\r\n(module\r\n  (type $t0 (func))\r\n  (type $t1 (func (param f32) (result f64)))\r\n  (func $function (export \"function\") (type $t0)\r\n    (return))\r\n  (func $__extendsfdf2 (export \"__extendsfdf2\") (type $t1) (param $p0 f32) (result f64)\r\n    (local $l0 i32) (local $l1 i32) (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32) (local $l9 i32) (local $l10 i32) (local $l11 i32) (local $l12 i32) (local $l13 i32) (local $l14 i32) (local $l15 i32) (local $l16 i32) (local $l17 i32) (local $l18 i32) (local $l19 i32) (local $l20 i32) (local $l21 i32) (local $l22 i32) (local $l23 i32) (local $l24 i32) (local $l25 i32) (local $l26 i32) (local $l27 i32) (local $l28 i32) (local $l29 i32) (local $l30 i64) (local $l31 i64) (local $l32 i64) (local $l33 i64) (local $l34 i64) (local $l35 i64) (local $l36 i64) (local $l37 i64) (local $l38 i64) (local $l39 i64) (local $l40 i64) (local $l41 i64) (local $l42 i64) (local $l43 i64) (local $l44 i64) (local $l45 i64) (local $l46 i64) (local $l47 i64) (local $l48 i64) (local $l49 i64) (local $l50 i64) (local $l51 i64) (local $l52 i64) (local $l53 i64) (local $l54 i64) (local $l55 i64) (local $l56 f64)\r\n    (set_local $l2\r\n      (i32.const 2130706432))\r\n    (set_local $l9\r\n      (i32.reinterpret/f32\r\n        (get_local $p0)))\r\n    (set_local $l7\r\n      (i32.const 2147483647))\r\n    (set_local $l8\r\n      (i32.and\r\n        (get_local $l9)\r\n        (get_local $l7)))\r\n    (set_local $l5\r\n      (i32.const -8388608))\r\n    (set_local $l6\r\n      (i32.add\r\n        (get_local $l8)\r\n        (get_local $l5)))\r\n    (set_local $l1\r\n      (get_local $l6))\r\n    (set_local $l3\r\n      (get_local $l2))\r\n    (set_local $l4\r\n      (i32.lt_u\r\n        (get_local $l1)\r\n        (get_local $l3)))\r\n    (set_local $l0\r\n      (get_local $l4))\r\n    (block $B0\r\n      (block $B1\r\n        (br_if $B1\r\n          (i32.eqz\r\n            (get_local $l0)))\r\n        (set_local $l26\r\n          (get_local $l8))\r\n        (set_local $l50\r\n          (i64.extend_u/i32\r\n            (get_local $l26)))\r\n        (set_local $l48\r\n          (i64.const 29))\r\n        (set_local $l49\r\n          (i64.shl\r\n            (get_local $l50)\r\n            (get_local $l48)))\r\n        (set_local $l46\r\n          (i64.const 4035225266123964416))\r\n        (set_local $l47\r\n          (i64.add\r\n            (get_local $l49)\r\n            (get_local $l46)))\r\n        (set_local $l55\r\n          (get_local $l47))\r\n        (br $B0))\r\n      (set_local $l12\r\n        (i32.const 2139095039))\r\n      (set_local $l11\r\n        (get_local $l8))\r\n      (set_local $l13\r\n        (get_local $l12))\r\n      (set_local $l14\r\n        (i32.gt_u\r\n          (get_local $l11)\r\n          (get_local $l13)))\r\n      (set_local $l10\r\n        (get_local $l14))\r\n      (block $B2\r\n        (br_if $B2\r\n          (i32.eqz\r\n            (get_local $l10)))\r\n        (set_local $l25\r\n          (get_local $l9))\r\n        (set_local $l45\r\n          (i64.extend_u/i32\r\n            (get_local $l25)))\r\n        (set_local $l43\r\n          (i64.const 29))\r\n        (set_local $l44\r\n          (i64.shl\r\n            (get_local $l45)\r\n            (get_local $l43)))\r\n        (set_local $l41\r\n          (i64.const 9218868437227405312))\r\n        (set_local $l42\r\n          (i64.or\r\n            (get_local $l44)\r\n            (get_local $l41)))\r\n        (set_local $l55\r\n          (get_local $l42))\r\n        (br $B0))\r\n      (set_local $l31\r\n        (i64.const 0))\r\n      (set_local $l55\r\n        (get_local $l31))\r\n      (br_if $B0\r\n        (i32.eqz\r\n          (get_local $l8)))\r\n      (set_local $l22\r\n        (i32.const 905))\r\n      (set_local $l18\r\n        (i32.clz\r\n          (get_local $l8)))\r\n      (set_local $l24\r\n        (get_local $l8))\r\n      (set_local $l40\r\n        (i64.extend_u/i32\r\n          (get_local $l24)))\r\n      (set_local $l23\r\n        (i32.sub\r\n          (get_local $l22)\r\n          (get_local $l18)))\r\n      (set_local $l21\r\n        (get_local $l23))\r\n      (set_local $l39\r\n        (i64.extend_u/i32\r\n          (get_local $l21)))\r\n      (set_local $l19\r\n        (i32.const 21))\r\n      (set_local $l20\r\n        (i32.add\r\n          (get_local $l18)\r\n          (get_local $l19)))\r\n      (set_local $l16\r\n        (i32.const 63))\r\n      (set_local $l17\r\n        (i32.and\r\n          (get_local $l20)\r\n          (get_local $l16)))\r\n      (set_local $l15\r\n        (get_local $l17))\r\n      (set_local $l38\r\n        (i64.extend_u/i32\r\n          (get_local $l15)))\r\n      (set_local $l37\r\n        (i64.shl\r\n          (get_local $l40)\r\n          (get_local $l38)))\r\n      (set_local $l35\r\n        (i64.const 4503599627370496))\r\n      (set_local $l36\r\n        (i64.xor\r\n          (get_local $l37)\r\n          (get_local $l35)))\r\n      (set_local $l33\r\n        (i64.const 52))\r\n      (set_local $l34\r\n        (i64.shl\r\n          (get_local $l39)\r\n          (get_local $l33)))\r\n      (set_local $l32\r\n        (i64.or\r\n          (get_local $l36)\r\n          (get_local $l34)))\r\n      (set_local $l55\r\n        (get_local $l32)))\r\n    (set_local $l30\r\n      (get_local $l55))\r\n    (set_local $l28\r\n      (i32.const -2147483648))\r\n    (set_local $l29\r\n      (i32.and\r\n        (get_local $l9)\r\n        (get_local $l28)))\r\n    (set_local $l27\r\n      (get_local $l29))\r\n    (set_local $l54\r\n      (i64.extend_u/i32\r\n        (get_local $l27)))\r\n    (set_local $l52\r\n      (i64.const 32))\r\n    (set_local $l53\r\n      (i64.shl\r\n        (get_local $l54)\r\n        (get_local $l52)))\r\n    (set_local $l51\r\n      (i64.or\r\n        (get_local $l30)\r\n        (get_local $l53)))\r\n    (set_local $l56\r\n      (f64.reinterpret/i64\r\n        (get_local $l51)))\r\n    (return\r\n      (get_local $l56)))\r\n  (table $T0 0 anyfunc)\r\n  (memory $memory (export \"memory\") 17)\r\n  (data (i32.const 4) \"\\10\\00\\10\\00\"))\r\n```\r\n\r\nThe `__extendsfdf2` function should not be included in the output, let alone publicly exported.\r\n\r\nI've seen other mysterious exported functions that also have names like `__whatever2` that should also not be there.\r\n\r\n@alexcrichton, any idea what is up?", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48391/timeline", "performed_via_github_app": null, "state_reason": "completed"}