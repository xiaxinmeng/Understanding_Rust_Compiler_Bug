{"url": "https://api.github.com/repos/rust-lang/rust/issues/58006", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58006/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58006/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58006/events", "html_url": "https://github.com/rust-lang/rust/issues/58006", "id": 404907388, "node_id": "MDU6SXNzdWU0MDQ5MDczODg=", "number": 58006, "title": "Panic in match against non-unit variant as if it were unit variant", "user": {"login": "estk", "id": 390090, "node_id": "MDQ6VXNlcjM5MDA5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/390090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estk", "html_url": "https://github.com/estk", "followers_url": "https://api.github.com/users/estk/followers", "following_url": "https://api.github.com/users/estk/following{/other_user}", "gists_url": "https://api.github.com/users/estk/gists{/gist_id}", "starred_url": "https://api.github.com/users/estk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estk/subscriptions", "organizations_url": "https://api.github.com/users/estk/orgs", "repos_url": "https://api.github.com/users/estk/repos", "events_url": "https://api.github.com/users/estk/events{/privacy}", "received_events_url": "https://api.github.com/users/estk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252628, "node_id": "MDU6TGFiZWwyNjIyNTI2Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-beta", "name": "regression-from-stable-to-beta", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to beta."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-30T18:37:27Z", "updated_at": "2019-01-31T06:31:55Z", "closed_at": "2019-01-31T06:31:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "First off, I would be interested in trying to fix this, seems simple enough. I figured I would start by filing a bug to document the issue and perhaps get some info on how best to fix this.\r\n\r\n```\r\n\u276f rustc --version\r\nrustc 1.33.0-nightly (4c2be9c97 2019-01-22)\r\n```\r\n\r\nThe code:\r\n```rust\r\npub enum SchemaBody {\r\n    Group(Group),\r\n    ...\r\n}\r\nimpl CodeGenerator for SchemaBody {\r\n    fn codegen(&self, ctx: &mut Context) -> TokenStream {\r\n    match self {\r\n        Self::Group => TokenStream::new(),\r\n        ...\r\n    }\r\n```\r\n\r\nThe panic came from:\r\nhttps://github.com/rust-lang/rust/blob/93234994b85114e3248a216142eaab20c5e2f09e/src/librustc_typeck/check/_match.rs#L795\r\n\r\nThe panic content:\r\n```\r\nwarning: unused import: `std::str::FromStr`\r\n --> src/schema.rs:8:5\r\n  |\r\n8 | use std::str::FromStr;\r\n  |     ^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: #[warn(unused_imports)] on by default\r\n\r\n INFO 2019-01-30T18:23:41Z: rustc::traits::fulfill: selecting trait `Binder(TraitPredicate(<proc_macro2::Ident as std::convert::AsRef<str>>))` at depth 0 yielded Err\r\nerror: internal compiler error: src/librustc_typeck/check/_match.rs:795: unexpected pattern definition: VariantCtor(DefId(0/1:1359 ~ xmlschemer[e672]::schema[0]::SchemaBody[0]::Group[0]), Fn)\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:589:9\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n   1: std::sys_common::backtrace::_print\r\n   2: std::panicking::default_hook::{{closure}}\r\n   3: std::panicking::default_hook\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::util::bug::opt_span_bug_fmt\r\n  13: rustc::util::bug::bug_fmt\r\n  14: rustc_typeck::check::_match::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::check_pat_walk\r\n  15: <core::iter::Map<I, F> as core::iter::iterator::Iterator>::fold\r\n  16: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\n  17: rustc_typeck::check::_match::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::check_match\r\n  18: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  19: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_needs\r\n  20: rustc_typeck::check::FnCtxt::check_decl_initializer\r\n  21: rustc_typeck::check::FnCtxt::check_decl_local\r\n  22: rustc_typeck::check::FnCtxt::check_stmt\r\n  23: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  24: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  25: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_needs\r\n  26: rustc_typeck::check::FnCtxt::check_return_expr\r\n  27: rustc_typeck::check::check_fn\r\n  28: rustc::ty::context::GlobalCtxt::enter_local\r\n  29: rustc_typeck::check::typeck_tables_of\r\n  30: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::typeck_tables_of<'tcx>>::compute\r\n  31: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  32: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_with\r\n  33: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::ensure_query\r\n  34: rustc::session::Session::track_errors\r\n  35: rustc_typeck::check::typeck_item_bodies\r\n  36: rustc::ty::query::__query_compute::typeck_item_bodies\r\n  37: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::typeck_item_bodies<'tcx>>::compute\r\n  38: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  39: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_with\r\n  40: rustc::util::common::time\r\n  41: rustc_typeck::check_crate\r\n  42: <std::thread::local::LocalKey<T>>::with\r\n  43: rustc::ty::context::TyCtxt::create_and_enter\r\n  44: rustc_driver::driver::compile_input\r\n  45: <scoped_tls::ScopedKey<T>>::set\r\n  46: rustc_driver::run_compiler\r\n  47: <scoped_tls::ScopedKey<T>>::set\r\nquery stack during panic:\r\n#0 [typeck_tables_of] processing `<schema::SchemaBody as schema::CodeGenerator>::codegen`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.33.0-nightly (4c2be9c97 2019-01-22) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\n[2019-01-30T18:23:42Z INFO  cargo::core::compiler::job_queue] end: xmlschemer v0.1.0 (/Users/evan/rust/xmlschemer) => Target(lib)/Profile(dev) => Host\r\n[2019-01-30T18:23:42Z DEBUG cargo] exit_with_error; err=CliError { error: Some(ProcessError { desc: \"process didn\\'t exit successfully: `rustc --edition=2018 --crate-name xmlschemer src/lib.rs --color always --crate-type lib --emit=dep-info,link -C debuginfo=2 -C metadata=9bdca844f3332aaa -C extra-filename=-9bdca844f3332aaa --out-dir /Users/evan/rust/xmlschemer/target/debug/deps -C incremental=/Users/evan/rust/xmlschemer/target/debug/incremental -L dependency=/Users/evan/rust/xmlschemer/target/debug/deps --extern clap=/Users/evan/rust/xmlschemer/target/debug/deps/libclap-a23f3ee74267101d.rlib --extern heck=/Users/evan/rust/xmlschemer/target/debug/deps/libheck-563b7994f02e64e3.rlib --extern if_chain=/Users/evan/rust/xmlschemer/target/debug/deps/libif_chain-6aadb789477ede7c.rlib --extern log=/Users/evan/rust/xmlschemer/target/debug/deps/liblog-45ef69e8215812e9.rlib --extern pretty_env_logger=/Users/evan/rust/xmlschemer/target/debug/deps/libpretty_env_logger-37685c937e93e60a.rlib --extern proc_macro2=/Users/evan/rust/xmlschemer/target/debug/deps/libproc_macro2-17e36e282c84be40.rlib --extern quote=/Users/evan/rust/xmlschemer/target/debug/deps/libquote-af4db6a3f849bcbe.rlib --extern rustfmt_nightly=/Users/evan/rust/xmlschemer/target/debug/deps/librustfmt_nightly-5cf5c0282729abd2.rlib --extern serde=/Users/evan/rust/xmlschemer/target/debug/deps/libserde-8e6194039e047282.rlib --extern serde_xml_rs=/Users/evan/rust/xmlschemer/target/debug/deps/libserde_xml_rs-f084d2902482aeaf.rlib --extern serde_derive=/Users/evan/rust/xmlschemer/target/debug/deps/libserde_derive-e37160e203f98c35.dylib --extern syn=/Users/evan/rust/xmlschemer/target/debug/deps/libsyn-2bf5c4461ccaa30c.rlib --extern xml=/Users/evan/rust/xmlschemer/target/debug/deps/libxml-b8b441b14c916eaf.rlib` (exit code: 101)\", exit: Some(ExitStatus(ExitStatus(25856))), output: None }\r\n\r\nstack backtrace:\r\n   0: failure::backtrace::internal::InternalBacktrace::new::h474badb9ffce7bc7 (0x103b16f3b)\r\n   1: <failure::backtrace::Backtrace as core::default::Default>::default::h45cb1f41e3daf8ec (0x103b17114)\r\n   2: cargo::util::process_builder::ProcessBuilder::exec_with_streaming::h921b193535c0e9ef (0x1034fb6f5)\r\n   3: <cargo::core::compiler::DefaultExecutor as cargo::core::compiler::Executor>::exec_and_capture_output::hf0dfafb1f405e584 (0x103732873)\r\n   4: <F as cargo::core::compiler::job::FnBox<A, R>>::call_box::hd5b96495299b4cd2 (0x103730700)\r\n   5: <F as cargo::core::compiler::job::FnBox<A, R>>::call_box::h05bcb4a6b3baee91 (0x103519d99)\r\n   6: <F as cargo::core::compiler::job::FnBox<A, R>>::call_box::h05bcb4a6b3baee91 (0x103519d99)\r\n   7: cargo::core::compiler::job::Job::run::h61355f8d9cb1d572 (0x103519e6e)\r\n   8: crossbeam_utils::thread::ScopedThreadBuilder::spawn::{{closure}}::h8f338d85344a6ba7 (0x10374aed9)\r\n   9: std::sys_common::backtrace::__rust_begin_short_backtrace::ha3ba31f6b7a9d297 (0x1034125fd)\r\n  10: ___rust_maybe_catch_panic (0x103b3d7fe)\r\n  11: <F as alloc::boxed::FnBox<A>>::call_box::hda9b9217608f805a (0x10341c889)\r\n  12: std::sys::unix::thread::Thread::new::thread_start::h9fabc538beb0d7ac (0x103b3cdcb)\r\n  13: __pthread_body (0x7fff78fc033c)\r\n  14: __pthread_start (0x7fff78fc32a6)\r\n\r\nstack backtrace:\r\n   0: failure::backtrace::internal::InternalBacktrace::new::h474badb9ffce7bc7 (0x103b16f3b)\r\n   1: <failure::backtrace::Backtrace as core::default::Default>::default::h45cb1f41e3daf8ec (0x103b17114)\r\n   2: <F as cargo::core::compiler::job::FnBox<A, R>>::call_box::hd5b96495299b4cd2 (0x1037307a1)\r\n   3: <F as cargo::core::compiler::job::FnBox<A, R>>::call_box::h05bcb4a6b3baee91 (0x103519d99)\r\n   4: <F as cargo::core::compiler::job::FnBox<A, R>>::call_box::h05bcb4a6b3baee91 (0x103519d99)\r\n   5: cargo::core::compiler::job::Job::run::h61355f8d9cb1d572 (0x103519e6e)\r\n   6: crossbeam_utils::thread::ScopedThreadBuilder::spawn::{{closure}}::h8f338d85344a6ba7 (0x10374aed9)\r\n   7: std::sys_common::backtrace::__rust_begin_short_backtrace::ha3ba31f6b7a9d297 (0x1034125fd)\r\n   8: ___rust_maybe_catch_panic (0x103b3d7fe)\r\n   9: <F as alloc::boxed::FnBox<A>>::call_box::hda9b9217608f805a (0x10341c889)\r\n  10: std::sys::unix::thread::Thread::new::thread_start::h9fabc538beb0d7ac (0x103b3cdcb)\r\n  11: __pthread_body (0x7fff78fc033c)\r\n  12: __pthread_start (0x7fff78fc32a6)\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58006/timeline", "performed_via_github_app": null, "state_reason": "completed"}