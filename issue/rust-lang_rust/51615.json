{"url": "https://api.github.com/repos/rust-lang/rust/issues/51615", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51615/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51615/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51615/events", "html_url": "https://github.com/rust-lang/rust/issues/51615", "id": 333126540, "node_id": "MDU6SXNzdWUzMzMxMjY1NDA=", "number": 51615, "title": "Unexpected undefined behavior when assigning a function pointer to std::mem::zeroed()", "user": {"login": "archshift", "id": 5377832, "node_id": "MDQ6VXNlcjUzNzc4MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5377832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/archshift", "html_url": "https://github.com/archshift", "followers_url": "https://api.github.com/users/archshift/followers", "following_url": "https://api.github.com/users/archshift/following{/other_user}", "gists_url": "https://api.github.com/users/archshift/gists{/gist_id}", "starred_url": "https://api.github.com/users/archshift/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/archshift/subscriptions", "organizations_url": "https://api.github.com/users/archshift/orgs", "repos_url": "https://api.github.com/users/archshift/repos", "events_url": "https://api.github.com/users/archshift/events{/privacy}", "received_events_url": "https://api.github.com/users/archshift/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-18T03:59:48Z", "updated_at": "2020-06-19T05:03:08Z", "closed_at": "2020-06-19T05:03:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Note: the following behavior only exists when compiling ***with optimizations*** (a.k.a. release mode).\r\n\r\n### Example 1:\r\n```rust\r\npub fn bar() -> usize {\r\n    let foo: fn() = unsafe { ::std::mem::zeroed() };\r\n    foo as usize\r\n}\r\n```\r\n\r\nThis emits (as of 1.26.0):\r\n```asm\r\n  push rbp\r\n  mov rbp, rsp\r\n  ud2\r\n```\r\n\r\nWhereas it used to have expected behavior up until 1.19.0:\r\n```asm\r\n  push rbp\r\n  mov rbp, rsp\r\n  xor eax, eax\r\n  pop rbp\r\n  ret\r\n```\r\n\r\n### Example 2:\r\n\r\nA bit of an odd case I discovered, which results in what seems to be some stack corruption:\r\n```rust\r\npub struct Foo<T: Copy> {\r\n    map_keys: [u64; 64],\r\n    map_vals: T,\r\n}\r\n\r\nimpl<T: Copy> Foo<T> {\r\n    pub fn new() -> Self {\r\n        Foo {\r\n            map_keys: [!0; 64],\r\n            map_vals: unsafe { ::std::mem::zeroed() }\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    Foo::<fn()>::new();\r\n}\r\n```\r\n[Playground link](https://play.rust-lang.org/?gist=16467ab7ba367b172472f6270d4efb9f&version=stable&mode=release)\r\n\r\n---\r\n\r\nWhat I think is striking here is that this behavior occurs while *never even dereferencing the pointer!*. This allows one to shoot oneself in the foot when trying to, for example, set a default value for a function pointer member.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51615/timeline", "performed_via_github_app": null, "state_reason": "completed"}