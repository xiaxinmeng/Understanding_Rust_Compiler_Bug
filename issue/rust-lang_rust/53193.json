{"url": "https://api.github.com/repos/rust-lang/rust/issues/53193", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53193/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53193/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53193/events", "html_url": "https://github.com/rust-lang/rust/issues/53193", "id": 348710203, "node_id": "MDU6SXNzdWUzNDg3MTAyMDM=", "number": 53193, "title": "Accessing union field inside unsafe function requires extra unsafe block", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-08-08T12:46:29Z", "updated_at": "2018-08-08T13:59:20Z", "closed_at": "2018-08-08T13:37:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[Playground](https://play.rust-lang.org/?gist=19b7580df577b46e00160d864ddbdc50&version=nightly&mode=debug&edition=2015)\r\n\r\nIs this by design?\r\n\r\n```rust\r\npub unsafe fn foo() -> u8 {\r\n    union U {\r\n        v: u8,\r\n        c: u8,\r\n    }\r\n    // const C: u8 = unsafe { U { v: 0 }.c }; // OK\r\n    const C: u8 = U { v: 0 }.c; // ERROR\r\n    C\r\n}\r\n```\r\n\r\nit produces:\r\n\r\n```\r\nerror[E0133]: access to union field is unsafe and requires unsafe function or block\r\n --> src/main.rs:9:19\r\n  |\r\n9 |     const C: u8 = U { v: 0 }.c;\r\n  |                   ^^^^^^^^^^^^ access to union field\r\n  |\r\n  = note: the field may not be properly initialized: using uninitialized data will cause undefined behavior\r\n```\r\n\r\nWrapping the access in an `unsafe` block compiles, but since the function is already `unsafe`, that feels a bit redundant. \r\n\r\nIn non-`unsafe` functions one doesn't need to open two unsafe blocks to perform union field access `unsafe { unsafe { ...union access... } }` :D Is this doubly-unsafe ? :D \r\n\r\ncc @oli-obk @RalfJung @eddyb ", "closed_by": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53193/timeline", "performed_via_github_app": null, "state_reason": "completed"}