{"url": "https://api.github.com/repos/rust-lang/rust/issues/65464", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65464/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65464/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65464/events", "html_url": "https://github.com/rust-lang/rust/issues/65464", "id": 507709939, "node_id": "MDU6SXNzdWU1MDc3MDk5Mzk=", "number": 65464, "title": "Make the documentation about `#![allow(unused)]` more visible", "user": {"login": "ChrisJefferson", "id": 811527, "node_id": "MDQ6VXNlcjgxMTUyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/811527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisJefferson", "html_url": "https://github.com/ChrisJefferson", "followers_url": "https://api.github.com/users/ChrisJefferson/followers", "following_url": "https://api.github.com/users/ChrisJefferson/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisJefferson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisJefferson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisJefferson/subscriptions", "organizations_url": "https://api.github.com/users/ChrisJefferson/orgs", "repos_url": "https://api.github.com/users/ChrisJefferson/repos", "events_url": "https://api.github.com/users/ChrisJefferson/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisJefferson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-16T08:54:01Z", "updated_at": "2020-03-06T15:15:40Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I like to build functions as a series of parts, for example I might write the following skeleton, then plan to fill in the loop\r\n\r\n```\r\nfn sorter(x: Vec<Vec<isize>>, modifier: bool) -> Vec<isize> {\r\n    let mut out = vec![];\r\n    for i in x {\r\n   \r\n    }\r\n    out\r\n}\r\n```\r\n\r\nIf I run a cargo check on this, just to check for typos, I get:\r\n\r\n```\r\nwarning: unused variable: `i`\r\n  --> src/playgame.rs:35:9\r\n   |\r\n35 |     for i in x {}\r\n   |         ^ help: consider prefixing with an underscore: `_i`\r\n   |\r\n   = note: `#[warn(unused_variables)]` on by default\r\n\r\nwarning: unused variable: `modifier`\r\n  --> src/playgame.rs:33:31\r\n   |\r\n33 | fn sorter(x: Vec<Vec<isize>>, modifier: bool) -> Vec<isize> {\r\n   |                               ^^^^^^^^ help: consider prefixing with an underscore: `_modifier`\r\n\r\nwarning: variable does not need to be mutable\r\n  --> src/playgame.rs:34:9\r\n   |\r\n34 |     let mut out = vec![];\r\n   |         ----^^^\r\n   |         |\r\n   |         help: remove this `mut`\r\n   |\r\n   = note: `#[warn(unused_mut)]` on by default\r\n\r\nwarning: function is never used: `sorter`\r\n  --> src/playgame.rs:33:1\r\n   |\r\n33 | fn sorter(x: Vec<Vec<isize>>, modifier: bool) -> Vec<isize> {\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: `#[warn(dead_code)]` on by default\r\n```\r\n\r\nI feel it should be possible to encapsulate a set of warnings which represent \"unused/dead\", and have a way of disabling them while developing. I realise this could be abused by some people, but I find it hard to spot the important issues between these unused/dead issues while developing.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65464/timeline", "performed_via_github_app": null, "state_reason": null}