{"url": "https://api.github.com/repos/rust-lang/rust/issues/39376", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39376/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39376/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39376/events", "html_url": "https://github.com/rust-lang/rust/issues/39376", "id": 203843865, "node_id": "MDU6SXNzdWUyMDM4NDM4NjU=", "number": 39376, "title": "rustc_trans doesn't emit alignment information causing llvm to assume abi alignment", "user": {"login": "binarycrusader", "id": 541114, "node_id": "MDQ6VXNlcjU0MTExNA==", "avatar_url": "https://avatars.githubusercontent.com/u/541114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binarycrusader", "html_url": "https://github.com/binarycrusader", "followers_url": "https://api.github.com/users/binarycrusader/followers", "following_url": "https://api.github.com/users/binarycrusader/following{/other_user}", "gists_url": "https://api.github.com/users/binarycrusader/gists{/gist_id}", "starred_url": "https://api.github.com/users/binarycrusader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binarycrusader/subscriptions", "organizations_url": "https://api.github.com/users/binarycrusader/orgs", "repos_url": "https://api.github.com/users/binarycrusader/repos", "events_url": "https://api.github.com/users/binarycrusader/events{/privacy}", "received_events_url": "https://api.github.com/users/binarycrusader/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2017-01-29T01:25:46Z", "updated_at": "2017-02-14T22:40:37Z", "closed_at": "2017-02-14T22:40:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "commit 7bc10545d635bc1f4a5632703823a6f18113df9c attempted to fix unaligned loads, but appears to have only resolved part of the problem and may have unintentionally left things a little broken on architectures with strict alignment requirements.\r\n\r\nThat commit changed bytes_to_words to return `&[Unaligned<u32>]`, but made that type `#[repr(packed)]`.\r\n\r\nI'm currently working with a fellow colleague on a port of rust to another architecture and we hit this:\r\n\r\n```rust\r\nThread 4 received signal SIGSEGV, Segmentation fault.\r\n[Switching to Thread 2 (LWP 2)]\r\n0xffffffff50037b34 in rustc_metadata::schema::LazySeq<rustc_metadata::index::Index>::lookup (self=0xffffffff7b861df0, bytes=..., def_index=...)\r\n    at /builds/rust.git/src/librustc_metadata/index.rs:73\r\n73              let position = u32::from_le(words[index].get());\r\n(gdb) print words\r\n$37 = &[rustc_metadata::index::Unaligned<u32>] {data_ptr: 0xffffffff793ae6b6, length: 6908}\r\n(gdb) print index\r\n$38 = 5283\r\n(gdb) print words[index]\r\n$39 = rustc_metadata::index::Unaligned<u32> (4092795392)\r\n```\r\n\r\nA disassembly of the call site shows this:\r\n\r\n```rust\r\n(gdb) disassemble 0xffffffff50037b34-16,+32\r\nDump of assembler code from 0xffffffff50037b24 to 0xffffffff50037b44:\r\n   0xffffffff50037b24 <rustc_metadata::schema::LazySeq<rustc_metadata::index::Index>::lookup+864>:      nop \r\n   0xffffffff50037b28 <rustc_metadata::schema::LazySeq<rustc_metadata::index::Index>::lookup+868>:      ldx  [ %fp + 0x627 ], %i0\r\n   0xffffffff50037b2c <rustc_metadata::schema::LazySeq<rustc_metadata::index::Index>::lookup+872>:      ldx  [ %fp + 0x537 ], %i1\r\n   0xffffffff50037b30 <rustc_metadata::schema::LazySeq<rustc_metadata::index::Index>::lookup+876>:      sllx  %i1, 2, %i2\r\n=> 0xffffffff50037b34 <rustc_metadata::schema::LazySeq<rustc_metadata::index::Index>::lookup+880>:      ld  [ %i0 + %i2 ], %i0\r\n   0xffffffff50037b38 <rustc_metadata::schema::LazySeq<rustc_metadata::index::Index>::lookup+884>:      st  %i0, [ %fp + 0x6e7 ]\r\n   0xffffffff50037b3c <rustc_metadata::schema::LazySeq<rustc_metadata::index::Index>::lookup+888>:      st  %i0, [ %fp + 0x7d7 ]\r\n   0xffffffff50037b40 <rustc_metadata::schema::LazySeq<rustc_metadata::index::Index>::lookup+892>:      call  0xffffffff50038054 <rustc_metadata::index::Unaligned<u32>::get<u32>>\r\n(gdb) print/a $i0    \r\n$40 = 0xffffffff793ae6b6\r\n(gdb) print/a $i2\r\n$41 = 0x528c\r\n(gdb) print/a ($i0+$i2)\r\n$42 = 0xffffffff793b3942\r\n(gdb) print/x *($i0+$i2)\r\n$44 = 0xf3f31a00\r\n```\r\n\r\nNow, if I'm not mistaken it looks like it's trying to perform an `ld` (aka `lduw`; load unsigned word) and a word is 4 bytes, but the offset of the memory address it's trying to read from is byte-aligned, not word-aligned, due to the `#[repr(packed)]`, which I believe is causing the fault since what seems like a valid value appears to be there.\r\n\r\nI suspect this is another case of issue #27060, but while we're waiting for that to be fixed, should the packed directive be removed instead?\r\n\r\nI plan to try that fix myself soon, but wanted confirmation that was a reasonable change before attempting it.", "closed_by": {"login": "binarycrusader", "id": 541114, "node_id": "MDQ6VXNlcjU0MTExNA==", "avatar_url": "https://avatars.githubusercontent.com/u/541114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binarycrusader", "html_url": "https://github.com/binarycrusader", "followers_url": "https://api.github.com/users/binarycrusader/followers", "following_url": "https://api.github.com/users/binarycrusader/following{/other_user}", "gists_url": "https://api.github.com/users/binarycrusader/gists{/gist_id}", "starred_url": "https://api.github.com/users/binarycrusader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binarycrusader/subscriptions", "organizations_url": "https://api.github.com/users/binarycrusader/orgs", "repos_url": "https://api.github.com/users/binarycrusader/repos", "events_url": "https://api.github.com/users/binarycrusader/events{/privacy}", "received_events_url": "https://api.github.com/users/binarycrusader/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39376/timeline", "performed_via_github_app": null, "state_reason": "completed"}