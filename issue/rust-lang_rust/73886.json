{"url": "https://api.github.com/repos/rust-lang/rust/issues/73886", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73886/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73886/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73886/events", "html_url": "https://github.com/rust-lang/rust/issues/73886", "id": 647995496, "node_id": "MDU6SXNzdWU2NDc5OTU0OTY=", "number": 73886, "title": "ICE caused by non-primitive cast of slices", "user": {"login": "vdbwouter", "id": 19577537, "node_id": "MDQ6VXNlcjE5NTc3NTM3", "avatar_url": "https://avatars.githubusercontent.com/u/19577537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vdbwouter", "html_url": "https://github.com/vdbwouter", "followers_url": "https://api.github.com/users/vdbwouter/followers", "following_url": "https://api.github.com/users/vdbwouter/following{/other_user}", "gists_url": "https://api.github.com/users/vdbwouter/gists{/gist_id}", "starred_url": "https://api.github.com/users/vdbwouter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vdbwouter/subscriptions", "organizations_url": "https://api.github.com/users/vdbwouter/orgs", "repos_url": "https://api.github.com/users/vdbwouter/repos", "events_url": "https://api.github.com/users/vdbwouter/events{/privacy}", "received_events_url": "https://api.github.com/users/vdbwouter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1791937891, "node_id": "MDU6TGFiZWwxNzkxOTM3ODkx", "url": "https://api.github.com/repos/rust-lang/rust/labels/ICEBreaker-Cleanup-Crew", "name": "ICEBreaker-Cleanup-Crew", "color": "74cc28", "default": false, "description": "Helping to \"clean up\" bugs with minimal examples and bisections"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-30T08:55:02Z", "updated_at": "2020-07-14T20:16:32Z", "closed_at": "2020-07-14T20:16:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nWhen trying to cast a slice, I encountered an ICE in nightly rust. It works in at least two different nightly versions: rustc 1.46.0-nightly (7750c3d46 2020-06-26) and rustc 1.46.0-nightly (0ca7f74db 2020-06-29). I haven't tested any other versions. In stable rust (1.44.1), no ICE occurs.\r\n\r\n### Code\r\n\r\nA minimal example to reproduce this is here:\r\n\r\n```Rust\r\nfn main() {\r\n    let _ = &&[0] as &[_];\r\n}\r\n```\r\n\r\nI expected the following result:\r\n\r\n```\r\nerror[E0605]: non-primitive cast: `&&[i32; 1]` as `&[_]`\r\n --> src\\main.rs:2:13\r\n  |\r\n2 |     let _ = &&[0] as &[_];\r\n  |             ^^^^^^^^^^^^^\r\n  |\r\n  = note: an `as` expression can only be used to convert between primitive types. Consider \r\nusing the `From` trait\r\n```\r\n\r\nInstead, I encountered an ICE.\r\n\r\nFrom the little testing I have done, it seems to require slices for the ICE to occur. Replacing the slices with structs causes the ICE to disappear.\r\n\r\n### Meta\r\nI got the ICE to work with the following two versions:\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.46.0-nightly (7750c3d46 2020-06-26)\r\nbinary: rustc\r\ncommit-hash: 7750c3d46bc19784adb1ee6e37a5ec7e4cd7e772\r\ncommit-date: 2020-06-26\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.46.0-nightly\r\nLLVM version: 10.0\r\n```\r\n\r\nand\r\n\r\n```\r\nrustc 1.46.0-nightly (0ca7f74db 2020-06-29)\r\nbinary: rustc\r\ncommit-hash: 0ca7f74dbd23a3e8ec491cd3438f490a3ac22741\r\ncommit-date: 2020-06-29\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.46.0-nightly\r\nLLVM version: 10.0\r\n```\r\n\r\nIt might work with earlier versions of nightly as well, but I haven't checked this. It does not occur with the latest stable version (1.44.1).\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: src\\librustc_middle\\ich\\impls_ty.rs:167:9: ty::TyKind::hash_stable() - can't hash a TyVid _#1t.\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src\\librustc_errors\\lib.rs:916:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.46.0-nightly (0ca7f74db 2020-06-29) running on x86_64-pc-windows-msvc        \r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin   \r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<Any>', src\\librustc_errors\\lib.rs:916:9\r\nstack backtrace:\r\n   0:     0x7ff86f6ba20e - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h9fa330dd7e3de9bd\r\n   1:     0x7ff86f6e815c - core::fmt::write::he569a1ab62a01108\r\n   2:     0x7ff86f6ab853 - <std::io::IoSliceMut as core::fmt::Debug>::fmt::h41603fb87d485071\r\n   3:     0x7ff86f6bf96b - std::panicking::take_hook::h755d174ec3438590\r\n   4:     0x7ff86f6bf5b8 - std::panicking::take_hook::h755d174ec3438590\r\n   5:     0x7fffd723faca - rustc_driver::report_ice::h9fcbfccbdbf5470b\r\n   6:     0x7ff86f6c02f0 - std::panicking::rust_panic_with_hook::hbd7d7a2973bcd31a\r\n   7:     0x7fffdb334715 - <rustc_errors::styled_buffer::StyledBuffer as core::fmt::Debug>::fmt::h093a348323a4579c\r\n   8:     0x7fffdb365c2f - rustc_errors::HandlerInner::err_count::h0673b8cbad4b83ef        \r\n   9:     0x7fffdb364222 - rustc_errors::Handler::bug::h8ac18f4fd02a0396\r\n  10:     0x7fffdaf0d81f - rustc_middle::util::bug::bug_fmt::hd49a82f454d9c592\r\n  11:     0x7fffdaf0bff0 - <rustc_middle::ty::consts::ConstInt as core::fmt::Debug>::fmt::hd2c7213db65e4e8a\r\n  12:     0x7fffdaf0b9c8 - <rustc_middle::ty::consts::ConstInt as core::fmt::Debug>::fmt::hd2c7213db65e4e8a\r\n  13:     0x7fffdaf0d74c - rustc_middle::util::bug::bug_fmt::hd49a82f454d9c592\r\n  14:     0x7fffdaf0d6b0 - rustc_middle::util::bug::bug_fmt::hd49a82f454d9c592\r\n  15:     0x7fffdae30357 - rustc_middle::ich::impls_ty::<impl rustc_data_structures::stable_hasher::HashStable<rustc_middle::ich::hcx::StableHashingContext> for rustc_middle::ty::sty::TyVid>::hash_stable::h73acb992d8c7b31b\r\n  16:     0x7fffdae76707 - ZN12rustc_middle2ty3sty108_DERIVE_rustc_data_structures_stable_hasher_HashStable_rustc_middle_ich_StableHashingContext_ctx_FOR_InferTy161_$LT$impl$u20$rustc_data_structures..stable_hasher..HashStable$LT$rustc_middle..ich..hcx..StableHashingContext$GT$$u20\r\n  17:     0x7fffdae72893 - ZN12rustc_middle2ty3sty107_DERIVE_rustc_data_structures_stable_hasher_HashStable_rustc_middle_ich_StableHashingContext_ctx_FOR_TyKind160_$LT$impl$u20$rustc_data_structures..stable_hasher..HashStable$LT$rustc_middle..ich..hcx..StableHashingContext$GT$$u20$\r\n  18:     0x7fffd983d7a8 - <rustc_typeck::check::closure::ExpectedSig as core::fmt::Debug>::fmt::h28946985bdaf598f\r\n  19:     0x7fffd97853d9 - <rustc_typeck::variance::constraints::ConstraintContext as rustc_hir::itemlikevisit::ItemLikeVisitor>::visit_impl_item::hf74e1f2a942c895d\r\n  20:     0x7fffd9727c55 - <rustc_typeck::outlives::explicit::ExplicitPredicatesMap as core::fmt::Debug>::fmt::hbabb74bd34d6f06e\r\n  21:     0x7fffd96b6e28 - rustc_typeck::check::FnCtxt::field_ty::hd3c3fabc7a5594e0        \r\n  22:     0x7fffd974a0a2 - <rustc_typeck::variance::constraints::ConstraintContext as rustc_hir::itemlikevisit::ItemLikeVisitor>::visit_impl_item::hf74e1f2a942c895d\r\n  23:     0x7fffd969d1f7 - <rustc_typeck::check::fixup_opaque_types::FixupFolder as rustc_middle::ty::fold::TypeFolder>::fold_ty::hdd1705c99306d697\r\n  24:     0x7fffd9833a6e - <rustc_typeck::check::closure::ExpectedSig as core::fmt::Debug>::fmt::h28946985bdaf598f\r\n  25:     0x7fffd976e546 - <rustc_typeck::variance::constraints::ConstraintContext as rustc_hir::itemlikevisit::ItemLikeVisitor>::visit_impl_item::hf74e1f2a942c895d\r\n  26:     0x7fffd980fca8 - <rustc_typeck::check::op::Op as core::fmt::Debug>::fmt::h4d1ad030ff5c62b0\r\n  27:     0x7fffd981ca22 - <rustc_typeck::check::op::Op as core::fmt::Debug>::fmt::h4d1ad030ff5c62b0\r\n  28:     0x7fffd977858c - <rustc_typeck::variance::constraints::ConstraintContext as rustc_hir::itemlikevisit::ItemLikeVisitor>::visit_impl_item::hf74e1f2a942c895d\r\n  29:     0x7fffd97df132 - <rustc_typeck::variance::constraints::ConstraintContext as rustc_hir::itemlikevisit::ItemLikeVisitor>::visit_impl_item::hf74e1f2a942c895d\r\n  30:     0x7fffd969caf4 - <rustc_typeck::check::CheckItemTypesVisitor as rustc_hir::itemlikevisit::ItemLikeVisitor>::visit_item::h7a4fa0a9cfe88a7f\r\n  31:     0x7fffd98ebe4d - <rustc_typeck::astconv::Bounds as core::fmt::Debug>::fmt::h70515e593af6043a\r\n  32:     0x7fffd9770786 - <rustc_typeck::variance::constraints::ConstraintContext as rustc_hir::itemlikevisit::ItemLikeVisitor>::visit_impl_item::hf74e1f2a942c895d\r\n  33:     0x7fffd980e263 - <rustc_typeck::check::op::Op as core::fmt::Debug>::fmt::h4d1ad030ff5c62b0\r\n  34:     0x7fffd981e702 - <rustc_typeck::check::op::Op as core::fmt::Debug>::fmt::h4d1ad030ff5c62b0\r\n  35:     0x7fffd979e595 - <rustc_typeck::variance::constraints::ConstraintContext as rustc_hir::itemlikevisit::ItemLikeVisitor>::visit_impl_item::hf74e1f2a942c895d\r\n  36:     0x7fffd98624d3 - rustc_typeck::check_crate::hc6421be2473852fa\r\n  37:     0x7fffd73b785a - rustc_interface::passes::QueryContext::print_stats::h054eebba2bf29675\r\n  38:     0x7fffd722672b - <env_logger::filter::inner::Filter as core::fmt::Display>::fmt::ha8cb8d62fcfb1df4\r\n  39:     0x7fffd72291d6 - <env_logger::filter::inner::Filter as core::fmt::Display>::fmt::ha8cb8d62fcfb1df4\r\n  40:     0x7fffd729b523 - rustc_driver::pretty::print_after_hir_lowering::hfe862cf5f8fae20a\r\n  41:     0x7fffd71fb352 - <rustc_codegen_ssa::back::linker::MsvcLinker as rustc_codegen_ssa::back::linker::Linker>::group_start::h547d707086852577\r\n  42:     0x7fffd7292df3 - rustc_driver::pretty::print_after_hir_lowering::hfe862cf5f8fae20a\r\n  43:     0x7fffd7226d76 - <env_logger::filter::inner::Filter as core::fmt::Display>::fmt::ha8cb8d62fcfb1df4\r\n  44:     0x7fffd71f8521 - <rustc_codegen_ssa::back::linker::MsvcLinker as rustc_codegen_ssa::back::linker::Linker>::group_start::h547d707086852577\r\n  45:     0x7fffd722434e - <env_logger::filter::inner::Filter as core::fmt::Display>::fmt::ha8cb8d62fcfb1df4\r\n  46:     0x7fffd724ac5d - <rustc_span::symbol::SymbolStr as core::fmt::Display>::fmt::hc00ebfa5a26d5596\r\n  47:     0x7fffd71fc903 - <rustc_codegen_ssa::back::linker::MsvcLinker as rustc_codegen_ssa::back::linker::Linker>::group_start::h547d707086852577\r\n  48:     0x7ff86f6cfc1a - std::sys::windows::thread::Thread::new::h9c6ccf8206794202       \r\n  49:     0x7ff88cba6fd4 - BaseThreadInitThunk\r\n  50:     0x7ff88cefcec1 - RtlUserThreadStart\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.46.0-nightly (0ca7f74db 2020-06-29) running on x86_64-pc-windows-msvc        \r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin   \r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck_tables_of] type-checking `main`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73886/timeline", "performed_via_github_app": null, "state_reason": "completed"}