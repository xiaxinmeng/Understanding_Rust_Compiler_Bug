{"url": "https://api.github.com/repos/rust-lang/rust/issues/81839", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81839/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81839/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81839/events", "html_url": "https://github.com/rust-lang/rust/issues/81839", "id": 802784337, "node_id": "MDU6SXNzdWU4MDI3ODQzMzc=", "number": 81839, "title": "\"DefId isn't local\" ICE", "user": {"login": "layderv", "id": 20249311, "node_id": "MDQ6VXNlcjIwMjQ5MzEx", "avatar_url": "https://avatars.githubusercontent.com/u/20249311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/layderv", "html_url": "https://github.com/layderv", "followers_url": "https://api.github.com/users/layderv/followers", "following_url": "https://api.github.com/users/layderv/following{/other_user}", "gists_url": "https://api.github.com/users/layderv/gists{/gist_id}", "starred_url": "https://api.github.com/users/layderv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/layderv/subscriptions", "organizations_url": "https://api.github.com/users/layderv/orgs", "repos_url": "https://api.github.com/users/layderv/repos", "events_url": "https://api.github.com/users/layderv/events{/privacy}", "received_events_url": "https://api.github.com/users/layderv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "closed", "locked": false, "assignee": {"login": "osa1", "id": 448274, "node_id": "MDQ6VXNlcjQ0ODI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/448274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osa1", "html_url": "https://github.com/osa1", "followers_url": "https://api.github.com/users/osa1/followers", "following_url": "https://api.github.com/users/osa1/following{/other_user}", "gists_url": "https://api.github.com/users/osa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/osa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osa1/subscriptions", "organizations_url": "https://api.github.com/users/osa1/orgs", "repos_url": "https://api.github.com/users/osa1/repos", "events_url": "https://api.github.com/users/osa1/events{/privacy}", "received_events_url": "https://api.github.com/users/osa1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "osa1", "id": 448274, "node_id": "MDQ6VXNlcjQ0ODI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/448274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osa1", "html_url": "https://github.com/osa1", "followers_url": "https://api.github.com/users/osa1/followers", "following_url": "https://api.github.com/users/osa1/following{/other_user}", "gists_url": "https://api.github.com/users/osa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/osa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osa1/subscriptions", "organizations_url": "https://api.github.com/users/osa1/orgs", "repos_url": "https://api.github.com/users/osa1/repos", "events_url": "https://api.github.com/users/osa1/events{/privacy}", "received_events_url": "https://api.github.com/users/osa1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2021-02-06T20:27:06Z", "updated_at": "2021-02-21T00:19:44Z", "closed_at": "2021-02-21T00:19:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n\r\n\r\n### Code\r\n\r\nThe code is based on this example and the following `git diff`: https://github.com/teloxide/teloxide/tree/dev/examples/sqlite_remember_bot (commit fe6429c2790502ae09b04d2659f33e4495f6d314)\r\n\r\n```Rust\r\ndiff --git a/examples/sqlite_remember_bot/src/transitions.rs b/examples/sqlite_remember_bot/src/transitions.rs\r\nindex dcc78db..c8f1777 100644\r\n--- a/examples/sqlite_remember_bot/src/transitions.rs\r\n+++ b/examples/sqlite_remember_bot/src/transitions.rs\r\n@@ -21,6 +21,15 @@ async fn have_number(\r\n     ans: String,\r\n ) -> TransitionOut<Dialogue> {\r\n     let num = state.number;\r\n+    match ans {\r\n+        \"abc\" => {\r\n+            match num {\r\n+                1 => { cx.answer_str(\"hi\"); }\r\n+                _ => cx.answer_str(\"hi\")\r\n+            }\r\n+        }\r\n+        _ => ()\r\n+    };\r\n \r\n     if ans.starts_with(\"/get\") {\r\n         cx.answer_str(format!(\"Here is your number: {}\", num)).await?;\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\nIt fails on stable and nightly:\r\n\r\n`rustc --version --verbose`:\r\n\r\n$ rustc --version --verbose\r\nrustc 1.49.0 (e1884a8e3 2020-12-29)\r\nbinary: rustc\r\ncommit-hash: e1884a8e3c3e813aada8254edfa120e85bf5ffca\r\ncommit-date: 2020-12-29\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.49.0\r\n\r\nand\r\n\r\nrustc 1.51.0-nightly (04caa632d 2021-01-30)\r\nbinary: rustc\r\ncommit-hash: 04caa632dd10c2bf64b69524c7f9c4c30a436877\r\ncommit-date: 2021-01-30\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.51.0-nightly\r\nLLVM version: 11.0.1\r\n\r\n```\r\n<version>\r\n```\r\n\r\n### Error output\r\n\r\nFrom stable, non verbose:\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/transitions.rs:25:9\r\n   |\r\n24 |     match ans {\r\n   |           --- this expression has type `std::string::String`\r\n25 |         \"abc\" => {\r\n   |         ^^^^^ expected struct `std::string::String`, found `&str`\r\n\r\nthread 'rustc' panicked at 'DefId::expect_local: `DefId(22:1034 ~ teloxide[eccd]::dispatching::update_with_cx::{impl#1}::answer_str::{opaque#0})` isn't local', /rustc/e1884a8e3c3e813aada8254edfa120e85bf5ffca/compiler/rustc_span/src/def_id.rs:175:43\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.49.0 (e1884a8e3 2020-12-29) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `transitions::<impl teloxide::dispatching::dialogue::Subtransition for states::HaveNumberState>::react::have_number`\r\n#1 [mir_built] building MIR for `transitions::<impl teloxide::dispatching::dialogue::Subtransition for states::HaveNumberState>::react::have_number`\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: could not compile `sqlite_remember_bot`\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/transitions.rs:25:9\r\n   |\r\n24 |     match ans {\r\n   |           --- this expression has type `std::string::String`\r\n25 |         \"abc\" => {\r\n   |         ^^^^^ expected struct `std::string::String`, found `&str`\r\n\r\nthread 'rustc' panicked at 'DefId::expect_local: `DefId(22:1034 ~ teloxide[eccd]::dispatching::update_with_cx::{impl#1}::answer_str::{opaque#0})` isn't local', /rustc/e1884a8e3c3e813aada8254edfa120e85bf5ffca/compiler/rustc_span/src/def_id.rs:175:43\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/e1884a8e3c3e813aada8254edfa120e85bf5ffca/library/std/src/panicking.rs:495:5\r\n   1: std::panicking::begin_panic_fmt\r\n             at /rustc/e1884a8e3c3e813aada8254edfa120e85bf5ffca/library/std/src/panicking.rs:437:5\r\n   2: rustc_span::def_id::DefId::expect_local::{{closure}}\r\n   3: rustc_typeck::check::fn_ctxt::_impl::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::could_remove_semicolon\r\n   4: rustc_typeck::check::_match::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_match\r\n   5: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n   6: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n   7: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n   8: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n   9: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  10: rustc_typeck::check::_match::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_match\r\n  11: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  12: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  13: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  14: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  15: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  16: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  17: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  18: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  19: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  20: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  21: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  22: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  23: rustc_typeck::check::check::check_fn\r\n  24: rustc_typeck::check::closure::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_closure\r\n  25: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  26: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  27: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  28: rustc_typeck::check::callee::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::confirm_builtin_call\r\n  29: rustc_typeck::check::callee::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n  30: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  31: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  32: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  33: rustc_typeck::check::check::check_fn\r\n  34: rustc_infer::infer::InferCtxtBuilder::enter\r\n  35: rustc_typeck::check::typeck\r\n  36: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  37: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  38: rustc_data_structures::stack::ensure_sufficient_stack\r\n  39: rustc_query_system::query::plumbing::get_query_impl\r\n  40: rustc_middle::ty::context::TyCtxt::typeck_opt_const_arg\r\n  41: rustc_mir_build::thir::cx::Cx::new\r\n  42: rustc_infer::infer::InferCtxtBuilder::enter\r\n  43: rustc_mir_build::build::mir_built\r\n  44: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::mir_built>::compute\r\n  45: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  46: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  47: rustc_middle::ty::query::plumbing::<impl rustc_query_system::query::QueryContext for rustc_middle::ty::context::TyCtxt>::start_query::{{closure}}::{{closure}}::{{closure}}\r\n  48: rustc_query_system::query::plumbing::get_query_impl\r\n  49: rustc_mir::transform::check_unsafety::unsafety_check_result\r\n  50: core::ops::function::FnOnce::call_once\r\n  51: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  52: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  53: rustc_data_structures::stack::ensure_sufficient_stack\r\n  54: rustc_query_system::query::plumbing::force_query_impl\r\n  55: rustc_middle::ty::query::force_from_dep_node\r\n  56: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_previous_green\r\n  57: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_previous_green\r\n  58: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_previous_green\r\n  59: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_green_and_read\r\n  60: rustc_data_structures::stack::ensure_sufficient_stack\r\n  61: rustc_query_system::query::plumbing::get_query_impl\r\n  62: rustc_typeck::collect::type_of::type_of\r\n  63: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::type_of>::compute\r\n  64: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  65: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  66: rustc_data_structures::stack::ensure_sufficient_stack\r\n  67: rustc_query_system::query::plumbing::get_query_impl\r\n  68: rustc_typeck::check::check::check_item_type\r\n  69: rustc_middle::hir::map::Map::visit_item_likes_in_module\r\n  70: rustc_typeck::check::check::check_mod_item_types\r\n  71: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::check_mod_item_types>::compute\r\n  72: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  73: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  74: rustc_data_structures::stack::ensure_sufficient_stack\r\n  75: rustc_query_system::query::plumbing::get_query_impl\r\n  76: rustc_query_system::query::plumbing::ensure_query_impl\r\n  77: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  78: rustc_typeck::check_crate\r\n  79: rustc_interface::passes::analysis\r\n  80: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  81: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  82: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  83: rustc_data_structures::stack::ensure_sufficient_stack\r\n  84: rustc_query_system::query::plumbing::get_query_impl\r\n  85: rustc_interface::passes::QueryContext::enter\r\n  86: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  87: rustc_span::with_source_map\r\n  88: rustc_interface::interface::create_compiler_and_run\r\n  89: rustc_span::with_session_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.49.0 (e1884a8e3 2020-12-29) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `transitions::<impl teloxide::dispatching::dialogue::Subtransition for states::HaveNumberState>::react::have_number`\r\n#1 [mir_built] building MIR for `transitions::<impl teloxide::dispatching::dialogue::Subtransition for states::HaveNumberState>::react::have_number`\r\n#2 [unsafety_check_result] unsafety-checking `transitions::<impl teloxide::dispatching::dialogue::Subtransition for states::HaveNumberState>::react::have_number`\r\n#3 [mir_borrowck] borrow-checking `transitions::<impl teloxide::dispatching::dialogue::Subtransition for states::HaveNumberState>::react::have_number`\r\n#4 [type_of] computing type of `transitions::<impl teloxide::dispatching::dialogue::Subtransition for states::HaveNumberState>::react::have_number::{opaque#0}`\r\n#5 [check_mod_item_types] checking item types in module `transitions`\r\n#6 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: could not compile `sqlite_remember_bot`\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"osa1\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81839/timeline", "performed_via_github_app": null, "state_reason": "completed"}