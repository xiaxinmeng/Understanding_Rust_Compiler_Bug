{"url": "https://api.github.com/repos/rust-lang/rust/issues/49415", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49415/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49415/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49415/events", "html_url": "https://github.com/rust-lang/rust/issues/49415", "id": 308950611, "node_id": "MDU6SXNzdWUzMDg5NTA2MTE=", "number": 49415, "title": "Tracking issue for platform-dependent-API TryFrom impls involving usize/isize", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 33, "created_at": "2018-03-27T12:37:37Z", "updated_at": "2018-07-03T07:06:54Z", "closed_at": "2018-07-03T07:06:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Background\r\n\r\nFor converting between different primitive integer types we have impls of the `From` trait (and so of `TryFrom<Error=!>` through the generic `impl<T, U> TryFrom<T> for U where U: From<T>`) for conversions that always succeed (for example `u8` to `u32`), and `TryFrom<Error=TryFromIntError>` for other conversions (for example `u32` to `u8`, which return `Err(_)` on values that would overflow).\r\n\r\nWhen `usize` or `isize` is involved however, some conversions can be fallible or infallible depending on the target platform\u2019s pointer width. (For example `u64` to `usize` on 64-bit v.s. 32-bit platforms.)\r\n\r\nThere is [desire](https://github.com/rust-lang/rust/pull/49305#issuecomment-376231122) to [make such impls infallible with `From`](https://github.com/rust-lang/rust/pull/37423) whenever possible. Since APIs would be different on the target platform, their usage should be gated on a [portability lint](https://github.com/rust-lang/rust/issues/41619) that is not implemented yet. (The lint would additionally need to be able to \"see\" that a non-portable impl is used indirectly through a generic impl like `impl<T, U> TryFrom<T> for U where U: From<T>` or `impl<T, U> Into<U> for T where U: From<T>`.)\r\n\r\nA downside of this is that even code that would be portable because it doesn\u2019t care about the error type (because it only tests for the presence of an error, or works in both case though e.g. the `From` conversion inside the `?` operator) would still need top opt into \"non-portability\" in order to silence the lint.\r\n\r\nIn order to be able to stabilize the `TryFrom` trait without waiting for the portability lint to be implemented, https://github.com/rust-lang/rust/pull/49305 **removed** the affected impls. They are those marked `NP` in the table in https://github.com/rust-lang/rust/pull/49305#issuecomment-376293243:\r\n\r\n* `TryFrom<usize>` for `u16`, `u32`, `u64`, `u128`, `i32`, `i64`, `i128`\r\n* `TryFrom<isize>` for `i16`, `i32`, `i64`, `i128`\r\n* `TryFrom<_> for usize`: `u32`, `u64`, `u128`\r\n* `TryFrom<_> for isize`: `u16`, `u32`, `u64`, `u128`, `i32`, `i64`, `i128`\r\n\r\n\r\n# Alternatives\r\n\r\nWe want to have these impls eventually, but need to chose between:\r\n\r\n* Different APIs based on the target platform, with a portability lint\r\n* Give up on static-infallibility-on-some-platforms and make these impls apparently-fallible with `TryFrom<Error=TryFromIntError>` on all platforms.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49415/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49415/timeline", "performed_via_github_app": null, "state_reason": "completed"}