{"url": "https://api.github.com/repos/rust-lang/rust/issues/95182", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95182/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95182/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95182/events", "html_url": "https://github.com/rust-lang/rust/issues/95182", "id": 1175938259, "node_id": "I_kwDOAAsO6M5GF2TT", "number": 95182, "title": "Ambiguous output when higher rank trait bound is not met", "user": {"login": "jasta", "id": 83791, "node_id": "MDQ6VXNlcjgzNzkx", "avatar_url": "https://avatars.githubusercontent.com/u/83791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasta", "html_url": "https://github.com/jasta", "followers_url": "https://api.github.com/users/jasta/followers", "following_url": "https://api.github.com/users/jasta/following{/other_user}", "gists_url": "https://api.github.com/users/jasta/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasta/subscriptions", "organizations_url": "https://api.github.com/users/jasta/orgs", "repos_url": "https://api.github.com/users/jasta/repos", "events_url": "https://api.github.com/users/jasta/events{/privacy}", "received_events_url": "https://api.github.com/users/jasta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-21T21:04:15Z", "updated_at": "2022-03-24T18:09:12Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Given the following code demonstrating an invalid lifetime mismatch between the borrowed whom argument and the returned future:\r\n\r\n```\r\nuse std::future::Future;\r\n\r\n#[tokio::main]\r\nasync fn main() {\r\n  do_say_hi(my_func).await;\r\n}\r\n\r\nasync fn my_func(whom: &str) {\r\n  println!(\"hi {whom}\");\r\n}\r\n\r\nasync fn do_say_hi<F, R>(func: F)\r\nwhere\r\nF: Fn(&str) -> R,\r\nR: Future<Output = ()> {\r\n  (func)(\"world\").await;\r\n}\r\n```\r\n\r\nPlayground for more context: https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=58bcba6782e856d0de5f3d1271bf2c9e\r\n\r\nThe output from rustc makes a strange claim about a mismatched type with the expected and found type labels being identical:\r\n\r\n```\r\n   = note: expected associated type `<for<'_> fn(&str) -> impl Future<Output = ()> {my_func} as FnOnce<(&str,)>>::Output`\r\n              found associated type `<for<'_> fn(&str) -> impl Future<Output = ()> {my_func} as FnOnce<(&str,)>>::Output`\r\n   = note: the required lifetime does not necessarily outlive the empty lifetime\r\n```\r\n\r\nI believe the underlying issue is simply that the whom reference does not necessarily outlive the future that it returns.  That is, by the time the future is awaited, it could be beyond the lifetime of whom.  The compiler is correct to halt on this code, however, the error message is where I think the bug really lies as it asks the developer to character-by-character compare an identical string only to guess at what the real issue is.  Further, changing this code very slightly reveals a greatly improved error message by simply using closure syntax instead of the named fn:\r\n\r\n```\r\n  do_say_hi(|whom| async move {\r\n    println!(\"hi {whom}\");\r\n  }).await;\r\n```\r\n\r\nRust playground for the revised sample: https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=f2ea2a2834215e0acdc6b88de3b70471\r\n\r\nNow the error message we get is detailed and helpful:\r\n\r\n```\r\n5 |     do_say_hi(|whom| async move {\r\n  |  ______________-----_^\r\n  | |              |   |\r\n  | |              |   return type of closure `impl Future<Output = [async output]>` contains a lifetime `'2`\r\n  | |              has type `&'1 str`\r\n6 | |     println!(\"hi {whom}\");\r\n7 | |   }).await;\r\n  | |___^ returning this value requires that `'1` must outlive `'2`\r\n```\r\n\r\nEDIT: I discovered a much simpler example that well highlights the poor error message as opposed to the underlying and very real lifetime issue that existed in my code.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95182/timeline", "performed_via_github_app": null, "state_reason": null}