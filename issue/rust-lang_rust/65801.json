{"url": "https://api.github.com/repos/rust-lang/rust/issues/65801", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65801/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65801/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65801/events", "html_url": "https://github.com/rust-lang/rust/issues/65801", "id": 512422259, "node_id": "MDU6SXNzdWU1MTI0MjIyNTk=", "number": 65801, "title": "Clarify guarantees for `Vec` and `String` allocation", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 129836139, "node_id": "MDU6TGFiZWwxMjk4MzYxMzk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-allocators", "name": "A-allocators", "color": "f7e101", "default": false, "description": "Area: Custom and system allocators"}, {"id": 166999014, "node_id": "MDU6TGFiZWwxNjY5OTkwMTQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-collections", "name": "A-collections", "color": "f7e101", "default": false, "description": "Area: std::collections."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-25T09:59:57Z", "updated_at": "2019-10-28T13:55:36Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Similar to what https://github.com/rust-lang/rust/pull/58183 did for `Box`, I think we should document a guarantee that `Vec<T>` and `String` are allocated through the standard library\u2019s global allocator.\r\n\r\nNamely:\r\n\r\n* It is valid (under some conditions) to pass a pointer allocated with `std::alloc::Global` (or corresponding free functions in `std::alloc`) to `Vec::from_raw_parts`.\r\n\r\n* It is valid (under some conditions) to deallocate or reallocate with `std::alloc::Global` (or corresponding free functions in `std::alloc`) a pointer from [`Vec::into_raw_parts`](https://github.com/rust-lang/rust/pull/65705) (or from `ManuallyDrop` + `Vec::as_mut_ptr`).\r\n\r\nConditions include using the appropriate `std::alloc::Layout`, properly transferring ownership, etc.\r\n\r\nPerhaps the documented guarantees should also extend to using `NonNull<T>::dangling` for zero-size allocations. (And similarly for `Box`.)\r\n\r\n@rust-lang/libs, any throughts?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65801/timeline", "performed_via_github_app": null, "state_reason": null}