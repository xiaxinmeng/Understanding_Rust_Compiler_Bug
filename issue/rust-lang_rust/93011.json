{"url": "https://api.github.com/repos/rust-lang/rust/issues/93011", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93011/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93011/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93011/events", "html_url": "https://github.com/rust-lang/rust/issues/93011", "id": 1106209614, "node_id": "I_kwDOAAsO6M5B72tO", "number": 93011, "title": "The panic branch of `Some(x).unwrap()` is not removed for some types", "user": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049491442, "node_id": "MDU6TGFiZWwxMDQ5NDkxNDQy", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-heavy", "name": "I-heavy", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to binary size of generated code."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-01-17T19:50:33Z", "updated_at": "2023-05-19T20:44:21Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Demos: https://godbolt.org/z/TMh3Krfc5\r\n\r\nThe motivating example is:\r\n```rust\r\npub fn bad_vec(s: Vec<u8>) -> Vec<u8> {\r\n    Some(s).expect(\"bad_vec\")\r\n}\r\n```\r\n```asm\r\nexample::bad_myvec:\r\n        push    rax\r\n        mov     rax, qword ptr [rsi]\r\n        test    rax, rax\r\n        je      .LBB5_1\r\n        mov     qword ptr [rdi], rax\r\n        movups  xmm0, xmmword ptr [rsi + 8]\r\n        movups  xmmword ptr [rdi + 8], xmm0\r\n        mov     rax, rdi\r\n        pop     rcx\r\n        ret\r\n.LBB5_1:\r\n        lea     rdi, [rip + .L__unnamed_5]\r\n        lea     rdx, [rip + .L__unnamed_6]\r\n        mov     esi, 9\r\n        call    qword ptr [rip + core::option::expect_failed@GOTPCREL]\r\n        ud2\r\n```\r\nIt looks to me like the problem with `Vec` is that specifically the `nonnull` attribute does not survive being wrapped in two structs that each contain a second member. If either of `RawVec` or `Vec` is missing a `usize` member, the optimization works.\r\n\r\nThere is a missed `NonZero*` optimization in here that I found looking for types that fail to optimize. It's unclear to me if this was reported previously in https://github.com/rust-lang/rust/issues/49572, or if whatever fixes the problem with `Vec` will also fix the `NonZero*` example.\r\n\r\n---\r\nI think this is similar but not the same problem as seen in https://github.com/rust-lang/rust/issues/71257", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93011/reactions", "total_count": 7, "+1": 6, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93011/timeline", "performed_via_github_app": null, "state_reason": null}