{"url": "https://api.github.com/repos/rust-lang/rust/issues/28398", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/28398/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/28398/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/28398/events", "html_url": "https://github.com/rust-lang/rust/issues/28398", "id": 106300779, "node_id": "MDU6SXNzdWUxMDYzMDA3Nzk=", "number": 28398, "title": "Placing constant expressions in statics can result in unnecessary huge memcpy's", "user": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-09-14T09:08:58Z", "updated_at": "2017-05-26T23:37:33Z", "closed_at": "2017-05-26T23:37:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "``` rust\npub enum MyEnum {\n    A(u32),\n    B([u8; 65536]),\n}\n\npub fn slow(e: &mut MyEnum) {\n    *e = MyEnum::A(32);\n}\n\npub fn fast(e: &mut MyEnum, x: u32) {\n    *e = MyEnum::A(x);\n}\n```\n\nThe optimised IR is:\n\n``` llvm\n; ModuleID = 'rust_out.0.rs'\ntarget datalayout = \"e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-unknown-linux-gnu\"\n\n%MyEnum = type { i8, [3 x i8], [16384 x i32] }\n\n@const746 = internal unnamed_addr constant { i8, i32, [65532 x i8] } { i8 0, i32 32, [65532 x i8] undef }\n\n; Function Attrs: nounwind uwtable\ndefine void @_ZN4slow20h2f035c1295a6ea67oaaE(%MyEnum* noalias nocapture dereferenceable(65540)) unnamed_addr #0 {\nentry-block:\n  %1 = getelementptr inbounds %MyEnum, %MyEnum* %0, i64 0, i32 0\n  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* getelementptr inbounds ({ i8, i32, [65532 x i8] }, { i8, i32, [65532 x i8] }* @const746, i64 0, i32 0), i64 65540, i32 4, i1 false)\n  ret void\n}\n\n; Function Attrs: nounwind\ndeclare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) unnamed_addr #1\n\n; Function Attrs: nounwind uwtable\ndefine void @_ZN4fast20h4b4f8c2fd333501fCaaE(%MyEnum* noalias nocapture dereferenceable(65540), i32) unnamed_addr #0 {\nentry-block:\n  %2 = getelementptr inbounds %MyEnum, %MyEnum* %0, i64 0, i32 0\n  store i8 0, i8* %2, align 4\n  %3 = getelementptr inbounds %MyEnum, %MyEnum* %0, i64 0, i32 2, i64 0\n  store i32 %1, i32* %3, align 4\n  ret void\n}\n\nattributes #0 = { nounwind uwtable \"split-stack\" }\nattributes #1 = { nounwind \"split-stack\" }\n```\n\ni.e. `slow` does a 64K memcpy, while `fast` does two small stores.\n\nPresumably caused by:\n- https://github.com/rust-lang/rust/blob/4d6dc7f9ba9fe61e38d737b29bfe490e835f6921/src/librustc_trans/trans/expr.rs#L135\n- https://github.com/rust-lang/rust/blob/4d6dc7f9ba9fe61e38d737b29bfe490e835f6921/src/librustc_trans/trans/expr.rs#L223\n\n(Noticed in https://users.rust-lang.org/t/setting-a-4-byte-enum-variant-results-in-a-64k-memcopy/2858 .)\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/28398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/28398/timeline", "performed_via_github_app": null, "state_reason": "completed"}