{"url": "https://api.github.com/repos/rust-lang/rust/issues/78053", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78053/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78053/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78053/events", "html_url": "https://github.com/rust-lang/rust/issues/78053", "id": 723782673, "node_id": "MDU6SXNzdWU3MjM3ODI2NzM=", "number": 78053, "title": "Incompatible type for trait should be reported before type checking the impl", "user": {"login": "Kixunil", "id": 1178779, "node_id": "MDQ6VXNlcjExNzg3Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kixunil", "html_url": "https://github.com/Kixunil", "followers_url": "https://api.github.com/users/Kixunil/followers", "following_url": "https://api.github.com/users/Kixunil/following{/other_user}", "gists_url": "https://api.github.com/users/Kixunil/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kixunil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions", "organizations_url": "https://api.github.com/users/Kixunil/orgs", "repos_url": "https://api.github.com/users/Kixunil/repos", "events_url": "https://api.github.com/users/Kixunil/events{/privacy}", "received_events_url": "https://api.github.com/users/Kixunil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-10-17T15:25:51Z", "updated_at": "2020-10-17T16:13:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Suppose a user writes a trait and an impl while making a typo in the function header in impl (could be as simple as forgetting `&`).\r\nAlso suppose there are type errors in the body of the impl.\r\n\r\nCurrently, the compiler informs about the type errors and *after* the user fixes them it reports incompatible type for trait. There's a pretty good chance the user has to fix the impl again, possibly re-writing the same spots that were rewritten before. This can be pretty frustrating, especially during heavy refactors when it can happen more than once. (Source: just happened to me.)\r\n\r\nIt'd be much better if incompatible type for trait was reported *before* type checking the impl as the user can then avoid rewriting the impls. I also think that information about type errors in trait fns is probably irrelevant until the headers are fixed, so not displaying it would make sense. (But I can live with it being displayed as long as it's displayed **after** incompatible type for trait.)\r\n\r\nThis is loosely related to #65256, but not same, so I felt that opening a separate issue is appropriate. Feel free to merge if I'm mistaken.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78053/timeline", "performed_via_github_app": null, "state_reason": null}