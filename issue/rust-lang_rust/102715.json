{"url": "https://api.github.com/repos/rust-lang/rust/issues/102715", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102715/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102715/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102715/events", "html_url": "https://github.com/rust-lang/rust/issues/102715", "id": 1398029455, "node_id": "I_kwDOAAsO6M5TVDyP", "number": 102715, "title": "Unsoundness when a panic Rust code is caught by separetely compiled Rust code through FFI-unwind", "user": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36953, "node_id": "MDU6TGFiZWwzNjk1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-runtime", "name": "A-runtime", "color": "f7e101", "default": false, "description": "Area: std's runtime and \"pre-main\" init for handling backtraces, unwinds, stack overflows"}, {"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 2245032240, "node_id": "MDU6TGFiZWwyMjQ1MDMyMjQw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-c_unwind", "name": "F-c_unwind", "color": "f9c0cc", "default": false, "description": "`#![feature(c_unwind)]`"}, {"id": 4265130294, "node_id": "LA_kwDOAAsO6M7-OLk2", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-project-ffi-unwind", "name": "WG-project-ffi-unwind", "color": "c2e0c6", "default": false, "description": "Working Group: FFI unwind"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-10-05T15:58:12Z", "updated_at": "2022-10-29T17:06:43Z", "closed_at": "2022-10-29T17:06:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Rust code might be able to catch foreign Rust code through FFI unwind.\r\n\r\na.rs:\r\n```rust\r\n#![crate_type = \"cdylib\"]\r\n#![feature(c_unwind)]\r\n\r\n#[no_mangle]\r\nextern \"C-unwind\" fn panic() {\r\n    panic!();\r\n}\r\n```\r\n\r\nb.rs:\r\n```rust\r\n#![feature(c_unwind)]\r\n\r\n#[link(name = \"a\")]\r\nextern \"C-unwind\" {\r\n    fn panic();\r\n}\r\n\r\nfn main() {\r\n    let err = std::panic::catch_unwind(|| {\r\n        unsafe { panic() };\r\n    });\r\n    match err {\r\n        Err(v) => {\r\n            // Able to access `Box<dyn Any>` generated by another\r\n            // compiler; we can't guarantee that typeid does not conflict\r\n            // across Rust versions, nor that the vtable format is\r\n            // stable.\r\n\t\t\t// EDIT: Also this will result a `Box` allocated in one allocator\r\n\t\t\t// from being deallocated in another, which is more obviously unsound.\r\n        }\r\n        _ => (),\r\n    }\r\n}\r\n```\r\n\r\nThese two crates *could* be compiled with different Rust versions, or same version with different flags (e.g. struct layout randomisation), and this will create unsoundness because we couldn't guarantee the ABI for separate compilations.\r\n\r\nCurrently we just use the exception class in the unwind runtime (\"MOZ\\0RUST\") to tell apart Rust exceptions from foreign exceptions, but for soundness we need to treat Rust exception from another compilation as foreign exception as well.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102715/timeline", "performed_via_github_app": null, "state_reason": "completed"}