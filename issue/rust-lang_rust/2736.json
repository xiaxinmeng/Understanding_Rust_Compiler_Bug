{"url": "https://api.github.com/repos/rust-lang/rust/issues/2736", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/2736/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/2736/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/2736/events", "html_url": "https://github.com/rust-lang/rust/issues/2736", "id": 5328936, "node_id": "MDU6SXNzdWU1MzI4OTM2", "number": 2736, "title": "Fuzz testing with fault injection", "user": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2012-06-28T18:36:58Z", "updated_at": "2015-01-21T01:30:53Z", "closed_at": "2015-01-21T01:30:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The semantics of rust tasks allow them to fail unexpectedly. Currently the two scenarios where this happen are:\n- Immediately before or after any yield (e.g. send and receive). In the future the compiler will insert yield points as well\n- When stack growth fails\n\nThe story for how tasks should cope with this are unclear. Right now there is a function `unkillable` which creates a scope where tasks cannot be killed by other tasks, but it does not do anything about hitting the end of the stack.\n\nThere is a lot of unsafe code in the core and standard libraries that is not aware of its obligations to cope with random failure.\n\nI would like to instrument the runtime and core libraries to allow failure to be injected at various points, then create a tool that takes a crate of tests and runs them while poking at them with the fail stick.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/2736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/2736/timeline", "performed_via_github_app": null, "state_reason": "completed"}