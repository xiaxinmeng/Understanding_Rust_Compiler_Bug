{"url": "https://api.github.com/repos/rust-lang/rust/issues/54729", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/54729/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/54729/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/54729/events", "html_url": "https://github.com/rust-lang/rust/issues/54729", "id": 365622791, "node_id": "MDU6SXNzdWUzNjU2MjI3OTE=", "number": 54729, "title": "Wrong type inference for closure with impl Trait inside another type", "user": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-01T20:09:58Z", "updated_at": "2021-07-07T04:45:47Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi.\r\nIt compiles with a type annotation as in [this code](https://play.rust-lang.org/?gist=ed9c10406b2faffd185977c4bfaf0783&version=stable&mode=debug&edition=2015).\r\n```rust\r\nfn work() -> impl FnMut(&u32, Option<u32>) -> bool {\r\n    |current, msg| false\r\n}\r\n\r\nfn main() {}\r\n```\r\nThis [code](https://play.rust-lang.org/?gist=b1ea9b04ab99a42820ddd9d6ab0fc8c8&version=stable&mode=debug&edition=2015) doesn't compile.\r\n```rust\r\nfn doesnt_work() -> Result<impl FnMut(&u32, Option<u32>) -> bool, ()> {\r\n    Ok(|current, msg| false)\r\n}\r\n\r\nfn main() {}\r\n```\r\nerror:\r\n```\r\nerror[E0631]: type mismatch in closure arguments\r\n --> src/main.rs:1:28\r\n  |\r\n1 | fn doesnt_work() -> Result<impl FnMut(&u32, Option<u32>) -> bool, ()> {\r\n  |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected signature of `for<'r> fn(&'r u32, std::option::Option<u32>) -> _`\r\n2 |     Ok(|current, msg| false)\r\n  |        -------------------- found signature of `fn(_, _) -> _`\r\n  |\r\n  = note: the return type of a function must have a statically known size\r\n\r\nerror[E0271]: type mismatch resolving `for<'r> <[closure@src/main.rs:2:8: 2:28] as std::ops::FnOnce<(&'r u32, std::option::Option<u32>)>>::Output == bool`\r\n --> src/main.rs:1:28\r\n  |\r\n1 | fn doesnt_work() -> Result<impl FnMut(&u32, Option<u32>) -> bool, ()> {\r\n  |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected bound lifetime parameter, found concrete lifetime\r\n  |\r\n  = note: the return type of a function must have a statically known size\r\n\r\nerror: aborting due to 2 previous errors\r\n```\r\n\r\nThanks to fix this issue.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/54729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/54729/timeline", "performed_via_github_app": null, "state_reason": null}