{"url": "https://api.github.com/repos/rust-lang/rust/issues/51337", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51337/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51337/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51337/events", "html_url": "https://github.com/rust-lang/rust/issues/51337", "id": 328900852, "node_id": "MDU6SXNzdWUzMjg5MDA4NTI=", "number": 51337, "title": "Add std::boxed::Box::downcast_ref()", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-04T04:00:03Z", "updated_at": "2018-06-04T06:55:12Z", "closed_at": "2018-06-04T06:55:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nCurrently `Box` has this:\r\n\r\n```rust\r\npub fn downcast<T>(self) -> Result<Box<T>, Box<Any + 'static>> where T: Any\r\n```\r\n\r\nCould you consider adding `::downcast_ref()`? Sometimes I don't want to consume the box.\r\n\r\nFor example:\r\n\r\n```rust\r\nlet components: Vec<Box<Component>> = ...\r\nfor c in components.iter() {\r\n    if let Some(ref button) = c.downcast_ref::<Button>() { ... }\r\n}\r\n// The components would be used again later,\r\n// so consuming them is not a solution\r\n```\r\n\r\nThank you,", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51337/timeline", "performed_via_github_app": null, "state_reason": "completed"}