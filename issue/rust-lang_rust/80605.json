{"url": "https://api.github.com/repos/rust-lang/rust/issues/80605", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80605/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80605/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80605/events", "html_url": "https://github.com/rust-lang/rust/issues/80605", "id": 777389772, "node_id": "MDU6SXNzdWU3NzczODk3NzI=", "number": 80605, "title": "Type of `Option::as_ref()` is not correctly inferred when returned from `Error::source()`", "user": {"login": "teppah", "id": 39220101, "node_id": "MDQ6VXNlcjM5MjIwMTAx", "avatar_url": "https://avatars.githubusercontent.com/u/39220101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teppah", "html_url": "https://github.com/teppah", "followers_url": "https://api.github.com/users/teppah/followers", "following_url": "https://api.github.com/users/teppah/following{/other_user}", "gists_url": "https://api.github.com/users/teppah/gists{/gist_id}", "starred_url": "https://api.github.com/users/teppah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teppah/subscriptions", "organizations_url": "https://api.github.com/users/teppah/orgs", "repos_url": "https://api.github.com/users/teppah/repos", "events_url": "https://api.github.com/users/teppah/events{/privacy}", "received_events_url": "https://api.github.com/users/teppah/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-01-02T02:37:49Z", "updated_at": "2021-01-02T11:38:57Z", "closed_at": "2021-01-02T11:38:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI have a custom Error enum:\r\n\r\n```rust\r\n#[derive(Debug)]\r\npub enum ProcessError {\r\n    ParseFieldError { source: Option<ParseIntError>, /* fields omitted*/ },\r\n    /* ... */\r\n}\r\n\r\n// Assume Display is implemented\r\nimpl Error for ProcessError {\r\n    fn source(&self) -> Option<&(dyn Error + 'static)> {\r\n        match self {\r\n            ProcessError::ParseFieldError { source, .. } => source.as_ref(),\r\n            /* ... */\r\n        }\r\n    }\r\n}\r\n```\r\n`source.as_ref()`'s return type, `Option<&ParseIntError>`, should be equivalent to the one required for `Error::source()` (`Option<&(dyn Error + 'static)>`). However, when I run it, I get the following error:\r\n```\r\n  --> src/err.rs:26:57\r\n   |\r\n26 |             ProcessError::ParseFieldError { source, .. } => source.as_ref(),\r\n   |                                                             ^^^^^^^^^^^^^^^ expected trait object `dyn std::error::Error`, found struct `ParseIntError`\r\n   |\r\n   = note: expected enum `Option<&(dyn std::error::Error + 'static)>`\r\n              found enum `Option<&ParseIntError>`\r\n```\r\nBut when I take out the method call and replace it directly with `Option::as_ref()`'s source code,  \r\n\r\n```rust\r\nimpl Error for ProcessError {\r\n    fn source(&self) -> Option<&(dyn Error + 'static)> {\r\n        match self {\r\n            ProcessError::ParseFieldError { source, .. } => match *source {\r\n                Some(ref x) => Some(x),\r\n                None => None\r\n            },\r\n            /* ... */\r\n        }\r\n    }\r\n}\r\n```\r\nI don't get any compiler errors and everything works as expected.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.49.0 (e1884a8e3 2020-12-29)\r\nbinary: rustc\r\ncommit-hash: e1884a8e3c3e813aada8254edfa120e85bf5ffca\r\ncommit-date: 2020-12-29\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.49.0\r\n```\r\nSame issue on the latest nightly.\r\n```\r\nrustc 1.51.0-nightly (17eec1433 2021-01-01)\r\nbinary: rustc\r\ncommit-hash: 17eec1433c69972844dd228b5fe801f218e118c3\r\ncommit-date: 2021-01-01\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.51.0-nightly\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n  --> src/err.rs:26:57\r\n   |\r\n26 |             ProcessError::ParseFieldError { source, .. } => source.as_ref(),\r\n   |                                                             ^^^^^^^^^^^^^^^ expected trait object `dyn std::error::Error`, found struct `ParseIntError`\r\n   |\r\n   = note: expected enum `Option<&(dyn std::error::Error + 'static)>`\r\n              found enum `Option<&ParseIntError>`\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80605/timeline", "performed_via_github_app": null, "state_reason": "completed"}