{"url": "https://api.github.com/repos/rust-lang/rust/issues/43288", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43288/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43288/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43288/events", "html_url": "https://github.com/rust-lang/rust/issues/43288", "id": 243438058, "node_id": "MDU6SXNzdWUyNDM0MzgwNTg=", "number": 43288, "title": "Poor labels for anonymous lifetimes in diagnostics", "user": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-17T15:40:34Z", "updated_at": "2019-09-14T22:19:53Z", "closed_at": "2019-09-14T22:19:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given this (incorrect) [code](https://play.rust-lang.org/?gist=7123c9aaa3a8f6b132976cd239d27609&version=nightly):\r\n```\r\nuse std::collections::HashMap;\r\n\r\ntype MyMap<'a, 'b> = HashMap<&'a str, &'b str>;\r\n\r\nfn foo(iter: &mut Iterator<Item=&str>, mut map: MyMap) {\r\n    map.insert(iter.next().unwrap(), \"value\");\r\n}\r\n\r\nfn main() {\r\n}\r\n\r\n```\r\nrustc reports:\r\n```\r\n   Compiling playground v0.0.1 (file:///playground)\r\nerror[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\r\n --> src/main.rs:6:28\r\n  |\r\n6 |     map.insert(iter.next().unwrap(), \"value\");\r\n  |                            ^^^^^^\r\n  |\r\nnote: first, the lifetime cannot outlive the anonymous lifetime #2 defined on the function body at 5:1...\r\n --> src/main.rs:5:1\r\n  |\r\n5 | / fn foo(iter: &mut Iterator<Item=&str>, mut map: MyMap) {\r\n6 | |     map.insert(iter.next().unwrap(), \"value\");\r\n7 | | }\r\n  | |_^\r\nnote: ...so that types are compatible (expected std::option::Option<&str>, found std::option::Option<&str>)\r\n --> src/main.rs:6:28\r\n  |\r\n6 |     map.insert(iter.next().unwrap(), \"value\");\r\n  |                            ^^^^^^\r\nnote: but, the lifetime must be valid for the anonymous lifetime #3 defined on the function body at 5:1...\r\n --> src/main.rs:5:1\r\n  |\r\n5 | / fn foo(iter: &mut Iterator<Item=&str>, mut map: MyMap) {\r\n6 | |     map.insert(iter.next().unwrap(), \"value\");\r\n7 | | }\r\n  | |_^\r\nnote: ...so that reference does not outlive borrowed content\r\n --> src/main.rs:6:16\r\n  |\r\n6 |     map.insert(iter.next().unwrap(), \"value\");\r\n  |                ^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: Could not compile `playground`.\r\n\r\n```\r\n\r\nThe `lifetime #1` notation is not very clear or helpful. Assuming it's referring to the lifetimes of the reference parameters, it would be better if it gave them names and used those, along the lines of:\r\n```\r\nGiven:\r\nfn foo<'a, 'b, 'c, 'd>(iter: &'a mut Iterator<Item=&'b str>, mut map: MyMap<'c, 'd>) {\r\n\r\nerror[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\r\n --> src/main.rs:6:28\r\n  |\r\n6 |     map.insert(iter.next().unwrap(), \"value\");\r\n  |                            ^^^^^^\r\n  |\r\nnote: first, the lifetime cannot outlive the anonymous lifetime 'b defined on the function body at 5:1...\r\n\r\n(etc)\r\n```\r\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43288/timeline", "performed_via_github_app": null, "state_reason": "completed"}