{"url": "https://api.github.com/repos/rust-lang/rust/issues/65760", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65760/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65760/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65760/events", "html_url": "https://github.com/rust-lang/rust/issues/65760", "id": 511874084, "node_id": "MDU6SXNzdWU1MTE4NzQwODQ=", "number": 65760, "title": "musl staticlib builds include all of the musl symbols", "user": {"login": "Twey", "id": 101639, "node_id": "MDQ6VXNlcjEwMTYzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/101639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Twey", "html_url": "https://github.com/Twey", "followers_url": "https://api.github.com/users/Twey/followers", "following_url": "https://api.github.com/users/Twey/following{/other_user}", "gists_url": "https://api.github.com/users/Twey/gists{/gist_id}", "starred_url": "https://api.github.com/users/Twey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Twey/subscriptions", "organizations_url": "https://api.github.com/users/Twey/orgs", "repos_url": "https://api.github.com/users/Twey/repos", "events_url": "https://api.github.com/users/Twey/events{/privacy}", "received_events_url": "https://api.github.com/users/Twey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630662867, "node_id": "MDU6TGFiZWw2MzA2NjI4Njc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-musl", "name": "O-musl", "color": "6e6ec0", "default": false, "description": "Target: The musl libc"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-24T11:09:13Z", "updated_at": "2020-05-16T17:12:05Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "## Observed Behaviour\r\n\r\nIf I produce a simple `staticlib` crate for the `x86_64-unknown-linux-musl` target, I get a `.a` file that includes all the symbols from musl, including standard libc symbols like (for example) `readlink`.  This makes it impossible to link this library into a C program that links against libc itself (or another Rust staticlib) as the linker will fail with duplicate symbol errors.\r\n\r\n## Reproduction\r\n\r\nA test repository is at https://github.com/Twey/musl-staticlib-test, along with a Nix description of the relevant build environment for those so inclined.  You can execute `rustc -omusl-staticlib-test.a --target=x86_64-unknown-linux-musl --crate-type=staticlib lib.rs` to get a library, and use a tool such as `nm` to view the symbols in the resulting binary.  For example:\r\n\r\n```\r\n[twey@uruz:/tmp/musl-staticlib-test]$ nm musl_staticlib_test.a | grep readlink\r\n                 U readlink\r\n0000000000000000 T _ZN3std3sys4unix2fs8readlink17h4d68afd72996b214E\r\n                 U readlink\r\nreadlink.lo:\r\n0000000000000000 T readlink\r\nreadlinkat.lo:\r\n0000000000000000 T readlinkat\r\n                 U readlink\r\n```\r\n\r\n## Expected Behaviour\r\n\r\nNormally, static libraries for consumption by C, like `rlib`s, contain only symbols from the project itself, not symbols from dependencies.  Certainly symbols from libc should never make it into the binary, as these will always conflict.\r\n\r\nFor example, here's `libev`, also built statically against musl:\r\n```\r\n[twey@uruz:/tmp/musl-staticlib-test]$ nm /nix/store/6r9z7a007vrla17paac35c968fmbzilq-libev-4.27-x86_64-unknown-linux-musl/lib/libev.a | grep readlink\r\n[twey@uruz:/tmp/musl-staticlib-test]$\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65760/timeline", "performed_via_github_app": null, "state_reason": null}