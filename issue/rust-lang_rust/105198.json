{"url": "https://api.github.com/repos/rust-lang/rust/issues/105198", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105198/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105198/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105198/events", "html_url": "https://github.com/rust-lang/rust/issues/105198", "id": 1473797325, "node_id": "I_kwDOAAsO6M5X2FzN", "number": 105198, "title": "Discussion: Enforce formatting of doc comments", "user": {"login": "AldaronLau", "id": 8846235, "node_id": "MDQ6VXNlcjg4NDYyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/8846235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AldaronLau", "html_url": "https://github.com/AldaronLau", "followers_url": "https://api.github.com/users/AldaronLau/followers", "following_url": "https://api.github.com/users/AldaronLau/following{/other_user}", "gists_url": "https://api.github.com/users/AldaronLau/gists{/gist_id}", "starred_url": "https://api.github.com/users/AldaronLau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AldaronLau/subscriptions", "organizations_url": "https://api.github.com/users/AldaronLau/orgs", "repos_url": "https://api.github.com/users/AldaronLau/repos", "events_url": "https://api.github.com/users/AldaronLau/events{/privacy}", "received_events_url": "https://api.github.com/users/AldaronLau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}, {"id": 2255065215, "node_id": "MDU6TGFiZWwyMjU1MDY1MjE1", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-rustfmt", "name": "A-rustfmt", "color": "f7e101", "default": false, "description": "Area: Rustfmt"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2022-12-03T06:17:04Z", "updated_at": "2023-01-31T15:29:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, the examples in the Rust documentation is inconsistent in style.  For instance, there are many examples that use 3 space tabs (probably accidentally), while most use 4.\r\n\r\nHow do we enforce that examples are formatted correctly?  We have a few options.\r\n\r\n# Rustfmt\r\nUse rustfmt's `format_code_in_doc_comments`.\r\n\r\nWhile this initially seems like a good solution, there are a couple problems:\r\n\r\n - There are currently bugs in how this works that add additional whitespace, this is a problem with one correct solution (fixing the bugs).\r\n - Style of doc comments matches the style of the rest of the code exactly.  This would enable `use_small_heuristics = \"Max\"`, which is very undesirable for doc comments since shorter lines should always be preferred in doc comments.\r\n\r\nHow do we solve the second problem?  I see two possible ways this can be done (by changing rust-fmt).\r\n\r\n## Add docs table to rustfmt.toml\r\nRustfmt could add support for alternate rustfmt settings for doc comments.\r\n\r\n```toml\r\nedition = \"2021\"\r\nunstable_features = true\r\nuse_small_heuristics = \"Max\"\r\nformat_code_in_doc_comments = true\r\n\r\n[docs]\r\nuse_small_heuristics = \"Default\"\r\n```\r\n\r\n## Add rustfmt-docs.toml\r\nAdd an additional file that has the same format as rustfmt.toml, but applies to docs.\r\n\r\n-----\r\n\r\n# What if changes aren't/can't be made in Rustfmt?\r\n\r\nThere are 3 main solutions in this category.\r\n\r\n## Move docs out to their own folder with another rustfmt.toml file\r\nThis is something that could be done without additional tooling.\r\n\r\n    ```rust\r\n    #![doc = include_str!(\"../docs/name_of_example.rs\")]\r\n    ```\r\n\r\nOf course, this would be a very large change from where doc comments are written today, and it could be argued that having it separated out will make things harder to follow.\r\n\r\n## Extract docs with tooling and check against rustfmt.toml file\r\nA tool could be made (as part of tidy) to verify docs are formatted correctly.  Rust code could be parsed for doc comments, and written into temporary files in the same directory with a .rustfmt folder.\r\n\r\n## Extract docs with tooling and format with another rustfmt.toml file then overwrite\r\nA tool could be made (as part of tidy) to autoformat doc comments.  Implementation details would be similar to the previous option.\r\n\r\n-----\r\n\r\nHow should this be approached?  I see pros and cons to all solutions, but I think it's something that definitely should be solved.  Are there any approaches I missed?  I tried to list all of the ones I could think of, but could have missed some.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105198/timeline", "performed_via_github_app": null, "state_reason": null}