{"url": "https://api.github.com/repos/rust-lang/rust/issues/64744", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64744/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64744/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64744/events", "html_url": "https://github.com/rust-lang/rust/issues/64744", "id": 497844538, "node_id": "MDU6SXNzdWU0OTc4NDQ1Mzg=", "number": 64744, "title": "ICE 'index out of bounds: the len is 0 but the index is 0', src/librustc_typeck/check/pat.rs:729:23", "user": {"login": "najamelan", "id": 449589, "node_id": "MDQ6VXNlcjQ0OTU4OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/449589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/najamelan", "html_url": "https://github.com/najamelan", "followers_url": "https://api.github.com/users/najamelan/followers", "following_url": "https://api.github.com/users/najamelan/following{/other_user}", "gists_url": "https://api.github.com/users/najamelan/gists{/gist_id}", "starred_url": "https://api.github.com/users/najamelan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/najamelan/subscriptions", "organizations_url": "https://api.github.com/users/najamelan/orgs", "repos_url": "https://api.github.com/users/najamelan/repos", "events_url": "https://api.github.com/users/najamelan/events{/privacy}", "received_events_url": "https://api.github.com/users/najamelan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "closed", "locked": false, "assignee": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2019-09-24T18:10:15Z", "updated_at": "2019-09-25T01:46:39Z", "closed_at": "2019-09-25T01:46:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "commit that introduced ICE: https://github.com/najamelan/pharos/commit/fa9b467ad928d4c1b42cef9637e44915e816ab82\r\n\r\nThe ICE happens on `cargo check`.\r\nThe most fundamental change here I imagine is introducing `continue` inside the match...\r\n\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```shell\r\nthread 'rustc' panicked at 'index out of bounds: the len is 0 but the index is 0', src/librustc_typeck/check/pat.rs:729:23\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.37/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.37/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:76\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:60\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1030\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1412\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:64\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:196\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:210\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:477\r\n  12: std::panicking::continue_panic_fmt\r\n             at src/libstd/panicking.rs:380\r\n  13: rust_begin_unwind\r\n             at src/libstd/panicking.rs:307\r\n  14: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:85\r\n  15: core::panicking::panic_bounds_check\r\n             at src/libcore/panicking.rs:61\r\n  16: rustc_typeck::check::pat::<impl rustc_typeck::check::FnCtxt>::check_pat_tuple_struct\r\n  17: rustc_typeck::check::pat::<impl rustc_typeck::check::FnCtxt>::check_pat\r\n  18: rustc_typeck::check::pat::<impl rustc_typeck::check::FnCtxt>::check_pat_tuple_struct\r\n  19: rustc_typeck::check::pat::<impl rustc_typeck::check::FnCtxt>::check_pat\r\n  20: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold\r\n  21: rustc_typeck::check::_match::<impl rustc_typeck::check::FnCtxt>::check_match\r\n  22: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  23: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  24: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  25: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  26: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  27: rustc_typeck::check::_match::<impl rustc_typeck::check::FnCtxt>::check_match\r\n  28: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  29: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  30: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  31: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  32: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  33: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_meets_expectation_or_error\r\n  34: rustc_typeck::check::FnCtxt::check_stmt\r\n  35: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  36: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  37: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  38: rustc_typeck::check::_match::<impl rustc_typeck::check::FnCtxt>::check_match\r\n  39: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  40: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  41: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  42: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  43: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_meets_expectation_or_error\r\n  44: rustc_typeck::check::FnCtxt::check_stmt\r\n  45: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  46: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  47: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  48: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_return_expr\r\n  49: rustc_typeck::check::check_fn\r\n  50: rustc::ty::context::GlobalCtxt::enter_local\r\n  51: rustc_typeck::check::typeck_tables_of\r\n  52: rustc::ty::query::__query_compute::typeck_tables_of\r\n  53: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_tables_of>::compute\r\n  54: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  55: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  56: rustc::ty::<impl rustc::ty::context::TyCtxt>::par_body_owners\r\n  57: rustc_typeck::check::typeck_item_bodies\r\n  58: rustc::ty::query::__query_compute::typeck_item_bodies\r\n  59: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  60: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  61: rustc::util::common::time\r\n  62: rustc_typeck::check_crate\r\n  63: rustc_interface::passes::analysis\r\n  64: rustc::ty::query::__query_compute::analysis\r\n  65: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  66: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  67: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  68: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  69: std::thread::local::LocalKey<T>::with\r\n  70: scoped_tls::ScopedKey<T>::set\r\n  71: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.39.0-nightly (66bf391c3 2019-09-23) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck_tables_of] processing `<pharos::Pharos<Event> as futures_sink::Sink<Event>>::poll_flush`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\n```\r\n</p>\r\n</details>", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64744/timeline", "performed_via_github_app": null, "state_reason": "completed"}