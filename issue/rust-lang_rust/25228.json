{"url": "https://api.github.com/repos/rust-lang/rust/issues/25228", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/25228/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/25228/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/25228/events", "html_url": "https://github.com/rust-lang/rust/issues/25228", "id": 74529857, "node_id": "MDU6SXNzdWU3NDUyOTg1Nw==", "number": 25228, "title": "Better error messages for missing return values", "user": {"login": "yggie", "id": 2663402, "node_id": "MDQ6VXNlcjI2NjM0MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2663402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yggie", "html_url": "https://github.com/yggie", "followers_url": "https://api.github.com/users/yggie/followers", "following_url": "https://api.github.com/users/yggie/following{/other_user}", "gists_url": "https://api.github.com/users/yggie/gists{/gist_id}", "starred_url": "https://api.github.com/users/yggie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yggie/subscriptions", "organizations_url": "https://api.github.com/users/yggie/orgs", "repos_url": "https://api.github.com/users/yggie/repos", "events_url": "https://api.github.com/users/yggie/events{/privacy}", "received_events_url": "https://api.github.com/users/yggie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 693665463, "node_id": "MDU6TGFiZWw2OTM2NjU0NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-diagnostics", "name": "WG-diagnostics", "color": "c2e0c6", "default": false, "description": "Working group: diagnostics"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-05-08T23:29:36Z", "updated_at": "2019-03-22T02:52:10Z", "closed_at": "2019-03-22T02:52:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I recently ran into an error when writing a Rust program, it was a simple mistake but the compiler warnings were very misleading. I started out with a program much like:\n\n``` rust\nfn foo(bar: usize) -> usize {\n    if bar % 5 == 0 {\n        return 1;\n    }\n}\n\nfn main() {\n    println!(\"Hello, {}!\", foo(1))\n}\n```\n\nIt is obvious here that the function `foo` does not return values for all control paths. The compiler on the other hand, returns something like this:\n\n```\n<anon>:2:5: 4:6 error: mismatched types:\n expected `usize`,\n    found `()`\n(expected usize,\n    found ()) [E0308]\n<anon>:2     if bar % 5 == 0 {\n<anon>:3         return 1;\n<anon>:4     }\n```\n\nNot being a veteran in deciphering the rust compiler messages, it took me a good deal of time to figure out what the real problem was. I think the issue here is that the compiler thinks that the return value is the result of the `if` expression, which is `()`. Adding a semicolon after the brace gives a much better error message:\n\n```\n<anon>:1:1: 5:2 error: not all control paths return a value [E0269]\n<anon>:1 fn foo(bar: usize) -> usize {\n<anon>:2     if bar % 5 == 0 {\n<anon>:3         return 1;\n<anon>:4     };\n<anon>:5 }\n```\n\nIn my opinion, this message is much more helpful. I don\u2019t think this scenario is uncommon, and for those like myself who are unfamiliar with the language, it would be a real pain to have to deal with these misleading compiler messages on top of the learning the language. Hopefully this is a quick fix, and it can get in before the official 1.0 release.\n\n**PS**: I have tested this with `for` loops and a similar problem occurs.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/25228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/25228/timeline", "performed_via_github_app": null, "state_reason": "completed"}