{"url": "https://api.github.com/repos/rust-lang/rust/issues/14540", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/14540/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/14540/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/14540/events", "html_url": "https://github.com/rust-lang/rust/issues/14540", "id": 34632640, "node_id": "MDU6SXNzdWUzNDYzMjY0MA==", "number": 14540, "title": "Space-optimize `Option<T>` for integral enum `T`", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-05-30T10:06:10Z", "updated_at": "2017-05-19T16:32:42Z", "closed_at": "2017-05-19T16:32:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "**_Summary**_\nI propose a space optimization for variables of type `Option<E>` when `E` is a nullary, integral enum type.\n\n**_Motivation**_\nThere's no need to waste memory for storing a separate tag in variables of type `Option<E>` if `E` is an integral enum type and the set of valid values of `E` does not cover all possible bit patterns. Any bit pattern (of the size of `E`) that doesn't represent a valid value of type `E` could be used by the compiler to represent the `None` value of type `Option<E>`.\n\n**_Details**_\nGiven a nullary, integral enum type `E`, the compiler should check if some bit pattern exists which does not represent a valid value of type `E` (the only valid values are the ones determined by the nullary enum variants of `E`). If such \"invalid\" bit patterns are found, the compiler should use one of them to represent the `None` value of type `Option<E>` and omit storing the tag in variables of type `Option<E>`. If more than one such \"invalid\" bit pattern exists, there should be a language defined method to deterministically determine which one of those bit patterns is used to represent the `None` value. I think the bit pattern of `None` should be _language defined_ rather than _implementation defined_ in order to make `Option<E>` values serialized to disk more stable between different compilers / compiler versions.\n\nIn determining whether a certain value of such space optimized type `Option<E>` is `None` or not, the algorithm should simply check whether or not the binary representation of said value is equal to the binary representation of the language defined \"invalid\" value.\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/14540/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/14540/timeline", "performed_via_github_app": null, "state_reason": "completed"}