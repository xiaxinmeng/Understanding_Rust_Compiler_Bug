{"url": "https://api.github.com/repos/rust-lang/rust/issues/58700", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58700/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58700/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58700/events", "html_url": "https://github.com/rust-lang/rust/issues/58700", "id": 413827315, "node_id": "MDU6SXNzdWU0MTM4MjczMTU=", "number": 58700, "title": "Writing testable documentation examples for proc macros is not possible", "user": {"login": "LukasKalbertodt", "id": 7419664, "node_id": "MDQ6VXNlcjc0MTk2NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7419664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKalbertodt", "html_url": "https://github.com/LukasKalbertodt", "followers_url": "https://api.github.com/users/LukasKalbertodt/followers", "following_url": "https://api.github.com/users/LukasKalbertodt/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKalbertodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKalbertodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKalbertodt/subscriptions", "organizations_url": "https://api.github.com/users/LukasKalbertodt/orgs", "repos_url": "https://api.github.com/users/LukasKalbertodt/repos", "events_url": "https://api.github.com/users/LukasKalbertodt/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKalbertodt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 1118559391, "node_id": "MDU6TGFiZWwxMTE4NTU5Mzkx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-doctests", "name": "A-doctests", "color": "f7e101", "default": false, "description": "Area: Documentation tests, run by rustdoc"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-24T14:24:42Z", "updated_at": "2019-08-29T05:05:15Z", "closed_at": "2019-08-29T05:05:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Suppose our main crate `foo` defines a trait `Foo`. Now we want to write a `derive(Foo)` proc macro (or any other kind of proc macro which emits code using `Foo`). We define that proc macro in the `foo-macro` crate. Our main crate `foo` wants to rexport the proc macro so that users only have to depend on `foo`.\r\n\r\nThe code for this example:\r\n\r\n<details>\r\n\r\n**`Cargo.toml`**\r\n```toml\r\n[package]\r\nname = \"foo\"\r\n\r\n[dependencies]\r\nfoo-macro = { path = \"foo-macro\" }\r\n```\r\n\r\n**`src/lib.rs`**\r\n```rust\r\npub use foo_macro::Foo;\r\ntrait Foo {}\r\n```\r\n\r\n**`foo-macro/Cargo.toml`**\r\n```toml\r\n[package]\r\nname = \"foo-macro\"\r\n```\r\n\r\n**`foo-macro/src/lib.rs`**\r\n```rust\r\n#[proc_macro_derive(Foo)]\r\nfn derive_foo(_: TokenStream) -> TokenStream {\r\n    // ...\r\n    quote! { impl foo::Foo for #name {} }\r\n}\r\n```\r\n\r\n</details>\r\n\r\n<br /> \r\n\r\nThe question is now: **how to document the custom derive in a way such that `cargo test` can test included example code?**. I don't think it's currently possible. \r\n\r\nIf we document the function `derive_foo` in the proc macro crate, we have to make all examples `ignore` because they cannot be compiled, because compiling them would require using the `foo` crate. But this leads to a cyclic dependency (not even `dev-dependencies` works). `foo-macros` cannot depend on `foo`.\r\n\r\nBut we also can't document the reexport (that documentation is ignored/not shown). So it's not possible to write the documentation in the `foo` crate either. As a consequence, we don't have checked documentation tests -- which probably leads to stale and incorrect example code.\r\n\r\nNow I can think of three workarounds:\r\n- Add `#[cfg(not(rustdoc))]` to the reexport, and add some other item with `#[cfg(rustdoc)]` and the actual documentation to your `foo` crate. That way, the reexport doesn't happen when rustdoc generates the documentation and instead renders the other dummy item with the correct documentation. For function like proc macros, it might be fine to have a `macro_rules` macro as dummy item, but for other kinds of proc macros, this... absolutely not nice.\r\n- Add a feature to your main `foo` crate (like `no_macro_reexport`). When that feature is activated, your main crate does not reexport macros and does not depend on the `foo-macro` crate. Now the `foo-macro` crate can depend on `foo` via `dev-dependencies` and activate that `no_macro_reexport` feature. That prevents the cyclic dependency. But now your main crate has a feature that should be implementation detail and you often have to build your main crate twice.\r\n- Just don't bother and document your proc macros somewhere else (e.g. how `serde` does it). I don't think that's a good solution at all: rustdoc should be able to also properly document proc macros.\r\n\r\nSo neither of these workarounds is particularly nice. I guess it's clear that there should be some kind of solution to this. \r\n\r\n---\r\n\r\nPotentially related:\r\n- #54363 \r\n- #58696\r\n- https://github.com/rust-lang/rust/pull/51611\r\n- https://github.com/rust-lang/rust/pull/56315", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58700/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58700/timeline", "performed_via_github_app": null, "state_reason": "completed"}