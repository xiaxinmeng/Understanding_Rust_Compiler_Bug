{"url": "https://api.github.com/repos/rust-lang/rust/issues/93754", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93754/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93754/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93754/events", "html_url": "https://github.com/rust-lang/rust/issues/93754", "id": 1126684068, "node_id": "I_kwDOAAsO6M5DJ9Wk", "number": 93754, "title": "Tracking Issue for control-flow enforcement technology (CET)", "user": {"login": "abrown", "id": 541880, "node_id": "MDQ6VXNlcjU0MTg4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/541880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abrown", "html_url": "https://github.com/abrown", "followers_url": "https://api.github.com/users/abrown/followers", "following_url": "https://api.github.com/users/abrown/following{/other_user}", "gists_url": "https://api.github.com/users/abrown/gists{/gist_id}", "starred_url": "https://api.github.com/users/abrown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abrown/subscriptions", "organizations_url": "https://api.github.com/users/abrown/orgs", "repos_url": "https://api.github.com/users/abrown/repos", "events_url": "https://api.github.com/users/abrown/events{/privacy}", "received_events_url": "https://api.github.com/users/abrown/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-02-08T01:24:40Z", "updated_at": "2022-07-02T05:18:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nNOTE: For library features, please use the \"Library Tracking Issue\" template instead.\r\n\r\nThank you for creating a tracking issue! \ud83d\udcdc Tracking issues are for tracking a\r\nfeature from implementation to stabilisation. Make sure to include the relevant\r\nRFC for the feature if it has one. Otherwise provide a short summary of the\r\nfeature and link any relevant PRs or issues, and remove any sections that are\r\nnot relevant to the feature.\r\n\r\nRemember to add team labels to the tracking issue.\r\nFor a language team feature, this would e.g., be `T-lang`.\r\nSuch a feature should also be labeled with e.g., `F-my_feature`.\r\nThis label is used to associate issues (e.g., bugs and design questions) to the feature.\r\n-->\r\n\r\nThis is a tracking issue for standardizing the control-flow enforcement technology (CET) flag, `cf-protection`.\r\n\r\n### About tracking issues\r\n\r\nTracking issues are used to record the overall progress of implementation.\r\nThey are also used as hubs connecting to other relevant issues, e.g., bugs or open design questions.\r\nA tracking issue is however *not* meant for large scale discussion, questions, or bug reports about a feature.\r\nInstead, open a dedicated issue for the specific matter and add the relevant feature gate label.\r\n\r\n### Steps\r\n<!--\r\nInclude each step required to complete the feature. Typically this is a PR\r\nimplementing a feature, followed by a PR that stabilises the feature. However\r\nfor larger features an implementation could be broken up into multiple PRs.\r\n-->\r\n\r\n- [x] Implement the unstable flag for `cf-protection`\r\n- [ ] Standardize the `cf-protection` flag as a `-C` codegen flag\r\n\r\n### Unresolved Questions\r\n\r\n- [ ] Decide whether it is necessary/advisable to merge similar compilation flags (e.g. `cf-guard`, `cf-protection`, `branch-protection`) under a common flag interface\r\n- [ ] Decide whether to build the standard libraries with `cf-protection` by default\r\n\r\nIf we do build the standard libraries with `cf-protection` enabled, any assembly code in the libraries will need to be manually checked to see to it that when this flag is set, ENDBR* instructions are inserted in the right places.\r\n\r\n### Implementation history\r\n\r\nSee #93439.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93754/timeline", "performed_via_github_app": null, "state_reason": null}