{"url": "https://api.github.com/repos/rust-lang/rust/issues/8693", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/8693/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/8693/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/8693/events", "html_url": "https://github.com/rust-lang/rust/issues/8693", "id": 18447939, "node_id": "MDU6SXNzdWUxODQ0NzkzOQ==", "number": 8693, "title": "Crash in cleanup_task_local_map when the map contains a closure with a managed box whose destructor accesses the task local data", "user": {"login": "larsbergstrom", "id": 475847, "node_id": "MDQ6VXNlcjQ3NTg0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/475847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larsbergstrom", "html_url": "https://github.com/larsbergstrom", "followers_url": "https://api.github.com/users/larsbergstrom/followers", "following_url": "https://api.github.com/users/larsbergstrom/following{/other_user}", "gists_url": "https://api.github.com/users/larsbergstrom/gists{/gist_id}", "starred_url": "https://api.github.com/users/larsbergstrom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larsbergstrom/subscriptions", "organizations_url": "https://api.github.com/users/larsbergstrom/orgs", "repos_url": "https://api.github.com/users/larsbergstrom/repos", "events_url": "https://api.github.com/users/larsbergstrom/events{/privacy}", "received_events_url": "https://api.github.com/users/larsbergstrom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-08-23T00:20:58Z", "updated_at": "2013-10-11T02:04:26Z", "closed_at": "2013-10-11T02:04:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When there is a closure that captures a managed box with a destructor, stores that closure in the task local data, and then the destructor for that managed box also tries to touch the task local data, there will be a crash (accessing freed memory) during shutdown in cleanup_task_local_map, and occasionally some warnings about leaked memory.\n\nBelow is a small example that uses glfw_rs. When callbacks are set in that module, they are registered in a HashMap in task local storage, and the destructor for the Window struct removes them from that HashMap.\n\n``` rust\nextern mod glfw;\n\n#[start]\nfn start(argc: int, argv: **u8, crate_map: *u8) -> int {\n    std::rt::start_on_main_thread(argc, argv, crate_map, main)\n}\n\npub struct Wrapper {\n    glfw_window: glfw::Window\n}\n\nimpl Wrapper {\n    /// Creates a new window.                                                                                                                   \n    fn new() -> @mut Wrapper {\n        // Create the GLFW window.                                                                                                              \n        let glfw_window = glfw::Window::create(800, 600, \"Servo\", glfw::Windowed).unwrap();\n        glfw_window.make_context_current();\n\n        // Create our window object.                                                                                                            \n        let window = @mut Wrapper {\n            glfw_window:glfw_window,\n        };\n\n        // BUG: If the captured use of window is changed to instead use the provided win argument,                                              \n        // then there is no crash during the destructor. However, the change in servo is not that                                               \n        // simple. as the Wrapper struct has significantly more data and functionality, which are                                               \n        // used in the event handlers.                                                                                                          \n        do window.glfw_window.set_key_callback |_win, key, _scancode, action, _mods| {\n            if action == glfw::PRESS && key == glfw::KEY_ESCAPE {\n                window.glfw_window.set_should_close(true);\n            }\n        }\n        window\n    }\n\n    fn recv(&self) -> bool {\n        glfw::poll_events();\n        if self.glfw_window.should_close() {\n            true\n        } else {\n            false\n        }\n    }\n\n}\n\nfn main() {\n    glfw::init();\n\n    let window: @mut Wrapper = Wrapper::new();\n\n    // Enter the main event loop.                                                                                                               \n    while !window.recv() {\n    }\n    glfw::terminate();\n}\n```\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/8693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/8693/timeline", "performed_via_github_app": null, "state_reason": "completed"}