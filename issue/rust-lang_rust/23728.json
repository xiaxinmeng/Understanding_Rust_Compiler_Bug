{"url": "https://api.github.com/repos/rust-lang/rust/issues/23728", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/23728/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/23728/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/23728/events", "html_url": "https://github.com/rust-lang/rust/issues/23728", "id": 64451549, "node_id": "MDU6SXNzdWU2NDQ1MTU0OQ==", "number": 23728, "title": "Type inferencer probably could figure this case out (associated types)", "user": {"login": "carllerche", "id": 6180, "node_id": "MDQ6VXNlcjYxODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carllerche", "html_url": "https://github.com/carllerche", "followers_url": "https://api.github.com/users/carllerche/followers", "following_url": "https://api.github.com/users/carllerche/following{/other_user}", "gists_url": "https://api.github.com/users/carllerche/gists{/gist_id}", "starred_url": "https://api.github.com/users/carllerche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carllerche/subscriptions", "organizations_url": "https://api.github.com/users/carllerche/orgs", "repos_url": "https://api.github.com/users/carllerche/repos", "events_url": "https://api.github.com/users/carllerche/events{/privacy}", "received_events_url": "https://api.github.com/users/carllerche/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-03-26T06:34:09Z", "updated_at": "2023-04-05T17:36:41Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "``` rust\ntrait Async {\n    type Value;\n    type Error;\n}\n\nenum Result<T, E> {\n    Ok(T),\n    Err(E),\n}\n\nimpl<T, E> Result<T, E> {\n    fn reduce<F, U>(self, init: U::Value, action: F) -> U::Value\n            where F: Fn(U::Value, T) -> U,\n                  U: Async<Error=E> {\n        unimplemented!();\n    }\n}\n\nimpl Async for i32 {\n    type Value = i32;\n    type Error = ();\n}\n\npub fn main() {\n    let res: Result<&'static str, ()> = Result::Ok(\"hello\");\n    let val: i32 = 123;\n\n    res.reduce(val, |val /* i32 */, curr| val);\n    // Compiles if annotated ^^\n}\n```\n\ncc @nikomatsakis \n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/23728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/23728/timeline", "performed_via_github_app": null, "state_reason": null}