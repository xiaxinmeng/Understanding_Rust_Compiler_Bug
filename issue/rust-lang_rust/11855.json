{"url": "https://api.github.com/repos/rust-lang/rust/issues/11855", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/11855/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/11855/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/11855/events", "html_url": "https://github.com/rust-lang/rust/issues/11855", "id": 26395311, "node_id": "MDU6SXNzdWUyNjM5NTMxMQ==", "number": 11855, "title": "Potential generalization of destructing struct destructuring", "user": {"login": "glaebhoerl", "id": 1216629, "node_id": "MDQ6VXNlcjEyMTY2Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1216629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glaebhoerl", "html_url": "https://github.com/glaebhoerl", "followers_url": "https://api.github.com/users/glaebhoerl/followers", "following_url": "https://api.github.com/users/glaebhoerl/following{/other_user}", "gists_url": "https://api.github.com/users/glaebhoerl/gists{/gist_id}", "starred_url": "https://api.github.com/users/glaebhoerl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glaebhoerl/subscriptions", "organizations_url": "https://api.github.com/users/glaebhoerl/orgs", "repos_url": "https://api.github.com/users/glaebhoerl/repos", "events_url": "https://api.github.com/users/glaebhoerl/events{/privacy}", "received_events_url": "https://api.github.com/users/glaebhoerl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-01-27T21:17:00Z", "updated_at": "2015-01-23T03:01:46Z", "closed_at": "2015-01-23T03:01:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently structs with destructors are (sensibly) not allowed to be move-destructured (#3147), because then when their destructor runs, it would access deinitialized values.\n\nThis could potentially be generalized if we recognize that a destructor, in other words drop glue, is not an indivisible thing. It consists of the `Drop` impl for the struct itself, and the destructors for each of its fields. Therefore if we write:\n\n```\nstruct S { a: A, b: B }\nimpl Drop for S { ... }\nlet s = make_some_s();\nlet S { a, b } = s;\n```\n\nwhen the destructuring happens we could run the `Drop` impl for `S`, but _not_ the drop glue for `A` and `B`. Those are then moved out, and their destructors will run later, whenever they go out of scope.\n\nI believe this is sound: `Drop::drop()` takes `&mut self`, so it can mutate the components of `S` but not deinitialize them. If we broaden our considerations to `unsafe` code, then if the fields of a struct `S` have destructors themselves, then the `Drop` impl for `S` must, even today, leave them in a valid state, because those destructors will then access it. It is only cases where the fields of `S` do not have their own destructors, and the `Drop` impl for `S` uses `unsafe` code to put them in an invalid state, which would become dangerous, and we would have to be very careful about.\n\nWe'd obviously have to think about whether we actually want this (I haven't thought of any use cases yet), but as a theoretical possibility, I think it checks out.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/11855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/11855/timeline", "performed_via_github_app": null, "state_reason": "completed"}