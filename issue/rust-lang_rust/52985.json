{"url": "https://api.github.com/repos/rust-lang/rust/issues/52985", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52985/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52985/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52985/events", "html_url": "https://github.com/rust-lang/rust/issues/52985", "id": 347070467, "node_id": "MDU6SXNzdWUzNDcwNzA0Njc=", "number": 52985, "title": "Existential type ICE", "user": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-08-02T15:47:11Z", "updated_at": "2018-08-24T08:58:40Z", "closed_at": "2018-08-24T08:58:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The ICE message is almost the same as https://github.com/rust-lang/rust/issues/52701 , yet the code is verrry different:\r\n\r\n```Rust\r\n#![feature(existential_type)]\r\n\r\nexistential type Foo: Copy;\r\n\r\n// make compiler happy about using 'Foo'\r\nfn bar(x: Foo) -> Foo { x }\r\n\r\nfn main() {\r\n    \r\n    // make compiler happy about the types??\r\n    let _: Foo = unsafe { std::mem::transmute(0u8) };\r\n}\r\n```\r\n\r\n<details>\r\n<summary>Backtrace:</summary>\r\n\r\n```\r\nCompiling playground v0.0.1 (file:///playground)\r\nerror: internal compiler error: librustc/traits/query/normalize.rs:124: infinite recursion generic_ty: Foo, substs: [], concrete_ty: Foo, ty: Foo\r\n\r\nthread 'main' panicked at 'Box<Any>', librustc_errors/lib.rs:578:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:479\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::session::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::session::opt_span_bug_fmt\r\n  13: rustc::session::bug_fmt\r\n  14: <rustc::traits::query::normalize::QueryNormalizer<'cx, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  15: rustc::traits::query::normalize::<impl rustc::infer::at::At<'cx, 'gcx, 'tcx>>::normalize\r\n  16: rustc::ty::context::tls::with_related_context\r\n  17: rustc::infer::InferCtxtBuilder::enter\r\n  18: rustc_traits::normalize_erasing_regions::normalize_ty_after_erasing_regions\r\n  19: rustc::ty::query::__query_compute::normalize_ty_after_erasing_regions\r\n  20: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::normalize_ty_after_erasing_regions<'tcx>>::compute\r\n  21: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  22: rustc::ty::context::tls::with_related_context\r\n  23: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  24: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  25: <rustc::ty::layout::LayoutCx<'tcx, rustc::ty::context::TyCtxt<'a, 'tcx, 'tcx>> as rustc_target::abi::LayoutOf>::layout_of\r\n  26: rustc::ty::layout::SizeSkeleton::compute\r\n  27: <rustc::middle::intrinsicck::ExprVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_expr\r\n  28: rustc::hir::intravisit::walk_expr\r\n  29: <rustc::middle::intrinsicck::ExprVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_expr\r\n  30: <rustc::middle::intrinsicck::ExprVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_expr\r\n  31: rustc::hir::intravisit::walk_block\r\n  32: <rustc::middle::intrinsicck::ExprVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_expr\r\n  33: <rustc::middle::intrinsicck::ItemVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_nested_body\r\n  34: rustc::hir::Crate::visit_all_item_likes\r\n  35: rustc::middle::intrinsicck::check_crate\r\n  36: rustc::util::common::time\r\n  37: rustc::ty::context::tls::enter_context\r\n  38: <std::thread::local::LocalKey<T>>::with\r\n  39: rustc::ty::context::TyCtxt::create_and_enter\r\n  40: rustc_driver::driver::compile_input\r\n  41: rustc_driver::run_compiler_with_pool\r\n  42: <scoped_tls::ScopedKey<T>>::set\r\n  43: <scoped_tls::ScopedKey<T>>::set\r\n  44: syntax::with_globals\r\n  45: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  46: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:105\r\n  47: rustc_driver::run\r\n  48: rustc_driver::main\r\n  49: std::rt::lang_start::{{closure}}\r\n  50: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  51: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:105\r\n  52: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:392\r\n             at libstd/rt.rs:58\r\n  53: main\r\n  54: __libc_start_main\r\n  55: <unknown>\r\nquery stack during panic:\r\n#0 [normalize_ty_after_erasing_regions] normalizing `ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: All }, value: Foo }`\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.29.0-nightly (97085f9fb 2018-08-01) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C opt-level=3 -C codegen-units=1 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\n</details>\r\n\r\nUnrelated data:\r\n\r\n<details>\r\n\r\nchanging `fn bar` to the following compiles just fine:\r\n```Rust\r\nfn bar() -> Foo { 0u8 } \r\n```\r\n\r\nhowever, when removing the `u8` here, we get a compile error:\r\n```Rust\r\n#![feature(existential_type)]\r\n\r\nexistential type Foo: Copy;\r\n\r\nfn bar() -> Foo { 0 } \r\n\r\nfn main() {\r\n    let _ : Foo = unsafe { std::mem::transmute(0u8) };\r\n}\r\n```\r\n\r\n```\r\nCompiling playground v0.0.1 (file:///playground)\r\nerror[E0512]: transmute called with types of different sizes\r\n --> src/main.rs:8:28\r\n  |\r\n8 |     let _ : Foo = unsafe { std::mem::transmute(0u8) };\r\n  |                            ^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: source type: u8 (8 bits)\r\n  = note: target type: Foo (32 bits)\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0512`.\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n</details>", "closed_by": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52985/timeline", "performed_via_github_app": null, "state_reason": "completed"}