{"url": "https://api.github.com/repos/rust-lang/rust/issues/82188", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82188/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82188/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82188/events", "html_url": "https://github.com/rust-lang/rust/issues/82188", "id": 809472073, "node_id": "MDU6SXNzdWU4MDk0NzIwNzM=", "number": 82188, "title": "[Inquiry] Inconsistent binary size with 'cargo +stable build' vs 'cargo +1.50-x86_64-pc-windows-msvc' ?", "user": {"login": "eddyp", "id": 123772, "node_id": "MDQ6VXNlcjEyMzc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/123772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyp", "html_url": "https://github.com/eddyp", "followers_url": "https://api.github.com/users/eddyp/followers", "following_url": "https://api.github.com/users/eddyp/following{/other_user}", "gists_url": "https://api.github.com/users/eddyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyp/subscriptions", "organizations_url": "https://api.github.com/users/eddyp/orgs", "repos_url": "https://api.github.com/users/eddyp/repos", "events_url": "https://api.github.com/users/eddyp/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 1508600909, "node_id": "MDU6TGFiZWwxNTA4NjAwOTA5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-reproducibility", "name": "A-reproducibility", "color": "f7e101", "default": false, "description": "Area: Reproducible / Deterministic builds"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2021-02-16T16:39:53Z", "updated_at": "2021-02-26T04:35:58Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- Thanks for filing a \ud83d\udc1b bug report \ud83d\ude04! -->\r\n\r\n**Problem**\r\n<!-- A clear and concise description of what the bug is. -->\r\nI am not 100% sure this is a bug or expected, but while exploring https://github.com/rust-lang/rust/issues/75804, I have identified this inconsistency in the size of binaries of the same sources when using `+stable` vs `+1.50-x86_64-pc-windows-msvc`:\r\n\r\n<!-- including what currently happens and what you expected to happen. -->\r\n\r\nI would have expected that since the current stable is 1.50, `cargo +stable build`, `cargo +1.50-... build` and `cargo build` to yield the same results, but they don't.\r\n\r\nUnfortunately I can't share the actual tool sources, but I can share the deps list.\r\n\r\n**Steps**\r\n1. Use a script like the one below to do multiple builds on various versions (automation in cygwin)\r\n\r\n```bash\r\n# RUST_DBG_FLAGS='-C debuginfo=1 -C panic=abort -C opt-level=0'\r\n# RUST_REL_FLAGS='-C debuginfo=0 -C panic=abort -C opt-level=3'\r\n\r\nset -e -u\r\n\r\nBUILD=build\r\nMAIN=parser\r\n\r\ncargo -vV\r\nrustc -vV\r\n\r\nrustup toolchain list\r\nrustup override list\r\n\r\nmkdir -p ${BUILD}/debug\r\nmkdir -p ${BUILD}/release\r\nfor ver in 1.{45..50} beta nightly stable; do\r\n    echo \"-- $ver\"\r\n    for variant in release debug; do\r\n\r\n        if [ ${variant} == release ]; then\r\n            x_opt=--release\r\n        else\r\n            x_opt=\r\n        fi\r\n\r\n        bin=${BUILD}/${variant}/${MAIN}-${ver}.exe\r\n\r\n        cargo clean\r\n        cargo +$ver-x86_64-pc-windows-msvc build ${x_opt}\r\n        cp target/${variant}/${MAIN}.exe ${bin}\r\n        size=$(stat --printf=\"%s\" $bin)\r\n        printf \"    %s: %d\\n\" ${variant} $size\r\n    done\r\ndone\r\n\r\necho \"No params\"\r\ncargo clean\r\ncargo build\r\ncargo build --release\r\n\r\necho \"release\"\r\nls -lnG {target,build}/release/*.exe | cut -f4,8 -d ' '\r\necho \"debug\"\r\nls -lnG {target,build}/debug/*.exe | cut -f4,8 -d ' '\r\n```\r\n\r\n\r\n2. Run using cygwin's bash (WSL would use Linux's cargo and I haven't checked if it happens there)\r\n\r\n`c:\\tools\\cygwin64\\bin\\bash.exe build-all.sh`\r\n\r\n3. Note that stable and 1.50 yield different results, in spite 1.50 being the current stable.\r\n\r\n```cmd\r\nC:\\usr\\perso\\rust\\test-size\\parser>c:\\tools\\cygwin64\\bin\\bash.exe build-all.sh\r\ncargo 1.50.0 (f04e7fab7 2021-02-04)\r\nrelease: 1.50.0\r\ncommit-hash: f04e7fab73128592a4063983c302da788bdfaba5\r\ncommit-date: 2021-02-04\r\nrustc 1.50.0 (cb75ad5db 2021-02-10)\r\nbinary: rustc\r\ncommit-hash: cb75ad5db02783e8b0222fee363c5f63f7e2cf5b\r\ncommit-date: 2021-02-10\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.50.0\r\nstable-x86_64-pc-windows-msvc (default)\r\nbeta-x86_64-pc-windows-msvc\r\nnightly-x86_64-pc-windows-msvc\r\n1.45-x86_64-pc-windows-msvc\r\n1.46-x86_64-pc-windows-msvc\r\n1.47-x86_64-pc-windows-msvc\r\n1.48-x86_64-pc-windows-msvc\r\n1.49-x86_64-pc-windows-msvc\r\n1.50-x86_64-pc-windows-msvc\r\nC:\\usr\\src\\rust\\sbenitez-cs140e                 nightly-2018-01-09-x86_64-pc-windows-msvc\r\n-- 1.45\r\n   Compiling proc-macro2 v1.0.24\r\n   Compiling unicode-xid v0.2.1\r\n   Compiling ucd-trie v0.1.3\r\n   Compiling syn v1.0.60\r\n   Compiling maplit v1.0.2\r\n   Compiling unindent v0.1.7\r\n   Compiling pest v2.1.3\r\n   Compiling indoc v1.0.3\r\n   Compiling pest_meta v2.1.3\r\n   Compiling quote v1.0.9\r\n   Compiling pest_generator v2.1.3\r\n   Compiling pest_derive v2.1.0\r\n   Compiling parser v0.1.3 (C:\\usr\\perso\\rust\\test-size\\parser)\r\n    Finished release [optimized] target(s) in 25.78s\r\n    release: 171520\r\n[...]\r\nrelease\r\n171520 build/release/parser-1.45.exe\r\n172032 build/release/parser-1.46.exe\r\n172032 build/release/parser-1.47.exe\r\n165376 build/release/parser-1.48.exe\r\n167424 build/release/parser-1.49.exe\r\n169984 build/release/parser-1.50.exe\r\n167424 build/release/parser-beta.exe\r\n167936 build/release/parser-nightly.exe\r\n170496 build/release/parser-stable.exe\r\n170496 target/release/parser.exe\r\ndebug\r\n583680 build/debug/parser-1.45.exe\r\n577024 build/debug/parser-1.46.exe\r\n574464 build/debug/parser-1.47.exe\r\n573440 build/debug/parser-1.48.exe\r\n549376 build/debug/parser-1.49.exe\r\n546304 build/debug/parser-1.50.exe\r\n546816 build/debug/parser-beta.exe\r\n548864 build/debug/parser-nightly.exe\r\n547328 build/debug/parser-stable.exe\r\n547328 target/debug/parser.exe\r\n```\r\n\r\nNote how 1.50 versions have a different size than `+stable` and default on both release and debug builds.\r\n\r\n4. It seems that stable builds have some extra strings in them with paths to the %USERPROFILE%\\\\.rustup\\toolchains:\r\n\r\n```cmd\r\nC:\\usr\\perso\\rust\\test-size\\parser>strings build/release/parser-1.50.exe | grep '1.50.*'\r\n\r\nC:\\usr\\perso\\rust\\test-size\\parser>strings build/release/parser-1.50.exe | grep 'stable.*'\r\n\r\nC:\\usr\\perso\\rust\\test-size\\parser>strings build/release/parser-stable.exe | grep -o '1.50.*'\r\n\r\nC:\\usr\\perso\\rust\\test-size\\parser>strings build/release/parser-stable.exe | grep -o 'stable.*'\r\nstable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\alloc\\src\\collections\\btree\\map.rs\r\nstable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\io\\mod.rs\r\nstable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\slice\\mod.rs\r\nstable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\alloc\\src\\collections\\btree\\node.rs\r\nstable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\alloc\\src\\slice.rs\r\nstable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\str\\pattern.rsSpan\r\nstable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\alloc\\layout.rs\r\n```\r\n\r\nIs this expected?\r\n\r\n**Possible Solution(s)**\r\n<!-- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!-- or ideas how to implement the addition or change -->\r\n\r\n**Notes**\r\n\r\nOutput of `cargo version`:\r\n```\r\ncargo 1.50.0 (f04e7fab7 2021-02-04)\r\nrelease: 1.50.0\r\ncommit-hash: f04e7fab73128592a4063983c302da788bdfaba5\r\ncommit-date: 2021-02-04\r\n```\r\n\r\n<!-- Also, any additional context or information you feel may be relevant to the issue. -->\r\n<!-- (e.g rust version, OS platform/distribution/version, target toolchain(s), release channel.. -->\r\nOS and toolchain info above", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82188/timeline", "performed_via_github_app": null, "state_reason": null}