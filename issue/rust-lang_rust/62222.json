{"url": "https://api.github.com/repos/rust-lang/rust/issues/62222", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62222/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62222/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62222/events", "html_url": "https://github.com/rust-lang/rust/issues/62222", "id": 462230260, "node_id": "MDU6SXNzdWU0NjIyMzAyNjA=", "number": 62222, "title": "Multiple ICE when trying to compile const generic based method", "user": {"login": "maplant", "id": 712212, "node_id": "MDQ6VXNlcjcxMjIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/712212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maplant", "html_url": "https://github.com/maplant", "followers_url": "https://api.github.com/users/maplant/followers", "following_url": "https://api.github.com/users/maplant/following{/other_user}", "gists_url": "https://api.github.com/users/maplant/gists{/gist_id}", "starred_url": "https://api.github.com/users/maplant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maplant/subscriptions", "organizations_url": "https://api.github.com/users/maplant/orgs", "repos_url": "https://api.github.com/users/maplant/repos", "events_url": "https://api.github.com/users/maplant/events{/privacy}", "received_events_url": "https://api.github.com/users/maplant/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-28T22:40:25Z", "updated_at": "2020-01-24T12:21:24Z", "closed_at": "2020-01-24T12:21:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "This error is extremely similar to issue #62220. I figured I would post this one here as well because it gives a lot more errors. FTR I'm not even sure this code even typechecks, but multiple ICE is a compiler error regardless.\r\n\r\nI'm trying to compile the following code: \r\n```rust \r\n#[repr(transparent)]\r\npub struct Vector<T, const N: usize>([T; N]);\r\n\r\nimpl<T, const N: usize> Vector<T, {N}> {\r\n    pub fn x(self) -> T {\r\n        let mut head = MaybeUninit::<T>::uninit();\r\n        let mut tail = MaybeUninit::<[T; N - 1]>::uninit();\r\n        let mut from = MaybeUninit::new(self);\r\n        let tailp: *mut T = unsafe { mem::transmute(&mut tail) };\r\n        let fromp: *mut MaybeUninit<T> = unsafe { mem::transmute(&mut from) };\r\n        unsafe {\r\n            head.as_mut_ptr().write(\r\n                fromp\r\n                    .replace(MaybeUninit::uninit())\r\n                    .assume_init()\r\n            );\r\n        }\r\n        for i in 1..N {\r\n            unsafe {\r\n                tailp.add(i - 1).write(\r\n                    fromp\r\n                        .add(i)\r\n                        .replace(MaybeUninit::uninit())\r\n                        .assume_init()\r\n                );\r\n            }\r\n        }\r\n        unsafe { tail.assume_init(); } // Drop the tail\r\n        unsafe { head.assume_init() }\r\n    }\r\n}\r\n```\r\n\r\nThis produces the following errors:\r\n\r\n```\r\nerror: internal compiler error: constant in type had an ignored error: TooGeneric\r\n   --> src/lib.rs:246:24\r\n    |\r\n246 |         let mut tail = MaybeUninit::<[T; N - 1]>::uninit();\r\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: internal compiler error: constant in type had an ignored error: TooGeneric\r\n   --> src/lib.rs:246:24\r\n    |\r\n246 |         let mut tail = MaybeUninit::<[T; N - 1]>::uninit();\r\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: internal compiler error: constant in type had an ignored error: TooGeneric\r\n   --> src/lib.rs:248:38\r\n    |\r\n248 |         let tailp: *mut T = unsafe { mem::transmute(&mut tail) };\r\n    |                                      ^^^^^^^^^^^^^^\r\n\r\nerror: internal compiler error: constant in type had an ignored error: TooGeneric\r\n   --> src/lib.rs:267:18\r\n    |\r\n267 |         unsafe { tail.assume_init(); } // Drop the tail\r\n    |                  ^^^^^^^^^^^^^^^^^^\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:68 ~ aljabar[46f5]::{{impl}}[4]::x[0]) (CanonicalUserTypeAnnotation { user_ty: Canonical { max_universe: U0, variables: [CanonicalVarInfo { kind: Ty(General(U0)) }], value: TypeOf(DefId(2:1068 ~ core[d3cb]::mem[0]::maybe_uninit[0]::{{impl}}[1]::uninit[0]), UserSubsts { substs: [^0], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:1065 ~ core[d3cb]::mem[0]::maybe_uninit[0]::{{impl}}[1]), self_ty: std::mem::MaybeUninit<[T; _]> }) }) }, span: src/lib.rs:246:24: 246:57, inferred_ty: fn() -> std::mem::MaybeUninit<[T; _]> {std::mem::MaybeUninit::<[T; _]>::uninit} }): bad user type AscribeUserType(fn() -> std::mem::MaybeUninit<[T; _]> {std::mem::MaybeUninit::<[T; _]>::uninit}, DefId(2:1068 ~ core[d3cb]::mem[0]::maybe_uninit[0]::{{impl}}[1]::uninit[0]) UserSubsts { substs: [_], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:1065 ~ core[d3cb]::mem[0]::maybe_uninit[0]::{{impl}}[1]), self_ty: std::mem::MaybeUninit<[T; _]> }) }): NoSolution\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:68 ~ aljabar[46f5]::{{impl}}[4]::x[0]) (NoSolution): could not prove WellFormed(std::mem::MaybeUninit<[T; _]>)\r\n   --> src/lib.rs:246:13\r\n    |\r\n246 |         let mut tail = MaybeUninit::<[T; N - 1]>::uninit();\r\n    |             ^^^^^^^^\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:68 ~ aljabar[46f5]::{{impl}}[4]::x[0]) (NoSolution): could not prove WellFormed(&mut std::mem::MaybeUninit<[T; _]>)\r\n   --> src/lib.rs:248:53\r\n    |\r\n248 |         let tailp: *mut T = unsafe { mem::transmute(&mut tail) };\r\n    |                                                     ^^^^^^^^^\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:68 ~ aljabar[46f5]::{{impl}}[4]::x[0]) (NoSolution): could not prove WellFormed(std::mem::MaybeUninit<[T; _]>)\r\n   --> src/lib.rs:267:18\r\n    |\r\n267 |         unsafe { tail.assume_init(); } // Drop the tail\r\n    |                  ^^^^\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:68 ~ aljabar[46f5]::{{impl}}[4]::x[0]) (NoSolution): could not prove WellFormed([T; _])\r\n   --> src/lib.rs:267:18\r\n    |\r\n267 |         unsafe { tail.assume_init(); } // Drop the tail\r\n    |                  ^^^^\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src/librustc_errors/lib.rs:367:17\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.29/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.29/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:47\r\n   3: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:36\r\n   4: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   5: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:212\r\n   6: rustc::util::common::panic_hook\r\n   7: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:479\r\n   8: std::panicking::begin_panic\r\n   9: <rustc_errors::Handler as core::ops::drop::Drop>::drop\r\n  10: core::ptr::real_drop_in_place\r\n  11: <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop\r\n  12: core::ptr::real_drop_in_place\r\n  13: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  14: std::thread::local::LocalKey<T>::with\r\n  15: scoped_tls::ScopedKey<T>::set\r\n  16: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nquery stack during panic:\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.37.0-nightly (8ebd67e4e 2019-06-27) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n```", "closed_by": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62222/timeline", "performed_via_github_app": null, "state_reason": "completed"}