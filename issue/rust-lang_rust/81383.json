{"url": "https://api.github.com/repos/rust-lang/rust/issues/81383", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81383/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81383/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81383/events", "html_url": "https://github.com/rust-lang/rust/issues/81383", "id": 793398271, "node_id": "MDU6SXNzdWU3OTMzOTgyNzE=", "number": 81383, "title": "Tracking Issue for `option_result_unwrap_unchecked`", "user": {"login": "ojeda", "id": 1054456, "node_id": "MDQ6VXNlcjEwNTQ0NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1054456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ojeda", "html_url": "https://github.com/ojeda", "followers_url": "https://api.github.com/users/ojeda/followers", "following_url": "https://api.github.com/users/ojeda/following{/other_user}", "gists_url": "https://api.github.com/users/ojeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/ojeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ojeda/subscriptions", "organizations_url": "https://api.github.com/users/ojeda/orgs", "repos_url": "https://api.github.com/users/ojeda/repos", "events_url": "https://api.github.com/users/ojeda/events{/privacy}", "received_events_url": "https://api.github.com/users/ojeda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 919710011, "node_id": "MDU6TGFiZWw5MTk3MTAwMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/disposition-merge", "name": "disposition-merge", "color": "008800", "default": false, "description": "This issue / PR is in PFCP or FCP with a disposition to merge it."}, {"id": 923282386, "node_id": "MDU6TGFiZWw5MjMyODIzODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/finished-final-comment-period", "name": "finished-final-comment-period", "color": "f9e189", "default": false, "description": "The final comment period is finished for this PR / Issue."}, {"id": 2238600090, "node_id": "MDU6TGFiZWwyMjM4NjAwMDkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-result-option", "name": "A-result-option", "color": "f7e101", "default": false, "description": "Area: Result and Option combinators"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 30, "created_at": "2021-01-25T13:49:06Z", "updated_at": "2021-11-11T16:12:39Z", "closed_at": "2021-10-31T12:17:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Feature gate: `#![feature(option_result_unwrap_unchecked)]`\r\n\r\nThis is a tracking issue for the unchecked variants of `unwrap()` and `unwrap_err()` of `Option` and `Result`.\r\n\r\nThese are unsafe functions intended to be used in hot paths of performance sensitive applications where the variant an `Option`/`Result` holds is known, allowing to skip the branch that the safe version introduces. They complement other `*_unchecked()` methods already available, such as `get_unchecked()` in slices.\r\n\r\n### Public API\r\n\r\n```rust\r\nimpl<T> Option<T> {\r\n    pub unsafe fn unwrap_unchecked(self) -> T;\r\n}\r\n\r\nimpl<T, E> Result<T, E> {\r\n    pub unsafe fn unwrap_unchecked(self) -> T;\r\n    pub unsafe fn unwrap_err_unchecked(self) -> E;\r\n}\r\n```\r\n\r\n### Steps / History\r\n\r\n- [x] Implementation: #80876\r\n- [x] Stabilization report: https://github.com/rust-lang/rust/issues/81383#issuecomment-944498212\r\n- [x] Final commenting period (FCP): https://github.com/rust-lang/rust/issues/81383#issuecomment-945379226\r\n- [x] Stabilization PR: https://github.com/rust-lang/rust/pull/89951\r\n\r\n### Unresolved Questions\r\n\r\n- [x] Should we add `expect_unchecked`, and if yes, do it within another feature flag, to unblock `unwrap_unchecked`? https://github.com/rust-lang/rust/issues/81383#issuecomment-801492960\r\n  + It seems best to have it under another feature flag to avoid blocking this one.\r\n\r\n- [x] Should we panic on failure in debug (i.e. for those projects that build `core` themselves)? If yes, that would mean there is no way to actually remove the check for those projects, which could be potentially needed by someone. If we do, should it be documented? https://github.com/rust-lang/rust/issues/81383#issuecomment-824654722\r\n  + The current implementation uses `debug_assert!`, which may be useful for projects that build `core` with debug assertions enabled (e.g. the bors test suite or some embedded projects), but this is *not* documented, and indeed most users will not see such behavior, since `core` is shipped in release mode.\r\n  + Furthermore, since it is UB anyway, we have room for changing the implementation, e.g. if we end up distributing the standard library with debug assertions enabled for some use cases.\r\n\r\n- [x] Should we name them `unchecked_unwrap` instead? https://github.com/rust-lang/rust/issues/81383#issuecomment-942533948.\r\n  + The current name (`unwrap_unchecked`) follows the convention of other stable methods in the standard library such as `get_unchecked`, `map_unchecked`, `new_unchecked`, `unreachable_unchecked`... (see as well https://rust-lang.github.io/api-guidelines/naming.html#getter-names-follow-rust-convention-c-getter).\r\n  + On the other hand, the `unchecked_{add,...}` methods seem to follow the opposite convention, but those are unstable and they likely do it because the stable `{checked,...}_{add,...}` exist.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81383/reactions", "total_count": 4, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 3, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81383/timeline", "performed_via_github_app": null, "state_reason": "completed"}