{"url": "https://api.github.com/repos/rust-lang/rust/issues/55242", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55242/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55242/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55242/events", "html_url": "https://github.com/rust-lang/rust/issues/55242", "id": 372294374, "node_id": "MDU6SXNzdWUzNzIyOTQzNzQ=", "number": 55242, "title": "failed call to CommandExt::exec corrupts environ of calling process", "user": {"login": "mwhudson", "id": 672022, "node_id": "MDQ6VXNlcjY3MjAyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/672022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwhudson", "html_url": "https://github.com/mwhudson", "followers_url": "https://api.github.com/users/mwhudson/followers", "following_url": "https://api.github.com/users/mwhudson/following{/other_user}", "gists_url": "https://api.github.com/users/mwhudson/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwhudson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwhudson/subscriptions", "organizations_url": "https://api.github.com/users/mwhudson/orgs", "repos_url": "https://api.github.com/users/mwhudson/repos", "events_url": "https://api.github.com/users/mwhudson/events{/privacy}", "received_events_url": "https://api.github.com/users/mwhudson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-21T09:08:35Z", "updated_at": "2020-01-17T12:50:25Z", "closed_at": "2020-01-17T12:50:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm pretty new at rust so please forgive any bad terminology etc.\r\n\r\nHere's my test case:\r\n\r\n```rust\r\nuse std::env;\r\nuse std::process::Command;\r\nuse std::os::unix::process::CommandExt;\r\n\r\nfn main() {\r\n    let key = \"VAR\";\r\n    env::set_var(key, \"val1\");\r\n\r\n    match env::var(key) {\r\n        Ok(val) => println!(\"{}: {:?}\", key, val),\r\n        Err(e) => println!(\"couldn't interpret {}: {}\", key, e),\r\n    }\r\n\r\n    Command::new(\"does-not-exist\").env(key, \"val2\").exec();\r\n\r\n    match env::var(key) {\r\n        Ok(val) => println!(\"{}: {:?}\", key, val),\r\n        Err(e) => println!(\"couldn't interpret {}: {}\", key, e),\r\n    }\r\n}\r\n```\r\n\r\nRunning it (on Ubuntu 18.04 fwiw) I get:\r\n\r\n```\r\nmwhudson@ringil:~/tmp$ ./t\r\nVAR: \"val1\"\r\ncouldn't interpret VAR: environment variable not found\r\n```\r\n\r\nWhat happened? Well https://github.com/rust-lang/rust/blob/1.29.2/src/libstd/sys/unix/process/process_unix.rs#L197 happened:\r\n\r\n```rust\r\n    pub fn exec(&mut self, default: Stdio) -> io::Error {\r\n        let envp = self.capture_env();\r\n...\r\n        if let Some(envp) = maybe_envp {\r\n            *sys::os::environ() = envp.as_ptr();\r\n        }\r\n```\r\n\r\nThis overwrites the environ pointer on the assumption that the following call to exec succeeds and makes any effect on other code in process irrelevant, but if it fails nothing restores the \"right\" value. \r\n\r\nI found this because a cargo test that calls cargo run with a bogus runner configured segfaulted on exit sometimes, and this turned out to be because a shared library linked to cargo (gnutls) calls getenv in it's finalizer. Getting from there to the above took some serious time in gdb :)\r\n\r\nFor a fix, the easiest thing to be would be to call execvpe instead of execvp. But that's a GNU extension. Another option would be to call execve and do the PATH searching in library code. Or put the old environ pointer back if execvp returns but that seems kinda gross somehow.", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55242/timeline", "performed_via_github_app": null, "state_reason": "completed"}