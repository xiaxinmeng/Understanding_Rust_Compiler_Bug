{"url": "https://api.github.com/repos/rust-lang/rust/issues/45627", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45627/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45627/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45627/events", "html_url": "https://github.com/rust-lang/rust/issues/45627", "id": 269479368, "node_id": "MDU6SXNzdWUyNjk0NzkzNjg=", "number": 45627, "title": "Confusing lifetime error focusing on returned object lifetime rather than inference due to subsequent use", "user": {"login": "marcianx", "id": 370338, "node_id": "MDQ6VXNlcjM3MDMzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/370338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcianx", "html_url": "https://github.com/marcianx", "followers_url": "https://api.github.com/users/marcianx/followers", "following_url": "https://api.github.com/users/marcianx/following{/other_user}", "gists_url": "https://api.github.com/users/marcianx/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcianx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcianx/subscriptions", "organizations_url": "https://api.github.com/users/marcianx/orgs", "repos_url": "https://api.github.com/users/marcianx/repos", "events_url": "https://api.github.com/users/marcianx/events{/privacy}", "received_events_url": "https://api.github.com/users/marcianx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 693665463, "node_id": "MDU6TGFiZWw2OTM2NjU0NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-diagnostics", "name": "WG-diagnostics", "color": "c2e0c6", "default": false, "description": "Working group: diagnostics"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-30T04:34:26Z", "updated_at": "2017-12-07T03:44:12Z", "closed_at": "2017-12-07T01:52:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just spent over an hour in a much more complex example trying to work around lifetime issues because the error was pointing at the wrong mistake. When I figured it out, the problem and the fist was painfully obvious; I don't know whether anything can be done to improve the errors. Again, the actual code is far more complex and after a lot of trial and error, I finally got down to the dramatically simplified example until the underlying cause finally clicked.\r\n\r\n```rust\r\n#[derive(Copy, Clone, PartialEq, Eq)]\r\npub struct Source<'a>(&'a str);\r\n\r\npub fn combine<'b, 'c>(\r\n    first: &fn() -> Source<'b>,\r\n    second: &fn() -> Source<'c>,\r\n) -> Option<Source<'b>> {\r\n    let loc1 = first();\r\n    let loc2 = second();\r\n    if loc1 == loc2 {\r\n        Some(loc1)\r\n    } else {\r\n        None\r\n    }\r\n}\r\n```\r\n[Playground](https://play.rust-lang.org/?gist=a5bf522b0c5d1852db82ec40f1f58cb1&version=stable)\r\n\r\nError\r\n```\r\n   Compiling playground v0.0.1 (file:///playground)\r\nerror[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\r\n --> src/main.rs:9:16\r\n  |\r\n9 |     let loc2 = second();\r\n  |                ^^^^^^^^\r\n  |\r\nnote: first, the lifetime cannot outlive the lifetime 'c as defined on the function body at 4:1...\r\n --> src/main.rs:4:1\r\n  |\r\n4 | / pub fn combine<'b, 'c>(\r\n5 | |     first: &fn() -> Source<'b>,\r\n6 | |     second: &fn() -> Source<'c>,\r\n7 | | ) -> Option<Source<'b>> {\r\n... |\r\n14| |     }\r\n15| | }\r\n  | |_^\r\nnote: ...so that expression is assignable (expected Source<'_>, found Source<'c>)\r\n --> src/main.rs:9:16\r\n  |\r\n9 |     let loc2 = second();\r\n  |                ^^^^^^^^\r\nnote: but, the lifetime must be valid for the lifetime 'b as defined on the function body at 4:1...\r\n --> src/main.rs:4:1\r\n  |\r\n4 | / pub fn combine<'b, 'c>(\r\n5 | |     first: &fn() -> Source<'b>,\r\n6 | |     second: &fn() -> Source<'c>,\r\n7 | | ) -> Option<Source<'b>> {\r\n... |\r\n14| |     }\r\n15| | }\r\n  | |_^\r\nnote: ...so that expression is assignable (expected std::option::Option<Source<'b>>, found std::option::Option<Source<'_>>)\r\n --> src/main.rs:11:9\r\n  |\r\n11|         Some(loc1)\r\n  |         ^^^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\nSee if you can figure out without the hints.\r\n\r\n**Hint 1:** Replacing `Source<'a>` with `&'a str` works.\r\n\r\n**Hint 2:** Look at the issue title again.\r\n\r\n**Hint 3:** Removing the `if` conditional also makes it compile.\r\n\r\n**Answer:** The real problem is not at `second()` where most of my efforts at comprehending the compiler's mental model were (again, in a far more complex example). It's that the auto-derived `PartialEq` cannot compare two `Source` objects with unrelated lifetimes, as I do in `if loc1 == loc2` which is not mentioned in any of the error messages whatsoever. I just had to implement a more general `PartialEq`: `impl<a, b> PartialEq<Source<'b>> for Source<'a>` to get this working.", "closed_by": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45627/timeline", "performed_via_github_app": null, "state_reason": "completed"}