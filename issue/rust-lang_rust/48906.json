{"url": "https://api.github.com/repos/rust-lang/rust/issues/48906", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48906/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48906/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48906/events", "html_url": "https://github.com/rust-lang/rust/issues/48906", "id": 304055147, "node_id": "MDU6SXNzdWUzMDQwNTUxNDc=", "number": 48906, "title": "bootstrap should set optimization level when calculating cflags", "user": {"login": "comex", "id": 47517, "node_id": "MDQ6VXNlcjQ3NTE3", "avatar_url": "https://avatars.githubusercontent.com/u/47517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comex", "html_url": "https://github.com/comex", "followers_url": "https://api.github.com/users/comex/followers", "following_url": "https://api.github.com/users/comex/following{/other_user}", "gists_url": "https://api.github.com/users/comex/gists{/gist_id}", "starred_url": "https://api.github.com/users/comex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comex/subscriptions", "organizations_url": "https://api.github.com/users/comex/orgs", "repos_url": "https://api.github.com/users/comex/repos", "events_url": "https://api.github.com/users/comex/events{/privacy}", "received_events_url": "https://api.github.com/users/comex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-10T09:00:14Z", "updated_at": "2018-03-16T16:44:14Z", "closed_at": "2018-03-16T16:44:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`bootstrap/builder.rs` uses cc-rs to get a list of cflags for the target, which it then passes to `cargo build` as `CFLAGS_<target>`.  As of alexcrichton/cc-rs#294, the flags can depend on the optimization level: on iOS, with optimization disabled it passes `-fembed-bitcode -fembed-bitcode-marker`, but with optimization enabled it passes only `-fembed-bitcode`.  However, bootstrap seems to always pass `-fembed-bitcode-marker`.\r\n\r\nNote that some of the crates in the build, such as libcompiler_builtins and libbacktrace, use cc-rs themselves, causing a second set of cflags to be appended to the cc command line, identical except for respecting the optimization level.  This seems odd, although it doesn't seem to cause any problems in itself.\r\n\r\nExample build log:\r\n```\r\nOPT_LEVEL = Some(\"2\")\r\nTARGET = Some(\"aarch64-apple-ios\")\r\nCC_aarch64-apple-ios = Some(\"cc\")\r\nCFLAGS_aarch64-apple-ios = Some(\"-fPIC -arch arm64\r\n-miphoneos-version-min=7.0 -isysroot\r\n/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS11.3.sdk\r\n-fembed-bitcode -fembed-bitcode-marker\")\r\nDetecting iOS SDK path for iphoneos\r\nrunning: \"cc\" \"-O2\" \"-fPIC\" \"-fPIC\" \"-arch\" \"arm64\"\r\n\"-miphoneos-version-min=7.0\" \"-isysroot\"\r\n\"/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS11.3.sdk\"\r\n\"-fembed-bitcode\" \"-fembed-bitcode-marker\" \"-arch\" \"arm64\"\r\n\"-miphoneos-version-min=7.0\" \"-isysroot\"\r\n\"/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS11.3.sdk\"\r\n\"-fembed-bitcode\" \"-fno-builtin\" \"-fvisibility=hidden\" \"-ffreestanding\"\r\n\"-fomit-frame-pointer\" \"-DVISIBILITY_HIDDEN\" \"-o\"\r\n\"/tmp/build/x86_64-apple-darwin/stage2-std/aarch64-apple-ios/release/build/compiler_builtins-d5d18ec9ecb6ca67/out/../../libcompiler_builtins/compiler-rt/lib/builtins/absvdi2.o\"\r\n\"-c\" \"../../libcompiler_builtins/compiler-rt/lib/builtins/absvdi2.c\"\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48906/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48906/timeline", "performed_via_github_app": null, "state_reason": "completed"}