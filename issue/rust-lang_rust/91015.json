{"url": "https://api.github.com/repos/rust-lang/rust/issues/91015", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91015/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91015/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91015/events", "html_url": "https://github.com/rust-lang/rust/issues/91015", "id": 1057477258, "node_id": "I_kwDOAAsO6M4_B9KK", "number": 91015, "title": "ICE: attempted to read from stolen value: rustc_middle::mir::Body', compiler/rustc_mir_transform/src/check_unsafety.rs:445:36", "user": {"login": "billyb2", "id": 45850508, "node_id": "MDQ6VXNlcjQ1ODUwNTA4", "avatar_url": "https://avatars.githubusercontent.com/u/45850508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/billyb2", "html_url": "https://github.com/billyb2", "followers_url": "https://api.github.com/users/billyb2/followers", "following_url": "https://api.github.com/users/billyb2/following{/other_user}", "gists_url": "https://api.github.com/users/billyb2/gists{/gist_id}", "starred_url": "https://api.github.com/users/billyb2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/billyb2/subscriptions", "organizations_url": "https://api.github.com/users/billyb2/orgs", "repos_url": "https://api.github.com/users/billyb2/repos", "events_url": "https://api.github.com/users/billyb2/events{/privacy}", "received_events_url": "https://api.github.com/users/billyb2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-11-18T15:18:13Z", "updated_at": "2023-05-01T08:59:21Z", "closed_at": "2023-05-01T08:59:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\npub struct LightsResource {\r\n    positions: [Vec2; 32],\r\n    destruction_timers: [Option<(LightDestructionTimer, bool)>; 32],\r\n    used_indexes: ArrayVec<usize, 32>,\r\n    available_indexes: ArrayVec<usize, 32>,\r\n\r\n}\r\n\r\n\r\nimpl LightsResource {\r\n    pub fn new() -> Self {\r\n        Self {\r\n            positions: [Vec2::ZERO; 32],\r\n            // Timer doesn't implement Copy, so I need to manually init the array :(\r\n            destruction_timers: [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None],\r\n            used_indexes: ArrayVec::new(),\r\n            available_indexes: ArrayVec::from([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]),\r\n        }\r\n    }\r\n\r\n    pub fn add_light_from_coords(&mut self, position: Vec2) -> LightHandle {\r\n        // Move a value from available indexes to used indexes\r\n        let index = self.available_indexes.pop().unwrap();\r\n        println!(\"Adding {}\", index);\r\n\r\n        self.used_indexes.push(index);\r\n\r\n        self.positions[index] = position;\r\n        self.destruction_timers[index] = None;\r\n\r\n        LightHandle::new(index)\r\n\r\n    }\r\n\r\n    pub fn add_light(&mut self, position: Vec2, destruction_timer: LightDestructionTimer, should_fade: bool) -> LightHandle {\r\n        // Move a value from available indexes to used indexes\r\n        let index = self.available_indexes.pop().unwrap();\r\n        //println!(\"Adding {}\", index);\r\n\r\n        self.used_indexes.push(index);\r\n\r\n        self.positions[index] = position;\r\n        self.destruction_timers[index] = Some((destruction_timer, should_fade));\r\n\r\n        LightHandle::new(index)\r\n\r\n    }\r\n\r\n    /// Make sure to remove or change the LightHandle for the entity as well\r\n    pub fn remove_light(&mut self, handle: &LightHandle) {\r\n        let index = handle.to_index();\r\n\r\n        // Finds the index of the handle, then removes it\r\n        let index_of_handle = self.used_indexes.iter().position(|u_index| *u_index == index).unwrap();\r\n\r\n        self.used_indexes.swap_remove(index_of_handle);\r\n        self.available_indexes.push(index);\r\n\r\n    }\r\n\r\n    // Copies every used position into the slice, returning the number of bytes written\r\n    pub fn copy_pos_into_slice(&self, slice: &mut [Vec2]) -> usize {\r\n        let mut num_bytes_written: usize = 0;\r\n\r\n        slice.iter_mut().zip(self.used_indexes.iter()).for_each(|(dest, index)| {\r\n            *dest = *self.positions.get(*index).unwrap();\r\n            num_bytes_written += 1;\r\n\r\n        });\r\n\r\n        num_bytes_written\r\n\r\n    }\r\n\r\n    // Clones every used timer into the slice, returning the number of bytes written\r\n    pub fn clone_timers_into_slice(&self, slice: &mut [Option<(LightDestructionTimer, bool)>]) -> usize {\r\n        let mut num_bytes_written: usize = 0;\r\n\r\n        slice.iter_mut().zip(self.used_indexes.iter()).for_each(|(dest, index)| {\r\n            *dest = (*self.destruction_timers.get(*index).unwrap()).clone();\r\n            num_bytes_written += 1;\r\n\r\n        });\r\n\r\n        num_bytes_written\r\n\r\n    }\r\n\r\n    pub fn len(&self) -> usize {\r\n        self.used_indexes.len()\r\n\r\n    }\r\n\r\n    pub fn modify_light_pos(&mut self, handle: &LightHandle) -> Option<&mut Vec2> {\r\n        let index = handle.to_index();\r\n\r\n        println!(\"Mod {}\", index);\r\n\r\n        debug_assert!(self.used_indexes.contains(&index));\r\n\r\n        self.positions.get_mut(index)\r\n    }\r\n\r\n    pub fn modify_destruction_timer(&mut self, handle: &LightHandle) -> Option<&mut Option<(LightDestructionTimer, bool)>> {\r\n        let index = handle.to_index();\r\n\r\n        debug_assert!(self.used_indexes.contains(&index));\r\n\r\n        self.destruction_timers.get_mut(index)\r\n    }\r\n\r\n    pub fn light_in_use(&self, handle: &LightHandle) -> bool {\r\n        let index = handle.to_index();\r\n\r\n        self.used_indexes.contains(&index)\r\n\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\nI can't use the stable compiler, since I rely on some nightly only features\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.58.0-nightly (ad4423997 2021-11-14)\r\nbinary: rustc\r\ncommit-hash: ad442399756573dccacb314b6bf8079964bcc72a\r\ncommit-date: 2021-11-14\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.58.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'attempted to read from stolen value: rustc_middle::mir::Body', compiler/rustc_mir_transform/src/check_unsafety.rs:445:36\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: rustc 1.58.0-nightly (ad4423997 2021-11-14) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z share-generics=y -Z strip=symbols -Z share-generics=y -C opt-level=3 -C embed-bitcode=no -C debuginfo=0 -C debug-assertions=on -C overflow-checks=off -C linker=/usr/bin/clang -C incremental -C link-arg=-fuse-ld=lld -C target-cpu=x86-64-v3 -C prefer-dynamic -C link-arg=-fuse-ld=lld --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [unsafety_check_result] unsafety-checking `graphics::<impl at crates/game_types/src/graphics.rs:239:1: 347:2>::remove_light::{closure#0}`\r\n#1 [unsafety_check_result] unsafety-checking `graphics::<impl at crates/game_types/src/graphics.rs:239:1: 347:2>::remove_light`\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0:     0x7f34b211313c - std::backtrace_rs::backtrace::libunwind::trace::h793e05efd273d0f4\r\n                               at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7f34b211313c - std::backtrace_rs::backtrace::trace_unsynchronized::h640b7b86ff610c77\r\n                               at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f34b211313c - std::sys_common::backtrace::_print_fmt::h362fa2a4f354f877\r\n                               at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x7f34b211313c - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hf439e5ed84c74abd\r\n                               at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x7f34b217037c - core::fmt::write::h72801a82c94e6ff1\r\n                               at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/core/src/fmt/mod.rs:1149:17\r\n   5:     0x7f34b21038d5 - std::io::Write::write_fmt::h5562a8b6da0f0339\r\n                               at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/std/src/io/mod.rs:1697:15\r\n   6:     0x7f34b2116390 - std::sys_common::backtrace::_print::hb29ddd998d02631c\r\n                               at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x7f34b2116390 - std::sys_common::backtrace::print::h81965e3d7c90fbb6\r\n                               at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x7f34b2116390 - std::panicking::default_hook::{{closure}}::h84db205ab6674b38\r\n                               at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/std/src/panicking.rs:211:50\r\n   9:     0x7f34b2115f3b - std::panicking::default_hook::h1bf8bb4159936bca\r\n                               at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/std/src/panicking.rs:228:9\r\n  10:     0x7f34b28ac781 - rustc_driver[e620c7401644acc4]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n  11:     0x7f34b2116ba9 - std::panicking::rust_panic_with_hook::hf8e86850fbbd03b1\r\n                               at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/std/src/panicking.rs:610:17\r\n  12:     0x7f34b2116660 - std::panicking::begin_panic_handler::{{closure}}::h590a0d6060ff866e\r\n                               at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/std/src/panicking.rs:502:13\r\n  13:     0x7f34b21135f4 - std::sys_common::backtrace::__rust_end_short_backtrace::h260b8bd1c848a03c\r\n                               at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/std/src/sys_common/backtrace.rs:139:18\r\n  14:     0x7f34b21165c9 - rust_begin_unwind\r\n                               at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/std/src/panicking.rs:498:5\r\n  15:     0x7f34b20db631 - core::panicking::panic_fmt::h7b8580d81fcbbacd\r\n                               at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/core/src/panicking.rs:106:14\r\n  16:     0x7f34b3c089d4 - rustc_mir_transform[84d977a3cfe7a6c6]::check_unsafety::unsafety_check_result\r\n  17:     0x7f34b3c03ded - <rustc_mir_transform[84d977a3cfe7a6c6]::check_unsafety::provide::{closure#0} as core[cc79c391059f8e46]::ops::function::FnOnce<(rustc_middle[93690e4789d7fe1d]::ty::context::TyCtxt, rustc_span[2d5555579096f1fe]::def_id::LocalDefId)>>::call_once\r\n  18:     0x7f34b32ccb7d - <rustc_middle[93690e4789d7fe1d]::dep_graph::dep_node::DepKind as rustc_query_system[efb192c4209e4e11]::dep_graph::DepKind>::with_deps::<rustc_query_system[efb192c4209e4e11]::query::plumbing::try_load_from_disk_and_cache_in_memory<rustc_query_impl[e405c240d479aca8]::plumbing::QueryCtxt, rustc_span[2d5555579096f1fe]::def_id::LocalDefId, &rustc_middle[93690e4789d7fe1d]::mir::query::UnsafetyCheckResult>::{closure#0}, &rustc_middle[93690e4789d7fe1d]::mir::query::UnsafetyCheckResult>\r\n  19:     0x7f34b4c34270 - rustc_query_system[efb192c4209e4e11]::query::plumbing::try_load_from_disk_and_cache_in_memory::<rustc_query_impl[e405c240d479aca8]::plumbing::QueryCtxt, rustc_span[2d5555579096f1fe]::def_id::LocalDefId, &rustc_middle[93690e4789d7fe1d]::mir::query::UnsafetyCheckResult>\r\n  20:     0x7f34b416b18b - rustc_query_system[efb192c4209e4e11]::query::plumbing::try_execute_query::<rustc_query_impl[e405c240d479aca8]::plumbing::QueryCtxt, rustc_query_system[efb192c4209e4e11]::query::caches::DefaultCache<rustc_span[2d5555579096f1fe]::def_id::LocalDefId, &rustc_middle[93690e4789d7fe1d]::mir::query::UnsafetyCheckResult>>\r\n  21:     0x7f34b41fdce1 - <rustc_query_impl[e405c240d479aca8]::Queries as rustc_middle[93690e4789d7fe1d]::ty::query::QueryEngine>::unsafety_check_result\r\n  22:     0x7f34b3c0be24 - rustc_mir_transform[84d977a3cfe7a6c6]::check_unsafety::unsafety_check_result\r\n  23:     0x7f34b3c03ded - <rustc_mir_transform[84d977a3cfe7a6c6]::check_unsafety::provide::{closure#0} as core[cc79c391059f8e46]::ops::function::FnOnce<(rustc_middle[93690e4789d7fe1d]::ty::context::TyCtxt, rustc_span[2d5555579096f1fe]::def_id::LocalDefId)>>::call_once\r\n  24:     0x7f34b4cd23f3 - <rustc_query_system[efb192c4209e4e11]::dep_graph::graph::DepGraph<rustc_middle[93690e4789d7fe1d]::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle[93690e4789d7fe1d]::ty::context::TyCtxt, rustc_span[2d5555579096f1fe]::def_id::LocalDefId, &rustc_middle[93690e4789d7fe1d]::mir::query::UnsafetyCheckResult>\r\n  25:     0x7f34b4c997fe - rustc_data_structures[8eb9d08fbf3883e5]::stack::ensure_sufficient_stack::<(&rustc_middle[93690e4789d7fe1d]::mir::query::UnsafetyCheckResult, rustc_query_system[efb192c4209e4e11]::dep_graph::graph::DepNodeIndex), rustc_query_system[efb192c4209e4e11]::query::plumbing::execute_job<rustc_query_impl[e405c240d479aca8]::plumbing::QueryCtxt, rustc_span[2d5555579096f1fe]::def_id::LocalDefId, &rustc_middle[93690e4789d7fe1d]::mir::query::UnsafetyCheckResult>::{closure#3}>\r\n  26:     0x7f34b416b2bb - rustc_query_system[efb192c4209e4e11]::query::plumbing::try_execute_query::<rustc_query_impl[e405c240d479aca8]::plumbing::QueryCtxt, rustc_query_system[efb192c4209e4e11]::query::caches::DefaultCache<rustc_span[2d5555579096f1fe]::def_id::LocalDefId, &rustc_middle[93690e4789d7fe1d]::mir::query::UnsafetyCheckResult>>\r\n  27:     0x7f34b4bb06f8 - rustc_query_system[efb192c4209e4e11]::query::plumbing::force_query::<rustc_query_impl[e405c240d479aca8]::queries::unsafety_check_result, rustc_query_impl[e405c240d479aca8]::plumbing::QueryCtxt>\r\n  28:     0x7f34b4cabde1 - rustc_query_impl[e405c240d479aca8]::query_callbacks::unsafety_check_result::force_from_dep_node\r\n  29:     0x7f34b4fc8b91 - <rustc_middle[93690e4789d7fe1d]::ty::context::TyCtxt as rustc_query_system[efb192c4209e4e11]::dep_graph::DepContext>::try_force_from_dep_node\r\n  30:     0x7f34b420ac5c - <rustc_query_system[efb192c4209e4e11]::dep_graph::graph::DepGraph<rustc_middle[93690e4789d7fe1d]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[e405c240d479aca8]::plumbing::QueryCtxt>\r\n  31:     0x7f34b420a0c5 - <rustc_query_system[efb192c4209e4e11]::dep_graph::graph::DepGraph<rustc_middle[93690e4789d7fe1d]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[e405c240d479aca8]::plumbing::QueryCtxt>\r\n  32:     0x7f34b420a0c5 - <rustc_query_system[efb192c4209e4e11]::dep_graph::graph::DepGraph<rustc_middle[93690e4789d7fe1d]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[e405c240d479aca8]::plumbing::QueryCtxt>\r\n  33:     0x7f34b4150026 - rustc_query_system[efb192c4209e4e11]::query::plumbing::ensure_must_run::<rustc_query_impl[e405c240d479aca8]::plumbing::QueryCtxt, rustc_span[2d5555579096f1fe]::def_id::LocalDefId, &rustc_middle[93690e4789d7fe1d]::ty::context::TypeckResults>\r\n  34:     0x7f34b41fe32c - <rustc_query_impl[e405c240d479aca8]::Queries as rustc_middle[93690e4789d7fe1d]::ty::query::QueryEngine>::mir_borrowck\r\n  35:     0x7f34b3ae2a97 - <rustc_middle[93690e4789d7fe1d]::hir::map::Map>::par_body_owners::<rustc_interface[f89f8228a4e35bc7]::passes::analysis::{closure#2}::{closure#0}>\r\n  36:     0x7f34b47814d8 - <rustc_session[cec017cef00f19c9]::session::Session>::time::<(), rustc_interface[f89f8228a4e35bc7]::passes::analysis::{closure#2}>\r\n  37:     0x7f34b475dae5 - rustc_interface[f89f8228a4e35bc7]::passes::analysis\r\n  38:     0x7f34b4cee6f0 - <rustc_query_system[efb192c4209e4e11]::dep_graph::graph::DepGraph<rustc_middle[93690e4789d7fe1d]::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle[93690e4789d7fe1d]::ty::context::TyCtxt, (), core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>\r\n  39:     0x7f34b4c948b3 - rustc_data_structures[8eb9d08fbf3883e5]::stack::ensure_sufficient_stack::<(core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>, rustc_query_system[efb192c4209e4e11]::dep_graph::graph::DepNodeIndex), rustc_query_system[efb192c4209e4e11]::query::plumbing::execute_job<rustc_query_impl[e405c240d479aca8]::plumbing::QueryCtxt, (), core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>::{closure#3}>\r\n  40:     0x7f34b4bf4b46 - rustc_query_system[efb192c4209e4e11]::query::plumbing::try_execute_query::<rustc_query_impl[e405c240d479aca8]::plumbing::QueryCtxt, rustc_query_system[efb192c4209e4e11]::query::caches::DefaultCache<(), core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>>\r\n  41:     0x7f34b4c5cd05 - rustc_query_system[efb192c4209e4e11]::query::plumbing::get_query::<rustc_query_impl[e405c240d479aca8]::queries::analysis, rustc_query_impl[e405c240d479aca8]::plumbing::QueryCtxt>\r\n  42:     0x7f34b474d809 - <rustc_interface[f89f8228a4e35bc7]::passes::QueryContext>::enter::<rustc_driver[e620c7401644acc4]::run_compiler::{closure#1}::{closure#2}::{closure#3}, core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>\r\n  43:     0x7f34b473b634 - <rustc_interface[f89f8228a4e35bc7]::interface::Compiler>::enter::<rustc_driver[e620c7401644acc4]::run_compiler::{closure#1}::{closure#2}, core[cc79c391059f8e46]::result::Result<core[cc79c391059f8e46]::option::Option<rustc_interface[f89f8228a4e35bc7]::queries::Linker>, rustc_errors[c8a333c965fedc03]::ErrorReported>>\r\n  44:     0x7f34b472c5cd - rustc_span[2d5555579096f1fe]::with_source_map::<core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>, rustc_interface[f89f8228a4e35bc7]::interface::create_compiler_and_run<core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>, rustc_driver[e620c7401644acc4]::run_compiler::{closure#1}>::{closure#1}>\r\n  45:     0x7f34b474cb7a - rustc_interface[f89f8228a4e35bc7]::interface::create_compiler_and_run::<core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>, rustc_driver[e620c7401644acc4]::run_compiler::{closure#1}>\r\n  46:     0x7f34b472ff7b - <scoped_tls[3fea4c3dcac147b1]::ScopedKey<rustc_span[2d5555579096f1fe]::SessionGlobals>>::set::<rustc_interface[f89f8228a4e35bc7]::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface[f89f8228a4e35bc7]::interface::run_compiler<core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>, rustc_driver[e620c7401644acc4]::run_compiler::{closure#1}>::{closure#0}, core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>::{closure#0}::{closure#0}, core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>\r\n  47:     0x7f34b472f095 - std[a5529df289459975]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[f89f8228a4e35bc7]::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface[f89f8228a4e35bc7]::interface::run_compiler<core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>, rustc_driver[e620c7401644acc4]::run_compiler::{closure#1}>::{closure#0}, core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>::{closure#0}, core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>\r\n  48:     0x7f34b472b162 - <<std[a5529df289459975]::thread::Builder>::spawn_unchecked<rustc_interface[f89f8228a4e35bc7]::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface[f89f8228a4e35bc7]::interface::run_compiler<core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>, rustc_driver[e620c7401644acc4]::run_compiler::{closure#1}>::{closure#0}, core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>::{closure#0}, core[cc79c391059f8e46]::result::Result<(), rustc_errors[c8a333c965fedc03]::ErrorReported>>::{closure#1} as core[cc79c391059f8e46]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  49:     0x7f34b2121e93 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h771719d52c343434\r\n                               at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/alloc/src/boxed.rs:1694:9\r\n  50:     0x7f34b2121e93 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hf441746dfa4b0f57\r\n                               at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/alloc/src/boxed.rs:1694:9\r\n  51:     0x7f34b2121e93 - std::sys::unix::thread::Thread::new::thread_start::hfd168f9d312b29ca\r\n                               at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/std/src/sys/unix/thread.rs:106:17\r\n  52:     0x7f34b2039259 - start_thread\r\n  53:     0x7f34b1f465e3 - __GI___clone\r\n  54:                0x0 - <unknown>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91015/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91015/timeline", "performed_via_github_app": null, "state_reason": "completed"}