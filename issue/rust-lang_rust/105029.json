{"url": "https://api.github.com/repos/rust-lang/rust/issues/105029", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105029/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105029/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105029/events", "html_url": "https://github.com/rust-lang/rust/issues/105029", "id": 1467026901, "node_id": "I_kwDOAAsO6M5XcQ3V", "number": 105029, "title": "Unhelpful \"type annotations needed\" when it seems like rustc should know the type", "user": {"login": "sersorrel", "id": 9433472, "node_id": "MDQ6VXNlcjk0MzM0NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/9433472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sersorrel", "html_url": "https://github.com/sersorrel", "followers_url": "https://api.github.com/users/sersorrel/followers", "following_url": "https://api.github.com/users/sersorrel/following{/other_user}", "gists_url": "https://api.github.com/users/sersorrel/gists{/gist_id}", "starred_url": "https://api.github.com/users/sersorrel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sersorrel/subscriptions", "organizations_url": "https://api.github.com/users/sersorrel/orgs", "repos_url": "https://api.github.com/users/sersorrel/repos", "events_url": "https://api.github.com/users/sersorrel/events{/privacy}", "received_events_url": "https://api.github.com/users/sersorrel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-28T20:10:00Z", "updated_at": "2022-11-28T21:01:03Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nI can't trivially reproduce this on the playground since I guess it depends on the funky [`DebounceEventHandler`](https://docs.rs/notify-debouncer-mini/latest/notify_debouncer_mini/trait.DebounceEventHandler.html) trait stuff that notify-debouncer-mini (which isn't on the playground) does; the following code is available at https://github.com/sersorrel/sd/tree/bad-rust-diagnostic.\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\nuse std::{path::PathBuf, time::Duration};\r\n\r\n#[derive(Debug)]\r\nenum Event {\r\n    NewScreenshot(PathBuf),\r\n    Exit,\r\n}\r\n\r\nfn main() {\r\n    notify_debouncer_mini::new_debouncer(Duration::from_millis(500), None, move |r| match r {\r\n        Ok(events) => {\r\n            for event in events {\r\n                Event::NewScreenshot(event.path);\r\n            }\r\n        }\r\n        Err(errors) => todo!(),\r\n    })\r\n    .unwrap();\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\n$ cargo run\r\n   Compiling sd v0.1.0 (/home/ash/src/sd)\r\nerror[E0282]: type annotations needed\r\n  --> src/main.rs:15:38\r\n   |\r\n15 |                 Event::NewScreenshot(event.path);\r\n   |                                      ^^^^^ cannot infer type\r\n\r\nFor more information about this error, try `rustc --explain E0282`.\r\nerror: could not compile `sd` due to previous error\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like: well, I guess \"something that tells me why rustc can't tell what the type is\"*; my editor's (rust-analyzer-powered) inlay hints can certainly tell that `r` is a `Result<Vec<DebouncedEvent>, \u2026>`, and that `events` and `event` are the obvious unwrappings of that, but through application of e.g. `let x: () = r`, it seems like rustc thinks that `r` is... a `Result<_, _>`??\r\n\r\nThis feels particularly weird because even if rustc doesn't already know, somehow, that `event.path` is a PathBuf, it should presumably be able to see that I'm trying to put it in a PathBuf-shaped hole (in Event::NewScreenshot)...\r\n\r\n*alternatively \"a suggested fix\" would be ok, though without generalised type ascription I guess this is tricky\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n\r\nI see the same diagnostic on nightly (`cargo 1.67.0-nightly (ba607b23d 2022-11-22)`).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105029/timeline", "performed_via_github_app": null, "state_reason": null}