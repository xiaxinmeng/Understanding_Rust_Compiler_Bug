{"url": "https://api.github.com/repos/rust-lang/rust/issues/61930", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61930/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61930/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61930/events", "html_url": "https://github.com/rust-lang/rust/issues/61930", "id": 457441085, "node_id": "MDU6SXNzdWU0NTc0NDEwODU=", "number": 61930, "title": "Should warn when calling blanket implementation of a method rather than our own", "user": {"login": "gdesmott", "id": 1379524, "node_id": "MDQ6VXNlcjEzNzk1MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1379524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gdesmott", "html_url": "https://github.com/gdesmott", "followers_url": "https://api.github.com/users/gdesmott/followers", "following_url": "https://api.github.com/users/gdesmott/following{/other_user}", "gists_url": "https://api.github.com/users/gdesmott/gists{/gist_id}", "starred_url": "https://api.github.com/users/gdesmott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gdesmott/subscriptions", "organizations_url": "https://api.github.com/users/gdesmott/orgs", "repos_url": "https://api.github.com/users/gdesmott/repos", "events_url": "https://api.github.com/users/gdesmott/events{/privacy}", "received_events_url": "https://api.github.com/users/gdesmott/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-18T12:05:21Z", "updated_at": "2019-06-18T12:10:51Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The following snippet crashes:\r\n```\r\nthread 'main' has overflowed its stack\r\nfatal runtime error: stack overflow\r\nAborted (core dumped)\r\n```\r\n\r\n```rust\r\nuse std::fmt;\r\n\r\nstruct Badger;\r\n\r\nimpl Badger {\r\n    fn to_string<'a>(self) -> &'a str {\r\n        \"badger\"\r\n    }\r\n}\r\n\r\nimpl fmt::Display for Badger {\r\n    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {\r\n        f.write_str(&self.to_string())\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let b = Badger {};\r\n    println!(\"{}\", b);\r\n}\r\n```\r\n\r\n`fmt()` calls the blanket implementation of `ToString`, which is using `Display`, instead of our own implementation resulting in an infinite recursion.\r\n\r\nWe wouldn't have the problem if our function was taking `&self` but that's still pretty confusing and prone to errors. It would be good to have at least a warning (or a clippy lint?) for such patterns.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61930/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61930/timeline", "performed_via_github_app": null, "state_reason": null}