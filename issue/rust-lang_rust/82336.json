{"url": "https://api.github.com/repos/rust-lang/rust/issues/82336", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82336/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82336/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82336/events", "html_url": "https://github.com/rust-lang/rust/issues/82336", "id": 812663347, "node_id": "MDU6SXNzdWU4MTI2NjMzNDc=", "number": 82336, "title": "[ER] Three Vec functions", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-02-20T17:08:02Z", "updated_at": "2021-02-20T22:04:09Z", "closed_at": "2021-02-20T22:04:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some member functions that could be added to Vec:\r\n\r\nThis is similar to `Vec::remove` but like `Vec::pop` it returns an `Option`, avoiding panics:\r\n\r\n```rust\r\npub fn Vec::pop_index(&mut self, index: usize) -> Option<T>;\r\n```\r\n\r\n(In alternative `Vec::pop_front` could often suffice).\r\n\r\n- - - - - - - - - - - - - -\r\n\r\nProbably this was already suggested elsewhere:\r\n\r\n```rust\r\npub unsafe fn get_debug<I>(&self, index: I) -> &<I as SliceIndex<[T]>>::Output;\r\npub unsafe fn get_debug_mut<I>(&mut self, index: I) -> &mut <I as SliceIndex<[T]>>::Output;\r\n```\r\n\r\nThey contain a `debug_assert!()` to test the bounds only in debug builds. I think such `debug_assert` can't be added to `get_unchecked`/`get_unchecked_mut` because the semantics is different. They are unsafe, but they add a bit of safety during debug runs.", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82336/timeline", "performed_via_github_app": null, "state_reason": "completed"}