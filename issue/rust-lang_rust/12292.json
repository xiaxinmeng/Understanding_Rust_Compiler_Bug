{"url": "https://api.github.com/repos/rust-lang/rust/issues/12292", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/12292/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/12292/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/12292/events", "html_url": "https://github.com/rust-lang/rust/issues/12292", "id": 27648777, "node_id": "MDU6SXNzdWUyNzY0ODc3Nw==", "number": 12292, "title": "serialize::Decodable decode() should return a IoResult/DecodeResult?", "user": {"login": "mneumann", "id": 34112, "node_id": "MDQ6VXNlcjM0MTEy", "avatar_url": "https://avatars.githubusercontent.com/u/34112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mneumann", "html_url": "https://github.com/mneumann", "followers_url": "https://api.github.com/users/mneumann/followers", "following_url": "https://api.github.com/users/mneumann/following{/other_user}", "gists_url": "https://api.github.com/users/mneumann/gists{/gist_id}", "starred_url": "https://api.github.com/users/mneumann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mneumann/subscriptions", "organizations_url": "https://api.github.com/users/mneumann/orgs", "repos_url": "https://api.github.com/users/mneumann/repos", "events_url": "https://api.github.com/users/mneumann/events{/privacy}", "received_events_url": "https://api.github.com/users/mneumann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2014-02-15T13:08:16Z", "updated_at": "2014-03-28T08:36:48Z", "closed_at": "2014-03-28T08:36:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Decoding can fail in the same way as any IO operation or any <code>read_xxx()</code> function in trait <code>Reader</code>. So should the <code>serialize::Decodable</code> trait, no? Otherwise, we again depend on using <code>task::try</code> for decoding data structures. \n\nMy proposal is to change the signature of trait <code>Decodable</code> to something like:\n\n``` rust\npub type DecodeResult<T> = Result<T, &str>;\n\npub trait Decodable<D: Decoder> {\n    fn decode(d: &mut D) -> DecodeResult<Self>;\n}\n```\n\nLikewise, the trait <code>serialize::Decoder</code> must be changed to return <code>DecodeResult</code>s as well.\n\nThis of course comes with a slight performance penalty in the non-error case. \n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/12292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/12292/timeline", "performed_via_github_app": null, "state_reason": "completed"}