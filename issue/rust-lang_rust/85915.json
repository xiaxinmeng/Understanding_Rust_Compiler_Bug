{"url": "https://api.github.com/repos/rust-lang/rust/issues/85915", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85915/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85915/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85915/events", "html_url": "https://github.com/rust-lang/rust/issues/85915", "id": 908661810, "node_id": "MDU6SXNzdWU5MDg2NjE4MTA=", "number": 85915, "title": "rustc struggles to recognize legal vectors-of-pointers", "user": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 631737389, "node_id": "MDU6TGFiZWw2MzE3MzczODk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-simd", "name": "A-simd", "color": "f7e101", "default": false, "description": "Area: SIMD (Single Instruction Multiple Data)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-06-01T20:27:51Z", "updated_at": "2021-06-05T08:42:02Z", "closed_at": "2021-06-05T08:42:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "rustc has trouble recognizing legal {tuples,arrays} of pointers for `#[repr(simd)]` to use.\r\n\r\n### What Does Work\r\nThe following is an example of a vector-of-pointers type that works.\r\n```rust\r\n#![feature(repr_simd)]\r\n#[derive(Copy, Clone, Debug)]\r\n#[repr(simd)]\r\npub struct ptrx2<T>(T, T);\r\n\r\nfn main() {\r\n    let v = vec![2, 3, 4];\r\n    let x = ptrx2(v.as_ptr(), v.as_ptr());\r\n}\r\n```\r\nNote that the pointer-ness here is only determined during monomorphization.  This does not follow the same pattern as e.g. `*const T` being parameterized over `<T>`.\r\n\r\n### What Does Not Work\r\nAttempts to define things like these give me errors.\r\n```rust\r\n#[repr(simd)]\r\npub struct ptrx2<T>(*const T, *const T);\r\n```\r\nor, in particular, the inciting incident:\r\n```rust\r\n#[repr(simd)]\r\nstruct SimdConst<T, const LANES: usize>([*const T; LANES]);\r\n```\r\n\r\nI expected rustc to recognize a legal definition of a vector-of-pointers and proceed to monomorphize it.\r\nInstead, this happened:\r\n```rust\r\nerror[E0077]: SIMD vector element type should be a primitive scalar (integer/float/pointer) type\r\n  --> crates\\core_simd\\src\\array.rs:76:1\r\n   |\r\n76 | struct SimdConst<T, const LANES: usize>([*const T; LANES]);\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.54.0-nightly (9111b8ae9 2021-05-26)\r\nbinary: rustc\r\ncommit-hash: 9111b8ae9793f18179a1336417618fc07a9cac85\r\ncommit-date: 2021-05-26\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.54.0-nightly\r\nLLVM version: 12.0.1\r\n```\r\n\r\n\r\n### Likely Causes\r\nThis is likely caused by the clauses in https://github.com/rust-lang/rust/blob/7f9ab0300cd66f6f616e03ea90b2d71af474bf28/compiler/rustc_typeck/src/check/check.rs#L1217-L1222\r\n\r\nA parameter is accepted, but not a pointer, even though `&T` and `*const T` (but not `&[T]` or `fn() -> ()`) are valid inputs to that parameter (i.e. they monomorphize successfully).\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85915/timeline", "performed_via_github_app": null, "state_reason": "completed"}