{"url": "https://api.github.com/repos/rust-lang/rust/issues/27949", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/27949/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/27949/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/27949/events", "html_url": "https://github.com/rust-lang/rust/issues/27949", "id": 102576564, "node_id": "MDU6SXNzdWUxMDI1NzY1NjQ=", "number": 27949, "title": "`==` operator does not support subtyping", "user": {"login": "daboross", "id": 1152146, "node_id": "MDQ6VXNlcjExNTIxNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1152146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daboross", "html_url": "https://github.com/daboross", "followers_url": "https://api.github.com/users/daboross/followers", "following_url": "https://api.github.com/users/daboross/following{/other_user}", "gists_url": "https://api.github.com/users/daboross/gists{/gist_id}", "starred_url": "https://api.github.com/users/daboross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daboross/subscriptions", "organizations_url": "https://api.github.com/users/daboross/orgs", "repos_url": "https://api.github.com/users/daboross/repos", "events_url": "https://api.github.com/users/daboross/events{/privacy}", "received_events_url": "https://api.github.com/users/daboross/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-08-23T00:20:18Z", "updated_at": "2019-02-25T14:48:57Z", "closed_at": "2019-02-25T14:48:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here's an example showing this behavior:\n\n``` rust\nstruct Input<'a> {\n    foo: &'a u32\n}\n\nimpl <'a> std::cmp::PartialEq<Input<'a>> for Input<'a> {\n    fn eq(&self, other: &Input<'a>) -> bool {\n        self.foo == other.foo\n    }\n\n    fn ne(&self, other: &Input<'a>) -> bool {\n        self.foo != other.foo\n    }\n}\n\n\n// same error if no lifetime parameters are used, but I'm using explicit lifetime parameters to try to show the actual error\nfn bar<'a, 'b>(x: Input<'a>, y: Input<'b>) -> bool {\n    x == y\n}\n```\n\n(https://play.rust-lang.org/?gist=c7b5d06f19fd345eef91)\n\nErrors with:\n\n```\n<anon>:17:5: 17:11 error: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n<anon>:17     x == y\n              ^~~~~~\n<anon>:16:1: 18:2 help: consider using an explicit lifetime parameter as shown: fn bar<'a>(x: Input<'a>, y: Input<'a>) -> bool\n<anon>:16 fn bar(x: Input, y: Input) -> bool {\n<anon>:17     x == y\n<anon>:18 }\nerror: aborting due to previous error\n```\n\nUsing `impl <'a, 'b> std::cmp::PartialEq<Input<'b>> for Input<'a>` works, but it is confusing why the below allows lifetime elision while the above doesn't. I would think it would make sense for the rust compiler to merge the minimum of two lifetimes (`'a` and `'b`) automatically when using `==` if PartialEq is only implemented for one shared lifetime.\n\n``` rust\nimpl <'a, 'b> std::cmp::PartialEq<Input<'b>> for Input<'a> {\n    fn eq(&self, other: &Input<'b>) -> bool {\n        self.foo == other.foo\n    }\n\n    fn ne(&self, other: &Input<'b>) -> bool {\n        self.foo != other.foo\n    }\n}\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/27949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/27949/timeline", "performed_via_github_app": null, "state_reason": "completed"}