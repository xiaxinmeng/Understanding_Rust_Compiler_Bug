{"url": "https://api.github.com/repos/rust-lang/rust/issues/31079", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/31079/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/31079/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/31079/events", "html_url": "https://github.com/rust-lang/rust/issues/31079", "id": 127973259, "node_id": "MDU6SXNzdWUxMjc5NzMyNTk=", "number": 31079, "title": "[MIR] Implement calls to intrinsics", "user": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-21T17:12:00Z", "updated_at": "2016-04-03T23:43:58Z", "closed_at": "2016-04-03T23:34:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently compiling code like\n\n``` rust\n#[rustc_mir(pretty=\"mir\")]\nfn mir(f: f32) -> bool {\n    unsafe {\n        ::std::mem::transmute(true)\n    }\n}\n```\n\nfails with failure to monomorphize it:\n\n``````\nerror: internal compiler error: can't monomorphize a NodeForeignItem(ForeignItem { name: transmute(70), attrs: [Spanned { node: Attribute_ { id: AttrId(1367), style: Outer, value: Spanned { node: MetaNameValue(\"doc\", Spanned { node: LitStr(\"/// Unsafely transforms a value of one type into a value of another type.\", CookedStr), span: src/libcore/intrinsics.rs:133:17: 134:33 }), span: src/libcore/intrinsics.rs:260:5: 260:78 }, is_sugared_doc: true }, span: src/libcore/intrinsics.rs:260:5: 260:78 }, Spanned { node: Attribute_ { id: AttrId(1368), style: Outer, value: Spanned { node: MetaNameValue(\"doc\", Spanned { node: LitStr(\"///\", CookedStr), span: src/libcore/intrinsics.rs:134:38: 134:41 }), span: src/libcore/intrinsics.rs:261:5: 261:8 }, is_sugared_doc: true }, span: src/libcore/intrinsics.rs:261:5: 261:8 }, Spanned { node: Attribute_ { id: AttrId(1369), style: Outer, value: Spanned { node: MetaNameValue(\"doc\", Spanned { node: LitStr(\"/// Both types must have the same size.\", CookedStr), span: src/libcore/intrinsics.rs:134:46: 135:28 }), span: src/libcore/intrinsics.rs:262:5: 262:44 }, is_sugared_doc: true }, span: src/libcore/intrinsics.rs:262:5: 262:44 }, Spanned { node: Attribute_ { id: AttrId(1370), style: Outer, value: Spanned { node: MetaNameValue(\"doc\", Spanned { node: LitStr(\"///\", CookedStr), span: src/libcore/intrinsics.rs:135:33: 135:36 }), span: src/libcore/intrinsics.rs:263:5: 263:8 }, is_sugared_doc: true }, span: src/libcore/intrinsics.rs:263:5: 263:8 }, Spanned { node: Attribute_ { id: AttrId(1371), style: Outer, value: Spanned { node: MetaNameValue(\"doc\", Spanned { node: LitStr(\"/// # Examples\", CookedStr), span: src/libcore/intrinsics.rs:135:41: 135:55 }), span: src/libcore/intrinsics.rs:264:5: 264:19 }, is_sugared_doc: true }, span: src/libcore/intrinsics.rs:264:5: 264:19 }, Spanned { node: Attribute_ { id: AttrId(1372), style: Outer, value: Spanned { node: MetaNameValue(\"doc\", Spanned { node: LitStr(\"///\", CookedStr), span: src/libcore/intrinsics.rs:135:60: 136:3 }), span: src/libcore/intrinsics.rs:265:5: 265:8 }, is_sugared_doc: true }, span: src/libcore/intrinsics.rs:265:5: 265:8 }, Spanned { node: Attribute_ { id: AttrId(1373), style: Outer, value: Spanned { node: MetaNameValue(\"doc\", Spanned { node: LitStr(\"/// ```\", CookedStr), span: src/libcore/intrinsics.rs:136:8: 136:15 }), span: src/libcore/intrinsics.rs:266:5: 266:12 }, is_sugared_doc: true }, span: src/libcore/intrinsics.rs:266:5: 266:12 }, Spanned { node: Attribute_ { id: AttrId(1374), style: Outer, value: Spanned { node: MetaNameValue(\"doc\", Spanned { node: LitStr(\"/// use std::mem;\", CookedStr), span: src/libcore/intrinsics.rs:136:20: 136:37 }), span: src/libcore/intrinsics.rs:267:5: 267:22 }, is_sugared_doc: true }, span: src/libcore/intrinsics.rs:267:5: 267:22 }, Spanned { node: Attribute_ { id: AttrId(1375), style: Outer, value: Spanned { node: MetaNameValue(\"doc\", Spanned { node: LitStr(\"///\", CookedStr), span: src/libcore/intrinsics.rs:136:42: 136:45 }), span: src/libcore/intrinsics.rs:268:5: 268:8 }, is_sugared_doc: true }, span: src/libcore/intrinsics.rs:268:5: 268:8 }, Spanned { node: Attribute_ { id: AttrId(1376), style: Outer, value: Spanned { node: MetaNameValue(\"doc\", Spanned { node: LitStr(\"/// let array: &[u8] = unsafe { mem::transmute(\\\"Rust\\\") };\", CookedStr), span: src/libcore/intrinsics.rs:136:50: 141:16 }), span: src/libcore/intrinsics.rs:269:5: 269:62 }, is_sugared_doc: true }, span: src/libcore/intrinsics.rs:269:5: 269:62 }, Spanned { node: Attribute_ { id: AttrId(1377), style: Outer, value: Spanned { node: MetaNameValue(\"doc\", Spanned { node: LitStr(\"/// assert_eq!(array, [82, 117, 115, 116]);\", CookedStr), span: src/libcore/intrinsics.rs:141:21: 143:6 }), span: src/libcore/intrinsics.rs:270:5: 270:48 }, is_sugared_doc: true }, span: src/libcore/intrinsics.rs:270:5: 270:48 }, Spanned { node: Attribute_ { id: AttrId(1378), style: Outer, value: Spanned { node: MetaNameValue(\"doc\", Spanned { node: LitStr(\"/// ```\", CookedStr), span: src/libcore/intrinsics.rs:143:11: 143:18 }), span: src/libcore/intrinsics.rs:271:5: 271:12 }, is_sugared_doc: true }, span: src/libcore/intrinsics.rs:271:5: 271:12 }, Spanned { node: Attribute_ { id: AttrId(1379), style: Outer, value: Spanned { node: MetaList(\"stable\", [Spanned { node: MetaNameValue(\"feature\", Spanned { node: LitStr(\"rust1\", CookedStr), span: src/libcore/intrinsics.rs:144:11: 144:18 }), span: src/libcore/intrinsics.rs:272:14: 272:32 }, Spanned { node: MetaNameValue(\"since\", Spanned { node: LitStr(\"1.0.0\", CookedStr), span: src/libcore/intrinsics.rs:144:28: 145:1 }), span: src/libcore/intrinsics.rs:272:33: 272:49 }]), span: src/libcore/intrinsics.rs:272:7: 272:50 }, is_sugared_doc: false }, span: src/libcore/intrinsics.rs:272:5: 272:50 }], node: ForeignItemFn(FnDecl { inputs: [Arg { ty: type(T), pat: pat(55: e), id: 54 }], output: Return(type(U)), variadic: false }, Generics { lifetimes: [], ty_params: [TyParam { name: T(1152), id: 58, bounds: [], default: None, span: src/libcore/intrinsics.rs:146:24: 146:25 }, TyParam { name: U(2889), id: 59, bounds: [], default: None, span: src/libcore/intrinsics.rs:146:27: 146:28 }], where_clause: WhereClause { id: 60, predicates: [] } }), id: 53, span: src/libcore/intrinsics.rs:273:5: 273:39, vis: Public })\n``````\n", "closed_by": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/31079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/31079/timeline", "performed_via_github_app": null, "state_reason": "completed"}