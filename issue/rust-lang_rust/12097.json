{"url": "https://api.github.com/repos/rust-lang/rust/issues/12097", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/12097/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/12097/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/12097/events", "html_url": "https://github.com/rust-lang/rust/issues/12097", "id": 27176701, "node_id": "MDU6SXNzdWUyNzE3NjcwMQ==", "number": 12097, "title": "Building rustc without using the system defaults", "user": {"login": "marcbowes", "id": 15209, "node_id": "MDQ6VXNlcjE1MjA5", "avatar_url": "https://avatars.githubusercontent.com/u/15209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcbowes", "html_url": "https://github.com/marcbowes", "followers_url": "https://api.github.com/users/marcbowes/followers", "following_url": "https://api.github.com/users/marcbowes/following{/other_user}", "gists_url": "https://api.github.com/users/marcbowes/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcbowes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcbowes/subscriptions", "organizations_url": "https://api.github.com/users/marcbowes/orgs", "repos_url": "https://api.github.com/users/marcbowes/repos", "events_url": "https://api.github.com/users/marcbowes/events{/privacy}", "received_events_url": "https://api.github.com/users/marcbowes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-02-07T21:47:47Z", "updated_at": "2014-06-01T07:48:39Z", "closed_at": "2014-06-01T07:48:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There are use-cases where one might want to build `rustc` from source without having the build process use the default system gcc/glibc.\n\nRight now, I can't see a way to achieve this with a flag. One possible solution is to create a wrapper script for the stage0 rustc which calls the real stage0 rustc with `--link-args`, `--linker` and so forth.\n\nThe reason I don't like this is it essentially involves a prebuild/patch step - these are usually quite brittle and difficult to maintain.\n\nA possible future solution might be to have some env var, `STAGE0_FLAGS` or similar, which one could export before running `make`.\n\n/cc @cmr \n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/12097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/12097/timeline", "performed_via_github_app": null, "state_reason": "completed"}