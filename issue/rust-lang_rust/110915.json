{"url": "https://api.github.com/repos/rust-lang/rust/issues/110915", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110915/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110915/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110915/events", "html_url": "https://github.com/rust-lang/rust/issues/110915", "id": 1687425075, "node_id": "I_kwDOAAsO6M5klBAz", "number": 110915, "title": "Unexpected recursive decl-macro expansion", "user": {"login": "moulins", "id": 10963458, "node_id": "MDQ6VXNlcjEwOTYzNDU4", "avatar_url": "https://avatars.githubusercontent.com/u/10963458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moulins", "html_url": "https://github.com/moulins", "followers_url": "https://api.github.com/users/moulins/followers", "following_url": "https://api.github.com/users/moulins/following{/other_user}", "gists_url": "https://api.github.com/users/moulins/gists{/gist_id}", "starred_url": "https://api.github.com/users/moulins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moulins/subscriptions", "organizations_url": "https://api.github.com/users/moulins/orgs", "repos_url": "https://api.github.com/users/moulins/repos", "events_url": "https://api.github.com/users/moulins/events{/privacy}", "received_events_url": "https://api.github.com/users/moulins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-04-27T19:19:20Z", "updated_at": "2023-04-28T06:49:22Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "**Tested on:** 1.71 nightly 1c42cb4ef0544fbfaa50\r\n\r\nThe following code:\r\n\r\n```rust\r\n\r\ntrait WithLt<'a> {\r\n    type Output: 'a;\r\n}\r\n\r\nmacro_rules! WithLt {\r\n    ($($ty:tt)*) => {\r\n        dyn for<'__lt> WithLt<'__lt, Output =\r\n            __WithLt!([$($ty)*] [])\r\n        >\r\n    };\r\n}\r\n\r\nmacro_rules! __WithLt {\r\n    // Replace '_ with '__lt.\r\n    (['_ $($tail:tt)*] [$($out:tt)*]) => {\r\n        __WithLt!([$($tail)*] [$($out)* '__lt])\r\n    };\r\n    // Recurse inside ()'s.\r\n    ([ ($($tts:tt)*) $($tail:tt)*] [$($out:tt)*]) => {\r\n        __WithLt!([$($tail)*] [\r\n            $($out)* ( __WithLt!([$($tts)*] []) )\r\n        ])\r\n    };\r\n    // Default case: do nothing.\r\n    ([$tok:tt $($tail:tt)*] [$($out:tt)*]) => {\r\n        __WithLt!([$($tail)*] [$($out)* $tok])\r\n    };\r\n    // Finished: output result.\r\n    ([] [$($out:tt)*]) => { $($out)* };\r\n}\r\n\r\n// Should expand to:\r\n// `type Test = for<'__lt> dyn WithLt<'__lt, Output=(&'__lt u32, &'__lt i32)>`\r\ntype Test = WithLt![(&'_ u32, &'_ i32)];\r\n```\r\nProduces the following error:\r\n```rust\r\nerror: macro expansion ignores token `,` and any following\r\n  --> src/lib.rs:35:29\r\n   |\r\n27 |         __WithLt!([$($tail)*] [$($out)* $tok])\r\n   |         -------------------------------------- caused by the macro expansion here\r\n...\r\n35 | type Test = WithLt![(&'_ u32, &'_ i32)];\r\n   |                             ^\r\n   |\r\n   = note: the usage of `__WithLt!` is likely invalid in type context\r\n\r\nwarning: unnecessary parentheses around type\r\n  --> src/lib.rs:30:30\r\n   |\r\n30 |     ([] [$($out:tt)*]) => { $($out)* };\r\n   |                              ^^^^^^\r\n...\r\n35 | type Test = WithLt![(&'_ u32, &'_ i32)];\r\n   |             --------------------------- in this macro invocation\r\n   |\r\n   = note: `#[warn(unused_parens)]` on by default\r\n   = note: this warning originates in the macro `__WithLt` which comes from the expansion of the macro `WithLt` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n```\r\n\r\nDumping the expanded code with `cargo expand` gives:\r\n```rust\r\ntype Test = dyn for<'__lt> WithLt<'__lt, Output = (&'__lt u32)>;\r\n```\r\nconfirming that the macro stopped expanding at the first `,`.\r\n\r\nHowever, using the unstable `trace_macros` feature, we see what seems to be a complete expansion:\r\n\r\n<details><summary>Trace macro output</summary><p>\r\n\r\n```rust\r\nnote: trace_macro\r\n  --> src/main.rs:38:17\r\n   |\r\n38 |     type Test = WithLt![(&'_ u32, &'_ i32)];\r\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: expanding `WithLt! { (& '_ u32, & '_ i32) }`\r\n   = note: to `dyn for < '__lt > WithLt < '__lt, Output = __WithLt!\r\n           ([(& '_ u32, & '_ i32)] []) >`\r\n   = note: expanding `__WithLt! { [(& '_ u32, & '_ i32)] [] }`\r\n   = note: to `__WithLt! ([] [(__WithLt! ([& '_ u32, & '_ i32] []))])`\r\n   = note: expanding `__WithLt! { [] [(__WithLt! ([& '_ u32, & '_ i32] []))] }`\r\n   = note: to `(__WithLt! ([& '_ u32, & '_ i32] []))`\r\n   = note: expanding `__WithLt! { [& '_ u32, & '_ i32] [] }`\r\n   = note: to `__WithLt! (['_ u32, & '_ i32] [&])`\r\n   = note: expanding `__WithLt! { ['_ u32, & '_ i32] [&] }`\r\n   = note: to `__WithLt! ([u32, & '_ i32] [& '__lt])`\r\n   = note: expanding `__WithLt! { [u32, & '_ i32] [& '__lt] }`\r\n   = note: to `__WithLt! ([, & '_ i32] [& '__lt u32])`\r\n   = note: expanding `__WithLt! { [, & '_ i32] [& '__lt u32] }`\r\n   = note: to `__WithLt! ([& '_ i32] [& '__lt u32,])`\r\n   = note: expanding `__WithLt! { [& '_ i32] [& '__lt u32,] }`\r\n   = note: to `__WithLt! (['_ i32] [& '__lt u32, &])`\r\n   = note: expanding `__WithLt! { ['_ i32] [& '__lt u32, &] }`\r\n   = note: to `__WithLt! ([i32] [& '__lt u32, & '__lt])`\r\n   = note: expanding `__WithLt! { [i32] [& '__lt u32, & '__lt] }`\r\n   = note: to `__WithLt! ([] [& '__lt u32, & '__lt i32])`\r\n   = note: expanding `__WithLt! { [] [& '__lt u32, & '__lt i32] }`\r\n   = note: to `& '__lt u32, & '__lt i32`\r\n```\r\n\r\n</p></details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110915/timeline", "performed_via_github_app": null, "state_reason": null}