{"url": "https://api.github.com/repos/rust-lang/rust/issues/28766", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/28766/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/28766/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/28766/events", "html_url": "https://github.com/rust-lang/rust/issues/28766", "id": 109147474, "node_id": "MDU6SXNzdWUxMDkxNDc0NzQ=", "number": 28766, "title": "Compiler segfaults when boxing a ZST from an external crate", "user": {"login": "kylewlacy", "id": 1362179, "node_id": "MDQ6VXNlcjEzNjIxNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1362179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylewlacy", "html_url": "https://github.com/kylewlacy", "followers_url": "https://api.github.com/users/kylewlacy/followers", "following_url": "https://api.github.com/users/kylewlacy/following{/other_user}", "gists_url": "https://api.github.com/users/kylewlacy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylewlacy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylewlacy/subscriptions", "organizations_url": "https://api.github.com/users/kylewlacy/orgs", "repos_url": "https://api.github.com/users/kylewlacy/repos", "events_url": "https://api.github.com/users/kylewlacy/events{/privacy}", "received_events_url": "https://api.github.com/users/kylewlacy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}], "state": "closed", "locked": false, "assignee": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2015-09-30T18:06:16Z", "updated_at": "2016-01-17T14:17:20Z", "closed_at": "2016-01-17T14:17:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Demonstration\n\nI uploaded a repo with the simplest possible case I could come up with that demonstrates this issue [here](https://github.com/kylewlacy/rust-segfault). Here's how it works:\n\n``` sh\n$ rustc --version --verbose\n    rustc 1.4.0-dev (d2e13e822 2015-09-15)\n    binary: rustc\n    commit-hash: d2e13e822a73e0ea46ae9e21afdd3155fc997f6d\n    commit-date: 2015-09-15\n    host: x86_64-apple-darwin\n    release: 1.4.0-dev\n$ git clone https://github.com/kylewlacy/rust-segfault.git\n$ cd rust-segfault\n$ cargo build --release --verbose\n   Compiling my_crate v0.1.0 (file:///Users/kyle/Desktop/rust-segfault)\n     Running `rustc my_crate/src/lib.rs --crate-name my_crate --crate-type lib -C opt-level=3 -C metadata=ab97f46dd8433ebe -C extra-filename=-ab97f46dd8433ebe --out-dir /Users/kyle/Desktop/rust-segfault/target/release/deps --emit=dep-info,link -L dependency=/Users/kyle/Desktop/rust-segfault/target/release/deps -L dependency=/Users/kyle/Desktop/rust-segfault/target/release/deps`\n   Compiling segfault v0.1.0 (file:///Users/kyle/Desktop/rust-segfault)\n     Running `rustc src/lib.rs --crate-name segfault --crate-type lib -C opt-level=3 --out-dir /Users/kyle/Desktop/rust-segfault/target/release --emit=dep-info,link -L dependency=/Users/kyle/Desktop/rust-segfault/target/release -L dependency=/Users/kyle/Desktop/rust-segfault/target/release/deps --extern my_crate=/Users/kyle/Desktop/rust-segfault/target/release/deps/libmy_crate-ab97f46dd8433ebe.rlib`\nCould not compile `segfault`.\n\nCaused by:\n  Process didn't exit successfully: `rustc src/lib.rs --crate-name segfault --crate-type lib -C opt-level=3 --out-dir /Users/kyle/Desktop/rust-segfault/target/release --emit=dep-info,link -L dependency=/Users/kyle/Desktop/rust-segfault/target/release -L dependency=/Users/kyle/Desktop/rust-segfault/target/release/deps --extern my_crate=/Users/kyle/Desktop/rust-segfault/target/release/deps/libmy_crate-ab97f46dd8433ebe.rlib` (signal: 11)\n```\n# Explanation\n\nSo I have a crate in my project, brilliantly named `my_crate`. `my_crate` is pretty simple, it contains a struct, called `Foo`, made up of zero-sized types. `Foo` also has a constructor function called `Foo::new()`:\n\n``` rust\n// my_crate/lib.rs\npub struct Foo(());\n\nimpl Foo {\n    fn new() -> Self {\n        Foo(())\n    }\n}\n```\n\nNow, in my library, `segfault`, I have a single function, called `box_foo()`, that just returns a `Box<Foo>`. It constructs a `Foo`, then boxes it:\n\n``` rust\n// segfault/lib.rs\nextern crate my_crate;\nuse my_crate::Foo;\n\npub fn box_foo() -> Box<Foo> {\n    Box::new(Foo::new())\n}\n```\n\nWell, that's about it. Building `segfault` and `my_crate` with `cargo build` works perfectly fine. However, `cargo build --release` crashes with a signal 11, a segfault.\n# Some observations\n- `Foo` must be a zero-sized type, but cannot be a unit struct\n- `Foo` must be constructed with a function (e.g `Box::new(Foo(())` would not segfault)\n- `Foo` must be from another crate\n- The segfault only occurs if `box_foo()` is public (otherwise it's dead code, and I guess `rustc` doesn't even attempt to compile it?)\n- The segfault only occurs when optimizing the outer library\n- The optimization level doesn't matter, it just has to be >0\n- The constructor fn doesn't have to be in `impl Foo`, but it does have to come from `my_crate`\n- The fn that creates the box has to be in the outer library (e.g. `let boxed: Box<Foo> = Foo::new_box();` would not segfault)\n- Using a newtype in place of `Foo` has the same issue\n- The crash is not caused by _returning_ a `Box<Foo>`, but by _constructing_ one with `Box::new`. That is, the following also causes a segfault:\n\n``` rust\npub fn foo_ptr_mut() -> *mut Foo {\n    let boxed = Box::new(Foo::new());\n    Box::into_raw(boxed)\n}\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/28766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/28766/timeline", "performed_via_github_app": null, "state_reason": "completed"}