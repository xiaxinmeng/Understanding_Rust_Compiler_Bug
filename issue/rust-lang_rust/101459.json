{"url": "https://api.github.com/repos/rust-lang/rust/issues/101459", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/101459/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/101459/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/101459/events", "html_url": "https://github.com/rust-lang/rust/issues/101459", "id": 1362285262, "node_id": "I_kwDOAAsO6M5RMtLO", "number": 101459, "title": "Phrasing of E0507 is ambiguous with regards to moved variables", "user": {"login": "dvogel", "id": 45699, "node_id": "MDQ6VXNlcjQ1Njk5", "avatar_url": "https://avatars.githubusercontent.com/u/45699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvogel", "html_url": "https://github.com/dvogel", "followers_url": "https://api.github.com/users/dvogel/followers", "following_url": "https://api.github.com/users/dvogel/following{/other_user}", "gists_url": "https://api.github.com/users/dvogel/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvogel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvogel/subscriptions", "organizations_url": "https://api.github.com/users/dvogel/orgs", "repos_url": "https://api.github.com/users/dvogel/repos", "events_url": "https://api.github.com/users/dvogel/events{/privacy}", "received_events_url": "https://api.github.com/users/dvogel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-09-05T16:49:53Z", "updated_at": "2022-09-07T03:33:01Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Given the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=cf3bd67f07db7324126bcade4e68471f\r\n\r\n```rust\r\nfn printlen(s: String) {\r\n    println!(\"s.len() = {}\", s.len());\r\n}\r\n\r\nfn goodfunc<F: FnOnce()>(callback: F) {\r\n    callback();\r\n}\r\n\r\nfn badfunc<F: Fn()>(callback: F) {\r\n    callback();\r\n}\r\n\r\nfn main() {\r\n    let a = String::from(\"xyz\");\r\n    let b = a.clone();\r\n    \r\n    goodfunc(move || {\r\n        printlen(a);\r\n    });\r\n    \r\n    badfunc(move || {\r\n        printlen(b);\r\n    });\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nCompiling playground v0.0.1 (/playground)\r\nerror[[E0507]](https://doc.rust-lang.org/stable/error-index.html#E0507): cannot move out of `b`, a captured variable in an `Fn` closure\r\n  --> src/main.rs:23:18\r\n   |\r\n16 |       let b = a.clone();\r\n   |           - captured outer variable\r\n...\r\n22 |       badfunc(move || {\r\n   |  _____________-\r\n23 | |         printlen(b);\r\n   | |                  ^ move occurs because `b` has type `String`, which does not implement the `Copy` trait\r\n24 | |     });\r\n   | |_____- captured by this `Fn` closure\r\n\r\nFor more information about this error, try `rustc --explain E0507`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\nThis phrasing has favored brevity over clarity, overloading the captured variable name:\r\n\r\n> cannot move out of `b`, a captured variable in an `Fn` closure\r\n\r\nThe comma is easy to miss but it is doing a lot of the work here. I believe there are multiple valid English-language interpretations of that comma. The one I now understand to be correct:\r\n\r\n> The variable `b` cannot be moved out of the `Fn` closure, where it has already been captured.\r\n\r\nThe way I originally interpreted it:\r\n\r\n> The variable `b` is captured in the `Fn` closure but that would require an invalid move out of `main`.\r\n\r\nTo properly interpret the existing error the reader has to intuit that the compiler considers there to be an implicit variable of the same name `b` existing inside the closure. That may be technically true but the explicit reference to the variable name draws the reader's attention to the only explicit declaration of `b`, in `main`. I believe either of these phrasings avoid the ambiguity while also focusing the user's attention on the problematic move:\r\n\r\n> The capture of `b` cannot be moved out of the `Fn`\r\n\r\n> The variable `b` cannot be moved out of `Fn` because the closure may be called multiple times.\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/101459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/101459/timeline", "performed_via_github_app": null, "state_reason": null}