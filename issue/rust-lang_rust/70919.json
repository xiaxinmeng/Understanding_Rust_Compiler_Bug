{"url": "https://api.github.com/repos/rust-lang/rust/issues/70919", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70919/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70919/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70919/events", "html_url": "https://github.com/rust-lang/rust/issues/70919", "id": 596366952, "node_id": "MDU6SXNzdWU1OTYzNjY5NTI=", "number": 70919, "title": "spurious \"borrow might be used .. when [variable] is dropped and runs the destructor\"", "user": {"login": "comex", "id": 47517, "node_id": "MDQ6VXNlcjQ3NTE3", "avatar_url": "https://avatars.githubusercontent.com/u/47517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comex", "html_url": "https://github.com/comex", "followers_url": "https://api.github.com/users/comex/followers", "following_url": "https://api.github.com/users/comex/following{/other_user}", "gists_url": "https://api.github.com/users/comex/gists{/gist_id}", "starred_url": "https://api.github.com/users/comex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comex/subscriptions", "organizations_url": "https://api.github.com/users/comex/orgs", "repos_url": "https://api.github.com/users/comex/repos", "events_url": "https://api.github.com/users/comex/events{/privacy}", "received_events_url": "https://api.github.com/users/comex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 43009118, "node_id": "MDU6TGFiZWw0MzAwOTExOA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-destructors", "name": "A-destructors", "color": "f7e101", "default": false, "description": "Area: destructors (Drop, ..)"}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-08T07:26:44Z", "updated_at": "2023-03-07T01:17:36Z", "closed_at": "2023-03-07T01:17:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=ca0e9f5171bf484d9b744d08057203ec)\r\n```rust\r\nuse std::rc::Rc;\r\nuse std::cell::{RefCell, RefMut};\r\nuse std::mem::drop;\r\n\r\nfn huh(x: Rc<RefCell<i32>>) {\r\n    let mut rc: Rc<RefCell<i32>> = x.clone();\r\n    let mut inner: RefMut<'_, i32> = rc.borrow_mut();\r\n    loop {\r\n        drop(inner);\r\n        drop(rc);\r\n        rc = x.clone();\r\n        inner = rc.borrow_mut();\r\n    }\r\n}\r\n```\r\nproduces:\r\n```\r\nerror[E0505]: cannot move out of `rc` because it is borrowed\r\n  --> src/lib.rs:9:14\r\n   |\r\n6  |     let mut inner: RefMut<'_, i32> = rc.borrow_mut();\r\n   |                                      -- borrow of `rc` occurs here\r\n...\r\n9  |         drop(rc);\r\n   |              ^^ move out of `rc` occurs here\r\n...\r\n12 |         inner = rc.borrow_mut();\r\n   |         ----- borrow might be used here, when `inner` is dropped and runs the destructor for type `std::cell::RefMut<'_, i32>`\r\n\r\nerror[E0506]: cannot assign to `rc` because it is borrowed\r\n  --> src/lib.rs:11:9\r\n   |\r\n6  |     let mut inner: RefMut<'_, i32> = rc.borrow_mut();\r\n   |                                      -- borrow of `rc` occurs here\r\n...\r\n11 |         rc = x.clone();\r\n   |         ^^ assignment to borrowed `rc` occurs here\r\n12 |         inner = rc.borrow_mut();\r\n   |         ----- borrow might be used here, when `inner` is dropped and runs the destructor for type `std::cell::RefMut<'_, i32>`\r\n```\r\n\r\n(Same error with `-Zpolonius`.)\r\n\r\nThe error messages are wrong: the assignment to `inner` can never run a destructor, since the previous value of `inner` was dropped earlier on.\r\n\r\nAnd AFAICT this code is sound and ought to be accepted.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70919/reactions", "total_count": 8, "+1": 8, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70919/timeline", "performed_via_github_app": null, "state_reason": "completed"}