{"url": "https://api.github.com/repos/rust-lang/rust/issues/74794", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74794/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74794/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74794/events", "html_url": "https://github.com/rust-lang/rust/issues/74794", "id": 665854466, "node_id": "MDU6SXNzdWU2NjU4NTQ0NjY=", "number": 74794, "title": "CString does not preserve capacity", "user": {"login": "kotauskas", "id": 28248600, "node_id": "MDQ6VXNlcjI4MjQ4NjAw", "avatar_url": "https://avatars.githubusercontent.com/u/28248600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kotauskas", "html_url": "https://github.com/kotauskas", "followers_url": "https://api.github.com/users/kotauskas/followers", "following_url": "https://api.github.com/users/kotauskas/following{/other_user}", "gists_url": "https://api.github.com/users/kotauskas/gists{/gist_id}", "starred_url": "https://api.github.com/users/kotauskas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kotauskas/subscriptions", "organizations_url": "https://api.github.com/users/kotauskas/orgs", "repos_url": "https://api.github.com/users/kotauskas/repos", "events_url": "https://api.github.com/users/kotauskas/events{/privacy}", "received_events_url": "https://api.github.com/users/kotauskas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-26T20:29:49Z", "updated_at": "2020-07-27T10:06:17Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Simplest repro:\r\n```rust\r\nuse std::ffi::CString;\r\nlet vec = Vec::with_capacity(87);\r\nlet cstring = CString::new(vec);\r\nlet vec = cstring.into_bytes();\r\nassert_eq!(vec.capacity(), 87);\r\n```\r\n\r\nI expected `CString` to behave like `String`, preserving capacity from the `Vec` it was created. Instead, [the `CString` implementation shrinks-to-fit and stores a boxed slice][0], which is then converted back into `Vec` in `into_bytes`/`into_bytes_with_nul`, giving back as much capacity as there were elements, i.e. 1 which is the nul terminator.\r\n\r\nI vaguely understand the reasoning for this \u2014 when `&CStr` becomes a narrow pointer, `Box<CStr>` would be a narrow pointer too, meaning that `CString` also will; in such a case, if `CString` was a `Vec` instead, it would be three pointers in size (pointer, size, capacity). This means, however, that there's no reason to use `CString` instead of `Box<CStr>`, making it essentially useless.\r\n\r\nIn other words, the only reason for `String`/`OsString`/`CString` to exist in parallel with `Box<str>`/`Box<OsStr>`/`Box<CStr>` is to provide the same safety guarantees for the contents while also providing `Vec`-like functionality (growing/shrinking and spare capacity). In reality, `CString` does not provide those at all, much like `OsString` (though it'd be considerably more complex to implement `push`/`pop` for `OsString` on Windows even if it's a `Vec`, since that'd mean that encoding and decoding the underlying WTF-8 would be required).\r\n\r\nAs an initial effort, `OsString` and `CString` can be transformed into `Vec`s transparently to their public APIs. Then, the `Vec` API can be integrated via the usual RFC process.\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.46.0-nightly (3503f565e 2020-07-02)\r\nbinary: rustc\r\ncommit-hash: 3503f565e1fb7296983757d2716346f48a4a262b\r\ncommit-date: 2020-07-02\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.46.0-nightly\r\nLLVM version: 10.0\r\n```\r\n\r\n[0]: https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#382 \" \"", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74794/timeline", "performed_via_github_app": null, "state_reason": null}