{"url": "https://api.github.com/repos/rust-lang/rust/issues/32594", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/32594/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/32594/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/32594/events", "html_url": "https://github.com/rust-lang/rust/issues/32594", "id": 144420712, "node_id": "MDU6SXNzdWUxNDQ0MjA3MTI=", "number": 32594, "title": "parser stack overflow with very deeply nested items", "user": {"login": "comex", "id": 47517, "node_id": "MDQ6VXNlcjQ3NTE3", "avatar_url": "https://avatars.githubusercontent.com/u/47517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comex", "html_url": "https://github.com/comex", "followers_url": "https://api.github.com/users/comex/followers", "following_url": "https://api.github.com/users/comex/following{/other_user}", "gists_url": "https://api.github.com/users/comex/gists{/gist_id}", "starred_url": "https://api.github.com/users/comex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comex/subscriptions", "organizations_url": "https://api.github.com/users/comex/orgs", "repos_url": "https://api.github.com/users/comex/repos", "events_url": "https://api.github.com/users/comex/events{/privacy}", "received_events_url": "https://api.github.com/users/comex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 100522, "node_id": "MDU6TGFiZWwxMDA1MjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-crash", "name": "I-crash", "color": "e10c02", "default": false, "description": "Issue: The compiler crashes (SIGSEGV, SIGABRT, etc). Use I-ICE instead when the compiler panics."}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-03-29T23:47:39Z", "updated_at": "2020-05-07T03:31:40Z", "closed_at": "2020-05-07T03:31:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Trying to compile this code, which contains 492 nested `loop` blocks: http://pastie.org/private/blihpoctk64fvv9yvwkp5g\n\ncauses rustc to unceremoniously segfault.  I feel like this is basic enough (unavoidable other than with diagnostics?) that there should be an existing issue for it, but I can't find one, so here's a new report. \n\nFor the record, this is stripped down from real (generated) code.  I have been using labeled `break` as a substitute for `goto` - in my real code the `loop` blocks are labeled; after each `loop` is the code for that case, followed by a `return`.  Inside all the nested `loop`s is a decoder which `break`s to one of the labels, consisting of a number of nested `match` statements, within which a single label can appear several times.  (Normally I would use functions instead of labels, like `return handle_foo(...)`, and in fact this might 'just work', but I can't guarantee that each helper function (1) is inlined, but (2) is inlined _only once_, after the calls are merged into one basic block, rather than separately for each time it's mentioned.)\n\nPartial backtrace:\n\n```\n  * frame #0: 0x0000000101cdd01a libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_item_::h7cfdc3a522ccefe4 + 26\n    frame #1: 0x0000000101cdcfd3 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::with_res::hca18e2b367aac45a + 83\n    frame #2: 0x0000000101cda76d libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_stmt_::h2ef05e1acf23b3ee + 2749\n    frame #3: 0x0000000101cc2685 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_block_tail::h850fd6dee5511129 + 181\n    frame #4: 0x0000000101ca33da libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_inner_attrs_and_block::h758cb08b805a3c04 + 1274\n    frame #5: 0x0000000101cc1f10 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_loop_expr::he95eef038af4df5c + 48\n    frame #6: 0x0000000101cb9304 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_bottom_expr::hdb91d7fed291df76 + 11332\n    frame #7: 0x0000000101cc45b6 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_dot_or_call_expr::hd6b49bfb09b97ce0 + 438\n    frame #8: 0x0000000101cce364 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_prefix_expr::h696f8c3b5de4ed7a + 3812\n    frame #9: 0x0000000101ccfbe8 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_assoc_expr_with::h437ac6f395ba7253 + 232\n    frame #10: 0x0000000101ccfaec libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_assoc_expr::h6d60b59a50fe4e9b + 92\n    frame #11: 0x0000000101ccf6f6 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_expr_res::he5eaa4701a507b69 + 86\n    frame #12: 0x0000000101cdae2a libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_stmt_::h2ef05e1acf23b3ee + 4474\n    frame #13: 0x0000000101cc2685 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_block_tail::h850fd6dee5511129 + 181\n    frame #14: 0x0000000101ca33da libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_inner_attrs_and_block::h758cb08b805a3c04 + 1274\n    frame #15: 0x0000000101cc1f10 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_loop_expr::he95eef038af4df5c + 48\n    frame #16: 0x0000000101cb9304 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_bottom_expr::hdb91d7fed291df76 + 11332\n    frame #17: 0x0000000101cc45b6 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_dot_or_call_expr::hd6b49bfb09b97ce0 + 438\n    frame #18: 0x0000000101cce364 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_prefix_expr::h696f8c3b5de4ed7a + 3812\n    frame #19: 0x0000000101ccfbe8 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_assoc_expr_with::h437ac6f395ba7253 + 232\n[..]\n    frame #2399: 0x0000000101ccfbe8 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_assoc_expr_with::h437ac6f395ba7253 + 232\n    frame #2400: 0x0000000101ccfaec libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_assoc_expr::h6d60b59a50fe4e9b + 92\n    frame #2401: 0x0000000101ccf6f6 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_expr_res::he5eaa4701a507b69 + 86\n    frame #2402: 0x0000000101cdae2a libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_stmt_::h2ef05e1acf23b3ee + 4474\n    frame #2403: 0x0000000101cc2685 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_block_tail::h850fd6dee5511129 + 181\n    frame #2404: 0x0000000101ca33da libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_inner_attrs_and_block::h758cb08b805a3c04 + 1274\n    frame #2405: 0x0000000101cf77fa libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_item_fn::hce3de4303f5d8ba2 + 1674\n    frame #2406: 0x0000000101cdf539 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_item_::h7cfdc3a522ccefe4 + 9529\n    frame #2407: 0x0000000101c7a1e4 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_item::h436e395dd151cc52 + 484\n    frame #2408: 0x0000000101d068ea libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_mod_items::hea97d1b94833eb22 + 186\n    frame #2409: 0x0000000101c78112 libsyntax-18402db3.dylib`syntax::parse::parser::Parser::parse_crate_mod::h8c61b50923a69031 + 466\n    frame #2410: 0x0000000101c77d9b libsyntax-18402db3.dylib`syntax::parse::parse_crate_from_file::h2bec29ecacefb78e + 171\n    frame #2411: 0x0000000100058780 librustc_driver-18402db3.dylib`rustc_driver::driver::phase_1_parse_input::_$u7b$$u7b$closure$u7d$$u7d$::hf7d19c22fe6fc59c + 176\n    frame #2412: 0x000000010002cc5a librustc_driver-18402db3.dylib`rustc_driver::driver::phase_1_parse_input::hddc8900dc2500ee4 + 250\n    frame #2413: 0x0000000100019500 librustc_driver-18402db3.dylib`rustc_driver::driver::compile_input::hb8958b270f32a505 + 144\n    frame #2414: 0x00000001000091d0 librustc_driver-18402db3.dylib`rustc_driver::run_compiler::h146dabfc96bf3a5a + 4000\n    frame #2415: 0x0000000100006673 librustc_driver-18402db3.dylib`std::sys_common::unwind::try::try_fn::h847694ac14db1c2b + 467\n    frame #2416: 0x000000010487b25c libstd-18402db3.dylib`__rust_try + 12\n    frame #2417: 0x000000010487b1e4 libstd-18402db3.dylib`std::sys_common::unwind::inner_try::h790ed072af125c7c + 116\n    frame #2418: 0x0000000100006f0a librustc_driver-18402db3.dylib`_$LT$F$u20$as$u20$alloc..boxed..FnBox$LT$A$GT$$GT$::call_box::h64418c3ccdc3072e + 394\n    frame #2419: 0x0000000104888ef9 libstd-18402db3.dylib`std::sys::thread::Thread::new::thread_start::hdaf9c8e3f2f1c46e + 57\n    frame #2420: 0x00007fff893ee9b1 libsystem_pthread.dylib`_pthread_body + 131\n    frame #2421: 0x00007fff893ee92e libsystem_pthread.dylib`_pthread_start + 168\n    frame #2422: 0x00007fff893ec385 libsystem_pthread.dylib`thread_start + 13\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/32594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/32594/timeline", "performed_via_github_app": null, "state_reason": "completed"}