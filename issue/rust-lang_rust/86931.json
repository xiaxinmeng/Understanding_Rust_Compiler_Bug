{"url": "https://api.github.com/repos/rust-lang/rust/issues/86931", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86931/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86931/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86931/events", "html_url": "https://github.com/rust-lang/rust/issues/86931", "id": 938828370, "node_id": "MDU6SXNzdWU5Mzg4MjgzNzA=", "number": 86931, "title": "ubuntu  libc malloc and free  will core dump", "user": {"login": "luyikk", "id": 16304584, "node_id": "MDQ6VXNlcjE2MzA0NTg0", "avatar_url": "https://avatars.githubusercontent.com/u/16304584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luyikk", "html_url": "https://github.com/luyikk", "followers_url": "https://api.github.com/users/luyikk/followers", "following_url": "https://api.github.com/users/luyikk/following{/other_user}", "gists_url": "https://api.github.com/users/luyikk/gists{/gist_id}", "starred_url": "https://api.github.com/users/luyikk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luyikk/subscriptions", "organizations_url": "https://api.github.com/users/luyikk/orgs", "repos_url": "https://api.github.com/users/luyikk/repos", "events_url": "https://api.github.com/users/luyikk/events{/privacy}", "received_events_url": "https://api.github.com/users/luyikk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-07-07T12:13:58Z", "updated_at": "2021-07-08T04:36:27Z", "closed_at": "2021-07-08T04:36:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nAll kinds of crashes come from libc malloc and free. This is one of them. When I don't use default global_allocator, it's OK to use mimalloc,the error will come from String, Vec<T>, Box<T>..... random core dump.\r\nthat makes me wonder about default global_ Allocator robustness.\r\n\r\nI expected to see this happen: *explanation*\r\nInstead, this happened: *explanation*\r\n\r\nThis is just a piece of normal code but my ubuntu could crash\r\n\r\nI tried this code:\r\n```rust\r\n    fn get_result_buff(serial: i64, result: RetResult) -> Data {\r\n        let mut data = Data::with_capacity(1024);\r\n\r\n        data.write_fixed(0u32);\r\n        data.write_fixed(2500u32);\r\n        data.write_fixed(serial);\r\n\r\n        if result.is_error {\r\n            data.write_fixed(true);\r\n            data.write_fixed(result.error_id);\r\n            data.write_fixed(result.msg);\r\n        } else {\r\n            data.write_fixed(false);\r\n            data.write_fixed(result.arguments.len() as u32);\r\n            for argument in result.arguments {\r\n                data.write_fixed(argument.into_inner());\r\n            }\r\n        }\r\n\r\n        let len = data.len();\r\n        (&mut data[0..4]).put_u32_le(len as u32);\r\n        data\r\n    }\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.55.0-nightly (6a758ea7e 2021-06-22)\r\nUbuntu 18.04.4 LTS\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n#0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51\r\n#1  0x00007f3310703801 in __GI_abort () at abort.c:79\r\n#2  0x00007f331074c897 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7f3310879b9a \"%s\\n\") at ../sysdeps/posix/libc_fatal.c:181\r\n#3  0x00007f331075390a in malloc_printerr (str=str@entry=0x7f331087b7a8 \"munmap_chunk(): invalid pointer\") at malloc.c:5350\r\n#4  0x00007f331075aecc in munmap_chunk (p=0x7f330c005c10) at malloc.c:2846\r\n#5  __GI___libc_free (mem=0x7f330c005c20) at malloc.c:3117\r\n#6  0x000055c6ab5b12cb in alloc::alloc::dealloc (\r\n    ptr=0x7f330c005c20 \"code\\\":6},{\\\"gamename\\\":\\\"slots280\\\",\\\"buildcode\\\":6},{\\\"gamename\\\":\\\"slots282\\\",\\\"buildcode\\\":6},{\\\"gamename\\\":\\\"slots283\\\",\\\"buildcode\\\":6},{\\\"gamename\\\":\\\"slots287\\\",\\\"buildcode\\\":6},{\\\"gamename\\\":\\\"slots288\\\",\\\"buildcode\\\":6},{\"..., layout=...) at /rustc/6a758ea7e48416b968955535094479dc2e7cc9e1/library/alloc/src/alloc.rs:104\r\n#7  0x000055c6ab5b139b in <alloc::alloc::Global as core::alloc::Allocator>::deallocate (self=0x7f33106bfd90, ptr=..., layout=...) at /rustc/6a758ea7e48416b968955535094479dc2e7cc9e1/library/alloc/src/alloc.rs:239\r\n#8  0x000055c6ab5adfeb in <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop (self=0x7f33106bfd90) at /rustc/6a758ea7e48416b968955535094479dc2e7cc9e1/library/alloc/src/raw_vec.rs:521\r\n#9  0x000055c6ab5b35eb in core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>> () at /rustc/6a758ea7e48416b968955535094479dc2e7cc9e1/library/core/src/ptr/mod.rs:192\r\n#10 0x000055c6ab5b3594 in core::ptr::drop_in_place<alloc::vec::Vec<u8>> () at /rustc/6a758ea7e48416b968955535094479dc2e7cc9e1/library/core/src/ptr/mod.rs:192\r\n#11 0x000055c6ab5b356b in core::ptr::drop_in_place<alloc::string::String> () at /rustc/6a758ea7e48416b968955535094479dc2e7cc9e1/library/core/src/ptr/mod.rs:192\r\n#12 0x000055c6ab13cddf in netxserver::server::impl_server::NetXServer<T>::get_result_buff (serial=4424961637612796050, result=...)\r\n    at /home/luyi/.cargo/registry/src/github.com-1ecc6299db9ec823/netxserver-1.5.2/src/server/impl_server.rs:265\r\n\r\n```\r\n```\r\n0x00007fded2b22801 in __GI_abort () at abort.c:79\r\n#2  0x00007fded2b6b897 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7fded2c98b9a \"%s\\n\") at ../sysdeps/posix/libc_fatal.c:181\r\n#3  0x00007fded2b7290a in malloc_printerr (str=str@entry=0x7fded2c9a7a8 \"munmap_chunk(): invalid pointer\") at malloc.c:5350\r\n#4  0x00007fded2b79ecc in munmap_chunk (p=0x7fdecc002460) at malloc.c:2846\r\n#5  __GI___libc_free (mem=0x7fdecc002470) at malloc.c:3117\r\n#6  0x0000558740a140fb in alloc::alloc::dealloc (ptr=0x7fdecc002470 \"\", layout=...) at /rustc/6a758ea7e48416b968955535094479dc2e7cc9e1/library/alloc/src/alloc.rs:104\r\n#7  0x0000558740a1479b in <alloc::alloc::Global as core::alloc::Allocator>::deallocate (self=0x7fded2add8f0, ptr=..., layout=...) at /rustc/6a758ea7e48416b968955535094479dc2e7cc9e1/library/alloc/src/alloc.rs:239\r\n#8  0x0000558740a145cb in alloc::alloc::box_free (ptr=..., alloc=...) at /rustc/6a758ea7e48416b968955535094479dc2e7cc9e1/library/alloc/src/alloc.rs:334\r\n#9  0x0000558740a12af1 in core::ptr::drop_in_place<alloc::boxed::Box<dyn aqueue::queue::QueueItem+core::marker::Sync+core::marker::Send>> () at \r\n```\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "luyikk", "id": 16304584, "node_id": "MDQ6VXNlcjE2MzA0NTg0", "avatar_url": "https://avatars.githubusercontent.com/u/16304584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luyikk", "html_url": "https://github.com/luyikk", "followers_url": "https://api.github.com/users/luyikk/followers", "following_url": "https://api.github.com/users/luyikk/following{/other_user}", "gists_url": "https://api.github.com/users/luyikk/gists{/gist_id}", "starred_url": "https://api.github.com/users/luyikk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luyikk/subscriptions", "organizations_url": "https://api.github.com/users/luyikk/orgs", "repos_url": "https://api.github.com/users/luyikk/repos", "events_url": "https://api.github.com/users/luyikk/events{/privacy}", "received_events_url": "https://api.github.com/users/luyikk/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86931/timeline", "performed_via_github_app": null, "state_reason": "completed"}