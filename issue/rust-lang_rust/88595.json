{"url": "https://api.github.com/repos/rust-lang/rust/issues/88595", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88595/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88595/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88595/events", "html_url": "https://github.com/rust-lang/rust/issues/88595", "id": 986967365, "node_id": "MDU6SXNzdWU5ODY5NjczNjU=", "number": 88595, "title": "Internal compiler error when lifetime bound is unsatisfied for generic associated type defined with impl trait. ", "user": {"login": "LlewVallis", "id": 20552946, "node_id": "MDQ6VXNlcjIwNTUyOTQ2", "avatar_url": "https://avatars.githubusercontent.com/u/20552946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LlewVallis", "html_url": "https://github.com/LlewVallis", "followers_url": "https://api.github.com/users/LlewVallis/followers", "following_url": "https://api.github.com/users/LlewVallis/following{/other_user}", "gists_url": "https://api.github.com/users/LlewVallis/gists{/gist_id}", "starred_url": "https://api.github.com/users/LlewVallis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LlewVallis/subscriptions", "organizations_url": "https://api.github.com/users/LlewVallis/orgs", "repos_url": "https://api.github.com/users/LlewVallis/repos", "events_url": "https://api.github.com/users/LlewVallis/events{/privacy}", "received_events_url": "https://api.github.com/users/LlewVallis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 3307663436, "node_id": "MDU6TGFiZWwzMzA3NjYzNDM2", "url": "https://api.github.com/repos/rust-lang/rust/labels/GATs-triaged", "name": "GATs-triaged", "color": "e88000", "default": false, "description": "Issues using the `generic_associated_types` feature that have been triaged"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-09-02T17:01:46Z", "updated_at": "2021-11-09T17:13:43Z", "closed_at": "2021-11-09T17:13:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nWhen implementing generic associated type using `impl Trait`, the compiler panics if the trait lifetime bound is not satisfied by duplicating the where clause.\r\n\r\nUPDATE: seems like the compiler also panics if an appropriate where clause is included in the implementation.\r\n\r\nReproducible in a new cargo project on the latest nightly.\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(generic_associated_types)]    \r\n#![feature(type_alias_impl_trait)]    \r\n    \r\nfn main() {    \r\n    println!(\"Hello, world!\");    \r\n}    \r\n    \r\ntrait A<'a> {    \r\n    type B<'b>: Clone    \r\n    where    \r\n        'a: 'b;    \r\n                                         \r\n    fn a(&'a self) -> Self::B<'a>;       \r\n}    \r\n    \r\nstruct C;    \r\n    \r\nimpl<'a> A<'a> for C {    \r\n    type B<'b> = impl Clone;               \r\n        \r\n    fn a(&'a self) -> Self::B<'a> {}       \r\n}   \r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.0-nightly (50171c310 2021-09-01)\r\nbinary: rustc\r\ncommit-hash: 50171c310cd15e1b2d3723766ce64e2e4d6696fc\r\ncommit-date: 2021-09-01\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.56.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0478]: lifetime bound not satisfied\r\n  --> src/main.rs:19:5\r\n   |\r\n19 |     type B<'b> = impl Clone;\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\nnote: lifetime parameter instantiated with the lifetime `'a` as defined on the impl at 18:6\r\n  --> src/main.rs:18:6\r\n   |\r\n18 | impl<'a> A<'a> for C {\r\n   |      ^^\r\nnote: but lifetime parameter must outlive the lifetime `'b` as defined on the associated item at 19:12\r\n  --> src/main.rs:19:12\r\n   |\r\n19 |     type B<'b> = impl Clone;\r\n   |            ^^\r\n\r\nthread 'rustc' panicked at 'assertion failed: self.is_free_or_static(r_a) && self.is_free_or_static(r_b)', compiler/rustc_infer/src/infer/free_regions.rs:77:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.56.0-nightly (50171c310 2021-09-01) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `<impl at src/main.rs:18:1: 22:2>::a`\r\n#1 [type_of] computing type of `<impl at src/main.rs:18:1: 22:2>::B::{opaque#0}`\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror[E0478]: lifetime bound not satisfied\r\n  --> src/main.rs:19:5\r\n   |\r\n19 |     type B<'b> = impl Clone;\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\nnote: lifetime parameter instantiated with the lifetime `'a` as defined on the impl at 18:6\r\n  --> src/main.rs:18:6\r\n   |\r\n18 | impl<'a> A<'a> for C {\r\n   |      ^^\r\nnote: but lifetime parameter must outlive the lifetime `'b` as defined on the associated item at 19:12\r\n  --> src/main.rs:19:12\r\n   |\r\n19 |     type B<'b> = impl Clone;\r\n   |            ^^\r\n\r\nthread 'rustc' panicked at 'assertion failed: self.is_free_or_static(r_a) && self.is_free_or_static(r_b)', compiler/rustc_infer/src/infer/free_regions.rs:77:9\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/50171c310cd15e1b2d3723766ce64e2e4d6696fc/library/std/src/panicking.rs:517:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/50171c310cd15e1b2d3723766ce64e2e4d6696fc/library/core/src/panicking.rs:101:14\r\n   2: core::panicking::panic\r\n             at /rustc/50171c310cd15e1b2d3723766ce64e2e4d6696fc/library/core/src/panicking.rs:50:5\r\n   3: <rustc_infer::infer::free_regions::FreeRegionMap as rustc_infer::infer::free_regions::FreeRegionRelations>::sub_free_regions\r\n   4: <rustc_infer::infer::InferCtxt as rustc_trait_selection::opaque_types::InferCtxtExt>::constrain_opaque_types\r\n   5: rustc_typeck::check::regionck::RegionCtxt::visit_fn_body\r\n   6: rustc_typeck::check::regionck::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::regionck_fn\r\n   7: rustc_infer::infer::InferCtxtBuilder::enter\r\n   8: rustc_typeck::check::typeck\r\n   9: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  10: rustc_data_structures::stack::ensure_sufficient_stack\r\n  11: rustc_query_system::query::plumbing::force_query_with_job\r\n  12: rustc_query_system::query::plumbing::get_query_impl\r\n  13: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  14: rustc_typeck::collect::type_of::find_opaque_ty_constraints::ConstraintLocator::check\r\n  15: <rustc_typeck::collect::type_of::find_opaque_ty_constraints::ConstraintLocator as rustc_hir::intravisit::Visitor>::visit_impl_item\r\n  16: rustc_hir::intravisit::Visitor::visit_nested_impl_item\r\n  17: rustc_hir::intravisit::walk_impl_item_ref\r\n  18: rustc_hir::intravisit::walk_item\r\n  19: rustc_typeck::collect::type_of::type_of\r\n  20: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  21: rustc_data_structures::stack::ensure_sufficient_stack\r\n  22: rustc_query_system::query::plumbing::force_query_with_job\r\n  23: rustc_query_system::query::plumbing::get_query_impl\r\n  24: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::type_of\r\n  25: rustc_typeck::check::check::check_item_type\r\n  26: rustc_middle::hir::map::Map::visit_item_likes_in_module\r\n  27: rustc_typeck::check::check::check_mod_item_types\r\n  28: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  29: rustc_data_structures::stack::ensure_sufficient_stack\r\n  30: rustc_query_system::query::plumbing::force_query_with_job\r\n  31: rustc_query_system::query::plumbing::get_query_impl\r\n  32: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::check_mod_item_types\r\n  33: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  34: rustc_typeck::check_crate\r\n  35: rustc_interface::passes::analysis\r\n  36: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  37: rustc_data_structures::stack::ensure_sufficient_stack\r\n  38: rustc_query_system::query::plumbing::force_query_with_job\r\n  39: rustc_query_system::query::plumbing::get_query_impl\r\n  40: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  41: rustc_interface::passes::QueryContext::enter\r\n  42: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  43: rustc_span::with_source_map\r\n  44: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.56.0-nightly (50171c310 2021-09-01) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `<impl at src/main.rs:18:1: 22:2>::a`\r\n#1 [type_of] computing type of `<impl at src/main.rs:18:1: 22:2>::B::{opaque#0}`\r\n#2 [check_mod_item_types] checking item types in top-level module\r\n#3 [analysis] running analysis passes on this crate\r\nend of query stack\r\nFor more information about this error, try `rustc --explain E0478`.\r\nerror: could not compile `mre` due to previous error\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88595/timeline", "performed_via_github_app": null, "state_reason": "completed"}