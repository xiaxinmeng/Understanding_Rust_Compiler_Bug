{"url": "https://api.github.com/repos/rust-lang/rust/issues/96395", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96395/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96395/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96395/events", "html_url": "https://github.com/rust-lang/rust/issues/96395", "id": 1214737479, "node_id": "I_kwDOAAsO6M5IZ2xH", "number": 96395, "title": "ICE: glacier fixed/82079.rs with -Zmir-opt-level=3: failed to normalize [closure@./82079.rs:13:25: 13:46]", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-04-25T16:09:13Z", "updated_at": "2022-05-29T02:59:51Z", "closed_at": "2022-05-29T02:59:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nThis ice'd previously in https://github.com/rust-lang/rust/issues/82079 and was fixed by https://github.com/rust-lang/rust/pull/91255 but now it ICEs again with `-Zmir-opt-level=3`\r\n\r\n```Rust\r\n#![crate_type = \"lib\"]\r\n\r\nmod convenience_operators {\r\n    use crate::{Op, Relation};\r\n    use std::ops::AddAssign;\r\n    use std::ops::Mul;\r\n\r\n    impl<C: Op> Relation<C> {\r\n        pub fn map<F: Fn(C::D) -> D2 + 'static, D2: 'static>(\r\n            self,\r\n            f: F,\r\n        ) -> Relation<impl Op<D = D2, R = C::R>> {\r\n            self.map_dr(move |x, r| (f(x), r))\r\n        }\r\n    }\r\n\r\n    impl<K: 'static, V: 'static, C: Op<D = (K, V)>> Relation<C> {\r\n        pub fn semijoin<C2: Op<D = K, R = R2>, R2, R3: AddAssign<R3>>(\r\n            self,\r\n            other: Relation<C2>,\r\n        ) -> Relation<impl Op<D = C::D, R = R3>>\r\n        where\r\n            C::R: Mul<R2, Output = R3>,\r\n        {\r\n            self.join(other.map(|x| (x, ()))).map(|(k, x, ())| (k, x))\r\n        }\r\n    }\r\n}\r\n\r\nmod core {\r\n    mod operator {\r\n        mod join {\r\n            use super::Op;\r\n            use crate::core::Relation;\r\n            use std::ops::{AddAssign, Mul};\r\n            struct Join<LC, RC> {\r\n                _left: LC,\r\n                _right: RC,\r\n            }\r\n            impl<\r\n                    LC: Op<D = (K, LD), R = LR>,\r\n                    RC: Op<D = (K, RD), R = RR>,\r\n                    K: 'static,\r\n                    LD: 'static,\r\n                    LR: AddAssign<LR> + Mul<RR, Output = OR>,\r\n                    RD: 'static,\r\n                    RR: AddAssign<RR>,\r\n                    OR: AddAssign<OR>,\r\n                > Op for Join<LC, RC>\r\n            {\r\n                type D = (K, LD, RD);\r\n                type R = OR;\r\n            }\r\n            impl<K: 'static, D: 'static, C: Op<D = (K, D)>> Relation<C> {\r\n                pub fn join<C2: Op<D = (K, D2)>, D2: 'static, OR: AddAssign<OR>>(\r\n                    self,\r\n                    other: Relation<C2>,\r\n                ) -> Relation<impl Op<D = (K, D, D2), R = OR>>\r\n                where\r\n                    C::R: Mul<C2::R, Output = OR>,\r\n                {\r\n                    Relation {\r\n                        inner: Join {\r\n                            _left: self.inner,\r\n                            _right: other.inner,\r\n                        },\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        mod map {\r\n            use super::Op;\r\n            use crate::core::Relation;\r\n            use std::ops::AddAssign;\r\n            struct Map<C, MF> {\r\n                _inner: C,\r\n                _op: MF,\r\n            }\r\n            impl<\r\n                    D1,\r\n                    R1,\r\n                    D2: 'static,\r\n                    R2: AddAssign<R2>,\r\n                    C: Op<D = D1, R = R1>,\r\n                    MF: Fn(D1, R1) -> (D2, R2),\r\n                > Op for Map<C, MF>\r\n            {\r\n                type D = D2;\r\n                type R = R2;\r\n            }\r\n            impl<C: Op> Relation<C> {\r\n                pub fn map_dr<F: Fn(C::D, C::R) -> (D2, R2), D2: 'static, R2: AddAssign<R2>>(\r\n                    self,\r\n                    f: F,\r\n                ) -> Relation<impl Op<D = D2, R = R2>> {\r\n                    Relation {\r\n                        inner: Map {\r\n                            _inner: self.inner,\r\n                            _op: f,\r\n                        },\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        use std::ops::AddAssign;\r\n        pub trait Op {\r\n            type D: 'static;\r\n            type R: AddAssign<Self::R>;\r\n        }\r\n    }\r\n    pub use self::operator::Op;\r\n    #[derive(Clone)]\r\n    pub struct Relation<C> {\r\n        inner: C,\r\n    }\r\n}\r\n\r\nuse self::core::Op;\r\npub use self::core::Relation;\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.62.0-nightly (18f314e70 2022-04-24)\r\nbinary: rustc\r\ncommit-hash: 18f314e7027fe7084aaab8620c624a0d7bd29e70\r\ncommit-date: 2022-04-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.62.0-nightly\r\nLLVM version: 14.0.1\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/normalize_erasing_regions.rs:179:90: Failed to normalize [closure@./82079.rs:13:25: 13:46], maybe try to call `try_normalize_erasing_regions` instead\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/18f314e7027fe7084aaab8620c624a0d7bd29e70/compiler/rustc_errors/src/lib.rs:1313:9\r\nstack backtrace:\r\n   0:     0x7fe53ca9defd - std::backtrace_rs::backtrace::libunwind::trace::h939d3743a8b21a10\r\n                               at /rustc/18f314e7027fe7084aaab8620c624a0d7bd29e70/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7fe53ca9defd - std::backtrace_rs::backtrace::trace_unsynchronized::ha4a90ff774c16a42\r\n                               at /rustc/18f314e7027fe7084aaab8620c624a0d7bd29e70/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7fe53ca9defd - std::sys_common::backtrace::_print_fmt::h91737d9294627e79\r\n                               at /rustc/18f314e7027fe7084aaab8620c624a0d7bd29e70/library/std/src/sys_common/backtrace.rs:66:5\r\n   3:     0x7fe53ca9defd - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h10fe8bd9ff48e1b2\r\n                               at /rustc/18f314e7027fe7084aaab8620c624a0d7bd29e70/library/std/src/sys_common/backtrace.rs:45:22\r\n   4:     0x7fe53caf9c7c - core::fmt::write::h2f1ffef1b8b3ecdb\r\n                               at /rustc/18f314e7027fe7084aaab8620c624a0d7bd29e70/library/core/src/fmt/mod.rs:1194:17\r\n   5:     0x7fe53ca8f5f1 - std::io::Write::write_fmt::ha677b091a1b8cd93\r\n                               at /rustc/18f314e7027fe7084aaab8620c624a0d7bd29e70/library/std/src/io/mod.rs:1655:15\r\n   6:     0x7fe53caa0c15 - std::sys_common::backtrace::_print::h5ea24d25e5051738\r\n                               at /rustc/18f314e7027fe7084aaab8620c624a0d7bd29e70/library/std/src/sys_common/backtrace.rs:48:5\r\n   7:     0x7fe53caa0c15 - std::sys_common::backtrace::print::h5321ac51bc2d07aa\r\n                               at /rustc/18f314e7027fe7084aaab8620c624a0d7bd29e70/library/std/src/sys_common/backtrace.rs:35:9\r\n   8:     0x7fe53caa0c15 - std::panicking::default_hook::{{closure}}::h227bbb1b5187ba3a\r\n                               at /rustc/18f314e7027fe7084aaab8620c624a0d7bd29e70/library/std/src/panicking.rs:295:22\r\n   9:     0x7fe53caa0889 - std::panicking::default_hook::he030e42f064b493d\r\n                               at /rustc/18f314e7027fe7084aaab8620c624a0d7bd29e70/library/std/src/panicking.rs:314:9\r\n  10:     0x7fe53d2cb911 - rustc_driver[53a0486c6d04b84b]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n  11:     0x7fe53caa13e6 - std::panicking::rust_panic_with_hook::h3cf1e389ae2148cd\r\n                               at /rustc/18f314e7027fe7084aaab8620c624a0d7bd29e70/library/std/src/panicking.rs:702:17\r\n  12:     0x7fe53e32dcb1 - std[3626c7d336dcad5f]::panicking::begin_panic::<rustc_errors[cc710da0c834f823]::ExplicitBug>::{closure#0}\r\n  13:     0x7fe53e32c556 - std[3626c7d336dcad5f]::sys_common::backtrace::__rust_end_short_backtrace::<std[3626c7d336dcad5f]::panicking::begin_panic<rustc_errors[cc710da0c834f823]::ExplicitBug>::{closure#0}, !>\r\n  14:     0x7fe53e2be8df - std[3626c7d336dcad5f]::panicking::begin_panic::<rustc_errors[cc710da0c834f823]::ExplicitBug>\r\n  15:     0x7fe53e2746a6 - std[3626c7d336dcad5f]::panic::panic_any::<rustc_errors[cc710da0c834f823]::ExplicitBug>\r\n  16:     0x7fe53e270955 - <rustc_errors[cc710da0c834f823]::HandlerInner>::bug::<&alloc[26ca849f96b55acd]::string::String>\r\n  17:     0x7fe53e270360 - <rustc_errors[cc710da0c834f823]::Handler>::bug::<&alloc[26ca849f96b55acd]::string::String>\r\n  18:     0x7fe53e337a7d - rustc_middle[a1045d2d4d351d10]::ty::context::tls::with_opt::<rustc_middle[a1045d2d4d351d10]::util::bug::opt_span_bug_fmt<rustc_span[40d501108594b357]::span_encoding::Span>::{closure#0}, ()>\r\n  19:     0x7fe53e33a176 - rustc_middle[a1045d2d4d351d10]::util::bug::opt_span_bug_fmt::<rustc_span[40d501108594b357]::span_encoding::Span>\r\n  20:     0x7fe53e33a0e3 - rustc_middle[a1045d2d4d351d10]::util::bug::bug_fmt\r\n  21:     0x7fe53f2605f1 - <rustc_middle[a1045d2d4d351d10]::ty::normalize_erasing_regions::NormalizeAfterErasingRegionsFolder as rustc_middle[a1045d2d4d351d10]::ty::fold::TypeFolder>::fold_ty\r\n  22:     0x7fe53d49e089 - <rustc_middle[a1045d2d4d351d10]::ty::subst::GenericArg as rustc_middle[a1045d2d4d351d10]::ty::fold::TypeFoldable>::try_fold_with::<rustc_middle[a1045d2d4d351d10]::ty::normalize_erasing_regions::NormalizeAfterErasingRegionsFolder>\r\n  23:     0x7fe53d51fde8 - rustc_middle[a1045d2d4d351d10]::ty::util::fold_list::<rustc_middle[a1045d2d4d351d10]::ty::normalize_erasing_regions::NormalizeAfterErasingRegionsFolder, rustc_middle[a1045d2d4d351d10]::ty::subst::GenericArg, <&rustc_middle[a1045d2d4d351d10]::ty::list::List<rustc_middle[a1045d2d4d351d10]::ty::subst::GenericArg> as rustc_middle[a1045d2d4d351d10]::ty::fold::TypeFoldable>::try_super_fold_with<rustc_middle[a1045d2d4d351d10]::ty::normalize_erasing_regions::NormalizeAfterErasingRegionsFolder>::{closure#0}>\r\n  24:     0x7fe53d52c1ee - <rustc_middle[a1045d2d4d351d10]::ty::context::TyCtxt>::normalize_erasing_regions::<&rustc_middle[a1045d2d4d351d10]::ty::list::List<rustc_middle[a1045d2d4d351d10]::ty::subst::GenericArg>>\r\n  25:     0x7fe53d4a7f5f - rustc_mir_transform[8a4a87677af23582]::inline::cycle::mir_callgraph_reachable::process\r\n  26:     0x7fe53d4a79dc - rustc_mir_transform[8a4a87677af23582]::inline::cycle::mir_callgraph_reachable\r\n  27:     0x7fe53db72387 - rustc_query_system[e57d0b2d85dc560a]::query::plumbing::try_execute_query::<rustc_query_impl[1512d41c813fb0ae]::plumbing::QueryCtxt, rustc_query_system[e57d0b2d85dc560a]::query::caches::DefaultCache<(rustc_middle[a1045d2d4d351d10]::ty::instance::Instance, rustc_span[40d501108594b357]::def_id::LocalDefId), bool>>\r\n  28:     0x7fe53db95eed - rustc_query_system[e57d0b2d85dc560a]::query::plumbing::get_query::<rustc_query_impl[1512d41c813fb0ae]::queries::mir_callgraph_reachable, rustc_query_impl[1512d41c813fb0ae]::plumbing::QueryCtxt>\r\n  29:     0x7fe53dd660de - <rustc_query_impl[1512d41c813fb0ae]::Queries as rustc_middle[a1045d2d4d351d10]::ty::query::QueryEngine>::mir_callgraph_reachable\r\n  30:     0x7fe53d55279f - <rustc_mir_transform[8a4a87677af23582]::inline::Inliner>::try_inlining\r\n  31:     0x7fe53d54fdfc - <rustc_mir_transform[8a4a87677af23582]::inline::Inliner>::process_blocks\r\n  32:     0x7fe53d54f66f - <rustc_mir_transform[8a4a87677af23582]::inline::Inline as rustc_middle[a1045d2d4d351d10]::mir::MirPass>::run_pass\r\n  33:     0x7fe53e70a85e - rustc_mir_transform[8a4a87677af23582]::pass_manager::run_passes\r\n  34:     0x7fe53e6f68bd - rustc_mir_transform[8a4a87677af23582]::optimized_mir\r\n  35:     0x7fe53ece976b - rustc_query_system[e57d0b2d85dc560a]::query::plumbing::try_execute_query::<rustc_query_impl[1512d41c813fb0ae]::plumbing::QueryCtxt, rustc_query_system[e57d0b2d85dc560a]::query::caches::DefaultCache<rustc_span[40d501108594b357]::def_id::DefId, &rustc_middle[a1045d2d4d351d10]::mir::Body>>\r\n  36:     0x7fe53ede02ee - <rustc_query_impl[1512d41c813fb0ae]::Queries as rustc_middle[a1045d2d4d351d10]::ty::query::QueryEngine>::optimized_mir\r\n  37:     0x7fe53ee0efef - <rustc_metadata[c9f0dc93c058a53b]::rmeta::encoder::EncodeContext>::encode_crate_root\r\n  38:     0x7fe53f9587ba - rustc_metadata[c9f0dc93c058a53b]::rmeta::encoder::encode_metadata_impl\r\n  39:     0x7fe53f972d01 - rustc_data_structures[aac45c5228699a3f]::sync::join::<rustc_metadata[c9f0dc93c058a53b]::rmeta::encoder::encode_metadata::{closure#0}, rustc_metadata[c9f0dc93c058a53b]::rmeta::encoder::encode_metadata::{closure#1}, rustc_metadata[c9f0dc93c058a53b]::rmeta::encoder::EncodedMetadata, ()>\r\n  40:     0x7fe53f957f56 - rustc_metadata[c9f0dc93c058a53b]::rmeta::encoder::encode_metadata\r\n  41:     0x7fe53f31b9c3 - <rustc_interface[2bcbc0074c3d12f8]::passes::QueryContext>::enter::<<rustc_interface[2bcbc0074c3d12f8]::queries::Queries>::ongoing_codegen::{closure#0}::{closure#0}, core[2e8b3e7717192d8]::result::Result<alloc[26ca849f96b55acd]::boxed::Box<dyn core[2e8b3e7717192d8]::any::Any>, rustc_errors[cc710da0c834f823]::ErrorGuaranteed>>\r\n  42:     0x7fe53f341e2f - <rustc_interface[2bcbc0074c3d12f8]::queries::Queries>::ongoing_codegen\r\n  43:     0x7fe53f2e353b - <rustc_interface[2bcbc0074c3d12f8]::interface::Compiler>::enter::<rustc_driver[53a0486c6d04b84b]::run_compiler::{closure#1}::{closure#2}, core[2e8b3e7717192d8]::result::Result<core[2e8b3e7717192d8]::option::Option<rustc_interface[2bcbc0074c3d12f8]::queries::Linker>, rustc_errors[cc710da0c834f823]::ErrorGuaranteed>>\r\n  44:     0x7fe53f30ce4f - rustc_span[40d501108594b357]::with_source_map::<core[2e8b3e7717192d8]::result::Result<(), rustc_errors[cc710da0c834f823]::ErrorGuaranteed>, rustc_interface[2bcbc0074c3d12f8]::interface::create_compiler_and_run<core[2e8b3e7717192d8]::result::Result<(), rustc_errors[cc710da0c834f823]::ErrorGuaranteed>, rustc_driver[53a0486c6d04b84b]::run_compiler::{closure#1}>::{closure#1}>\r\n  45:     0x7fe53f2e4174 - rustc_interface[2bcbc0074c3d12f8]::interface::create_compiler_and_run::<core[2e8b3e7717192d8]::result::Result<(), rustc_errors[cc710da0c834f823]::ErrorGuaranteed>, rustc_driver[53a0486c6d04b84b]::run_compiler::{closure#1}>\r\n  46:     0x7fe53f2e0a11 - <scoped_tls[3e1d08058305613c]::ScopedKey<rustc_span[40d501108594b357]::SessionGlobals>>::set::<rustc_interface[2bcbc0074c3d12f8]::interface::run_compiler<core[2e8b3e7717192d8]::result::Result<(), rustc_errors[cc710da0c834f823]::ErrorGuaranteed>, rustc_driver[53a0486c6d04b84b]::run_compiler::{closure#1}>::{closure#0}, core[2e8b3e7717192d8]::result::Result<(), rustc_errors[cc710da0c834f823]::ErrorGuaranteed>>\r\n  47:     0x7fe53f2f9fbf - std[3626c7d336dcad5f]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[2bcbc0074c3d12f8]::util::run_in_thread_pool_with_globals<rustc_interface[2bcbc0074c3d12f8]::interface::run_compiler<core[2e8b3e7717192d8]::result::Result<(), rustc_errors[cc710da0c834f823]::ErrorGuaranteed>, rustc_driver[53a0486c6d04b84b]::run_compiler::{closure#1}>::{closure#0}, core[2e8b3e7717192d8]::result::Result<(), rustc_errors[cc710da0c834f823]::ErrorGuaranteed>>::{closure#0}, core[2e8b3e7717192d8]::result::Result<(), rustc_errors[cc710da0c834f823]::ErrorGuaranteed>>\r\n  48:     0x7fe53f2fa0f9 - <<std[3626c7d336dcad5f]::thread::Builder>::spawn_unchecked_<rustc_interface[2bcbc0074c3d12f8]::util::run_in_thread_pool_with_globals<rustc_interface[2bcbc0074c3d12f8]::interface::run_compiler<core[2e8b3e7717192d8]::result::Result<(), rustc_errors[cc710da0c834f823]::ErrorGuaranteed>, rustc_driver[53a0486c6d04b84b]::run_compiler::{closure#1}>::{closure#0}, core[2e8b3e7717192d8]::result::Result<(), rustc_errors[cc710da0c834f823]::ErrorGuaranteed>>::{closure#0}, core[2e8b3e7717192d8]::result::Result<(), rustc_errors[cc710da0c834f823]::ErrorGuaranteed>>::{closure#1} as core[2e8b3e7717192d8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  49:     0x7fe53caab333 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h5f4d59ae47de3c76\r\n                               at /rustc/18f314e7027fe7084aaab8620c624a0d7bd29e70/library/alloc/src/boxed.rs:1866:9\r\n  50:     0x7fe53caab333 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hc3d73b574ff0f9d5\r\n                               at /rustc/18f314e7027fe7084aaab8620c624a0d7bd29e70/library/alloc/src/boxed.rs:1866:9\r\n  51:     0x7fe53caab333 - std::sys::unix::thread::Thread::new::thread_start::h7164ed46a21eef8d\r\n                               at /rustc/18f314e7027fe7084aaab8620c624a0d7bd29e70/library/std/src/sys/unix/thread.rs:108:17\r\n  52:     0x7fe53c8835c2 - start_thread\r\n  53:     0x7fe53c908584 - __clone\r\n  54:                0x0 - <unknown>\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.62.0-nightly (18f314e70 2022-04-24) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z mir-opt-level=3\r\n\r\nquery stack during panic:\r\n#0 [mir_callgraph_reachable] computing if `convenience_operators::<impl at ./82079.rs:8:5: 15:6>::map::<[closure@./82079.rs:25:51: 25:70], (K, V)>` (transitively) calls `convenience_operators::<impl at ./82079.rs:17:5: 27:6>::semijoin`\r\n#1 [optimized_mir] optimizing MIR for `convenience_operators::<impl at ./82079.rs:17:5: 27:6>::semijoin`\r\nend of query stack\r\nerror: aborting due to previous error\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96395/timeline", "performed_via_github_app": null, "state_reason": "completed"}