{"url": "https://api.github.com/repos/rust-lang/rust/issues/93690", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93690/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93690/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93690/events", "html_url": "https://github.com/rust-lang/rust/issues/93690", "id": 1125102101, "node_id": "I_kwDOAAsO6M5DD7IV", "number": 93690, "title": "Internal Compiler Error", "user": {"login": "ccqpein", "id": 6965006, "node_id": "MDQ6VXNlcjY5NjUwMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/6965006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ccqpein", "html_url": "https://github.com/ccqpein", "followers_url": "https://api.github.com/users/ccqpein/followers", "following_url": "https://api.github.com/users/ccqpein/following{/other_user}", "gists_url": "https://api.github.com/users/ccqpein/gists{/gist_id}", "starred_url": "https://api.github.com/users/ccqpein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ccqpein/subscriptions", "organizations_url": "https://api.github.com/users/ccqpein/orgs", "repos_url": "https://api.github.com/users/ccqpein/repos", "events_url": "https://api.github.com/users/ccqpein/events{/privacy}", "received_events_url": "https://api.github.com/users/ccqpein/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252628, "node_id": "MDU6TGFiZWwyNjIyNTI2Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-beta", "name": "regression-from-stable-to-beta", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to beta."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/90", "html_url": "https://github.com/rust-lang/rust/milestone/90", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/90/labels", "id": 7553520, "node_id": "MI_kwDOAAsO6M4Ac0Hw", "number": 90, "title": "1.60.0", "description": null, "creator": {"login": "rustbot", "id": 47979223, "node_id": "MDQ6VXNlcjQ3OTc5MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47979223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustbot", "html_url": "https://github.com/rustbot", "followers_url": "https://api.github.com/users/rustbot/followers", "following_url": "https://api.github.com/users/rustbot/following{/other_user}", "gists_url": "https://api.github.com/users/rustbot/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustbot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustbot/subscriptions", "organizations_url": "https://api.github.com/users/rustbot/orgs", "repos_url": "https://api.github.com/users/rustbot/repos", "events_url": "https://api.github.com/users/rustbot/events{/privacy}", "received_events_url": "https://api.github.com/users/rustbot/received_events", "type": "User", "site_admin": false}, "open_issues": 2, "closed_issues": 714, "state": "closed", "created_at": "2022-01-08T15:20:45Z", "updated_at": "2022-11-29T11:45:29Z", "due_on": null, "closed_at": "2022-04-12T17:21:03Z"}, "comments": 8, "created_at": "2022-02-06T04:30:57Z", "updated_at": "2022-03-02T20:11:59Z", "closed_at": "2022-03-02T20:11:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n/// tokio = { version = \"1\", features = [\"full\"] }\r\nuse tokio::sync::mpsc::{Receiver, Sender};\r\n\r\nstruct X {\r\n    S: String,\r\n}\r\n\r\nimpl X {\r\n    fn new(sss: String) -> Self {\r\n        Self { S: sss }\r\n    }\r\n}\r\n\r\nstruct A {\r\n    receiver: Receiver<X>,\r\n    channel: Sender<(X, i32)>,\r\n}\r\n\r\nimpl A {\r\n    pub async fn run(&mut self) {\r\n        while let Some(ref xx) = self.receiver.recv().await {\r\n            tokio::spawn(async move {\r\n                self.channel.send((X::new(xx.S)), 1).await;\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.60.0-nightly (88fb06a1f 2022-02-05)\r\nbinary: rustc\r\ncommit-hash: 88fb06a1f331926bccb448acdb52966fd1ec8a92\r\ncommit-date: 2022-02-05\r\nhost: x86_64-apple-darwin\r\nrelease: 1.60.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_typeck/src/check/fn_ctxt/_impl.rs:318:26: while adjusting Expr { hir_id: HirId { owner: DefId(0:18 ~ temp[29dd]::{impl#1}::run), local_id: 70 }, kind: Path(Resolved(None, Path { span: src/main.rs:22:43: 22:45 (#0), res: Local(HirId { owner: DefId(0:18 ~ temp[29dd]::{impl#1}::run), local_id: 12 }), segments: [PathSegment { ident: xx#0, hir_id: Some(HirId { owner: DefId(0:18 ~ temp[29dd]::{impl#1}::run), local_id: 69 }), res: Some(Local(HirId { owner: DefId(0:18 ~ temp[29dd]::{impl#1}::run), local_id: 12 })), args: None, infer_args: true }] })), span: src/main.rs:22:43: 22:45 (#0) }, can't compose [Deref(None) -> X] and [Deref(None) -> X]\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1160:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner>::bug\r\n   3: <rustc_errors::Handler>::bug\r\n   4: rustc_middle::ty::context::tls::with_opt::<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, ()>\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: <rustc_typeck::check::fn_ctxt::FnCtxt>::apply_adjustments\r\n   8: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_field\r\n   9: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  10: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  11: <rustc_typeck::check::fn_ctxt::FnCtxt>::confirm_builtin_call\r\n  12: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n  13: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  14: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  15: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  16: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_method_argument_types\r\n  17: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  18: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  19: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  20: <rustc_typeck::check::fn_ctxt::FnCtxt>::confirm_builtin_call\r\n  21: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n  22: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  23: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  24: <rustc_typeck::check::fn_ctxt::FnCtxt>::demand_scrutinee_type\r\n  25: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_match\r\n  26: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  27: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  28: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  29: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  30: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  31: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  32: rustc_typeck::check::check::check_fn\r\n  33: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_closure\r\n  34: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  35: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  36: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  37: <rustc_typeck::check::fn_ctxt::FnCtxt>::confirm_builtin_call\r\n  38: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n  39: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  40: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  41: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  42: <rustc_typeck::check::fn_ctxt::FnCtxt>::confirm_builtin_call\r\n  43: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n  44: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  45: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  46: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  47: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  48: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  49: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  50: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  51: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  52: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  53: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  54: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  55: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  56: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  57: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  58: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  59: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  60: rustc_typeck::check::check::check_fn\r\n  61: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_closure\r\n  62: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  63: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  64: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  65: <rustc_typeck::check::fn_ctxt::FnCtxt>::confirm_builtin_call\r\n  66: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n  67: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  68: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  69: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  70: rustc_typeck::check::check::check_fn\r\n  71: <rustc_infer::infer::InferCtxtBuilder>::enter::<&rustc_middle::ty::context::TypeckResults, <rustc_typeck::check::inherited::InheritedBuilder>::enter<rustc_typeck::check::typeck_with_fallback<rustc_typeck::check::typeck::{closure#0}>::{closure#1}, &rustc_middle::ty::context::TypeckResults>::{closure#0}>\r\n  72: rustc_typeck::check::typeck\r\n  73: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>\r\n  74: rustc_data_structures::stack::ensure_sufficient_stack::<(&rustc_middle::ty::context::TypeckResults, rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>::{closure#3}>\r\n  75: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>>\r\n  76: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::typeck, rustc_query_impl::plumbing::QueryCtxt>\r\n  77: <rustc_middle::ty::context::TyCtxt>::typeck_opt_const_arg\r\n  78: rustc_mir_build::build::mir_built\r\n  79: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_middle::ty::WithOptConstParam<rustc_span::def_id::LocalDefId>, &rustc_data_structures::steal::Steal<rustc_middle::mir::Body>>\r\n  80: rustc_data_structures::stack::ensure_sufficient_stack::<(&rustc_data_structures::steal::Steal<rustc_middle::mir::Body>, rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, rustc_middle::ty::WithOptConstParam<rustc_span::def_id::LocalDefId>, &rustc_data_structures::steal::Steal<rustc_middle::mir::Body>>::{closure#3}>\r\n  81: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_middle::ty::WithOptConstParam<rustc_span::def_id::LocalDefId>, &rustc_data_structures::steal::Steal<rustc_middle::mir::Body>>>\r\n  82: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::mir_built, rustc_query_impl::plumbing::QueryCtxt>\r\n  83: rustc_mir_transform::check_unsafety::unsafety_check_result\r\n  84: <rustc_mir_transform::check_unsafety::provide::{closure#0} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId)>>::call_once\r\n  85: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId, &rustc_middle::mir::query::UnsafetyCheckResult>\r\n  86: rustc_data_structures::stack::ensure_sufficient_stack::<(&rustc_middle::mir::query::UnsafetyCheckResult, rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, rustc_span::def_id::LocalDefId, &rustc_middle::mir::query::UnsafetyCheckResult>::{closure#3}>\r\n  87: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, &rustc_middle::mir::query::UnsafetyCheckResult>>\r\n  88: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::unsafety_check_result, rustc_query_impl::plumbing::QueryCtxt>\r\n  89: rustc_mir_transform::mir_const\r\n  90: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_middle::ty::WithOptConstParam<rustc_span::def_id::LocalDefId>, &rustc_data_structures::steal::Steal<rustc_middle::mir::Body>>\r\n  91: rustc_data_structures::stack::ensure_sufficient_stack::<(&rustc_data_structures::steal::Steal<rustc_middle::mir::Body>, rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, rustc_middle::ty::WithOptConstParam<rustc_span::def_id::LocalDefId>, &rustc_data_structures::steal::Steal<rustc_middle::mir::Body>>::{closure#3}>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.60.0-nightly (88fb06a1f 2022-02-05) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C split-debuginfo=unpacked -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `<impl at src/main.rs:18:1: 26:2>::run`\r\n#1 [mir_built] building MIR for `<impl at src/main.rs:18:1: 26:2>::run`\r\n#2 [unsafety_check_result] unsafety-checking `<impl at src/main.rs:18:1: 26:2>::run`\r\n#3 [mir_const] processing MIR for `<impl at src/main.rs:18:1: 26:2>::run`\r\n#4 [mir_promoted] processing `<impl at src/main.rs:18:1: 26:2>::run`\r\n#5 [mir_borrowck] borrow-checking `<impl at src/main.rs:18:1: 26:2>::run`\r\n#6 [type_of] computing type of `<impl at src/main.rs:18:1: 26:2>::run::{opaque#0}`\r\n#7 [check_mod_item_types] checking item types in top-level module\r\n#8 [analysis] running analysis passes on this crate\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93690/timeline", "performed_via_github_app": null, "state_reason": "completed"}