{"url": "https://api.github.com/repos/rust-lang/rust/issues/108831", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108831/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108831/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108831/events", "html_url": "https://github.com/rust-lang/rust/issues/108831", "id": 1612219522, "node_id": "I_kwDOAAsO6M5gGISC", "number": 108831, "title": "Segfault in Rustc when building with ASAN and ThinLTO options", "user": {"login": "NdsMsft", "id": 110200805, "node_id": "U_kgDOBpGH5Q", "avatar_url": "https://avatars.githubusercontent.com/u/110200805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NdsMsft", "html_url": "https://github.com/NdsMsft", "followers_url": "https://api.github.com/users/NdsMsft/followers", "following_url": "https://api.github.com/users/NdsMsft/following{/other_user}", "gists_url": "https://api.github.com/users/NdsMsft/gists{/gist_id}", "starred_url": "https://api.github.com/users/NdsMsft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NdsMsft/subscriptions", "organizations_url": "https://api.github.com/users/NdsMsft/orgs", "repos_url": "https://api.github.com/users/NdsMsft/repos", "events_url": "https://api.github.com/users/NdsMsft/events{/privacy}", "received_events_url": "https://api.github.com/users/NdsMsft/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 100522, "node_id": "MDU6TGFiZWwxMDA1MjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-crash", "name": "I-crash", "color": "e10c02", "default": false, "description": "Issue: The compiler crashes (SIGSEGV, SIGABRT, etc). Use I-ICE instead when the compiler panics."}, {"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "mojingran", "id": 55104525, "node_id": "MDQ6VXNlcjU1MTA0NTI1", "avatar_url": "https://avatars.githubusercontent.com/u/55104525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mojingran", "html_url": "https://github.com/mojingran", "followers_url": "https://api.github.com/users/mojingran/followers", "following_url": "https://api.github.com/users/mojingran/following{/other_user}", "gists_url": "https://api.github.com/users/mojingran/gists{/gist_id}", "starred_url": "https://api.github.com/users/mojingran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mojingran/subscriptions", "organizations_url": "https://api.github.com/users/mojingran/orgs", "repos_url": "https://api.github.com/users/mojingran/repos", "events_url": "https://api.github.com/users/mojingran/events{/privacy}", "received_events_url": "https://api.github.com/users/mojingran/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mojingran", "id": 55104525, "node_id": "MDQ6VXNlcjU1MTA0NTI1", "avatar_url": "https://avatars.githubusercontent.com/u/55104525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mojingran", "html_url": "https://github.com/mojingran", "followers_url": "https://api.github.com/users/mojingran/followers", "following_url": "https://api.github.com/users/mojingran/following{/other_user}", "gists_url": "https://api.github.com/users/mojingran/gists{/gist_id}", "starred_url": "https://api.github.com/users/mojingran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mojingran/subscriptions", "organizations_url": "https://api.github.com/users/mojingran/orgs", "repos_url": "https://api.github.com/users/mojingran/repos", "events_url": "https://api.github.com/users/mojingran/events{/privacy}", "received_events_url": "https://api.github.com/users/mojingran/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2023-03-06T21:17:44Z", "updated_at": "2023-05-31T18:47:50Z", "closed_at": "2023-05-31T18:47:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\nalong with any information you feel relevant to replicating the bug.\n-->\n\nI tried building the below cargo project with `cargo fuzz build`. This builds the file fuzz_target_1.rs with several ASAN options and links it against the project in src/example.rs. This causes rustc to segfault while attempting to compile the project. \n\n[rustc-fuzz-repro.tar.gz](https://github.com/rust-lang/rust/files/10902686/rustc-fuzz-repro.tar.gz)\n\nTo reproduce the issue you'll need [cargo-fuzz](https://github.com/rust-fuzz/cargo-fuzz) which exposes the `cargo fuzz` subcommand which constructs a `rustc` invocation with the ASAN options. \n\nThe project can be built successfully by explicitly disabling LTO via the `RUSTFLAGS` environment variable. By disabling LTO with `RUSTFLAGS=\"-Clto=no -Clinker-plugin-lto=no\" cargo fuzz build` rustc produces the 'fuzz_target_1' executable without segfaulting.\n\n### Meta\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\n\n`rustc --version --verbose`:\n```\nrustc 1.70.0-nightly (7820b62d2 2023-03-05)\nbinary: rustc\ncommit-hash: 7820b62d20bc548096d4632a3487987308cb4b5d\ncommit-date: 2023-03-05\nhost: x86_64-unknown-linux-gnu\nrelease: 1.70.0-nightly\nLLVM version: 15.0.7\n```\n\n`cargo fuzz --version`:\n```\ncargo-fuzz 0.11.2\n```\n\n<!--\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\n-->\n<details><summary>Backtrace</summary>\n<p>\n\n```\n<backtrace>\n(gdb) bt\n#0  __pthread_kill_implementation (no_tid=0, signo=6, threadid=140736779044416) at ./nptl/pthread_kill.c:44\n#1  __pthread_kill_internal (signo=6, threadid=140736779044416) at ./nptl/pthread_kill.c:78\n#2  __GI___pthread_kill (threadid=140736779044416, signo=signo@entry=6) at ./nptl/pthread_kill.c:89\n#3  0x00007fffe8955476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26\n#4  0x00007fffe893b7f3 in __GI_abort () at ./stdlib/abort.c:79\n#5  0x00007fffe893b71b in __assert_fail_base (fmt=0x7fffe8af0150 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\", assertion=0x7ffff26e3058 \"Ptr != End && \\\"dereferencing end() iterator\\\"\",\n    file=0x7ffff26e2cd8 \"rust/src/llvm-project/llvm/include/llvm/ADT/DenseMap.h\", line=1246, function=<optimized out>) at ./assert/assert.c:92\n#6  0x00007fffe894ce96 in __GI___assert_fail (assertion=0x7ffff26e3058 \"Ptr != End && \\\"dereferencing end() iterator\\\"\", file=0x7ffff26e2cd8 \"rust/src/llvm-project/llvm/include/llvm/ADT/DenseMap.h\", line=1246,\n    function=0x7ffff26e2df8 \"llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, Bucket, IsConst>::value_type* llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, Bucket, IsConst>::operator->() const [with KeyT = const llvm::MachineBasicBl\"...)\n    at ./assert/assert.c:101\n#7  0x00007fffeaa5e95d in llvm::DenseMapIterator<llvm::MachineBasicBlock const*, unsigned int, llvm::DenseMapInfo<llvm::MachineBasicBlock const*, void>, llvm::detail::DenseMapPair<llvm::MachineBasicBlock const*, unsigned int>, false>::operator-> (\n    this=0x7fffd5b858e0) at rust/src/llvm-project/llvm/include/llvm/ADT/DenseMap.h:1246\n#8  0x00007fffebeced65 in operator() (__closure=0x7fffd5b85988, A=0x7fff5cff5b00, B=0x7fff5cff5e20) at rust/src/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:2001\n#9  0x00007fffebf17801 in __gnu_cxx::__ops::_Iter_comp_iter<LiveDebugValues::InstrRefBasedLDV::mlocJoin(llvm::MachineBasicBlock&, llvm::SmallPtrSet<const llvm::MachineBasicBlock*, 16>&, LiveDebugValues::FuncValueTable&, LiveDebugValues::ValueTable&)::<lambda(const llvm::MachineBasicBlock*, const llvm::MachineBasicBlock*)> >::operator()<const llvm::MachineBasicBlock**, const llvm::MachineBasicBlock**>(const llvm::MachineBasicBlock **, const llvm::MachineBasicBlock **) (this=0x7fffd5b85988,\n    __it1=0x7fffd5b85bb0, __it2=0x7fffd5b85ba0) at /usr/include/c++/11/bits/predefined_ops.h:158\n#10 0x00007fffebf13c1b in std::__insertion_sort<const llvm::MachineBasicBlock**, __gnu_cxx::__ops::_Iter_comp_iter<LiveDebugValues::InstrRefBasedLDV::mlocJoin(llvm::MachineBasicBlock&, llvm::SmallPtrSet<const llvm::MachineBasicBlock*, 16>&, LiveDebugValues::FuncValueTable&, LiveDebugValues::ValueTable&)::<lambda(const llvm::MachineBasicBlock*, const llvm::MachineBasicBlock*)> > >(const llvm::MachineBasicBlock **, const llvm::MachineBasicBlock **, __gnu_cxx::__ops::_Iter_comp_iter<LiveDebugValues::InstrRefBasedLDV::mlocJoin(llvm::MachineBasicBlock&, llvm::SmallPtrSet<const llvm::MachineBasicBlock*, 16>&, LiveDebugValues::FuncValueTable&, LiveDebugValues::ValueTable&)::<lambda(const llvm::MachineBasicBlock*, const llvm::MachineBasicBlock*)> >) (\n    __first=0x7fffd5b85ba0, __last=0x7fffd5b85bc8, __comp=...) at /usr/include/c++/11/bits/stl_algo.h:1826\n#11 0x00007fffebf0f1f3 in std::__final_insertion_sort<const llvm::MachineBasicBlock**, __gnu_cxx::__ops::_Iter_comp_iter<LiveDebugValues::InstrRefBasedLDV::mlocJoin(llvm::MachineBasicBlock&, llvm::SmallPtrSet<const llvm::MachineBasicBlock*, 16>&, LiveDebugValues::FuncValueTable&, LiveDebugValues::ValueTable&)::<lambda(const llvm::MachineBasicBlock*, const llvm::MachineBasicBlock*)> > >(const llvm::MachineBasicBlock **, const llvm::MachineBasicBlock **, __gnu_cxx::__ops::_Iter_comp_iter<LiveDebugValues::InstrRefBasedLDV::mlocJoin(llvm::MachineBasicBlock&, llvm::SmallPtrSet<const llvm::MachineBasicBlock*, 16>&, LiveDebugValues::FuncValueTable&, LiveDebugValues::ValueTable&)::<lambda(const llvm::MachineBasicBlock*, const llvm::MachineBasicBlock*)> >) (__first=0x7fffd5b85ba0, __last=0x7fffd5b85bc8, __comp=...) at /usr/include/c++/11/bits/stl_algo.h:1871\n#12 0x00007fffebf06e11 in std::__sort<const llvm::MachineBasicBlock**, __gnu_cxx::__ops::_Iter_comp_iter<LiveDebugValues::InstrRefBasedLDV::mlocJoin(llvm::MachineBasicBlock&, llvm::SmallPtrSet<const llvm::MachineBasicBlock*, 16>&, LiveDebugValues::FuncValueTable&, LiveDebugValues::ValueTable&)::<lambda(const llvm::MachineBasicBlock*, const llvm::MachineBasicBlock*)> > >(const llvm::MachineBasicBlock **, const llvm::MachineBasicBlock **, __gnu_cxx::__ops::_Iter_comp_iter<LiveDebugValues::InstrRefBasedLDV::mlocJoin(llvm::MachineBasicBlock&, llvm::SmallPtrSet<const llvm::MachineBasicBlock*, 16>&, LiveDebugValues::FuncValueTable&, LiveDebugValues::ValueTable&)::<lambda(const llvm::MachineBasicBlock*, const llvm::MachineBasicBlock*)> >) (\n    __first=0x7fffd5b85ba0, __last=0x7fffd5b85bc8, __comp=...) at /usr/include/c++/11/bits/stl_algo.h:1957\n#13 0x00007fffebefa67a in std::sort<const llvm::MachineBasicBlock**, LiveDebugValues::InstrRefBasedLDV::mlocJoin(llvm::MachineBasicBlock&, llvm::SmallPtrSet<const llvm::MachineBasicBlock*, 16>&, LiveDebugValues::FuncValueTable&, LiveDebugValues::ValueTable&)::<lambda(const llvm::MachineBasicBlock*, const llvm::MachineBasicBlock*)> >(const llvm::MachineBasicBlock **, const llvm::MachineBasicBlock **, struct {...}) (__first=0x7fffd5b85ba0, __last=0x7fffd5b85bc8, __comp=...)\n    at /usr/include/c++/11/bits/stl_algo.h:4875\n#14 0x00007fffebeec05f in llvm::sort<const llvm::MachineBasicBlock**, LiveDebugValues::InstrRefBasedLDV::mlocJoin(llvm::MachineBasicBlock&, llvm::SmallPtrSet<const llvm::MachineBasicBlock*, 16>&, LiveDebugValues::FuncValueTable&, LiveDebugValues::ValueTable&)::<lambda(const llvm::MachineBasicBlock*, const llvm::MachineBasicBlock*)> >(const llvm::MachineBasicBlock **, const llvm::MachineBasicBlock **, struct {...}) (Start=0x7fffd5b85ba0, End=0x7fffd5b85bc8, Comp=...)\n    at rust/src/llvm-project/llvm/include/llvm/ADT/STLExtras.h:1587\n#15 0x00007fffebedddac in llvm::sort<llvm::SmallVector<const llvm::MachineBasicBlock*, 8>&, LiveDebugValues::InstrRefBasedLDV::mlocJoin(llvm::MachineBasicBlock&, llvm::SmallPtrSet<const llvm::MachineBasicBlock*, 16>&, LiveDebugValues::FuncValueTable&, LiveDebugValues::ValueTable&)::<lambda(const llvm::MachineBasicBlock*, const llvm::MachineBasicBlock*)> >(llvm::SmallVector<llvm::MachineBasicBlock const*, 8> &, struct {...}) (C=..., Comp=...)\n    at rust/src/llvm-project/llvm/include/llvm/ADT/STLExtras.h:1592\n#16 0x00007fffebecef61 in LiveDebugValues::InstrRefBasedLDV::mlocJoin (this=0x7fff5cf00f30, MBB=..., Visited=...,\n    OutLocs=std::unique_ptr<std::unique_ptr<LiveDebugValues::ValueIDNum [], std::default_delete<LiveDebugValues::ValueIDNum []> > []> = {...}, InLocs=std::unique_ptr<LiveDebugValues::ValueIDNum []> = {...})\n    at rust/src/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:2003\n#17 0x00007fffebed08d8 in LiveDebugValues::InstrRefBasedLDV::buildMLocValueMap (this=0x7fff5cf00f30, MF=..., MInLocs=std::unique_ptr<std::unique_ptr<LiveDebugValues::ValueIDNum [], std::default_delete<LiveDebugValues::ValueIDNum []> > []> = {...},\n    MOutLocs=std::unique_ptr<std::unique_ptr<LiveDebugValues::ValueIDNum [], std::default_delete<LiveDebugValues::ValueIDNum []> > []> = {...}, MLocTransfer=...)\n    at rust/src/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:2267\n#18 0x00007fffebed5f2f in LiveDebugValues::InstrRefBasedLDV::ExtendRanges (this=0x7fff5cf00f30, MF=..., DomTree=0x7fff5d1381e0, TPC=0x7fff5d150640, InputBBLimit=10000, InputDbgValLimit=50000)\n    at rust/src/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:3229\n#19 0x00007fffebe9532f in (anonymous namespace)::LiveDebugValues::runOnMachineFunction (this=0x7fff5d1380d0, MF=...) at rust/src/llvm-project/llvm/lib/CodeGen/LiveDebugValues/LiveDebugValues.cpp:123\n#20 0x00007fffebb087ef in llvm::MachineFunctionPass::runOnFunction (this=0x7fff5d1380d0, F=...) at rust/src/llvm-project/llvm/lib/CodeGen/MachineFunctionPass.cpp:85\n#21 0x00007fffed1441d7 in llvm::FPPassManager::runOnFunction (this=0x7fff5c26b020, F=...) at rust/src/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:1430\n#22 0x00007fffed1444a8 in llvm::FPPassManager::runOnModule (this=0x7fff5c26b020, M=...) at rust/src/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:1476\n#23 0x00007fffed144913 in (anonymous namespace)::MPPassManager::runOnModule (this=0x7fff5c1b9250, M=...) at rust/src/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:1545\n#24 0x00007fffed13f4e2 in llvm::legacy::PassManagerImpl::run (this=0x7fff5d1d6450, M=...) at rust/src/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:535\n#25 0x00007fffed145223 in llvm::legacy::PassManager::run (this=0x7fff5c9f0170, M=...) at rust/src/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:1672\n#26 0x00007fffea13dd82 in LLVMRustWriteOutputFile (Target=0x7fff5c000fa0, PMR=0x7fff5c9f0170, M=0x7fff5c0074f0, Path=<optimized out>, DwoPath=0x0, RustFileType=<optimized out>) at llvm-wrapper/PassWrapper.cpp:517\n#27 0x00007fffe9fcc319 in rustc_codegen_llvm::back::write::write_output_file () at compiler/rustc_codegen_llvm/src/back/write.rs:70\n#28 0x00007fffe9fd074b in rustc_codegen_llvm::back::write::codegen::{closure#2} () at compiler/rustc_codegen_llvm/src/back/write.rs:736\n#29 rustc_codegen_llvm::back::write::codegen::with_codegen<rustc_codegen_llvm::back::write::codegen::{closure_env#2}, core::result::Result<(), rustc_span::fatal_error::FatalError>> () at compiler/rustc_codegen_llvm/src/back/write.rs:598\n#30 rustc_codegen_llvm::back::write::codegen () at compiler/rustc_codegen_llvm/src/back/write.rs:735\n#31 0x00007fffe9ff8ceb in rustc_codegen_llvm::{impl#3}::codegen () at compiler/rustc_codegen_llvm/src/lib.rs:229\n#32 rustc_codegen_ssa::back::write::finish_intra_module_work<rustc_codegen_llvm::LlvmCodegenBackend> () at compiler/rustc_codegen_ssa/src/back/write.rs:936\n#33 0x00007fffe9ff2687 in rustc_codegen_ssa::back::write::execute_lto_work_item<rustc_codegen_llvm::LlvmCodegenBackend> () at compiler/rustc_codegen_ssa/src/back/write.rs:922\n#34 rustc_codegen_ssa::back::write::execute_work_item<rustc_codegen_llvm::LlvmCodegenBackend> () at compiler/rustc_codegen_ssa/src/back/write.rs:759\n#35 0x00007fffea0f1626 in rustc_codegen_ssa::back::write::spawn_work::{closure#0}<rustc_codegen_llvm::LlvmCodegenBackend> () at compiler/rustc_codegen_ssa/src/back/write.rs:1696\n#36 rustc_codegen_llvm::{impl#2}::spawn_named_thread::{closure#0}<rustc_codegen_ssa::back::write::spawn_work::{closure_env#0}<rustc_codegen_llvm::LlvmCodegenBackend>, ()> () at compiler/rustc_codegen_llvm/src/lib.rs:164\n#37 std::sys_common::backtrace::__rust_begin_short_backtrace<rustc_codegen_llvm::{impl#2}::spawn_named_thread::{closure_env#0}<rustc_codegen_ssa::back::write::spawn_work::{closure_env#0}<rustc_codegen_llvm::LlvmCodegenBackend>, ()>, ()> ()\n    at library/std/src/sys_common/backtrace.rs:121\n#38 0x00007fffea0a5b9f in std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure#0}<rustc_codegen_llvm::{impl#2}::spawn_named_thread::{closure_env#0}<rustc_codegen_ssa::back::write::spawn_work::{closure_env#0}<rustc_codegen_llvm::LlvmCodegenBackend>, ()>, ()> () at library/std/src/thread/mod.rs:560\n#39 core::panic::unwind_safe::{impl#23}::call_once<(), std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<rustc_codegen_llvm::{impl#2}::spawn_named_thread::{closure_env#0}<rustc_codegen_ssa::back::write::spawn_work::{closure_env#0}<rustc_codegen_llvm::LlvmCodegenBackend>, ()>, ()>> () at library/core/src/panic/unwind_safe.rs:271\n#40 std::panicking::try::do_call<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<rustc_codegen_llvm::{impl#2}::spawn_named_thread::{closure_env#0}<rustc_codegen_ssa::back::write::spawn_work::{closure_env#0}<rustc_codegen_llvm::LlvmCodegenBackend>, ()>, ()>>, ()> () at library/std/src/panicking.rs:483\n#41 std::panicking::try<(), core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<rustc_codegen_llvm::{impl#2}::spawn_named_thread::{closure_env#0}<rustc_codegen_ssa::back::write::spawn_work::{closure_env#0}<rustc_codegen_llvm::LlvmCodegenBackend>, ()>, ()>>> () at library/std/src/panicking.rs:447\n#42 std::panic::catch_unwind<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<rustc_codegen_llvm::{impl#2}::spawn_named_thread::{closure_env#0}<rustc_codegen_ssa::back::write::spawn_work::{closure_env#0}<rustc_codegen_llvm::LlvmCodegenBackend>, ()>, ()>>, ()> () at library/std/src/panic.rs:140\n#43 std::thread::{impl#0}::spawn_unchecked_::{closure#1}<rustc_codegen_llvm::{impl#2}::spawn_named_thread::{closure_env#0}<rustc_codegen_ssa::back::write::spawn_work::{closure_env#0}<rustc_codegen_llvm::LlvmCodegenBackend>, ()>, ()> () at library/std/src/thread/mod.rs:559\n#44 core::ops::function::FnOnce::call_once<std::thread::{impl#0}::spawn_unchecked_::{closure_env#1}<rustc_codegen_llvm::{impl#2}::spawn_named_thread::{closure_env#0}<rustc_codegen_ssa::back::write::spawn_work::{closure_env#0}<rustc_codegen_llvm::LlvmCodegenBackend>, ()>, ()>, ()> () at library/core/src/ops/function.rs:250\n#45 0x00007fffe8bec1f8 in alloc::boxed::{impl#45}::call_once<(), dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global> () at library/alloc/src/boxed.rs:1988\n#46 alloc::boxed::{impl#45}::call_once<(), alloc::boxed::Box<dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global>, alloc::alloc::Global> () at library/alloc/src/boxed.rs:1988\n#47 0x00007fffe8bd4185 in std::sys::unix::thread::{impl#2}::new::thread_start () at library/std/src/sys/unix/thread.rs:108\n#48 0x00007fffe89a7b43 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442\n#49 0x00007fffe8a39a00 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\n```\n\n</p>\n\n</details>\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"mojingran\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108831/timeline", "performed_via_github_app": null, "state_reason": "completed"}