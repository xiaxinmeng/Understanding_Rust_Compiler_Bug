{"url": "https://api.github.com/repos/rust-lang/rust/issues/21906", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/21906/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/21906/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/21906/events", "html_url": "https://github.com/rust-lang/rust/issues/21906", "id": 56430063, "node_id": "MDU6SXNzdWU1NjQzMDA2Mw==", "number": 21906, "title": "&mut self borrow conflicting with itself.", "user": {"login": "leejunseok", "id": 1222374, "node_id": "MDQ6VXNlcjEyMjIzNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1222374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leejunseok", "html_url": "https://github.com/leejunseok", "followers_url": "https://api.github.com/users/leejunseok/followers", "following_url": "https://api.github.com/users/leejunseok/following{/other_user}", "gists_url": "https://api.github.com/users/leejunseok/gists{/gist_id}", "starred_url": "https://api.github.com/users/leejunseok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leejunseok/subscriptions", "organizations_url": "https://api.github.com/users/leejunseok/orgs", "repos_url": "https://api.github.com/users/leejunseok/repos", "events_url": "https://api.github.com/users/leejunseok/events{/privacy}", "received_events_url": "https://api.github.com/users/leejunseok/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1146616045, "node_id": "MDU6TGFiZWwxMTQ2NjE2MDQ1", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-polonius", "name": "NLL-polonius", "color": "f799ea", "default": false, "description": "Issues related for using Polonius in the borrow checker"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2015-02-03T20:12:05Z", "updated_at": "2021-02-10T15:18:30Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I don't know why this happens but rovar and XMPPwocky on IRC believed it to be a compiler bug.\n\n``` rust\nstruct A {\n    a: i32\n}\n\nimpl A {\n    fn one(&mut self) -> &i32{\n        self.a = 10;\n        &self.a\n    }\n    fn two(&mut self) -> &i32 {\n        loop {\n            let k = self.one();\n            if *k > 10i32 {\n                return k;\n            }\n        }\n    }\n}\n```\n\n...gives the following error...\n\n```\n<anon>:12:21: 12:25 error: cannot borrow `*self` as mutable more than once at a time\n<anon>:12             let k = self.one();\n                              ^~~~\n<anon>:12:21: 12:25 note: previous borrow of `*self` occurs here; the mutable borrow prevents subsequent moves, borrows, or modification of `*self` until the borrow ends\n<anon>:12             let k = self.one();\n                              ^~~~\n<anon>:17:6: 17:6 note: previous borrow ends here\n<anon>:10     fn two(&mut self) -> &i32 {\n...\n<anon>:17     }\n              ^\nerror: aborting due to previous error\nplaypen: application terminated with error code 101\n```\n\nInterestingly, if the second method is changed to...\n\n``` rust\n    fn two(&mut self) -> &i32 {\n        loop {\n            let k = self.one();\n            return k;\n        }\n    }\n```\n\nThis will compile fine.\n\nplaypen: http://is.gd/mTkfw5\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/21906/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/21906/timeline", "performed_via_github_app": null, "state_reason": null}