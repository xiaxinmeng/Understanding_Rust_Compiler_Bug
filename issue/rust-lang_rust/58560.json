{"url": "https://api.github.com/repos/rust-lang/rust/issues/58560", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58560/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58560/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58560/events", "html_url": "https://github.com/rust-lang/rust/issues/58560", "id": 411526015, "node_id": "MDU6SXNzdWU0MTE1MjYwMTU=", "number": 58560, "title": "Macro generated code fails to compile", "user": {"login": "AnickaBurova", "id": 7688984, "node_id": "MDQ6VXNlcjc2ODg5ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7688984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnickaBurova", "html_url": "https://github.com/AnickaBurova", "followers_url": "https://api.github.com/users/AnickaBurova/followers", "following_url": "https://api.github.com/users/AnickaBurova/following{/other_user}", "gists_url": "https://api.github.com/users/AnickaBurova/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnickaBurova/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnickaBurova/subscriptions", "organizations_url": "https://api.github.com/users/AnickaBurova/orgs", "repos_url": "https://api.github.com/users/AnickaBurova/repos", "events_url": "https://api.github.com/users/AnickaBurova/events{/privacy}", "received_events_url": "https://api.github.com/users/AnickaBurova/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-18T15:19:37Z", "updated_at": "2019-02-18T15:53:04Z", "closed_at": "2019-02-18T15:53:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I  have a macro which generates bit of code.\r\n```rust \r\nmacro_rules! get_message {\r\n    ($name: ident, $result: ty: $result_inner: ty, $($arg: ident: $arg_ty: ty,)* -> $main: ty, $fun: ident, -> $handler: ty => $code: block) => {\r\n        pub struct $name {\r\n            $(pub $arg: $arg_ty,)*\r\n        }\r\n\r\n        impl Message for $name {\r\n            type Result = Addr<$result_inner>;\r\n        }\r\n\r\n        impl $name {\r\n            pub fn new($($arg: $arg_ty,)*) -> Self {\r\n                Self {\r\n                    $($arg,)*\r\n                }\r\n            }\r\n        }\r\n\r\n        impl $main {\r\n            pub fn $fun(&self, $($arg: $arg_ty,)*) -> impl Future<Item = $result, Error = Error> {\r\n                self.inner\r\n                    .send($name::new($($arg,)*))\r\n                    .map(|inner| Light::new(inner))\r\n                    .map_err(Error::from)\r\n            }\r\n        }\r\n\r\n        #[cfg(not(feature = \"manual\"))]\r\n        impl Handler<$name> for $handler {\r\n            type Result = Addr<$result_inner>;\r\n\r\n            #[allow(unused_variables)]\r\n            fn handle(&mut self, msg: $name, ctx: &mut Context<Self>) -> Self::Result {\r\n                let $name { $($arg,)* } = msg;\r\n                $code\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\nNot the shortest nor the nicest macro, it is more poc for now.\r\nIt is used like this:\r\n```rust\r\nget_message!(CreateLight, Light: LightImpl, index: u8, name: String,\r\n             -> Lighting, create_light,\r\n             -> LightingImpl => {\r\n                let addr = self\r\n                    .lights\r\n                    .entry(index)\r\n                    .or_insert(LightImpl::new(ctx.address(), index));\r\n                (*addr).clone()\r\n             });\r\n\r\n```\r\nIt generates these two errors:\r\n```bash\r\nerror[E0424]: expected value, found module `self`\r\n  --> src/lighting_impl.rs:35:28\r\n   |\r\n35 |                 let addr = self\r\n   |                            ^^^^ `self` value is a keyword only available in methods with `self` parameter\r\n\r\nerror[E0425]: cannot find value `ctx` in this scope\r\n  --> src/lighting_impl.rs:38:47\r\n   |\r\n38 |                     .or_insert(LightImpl::new(ctx.address(), index));\r\n   |                                               ^^^ not found in this scope\r\n\r\nerror: aborting due to 2 previous errors\r\n\r\n```\r\nWhen I have the trait implementation written manually, not generated by the macro, all is working all right.\r\nYou can reproduce the whole problem in this repo [macro-bug](https://github.com/AnickaBurova/macro-bug)\r\nSorry for not simpler example, I tried to get least amount of code out of my project, but I am limited in time to play around.\r\n\r\nIt is failing in the latest stable and nightly.\r\nMy system is archlinux 4.20.8 x86_64.\r\n\r\nThanks", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58560/timeline", "performed_via_github_app": null, "state_reason": "completed"}