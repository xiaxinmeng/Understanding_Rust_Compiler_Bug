{"url": "https://api.github.com/repos/rust-lang/rust/issues/24580", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/24580/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/24580/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/24580/events", "html_url": "https://github.com/rust-lang/rust/issues/24580", "id": 69362071, "node_id": "MDU6SXNzdWU2OTM2MjA3MQ==", "number": 24580, "title": "dead code (+ unused assignment, etc) warnings in macros do more harm than good", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-04-18T23:58:38Z", "updated_at": "2020-10-26T16:18:39Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "(imported from improperly closed bug #17427)\n\nConsider the following code:\n\n``` rust\nfn g(x: u8) -> u8 {\n    1 - x\n}\n\nfn main() {\n    let mut x = 1u8;\n    macro_rules! m {\n        () => {{ x = g(x);\n                 if x == 0 { x = 1; }\n        }}\n    }\n\n    m!();\n    g(1/x);\n    m!();\n}\n```\n\n[playpen](http://is.gd/tUWPua)\n\nThe `unused_assignments` lint fires from the expansion of the second occurrence of `m!()`. But if you follow the advice of the lint and remove the assignment, you discover that the assignment was in fact significant, because when you remove the assignment, the side effect from the _first_ occurrence of `m!()` is lost, and so the call to `g` divides by zero.\n\nThere are a number of different ways to handle this.\n- This simplest would be to disable such lints for code with spans that are inside macro definitions, as was essentially the original suggestion of #17427 \n- Another option would be to revise our strategy for such lints, and to warn about an unused assignment (or other dead code) for a given span _only if_ _ALL_ such occurrences trigger the warning.  I.e. as soon as one expansion proves that that code in the macro is useful, then you do not get any warning about it.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/24580/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/24580/timeline", "performed_via_github_app": null, "state_reason": null}