{"url": "https://api.github.com/repos/rust-lang/rust/issues/30387", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/30387/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/30387/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/30387/events", "html_url": "https://github.com/rust-lang/rust/issues/30387", "id": 122191961, "node_id": "MDU6SXNzdWUxMjIxOTE5NjE=", "number": 30387, "title": "Confusing lifetime inference error / error messages", "user": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-15T04:32:17Z", "updated_at": "2017-06-12T16:14:01Z", "closed_at": "2017-06-12T16:14:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not sure whether this is code that ought to be valid but the lifetime inference isn't clever enough for, or if it's invalid but subtyping makes it hard to give a good error message about why.  This part is reduced from code in the `regex` crate (specifically `Captures`):\n\n``` rust\nuse std::ops::Index;\nstruct StrHolder<'a>(&'a str);\nimpl<'a> Index<&'a str> for StrHolder<'a> {\n    type Output = str;\n    fn index<'b>(&'b self, _name: &str) -> &'b str { self.0 }\n}\n```\n\nAnd this tries to use it:\n\n``` rust\npub fn problem(s: &str) -> usize {\n    let sh = StrHolder(s);\n    sh[\"whatever\"].len()\n}\n```\n\nWhich leads to this:\n\n```\nbounds_thing.rs:10:24: 10:25 error: cannot infer an appropriate lifetime for automatic coercion due to conflicting requirements [E0495]\nbounds_thing.rs:10     let sh = StrHolder(s);\n                                          ^\nbounds_thing.rs:10:14: 10:23 note: first, the lifetime cannot outlive the expression at 10:13...\nbounds_thing.rs:10     let sh = StrHolder(s);\n                                ^~~~~~~~~\nbounds_thing.rs:10:14: 10:23 note: ...so that a type/lifetime parameter is in scope here\nbounds_thing.rs:10     let sh = StrHolder(s);\n                                ^~~~~~~~~\nbounds_thing.rs:10:24: 10:25 note: but, the lifetime must be valid for the expression at 10:23...\nbounds_thing.rs:10     let sh = StrHolder(s);\n                                          ^\nbounds_thing.rs:10:24: 10:25 note: ...so that auto-reference is valid at the time of borrow\nbounds_thing.rs:10     let sh = StrHolder(s);\n                                          ^\n```\n\nIf the `impl` started like this (which is the PR I'm going to send to `regex`) then it would work, because there wouldn't be a constraint between the index string and the region parameter on `problem` (in addition to `Index` requiring the returned `str` to have the same lifetime as the `StrHolder`):\n\n``` rust\nimpl<'a, 'i> Index<&'i str> for StrHolder<'a>\n```\n\nThe weird part is that making this change, to explicitly coerce the `&'static str` literal to an unspecified maybe-shorter lifetime, also fixes it: \n\n``` rust\n    sh[\"whatever\" as &str].len()\n```\n\nAnd this is why I'm wondering if it's more than just a quality-of-error-message issue.\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/30387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/30387/timeline", "performed_via_github_app": null, "state_reason": "completed"}