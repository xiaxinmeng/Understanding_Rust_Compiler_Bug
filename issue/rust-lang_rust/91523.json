{"url": "https://api.github.com/repos/rust-lang/rust/issues/91523", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91523/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91523/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91523/events", "html_url": "https://github.com/rust-lang/rust/issues/91523", "id": 1071217607, "node_id": "I_kwDOAAsO6M4_2XvH", "number": 91523, "title": "`cargo clippy --fix` created a lifetime issue by applying a fix", "user": {"login": "klingtnet", "id": 1538057, "node_id": "MDQ6VXNlcjE1MzgwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1538057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klingtnet", "html_url": "https://github.com/klingtnet", "followers_url": "https://api.github.com/users/klingtnet/followers", "following_url": "https://api.github.com/users/klingtnet/following{/other_user}", "gists_url": "https://api.github.com/users/klingtnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/klingtnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klingtnet/subscriptions", "organizations_url": "https://api.github.com/users/klingtnet/orgs", "repos_url": "https://api.github.com/users/klingtnet/repos", "events_url": "https://api.github.com/users/klingtnet/events{/privacy}", "received_events_url": "https://api.github.com/users/klingtnet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-12-04T14:16:42Z", "updated_at": "2021-12-04T14:16:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```sh\r\n$ cargo clippy --fix\r\n```\r\n\r\nI expected to see this happen: That clippy can apply the fixes without generating broken code.\r\n\r\nInstead, this happened: Clippy created a lifetime issue and aborted.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.59.0-nightly (532d2b14c 2021-12-03)\r\nbinary: rustc\r\ncommit-hash: 532d2b14c05f9bc20b2d27cbb5f4550d28343a36\r\ncommit-date: 2021-12-03\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.59.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nNo backtrace available.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nHere's the full output of `cargo clippy fix`:\r\n\r\n        Checking rosc v0.6.0 (/home/alinz/code/rosc)\r\n    warning: failed to automatically apply fixes suggested by rustc to crate `rosc`\r\n    \r\n    after fixes were automatically applied the compiler reported errors within these files:\r\n    \r\n      * src/decoder.rs\r\n    \r\n    This likely indicates a bug in either rustc or cargo itself,\r\n    and we would appreciate a bug report! You're likely to see\r\n    a number of compiler warnings after this message which cargo\r\n    attempted to fix but failed. If you could open an issue at\r\n    https://github.com/rust-lang/rust/issues\r\n    quoting the full output of this command we'd be very appreciative!\r\n    Note that you may be able to make some more progress in the near-term\r\n    fixing code with the `--broken-code` flag\r\n    \r\n    The following errors were reported:\r\n    error[E0597]: `elem_size` does not live long enough\r\n       --> src/decoder.rs:121:18\r\n        |\r\n    119 | /     map_parser(\r\n    120 | |         |input| {\r\n        | |         ------- value captured here\r\n    121 | |             take(elem_size)(input).map_err(|_: nom::Err<OscError>| {\r\n        | |                  ^^^^^^^^^ borrowed value does not live long enough\r\n    122 | |                 nom::Err::Error(OscError::BadBundle(\r\n    ...   |\r\n    127 | |         |input| decode_packet(input, original_input),\r\n    128 | |     )(input)\r\n        | |_____- a temporary with access to the borrow is created here ...\r\n    129 |   }\r\n        |   -\r\n        |   |\r\n        |   `elem_size` dropped here while still borrowed\r\n        |   ... and the borrow might be used here, when that temporary is dropped and runs the destructor for type `impl FnMut(&[u8])-> std::result::Result<(&[u8], types::OscPacket), nom::Err<errors::OscError>>`\r\n        |\r\n        = note: the temporary is part of an expression at the end of a block;\r\n                consider forcing this temporary to be dropped sooner, before the block's local variables are dropped\r\n    help: for example, you could save the expression's value in a new local variable `x` and then make `x` be the expression at the end of the block\r\n        |\r\n    119 ~     let x = map_parser(\r\n    120 |         |input| {\r\n    121 |             take(elem_size)(input).map_err(|_: nom::Err<OscError>| {\r\n    122 |                 nom::Err::Error(OscError::BadBundle(\r\n    123 |                     \"Bundle shorter than expected!\".to_string(),\r\n    124 |                 ))\r\n      ...\r\n    \r\n    error: aborting due to previous error\r\n    \r\n    For more information about this error, try `rustc --explain E0597`.\r\n    Original diagnostics will follow.\r\n    \r\n    warning: returning the result of a `let` binding from a block\r\n       --> src/decoder.rs:128:5\r\n        |\r\n    118 | /     let result = map_parser(\r\n    119 | |         |input| {\r\n    120 | |             take(elem_size)(input).map_err(|_: nom::Err<OscError>| {\r\n    121 | |                 nom::Err::Error(OscError::BadBundle(\r\n    ...   |\r\n    126 | |         |input| decode_packet(input, original_input),\r\n    127 | |     )(input);\r\n        | |_____________- unnecessary `let` binding\r\n    128 |       result\r\n        |       ^^^^^^\r\n        |\r\n        = note: `#[warn(clippy::let_and_return)]` on by default\r\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\r\n    help: return the expression directly\r\n        |\r\n    118 ~\r\n    119 ~     map_parser(\r\n    120 +         |input| {\r\n    121 +             take(elem_size)(input).map_err(|_: nom::Err<OscError>| {\r\n    122 +                 nom::Err::Error(OscError::BadBundle(\r\n    123 +                     \"Bundle shorter than expected!\".to_string(),\r\n      ...\r\n    \r\n    warning: `rosc` (lib) generated 1 warning\r\n    warning: `rosc` (lib test) generated 1 warning (1 duplicate)\r\n        Finished dev [unoptimized + debuginfo] target(s) in 0.69s\r\n        \r\nThis can be reproduced by applying the command to github.com/klingtnet/rosc@apply-clippy-suggestions https://github.com/klingtnet/rosc/compare/apply-clippy-suggestions", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91523/timeline", "performed_via_github_app": null, "state_reason": null}