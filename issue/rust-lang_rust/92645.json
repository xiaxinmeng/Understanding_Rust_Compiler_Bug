{"url": "https://api.github.com/repos/rust-lang/rust/issues/92645", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92645/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92645/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92645/events", "html_url": "https://github.com/rust-lang/rust/issues/92645", "id": 1096190673, "node_id": "I_kwDOAAsO6M5BVorR", "number": 92645, "title": "Implementation-specific \"empty lifetime in universe\" error", "user": {"login": "QuineDot", "id": 75067664, "node_id": "MDQ6VXNlcjc1MDY3NjY0", "avatar_url": "https://avatars.githubusercontent.com/u/75067664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuineDot", "html_url": "https://github.com/QuineDot", "followers_url": "https://api.github.com/users/QuineDot/followers", "following_url": "https://api.github.com/users/QuineDot/following{/other_user}", "gists_url": "https://api.github.com/users/QuineDot/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuineDot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuineDot/subscriptions", "organizations_url": "https://api.github.com/users/QuineDot/orgs", "repos_url": "https://api.github.com/users/QuineDot/repos", "events_url": "https://api.github.com/users/QuineDot/events{/privacy}", "received_events_url": "https://api.github.com/users/QuineDot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-01-07T10:30:19Z", "updated_at": "2022-06-21T02:23:46Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "[Given the following code:](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=3875315ad027e156fa808e6fb5676e2f)\r\n```rust\r\nuse std::borrow::Cow;\r\n\r\nfn foo<K, F>(f: F)\r\nwhere\r\n    F: Fn(&String) -> Cow<'_, K>,\r\n    for<'any> Cow<'any, K>: PartialEq,\r\n    K: ToOwned + ?Sized,\r\n{\r\n    let mut s = \"test\".to_string();\r\n    {\r\n        let a = f(&s);\r\n        let b = f(&s);\r\n        dbg!(a == b);\r\n    }\r\n    s.push_str(\" borrows done\");\r\n}\r\n\r\nfn main() {\r\n    foo(|s| Cow::<'_, usize>::Owned(s.len()));\r\n    foo(|s| Cow::Borrowed(&s[0..1]));\r\n    fn f<F: for<'l> Fn(&'l String) -> Cow<'l, Option<Cow<'l, str>>>>(f: F) -> F { f }\r\n    foo::<Option<Cow<'_,str>>, _>(f(|s| Cow::Owned(s.get(0..1).map(Cow::Borrowed))));\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\n\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:22:5\r\n   |\r\n22 |     foo::<Option<Cow<'_,str>>, _>(f(|s| Cow::Owned(s.get(0..1).map(Cow::Borrowed))));\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^   ----------------------------------------------\r\n   |     |                               |\r\n   |     |                               the expected closure\r\n   |     |                               the found closure\r\n   |     lifetime mismatch\r\n   |\r\n   = note: expected associated type `<[closure@src/main.rs:22:37: 22:83] as FnOnce<(&String,)>>::Output`\r\n              found associated type `<[closure@src/main.rs:22:37: 22:83] as FnOnce<(&String,)>>::Output`\r\n   = note: the required lifetime does not necessarily outlive the empty lifetime in universe U6\r\nnote: the lifetime requirement is introduced here\r\n  --> src/main.rs:5:23\r\n   |\r\n5  |     F: Fn(&String) -> Cow<'_, K>,\r\n   |                       ^^^^^^^^^^\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should be:\r\n\r\nAn inscrutable error that doesn't mention universes or the empty lifetime.\r\n\r\n----\r\n\r\nI didn't expect this to compile, and I didn't expect a simple error either, but I was surprised to see such implementation-specific details as the empty lifetime and \"universe U6\".  I thought you'd want to know too.\r\n\r\nDiscovered on the Playground, Rust 1.57.0, no change on Beta or Nightly.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92645/timeline", "performed_via_github_app": null, "state_reason": null}