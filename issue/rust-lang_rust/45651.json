{"url": "https://api.github.com/repos/rust-lang/rust/issues/45651", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45651/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45651/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45651/events", "html_url": "https://github.com/rust-lang/rust/issues/45651", "id": 269950409, "node_id": "MDU6SXNzdWUyNjk5NTA0MDk=", "number": 45651, "title": "When seeing `x<-y` in a boolean expression, suggest `x < -y`.", "user": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36956, "node_id": "MDU6TGFiZWwzNjk1Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-frontend", "name": "A-frontend", "color": "f7e101", "default": false, "description": "Area: frontend (errors, parsing and HIR)"}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 693665463, "node_id": "MDU6TGFiZWw2OTM2NjU0NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-diagnostics", "name": "WG-diagnostics", "color": "c2e0c6", "default": false, "description": "Working group: diagnostics"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-10-31T13:04:26Z", "updated_at": "2018-07-01T15:50:07Z", "closed_at": "2018-07-01T15:50:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "* Rationale: https://stackoverflow.com/q/47028390\r\n\r\n[Test case](https://play.rust-lang.org/?gist=ac3b3d90d2c654dbc49a21c6c2ea0a1f&version=nightly):\r\n\r\n```rust\r\nfn main() {\r\n    let x = -5;\r\n    if x<-1 {\r\n        println!(\"ok\");\r\n    }\r\n}\r\n```\r\n\r\nThe error currently looks like:\r\n\r\n```\r\nerror: placement-in expression syntax is experimental and subject to change. (see issue #27779)\r\n --> src/main.rs:3:8\r\n  |\r\n3 |     if x<-1 {\r\n  |        ^^^^\r\n  |\r\n  = help: add #![feature(placement_in_syntax)] to the crate attributes to enable\r\n```\r\n\r\nbut the intent was not to use the placement-in, the suggestion is just confusing the user. If we do add `#![feature(placement_in_syntax)]` [the error message would be even worse](https://play.rust-lang.org/?gist=7132b050c3243ccb08b5b1ece9831376&version=nightly):\r\n\r\n```\r\nerror[E0277]: the trait bound `{integer}: std::ops::Placer<_>` is not satisfied\r\n --> src/main.rs:5:8\r\n  |\r\n5 |     if x<-1 {\r\n  |        ----\r\n  |        |\r\n  |        the trait `std::ops::Placer<_>` is not implemented for `{integer}`\r\n  |        in this macro invocation\r\n  |\r\n  = help: the following implementations were found:\r\n            <std::collections::linked_list::BackPlace<'a, T> as std::ops::Placer<T>>\r\n            <std::collections::vec_deque::PlaceBack<'a, T> as std::ops::Placer<T>>\r\n            <std::collections::hash_map::Entry<'a, K, V> as std::ops::Placer<V>>\r\n            <&'a mut std::collections::BinaryHeap<T> as std::ops::Placer<T>>\r\n          and 4 others\r\n  = note: required by `std::ops::Placer::make_place`\r\n```\r\n\r\nThe suggestion should actually mention inserting a space between `<` and `-` if a comparison with a negative number is intended, e.g.\r\n\r\n```\r\nerror: placement-in expression syntax is experimental and subject to change. (see issue #27779)\r\n --> src/main.rs:3:8\r\n  |\r\n3 |     if x<-1 {\r\n  |        ^^^^\r\n  |        hint: for less-than comparison, try to add some spaces: `x < -1`\r\n  |\r\n  = help: add #![feature(placement_in_syntax)] to the crate attributes to enable\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45651/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45651/timeline", "performed_via_github_app": null, "state_reason": "completed"}