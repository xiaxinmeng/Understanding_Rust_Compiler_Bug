{"url": "https://api.github.com/repos/rust-lang/rust/issues/110892", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110892/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110892/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110892/events", "html_url": "https://github.com/rust-lang/rust/issues/110892", "id": 1686574965, "node_id": "I_kwDOAAsO6M5khxd1", "number": 110892, "title": "ICE: `expected ConstKind::Value, got Unevaluated(UnevaluatedConst...`", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "open", "locked": false, "assignee": {"login": "bryangarza", "id": 1396101, "node_id": "MDQ6VXNlcjEzOTYxMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1396101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryangarza", "html_url": "https://github.com/bryangarza", "followers_url": "https://api.github.com/users/bryangarza/followers", "following_url": "https://api.github.com/users/bryangarza/following{/other_user}", "gists_url": "https://api.github.com/users/bryangarza/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryangarza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryangarza/subscriptions", "organizations_url": "https://api.github.com/users/bryangarza/orgs", "repos_url": "https://api.github.com/users/bryangarza/repos", "events_url": "https://api.github.com/users/bryangarza/events{/privacy}", "received_events_url": "https://api.github.com/users/bryangarza/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bryangarza", "id": 1396101, "node_id": "MDQ6VXNlcjEzOTYxMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1396101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryangarza", "html_url": "https://github.com/bryangarza", "followers_url": "https://api.github.com/users/bryangarza/followers", "following_url": "https://api.github.com/users/bryangarza/following{/other_user}", "gists_url": "https://api.github.com/users/bryangarza/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryangarza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryangarza/subscriptions", "organizations_url": "https://api.github.com/users/bryangarza/orgs", "repos_url": "https://api.github.com/users/bryangarza/repos", "events_url": "https://api.github.com/users/bryangarza/events{/privacy}", "received_events_url": "https://api.github.com/users/bryangarza/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2023-04-27T10:33:26Z", "updated_at": "2023-04-28T15:41:39Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\nhow to create smaller examples.\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\n-->\n\n### Code\n\n```Rust\n#![feature(generic_const_exprs)]\n\nmod assert {\n    use std::mem::{Assume, BikeshedIntrinsicFrom};\n\n    pub fn is_transmutable<\n        Src,\n        Dst,\n        Context,\n        const ASSUME_ALIGNMENT: bool,\n        const ASSUME_LIFETIMES: bool,\n        const ASSUME_SAFETY: bool,\n        const ASSUME_VALIDITY: bool,\n    >()\n    where\n        Dst: BikeshedIntrinsicFrom<\n            Src,\n            Context,\n            { from_options(ASSUME_ALIGNMENT, ASSUME_LIFETIMES, ASSUME_SAFETY, ASSUME_VALIDITY) }\n        >,\n    {}\n\n    const fn from_options(\n        ,\n        ,\n        ,\n        ,\n    ) -> Assume {}\n}\n\nfn test() {\n    struct Context;\n    #[repr(C)] struct Src;\n    #[repr(C)] struct Dst;\n     \n    false(); \n    assert::is_transmutable::<Src, Dst, Context, false, false, { true }, false>(); \n     \n}\n\n```\n\n\n### Meta\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\n\n`rustc --version --verbose`:\n```\nrustc 1.71.0-nightly (1c42cb4ef 2023-04-26)\nbinary: rustc\ncommit-hash: 1c42cb4ef0544fbfaa500216e53382d6b079c001\ncommit-date: 2023-04-26\nhost: x86_64-unknown-linux-gnu\nrelease: 1.71.0-nightly\nLLVM version: 16.0.2\n```\n\n### Error output\n\n```\nyes\n```\n\n<!--\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\n-->\n<details><summary><strong>Backtrace</strong></summary>\n<p>\n\n```\nerror: internal compiler error: compiler/rustc_middle/src/ty/consts.rs:159:18: expected ConstKind::Value, got Unevaluated(UnevaluatedConst { def: DefId(0:15 ~ treereduce[c646]::assert::is_transmutable::{constant#0}), substs: [test::Src, test::Dst, test::Context, Const { ty: bool, kind: Value(Leaf(0x00)) }, Const { ty: bool, kind: Value(Leaf(0x00)) }, Const { ty: bool, kind: Value(Leaf(0x01)) }, Const { ty: bool, kind: Value(Leaf(0x00)) }] })\n\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/compiler/rustc_errors/src/lib.rs:1643:9\nstack backtrace:\n   0:     0x7f78d4f68e73 - std::backtrace_rs::backtrace::libunwind::trace::h0c8179e89cc9893e\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\n   1:     0x7f78d4f68e73 - std::backtrace_rs::backtrace::trace_unsynchronized::hfadffaff9fceb6ba\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   2:     0x7f78d4f68e73 - std::sys_common::backtrace::_print_fmt::ha49f609af156c4cb\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/sys_common/backtrace.rs:65:5\n   3:     0x7f78d4f68e73 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h0ad104dc9ebb0bab\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/sys_common/backtrace.rs:44:22\n   4:     0x7f78d4fc9c8f - core::fmt::write::h076b507083203424\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/core/src/fmt/mod.rs:1247:17\n   5:     0x7f78d4f5bea1 - std::io::Write::write_fmt::ha4c326e8c8c981e1\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/io/mod.rs:1712:15\n   6:     0x7f78d4f68c85 - std::sys_common::backtrace::_print::hbc9e8503f2c8583b\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/sys_common/backtrace.rs:47:5\n   7:     0x7f78d4f68c85 - std::sys_common::backtrace::print::he24fec1d9c5516a7\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/sys_common/backtrace.rs:34:9\n   8:     0x7f78d4f6b847 - std::panicking::default_hook::{{closure}}::hf29caaf6379226a6\n   9:     0x7f78d4f6b635 - std::panicking::default_hook::h0765c9476c979227\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/panicking.rs:288:9\n  10:     0x7f78d81bf8c5 - <rustc_driver_impl[b4ece89b41fa04d8]::DEFAULT_HOOK::{closure#0}::{closure#0} as core[a53159a38bb5d97c]::ops::function::FnOnce<(&core[a53159a38bb5d97c]::panic::panic_info::PanicInfo,)>>::call_once::{shim:vtable#0}\n  11:     0x7f78d4f6bf85 - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::h7a83df3f1b1b39ec\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/alloc/src/boxed.rs:1976:9\n  12:     0x7f78d4f6bf85 - std::panicking::rust_panic_with_hook::h060701a46b500fdf\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/panicking.rs:695:13\n  13:     0x7f78d86cf0d1 - std[b0e36382822581c2]::panicking::begin_panic::<rustc_errors[e242ea0d30f7fc85]::ExplicitBug>::{closure#0}\n  14:     0x7f78d86cdeb6 - std[b0e36382822581c2]::sys_common::backtrace::__rust_end_short_backtrace::<std[b0e36382822581c2]::panicking::begin_panic<rustc_errors[e242ea0d30f7fc85]::ExplicitBug>::{closure#0}, !>\n  15:     0x7f78d8695da6 - std[b0e36382822581c2]::panicking::begin_panic::<rustc_errors[e242ea0d30f7fc85]::ExplicitBug>\n  16:     0x7f78d87174d6 - <rustc_errors[e242ea0d30f7fc85]::HandlerInner>::bug::<&alloc[5698eed4a099ff47]::string::String>\n  17:     0x7f78d87171a0 - <rustc_errors[e242ea0d30f7fc85]::Handler>::bug::<&alloc[5698eed4a099ff47]::string::String>\n  18:     0x7f78d87107bb - rustc_middle[74d31bc1c7288efd]::util::bug::opt_span_bug_fmt::<rustc_span[5acbb0d3e38bbf81]::span_encoding::Span>::{closure#0}\n  19:     0x7f78d870e0fa - rustc_middle[74d31bc1c7288efd]::ty::context::tls::with_opt::<rustc_middle[74d31bc1c7288efd]::util::bug::opt_span_bug_fmt<rustc_span[5acbb0d3e38bbf81]::span_encoding::Span>::{closure#0}, !>::{closure#0}\n  20:     0x7f78d870e0ca - rustc_middle[74d31bc1c7288efd]::ty::context::tls::with_context_opt::<rustc_middle[74d31bc1c7288efd]::ty::context::tls::with_opt<rustc_middle[74d31bc1c7288efd]::util::bug::opt_span_bug_fmt<rustc_span[5acbb0d3e38bbf81]::span_encoding::Span>::{closure#0}, !>::{closure#0}, !>\n  21:     0x7f78d638cd0d - rustc_middle[74d31bc1c7288efd]::util::bug::bug_fmt\n  22:     0x7f78d8691ed6 - <rustc_middle[74d31bc1c7288efd]::ty::consts::Const>::to_valtree\n  23:     0x7f78d8ee52de - <rustc_transmute[1ee791244e44a281]::Assume>::from_const\n  24:     0x7f78d6aae5b9 - <rustc_trait_selection[ce8ecfa74af62748]::traits::select::SelectionContext>::confirm_candidate\n  25:     0x7f78d6aa0d6f - <rustc_trait_selection[ce8ecfa74af62748]::traits::select::SelectionContext>::evaluate_stack\n  26:     0x7f78d6a9f3f4 - <rustc_query_system[38efe1ae13b76606]::dep_graph::graph::DepGraph<rustc_middle[74d31bc1c7288efd]::dep_graph::dep_node::DepKind>>::with_anon_task::<rustc_middle[74d31bc1c7288efd]::ty::context::TyCtxt, <rustc_trait_selection[ce8ecfa74af62748]::traits::select::SelectionContext>::in_task<<rustc_trait_selection[ce8ecfa74af62748]::traits::select::SelectionContext>::evaluate_trait_predicate_recursively::{closure#0}::{closure#2}, core[a53159a38bb5d97c]::result::Result<rustc_middle[74d31bc1c7288efd]::traits::select::EvaluationResult, rustc_middle[74d31bc1c7288efd]::traits::select::OverflowError>>::{closure#0}, core[a53159a38bb5d97c]::result::Result<rustc_middle[74d31bc1c7288efd]::traits::select::EvaluationResult, rustc_middle[74d31bc1c7288efd]::traits::select::OverflowError>>\n  27:     0x7f78d6ce2d2c - <rustc_trait_selection[ce8ecfa74af62748]::traits::select::SelectionContext>::evaluate_predicate_recursively\n  28:     0x7f78d687ae43 - rustc_traits[bbceeee60bcdb08d]::evaluate_obligation::evaluate_obligation\n  29:     0x7f78d6878b6d - rustc_query_system[38efe1ae13b76606]::query::plumbing::try_execute_query::<rustc_query_impl[d894186be28c7657]::queries::evaluate_obligation, rustc_query_impl[d894186be28c7657]::plumbing::QueryCtxt>\n  30:     0x7f78d6359102 - <rustc_trait_selection[ce8ecfa74af62748]::traits::fulfill::FulfillProcessor as rustc_data_structures[ecde4e0aacf74356]::obligation_forest::ObligationProcessor>::process_obligation\n  31:     0x7f78d6355399 - <rustc_data_structures[ecde4e0aacf74356]::obligation_forest::ObligationForest<rustc_trait_selection[ce8ecfa74af62748]::traits::fulfill::PendingPredicateObligation>>::process_obligations::<rustc_trait_selection[ce8ecfa74af62748]::traits::fulfill::FulfillProcessor>\n  32:     0x7f78d633e7e2 - <rustc_hir_typeck[6d85701173a32a15]::fn_ctxt::FnCtxt>::check_argument_types\n  33:     0x7f78d6331a9a - <rustc_hir_typeck[6d85701173a32a15]::fn_ctxt::FnCtxt>::check_call\n  34:     0x7f78d6711fa6 - <rustc_hir_typeck[6d85701173a32a15]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\n  35:     0x7f78d6759f4b - <rustc_hir_typeck[6d85701173a32a15]::fn_ctxt::FnCtxt>::check_block_with_expected\n  36:     0x7f78d67127d6 - <rustc_hir_typeck[6d85701173a32a15]::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\n  37:     0x7f78d68d19ad - <rustc_hir_typeck[6d85701173a32a15]::fn_ctxt::FnCtxt>::check_return_expr\n  38:     0x7f78d68c9d53 - rustc_hir_typeck[6d85701173a32a15]::check::check_fn\n  39:     0x7f78d68b223e - rustc_hir_typeck[6d85701173a32a15]::typeck\n  40:     0x7f78d68a70b6 - rustc_query_system[38efe1ae13b76606]::query::plumbing::try_execute_query::<rustc_query_impl[d894186be28c7657]::queries::typeck, rustc_query_impl[d894186be28c7657]::plumbing::QueryCtxt>\n  41:     0x7f78d71fc5d0 - rustc_query_system[38efe1ae13b76606]::query::plumbing::try_execute_query::<rustc_query_impl[d894186be28c7657]::queries::used_trait_imports, rustc_query_impl[d894186be28c7657]::plumbing::QueryCtxt>\n  42:     0x7f78d7698145 - rustc_hir_analysis[72726d43727a00d0]::check_crate\n  43:     0x7f78d769201d - rustc_interface[69aa8c17999313ff]::passes::analysis\n  44:     0x7f78d793e3a2 - rustc_query_system[38efe1ae13b76606]::query::plumbing::try_execute_query::<rustc_query_impl[d894186be28c7657]::queries::analysis, rustc_query_impl[d894186be28c7657]::plumbing::QueryCtxt>\n  45:     0x7f78d793e0b0 - <rustc_query_impl[d894186be28c7657]::Queries as rustc_middle[74d31bc1c7288efd]::ty::query::QueryEngine>::analysis\n  46:     0x7f78d73ba90a - <rustc_middle[74d31bc1c7288efd]::ty::context::GlobalCtxt>::enter::<rustc_driver_impl[b4ece89b41fa04d8]::run_compiler::{closure#1}::{closure#2}::{closure#4}, core[a53159a38bb5d97c]::result::Result<(), rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>>\n  47:     0x7f78d73b9b48 - <rustc_interface[69aa8c17999313ff]::interface::Compiler>::enter::<rustc_driver_impl[b4ece89b41fa04d8]::run_compiler::{closure#1}::{closure#2}, core[a53159a38bb5d97c]::result::Result<core[a53159a38bb5d97c]::option::Option<rustc_interface[69aa8c17999313ff]::queries::Linker>, rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>>\n  48:     0x7f78d73b7b6f - rustc_span[5acbb0d3e38bbf81]::set_source_map::<core[a53159a38bb5d97c]::result::Result<(), rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>, rustc_interface[69aa8c17999313ff]::interface::run_compiler<core[a53159a38bb5d97c]::result::Result<(), rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>, rustc_driver_impl[b4ece89b41fa04d8]::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\n  49:     0x7f78d73b7200 - std[b0e36382822581c2]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[69aa8c17999313ff]::util::run_in_thread_pool_with_globals<rustc_interface[69aa8c17999313ff]::interface::run_compiler<core[a53159a38bb5d97c]::result::Result<(), rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>, rustc_driver_impl[b4ece89b41fa04d8]::run_compiler::{closure#1}>::{closure#0}, core[a53159a38bb5d97c]::result::Result<(), rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[a53159a38bb5d97c]::result::Result<(), rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>>\n  50:     0x7f78d73b6b21 - <<std[b0e36382822581c2]::thread::Builder>::spawn_unchecked_<rustc_interface[69aa8c17999313ff]::util::run_in_thread_pool_with_globals<rustc_interface[69aa8c17999313ff]::interface::run_compiler<core[a53159a38bb5d97c]::result::Result<(), rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>, rustc_driver_impl[b4ece89b41fa04d8]::run_compiler::{closure#1}>::{closure#0}, core[a53159a38bb5d97c]::result::Result<(), rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[a53159a38bb5d97c]::result::Result<(), rustc_span[5acbb0d3e38bbf81]::ErrorGuaranteed>>::{closure#1} as core[a53159a38bb5d97c]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  51:     0x7f78d4f76365 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h2b4cb02d9a218e1d\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/alloc/src/boxed.rs:1962:9\n  52:     0x7f78d4f76365 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hbd8144eacfab6e10\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/alloc/src/boxed.rs:1962:9\n  53:     0x7f78d4f76365 - std::sys::unix::thread::Thread::new::thread_start::h95499a4b2fca6f4a\n                               at /rustc/1c42cb4ef0544fbfaa500216e53382d6b079c001/library/std/src/sys/unix/thread.rs:108:17\n  54:     0x7f78d4d10bb5 - <unknown>\n  55:     0x7f78d4d92d90 - <unknown>\n  56:                0x0 - <unknown>\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\n\nnote: rustc 1.71.0-nightly (1c42cb4ef 2023-04-26) running on x86_64-unknown-linux-gnu\n\nquery stack during panic:\n#0 [evaluate_obligation] evaluating trait selection obligation `test::Dst: core::mem::transmutability::BikeshedIntrinsicFrom<test::Src, test::Context, { from_options(ASSUME_ALIGNMENT, ASSUME_LIFETIMES, ASSUME_SAFETY, ASSUME_VALIDITY) }>`\n#1 [typeck] type-checking `test`\n#2 [used_trait_imports] finding used_trait_imports `test`\n#3 [analysis] running analysis passes on this crate\nend of query stack\nerror: aborting due to 12 previous errors; 2 warnings emitted\n\nSome errors have detailed explanations: E0308, E0601, E0618, E0658.\nFor more information about an error, try `rustc --explain E0308`.\n```\n\n</p>\n</details>\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"bryangarza\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110892/timeline", "performed_via_github_app": null, "state_reason": null}