{"url": "https://api.github.com/repos/rust-lang/rust/issues/88085", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88085/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88085/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88085/events", "html_url": "https://github.com/rust-lang/rust/issues/88085", "id": 971938891, "node_id": "MDU6SXNzdWU5NzE5Mzg4OTE=", "number": 88085, "title": "Whole archive modifier for native libraries is not propagated to final output.", "user": {"login": "gcoakes", "id": 2153080, "node_id": "MDQ6VXNlcjIxNTMwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/2153080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gcoakes", "html_url": "https://github.com/gcoakes", "followers_url": "https://api.github.com/users/gcoakes/followers", "following_url": "https://api.github.com/users/gcoakes/following{/other_user}", "gists_url": "https://api.github.com/users/gcoakes/gists{/gist_id}", "starred_url": "https://api.github.com/users/gcoakes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gcoakes/subscriptions", "organizations_url": "https://api.github.com/users/gcoakes/orgs", "repos_url": "https://api.github.com/users/gcoakes/repos", "events_url": "https://api.github.com/users/gcoakes/events{/privacy}", "received_events_url": "https://api.github.com/users/gcoakes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2021-08-16T17:12:20Z", "updated_at": "2021-09-07T15:22:32Z", "closed_at": "2021-09-07T15:22:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nWith the additional of RFC 2951 (tracking: #81490, implementation: #83507), linking modifiers such as `+whole-archive` are now possible to use for native libraries. However, `+whole-archive` is not propagated to the final output of the build. I've minimally reproduced this issue as best I could [here](https://gitlab.com/gcoakes/minimally-reproduce). It can probably be minimized more with raw calls to rustc, but I'm not familiar enough to do so right now.\r\n\r\nEssentially, I have a static library which provides constructor and destructor functions which must be included in the final output.\r\n\r\nI tried this code:\r\n\r\nfoo.c\r\n```rust\r\n#include <stdio.h>\r\nvoid __attribute__((constructor)) construct();\r\nvoid __attribute__((destructor)) destruct();\r\nvoid construct()\r\n{\r\n    printf(\"Constructor.\\n\");\r\n}\r\nvoid destruct()\r\n{\r\n    printf(\"Destructor.\\n\");\r\n}\r\n```\r\n\r\nbuild.rs\r\n```rust\r\nfn main() {\r\n    cc::Build::new()\r\n        .file(\"src/foo.c\")\r\n        .cargo_metadata(false)\r\n        .static_flag(true)\r\n        .compile(\"foo\");\r\n    println!(\r\n        \"cargo:rustc-link-search=native={}\",\r\n        std::env::var(\"OUT_DIR\").unwrap()\r\n    );\r\n    println!(\"cargo:rustc-link-lib=static:+whole-archive=foo\");\r\n}\r\n```\r\n\r\nlib.rs\r\n```rust\r\npub fn it_linked() {}\r\n```\r\n\r\nmain.rs\r\n```rust\r\nfn main() {\r\n    indirect::it_linked();\r\n    println!(\"Hello, indirect!\");\r\n}\r\n```\r\n\r\nI expected to see this happen:\r\n```\r\n$ RUSTFLAGS=\"-Z unstable-options\" cargo run --bin indirect\r\n   Compiling cc v1.0.69\r\n   Compiling direct v0.1.0 (/home/gcoakes/Documents/Source/minimal-whole-archive/indirect)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 1.73s\r\n     Running `target/debug/indirect`\r\nConstructor.\r\nHello, indirect!\r\nDestructor.\r\n$ nm target/debug/indirect | grep 'construct\\|destruct'\r\n0000000000007ab5 T construct\r\n0000000000007acc T destruct\r\n```\r\n\r\nInstead, this happened:\r\n```\r\n$ RUSTFLAGS=\"-Z unstable-options\" cargo run --bin indirect\r\n   Compiling indirect v0.1.0 (/home/gcoakes/Documents/Source/minimal-whole-archive/indirect)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.68s\r\n     Running `target/debug/indirect`\r\nHello, indirect!\r\n$ nm target/debug/indirect | grep 'construct\\|destruct'\r\n```\r\n\r\n### Resolution\r\n\r\nI've done a bit of code inspection to determine where the linking issue actually is. I think it comes down to the [`link_upstream`](https://github.com/rust-lang/rust/blob/73d96b090bb68065cd3a469b27cbd568e39bf0e7/compiler/rustc_codegen_ssa/src/back/link.rs#L2193) closure in `rustc_codegen_ssa::src::back::link::add_upstream_rust_crates::add_static_crate`. It should be adjusted to inspect the crates native libraries and determine if any of them have `+whole-archive`. If one or more do, then it should run `link_whole_rlib` on the crate's rlib instead of `link_rlib`.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.0-nightly (8007b506a 2021-08-14)\r\nbinary: rustc\r\ncommit-hash: 8007b506ac5da629f223b755f5a5391edd5f6d01\r\ncommit-date: 2021-08-14\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.56.0-nightly\r\nLLVM version: 12.0.1\r\n```\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88085/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88085/timeline", "performed_via_github_app": null, "state_reason": "completed"}