{"url": "https://api.github.com/repos/rust-lang/rust/issues/56052", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56052/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56052/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56052/events", "html_url": "https://github.com/rust-lang/rust/issues/56052", "id": 382011750, "node_id": "MDU6SXNzdWUzODIwMTE3NTA=", "number": 56052, "title": "nightly ICE caused by  pub(restricted) list of reexports of pub-items-from-a-private-module.", "user": {"login": "rodrimati1992", "id": 18036327, "node_id": "MDQ6VXNlcjE4MDM2MzI3", "avatar_url": "https://avatars.githubusercontent.com/u/18036327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodrimati1992", "html_url": "https://github.com/rodrimati1992", "followers_url": "https://api.github.com/users/rodrimati1992/followers", "following_url": "https://api.github.com/users/rodrimati1992/following{/other_user}", "gists_url": "https://api.github.com/users/rodrimati1992/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodrimati1992/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodrimati1992/subscriptions", "organizations_url": "https://api.github.com/users/rodrimati1992/orgs", "repos_url": "https://api.github.com/users/rodrimati1992/repos", "events_url": "https://api.github.com/users/rodrimati1992/events{/privacy}", "received_events_url": "https://api.github.com/users/rodrimati1992/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-18T23:13:32Z", "updated_at": "2019-01-27T00:47:30Z", "closed_at": "2019-01-27T00:47:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Attempting to compile this code fails: \r\n```\r\nmod some_module {\r\n    mod foo {\r\n        pub struct x;\r\n    }\r\n    pub mod bar {\r\n        #[allow(unused_imports)]\r\n        pub(in super::super) use super::foo::{x};\r\n    }\r\n}\r\n\r\nfn main(){}\r\n```\r\nIn the playground in nightly(rustc 1.32.0-nightly (f37247f88 2018-11-17) haven't tested in previous ones) it causes this error:\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nthread 'main' panicked at 'librustc/hir/map/hir_id_validator.rs:31: \r\nItemLocalIds not assigned densely in ::some_module[0]::bar[0]::{{?}}[0]. Max ItemLocalId = 5, missing IDs = [\"[local_id: 1, node:unknown node (id=19)]\", \"[local_id: 2, node:path segment super (id=17)]\", \"[local_id: 3, node:path segment super (id=18)]\"]; seens IDs = [\"(NodeId(16) use some_module::bar::{{?}} (id=16))\", \"(NodeId(22) path segment foo (id=22))\", \"(NodeId(21) path segment super (id=21))\"]\r\nHirIdValidator: The recorded owner of path segment super (id=17) is ::some_module[0]::bar[0]::{{?}}[0] instead of ::some_module[0]::bar[0]::{{?}}[1]\r\nHirIdValidator: The recorded owner of path segment super (id=18) is ::some_module[0]::bar[0]::{{?}}[0] instead of ::some_module[0]::bar[0]::{{?}}[1]\r\nHirIdValidator: Same HirId ::some_module[0]::bar[0]::{{?}}[1]/2 assigned for nodes path segment super (id=17) and path segment foo (id=31)\r\nHirIdValidator: Same HirId ::some_module[0]::bar[0]::{{?}}[1]/3 assigned for nodes path segment super (id=18) and path segment x (id=23)', librustc/util/bug.rs:47:26\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/sys_common/backtrace.rs:59\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:480\r\n   6: std::panicking::begin_panic\r\n   7: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   8: rustc::ty::context::tls::with_opt::{{closure}}\r\n   9: rustc::ty::context::tls::with_context_opt\r\n  10: rustc::ty::context::tls::with_opt\r\n  11: rustc::util::bug::opt_span_bug_fmt\r\n  12: rustc::util::bug::bug_fmt\r\n  13: rustc::hir::map::hir_id_validator::check_crate\r\n  14: rustc::hir::map::map_crate\r\n  15: rustc::util::common::time\r\n  16: rustc_driver::driver::compile_input\r\n  17: rustc_driver::run_compiler_with_pool\r\n  18: <scoped_tls::ScopedKey<T>>::set\r\n  19: rustc_driver::run_compiler\r\n  20: syntax::with_globals\r\n  21: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  22: rustc_driver::run\r\n  23: rustc_driver::main\r\n  24: std::rt::lang_start::{{closure}}\r\n  25: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  26: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  27: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:398\r\n             at libstd/rt.rs:58\r\n  28: main\r\n  29: __libc_start_main\r\n  30: <unknown>\r\nquery stack during panic:\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.32.0-nightly (f37247f88 2018-11-17) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\n```\r\n\r\nIt works fine if I replace the list of reexports with reexporting the item by itself:\r\n`pub(in super::super) use super::foo::x;`", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56052/timeline", "performed_via_github_app": null, "state_reason": "completed"}