{"url": "https://api.github.com/repos/rust-lang/rust/issues/26768", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/26768/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/26768/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/26768/events", "html_url": "https://github.com/rust-lang/rust/issues/26768", "id": 93000249, "node_id": "MDU6SXNzdWU5MzAwMDI0OQ==", "number": 26768, "title": "Compiler both suggests and forbids the use of the core module", "user": {"login": "dgoldstein0", "id": 1075063, "node_id": "MDQ6VXNlcjEwNzUwNjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1075063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgoldstein0", "html_url": "https://github.com/dgoldstein0", "followers_url": "https://api.github.com/users/dgoldstein0/followers", "following_url": "https://api.github.com/users/dgoldstein0/following{/other_user}", "gists_url": "https://api.github.com/users/dgoldstein0/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgoldstein0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgoldstein0/subscriptions", "organizations_url": "https://api.github.com/users/dgoldstein0/orgs", "repos_url": "https://api.github.com/users/dgoldstein0/repos", "events_url": "https://api.github.com/users/dgoldstein0/events{/privacy}", "received_events_url": "https://api.github.com/users/dgoldstein0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-04T10:36:18Z", "updated_at": "2015-07-05T07:03:24Z", "closed_at": "2015-07-04T16:33:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is on Rust 1.1 stable.\n\nI'm learning Rust right now, and decided a good way to start off would be to write a linked list.  In the process, I decided to add a `print_list` function that would traverse my linked list and print out it's contents.  This would probably be fine had I not made my list generic, but having done that, I started getting compiler errors about T not being core::fmt::Display.\n\n```\n$ cargo run\n   Compiling linked_list v0.1.0 (file:///C:/Users/David/Documents/code/rust/link\ned_list)\nsrc\\main.rs:56:36: 56:58 error: the trait `core::fmt::Display` is not implemente\nd for the type `T` [E0277]\nsrc\\main.rs:56                     println!(\"{}\", (*node).borrow().value);\n                                                  ^~~~~~~~~~~~~~~~~~~~~~\nnote: in expansion of format_args!\n<std macros>:2:25: 2:56 note: expansion site\n<std macros>:1:1: 2:62 note: in expansion of print!\n<std macros>:3:1: 3:54 note: expansion site\n<std macros>:1:1: 3:58 note: in expansion of println!\nsrc\\main.rs:56:21: 56:60 note: expansion site\nsrc\\main.rs:56:36: 56:58 note: `T` cannot be formatted with the default formatte\nr; try using `:?` instead if you are using a format string\nsrc\\main.rs:56                     println!(\"{}\", (*node).borrow().value);\n                                                  ^~~~~~~~~~~~~~~~~~~~~~\nnote: in expansion of format_args!\n<std macros>:2:25: 2:56 note: expansion site\n<std macros>:1:1: 2:62 note: in expansion of print!\n<std macros>:3:1: 3:54 note: expansion site\n<std macros>:1:1: 3:58 note: in expansion of println!\nsrc\\main.rs:56:21: 56:60 note: expansion site\nerror: aborting due to previous error\nCould not compile `linked_list`.\n\nTo learn more, run the command again with --verbose.\n```\n\nSo I added the Display trait and imported the core crate, only to be told (after fixing tons of other type errors) \"error: use of unstable library feature 'core'\".  Why did the compiler even suggest I use core, if it wasn't going to allow it?  I also find it weird that built in code depends on `core`, but I myself am not allowed to use it.\n\nHere's my (probably terrible) code, for reference, which can be used to reproduce this bug.\n\n```\nextern crate core;\n\nuse core::fmt::Display;\nuse std::cell::RefCell;\nuse std::rc::Rc;\n\nstruct LinkedList<T: Copy + Display> {\n    head: Option<Rc<RefCell<Node<T>>>>,\n    tail: Option<Rc<RefCell<Node<T>>>>,\n    length: u32,\n}\n\nstruct Node<T: Copy> {\n    next: Option<Rc<RefCell<Node<T>>>>,\n    prev: Option<Rc<RefCell<Node<T>>>>,\n    value: T,\n}\n\nimpl<T: Copy> Node<T> {\n    fn new(val: &T) -> Node<T> {\n        Node::<T> {\n            next: None,\n            prev: None,\n            value: *val,\n        }\n    }\n}\n\nimpl<T: Copy + Display> LinkedList<T> {\n    fn new() -> LinkedList<T> {\n        LinkedList::<T> {\n            head: None,\n            tail: None,\n            length: 0,\n        }\n    }\n\n    fn append(&mut self, value: &T) {\n        let new_node = Rc::new(RefCell::new(Node::<T>::new(value)));\n\n        match self.tail.clone() {\n            None => {\n                self.head = Some(new_node.clone());\n            },\n            Some (tail_node) => {\n                (*tail_node).borrow_mut().next = Some(new_node.clone());\n                (*new_node).borrow_mut().prev = Some(tail_node.clone());\n            }\n        }\n        self.tail = Some(new_node);\n        self.length = self.length + 1;\n    }\n\n    fn print_list(&self) {\n        let mut next_node = self.head.clone();\n        loop {\n            match next_node {\n                Some(node) => {\n                    println!(\"{}\", (*node).borrow().value);\n                    next_node = (*node).borrow().next.clone();\n                },\n                None => return,\n            }\n        }\n    }\n}\n\nfn main() {\n    let mut list = LinkedList::<i32>::new();\n\n    let vals = vec![3, 2, 1, 0];\n    for v in &vals {\n        list.append(v);\n    }\n\n    list.print_list();\n    return;\n}\n```\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/26768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/26768/timeline", "performed_via_github_app": null, "state_reason": "completed"}