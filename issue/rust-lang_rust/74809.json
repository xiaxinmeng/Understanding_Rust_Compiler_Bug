{"url": "https://api.github.com/repos/rust-lang/rust/issues/74809", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74809/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74809/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74809/events", "html_url": "https://github.com/rust-lang/rust/issues/74809", "id": 665967252, "node_id": "MDU6SXNzdWU2NjU5NjcyNTI=", "number": 74809, "title": "Error in specialization type checking when using trait aliases", "user": {"login": "jsmith628", "id": 16457715, "node_id": "MDQ6VXNlcjE2NDU3NzE1", "avatar_url": "https://avatars.githubusercontent.com/u/16457715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsmith628", "html_url": "https://github.com/jsmith628", "followers_url": "https://api.github.com/users/jsmith628/followers", "following_url": "https://api.github.com/users/jsmith628/following{/other_user}", "gists_url": "https://api.github.com/users/jsmith628/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsmith628/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsmith628/subscriptions", "organizations_url": "https://api.github.com/users/jsmith628/orgs", "repos_url": "https://api.github.com/users/jsmith628/repos", "events_url": "https://api.github.com/users/jsmith628/events{/privacy}", "received_events_url": "https://api.github.com/users/jsmith628/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 347795552, "node_id": "MDU6TGFiZWwzNDc3OTU1NTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-specialization", "name": "A-specialization", "color": "f7e101", "default": false, "description": "Area: Trait impl specialization"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472515602, "node_id": "MDU6TGFiZWwxNDcyNTE1NjAy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-trait_alias", "name": "F-trait_alias", "color": "f9c0cc", "default": false, "description": "`#![feature(trait_alias)]`"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1472579062, "node_id": "MDU6TGFiZWwxNDcyNTc5MDYy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-specialization", "name": "F-specialization", "color": "f9c0cc", "default": false, "description": "`#![feature(specialization)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-27T04:34:19Z", "updated_at": "2020-07-27T10:05:19Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "\r\nSo I seem to have found an error in the type checking for specialization impls when using trait alias bounds\r\n\r\nSpecifically, this code:\r\n```rust\r\n#![feature(specialization)]\r\n#![feature(trait_alias)]\r\n\r\npub trait Marker1<T> {}\r\npub trait Marker2 {}\r\n\r\npub trait CombinedMarker<T> = Marker1<T> + Marker2;\r\n\r\npub struct Container<T,U> { p: std::marker::PhantomData<(T,U)> }\r\n\r\npub struct Struct;\r\nimpl<T> Marker1<T> for Struct {}\r\n\r\npub trait Trait { fn do_thing(&self); }\r\n\r\nimpl<T, U:Marker1<T>> Trait for Container<T,U> {\r\n    default fn do_thing(&self) { println!(\"default behavior\"); }\r\n}\r\n\r\nimpl<T, U:CombinedMarker<T>> Trait for Container<T,U> {\r\n    default fn do_thing(&self) { println!(\"partially specialized behavior\"); }\r\n}\r\n\r\nimpl<T> Trait for Container<T,Struct> {\r\n    fn do_thing(&self) { println!(\"fully specialized behavior\") }\r\n}\r\n```\r\ngives a type error with output of:\r\n```\r\nwarning: the feature `specialization` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/main.rs:1:12\r\n  |\r\n1 | #![feature(specialization)]\r\n  |            ^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #31844 <https://github.com/rust-lang/rust/issues/31844> for more information\r\n\r\nerror[E0119]: conflicting implementations of trait `Trait` for type `Container<_, Struct>`:\r\n  --> src/main.rs:51:1\r\n   |\r\n47 | impl<T, U:CombinedMarker<T>> Trait for Container<T,U> {\r\n   | ----------------------------------------------------- first implementation here\r\n...\r\n51 | impl<T> Trait for Container<T,Struct> {\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `Container<_, Struct>`\r\n\r\nerror: aborting due to previous error; 1 warning emitted\r\n\r\nFor more information about this error, try `rustc --explain E0119`.\r\n```\r\n_However_, if you change the bound on the `impl`s from `CombinedMarker<T>` to `Marker1<T>+Marker2` or `CombinedMarker<T>+Marker2` it actually compiles, seemingly suggesting that the compiler isn't accurately translating the trait alias over to the bound since all three of those _should_ be equivalent.\r\n\r\nAlso, before you ask, yes, for some reason, the `<T>` generic on `Marker1` _does_ seem to have an effect, as if it is removed, both the aliased and non-aliased versions compile. Furthermore, the `Container<T>` struct also seems to be important since removing it also fixed the type error.\r\n\r\nFinally, for reference, my rustc is on this version:\r\n```\r\nrustc 1.47.0-nightly (6c8927b0c 2020-07-26)\r\nbinary: rustc\r\ncommit-hash: 6c8927b0cf80ceee19386026cf9d7fd4fd9d486f\r\ncommit-date: 2020-07-26\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.47.0-nightly\r\nLLVM version: 10.0\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74809/timeline", "performed_via_github_app": null, "state_reason": null}