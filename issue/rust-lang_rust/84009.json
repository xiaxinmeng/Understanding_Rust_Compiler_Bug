{"url": "https://api.github.com/repos/rust-lang/rust/issues/84009", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84009/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84009/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84009/events", "html_url": "https://github.com/rust-lang/rust/issues/84009", "id": 853764909, "node_id": "MDU6SXNzdWU4NTM3NjQ5MDk=", "number": 84009, "title": "Incorrect span for GAT equality bound with missing type parameter in `where` clause", "user": {"login": "PatchMixolydic", "id": 8634700, "node_id": "MDQ6VXNlcjg2MzQ3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8634700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PatchMixolydic", "html_url": "https://github.com/PatchMixolydic", "followers_url": "https://api.github.com/users/PatchMixolydic/followers", "following_url": "https://api.github.com/users/PatchMixolydic/following{/other_user}", "gists_url": "https://api.github.com/users/PatchMixolydic/gists{/gist_id}", "starred_url": "https://api.github.com/users/PatchMixolydic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PatchMixolydic/subscriptions", "organizations_url": "https://api.github.com/users/PatchMixolydic/orgs", "repos_url": "https://api.github.com/users/PatchMixolydic/repos", "events_url": "https://api.github.com/users/PatchMixolydic/events{/privacy}", "received_events_url": "https://api.github.com/users/PatchMixolydic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-04-08T19:01:04Z", "updated_at": "2021-04-08T19:03:26Z", "closed_at": "2021-04-08T19:03:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur. \r\n-->\r\n\r\nGiven the following code (taken from https://github.com/rust-lang/rust/issues/79636#issuecomment-748633505, [playground]):\r\n\r\n[playground]: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=31138aa6fa43d0d3f4221d64d7589bf6\r\n\r\n```rust\r\n#![allow(incomplete_features)]\r\n#![feature(generic_associated_types)]\r\n\r\npub trait SomeTrait {\r\n    type Wrapped<A>: SomeTrait;\r\n\r\n    fn f() -> ();\r\n}\r\n\r\nfn program<W>() -> ()\r\nwhere\r\n    // Missing type parameter for `Wrapped`\r\n    W: SomeTrait<Wrapped = W>,\r\n{\r\n    return W::f();\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0107]: missing generics for associated type `SomeTrait::Wrapped`\r\n --> src/main.rs:5:10\r\n  |\r\n5 |     type Wrapped<A>: SomeTrait;\r\n  |          ^^^^^^^ expected 1 type argument\r\n  |\r\nnote: associated type defined here, with 1 type parameter: `A`\r\n --> src/main.rs:5:10\r\n  |\r\n5 |     type Wrapped<A>: SomeTrait;\r\n  |          ^^^^^^^ -\r\nhelp: use angle brackets to add missing type argument\r\n  |\r\n5 |     type Wrapped<A><A>: SomeTrait;\r\n  |                 ^^^\r\n```\r\n\r\nNote that the suggestion is syntactically invalid:\r\n```rust\r\npub trait SomeTrait {\r\n    type Wrapped<A><A>: SomeTrait;\r\n\r\n    fn f() -> ();\r\n}\r\n```\r\n\r\n```\r\nerror: expected one of `:`, `;`, `=`, or `where`, found `<`\r\n --> src/main.rs:5:20\r\n  |\r\n4 | pub trait SomeTrait {\r\n  |                     - while parsing this item list starting here\r\n5 |     type Wrapped<A><A>: SomeTrait;\r\n  |                    ^ expected one of `:`, `;`, `=`, or `where`\r\n...\r\n8 | }\r\n  | - the item list ends here\r\n```\r\n\r\nThe problem is that the span is pointing at the associated type, not the `where` clause bound.\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\nerror[E0107]: missing generics for associated type `SomeTrait::Wrapped`\r\n  --> src/main.rs:12:18\r\n   |\r\n12 |     W: SomeTrait<Wrapped = W>,\r\n   |                  ^^^^^^^ expected 1 type argument\r\n   |\r\nnote: associated type defined here, with 1 type parameter: `A`\r\n --> src/main.rs:5:10\r\n  |\r\n5 |     type Wrapped<A>: SomeTrait;\r\n  |          ^^^^^^^ -\r\nhelp: use angle brackets to add missing type argument\r\n   |\r\n12 |     W: SomeTrait<Wrapped<A> = W>,\r\n   |                         ^^^\r\n```", "closed_by": {"login": "PatchMixolydic", "id": 8634700, "node_id": "MDQ6VXNlcjg2MzQ3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8634700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PatchMixolydic", "html_url": "https://github.com/PatchMixolydic", "followers_url": "https://api.github.com/users/PatchMixolydic/followers", "following_url": "https://api.github.com/users/PatchMixolydic/following{/other_user}", "gists_url": "https://api.github.com/users/PatchMixolydic/gists{/gist_id}", "starred_url": "https://api.github.com/users/PatchMixolydic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PatchMixolydic/subscriptions", "organizations_url": "https://api.github.com/users/PatchMixolydic/orgs", "repos_url": "https://api.github.com/users/PatchMixolydic/repos", "events_url": "https://api.github.com/users/PatchMixolydic/events{/privacy}", "received_events_url": "https://api.github.com/users/PatchMixolydic/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84009/timeline", "performed_via_github_app": null, "state_reason": "completed"}