{"url": "https://api.github.com/repos/rust-lang/rust/issues/41495", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41495/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41495/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41495/events", "html_url": "https://github.com/rust-lang/rust/issues/41495", "id": 223709004, "node_id": "MDU6SXNzdWUyMjM3MDkwMDQ=", "number": 41495, "title": "if let in block expression position borrow check mismatch", "user": {"login": "MBons", "id": 5418755, "node_id": "MDQ6VXNlcjU0MTg3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/5418755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MBons", "html_url": "https://github.com/MBons", "followers_url": "https://api.github.com/users/MBons/followers", "following_url": "https://api.github.com/users/MBons/following{/other_user}", "gists_url": "https://api.github.com/users/MBons/gists{/gist_id}", "starred_url": "https://api.github.com/users/MBons/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MBons/subscriptions", "organizations_url": "https://api.github.com/users/MBons/orgs", "repos_url": "https://api.github.com/users/MBons/repos", "events_url": "https://api.github.com/users/MBons/events{/privacy}", "received_events_url": "https://api.github.com/users/MBons/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-24T05:43:11Z", "updated_at": "2017-04-25T05:39:17Z", "closed_at": "2017-04-25T05:39:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've ran into a borrowing issue using try_borrow() in an if let statement.\r\n\r\nThe problem occurs when it's the last expression of the scope and is resolved by making it a statement.\r\nI'm not sure if this is a bug or limitation in the borrow checker, but either way the error message is confusing.\r\n\r\n[rust play link](https://is.gd/0UL2Uv)\r\n\r\n```Rust\r\nfn does_not_compile() {\r\n    let container = RefCell::new(0);\r\n    if let Ok(_) = container.try_borrow() { }\r\n}\r\n\r\nfn compiles() {\r\n    let container = RefCell::new(0);\r\n    if let Ok(_) = container.try_borrow() { };\r\n}\r\n```\r\n\r\n> rustc 1.16.0 (30cf806ef 2017-03-10)\r\n> error: `container` does not live long enough\r\n>  --> <anon>:6:1\r\n>   |\r\n> 5 |     if let Ok(_) = container.try_borrow() { }\r\n>   |                    --------- borrow occurs here\r\n> 6 | }\r\n>   | ^ `container` dropped here while still borrowed\r\n>   |\r\n>   = note: values in a scope are dropped in the opposite order they are created\r\n>\r\n> error: aborting due to previous error", "closed_by": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41495/timeline", "performed_via_github_app": null, "state_reason": "completed"}