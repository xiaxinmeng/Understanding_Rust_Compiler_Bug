{"url": "https://api.github.com/repos/rust-lang/rust/issues/110491", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110491/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110491/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110491/events", "html_url": "https://github.com/rust-lang/rust/issues/110491", "id": 1673024695, "node_id": "I_kwDOAAsO6M5juFS3", "number": 110491, "title": "Object safety violation reported with arbitrary self types in trait method", "user": {"login": "alexkirsz", "id": 1621758, "node_id": "MDQ6VXNlcjE2MjE3NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1621758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexkirsz", "html_url": "https://github.com/alexkirsz", "followers_url": "https://api.github.com/users/alexkirsz/followers", "following_url": "https://api.github.com/users/alexkirsz/following{/other_user}", "gists_url": "https://api.github.com/users/alexkirsz/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexkirsz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexkirsz/subscriptions", "organizations_url": "https://api.github.com/users/alexkirsz/orgs", "repos_url": "https://api.github.com/users/alexkirsz/repos", "events_url": "https://api.github.com/users/alexkirsz/events{/privacy}", "received_events_url": "https://api.github.com/users/alexkirsz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472515079, "node_id": "MDU6TGFiZWwxNDcyNTE1MDc5", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-arbitrary_self_types", "name": "F-arbitrary_self_types", "color": "f9c0cc", "default": false, "description": "`#![feature(arbitrary_self_types)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2023-04-18T12:30:23Z", "updated_at": "2023-04-21T21:56:24Z", "closed_at": "2023-04-21T21:56:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code [(playground)](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=6642da297fbae52bd9569032588f5eaa):\r\n\r\n```rust\r\n#![feature(arbitrary_self_types)]\r\n\r\nstruct Arbitrary<T> where T: ?Sized {\r\n    _t: core::marker::PhantomData<T>\r\n}\r\n\r\nimpl<T> core::ops::Deref for Arbitrary<T> where T: ?Sized {\r\n    type Target = T;\r\n\r\n    fn deref(&self) -> &Self::Target {\r\n        todo!()\r\n    }\r\n}\r\n\r\ntrait BoxTrait {\r\n    fn method(self: Box<Self>) {}\r\n}\r\n\r\ntrait ArbitraryTrait {\r\n    fn method(self: Arbitrary<Self>) {}\r\n}\r\n\r\nfn main() {\r\n    let ptr: Box<dyn BoxTrait> = todo!();\r\n    ptr.method();\r\n\r\n    let ptr: Arbitrary<dyn ArbitraryTrait> = todo!();\r\n    ptr.method();\r\n}\r\n```\r\n\r\nI expected this to compile just fine: `ArbitraryTrait` should be object safe since its only method accepts an `Arbitrary` self object. In fact, this works for `Box` but not `Arbitrary`.\r\n\r\nInstead, the following errors are reported:\r\n\r\n```\r\nerror[[E0038]](https://doc.rust-lang.org/nightly/error_codes/E0038.html): the trait `ArbitraryTrait` cannot be made into an object\r\n  --> src/main.rs:27:14\r\n   |\r\n20 |     fn method(self: Arbitrary<Self>) {}\r\n   |                     --------------- help: consider changing method `method`'s `self` parameter to be `&self`: `&Self`\r\n...\r\n27 |     let ptr: Arbitrary<dyn ArbitraryTrait> = todo!();\r\n   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `ArbitraryTrait` cannot be made into an object\r\n   |\r\nnote: for a trait to be \"object safe\" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>\r\n  --> src/main.rs:20:21\r\n   |\r\n19 | trait ArbitraryTrait {\r\n   |       -------------- this trait cannot be made into an object...\r\n20 |     fn method(self: Arbitrary<Self>) {}\r\n   |                     ^^^^^^^^^^^^^^^ ...because method `method`'s `self` parameter cannot be dispatched on\r\n\r\nerror[[E0038]](https://doc.rust-lang.org/nightly/error_codes/E0038.html): the trait `ArbitraryTrait` cannot be made into an object\r\n  --> src/main.rs:28:5\r\n   |\r\n20 |     fn method(self: Arbitrary<Self>) {}\r\n   |                     --------------- help: consider changing method `method`'s `self` parameter to be `&self`: `&Self`\r\n...\r\n28 |     ptr.method();\r\n   |     ^^^^^^^^^^^^ `ArbitraryTrait` cannot be made into an object\r\n   |\r\nnote: for a trait to be \"object safe\" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>\r\n  --> src/main.rs:20:21\r\n   |\r\n19 | trait ArbitraryTrait {\r\n   |       -------------- this trait cannot be made into an object...\r\n20 |     fn method(self: Arbitrary<Self>) {}\r\n   |                     ^^^^^^^^^^^^^^^ ...because method `method`'s `self` parameter cannot be dispatched on\r\n\r\nFor more information about this error, try `rustc --explain E0038`.\r\n```\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.71.0-nightly (7908a1d65 2023-04-17)\r\nbinary: rustc\r\ncommit-hash: 7908a1d65496b88626e4b7c193c81d777005d6f3\r\ncommit-date: 2023-04-17\r\nhost: aarch64-apple-darwin\r\nrelease: 1.71.0-nightly\r\nLLVM version: 16.0.2\r\n```\r\n", "closed_by": {"login": "alexkirsz", "id": 1621758, "node_id": "MDQ6VXNlcjE2MjE3NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1621758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexkirsz", "html_url": "https://github.com/alexkirsz", "followers_url": "https://api.github.com/users/alexkirsz/followers", "following_url": "https://api.github.com/users/alexkirsz/following{/other_user}", "gists_url": "https://api.github.com/users/alexkirsz/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexkirsz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexkirsz/subscriptions", "organizations_url": "https://api.github.com/users/alexkirsz/orgs", "repos_url": "https://api.github.com/users/alexkirsz/repos", "events_url": "https://api.github.com/users/alexkirsz/events{/privacy}", "received_events_url": "https://api.github.com/users/alexkirsz/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110491/timeline", "performed_via_github_app": null, "state_reason": "completed"}