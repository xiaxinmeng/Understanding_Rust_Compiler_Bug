{"url": "https://api.github.com/repos/rust-lang/rust/issues/66285", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66285/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66285/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66285/events", "html_url": "https://github.com/rust-lang/rust/issues/66285", "id": 520759825, "node_id": "MDU6SXNzdWU1MjA3NTk4MjU=", "number": 66285, "title": "Missing object files when linking with LTO", "user": {"login": "kvark", "id": 107301, "node_id": "MDQ6VXNlcjEwNzMwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/107301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvark", "html_url": "https://github.com/kvark", "followers_url": "https://api.github.com/users/kvark/followers", "following_url": "https://api.github.com/users/kvark/following{/other_user}", "gists_url": "https://api.github.com/users/kvark/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvark/subscriptions", "organizations_url": "https://api.github.com/users/kvark/orgs", "repos_url": "https://api.github.com/users/kvark/repos", "events_url": "https://api.github.com/users/kvark/events{/privacy}", "received_events_url": "https://api.github.com/users/kvark/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 123111, "node_id": "MDU6TGFiZWwxMjMxMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-macos", "name": "O-macos", "color": "6e6ec0", "default": false, "description": "Operating system: macOS"}, {"id": 167285428, "node_id": "MDU6TGFiZWwxNjcyODU0Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-cross", "name": "A-cross", "color": "f7e101", "default": false, "description": "Area: Cross compilation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-11T06:11:17Z", "updated_at": "2020-02-02T11:42:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Situation\r\n\r\nI'm trying to add a dependency to [SPIRV-Cross](https://github.com/KhronosGroup/SPIRV-Cross) for Gecko, and I'm seeing [linking errors](https://treeherder.mozilla.org/logviewer.html#/jobs?job_id=274841436&repo=try&lineNumber=37327) (with undefined symbols) *only* in the \"OS X Cross Compiled asan\" job (cross-compiled macosx with address sanitizer and fuzziness. Non-fuzzy (non-asan) cross-compiled builds are fine.\r\n\r\nThis has been blocking a very [large and important change](https://phabricator.services.mozilla.com/D49458) to Gecko for about a week. I would appreciate any hints on how to approach this!\r\n\r\n### Problem\r\n\r\nThe objects of SPIRV-Cross are supposed to reach the linker by the following path:\r\n  1. The C++ project is built into `libspirv-cross-rust-wrapper.a` by \"cc-rs\" that is invoked from the `build.rs` of [spirv_cross](https://github.com/kvark/spirv_cross/tree/wgpu) crate\r\n  2. That crates produces a regular Rust library that is statically linked with this `.a` file\r\n  3. It is a dependency of other crates, eventually making its way to the `gkrust` crate, which is the root.\r\n  4. `libgkrust.a` is a static C library build by Gecko\r\n  5. Gecko static libraries are linked into XUL dynamic library\r\n\r\nI can inspect `libspirv-cross-rust-wrapper.a` with `llvm-objdump` and I see everything is in place as expected: [objdump-local.txt](https://github.com/rust-lang/rust/files/3829870/objdump-local.txt). I don't know how to properly inspect the `rlib` or `rmeta` of the Rust library products. I can, however, inspect `libgkrust.a` and see that some of the SPIRV-Cross objects didn't make it: [libgkrust-objdump.txt](https://github.com/rust-lang/rust/files/3829874/libgkrust-objdump.txt) (e.g. it has `spirv_cfg.o` but no `spirv_cross.o`). The selection appears to be arbitrary but consistent between compilations. From that, I conclude that the metadata about statically linked objects is not propagated through steps 2-3, which is what Cargo/Rustc are responsible for (!).\r\n\r\nI'm able to reproduce the linking errors locally on linux, by downloading the artifacts and enabling both ASAN and fuzziness options in [mozconfig-cross.txt](https://github.com/rust-lang/rust/files/3829841/mozconfig-cross.txt). I confirmed that removing the \"--enable-fuzzing\" option makes it link fine.\r\n\r\nI understand that this is a very big project, and it's not trivial to replicate the setup. However, so far, attempts to reproduce this on a reduced test case were not fruitful.\r\n\r\n### Further observations\r\n\r\nIt appears that Gecko has only handful of dependencies on C/C++ code by the vendored Rust crates, and all of them are either C or Obj-C, using `clang` for compiling (via \"cc-rs\" crate). SPIRV-Cross dependency is the only one in C++ using `clang++`, which makes it rather unique.\r\n\r\nI'm also attaching the reduced verbose build log that only rebuilds spirv-cross related pieces: \r\n[detailed-build.log](https://github.com/rust-lang/rust/files/3829865/detailed-build.log).\r\n\r\n\r\ncc @jrmuizel @alexcrichton ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66285/timeline", "performed_via_github_app": null, "state_reason": null}