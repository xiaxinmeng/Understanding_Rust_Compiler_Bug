{"url": "https://api.github.com/repos/rust-lang/rust/issues/67947", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67947/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67947/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67947/events", "html_url": "https://github.com/rust-lang/rust/issues/67947", "id": 545876606, "node_id": "MDU6SXNzdWU1NDU4NzY2MDY=", "number": 67947, "title": "ICE: No `move_errors` should be allowed in MIR borrowck", "user": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-06T18:42:57Z", "updated_at": "2020-01-09T22:53:50Z", "closed_at": "2020-01-09T22:53:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following ICE's on stable, beta and nightly:\r\n```Rust\r\nstruct Bug {\r\n    A: [(); { *\"\" }.len()],\r\n}\r\n```\r\n\r\n<details>\r\n<summary>Backtrace:</summary>\r\n\r\n```\r\n Compiling playground v0.0.1 (/playground)\r\nerror[E0161]: cannot move a value of type str: the size of str cannot be statically determined\r\n --> src/lib.rs:2:13\r\n  |\r\n2 |     A: [(); { *\"\" }.len()],\r\n  |             ^^^^^^^\r\n\r\nerror[E0507]: cannot move out of a shared reference\r\n --> src/lib.rs:2:15\r\n  |\r\n2 |     A: [(); { *\"\" }.len()],\r\n  |               ^^^ move occurs because value has type `str`, which does not implement the `Copy` trait\r\n\r\nerror: internal compiler error: src/librustc_mir/transform/elaborate_drops.rs:31: No `move_errors` should be allowed in MIR borrowck\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:931:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:77\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:61\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1028\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1412\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:65\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:50\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:188\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:205\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:468\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_context_opt\r\n  18: rustc::ty::context::tls::with_opt\r\n  19: rustc::util::bug::opt_span_bug_fmt\r\n  20: rustc::util::bug::bug_fmt\r\n  21: <rustc_mir::transform::elaborate_drops::ElaborateDrops as rustc_mir::transform::MirPass>::run_pass\r\n  22: rustc_mir::transform::run_passes\r\n  23: rustc_mir::transform::run_optimization_passes\r\n  24: rustc_mir::transform::optimized_mir\r\n  25: rustc::ty::query::__query_compute::optimized_mir\r\n  26: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::optimized_mir>::compute\r\n  27: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  28: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  29: rustc_mir::interpret::eval_context::InterpCx<M>::load_mir\r\n  30: rustc_mir::const_eval::const_eval_raw_provider\r\n  31: rustc::ty::query::__query_compute::const_eval_raw\r\n  32: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval_raw>::compute\r\n  33: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  34: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  35: rustc_mir::const_eval::const_eval_provider\r\n  36: rustc::ty::query::__query_compute::const_eval\r\n  37: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval>::compute\r\n  38: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  39: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  40: rustc_mir::const_eval::const_eval_provider\r\n  41: rustc::ty::query::__query_compute::const_eval\r\n  42: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval>::compute\r\n  43: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  44: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  45: <rustc::traits::project::AssocTypeNormalizer as rustc::ty::fold::TypeFolder>::fold_const\r\n  46: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable for &rustc::ty::TyS>::super_fold_with\r\n  47: <rustc::traits::project::AssocTypeNormalizer as rustc::ty::fold::TypeFolder>::fold_ty\r\n  48: rustc::traits::project::normalize\r\n  49: rustc_typeck::check::FnCtxt::normalize_associated_types_in\r\n  50: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold\r\n  51: rustc::ty::context::GlobalCtxt::enter_local\r\n  52: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  53: rustc::ty::query::__query_compute::check_item_well_formed\r\n  54: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::check_item_well_formed>::compute\r\n  55: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  56: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  57: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::ensure_query\r\n  58: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:78\r\n  59: rustc_data_structures::sync::par_for_each_in\r\n  60: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:78\r\n  61: rustc::hir::Crate::par_visit_all_item_likes\r\n  62: rustc::util::common::time\r\n  63: rustc_typeck::check_crate\r\n  64: rustc_interface::passes::analysis\r\n  65: rustc::ty::query::__query_compute::analysis\r\n  66: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  67: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  68: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  69: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  70: rustc_interface::passes::BoxedGlobalCtxt::enter\r\n  71: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  72: std::thread::local::LocalKey<T>::with\r\n  73: scoped_tls::ScopedKey<T>::set\r\n  74: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.40.0 (73528e339 2019-12-16) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [optimized_mir] processing `Bug::A::{{constant}}#0`\r\n#1 [const_eval_raw] const-evaluating `Bug::A::{{constant}}#0`\r\n#2 [const_eval] const-evaluating + checking `Bug::A::{{constant}}#0`\r\n#3 [const_eval] const-evaluating + checking `Bug::A::{{constant}}#0`\r\n#4 [check_item_well_formed] processing `Bug`\r\n#5 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to 3 previous errors\r\n\r\nSome errors have detailed explanations: E0161, E0507.\r\nFor more information about an error, try `rustc --explain E0161`.\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n</details>\r\n\r\nPossibly related to https://github.com/rust-lang/rust/issues/67696, except with a different ICE message.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67947/timeline", "performed_via_github_app": null, "state_reason": "completed"}