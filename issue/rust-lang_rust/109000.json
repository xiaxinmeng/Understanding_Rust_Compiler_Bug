{"url": "https://api.github.com/repos/rust-lang/rust/issues/109000", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/109000/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/109000/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/109000/events", "html_url": "https://github.com/rust-lang/rust/issues/109000", "id": 1619523905, "node_id": "I_kwDOAAsO6M5gh_lB", "number": 109000, "title": "Getting different output for the same program depending on compiler setting", "user": {"login": "xphoniex", "id": 14107758, "node_id": "MDQ6VXNlcjE0MTA3NzU4", "avatar_url": "https://avatars.githubusercontent.com/u/14107758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xphoniex", "html_url": "https://github.com/xphoniex", "followers_url": "https://api.github.com/users/xphoniex/followers", "following_url": "https://api.github.com/users/xphoniex/following{/other_user}", "gists_url": "https://api.github.com/users/xphoniex/gists{/gist_id}", "starred_url": "https://api.github.com/users/xphoniex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xphoniex/subscriptions", "organizations_url": "https://api.github.com/users/xphoniex/orgs", "repos_url": "https://api.github.com/users/xphoniex/repos", "events_url": "https://api.github.com/users/xphoniex/events{/privacy}", "received_events_url": "https://api.github.com/users/xphoniex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1884641928, "node_id": "MDU6TGFiZWwxODg0NjQxOTI4", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-AVR", "name": "O-AVR", "color": "6e6ec0", "default": false, "description": "Target: AVR processors (ATtiny, ATmega, etc.)"}, {"id": 2459791492, "node_id": "MDU6TGFiZWwyNDU5NzkxNDky", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lto", "name": "A-lto", "color": "f7e101", "default": false, "description": "Area: Link Time Optimization"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2023-03-10T19:38:29Z", "updated_at": "2023-06-03T19:40:07Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using rust to compile for Arduino target, I'm see a lot of weird and random behaviors from compiler when making changes to profile and compiler setting. (I'm using avr-hal for uno, here's a [sample](https://github.com/Rahix/avr-hal/blob/main/examples/arduino-uno/src/bin/uno-usart.rs))\r\n\r\nAs an example, if I use `hmac-sha256` crate:\r\n\r\n```rust\r\n    let h = hmac_sha256::HMAC::mac(b\"hello\", b\"key\"); // hmac for input \"hello\" with key \"key\"\r\n    print_hex_arr(\" mac\", &mut serial, &h);\r\n    let h = hmac_sha256::Hash::hash(b\"hello\"); // sha256 of \"hello\"\r\n    print_hex_arr(\"hash\", &mut serial, &h);\r\n```\r\n\r\nI get different outputs depending on `opt-level` and `lto`, correct one is:\r\n```\r\n mac = 9307b3b915efb5171ff14d8cb55fbcc798c6c0ef1456d66ded1a6aa723a58b7b\r\nhash = 2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824\r\n```\r\n\r\nwhich I'm getting from `opt-level=2` with both `lto=true` and unspecified, however:\r\n\r\n```\r\n// opt-level = \"s\", lto = true\r\n mac = d238e536e20f0b1b210644248134891454c20ad29c10f75756218b6ab8f5c17d\r\nhash = 5f23619d4ed28dbf06d25969fa262384869011f4a44469c1eb38c50b15b01c4b\r\n\r\n// opt-level = \"z\", lto = true\r\n mac = 03942da43b5034c3f87f9652c4d569392f444af18c66a7c587db8065d4c79faf\r\nhash = 5f23619d4ed28dbf06d25969fa262384869011f4a44469c1eb38c50b15b01c4b\r\n\r\n// opt-level = \"s | z\", lto unspecified\r\n mac = d238e536e20f0b1b210644248134891454c20ad29c10f75756218b6ab8f5c17d\r\nhash = 5f23619d4ed28dbf06d25969fa262384869011f4a44469c1eb38c50b15b01c4b\r\n```\r\n\r\nnot only that, even if I run fns from another crate, even with the working `opt-level = 2`, I get incorrect output:\r\n\r\n```rust\r\n  other_crate::do_something();\r\n  let h = hmac_sha256::Hash::hash(b\"hello\");\r\n  print_hex_arr(\"hash\", &mut serial, &h);\r\n```\r\n\r\nhas a wrong output and instead this works:\r\n\r\n```rust\r\n  let h = hmac_sha256::Hash::hash(b\"hello\");\r\n  print_hex_arr(\"hash\", &mut serial, &h);\r\n  other_crate::do_something();\r\n```\r\n\r\nbefore I compile a bug report at gcc, I want to make sure the fault is not at rust side. here's the final command that rustc is running to link the final elf:\r\n\r\n```\r\n$ avr-gcc -mmcu=atmega328p -Wl,--as-needed,--print-memory-usage,--detailed-mem-usage -fpack-struct -fshort-enums -Wstack-usage=20 -Wall -Wextra -fstack-usage /tmp/rustcsspEI5/symbols.o /project/target/avr-atmega328p/release/deps/arduino_lib-1e0b86c11d560d13.arduino_lib.9b917980-cgu.0.rcgu.o -Wl,--as-needed -L /project/target/avr-atmega328p/release/deps -L /project/target/release/deps -L . -L /home/usr/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/avr-atmega328p/lib -Wl,-Bstatic /project/target/avr-atmega328p/release/deps/libcompiler_builtins-4dcc5d36d44c3317.rlib -Wl,-Bdynamic -lgcc -Wl,-znoexecstack -L /home/usr/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/avr-atmega328p/lib -o /project/target/avr-atmega328p/release/deps/arduino_lib-1e0b86c11d560d13.elf -Wl,--gc-sections -Wl,-O1 -Wl,--strip-all\r\n```\r\n\r\nas you can see it's using `-O1` which I haven't specified anywhere. (See [avr-atmega328p.json](https://github.com/Rahix/avr-hal/blob/main/avr-specs/avr-atmega328p.json))\r\n\r\nI have tried overriding in my avr-atmega328p.json file inside `pre-link-args` but that doesn't affect anything. Can someone shed some light on what is going wrong here? If it's the `-O1` flag, how do I override that?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/109000/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/109000/timeline", "performed_via_github_app": null, "state_reason": null}