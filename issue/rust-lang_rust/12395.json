{"url": "https://api.github.com/repos/rust-lang/rust/issues/12395", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/12395/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/12395/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/12395/events", "html_url": "https://github.com/rust-lang/rust/issues/12395", "id": 27885417, "node_id": "MDU6SXNzdWUyNzg4NTQxNw==", "number": 12395, "title": "Add std::str::Chars remaining() function", "user": {"login": "mneumann", "id": 34112, "node_id": "MDQ6VXNlcjM0MTEy", "avatar_url": "https://avatars.githubusercontent.com/u/34112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mneumann", "html_url": "https://github.com/mneumann", "followers_url": "https://api.github.com/users/mneumann/followers", "following_url": "https://api.github.com/users/mneumann/following{/other_user}", "gists_url": "https://api.github.com/users/mneumann/gists{/gist_id}", "starred_url": "https://api.github.com/users/mneumann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mneumann/subscriptions", "organizations_url": "https://api.github.com/users/mneumann/orgs", "repos_url": "https://api.github.com/users/mneumann/repos", "events_url": "https://api.github.com/users/mneumann/events{/privacy}", "received_events_url": "https://api.github.com/users/mneumann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-02-19T15:56:53Z", "updated_at": "2014-09-02T21:55:50Z", "closed_at": "2014-09-02T21:44:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` rust\nimpl<'a> Chars<'a> {\n  fn remaining(&self) -> 'a &str { self.string }\n}\n```\n\nThis is quite useful when scanning strings, especially when more flexibility is needed. For example, the following example uses <code>slice_from</code> which is not always safe as it uses byte offsets (but using char offsets would be O(n) and I want to avoid it!).\n\n``` rust\n// This code basically parses a markdown horizontal rule.\n\nlet item: char = '*';\n\n// Counts the number of items\nlet mut cnt: uint = 0;\n// Counts the consumed spaces (and the final NL)\nlet mut spc: uint = 0;\n\nfor ch in string.chars() {\n    if      ch == item { cnt += 1; }\n    else if ch == '\\n'  { spc += 1; break; }\n    else if ch == ' '   { spc += 1; }\n    else               { return None; }\n}\n\nif cnt >= 3 {\n    // return sucess and the remaining string to continue parsing!\n    Some(string.slice_from(cnt + spc))\n} else {\n    None\n}\n```\n\nInstead when something like <code>remaining()</code> would exist, the code could be rewritten as:\n\n``` rust\nlet item = '*';\n\n// Counts the number of items\nlet mut cnt: uint = 0;\n\nlet iter = string.chars();\nfor ch in iter {\n    if ch == item { cnt += 1; }\n    else if ch == '\\n' { break; }\n    else if ch == ' ' {}\n    else { return None; }\n}\n\nif cnt >= 3 {\n    Some(iter.remaining())\n} else {\n    None\n}\n```\n\nThis comes in very useful and is also more efficient! Iterators are not always enough, so that's why I do not want to pass iterators around and instead work on string slices.\n", "closed_by": {"login": "mneumann", "id": 34112, "node_id": "MDQ6VXNlcjM0MTEy", "avatar_url": "https://avatars.githubusercontent.com/u/34112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mneumann", "html_url": "https://github.com/mneumann", "followers_url": "https://api.github.com/users/mneumann/followers", "following_url": "https://api.github.com/users/mneumann/following{/other_user}", "gists_url": "https://api.github.com/users/mneumann/gists{/gist_id}", "starred_url": "https://api.github.com/users/mneumann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mneumann/subscriptions", "organizations_url": "https://api.github.com/users/mneumann/orgs", "repos_url": "https://api.github.com/users/mneumann/repos", "events_url": "https://api.github.com/users/mneumann/events{/privacy}", "received_events_url": "https://api.github.com/users/mneumann/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/12395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/12395/timeline", "performed_via_github_app": null, "state_reason": "completed"}