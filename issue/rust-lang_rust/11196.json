{"url": "https://api.github.com/repos/rust-lang/rust/issues/11196", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/11196/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/11196/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/11196/events", "html_url": "https://github.com/rust-lang/rust/issues/11196", "id": 24865100, "node_id": "MDU6SXNzdWUyNDg2NTEwMA==", "number": 11196, "title": "RFC: implicit generic function arguments with bounds", "user": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-12-29T19:35:36Z", "updated_at": "2014-09-24T05:00:08Z", "closed_at": "2014-09-24T05:00:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Using generic functions with trait bounds results in efficient code generation, at the cost of syntactic simplicity (compared to using trait objects).\n\nConsider this snippet:\n\n``` rust\nfn stringify<T: ToStr>(x: T) -> ~str {\n    x.to_str()\n}\n// Making use of a hypothetical Fn trait.\nfn map2fn<T, U, V, F1: Fn<T, U>, F2: Fn<U, V>>(x: T, f1: F1, f2: F2) -> V {\n    f2(f1(x))\n}\n```\n\nNow with trait bounds moved to argument types (creating implicit generic type parameters):\n\n``` rust\nfn stringify(x: ToStr) -> ~str {\n    x.to_str()\n}\n// Making use of a hypothetical Fn trait.\nfn map2fn<T, U, V>(x: T, f1: Fn<T, U>, f2: Fn<U, V>) -> V {\n    f2(f1(x))\n}\n// Or closures as sugar for Fn (unboxed!).\nfn map2fn<T, U, V>(x: T, f1: |T| -> U, f2: |U| -> V) -> V {\n    f2(f1(x))\n}\n```\n\nNote that this would be limited to values as references or pointers would conflict with current syntax for trait objects.\n\nHowever, optimizing `&Trait` in an argument type (or even a structure field? there is room for discussion here) to a generic (`<T: Trait> ... &T`) wouldn't cause any serious issues AFAICT.\nAnd it would mean we can make the closure syntax be sugar for `&Fn` without losing backwards compatibility while allowing compile-time monomorphization.\n", "closed_by": {"login": "rust-highfive", "id": 7378925, "node_id": "MDQ6VXNlcjczNzg5MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/7378925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-highfive", "html_url": "https://github.com/rust-highfive", "followers_url": "https://api.github.com/users/rust-highfive/followers", "following_url": "https://api.github.com/users/rust-highfive/following{/other_user}", "gists_url": "https://api.github.com/users/rust-highfive/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-highfive/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-highfive/subscriptions", "organizations_url": "https://api.github.com/users/rust-highfive/orgs", "repos_url": "https://api.github.com/users/rust-highfive/repos", "events_url": "https://api.github.com/users/rust-highfive/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-highfive/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/11196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/11196/timeline", "performed_via_github_app": null, "state_reason": "completed"}