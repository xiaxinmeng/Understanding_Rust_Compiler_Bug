{"url": "https://api.github.com/repos/rust-lang/rust/issues/55146", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55146/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55146/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55146/events", "html_url": "https://github.com/rust-lang/rust/issues/55146", "id": 371040910, "node_id": "MDU6SXNzdWUzNzEwNDA5MTA=", "number": 55146, "title": "Compiler can suggest `#[derive(move Trait)]`", "user": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234948, "node_id": "MDU6TGFiZWwyMzQ5NDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-attributes", "name": "A-attributes", "color": "f7e101", "default": false, "description": "Area: #[attributes(..)]"}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-17T12:10:29Z", "updated_at": "2023-03-16T05:24:26Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When a custom derive generates a closure, and that closure causes a compiler error because it borrows its environment instead of correctly moving it, rustc suggests to put the `move` keyword into the `#[derive]` attribute:\r\n\r\nActual error message I just got:\r\n```\r\nerror[E0373]: closure may outlive the current function, but it borrows `route_kind`, which is owned by the current function                                         \r\n  --> modules/debug/src/lib.rs:19:10                                                                                                                                \r\n   |                                                                                                                                                                \r\n19 | #[derive(FromRequest)]                                                                                                                                         \r\n   |          ^^^^^^^^^^^                                                                                                                                           \r\n   |          |                                                                                                                                                     \r\n   |          `route_kind` is borrowed here                                                                                                                         \r\n   |          may outlive borrowed value `route_kind`                                                                                                               \r\nhelp: to force the closure to take ownership of `route_kind` (and any other referenced variables), use the `move` keyword                                           \r\n   |                                                                                                                                                                \r\n19 | #[derive(move FromRequest)]                                                                                                                                    \r\n   |          ^^^^^^^^^^^^^^^^                                                                                                                                      \r\n                                                                                                                                                                    \r\nerror: aborting due to previous error                                                                                                                               \r\n```\r\n\r\n(this is happening in a rather convoluted production codebase, so unfortunately I don't have a test case yet)\r\n\r\nIf I'm not mistaken, this can only happen when the custom derive macro outputs incorrect code, so the impact is pretty limited.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55146/reactions", "total_count": 7, "+1": 0, "-1": 0, "laugh": 7, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55146/timeline", "performed_via_github_app": null, "state_reason": null}