{"url": "https://api.github.com/repos/rust-lang/rust/issues/42235", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42235/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42235/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42235/events", "html_url": "https://github.com/rust-lang/rust/issues/42235", "id": 231544131, "node_id": "MDU6SXNzdWUyMzE1NDQxMzE=", "number": 42235, "title": "Consider allowing non-object safe traits as types", "user": {"login": "withoutboats", "id": 9063376, "node_id": "MDQ6VXNlcjkwNjMzNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/9063376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/withoutboats", "html_url": "https://github.com/withoutboats", "followers_url": "https://api.github.com/users/withoutboats/followers", "following_url": "https://api.github.com/users/withoutboats/following{/other_user}", "gists_url": "https://api.github.com/users/withoutboats/gists{/gist_id}", "starred_url": "https://api.github.com/users/withoutboats/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/withoutboats/subscriptions", "organizations_url": "https://api.github.com/users/withoutboats/orgs", "repos_url": "https://api.github.com/users/withoutboats/repos", "events_url": "https://api.github.com/users/withoutboats/events{/privacy}", "received_events_url": "https://api.github.com/users/withoutboats/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-05-26T07:09:32Z", "updated_at": "2017-06-10T21:12:48Z", "closed_at": "2017-06-10T21:12:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Today, we only allow you to use a trait as a type if that trait is object safe, because you cannot sanely instantiate the object unless the trait is object safe.\r\n\r\nThis is a bit odd, though! We let you implement traits for `HashMap<f32, _>`, even though you cannot instantiate a HashMap with f32 keys.\r\n\r\nWe could limit the object safety check to two cases:\r\n\r\n*  *Instantiations* of these types\r\n* Attempts to access items of these types.\r\n\r\n```rust\r\ntrait NotObjectSafe: Sized { }\r\n\r\ntrait SomeTrait {\r\n    fn static_method();\r\n    fn non_static_method(&self);\r\n}\r\n\r\nimpl SomeTrait for NotObjectSafe {\r\n    fn static_method() {\r\n        println!(\"There's no object, why isn't this allowed?\");\r\n        println!(\"You could totally call this function just fine.\");\r\n    }\r\n    \r\n    fn non_static_method(&self) {\r\n        println!(\"You could just never instantiate the object.\");\r\n        println!(\"So you could never call this method.\");\r\n    }\r\n}\r\n\r\nfn main() {\r\n     NotObjectSafe::static_method() // Never instantiated, should be fine.\r\n}\r\n```\r\n\r\nSimilarly, we could allow you to omit associated types from the receiver of such impls (e.g. `impl for Iterator`, without specifying an item).\r\n\r\nI actually have a motivating use case for this: I have types which are parameterized by a trait, which is used solely for static dispatch. The trait is never actually instantiated as an object, and making it object safe is very limiting.", "closed_by": {"login": "withoutboats", "id": 9063376, "node_id": "MDQ6VXNlcjkwNjMzNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/9063376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/withoutboats", "html_url": "https://github.com/withoutboats", "followers_url": "https://api.github.com/users/withoutboats/followers", "following_url": "https://api.github.com/users/withoutboats/following{/other_user}", "gists_url": "https://api.github.com/users/withoutboats/gists{/gist_id}", "starred_url": "https://api.github.com/users/withoutboats/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/withoutboats/subscriptions", "organizations_url": "https://api.github.com/users/withoutboats/orgs", "repos_url": "https://api.github.com/users/withoutboats/repos", "events_url": "https://api.github.com/users/withoutboats/events{/privacy}", "received_events_url": "https://api.github.com/users/withoutboats/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42235/timeline", "performed_via_github_app": null, "state_reason": "completed"}