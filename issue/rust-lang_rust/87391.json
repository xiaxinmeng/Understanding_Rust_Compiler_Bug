{"url": "https://api.github.com/repos/rust-lang/rust/issues/87391", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87391/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87391/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87391/events", "html_url": "https://github.com/rust-lang/rust/issues/87391", "id": 951151342, "node_id": "MDU6SXNzdWU5NTExNTEzNDI=", "number": 87391, "title": "Specifying lint levels does not work on macros", "user": {"login": "asquared31415", "id": 34665709, "node_id": "MDQ6VXNlcjM0NjY1NzA5", "avatar_url": "https://avatars.githubusercontent.com/u/34665709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asquared31415", "html_url": "https://github.com/asquared31415", "followers_url": "https://api.github.com/users/asquared31415/followers", "following_url": "https://api.github.com/users/asquared31415/following{/other_user}", "gists_url": "https://api.github.com/users/asquared31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/asquared31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asquared31415/subscriptions", "organizations_url": "https://api.github.com/users/asquared31415/orgs", "repos_url": "https://api.github.com/users/asquared31415/repos", "events_url": "https://api.github.com/users/asquared31415/events{/privacy}", "received_events_url": "https://api.github.com/users/asquared31415/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-07-23T00:16:45Z", "updated_at": "2021-07-23T00:16:45Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\nfn main() {\r\n    #[allow(irrefutable_let_patterns)]\r\n    println!(\"{}\", if let _ = 1 { 42 } else { 0 });\r\n    \r\n    // The macro doesn't matter, even macros like `asm!` exhibit this behavior\r\n    #[allow(irrefutable_let_patterns)]\r\n    dbg!(\"{}\", if let _ = 1 { 42 } else { 0 });\r\n    \r\n    #[allow(irrefutable_let_patterns)]\r\n    {\r\n        println!(\"{}\", if let _ = 2 { 84 } else { 0 });\r\n    }\r\n    \r\n    #[allow(irrefutable_let_patterns)]\r\n    if let _ = 3 { \r\n        println!(\"{}\", 168);\r\n    } else { \r\n        println!(\"{}\", 0);\r\n    }\r\n}\r\n```\r\n[playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=9a1b773af2cac2860626115a77a2336b)\r\n\r\nThe current output is:\r\n\r\n```\r\nwarning: irrefutable `if let` pattern\r\n --> src/main.rs:3:20\r\n  |\r\n3 |     println!(\"{}\", if let _ = 1 { 42 } else { 0 });\r\n  |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(irrefutable_let_patterns)]` on by default\r\n  = note: this pattern will always match, so the `if let` is useless\r\n  = help: consider replacing the `if let` with a `let`\r\n\r\nwarning: irrefutable `if let` pattern\r\n --> src/main.rs:7:16\r\n  |\r\n7 |     dbg!(\"{}\", if let _ = 1 { 42 } else { 0 });\r\n  |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: this pattern will always match, so the `if let` is useless\r\n  = help: consider replacing the `if let` with a `let`\r\n\r\nwarning: 2 warnings emitted\r\n```\r\n\r\nIdeally in this case, the compilation should succeed without warning, as the lint appears to have been explicitly allowed everywhere it is used.\r\n\r\nThis likely applies for all lints and all lint levels and all macros\r\n - (only tested `println!`, `dbg!`, and `asm!` with allow, warn, and deny for `irrefutable_let_patterns` as well as in in my in progress lint `named_asm_labels`)\r\n \r\nA current workaround is to create a scope to put the macro in, and apply the lint level to *that scope*, as demonstrated in the example.\r\n\r\nApplying the lint level to the crate with `#![level(lint)]` works as expected, however this is often not desirable.\r\n\r\nPossibly related: #59306", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87391/timeline", "performed_via_github_app": null, "state_reason": null}