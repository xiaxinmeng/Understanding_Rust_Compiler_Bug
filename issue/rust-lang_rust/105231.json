{"url": "https://api.github.com/repos/rust-lang/rust/issues/105231", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105231/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105231/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105231/events", "html_url": "https://github.com/rust-lang/rust/issues/105231", "id": 1474264612, "node_id": "I_kwDOAAsO6M5X334k", "number": 105231, "title": "ICE \"Overflow should be caught earlier in standard query mode\" building specialization graph with infinite-size structs", "user": {"login": "jruderman", "id": 692547, "node_id": "MDQ6VXNlcjY5MjU0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/692547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jruderman", "html_url": "https://github.com/jruderman", "followers_url": "https://api.github.com/users/jruderman/followers", "following_url": "https://api.github.com/users/jruderman/following{/other_user}", "gists_url": "https://api.github.com/users/jruderman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jruderman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jruderman/subscriptions", "organizations_url": "https://api.github.com/users/jruderman/orgs", "repos_url": "https://api.github.com/users/jruderman/repos", "events_url": "https://api.github.com/users/jruderman/events{/privacy}", "received_events_url": "https://api.github.com/users/jruderman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-12-03T22:50:54Z", "updated_at": "2023-06-16T15:02:19Z", "closed_at": "2023-06-16T15:02:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Found with a [modified fuzz-rustc](https://github.com/jruderman/fuzz-rustc)\r\n\r\n### Code\r\n\r\n```rust\r\nstruct A<T>(B<T>);\r\nstruct B<T>(A<A<T>>);\r\ntrait Foo {}\r\nimpl<T> Foo for T where T: Send {}\r\nimpl Foo for B<u8> {}\r\nfn main() {}\r\n```\r\n\r\n### Error output\r\n\r\nerror[[E0072](https://doc.rust-lang.org/error_codes/E0072.html)]: recursive types `A` and `B` have infinite size\r\n\r\nthread 'rustc' panicked at 'Overflow should be caught earlier in standard query mode: `Error(ErrorGuaranteed(()))`', [compiler/rustc_trait_selection/src/traits/select/mod.rs:531](https://github.com/rust-lang/rust/blob/32e613bbaafee1bcabba48a2257b838f8d1c03d3/compiler/rustc_trait_selection/src/traits/select/mod.rs#L530-L532)\r\n\r\n<details><summary>Full output including backtrace</summary>\r\n\r\n```\r\nerror[E0072]: recursive types `A` and `B` have infinite size\r\n --> ../auu.rs:1:1\r\n  |\r\n1 | pub struct A<T>(B<T>);\r\n  | ^^^^^^^^^^^^^^^ ---- recursive without indirection\r\n2 | pub struct B<T>(A<A<T>>);\r\n  | ^^^^^^^^^^^^^^^ ------- recursive without indirection\r\n  |\r\nhelp: insert some indirection (e.g., a `Box`, `Rc`, or `&`) to break the cycle\r\n  |\r\n1 ~ pub struct A<T>(Box<B<T>>);\r\n2 ~ pub struct B<T>(Box<A<A<T>>>);\r\n  |\r\n\r\nthread 'rustc' panicked at 'Overflow should be caught earlier in standard query mode: Error(ErrorGuaranteed(()))', compiler/rustc_trait_selection/src/traits/select/mod.rs:531:14\r\nstack backtrace:\r\n   0:        0x107f4a406 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h7aeb894505898234\r\n   1:        0x107fa8dca - core::fmt::write::hb0aa72ff55d6ae53\r\n   2:        0x107f3c7ac - std::io::Write::write_fmt::h1945469b78b865f8\r\n   3:        0x107f4a1ea - std::sys_common::backtrace::print::h85c2438dfd145403\r\n   4:        0x107f4d553 - std::panicking::default_hook::{{closure}}::hdd077715d2b82795\r\n   5:        0x107f4d2a8 - std::panicking::default_hook::he8d3e4e56f8c52ec\r\n   6:        0x112a7302d - rustc_driver[2d5e2c84e80eab0e]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n   7:        0x107f4dd37 - std::panicking::rust_panic_with_hook::h48c87533cff0c7b5\r\n   8:        0x107f4dae4 - std::panicking::begin_panic_handler::{{closure}}::h03e0170622ddc3a5\r\n   9:        0x107f4a8a8 - std::sys_common::backtrace::__rust_end_short_backtrace::h27a5e4055100ab18\r\n  10:        0x107f4d7ad - _rust_begin_unwind\r\n  11:        0x107fd52a3 - core::panicking::panic_fmt::hd88a77e190c81c5c\r\n  12:        0x107fd5725 - core::result::unwrap_failed::h34df02e39265a387\r\n  13:        0x116fe5991 - <&mut core[430c2907dc9a6903]::iter::adapters::map::map_try_fold<rustc_middle[209729e445530cc9]::ty::Predicate, rustc_middle[209729e445530cc9]::ty::Predicate, (), core[430c2907dc9a6903]::ops::control_flow::ControlFlow<rustc_infer[db474c8c0e0cf674]::traits::Obligation<rustc_middle[209729e445530cc9]::ty::Predicate>>, rustc_trait_selection[d46787f576d816bf]::traits::coherence::implicit_negative::{closure#0}, core[430c2907dc9a6903]::iter::adapters::map::map_try_fold<rustc_middle[209729e445530cc9]::ty::Predicate, rustc_infer[db474c8c0e0cf674]::traits::Obligation<rustc_middle[209729e445530cc9]::ty::Predicate>, (), core[430c2907dc9a6903]::ops::control_flow::ControlFlow<rustc_infer[db474c8c0e0cf674]::traits::Obligation<rustc_middle[209729e445530cc9]::ty::Predicate>>, rustc_trait_selection[d46787f576d816bf]::traits::coherence::implicit_negative::{closure#1}, core[430c2907dc9a6903]::iter::traits::iterator::Iterator::find::check<rustc_infer[db474c8c0e0cf674]::traits::Obligation<rustc_middle[209729e445530cc9]::ty::Predicate>, &mut rustc_trait_selection[d46787f576d816bf]::traits::coherence::implicit_negative::{closure#2}>::{closure#0}>::{closure#0}>::{closure#0} as core[430c2907dc9a6903]::ops::function::FnMut<((), rustc_middle[209729e445530cc9]::ty::Predicate)>>::call_mut\r\n  14:        0x116fd6719 - <core[430c2907dc9a6903]::iter::adapters::map::Map<core[430c2907dc9a6903]::iter::adapters::map::Map<core[430c2907dc9a6903]::iter::adapters::chain::Chain<core[430c2907dc9a6903]::iter::adapters::copied::Copied<core[430c2907dc9a6903]::slice::iter::Iter<rustc_middle[209729e445530cc9]::ty::Predicate>>, alloc[567819b9645b4323]::vec::into_iter::IntoIter<rustc_middle[209729e445530cc9]::ty::Predicate>>, rustc_trait_selection[d46787f576d816bf]::traits::coherence::implicit_negative::{closure#0}>, rustc_trait_selection[d46787f576d816bf]::traits::coherence::implicit_negative::{closure#1}> as core[430c2907dc9a6903]::iter::traits::iterator::Iterator>::try_fold::<(), core[430c2907dc9a6903]::iter::traits::iterator::Iterator::find::check<rustc_infer[db474c8c0e0cf674]::traits::Obligation<rustc_middle[209729e445530cc9]::ty::Predicate>, &mut rustc_trait_selection[d46787f576d816bf]::traits::coherence::implicit_negative::{closure#2}>::{closure#0}, core[430c2907dc9a6903]::ops::control_flow::ControlFlow<rustc_infer[db474c8c0e0cf674]::traits::Obligation<rustc_middle[209729e445530cc9]::ty::Predicate>>>\r\n  15:        0x116f9a428 - rustc_trait_selection[d46787f576d816bf]::traits::coherence::overlap_within_probe\r\n  16:        0x116fcd588 - <rustc_infer[db474c8c0e0cf674]::infer::InferCtxt>::probe_maybe_skip_leak_check::<core[430c2907dc9a6903]::option::Option<rustc_trait_selection[d46787f576d816bf]::traits::coherence::OverlapResult>, rustc_trait_selection[d46787f576d816bf]::traits::coherence::overlap::{closure#0}>\r\n  17:        0x116f9d7ec - rustc_trait_selection[d46787f576d816bf]::traits::coherence::overlapping_impls\r\n  18:        0x116fed76a - <rustc_middle[209729e445530cc9]::traits::specialization_graph::Children as rustc_trait_selection[d46787f576d816bf]::traits::specialize::specialization_graph::ChildrenExt>::insert\r\n  19:        0x116fee4c9 - <rustc_middle[209729e445530cc9]::traits::specialization_graph::Graph as rustc_trait_selection[d46787f576d816bf]::traits::specialize::specialization_graph::GraphExt>::insert\r\n  20:        0x117067cae - rustc_trait_selection[d46787f576d816bf]::traits::specialize::specialization_graph_provider\r\n  21:        0x1161ff17e - rustc_query_system[c11f59037b5cfd63]::query::plumbing::try_execute_query::<rustc_query_impl[45e9db0b3ea45acb]::plumbing::QueryCtxt, rustc_query_system[c11f59037b5cfd63]::query::caches::ArenaCache<rustc_span[157adb1f3d5a28e2]::def_id::DefId, rustc_middle[209729e445530cc9]::traits::specialization_graph::Graph>>\r\n  22:        0x11639e7c8 - rustc_query_system[c11f59037b5cfd63]::query::plumbing::get_query::<rustc_query_impl[45e9db0b3ea45acb]::queries::specialization_graph_of, rustc_query_impl[45e9db0b3ea45acb]::plumbing::QueryCtxt>\r\n  23:        0x11551673a - rustc_hir_analysis[eec43b6a4b80b88b]::coherence::coherent_trait\r\n  24:        0x1162a29b5 - rustc_query_system[c11f59037b5cfd63]::query::plumbing::try_execute_query::<rustc_query_impl[45e9db0b3ea45acb]::plumbing::QueryCtxt, rustc_query_system[c11f59037b5cfd63]::query::caches::DefaultCache<rustc_span[157adb1f3d5a28e2]::def_id::DefId, ()>>\r\n  25:        0x11638fd85 - rustc_query_system[c11f59037b5cfd63]::query::plumbing::get_query::<rustc_query_impl[45e9db0b3ea45acb]::queries::coherent_trait, rustc_query_impl[45e9db0b3ea45acb]::plumbing::QueryCtxt>\r\n  26:        0x11548babe - <rustc_session[b3c342af35a3ea6a]::session::Session>::track_errors::<rustc_hir_analysis[eec43b6a4b80b88b]::check_crate::{closure#3}, ()>\r\n  27:        0x115595e63 - rustc_hir_analysis[eec43b6a4b80b88b]::check_crate\r\n  28:        0x112b1c23a - rustc_interface[f59f2966aecfe0a5]::passes::analysis\r\n  29:        0x1162d9544 - rustc_query_system[c11f59037b5cfd63]::query::plumbing::try_execute_query::<rustc_query_impl[45e9db0b3ea45acb]::plumbing::QueryCtxt, rustc_query_system[c11f59037b5cfd63]::query::caches::DefaultCache<(), core[430c2907dc9a6903]::result::Result<(), rustc_errors[17a2ca97c979a6e5]::ErrorGuaranteed>>>\r\n  30:        0x1163a3c41 - rustc_query_system[c11f59037b5cfd63]::query::plumbing::get_query::<rustc_query_impl[45e9db0b3ea45acb]::queries::analysis, rustc_query_impl[45e9db0b3ea45acb]::plumbing::QueryCtxt>\r\n  31:        0x112a04f47 - <rustc_interface[f59f2966aecfe0a5]::passes::QueryContext>::enter::<rustc_driver[2d5e2c84e80eab0e]::run_compiler::{closure#1}::{closure#2}::{closure#2}, core[430c2907dc9a6903]::result::Result<(), rustc_errors[17a2ca97c979a6e5]::ErrorGuaranteed>>\r\n  32:        0x112a4b4e5 - <rustc_interface[f59f2966aecfe0a5]::interface::Compiler>::enter::<rustc_driver[2d5e2c84e80eab0e]::run_compiler::{closure#1}::{closure#2}, core[430c2907dc9a6903]::result::Result<core[430c2907dc9a6903]::option::Option<rustc_interface[f59f2966aecfe0a5]::queries::Linker>, rustc_errors[17a2ca97c979a6e5]::ErrorGuaranteed>>\r\n  33:        0x1129e5a5d - rustc_span[157adb1f3d5a28e2]::with_source_map::<core[430c2907dc9a6903]::result::Result<(), rustc_errors[17a2ca97c979a6e5]::ErrorGuaranteed>, rustc_interface[f59f2966aecfe0a5]::interface::run_compiler<core[430c2907dc9a6903]::result::Result<(), rustc_errors[17a2ca97c979a6e5]::ErrorGuaranteed>, rustc_driver[2d5e2c84e80eab0e]::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\r\n  34:        0x112a3e40d - <scoped_tls[86ec2be37ea12d20]::ScopedKey<rustc_span[157adb1f3d5a28e2]::SessionGlobals>>::set::<rustc_interface[f59f2966aecfe0a5]::interface::run_compiler<core[430c2907dc9a6903]::result::Result<(), rustc_errors[17a2ca97c979a6e5]::ErrorGuaranteed>, rustc_driver[2d5e2c84e80eab0e]::run_compiler::{closure#1}>::{closure#0}, core[430c2907dc9a6903]::result::Result<(), rustc_errors[17a2ca97c979a6e5]::ErrorGuaranteed>>\r\n  35:        0x112a0d86a - std[cffeb5472d7fcddb]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[f59f2966aecfe0a5]::util::run_in_thread_pool_with_globals<rustc_interface[f59f2966aecfe0a5]::interface::run_compiler<core[430c2907dc9a6903]::result::Result<(), rustc_errors[17a2ca97c979a6e5]::ErrorGuaranteed>, rustc_driver[2d5e2c84e80eab0e]::run_compiler::{closure#1}>::{closure#0}, core[430c2907dc9a6903]::result::Result<(), rustc_errors[17a2ca97c979a6e5]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[430c2907dc9a6903]::result::Result<(), rustc_errors[17a2ca97c979a6e5]::ErrorGuaranteed>>\r\n  36:        0x1129ef795 - <<std[cffeb5472d7fcddb]::thread::Builder>::spawn_unchecked_<rustc_interface[f59f2966aecfe0a5]::util::run_in_thread_pool_with_globals<rustc_interface[f59f2966aecfe0a5]::interface::run_compiler<core[430c2907dc9a6903]::result::Result<(), rustc_errors[17a2ca97c979a6e5]::ErrorGuaranteed>, rustc_driver[2d5e2c84e80eab0e]::run_compiler::{closure#1}>::{closure#0}, core[430c2907dc9a6903]::result::Result<(), rustc_errors[17a2ca97c979a6e5]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[430c2907dc9a6903]::result::Result<(), rustc_errors[17a2ca97c979a6e5]::ErrorGuaranteed>>::{closure#1} as core[430c2907dc9a6903]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  37:        0x107f57007 - std::sys::unix::thread::Thread::new::thread_start::hd82b4d9ec5e0369f\r\n  38:     0x7ff8083354e1 - __pthread_start\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.67.0-nightly (32e613bba 2022-12-02) running on x86_64-apple-darwin\r\n\r\nquery stack during panic:\r\n#0 [specialization_graph_of] building specialization graph of trait `Foo`\r\n#1 [coherent_trait] coherence checking all impls of trait `Foo`\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n```\r\n\r\n</details>\r\n\r\n### Regression\r\n\r\nRegression in nightly-2022-10-13, somewhere in rollup e6ce5627a9e8af9ae4673a390954fffaf526e5cc, maybe #102890 (@camsteffen)\r\n\r\n### Version\r\n\r\n```\r\nrustc 1.67.0-nightly (32e613bba 2022-12-02)\r\nbinary: rustc\r\ncommit-hash: 32e613bbaafee1bcabba48a2257b838f8d1c03d3\r\ncommit-date: 2022-12-02\r\nhost: x86_64-apple-darwin\r\nrelease: 1.67.0-nightly\r\nLLVM version: 15.0.4\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105231/timeline", "performed_via_github_app": null, "state_reason": "completed"}