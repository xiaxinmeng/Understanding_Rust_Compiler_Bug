{"url": "https://api.github.com/repos/rust-lang/rust/issues/83966", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83966/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83966/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83966/events", "html_url": "https://github.com/rust-lang/rust/issues/83966", "id": 852379388, "node_id": "MDU6SXNzdWU4NTIzNzkzODg=", "number": 83966, "title": "Allowing using registers more often for small structs and enum return values.", "user": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-04-07T12:53:57Z", "updated_at": "2021-04-07T14:34:10Z", "closed_at": "2021-04-07T14:34:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I think Rust ABI could be more aggressive for small structs and enum return values, using registers more and stack less,\r\nsince this is very frequently used:\r\n\r\ncurrently under debug mode:\r\n\r\n```rust\r\nfn foo() -> Result<usize, usize> {\r\n    Ok(42)\r\n}\r\n```\r\n\r\nMIR:\r\n```\r\nfn foo() -> std::result::Result<usize, usize> {\r\n    let mut _0: std::result::Result<usize, usize>; // return place in scope 0 at src/lib.rs:1:13: 1:33\r\n\r\n    bb0: {\r\n        ((_0 as Ok).0: usize) = const 42_usize; // scope 0 at src/lib.rs:2:5: 2:11\r\n        discriminant(_0) = 0;            // scope 0 at src/lib.rs:2:5: 2:11\r\n        return;                          // scope 0 at src/lib.rs:3:2: 3:2\r\n    }\r\n}\r\n```\r\nLLVM IR\r\n```text\r\ndefine { i64, i64 } @_ZN10playground3foo17hd671300e06835708E() unnamed_addr #0 !dbg !6 {\r\nstart:\r\n  %0 = alloca { i64, i64 }, align 8\r\n  %1 = bitcast { i64, i64 }* %0 to %\"std::result::Result<usize, usize>::Ok\"*, !dbg !32\r\n  %2 = getelementptr inbounds %\"std::result::Result<usize, usize>::Ok\", %\"std::result::Result<usize, usize>::Ok\"* %1, i32 0, i32 1, !dbg !32\r\n  store i64 42, i64* %2, align 8, !dbg !32\r\n  %3 = bitcast { i64, i64 }* %0 to i64*, !dbg !32\r\n  store i64 0, i64* %3, align 8, !dbg !32\r\n  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !33\r\n  %5 = load i64, i64* %4, align 8, !dbg !33, !range !35\r\n  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !33\r\n  %7 = load i64, i64* %6, align 8, !dbg !33\r\n  %8 = insertvalue { i64, i64 } undef, i64 %5, 0, !dbg !33\r\n  %9 = insertvalue { i64, i64 } %8, i64 %7, 1, !dbg !33\r\n  ret { i64, i64 } %9, !dbg !33\r\n}\r\n```\r\nASM:\r\n```text\r\nplayground::foo:\r\n\tsubq\t$16, %rsp\r\n\tmovq\t$42, 8(%rsp)\r\n\tmovq\t$0, (%rsp)\r\n\tmovq\t(%rsp), %rax\r\n\tmovq\t8(%rsp), %rdx\r\n\taddq\t$16, %rsp\r\n\tretq\r\n```", "closed_by": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83966/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83966/timeline", "performed_via_github_app": null, "state_reason": "completed"}