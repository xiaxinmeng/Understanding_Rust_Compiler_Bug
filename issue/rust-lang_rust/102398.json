{"url": "https://api.github.com/repos/rust-lang/rust/issues/102398", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102398/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102398/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102398/events", "html_url": "https://github.com/rust-lang/rust/issues/102398", "id": 1389110316, "node_id": "I_kwDOAAsO6M5SzCQs", "number": 102398, "title": "`thread::park` causes undefined behaviour on panic", "user": {"login": "joboet", "id": 25721079, "node_id": "MDQ6VXNlcjI1NzIxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/25721079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joboet", "html_url": "https://github.com/joboet", "followers_url": "https://api.github.com/users/joboet/followers", "following_url": "https://api.github.com/users/joboet/following{/other_user}", "gists_url": "https://api.github.com/users/joboet/gists{/gist_id}", "starred_url": "https://api.github.com/users/joboet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joboet/subscriptions", "organizations_url": "https://api.github.com/users/joboet/orgs", "repos_url": "https://api.github.com/users/joboet/repos", "events_url": "https://api.github.com/users/joboet/events{/privacy}", "received_events_url": "https://api.github.com/users/joboet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}, {"id": 4434017660, "node_id": "LA_kwDOAAsO6M8AAAABCEm9fA", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-atomic", "name": "A-atomic", "color": "f7e101", "default": false, "description": "Area: atomics, barriers, and sync primitives"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-09-28T10:22:39Z", "updated_at": "2022-10-11T14:05:23Z", "closed_at": "2022-10-11T14:05:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[A](https://github.com/rust-lang/rust/blob/837bf370de144a682041e68bb67469b9f68a55ce/library/std/src/sync/once.rs#L481-L492) [lot](https://github.com/kprotty/usync/blob/44a0eeae99a597baa6b91fae7c1b3227103de2bc/src/rwlock.rs#L478) [of](https://github.com/rust-lang/rust/blob/837bf370de144a682041e68bb67469b9f68a55ce/library/std/src/thread/scoped.rs#L148-L151) [code](https://github.com/kprotty/usync/blob/44a0eeae99a597baa6b91fae7c1b3227103de2bc/src/condvar.rs#L258-L259) [dealing](https://github.com/matklad/once_cell/blob/97edd07e0ac05fb8e4b994e9a53ba187d8fa17fc/src/imp_std.rs#L254-L256) with synchronization assumes that `thread::park` does not panic. This assumption is however not correct. For instance, a panic occurs if the TLS key used to store the thread info [cannot be created](https://github.com/rust-lang/rust/blob/837bf370de144a682041e68bb67469b9f68a55ce/library/std/src/sys/unix/thread_local_key.rs#L10), [if a new thread id cannot be created](https://github.com/rust-lang/rust/blob/837bf370de144a682041e68bb67469b9f68a55ce/library/std/src/thread/mod.rs#L1047), [if the creation of a parking primitive fails](https://github.com/rust-lang/rust/blob/837bf370de144a682041e68bb67469b9f68a55ce/library/std/src/sys/itron/wait_flag.rs#L22), [if the current time is not available](https://github.com/rust-lang/rust/blob/837bf370de144a682041e68bb67469b9f68a55ce/library/std/src/sys/unix/thread_parker/pthread.rs#L67) and [if the parking operation fails](https://github.com/rust-lang/rust/blob/837bf370de144a682041e68bb67469b9f68a55ce/library/std/src/sys/itron/wait_flag.rs#L38).\r\n\r\nThe code examples above all use intrusive lists and have to wait on a condition to before destroying the list nodes. If `thread::park` panics, the nodes will be dropped during stack unwinding without checking that condition, leading to undefined behaviour (some of these cases are in `std`, so I'm marking this as a soundness problem with `std`).\r\n\r\nFixing this would either require guarding against panics in each of these cases or ensuring that `thread::park` never panics.\r\n\r\n@rustbot label +I-unsound +A-atomic +T-libs +T-libs-api", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102398/timeline", "performed_via_github_app": null, "state_reason": "completed"}