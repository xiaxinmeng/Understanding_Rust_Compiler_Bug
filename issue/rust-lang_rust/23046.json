{"url": "https://api.github.com/repos/rust-lang/rust/issues/23046", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/23046/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/23046/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/23046/events", "html_url": "https://github.com/rust-lang/rust/issues/23046", "id": 59874772, "node_id": "MDU6SXNzdWU1OTg3NDc3Mg==", "number": 23046, "title": "ICE (unwrap of None) after type error with aggressive use of higher-kinded types and variance", "user": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-03-04T22:42:15Z", "updated_at": "2015-09-10T18:14:48Z", "closed_at": "2015-09-10T18:14:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Will minify later\n\nhttp://is.gd/B0NXIN\n\n``` Rust\n\npub mod ltseal {\n    use std::marker::PhantomData;\n\n    #[derive(Copy)]\n    pub struct ContraLifetimeCell<'a, T>(T, PhantomData<*mut FnOnce(&'a ())>);\n\n    #[derive(Copy)]\n    pub struct ContraLifetimeSeal<'a>(PhantomData<*mut FnOnce(&'a ())>);\n\n    impl<'s> ContraLifetimeSeal<'s> {\n        pub fn seal<'a, T>(&'a self, t: T) -> ContraLifetimeCell<'s, T> {\n            ContraLifetimeCell(t, PhantomData)\n        }\n\n        pub fn unseal<'a, T>(&'a self, c: ContraLifetimeCell<'s, T>) -> T {\n            c.0\n        }\n\n        pub fn ref_unseal<'a, 'b, T>(&'a self,\n                                     c: &'b ContraLifetimeCell<'s, T>)\n                                     -> &'b T {\n            &c.0\n        }\n\n        pub fn with_seal<T, F: for<'a> FnOnce(ContraLifetimeSeal<'a>) -> T>\n                (f: F) -> T {\n            f(ContraLifetimeSeal(PhantomData))\n        }\n    }\n}\n\npub mod deep {\n    /* language with only let, variables, addition as PoC */\n    use ltseal::ContraLifetimeCell as CLC;\n\n    pub enum Op {\n        Add,\n    }\n\n    pub enum Expr<'var, VAR> {\n        Lit(u32),\n        Op(Op, Box<Expr<'var, VAR>>, Box<Expr<'var, VAR>>),\n        Var(CLC<'var, VAR>),\n        Let(Box<Expr<'var, VAR>>,\n            Box<for<'v: 'var> Fn(Expr<'v, VAR>) -> Expr<'v, VAR> + 'var>)\n    }\n\n    pub fn add<'var, VAR, E1: ExprLike<'var, VAR>,\n                          E2: ExprLike<'var, VAR>>\n                          (a: E1, b: E2) -> Expr<'var, VAR> {\n        Expr::Op(Op::Add, a.as_expr(), b.as_expr())\n    }\n\n    pub fn let_<'var, VAR, E: ExprLike<'var, VAR>,\n                           F: for<'v: 'var>\n                             Fn(Expr<'v, VAR>) -> Expr<'v, VAR>>\n                           (a: E, b: F) -> Expr<'var, VAR> {\n        Expr::Let(a.as_expr(), Box::new(b))\n    }\n\n\n    pub trait ExprLike<'var, VAR> {\n        fn as_expr(self) -> Box<Expr<'var, VAR>>;\n    }\n\n    impl<'var, VAR> ExprLike<'var, VAR> for u32 {\n        fn as_expr(self) -> Box<Expr<'var, VAR>> { Box::new(Expr::Lit(self)) }\n    }\n\n    impl<'var, VAR> ExprLike<'var, VAR> for Expr<'var, VAR> {\n        fn as_expr(self) -> Box<Expr<'var, VAR>> { Box::new(self) }\n    }\n\n\n\n}\n\npub use deep::Expr as E;\npub use deep as d;\n\nfn main() {\n//let x=5 in let y=3 in let x=x+y in x\n    let ex = d::let_(5, |x| {\n        d::let_(3, |y| {\n            d::let_(d::add(x, y), |x|x\n        )})\n    });\n    drop(ex);\n}\n```\n\nErrors:\n\n```\nrror: internal compiler error: unexpected panic\nnote: the compiler unexpectedly panicked. this is a bug.\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\nnote: run with `RUST_BACKTRACE=1` for a backtrace\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', /home/rustbuild/src/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/libcore/option.rs:362\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/23046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/23046/timeline", "performed_via_github_app": null, "state_reason": "completed"}