{"url": "https://api.github.com/repos/rust-lang/rust/issues/82339", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82339/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82339/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82339/events", "html_url": "https://github.com/rust-lang/rust/issues/82339", "id": 812690398, "node_id": "MDU6SXNzdWU4MTI2OTAzOTg=", "number": 82339, "title": "Suggestion: treat WASI preopen dirs as path prefixes", "user": {"login": "RReverser", "id": 557590, "node_id": "MDQ6VXNlcjU1NzU5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/557590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RReverser", "html_url": "https://github.com/RReverser", "followers_url": "https://api.github.com/users/RReverser/followers", "following_url": "https://api.github.com/users/RReverser/following{/other_user}", "gists_url": "https://api.github.com/users/RReverser/gists{/gist_id}", "starred_url": "https://api.github.com/users/RReverser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RReverser/subscriptions", "organizations_url": "https://api.github.com/users/RReverser/orgs", "repos_url": "https://api.github.com/users/RReverser/repos", "events_url": "https://api.github.com/users/RReverser/events{/privacy}", "received_events_url": "https://api.github.com/users/RReverser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 474645165, "node_id": "MDU6TGFiZWw0NzQ2NDUxNjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-wasm", "name": "O-wasm", "color": "6e6ec0", "default": false, "description": "Target: WASM (WebAssembly), http://webassembly.org/"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2021-02-20T19:29:09Z", "updated_at": "2021-02-25T17:40:39Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Rust stdlib already has a concept of path prefixes ([`std::path::Prefix`](https://doc.rust-lang.org/std/path/enum.Prefix.html), [`std::path::PrefixComponent`](https://doc.rust-lang.org/std/path/struct.PrefixComponent.html) etc.), although they are applied only to Windows paths.\r\n\r\nWASI paths are currently treated as starting with a root `/` (e.g. [`path.components()`](https://doc.rust-lang.org/std/path/struct.Path.html#method.components) returns each level starting from [`Component::RootDir`](https://doc.rust-lang.org/std/path/enum.Component.html#variant.RootDir) aka `/`), even though WASI recognises only paths starting with a specific prefix that matches one of the preopen directories specified at startup. The levels above those prefixes don't \"exist\", and most APIs under WASI don't permit crossing boundaries and resolving relative paths or symlinks from a path rooted under one preopen directory to another.\r\n\r\nThe question of exposing an API corresponding to the (currently private) [`open_parent`](https://github.com/rust-lang/rust/blob/14265f9c5558e599ba8908cffc717f26389420e1/library/std/src/sys/wasi/fs.rs#L628) arisen several times in the past, as it's important to split the preopen dir from the relative path whenever dealing with lower-level WASI syscalls.\r\n\r\nGiven the above, I feel like there is a lot of conceptual similarity between WASI preopen dirs and the [`std::path::Prefix`](https://doc.rust-lang.org/std/path/enum.Prefix.html), and the latter would be a natural API to use for exposing the former. We'd only need to add another variant to [`std::path::Prefix`](https://doc.rust-lang.org/std/path/enum.Prefix.html) as well as check against the preopened dirs when splitting `Path` into [`components`](https://doc.rust-lang.org/std/path/struct.Path.html#method.components).\r\n\r\n@alexcrichton @sunfishcode would love your thoughts on this idea.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82339/timeline", "performed_via_github_app": null, "state_reason": null}