{"url": "https://api.github.com/repos/rust-lang/rust/issues/55319", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55319/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55319/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55319/events", "html_url": "https://github.com/rust-lang/rust/issues/55319", "id": 373588573, "node_id": "MDU6SXNzdWUzNzM1ODg1NzM=", "number": 55319, "title": "`impl PartialEq<OsStr> for Path` and similar impls violate Hash consistency", "user": {"login": "mzabaluev", "id": 1198919, "node_id": "MDQ6VXNlcjExOTg5MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1198919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzabaluev", "html_url": "https://github.com/mzabaluev", "followers_url": "https://api.github.com/users/mzabaluev/followers", "following_url": "https://api.github.com/users/mzabaluev/following{/other_user}", "gists_url": "https://api.github.com/users/mzabaluev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzabaluev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzabaluev/subscriptions", "organizations_url": "https://api.github.com/users/mzabaluev/orgs", "repos_url": "https://api.github.com/users/mzabaluev/repos", "events_url": "https://api.github.com/users/mzabaluev/events{/privacy}", "received_events_url": "https://api.github.com/users/mzabaluev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-24T17:15:42Z", "updated_at": "2019-05-03T20:46:58Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This program surprisingly fails:\r\n\r\n```rust\r\nuse std::{\r\n    ffi::OsStr,\r\n    path::Path,\r\n    collections::hash_map::DefaultHasher,\r\n    hash::{Hash, Hasher},\r\n};\r\n\r\nfn hash<T: ?Sized + Hash>(v: &T) -> u64 {\r\n    let mut sh = DefaultHasher::new();\r\n    v.hash(&mut sh);\r\n    sh.finish()\r\n}\r\n\r\nfn main() {\r\n    let s = OsStr::new(\"/dev/null\");\r\n    let p = Path::new(\"/dev/null\");\r\n    assert_eq!(s, p);\r\n    assert!(\r\n        hash(s) == hash(p),\r\n        \"Hashes differ for values that compare as equal\"\r\n    );\r\n}\r\n```\r\n\r\nThe problem is that the provided impls of `PartialEq`, while convenient, cross the data domains and break the intuition on matching behavior of `Hash` and `==`. This does not affect `HashMap` due to lack of a cross-type `Borrow` impl, but the inconsistency can bite the unwary.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55319/timeline", "performed_via_github_app": null, "state_reason": null}