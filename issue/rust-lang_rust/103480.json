{"url": "https://api.github.com/repos/rust-lang/rust/issues/103480", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103480/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103480/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103480/events", "html_url": "https://github.com/rust-lang/rust/issues/103480", "id": 1420788309, "node_id": "I_kwDOAAsO6M5Ur4JV", "number": 103480, "title": "error: internal compiler error: broken MIR in DefId", "user": {"login": "imotai", "id": 8623385, "node_id": "MDQ6VXNlcjg2MjMzODU=", "avatar_url": "https://avatars.githubusercontent.com/u/8623385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imotai", "html_url": "https://github.com/imotai", "followers_url": "https://api.github.com/users/imotai/followers", "following_url": "https://api.github.com/users/imotai/following{/other_user}", "gists_url": "https://api.github.com/users/imotai/gists{/gist_id}", "starred_url": "https://api.github.com/users/imotai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imotai/subscriptions", "organizations_url": "https://api.github.com/users/imotai/orgs", "repos_url": "https://api.github.com/users/imotai/repos", "events_url": "https://api.github.com/users/imotai/events{/privacy}", "received_events_url": "https://api.github.com/users/imotai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 583436937, "node_id": "MDU6TGFiZWw1ODM0MzY5Mzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-author", "name": "S-waiting-on-author", "color": "d3dddd", "default": false, "description": "Status: This is awaiting some action (such as code changes or more information) from the author."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-10-24T12:57:01Z", "updated_at": "2023-03-03T14:00:00Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n#[cfg(test)]\r\nmod tests {\r\n    use super::*;\r\n    use db3_proto::db3_base_proto::{ChainID, ChainRole};\r\n    use db3_proto::db3_mutation_proto::{WriteRequest, Mutation, KVPair};\r\n    use bytes::{Bytes, BytesMut};\r\n    use hex;\r\n    #[test]\r\n    fn test_sign() {\r\n\t\tlet kp = keys().pop().unwrap();\r\n        let kv = KVPair{\r\n            key:\"k1\".as_bytes(),\r\n            value:\"value1\".as_bytes()\r\n        };\r\n        let mutation = Mutation {\r\n            ns: \"my_twitter\".as_bytes(),\r\n            kv_pairs:vec![kv],\r\n            nonce:1,\r\n            chain_id:ChainID::MAIN_NET,\r\n            chain_role:ChainID::STORAGE_SHARD_CHAIN,\r\n        };\r\n        let mut buf = BytesMut::with_capacity(1024 * 4);\r\n        mutation.encode(&mut buf);\r\n        let buf = buf.freeze();\r\n\t\tlet signature: Secp256k1Signature = kp.sign(buf.as_ref());\r\n        let request = WriteRequest {\r\n            signature: signature.as_ref(),\r\n            mutation:buf.as_ref(),\r\n            public_key: kp.public().as_ref()\r\n        };\r\n        let mut buf = BytesMut::with_capacity(1024 * 4);\r\n        let request.encode(&mut buf);\r\n        let buf = buf.freeze();\r\n        println!(\"request 0x{}\",hex::encode(buf.as_ref()));\r\n    }\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nUbuntu 18.04.6 LTS \\n \\l\r\nrustc 1.65.0-nightly (750bd1a7f 2022-09-14)\r\nbinary: rustc\r\ncommit-hash: 750bd1a7ff3e010611b97ee75d30b7cbf5f3a03c\r\ncommit-date: 2022-09-14\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.65.0-nightly\r\nLLVM version: 15.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:345 ~ tower[cffd]::balance::pool::{impl#3}::build) (CanonicalUserTypeAnnotation { user_ty: Canonical { max_universe: U0, variables: [CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Ty(General(U0)) }], value: TypeOf(DefId(0:232 ~ tower[cffd]::balance::p2c::service::{impl#1}::new), UserSubsts { substs: [^0, ^1], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(0:229 ~ tower[cffd]::balance::p2c::service::{impl#1}), self_ty: balance::p2c::service::Balance<^2, ^3> }) }) }, span: /home/parallels/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.13/src/balance/pool/mod.rs:293:22: 293:34 (#0), inferred_ty: fn(std::pin::Pin<std::boxed::Box<balance::pool::PoolDiscoverer<MS, Target, Request>>>) -> balance::p2c::service::Balance<std::pin::Pin<std::boxed::Box<balance::pool::PoolDiscoverer<MS, Target, Request>>>, Request> {balance::p2c::service::Balance::<std::pin::Pin<std::boxed::Box<balance::pool::PoolDiscoverer<MS, Target, Request>>>, Request>::new} }): bad user type AscribeUserType(fn(std::pin::Pin<std::boxed::Box<balance::pool::PoolDiscoverer<MS, Target, Request>>>) -> balance::p2c::service::Balance<std::pin::Pin<std::boxed::Box<balance::pool::PoolDiscoverer<MS, Target, Request>>>, Request> {balance::p2c::service::Balance::<std::pin::Pin<std::boxed::Box<balance::pool::PoolDiscoverer<MS, Target, Request>>>, Request>::new}, DefId(0:232 ~ tower[cffd]::balance::p2c::service::{impl#1}::new) UserSubsts { substs: [_, _], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(0:229 ~ tower[cffd]::balance::p2c::service::{impl#1}), self_ty: balance::p2c::service::Balance<_, _> }) }, type_of=fn(D) -> balance::p2c::service::Balance<D, Req> {balance::p2c::service::Balance::<D, Req>::new}): NoSolution\r\n  |\r\n  = note: delayed at compiler/rustc_borrowck/src/type_check/mod.rs:1087:25\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1492:13\r\nstack backtrace:\r\n   0:     0x7ff1c21e6c20 - std::backtrace_rs::backtrace::libunwind::trace::hf9cd4c385c25a2fe\r\n                               at /rustc/750bd1a7ff3e010611b97ee75d30b7cbf5f3a03c/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   1:     0x7ff1c21e6c20 - std::backtrace_rs::backtrace::trace_unsynchronized::hf9a1be2df46de98c\r\n                               at /rustc/750bd1a7ff3e010611b97ee75d30b7cbf5f3a03c/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7ff1c21e6c20 - std::sys_common::backtrace::_print_fmt::ha770a6c3890b3cde\r\n                               at /rustc/750bd1a7ff3e010611b97ee75d30b7cbf5f3a03c/library/std/src/sys_common/backtrace.rs:66:5\r\n   3:     0x7ff1c21e6c20 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h7099a61d18d47f5f\r\n                               at /rustc/750bd1a7ff3e010611b97ee75d30b7cbf5f3a03c/library/std/src/sys_common/backtrace.rs:45:22\r\n   4:     0x7ff1c2241aee - core::fmt::write::h34c269a5556240be\r\n                               at /rustc/750bd1a7ff3e010611b97ee75d30b7cbf5f3a03c/library/core/src/fmt/mod.rs:1202:17\r\n   5:     0x7ff1c21d7835 - std::io::Write::write_fmt::h9b1d898decaac979\r\n                               at /rustc/750bd1a7ff3e010611b97ee75d30b7cbf5f3a03c/library/std/src/io/mod.rs:1679:15\r\n   6:     0x7ff1c21e98d3 - std::sys_common::backtrace::_print::hb8325cbd910e0a42\r\n                               at /rustc/750bd1a7ff3e010611b97ee75d30b7cbf5f3a03c/library/std/src/sys_common/backtrace.rs:48:5\r\n   7:     0x7ff1c21e98d3 - std::sys_common::backtrace::print::h52eaf8f4259fb854\r\n                               at /rustc/750bd1a7ff3e010611b97ee75d30b7cbf5f3a03c/library/std/src/sys_common/backtrace.rs:35:9\r\n   8:     0x7ff1c21e98d3 - std::panicking::default_hook::{{closure}}::h38a1bd1ceb333281\r\n                               at /rustc/750bd1a7ff3e010611b97ee75d30b7cbf5f3a03c/library/std/src/panicking.rs:295:22\r\n   9:     0x7ff1c21e95bf - std::panicking::default_hook::hbfa37b6c2aa83708\r\n                               at /rustc/750bd1a7ff3e010611b97ee75d30b7cbf5f3a03c/library/std/src/panicking.rs:314:9\r\n  10:     0x7ff1bfa31001 - <rustc_driver[f7b5b01335fbd434]::DEFAULT_HOOK::{closure#0}::{closure#0} as core[f6f8d9be6066ab2c]::ops::function::FnOnce<(&core[f6f8d9be6066ab2c]::panic::panic_info::PanicInfo,)>>::call_once::{shim:vtable#0}\r\n  11:     0x7ff1c21ea10d - std::panicking::rust_panic_with_hook::h6bfc21eea1a19790\r\n                               at /rustc/750bd1a7ff3e010611b97ee75d30b7cbf5f3a03c/library/std/src/panicking.rs:702:17\r\n  12:     0x7ff1c0b8b141 - std[81ab5d9a96a0142e]::panicking::begin_panic::<rustc_errors[e78c9e9af74db21c]::ExplicitBug>::{closure#0}\r\n  13:     0x7ff1c0b8ac66 - std[81ab5d9a96a0142e]::sys_common::backtrace::__rust_end_short_backtrace::<std[81ab5d9a96a0142e]::panicking::begin_panic<rustc_errors[e78c9e9af74db21c]::ExplicitBug>::{closure#0}, !>\r\n  14:     0x7ff1c0b8a8f6 - std[81ab5d9a96a0142e]::panicking::begin_panic::<rustc_errors[e78c9e9af74db21c]::ExplicitBug>\r\n  15:     0x7ff1c0b88446 - std[81ab5d9a96a0142e]::panic::panic_any::<rustc_errors[e78c9e9af74db21c]::ExplicitBug>\r\n  16:     0x7ff1bf582228 - <rustc_errors[e78c9e9af74db21c]::HandlerInner as core[f6f8d9be6066ab2c]::ops::drop::Drop>::drop\r\n  17:     0x7ff1be864b28 - core[f6f8d9be6066ab2c]::ptr::drop_in_place::<rustc_session[c3e5419825648902]::parse::ParseSess>\r\n  18:     0x7ff1be8224e8 - <alloc[9d62437589f31483]::rc::Rc<rustc_session[c3e5419825648902]::session::Session> as core[f6f8d9be6066ab2c]::ops::drop::Drop>::drop\r\n  19:     0x7ff1be81f4ad - core[f6f8d9be6066ab2c]::ptr::drop_in_place::<rustc_interface[5bcac5cfb78c3b1a]::interface::Compiler>\r\n  20:     0x7ff1be81cd0c - rustc_interface[5bcac5cfb78c3b1a]::interface::create_compiler_and_run::<core[f6f8d9be6066ab2c]::result::Result<(), rustc_errors[e78c9e9af74db21c]::ErrorGuaranteed>, rustc_driver[f7b5b01335fbd434]::run_compiler::{closure#1}>\r\n  21:     0x7ff1be81b211 - <scoped_tls[de48490ce358b7ec]::ScopedKey<rustc_span[352514dd70ceaa1d]::SessionGlobals>>::set::<rustc_interface[5bcac5cfb78c3b1a]::interface::run_compiler<core[f6f8d9be6066ab2c]::result::Result<(), rustc_errors[e78c9e9af74db21c]::ErrorGuaranteed>, rustc_driver[f7b5b01335fbd434]::run_compiler::{closure#1}>::{closure#0}, core[f6f8d9be6066ab2c]::result::Result<(), rustc_errors[e78c9e9af74db21c]::ErrorGuaranteed>>\r\n  22:     0x7ff1be81aeff - std[81ab5d9a96a0142e]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[5bcac5cfb78c3b1a]::util::run_in_thread_pool_with_globals<rustc_interface[5bcac5cfb78c3b1a]::interface::run_compiler<core[f6f8d9be6066ab2c]::result::Result<(), rustc_errors[e78c9e9af74db21c]::ErrorGuaranteed>, rustc_driver[f7b5b01335fbd434]::run_compiler::{closure#1}>::{closure#0}, core[f6f8d9be6066ab2c]::result::Result<(), rustc_errors[e78c9e9af74db21c]::ErrorGuaranteed>>::{closure#0}, core[f6f8d9be6066ab2c]::result::Result<(), rustc_errors[e78c9e9af74db21c]::ErrorGuaranteed>>\r\n  23:     0x7ff1bf895000 - <<std[81ab5d9a96a0142e]::thread::Builder>::spawn_unchecked_<rustc_interface[5bcac5cfb78c3b1a]::util::run_in_thread_pool_with_globals<rustc_interface[5bcac5cfb78c3b1a]::interface::run_compiler<core[f6f8d9be6066ab2c]::result::Result<(), rustc_errors[e78c9e9af74db21c]::ErrorGuaranteed>, rustc_driver[f7b5b01335fbd434]::run_compiler::{closure#1}>::{closure#0}, core[f6f8d9be6066ab2c]::result::Result<(), rustc_errors[e78c9e9af74db21c]::ErrorGuaranteed>>::{closure#0}, core[f6f8d9be6066ab2c]::result::Result<(), rustc_errors[e78c9e9af74db21c]::ErrorGuaranteed>>::{closure#1} as core[f6f8d9be6066ab2c]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  24:     0x7ff1c21f3ee3 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h2695b43ebae659e4\r\n                               at /rustc/750bd1a7ff3e010611b97ee75d30b7cbf5f3a03c/library/alloc/src/boxed.rs:1940:9\r\n  25:     0x7ff1c21f3ee3 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hf3b49b955267341c\r\n                               at /rustc/750bd1a7ff3e010611b97ee75d30b7cbf5f3a03c/library/alloc/src/boxed.rs:1940:9\r\n  26:     0x7ff1c21f3ee3 - std::sys::unix::thread::Thread::new::thread_start::h2bad5ab8a769c6c8\r\n                               at /rustc/750bd1a7ff3e010611b97ee75d30b7cbf5f3a03c/library/std/src/sys/unix/thread.rs:108:17\r\n  27:     0x7ff1bcc366db - start_thread\r\n                               at /build/glibc-CVJwZb/glibc-2.27/nptl/pthread_create.c:463\r\n  28:     0x7ff1bc95f61f - clone\r\n                               at /build/glibc-CVJwZb/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n  29:                0x0 - <unknown>\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.65.0-nightly (750bd1a7f 2022-09-14) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type lib -C embed-bitcode=no -C debuginfo=2\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: could not compile `tower`\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103480/timeline", "performed_via_github_app": null, "state_reason": null}