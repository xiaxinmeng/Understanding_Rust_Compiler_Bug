{"url": "https://api.github.com/repos/rust-lang/rust/issues/18806", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/18806/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/18806/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/18806/events", "html_url": "https://github.com/rust-lang/rust/issues/18806", "id": 48197099, "node_id": "MDU6SXNzdWU0ODE5NzA5OQ==", "number": 18806, "title": "Creating an unsized struct", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-11-09T09:58:27Z", "updated_at": "2017-02-21T13:21:07Z", "closed_at": "2014-11-17T13:18:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is apparently no way to construct unsized struct. This can be worked around with `transmute`, but only if the struct only has one field (the unsized one). Even with a single field, there should be a way to do this without `unsafe`.\n\nTest case:\n\n``` rust\npub struct Foo {\n    bytes: [u8]\n}\n\nimpl Foo {\n    fn new(bytes: &[u8]) -> &Foo {\n        &Foo { bytes: *bytes }\n    }\n}\n```\n\nOutput:\n\n``` rust\na.rs:7:10: 7:31 error: the trait `core::kinds::Sized` is not implemented for the type `Foo`\na.rs:7         &Foo { bytes: *bytes }\n                ^~~~~~~~~~~~~~~~~~~~~\na.rs:7:10: 7:31 note: structs must have a statically known size to be initialized\na.rs:7         &Foo { bytes: *bytes }\n                ^~~~~~~~~~~~~~~~~~~~~\n```\n\nA work-around:\n\n``` rust\n    fn new(bytes: &[u8]) -> &Foo {\n        unsafe { ::std::mem::transmute(bytes) }\n    }\n```\n", "closed_by": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/18806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/18806/timeline", "performed_via_github_app": null, "state_reason": "completed"}