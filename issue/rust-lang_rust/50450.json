{"url": "https://api.github.com/repos/rust-lang/rust/issues/50450", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50450/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50450/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50450/events", "html_url": "https://github.com/rust-lang/rust/issues/50450", "id": 320374424, "node_id": "MDU6SXNzdWUzMjAzNzQ0MjQ=", "number": 50450, "title": "derive(Debug) on huge enum causes massive memory spike during liveness checking", "user": {"login": "retep998", "id": 666308, "node_id": "MDQ6VXNlcjY2NjMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/666308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retep998", "html_url": "https://github.com/retep998", "followers_url": "https://api.github.com/users/retep998/followers", "following_url": "https://api.github.com/users/retep998/following{/other_user}", "gists_url": "https://api.github.com/users/retep998/gists{/gist_id}", "starred_url": "https://api.github.com/users/retep998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retep998/subscriptions", "organizations_url": "https://api.github.com/users/retep998/orgs", "repos_url": "https://api.github.com/users/retep998/repos", "events_url": "https://api.github.com/users/retep998/events{/privacy}", "received_events_url": "https://api.github.com/users/retep998/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630799571, "node_id": "MDU6TGFiZWw2MzA3OTk1NzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compilemem", "name": "I-compilemem", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to memory usage during compilation."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-04T18:04:48Z", "updated_at": "2021-02-02T22:00:46Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Discovered on twitter: https://twitter.com/malwareunicorn/status/992438462652403713\r\n\r\n`#[derive(Debug)]` on an enum with 10,000 variants causes a 7GB spike. `#[derive(Debug)]` on an enum with 20,000 variants causes a **massive** 28GB spike. \r\n\r\n20,000 variant code to reproduce: https://gist.github.com/retep998/fdddd37aea38c5d2bfacbf63773e2417\r\n\r\nTime passes from 20,000 variant build which doesn't show the massive spike (in fact it shows the opposite because the massive spike pushed most of rustc's memory usage into the page file):\r\n```\r\n  time: 0.025; rss: 24MB        parsing\r\n  time: 0.000; rss: 24MB        recursion limit\r\n  time: 0.000; rss: 24MB        crate injection\r\n  time: 0.000; rss: 24MB        plugin loading\r\n  time: 0.000; rss: 24MB        plugin registration\r\n    time: 0.287; rss: 82MB      expand crate\r\n    time: 0.000; rss: 82MB      check unused macros\r\n  time: 0.289; rss: 82MB        expansion\r\n  time: 0.000; rss: 82MB        maybe building test harness\r\n  time: 0.009; rss: 82MB        maybe creating a macro crate\r\n  time: 0.026; rss: 82MB        creating allocators\r\n  time: 0.028; rss: 82MB        AST validation\r\n  time: 0.222; rss: 98MB        name resolution\r\n  time: 0.022; rss: 98MB        complete gated feature checking\r\n  time: 0.104; rss: 131MB       lowering ast -> hir\r\n  time: 0.059; rss: 131MB       early lint checks\r\n  time: 0.149; rss: 134MB       indexing hir\r\n  time: 0.000; rss: 102MB       load query result cache\r\n  time: 0.000; rss: 102MB       looking for entry point\r\n  time: 0.000; rss: 102MB       looking for plugin registrar\r\n  time: 0.009; rss: 102MB       loop checking\r\n  time: 0.009; rss: 104MB       attribute checking\r\n  time: 0.009; rss: 104MB       stability checking\r\n  time: 0.098; rss: 121MB       type collecting\r\n  time: 0.000; rss: 121MB       outlives testing\r\n  time: 0.000; rss: 121MB       impl wf inference\r\n  time: 0.024; rss: 139MB       coherence checking\r\n  time: 0.000; rss: 139MB       variance testing\r\n  time: 0.076; rss: 157MB       wf checking\r\n  time: 0.144; rss: 157MB       item-types checking\r\n  time: 60.147; rss: 211MB      item-bodies checking\r\n  time: 0.506; rss: 231MB       rvalue promotion\r\n  time: 0.170; rss: 232MB       privacy checking\r\n  time: 0.016; rss: 232MB       intrinsic checking\r\n  time: 96.740; rss: 234MB      match checking\r\n  time: 54.939; rss: 52MB       liveness checking\r\n  time: 54.936; rss: 246MB      borrow checking\r\n  time: 0.001; rss: 246MB       MIR borrow checking\r\n  time: 0.000; rss: 246MB       MIR effect checking\r\n  time: 0.069; rss: 250MB       death checking\r\n  time: 0.012; rss: 250MB       unused lib feature checking\r\n  time: 0.245; rss: 261MB       lint checking\r\n  time: 0.000; rss: 261MB       dumping chalk-like clauses\r\n  time: 0.004; rss: 261MB       resolving dependency formats\r\n    time: 0.011; rss: 262MB     write metadata\r\n    time: 0.276; rss: 281MB     translation item collection\r\n    time: 0.002; rss: 281MB     codegen unit partitioning\r\n    time: 0.002; rss: 284MB     write allocator module\r\n    time: 0.011; rss: 287MB     translate to LLVM IR\r\n    time: 0.001; rss: 287MB     assert dep graph\r\n    time: 0.000; rss: 287MB     serialize dep graph\r\n  time: 0.323; rss: 287MB       translation\r\n    time: 0.005; rss: 273MB     llvm function passes [hugeenum2]\r\n    time: 0.004; rss: 273MB     llvm function passes [hugeenum3]\r\n    time: 0.005; rss: 273MB     llvm function passes [hugeenum0]\r\n    time: 0.005; rss: 273MB     llvm function passes [hugeenum4]\r\n    time: 0.004; rss: 273MB     llvm function passes [hugeenum1]\r\n    time: 0.003; rss: 254MB     llvm module passes [hugeenum0]\r\n    time: 0.003; rss: 253MB     llvm module passes [hugeenum2]\r\n    time: 0.003; rss: 253MB     llvm module passes [hugeenum3]\r\n    time: 0.003; rss: 253MB     llvm module passes [hugeenum1]\r\n    time: 0.003; rss: 253MB     llvm module passes [hugeenum4]\r\n    time: 0.039; rss: 226MB     codegen passes [hugeenum0]\r\n    time: 0.040; rss: 221MB     codegen passes [hugeenum2]\r\n    time: 0.043; rss: 207MB     codegen passes [hugeenum3]\r\n    time: 0.043; rss: 208MB     codegen passes [hugeenum4]\r\n    time: 0.048; rss: 202MB     codegen passes [hugeenum1]\r\n  time: 0.059; rss: 203MB       LLVM passes\r\n  time: 0.000; rss: 46MB        serialize work products\r\n    time: 0.322; rss: 46MB      running linker\r\n  time: 0.371; rss: 46MB        linking\r\n```\r\n\r\nThe massive spike:\r\n![](https://i.imgur.com/dpnvToc.png)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50450/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 2, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50450/timeline", "performed_via_github_app": null, "state_reason": null}