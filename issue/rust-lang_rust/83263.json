{"url": "https://api.github.com/repos/rust-lang/rust/issues/83263", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83263/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83263/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83263/events", "html_url": "https://github.com/rust-lang/rust/issues/83263", "id": 834928188, "node_id": "MDU6SXNzdWU4MzQ5MjgxODg=", "number": 83263, "title": "incorrectly ignoring a field with `{ _ }` yields suggestion that assumes `_` is a valid field name ", "user": {"login": "Lotterleben", "id": 581552, "node_id": "MDQ6VXNlcjU4MTU1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/581552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lotterleben", "html_url": "https://github.com/Lotterleben", "followers_url": "https://api.github.com/users/Lotterleben/followers", "following_url": "https://api.github.com/users/Lotterleben/following{/other_user}", "gists_url": "https://api.github.com/users/Lotterleben/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lotterleben/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lotterleben/subscriptions", "organizations_url": "https://api.github.com/users/Lotterleben/orgs", "repos_url": "https://api.github.com/users/Lotterleben/repos", "events_url": "https://api.github.com/users/Lotterleben/events{/privacy}", "received_events_url": "https://api.github.com/users/Lotterleben/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "open", "locked": false, "assignee": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2021-03-18T15:13:43Z", "updated_at": "2022-03-18T12:56:41Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "hi,\r\nI think I ran into a bit of an error reporting hickup with my erroneous code.\r\n\r\nGiven the following code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=cb47de4bf36f023caa0c21fc77ec4271\r\n\r\n```rust\r\nenum TopException {\r\n    HardFault { stack_overflow: bool },\r\n    Other,\r\n}\r\n\r\nfn main() {\r\n    let top_exception = Some(TopException::Other);\r\n\r\n    if let Some(TopException::HardFault {_}) = top_exception {\r\n     //                                  ^^ oh no\r\n        todo!();\r\n    }\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror: expected identifier, found reserved identifier `_`\r\n  --> src/main.rs:10:42\r\n   |\r\n10 |     if let Some(TopException::HardFault {_}) = top_exception {\r\n   |                                          ^ expected identifier, found reserved identifier\r\n\r\nerror[E0026]: variant `TopException::HardFault` does not have a field named `_`\r\n  --> src/main.rs:10:42\r\n   |\r\n10 |     if let Some(TopException::HardFault {_}) = top_exception {\r\n   |                                          ^ variant `TopException::HardFault` does not have this field\r\n\r\nerror[E0027]: pattern does not mention field `stack_overflow`\r\n  --> src/main.rs:10:17\r\n   |\r\n10 |     if let Some(TopException::HardFault {_}) = top_exception {\r\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing field `stack_overflow`\r\n   |\r\nhelp: include the missing field in the pattern\r\n   |\r\n10 |     if let Some(TopException::HardFault {_, stack_overflow}) = top_exception {\r\n   |                                           ^^^^^^^^^^^^^^^^\r\nhelp: if you don't care about this missing field, you can explicitly ignore it\r\n   |\r\n10 |     if let Some(TopException::HardFault {_, ..}) = top_exception {\r\n   |                                           ^^^^\r\n\r\nerror: aborting due to 3 previous errors\r\n\r\nSome errors have detailed explanations: E0026, E0027.\r\nFor more information about an error, try `rustc --explain E0026`.\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nApplying this suggestion yields \r\n\r\n```\r\n\u2028error: expected identifier, found reserved identifier `_`\r\n  --> src/main.rs:10:42\r\n   |\r\n10 |     if let Some(TopException::HardFault {_, stack_overflow}) = top_exception {\r\n   |                                          ^ expected identifier, found reserved identifier\r\n\r\nerror[E0026]: variant `TopException::HardFault` does not have a field named `_`\r\n  --> src/main.rs:10:42\r\n   |\r\n10 |     if let Some(TopException::HardFault {_, stack_overflow}) = top_exception {\r\n   |                                          ^ variant `TopException::HardFault` does not have this field\r\n```\r\n\r\nInstead, I would've expected the suggestion to be along the lines of:\r\n\r\n```rust\r\n\u2028    if let Some(TopException::HardFault {stack_overflow: _}) = top_exception {\r\n```\r\nor at least\r\n\r\n```rust\r\n    if let Some(TopException::HardFault {stack_overflow}) = top_exception {\r\n```\r\n\r\n@jonas-schievink pointed out to me that this is likely caused by `rustc` recognizing that `_` is not a valid field pattern, trying to recover from it by treating it as something like `_: _`, which also fails because there's no field named `_` \u2013 but of course this is not a valid field name at all, which should be recognized as such?\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83263/timeline", "performed_via_github_app": null, "state_reason": null}