{"url": "https://api.github.com/repos/rust-lang/rust/issues/95453", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95453/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95453/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95453/events", "html_url": "https://github.com/rust-lang/rust/issues/95453", "id": 1185632594, "node_id": "I_kwDOAAsO6M5Gq1FS", "number": 95453, "title": "Boxes with custom allocators break several underlying assumptions in Miri (and MIR more broadly)", "user": {"login": "autumnontape", "id": 40726037, "node_id": "MDQ6VXNlcjQwNzI2MDM3", "avatar_url": "https://avatars.githubusercontent.com/u/40726037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/autumnontape", "html_url": "https://github.com/autumnontape", "followers_url": "https://api.github.com/users/autumnontape/followers", "following_url": "https://api.github.com/users/autumnontape/following{/other_user}", "gists_url": "https://api.github.com/users/autumnontape/gists{/gist_id}", "starred_url": "https://api.github.com/users/autumnontape/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/autumnontape/subscriptions", "organizations_url": "https://api.github.com/users/autumnontape/orgs", "repos_url": "https://api.github.com/users/autumnontape/repos", "events_url": "https://api.github.com/users/autumnontape/events{/privacy}", "received_events_url": "https://api.github.com/users/autumnontape/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 129836139, "node_id": "MDU6TGFiZWwxMjk4MzYxMzk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-allocators", "name": "A-allocators", "color": "f7e101", "default": false, "description": "Area: Custom and system allocators"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2022-03-30T00:13:44Z", "updated_at": "2022-07-04T03:26:11Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n**This error got turned into a general design issue** for `Box` as a language primitive vs `Box` having an 'allocator' field. See original bug report below. Also see a further testcase at https://github.com/rust-lang/miri/pull/2072.\r\n\r\n---\r\n\r\nThis is minimized from an error I ran into while [implementing the `Allocator` API in my crate, bump-into,](https://github.com/autumnontape/bump-into/tree/allocator_api) and trying to test the implementation with Miri:\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(allocator_api)]\r\n\r\nextern crate alloc;\r\n\r\nuse alloc::alloc::{AllocError, Allocator};\r\nuse core::alloc::Layout;\r\nuse core::cell::Cell;\r\nuse core::mem::MaybeUninit;\r\nuse core::ptr::{self, NonNull};\r\n\r\nstruct OnceAlloc<'a> {\r\n    space: Cell<&'a mut [MaybeUninit<u8>]>,\r\n}\r\n\r\nunsafe impl<'shared, 'a: 'shared> Allocator for &'shared OnceAlloc<'a> {\r\n    fn allocate(&self, layout: Layout) -> Result<NonNull<[u8]>, AllocError> {\r\n        let space = self.space.replace(&mut []);\r\n\r\n        let (ptr, len) = (space.as_mut_ptr(), space.len());\r\n\r\n        if ptr.align_offset(layout.align()) != 0 || len < layout.size() {\r\n            return Err(AllocError);\r\n        }\r\n\r\n        let slice_ptr = ptr::slice_from_raw_parts_mut(ptr as *mut u8, len);\r\n        unsafe { Ok(NonNull::new_unchecked(slice_ptr)) }\r\n    }\r\n\r\n    unsafe fn deallocate(&self, _ptr: NonNull<u8>, _layout: Layout) {}\r\n}\r\n\r\nfn main() {\r\n    let mut space = vec![MaybeUninit::new(0); 1];\r\n    let once_alloc = OnceAlloc {\r\n        space: Cell::new(&mut space[..]),\r\n    };\r\n\r\n    let _boxed = Box::new_in([0u8; 1], &once_alloc);\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.61.0-nightly (1d9c262ee 2022-03-26)\r\nbinary: rustc\r\ncommit-hash: 1d9c262eea411ec5230f8a4c9ba50b3647064da4\r\ncommit-date: 2022-03-26\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.61.0-nightly\r\nLLVM version: 14.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n$ env RUST_BACKTRACE=full cargo miri run\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.00s\r\n     Running `/home/autumn/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri target/miri/x86_64-unknown-linux-gnu/debug/miri-ice`\r\nerror: internal compiler error: /rustc/1d9c262eea411ec5230f8a4c9ba50b3647064da4/compiler/rustc_const_eval/src/interpret/place.rs:777:26: write_immediate_to_mplace: invalid ScalarPair layout: TyAndLayout {\r\n                                    ty: *mut [u8; 1],\r\n                                    layout: Layout {\r\n                                        fields: Primitive,\r\n                                        variants: Single {\r\n                                            index: 0,\r\n                                        },\r\n                                        abi: Scalar(\r\n                                            Scalar {\r\n                                                value: Pointer,\r\n                                                valid_range: 0..=18446744073709551615,\r\n                                            },\r\n                                        ),\r\n                                        largest_niche: None,\r\n                                        align: AbiAndPrefAlign {\r\n                                            abi: Align {\r\n                                                pow2: 3,\r\n                                            },\r\n                                            pref: Align {\r\n                                                pow2: 3,\r\n                                            },\r\n                                        },\r\n                                        size: Size {\r\n                                            raw: 8,\r\n                                        },\r\n                                    },\r\n                                }\r\n   --> /home/autumn/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:359:13\r\n    |\r\n359 |             boxed.as_mut_ptr().write(x);\r\n    |             ^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/1d9c262eea411ec5230f8a4c9ba50b3647064da4/compiler/rustc_errors/src/lib.rs:1222:9\r\nstack backtrace:\r\n   0:     0x7f4c0669d55d - std::backtrace_rs::backtrace::libunwind::trace::hb8664f5c920dcd17\r\n                               at /rustc/1d9c262eea411ec5230f8a4c9ba50b3647064da4/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7f4c0669d55d - std::backtrace_rs::backtrace::trace_unsynchronized::h4718639a025d9e7f\r\n                               at /rustc/1d9c262eea411ec5230f8a4c9ba50b3647064da4/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f4c0669d55d - std::sys_common::backtrace::_print_fmt::h147f7c369d4f1e8e\r\n                               at /rustc/1d9c262eea411ec5230f8a4c9ba50b3647064da4/library/std/src/sys_common/backtrace.rs:66:5\r\n   3:     0x7f4c0669d55d - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hee801905e555ec30\r\n                               at /rustc/1d9c262eea411ec5230f8a4c9ba50b3647064da4/library/std/src/sys_common/backtrace.rs:45:22\r\n   4:     0x7f4c066f755c - core::fmt::write::h4bb35aa347c570f4\r\n                               at /rustc/1d9c262eea411ec5230f8a4c9ba50b3647064da4/library/core/src/fmt/mod.rs:1190:17\r\n   5:     0x7f4c0668eab1 - std::io::Write::write_fmt::h6ed268cd0958975b\r\n                               at /rustc/1d9c262eea411ec5230f8a4c9ba50b3647064da4/library/std/src/io/mod.rs:1655:15\r\n   6:     0x7f4c066a0645 - std::sys_common::backtrace::_print::h3f974cf4bd76b112\r\n                               at /rustc/1d9c262eea411ec5230f8a4c9ba50b3647064da4/library/std/src/sys_common/backtrace.rs:48:5\r\n   7:     0x7f4c066a0645 - std::sys_common::backtrace::print::h56cc71e242d02ce1\r\n                               at /rustc/1d9c262eea411ec5230f8a4c9ba50b3647064da4/library/std/src/sys_common/backtrace.rs:35:9\r\n   8:     0x7f4c066a0645 - std::panicking::default_hook::{{closure}}::hca67c27c011873e3\r\n                               at /rustc/1d9c262eea411ec5230f8a4c9ba50b3647064da4/library/std/src/panicking.rs:295:22\r\n   9:     0x7f4c066a02f9 - std::panicking::default_hook::ha53803c35aaf5526\r\n                               at /rustc/1d9c262eea411ec5230f8a4c9ba50b3647064da4/library/std/src/panicking.rs:314:9\r\n  10:     0x7f4c06ece6c1 - rustc_driver[1cb8e757554a7e43]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n  11:     0x7f4c066a0d90 - std::panicking::rust_panic_with_hook::hc072423965447af2\r\n                               at /rustc/1d9c262eea411ec5230f8a4c9ba50b3647064da4/library/std/src/panicking.rs:702:17\r\n  12:     0x5584173e5793 - std[907b070526960113]::panicking::begin_panic::<rustc_errors[f8e1677070e2f6d9]::ExplicitBug>::{closure#0}\r\n  13:     0x5584173e5356 - std[907b070526960113]::sys_common::backtrace::__rust_end_short_backtrace::<std[907b070526960113]::panicking::begin_panic<rustc_errors[f8e1677070e2f6d9]::ExplicitBug>::{closure#0}, !>\r\n  14:     0x55841725f996 - std[907b070526960113]::panicking::begin_panic::<rustc_errors[f8e1677070e2f6d9]::ExplicitBug>\r\n  15:     0x558417309876 - std[907b070526960113]::panic::panic_any::<rustc_errors[f8e1677070e2f6d9]::ExplicitBug>\r\n  16:     0x558417307f2a - <rustc_errors[f8e1677070e2f6d9]::HandlerInner>::span_bug::<rustc_span[c0544ac70c34a1b7]::span_encoding::Span>\r\n  17:     0x558417307d70 - <rustc_errors[f8e1677070e2f6d9]::Handler>::span_bug::<rustc_span[c0544ac70c34a1b7]::span_encoding::Span>\r\n  18:     0x558417312215 - rustc_middle[4fcaad924d73098a]::ty::context::tls::with_opt::<rustc_middle[4fcaad924d73098a]::util::bug::opt_span_bug_fmt<rustc_span[c0544ac70c34a1b7]::span_encoding::Span>::{closure#0}, ()>\r\n  19:     0x558417311f69 - rustc_middle[4fcaad924d73098a]::util::bug::opt_span_bug_fmt::<rustc_span[c0544ac70c34a1b7]::span_encoding::Span>\r\n  20:     0x55841725fa63 - rustc_middle[4fcaad924d73098a]::util::bug::span_bug_fmt::<rustc_span[c0544ac70c34a1b7]::span_encoding::Span>\r\n  21:     0x558417350c5d - <rustc_const_eval[3ebf8ee4e08cef50]::interpret::eval_context::InterpCx<miri[17c863d3c0e6d9d6]::machine::Evaluator>>::write_immediate_to_mplace_no_validate\r\n  22:     0x55841734ff04 - <rustc_const_eval[3ebf8ee4e08cef50]::interpret::eval_context::InterpCx<miri[17c863d3c0e6d9d6]::machine::Evaluator>>::write_immediate_no_validate\r\n  23:     0x55841734f9c4 - <rustc_const_eval[3ebf8ee4e08cef50]::interpret::eval_context::InterpCx<miri[17c863d3c0e6d9d6]::machine::Evaluator>>::copy_op_no_validate\r\n  24:     0x55841734d4ba - <rustc_const_eval[3ebf8ee4e08cef50]::interpret::eval_context::InterpCx<miri[17c863d3c0e6d9d6]::machine::Evaluator>>::copy_op_transmute\r\n  25:     0x558417355324 - <rustc_const_eval[3ebf8ee4e08cef50]::interpret::eval_context::InterpCx<miri[17c863d3c0e6d9d6]::machine::Evaluator>>::pop_stack_frame\r\n  26:     0x558417342ddf - <rustc_const_eval[3ebf8ee4e08cef50]::interpret::eval_context::InterpCx<miri[17c863d3c0e6d9d6]::machine::Evaluator>>::terminator\r\n  27:     0x5584172f42f0 - miri[17c863d3c0e6d9d6]::eval::eval_entry\r\n  28:     0x558417265aec - <rustc_interface[38cec0579f964c4b]::passes::QueryContext>::enter::<<miri[f35c181d28723cbf]::MiriCompilerCalls as rustc_driver[1cb8e757554a7e43]::Callbacks>::after_analysis::{closure#0}, ()>\r\n  29:     0x5584172637e5 - <miri[f35c181d28723cbf]::MiriCompilerCalls as rustc_driver[1cb8e757554a7e43]::Callbacks>::after_analysis\r\n  30:     0x7f4c08d3e4b5 - <rustc_interface[38cec0579f964c4b]::interface::Compiler>::enter::<rustc_driver[1cb8e757554a7e43]::run_compiler::{closure#1}::{closure#2}, core[69ec914610f0cf77]::result::Result<core[69ec914610f0cf77]::option::Option<rustc_interface[38cec0579f964c4b]::queries::Linker>, rustc_errors[f8e1677070e2f6d9]::ErrorGuaranteed>>\r\n  31:     0x7f4c08d514bf - rustc_span[c0544ac70c34a1b7]::with_source_map::<core[69ec914610f0cf77]::result::Result<(), rustc_errors[f8e1677070e2f6d9]::ErrorGuaranteed>, rustc_interface[38cec0579f964c4b]::interface::create_compiler_and_run<core[69ec914610f0cf77]::result::Result<(), rustc_errors[f8e1677070e2f6d9]::ErrorGuaranteed>, rustc_driver[1cb8e757554a7e43]::run_compiler::{closure#1}>::{closure#1}>\r\n  32:     0x7f4c08d3f114 - rustc_interface[38cec0579f964c4b]::interface::create_compiler_and_run::<core[69ec914610f0cf77]::result::Result<(), rustc_errors[f8e1677070e2f6d9]::ErrorGuaranteed>, rustc_driver[1cb8e757554a7e43]::run_compiler::{closure#1}>\r\n  33:     0x7f4c08d3be92 - <scoped_tls[9467090f342ff13]::ScopedKey<rustc_span[c0544ac70c34a1b7]::SessionGlobals>>::set::<rustc_interface[38cec0579f964c4b]::interface::run_compiler<core[69ec914610f0cf77]::result::Result<(), rustc_errors[f8e1677070e2f6d9]::ErrorGuaranteed>, rustc_driver[1cb8e757554a7e43]::run_compiler::{closure#1}>::{closure#0}, core[69ec914610f0cf77]::result::Result<(), rustc_errors[f8e1677070e2f6d9]::ErrorGuaranteed>>\r\n  34:     0x7f4c08d3a1ff - std[907b070526960113]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[38cec0579f964c4b]::util::run_in_thread_pool_with_globals<rustc_interface[38cec0579f964c4b]::interface::run_compiler<core[69ec914610f0cf77]::result::Result<(), rustc_errors[f8e1677070e2f6d9]::ErrorGuaranteed>, rustc_driver[1cb8e757554a7e43]::run_compiler::{closure#1}>::{closure#0}, core[69ec914610f0cf77]::result::Result<(), rustc_errors[f8e1677070e2f6d9]::ErrorGuaranteed>>::{closure#0}, core[69ec914610f0cf77]::result::Result<(), rustc_errors[f8e1677070e2f6d9]::ErrorGuaranteed>>\r\n  35:     0x7f4c08d52452 - <<std[907b070526960113]::thread::Builder>::spawn_unchecked_<rustc_interface[38cec0579f964c4b]::util::run_in_thread_pool_with_globals<rustc_interface[38cec0579f964c4b]::interface::run_compiler<core[69ec914610f0cf77]::result::Result<(), rustc_errors[f8e1677070e2f6d9]::ErrorGuaranteed>, rustc_driver[1cb8e757554a7e43]::run_compiler::{closure#1}>::{closure#0}, core[69ec914610f0cf77]::result::Result<(), rustc_errors[f8e1677070e2f6d9]::ErrorGuaranteed>>::{closure#0}, core[69ec914610f0cf77]::result::Result<(), rustc_errors[f8e1677070e2f6d9]::ErrorGuaranteed>>::{closure#1} as core[69ec914610f0cf77]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  36:     0x7f4c066aaf83 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hf0cca23978c89840\r\n                               at /rustc/1d9c262eea411ec5230f8a4c9ba50b3647064da4/library/alloc/src/boxed.rs:1861:9\r\n  37:     0x7f4c066aaf83 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h9da765b1ac504456\r\n                               at /rustc/1d9c262eea411ec5230f8a4c9ba50b3647064da4/library/alloc/src/boxed.rs:1861:9\r\n  38:     0x7f4c066aaf83 - std::sys::unix::thread::Thread::new::thread_start::hb3629e14c6b629e3\r\n                               at /rustc/1d9c262eea411ec5230f8a4c9ba50b3647064da4/library/std/src/sys/unix/thread.rs:108:17\r\n  39:     0x7f4c064835c2 - start_thread\r\n  40:     0x7f4c06508584 - __clone\r\n  41:                0x0 - <unknown>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95453/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95453/timeline", "performed_via_github_app": null, "state_reason": null}