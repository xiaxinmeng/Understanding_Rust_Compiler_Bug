{"url": "https://api.github.com/repos/rust-lang/rust/issues/84700", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84700/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84700/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84700/events", "html_url": "https://github.com/rust-lang/rust/issues/84700", "id": 871133989, "node_id": "MDU6SXNzdWU4NzExMzM5ODk=", "number": 84700, "title": "Diagnostics: Suggest Unit Variant Enum in match", "user": {"login": "jamesmunns", "id": 2097964, "node_id": "MDQ6VXNlcjIwOTc5NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2097964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesmunns", "html_url": "https://github.com/jamesmunns", "followers_url": "https://api.github.com/users/jamesmunns/followers", "following_url": "https://api.github.com/users/jamesmunns/following{/other_user}", "gists_url": "https://api.github.com/users/jamesmunns/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesmunns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesmunns/subscriptions", "organizations_url": "https://api.github.com/users/jamesmunns/orgs", "repos_url": "https://api.github.com/users/jamesmunns/repos", "events_url": "https://api.github.com/users/jamesmunns/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesmunns/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "closed", "locked": false, "assignee": {"login": "ABouttefeux", "id": 77335613, "node_id": "MDQ6VXNlcjc3MzM1NjEz", "avatar_url": "https://avatars.githubusercontent.com/u/77335613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ABouttefeux", "html_url": "https://github.com/ABouttefeux", "followers_url": "https://api.github.com/users/ABouttefeux/followers", "following_url": "https://api.github.com/users/ABouttefeux/following{/other_user}", "gists_url": "https://api.github.com/users/ABouttefeux/gists{/gist_id}", "starred_url": "https://api.github.com/users/ABouttefeux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ABouttefeux/subscriptions", "organizations_url": "https://api.github.com/users/ABouttefeux/orgs", "repos_url": "https://api.github.com/users/ABouttefeux/repos", "events_url": "https://api.github.com/users/ABouttefeux/events{/privacy}", "received_events_url": "https://api.github.com/users/ABouttefeux/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ABouttefeux", "id": 77335613, "node_id": "MDQ6VXNlcjc3MzM1NjEz", "avatar_url": "https://avatars.githubusercontent.com/u/77335613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ABouttefeux", "html_url": "https://github.com/ABouttefeux", "followers_url": "https://api.github.com/users/ABouttefeux/followers", "following_url": "https://api.github.com/users/ABouttefeux/following{/other_user}", "gists_url": "https://api.github.com/users/ABouttefeux/gists{/gist_id}", "starred_url": "https://api.github.com/users/ABouttefeux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ABouttefeux/subscriptions", "organizations_url": "https://api.github.com/users/ABouttefeux/orgs", "repos_url": "https://api.github.com/users/ABouttefeux/repos", "events_url": "https://api.github.com/users/ABouttefeux/events{/privacy}", "received_events_url": "https://api.github.com/users/ABouttefeux/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2021-04-29T15:18:58Z", "updated_at": "2021-05-03T15:54:37Z", "closed_at": "2021-05-03T02:30:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur. \r\n-->\r\n\r\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=5a6b1a3497842e4ddc883b2345febd8f\r\n\r\n```rust\r\n#[derive(PartialEq, Debug)]\r\nenum FarmAnimal {\r\n    Worm,\r\n    Cow,\r\n    Bull,\r\n    Chicken { num_eggs: usize },\r\n    Dog { name: String },\r\n}\r\n\r\nfn what_does_the_animal_say(animal: &FarmAnimal) {\r\n\r\n    /* TODO: fill in the match statement below to make this code compile */\r\n    \r\n    let noise = match animal {\r\n        FarmAnimal::Cow(_) => \"moo\".to_string(),\r\n        // /* Chicken      */ => \"cluck, cluck!\".to_string(),\r\n        // /* Dog          */  => format!(\"woof, woof! I am {}!\", name),\r\n        // /* Worm\u2013 or all silent animals?*/ => \"-- (silence)\".to_string(),\r\n        _ => todo!()\r\n    };\r\n    \r\n    /* Bonus task: Give Dogs named Lassie a different output */\r\n    \r\n    println!(\"{:?} says: {:?}\", animal, noise);\r\n}\r\n\r\nfn main() {\r\n    what_does_the_animal_say(\r\n        &FarmAnimal::Dog {\r\n            name: \"Lassie\".to_string()\r\n    });\r\n    what_does_the_animal_say(&FarmAnimal::Cow);\r\n    what_does_the_animal_say(&FarmAnimal::Bull);\r\n    what_does_the_animal_say(&FarmAnimal::Chicken{num_eggs: 3});\r\n    what_does_the_animal_say(&FarmAnimal::Worm);\r\n\r\n    /*\r\n    Output should be:\r\n    \r\n    Dog { name: \"Lassie\" } says: \"woof, woof! I am Lassie!\"\r\n    Cow says: \"moo\"\r\n    Bull says: \"moo\"\r\n    Chicken { num_eggs: 3 } says: \"cluck, cluck!\"\r\n    Worm says: \"-- (silence)\"\r\n    \r\n    */\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0532]: expected tuple struct or tuple variant, found unit variant `FarmAnimal::Cow`\r\n  --> src/main.rs:15:9\r\n   |\r\n15 |         FarmAnimal::Cow(_) => \"moo\".to_string(),\r\n   |         ^^^^^^^^^^^^^^^ not a tuple struct or tuple variant\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0532`.\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nIdeally the output should look like:\r\n\r\nI'd like it to say \"try to use a ~~tuple~~ unit variant like \"FarmAnimal::Cow\" instead\".\r\n\r\nFor example, here's what happens if you use Tuple syntax instead of Struct syntax:\r\n\r\n```\r\nerror[E0532]: expected tuple struct or tuple variant, found struct variant `FarmAnimal::Chicken`\r\n  --> src/main.rs:16:9\r\n   |\r\n6  |     Chicken { num_eggs: usize },\r\n   |     --------------------------- `FarmAnimal::Chicken` defined here\r\n...\r\n16 |         FarmAnimal::Chicken(x)  => \"cluck, cluck!\".to_string(),\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^ help: use struct pattern syntax instead: `FarmAnimal::Chicken { num_eggs }`\r\n\r\nerror: aborting due to 2 previous errors\r\n```\r\n\r\nSo I'd like the new diagnostic to look something like:\r\n\r\n```\r\nerror[Exxxx]: expected tuple struct or tuple variant, found unit variant `FarmAnimal::Cow`\r\n  --> src/main.rs:16:9\r\n   |\r\n6  |     Cow,\r\n   |     --- `FarmAnimal::Cow` defined here\r\n...\r\n16 |         FarmAnimal::Cow(_)  => \"moo\".to_string(),\r\n   |         ^^^^^^^^^^^^^^^^^^ help: use unit pattern syntax instead: `FarmAnimal::Cow`\r\n```\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"ABouttefeux\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84700/timeline", "performed_via_github_app": null, "state_reason": "completed"}