{"url": "https://api.github.com/repos/rust-lang/rust/issues/78436", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78436/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78436/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78436/events", "html_url": "https://github.com/rust-lang/rust/issues/78436", "id": 730386164, "node_id": "MDU6SXNzdWU3MzAzODYxNjQ=", "number": 78436, "title": "Miri engine logging: strange log tail after interpreter failure", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1244499056, "node_id": "MDU6TGFiZWwxMjQ0NDk5MDU2", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-miri", "name": "A-miri", "color": "f7e101", "default": false, "description": "Area: The miri tool"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-10-27T11:59:33Z", "updated_at": "2020-10-27T16:07:23Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "When the interpreter quits with an error, there are some strange messages being printed after the error:\r\n```\r\n2:rustc\u251c\u250020ms  INFO rustc_mir::interpret::step StorageLive(_10)\r\n2:rustc\u251c\u250020ms  INFO rustc_mir::interpret::step _10 = &mut (*_2)\r\n2:rustc\u251c\u250020ms  INFO rustc_mir::interpret::step Retag(_10)\r\nerror: Undefined Behavior: trying to reborrow for Unique, but parent tag <3901> does not have an appropriate item in the borrow stack\r\n  --> tests/run-pass/box.rs:18:6\r\n   |\r\n18 |     *(&mut *r) = 17;\r\n   |      ^^^^^^^^^ trying to reborrow for Unique, but parent tag <3901> does not have an appropriate item in the borrow stack\r\n   |\r\n   = help: this indicates a potential bug in the program: it performed an invalid operation, but the rules it violated are still experimental\r\n   = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\r\n           \r\n   = note: inside `into_raw` at tests/run-pass/box.rs:18:6\r\nnote: inside `main` at tests/run-pass/box.rs:4:5\r\n  --> tests/run-pass/box.rs:4:5\r\n   |\r\n4  |     into_raw();\r\n   |     ^^^^^^^^^^\r\n   = note: inside `<fn() as std::ops::FnOnce<()>>::call_once - shim(fn())` at /home/r/.rustup/toolchains/miri/lib/rustlib/src/rust/library/core/src/ops/function.rs:227:5\r\n   = note: inside `std::sys_common::backtrace::__rust_begin_short_backtrace::<fn(), ()>` at /home/r/.rustup/toolchains/miri/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:125:18\r\n   = note: inside closure at /home/r/.rustup/toolchains/miri/lib/rustlib/src/rust/library/std/src/rt.rs:66:18\r\n   = note: inside `std::ops::function::impls::<impl std::ops::FnOnce<()> for &dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>::call_once` at /home/r/.rustup/toolchains/miri/lib/rustlib/src/rust/library/core/src/ops/function.rs:259:13\r\n   = note: inside `std::panicking::try::do_call::<&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe, i32>` at /home/r/.rustup/toolchains/miri/lib/rustlib/src/rust/library/std/src/panicking.rs:381:40\r\n   = note: inside `std::panicking::try::<i32, &dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>` at /home/r/.rustup/toolchains/miri/lib/rustlib/src/rust/library/std/src/panicking.rs:345:19\r\n   = note: inside `std::panic::catch_unwind::<&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe, i32>` at /home/r/.rustup/toolchains/miri/lib/rustlib/src/rust/library/std/src/panic.rs:382:14\r\n   = note: inside `std::rt::lang_start_internal` at /home/r/.rustup/toolchains/miri/lib/rustlib/src/rust/library/std/src/rt.rs:51:25\r\n   = note: inside `std::rt::lang_start::<()>` at /home/r/.rustup/toolchains/miri/lib/rustlib/src/rust/library/std/src/rt.rs:65:5\r\n\r\n2:rustc\u2502\u250c\u2518rustc_mir::interpret::eval_context::frame std::rt::lang_start::<()>\r\n2:rustc\u251c\u2518rustc_mir::interpret::eval_context::frame into_raw\r\n2:rustc\u2502\u250c\u2518rustc_mir::interpret::eval_context::frame std::rt::lang_start_internal\r\n2:rustc\u251c\u2518rustc_mir::interpret::eval_context::frame into_raw\r\n2:rustc\u2502\u250c\u2518rustc_mir::interpret::eval_context::frame std::panic::catch_unwind::<&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe, i32>\r\n2:rustc\u251c\u2518rustc_mir::interpret::eval_context::frame into_raw\r\n2:rustc\u2502\u250c\u2518rustc_mir::interpret::eval_context::frame std::panicking::try::<i32, &dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>\r\n2:rustc\u251c\u2518rustc_mir::interpret::eval_context::frame into_raw\r\n2:rustc\u2502\u250c\u2518rustc_mir::interpret::eval_context::frame std::panicking::try::do_call::<&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe, i32>\r\n2:rustc\u251c\u2518rustc_mir::interpret::eval_context::frame into_raw\r\n2:rustc\u2502\u250c\u2518rustc_mir::interpret::eval_context::frame std::ops::function::impls::<impl std::ops::FnOnce<()> for &dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>::call_once\r\n2:rustc\u251c\u2518rustc_mir::interpret::eval_context::frame into_raw\r\n2:rustc\u2502\u250c\u2518rustc_mir::interpret::eval_context::frame std::rt::lang_start::<()>::{closure#0}\r\n2:rustc\u251c\u2518rustc_mir::interpret::eval_context::frame into_raw\r\n2:rustc\u2502\u250c\u2518rustc_mir::interpret::eval_context::frame std::sys_common::backtrace::__rust_begin_short_backtrace::<fn(), ()>\r\n2:rustc\u251c\u2518rustc_mir::interpret::eval_context::frame into_raw\r\n2:rustc\u2502\u250c\u2518rustc_mir::interpret::eval_context::frame <fn() as std::ops::FnOnce<()>>::call_once - shim(fn())\r\n2:rustc\u251c\u2518rustc_mir::interpret::eval_context::frame into_raw\r\n2:rustc\u2502\u250c\u2518rustc_mir::interpret::eval_context::frame main\r\n2:rustc\u251c\u2518rustc_mir::interpret::eval_context::frame into_raw\r\n2:rustcrustc_mir::interpret::eval_context::frame into_raw\r\nerror: aborting due to previous error\r\n```\r\nLikely this is because the remaining stackframes are dropped when the interpreter is torn down, but those frames are not actually popped so this should not be logged. Also indentation seems to be completely broken at this point. \r\n\r\nCc @oli-obk ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78436/timeline", "performed_via_github_app": null, "state_reason": null}