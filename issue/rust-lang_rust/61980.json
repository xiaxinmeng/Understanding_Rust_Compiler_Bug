{"url": "https://api.github.com/repos/rust-lang/rust/issues/61980", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61980/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61980/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61980/events", "html_url": "https://github.com/rust-lang/rust/issues/61980", "id": 458301884, "node_id": "MDU6SXNzdWU0NTgzMDE4ODQ=", "number": 61980, "title": "Convert unsized slice to boxed slice", "user": {"login": "Coder-256", "id": 10134823, "node_id": "MDQ6VXNlcjEwMTM0ODIz", "avatar_url": "https://avatars.githubusercontent.com/u/10134823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Coder-256", "html_url": "https://github.com/Coder-256", "followers_url": "https://api.github.com/users/Coder-256/followers", "following_url": "https://api.github.com/users/Coder-256/following{/other_user}", "gists_url": "https://api.github.com/users/Coder-256/gists{/gist_id}", "starred_url": "https://api.github.com/users/Coder-256/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Coder-256/subscriptions", "organizations_url": "https://api.github.com/users/Coder-256/orgs", "repos_url": "https://api.github.com/users/Coder-256/repos", "events_url": "https://api.github.com/users/Coder-256/events{/privacy}", "received_events_url": "https://api.github.com/users/Coder-256/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-20T02:16:34Z", "updated_at": "2019-06-20T03:58:23Z", "closed_at": "2019-06-20T03:58:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, AFAIK there is no easy way to clone dynamically sized slices into boxed slices (correct me if I'm wrong). Here are the only two ways I've found, both of which are ugly and indirect:\r\n\r\n```rust\r\nlet array: [usize; 4] = [1, 2, 3, 4];\r\nlet i = 2; // A variable set at runtime\r\nlet slice: &[usize] = &array[1..=i];\r\n\r\nlet boxed_array: Box<[usize]> = Box::new(array);\r\n\r\n// error[E0277]: the size for values of type `[usize]` cannot be known at compilation time\r\n// let boxed_slice: Box<[usize]> = Box::new(*slice);\r\n\r\nlet boxed_slice: Box<[usize]> = slice.to_vec().into_boxed_slice();\r\nlet boxed_slice2: Box<[usize]> = slice.iter().map(|x| *x).collect();\r\n```\r\n\r\nConverting into a `Vec` makes no sense since the slice is immutable and will not grow, and manually iterating over the slice and collecting into a box seems needlessly complex. Neither way makes sense, and it is unclear which one is better (or whether a better way exists).\r\n\r\nEssentially I think the issue is that `Box::new` does not work with references, which is problematic since dynamically sized types (like `slice` in the example above) cannot be dereferenced. Is this intentional, an oversight, or just a current limitation of dynamically sized types? (or am I missing an easier way to do this?)\r\n\r\n**Edit**: This is on the latest stable (1.35)", "closed_by": {"login": "Coder-256", "id": 10134823, "node_id": "MDQ6VXNlcjEwMTM0ODIz", "avatar_url": "https://avatars.githubusercontent.com/u/10134823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Coder-256", "html_url": "https://github.com/Coder-256", "followers_url": "https://api.github.com/users/Coder-256/followers", "following_url": "https://api.github.com/users/Coder-256/following{/other_user}", "gists_url": "https://api.github.com/users/Coder-256/gists{/gist_id}", "starred_url": "https://api.github.com/users/Coder-256/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Coder-256/subscriptions", "organizations_url": "https://api.github.com/users/Coder-256/orgs", "repos_url": "https://api.github.com/users/Coder-256/repos", "events_url": "https://api.github.com/users/Coder-256/events{/privacy}", "received_events_url": "https://api.github.com/users/Coder-256/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61980/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61980/timeline", "performed_via_github_app": null, "state_reason": "completed"}