{"url": "https://api.github.com/repos/rust-lang/rust/issues/86504", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86504/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86504/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86504/events", "html_url": "https://github.com/rust-lang/rust/issues/86504", "id": 925762918, "node_id": "MDU6SXNzdWU5MjU3NjI5MTg=", "number": 86504, "title": "`cargo doc` failing to document impl for a struct", "user": {"login": "ivan0051", "id": 71198784, "node_id": "MDQ6VXNlcjcxMTk4Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/71198784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan0051", "html_url": "https://github.com/ivan0051", "followers_url": "https://api.github.com/users/ivan0051/followers", "following_url": "https://api.github.com/users/ivan0051/following{/other_user}", "gists_url": "https://api.github.com/users/ivan0051/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan0051/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan0051/subscriptions", "organizations_url": "https://api.github.com/users/ivan0051/orgs", "repos_url": "https://api.github.com/users/ivan0051/repos", "events_url": "https://api.github.com/users/ivan0051/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan0051/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 2352122097, "node_id": "MDU6TGFiZWwyMzUyMTIyMDk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-discussion", "name": "C-discussion", "color": "f5f1fd", "default": false, "description": "Category: Discussion or questions that doesn't represent real issues."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2021-06-21T02:28:30Z", "updated_at": "2021-06-21T04:22:32Z", "closed_at": "2021-06-21T04:12:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nHello, I am now in the process of learning how to use `cargo doc` for documentation, and it all seemed extremely smooth until I was around halfway through documenting my lib.rs file. I cannot think of anything out of place, but I have a struct `pub struct DataRow {}` and three functions in an `impl DataRow {}` block. Running `cargo doc` collects everything else that I am aware of, yet ignores all `DataRow` implementations. I have another struct with essentially the same layout which I can use to compare, and it works perfectly fine.\r\n\r\nWorking struct:\r\n```rust\r\n/// Docs docs docs...\r\npub struct Config {\r\n    pub language: Lang,\r\n    pub filename: String,\r\n}\r\n\r\n/// Otherdocs otherdocs...\r\npub enum Lang {\r\n    EN,\r\n    FR,\r\n}\r\n\r\nimpl Config {\r\n    ...\r\n}\r\n```\r\n\r\nNON-working struct:\r\n```rust\r\n/// A data row object (struct) used to manipulate stored data from file.\r\n/// \r\n/// A `DataRow` has an output function for each available presentation language, as well as a \r\n/// constructor function `new(line: Vec<&str>)`.\r\npub struct DataRow {\r\n    pruid: isize,\r\n    prname: String,\r\n    prname_fr: String,\r\n    date: String,\r\n    numconf: isize,\r\n    numprob: isize,\r\n    numdeaths: isize,\r\n    numtotal: isize,\r\n    numtoday: isize,\r\n    ratetotal: f64,\r\n}\r\n\r\nimpl DataRow {\r\n    ...\r\n}\r\n```\r\n\r\nHonestly, there's no remarkable difference here. They both involve a struct with documentation, and an impl block with no documentation in it. I'd even consider the first struct more likely to have encountered a failure, since there's an enum between it and the implementation block (since I was not sure how hard cargo doc would search for a connection). As you can see, I'm at somewhat of a loss. When I visit the docs web UI, it works perfectly, with nothing strange aside from the missing implementations. Specifically, the entire implementations section is not there.\r\n\r\nI am open to the possibility that this isn't a bug, but it does smell like a bug.\r\n\r\nIMPORTANT NOTE: I am particularly aware of this issue, which seems very similar:  #67904\r\nHowever, I can confirm I am not having the same issue, as far as I am able to see. If this is a bug or anybody can help otherwise, that would be great.\r\n", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86504/timeline", "performed_via_github_app": null, "state_reason": "completed"}