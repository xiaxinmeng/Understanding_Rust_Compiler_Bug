{"url": "https://api.github.com/repos/rust-lang/rust/issues/60961", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/60961/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/60961/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/60961/events", "html_url": "https://github.com/rust-lang/rust/issues/60961", "id": 445816551, "node_id": "MDU6SXNzdWU0NDU4MTY1NTE=", "number": 60961, "title": "Rc::make_mut doesn't clone if there are weak refs", "user": {"login": "avl", "id": 27321, "node_id": "MDQ6VXNlcjI3MzIx", "avatar_url": "https://avatars.githubusercontent.com/u/27321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avl", "html_url": "https://github.com/avl", "followers_url": "https://api.github.com/users/avl/followers", "following_url": "https://api.github.com/users/avl/following{/other_user}", "gists_url": "https://api.github.com/users/avl/gists{/gist_id}", "starred_url": "https://api.github.com/users/avl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avl/subscriptions", "organizations_url": "https://api.github.com/users/avl/orgs", "repos_url": "https://api.github.com/users/avl/repos", "events_url": "https://api.github.com/users/avl/events{/privacy}", "received_events_url": "https://api.github.com/users/avl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-19T12:53:54Z", "updated_at": "2019-06-04T08:32:27Z", "closed_at": "2019-06-04T08:32:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "The docs for Rc::make_mut say:\r\n\r\n> If there are other Rc or Weak pointers to the same value, then make_mut will invoke clone on the inner value to ensure unique ownership. This is also referred to as clone-on-write.\r\n\r\n(See https://doc.rust-lang.org/std/rc/struct.Rc.html#method.make_mut )\r\n\r\nAs I read the above paragraph, the last line of the following program should not print 'None'. In fact, it does print None, at least on stable rust 1.34.2.\r\n\r\n\r\n```rust\r\nuse std::rc::Rc;\r\n\r\n#[derive(Clone,Debug)]\r\nstruct Example {\r\n    value: String\r\n}\r\n\r\npub fn main() {\r\n    let mut strong1 = Rc::new(Example{value:\"First\".to_string()});\r\n    let mut strong2 = strong1.clone();\r\n    let weak2 = Rc::downgrade(&strong2);\r\n    strong2 = Rc::new(Example{value:\"Second\".to_string()}); //Make sure there is one strong and one weak\r\n    println!(\"Strong count: {}\",Rc::strong_count(&strong1));\r\n    println!(\"Weak count: {}\",Rc::weak_count(&strong1));\r\n    let strong1mut = Rc::make_mut(&mut strong1);  //should clone Example, at least according to docs\r\n    strong1mut.value = \"Mutated\".to_string();\r\n    let weak2ref = weak2.upgrade();\r\n    println!(\"Weak: {:?}\",weak2ref); //Should not print None, at least docs seem to imply this\r\n    \r\n}\r\n\r\n```\r\n\r\nI'm not being bit by this, possibly no-one is. Just thought I should report it. \r\n\r\nEdit: The following paragraph didn't make much sense. This is just a doc error. After make_mut has finished, there are no strong refs so the weak refs should just all die anyway. The docs as written don't make sense, the implementation is the only reasonable one.\r\n\r\n~~(If I haven't missed anything, and there actually is a discrepancy between the documentation and the code, what would be the correct solution? Changing the code or the docs?)~~\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/60961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/60961/timeline", "performed_via_github_app": null, "state_reason": "completed"}