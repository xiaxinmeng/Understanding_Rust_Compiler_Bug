{"url": "https://api.github.com/repos/rust-lang/rust/issues/67819", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67819/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67819/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67819/events", "html_url": "https://github.com/rust-lang/rust/issues/67819", "id": 544800195, "node_id": "MDU6SXNzdWU1NDQ4MDAxOTU=", "number": 67819, "title": "Binary size regression on msp430 when using `Cell` with types from external crates.", "user": {"login": "cr1901", "id": 6418027, "node_id": "MDQ6VXNlcjY0MTgwMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/6418027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cr1901", "html_url": "https://github.com/cr1901", "followers_url": "https://api.github.com/users/cr1901/followers", "following_url": "https://api.github.com/users/cr1901/following{/other_user}", "gists_url": "https://api.github.com/users/cr1901/gists{/gist_id}", "starred_url": "https://api.github.com/users/cr1901/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cr1901/subscriptions", "organizations_url": "https://api.github.com/users/cr1901/orgs", "repos_url": "https://api.github.com/users/cr1901/repos", "events_url": "https://api.github.com/users/cr1901/events{/privacy}", "received_events_url": "https://api.github.com/users/cr1901/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 880020421, "node_id": "MDU6TGFiZWw4ODAwMjA0MjE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-embedded", "name": "WG-embedded", "color": "c2e0c6", "default": false, "description": "Of interest to the embedded Working Group"}, {"id": 1049491442, "node_id": "MDU6TGFiZWwxMDQ5NDkxNDQy", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-heavy", "name": "I-heavy", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to binary size of generated code."}, {"id": 4434140250, "node_id": "LA_kwDOAAsO6M8AAAABCEucWg", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-msp430", "name": "O-msp430", "color": "6e6ec0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-03T00:06:51Z", "updated_at": "2022-09-03T03:32:07Z", "closed_at": "2022-09-03T03:32:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Regression found in the compiler\r\n\r\nsearched nightlies: from nightly-2019-03-27 to nightly-2019-09-04\r\nregressed nightly: nightly-2019-07-27\r\nsearched commits: from https://github.com/rust-lang/rust/commit/890881f8f4c77e8670d4b32104c0325fcfefc90f to https://github.com/rust-lang/rust/commit/c43753f910aae000f8bcb0a502407ea332afc74b\r\nregressed commit: https://github.com/rust-lang/rust/commit/c43753f910aae000f8bcb0a502407ea332afc74b\r\nsource code: https://github.com/cr1901/msp430-size\r\n\r\n## Instructions\r\n1. Make sure [xargo](https://github.com/japaric/xargo), [cargo-bisect-rustc](https://github.com/rust-lang/cargo-bisect-rustc), and optionally [just](https://github.com/casey/just) are installed.\r\n2. `git clone https://github.com/cr1901/msp430-size`. Use commit `c32d01b` specifically.\r\n3. Invoke `just bisect`, or alternatively `cargo-bisect-rustc --script=./test-regress.sh --preserve-target --preserve --start=2019-03-27 --end=2019-09-04 --with-src --with-cargo`. The bisector will use `test-regress.sh` to look for size differences between two configurations of the `min.rs` example. Contents of `test-regress.sh` are reproduced below for convenience.\r\n\r\n## Error\r\nThe example `min.rs` in [msp430-size](https://github.com/cr1901/msp430-size) can be built in two configurations:\r\n* One which uses an external crate called [bare_metal](https://github.com/japaric/bare-metal) to provide synchronization primitives.\r\n* The other which implements bare_metal inline in the `min.rs` example.\r\n\r\nBecause LTO is enabled, I would expect both these configurations to optimize down to the same final binary size. However, using an extern bare_metal crate, especially the `CriticalSection` type,\r\ncauses `RefCell` trait objects to be left behind for [`core::result::unwrap_failed()`](https://doc.rust-lang.org/beta/src/core/result.rs.html#1187).\r\n\r\nBecause the panic handler is an [infinite loop](https://github.com/YuhanLiin/panic-msp430/blob/master/src/lib.rs#L15-L23), the formatting code left behind is in fact not used, and I believe the formatting code and `RefCell` panic strings should be optimized away as dead code. _Because msp430 is size-sensitive, the dead code is a bigger deal than compared to most architectures, sometimes doubling small binary sizes!_ See the end of COLLAPSIBLE REGRESSION EXAMPLE.\r\n\r\n<details><summary>COLLAPSIBLE REGRESSION EXAMPLE</summary>\r\n<p>\r\n\r\n```bash\r\nwilliam@xubuntu-dtrain:~/Projects/msp430-size$ rustup toolchain list\r\nnightly-2019-03-27-x86_64-unknown-linux-gnu\r\nnightly-2019-09-04-x86_64-unknown-linux-gnu\r\nnightly-x86_64-unknown-linux-gnu (default)\r\nbisector-nightly-2019-03-27-x86_64-unknown-linux-gnu\r\nbisector-nightly-2019-06-15-x86_64-unknown-linux-gnu\r\nbisector-nightly-2019-07-25-x86_64-unknown-linux-gnu\r\nbisector-nightly-2019-07-26-x86_64-unknown-linux-gnu\r\nbisector-nightly-2019-07-27-x86_64-unknown-linux-gnu\r\nbisector-nightly-2019-07-29-x86_64-unknown-linux-gnu\r\nbisector-nightly-2019-08-03-x86_64-unknown-linux-gnu\r\nbisector-nightly-2019-08-13-x86_64-unknown-linux-gnu\r\nbisector-nightly-2019-08-15-x86_64-unknown-linux-gnu\r\nbisector-nightly-2019-09-04-x86_64-unknown-linux-gnu\r\nci-1a563362865e6051d4c350544131228e8eff5138-x86_64-unknown-linux-gnu\r\nci-4268e7ee22935f086b856ef0063a9e22b49aeddb-x86_64-unknown-linux-gnu\r\nci-890881f8f4c77e8670d4b32104c0325fcfefc90f-x86_64-unknown-linux-gnu\r\nci-c43753f910aae000f8bcb0a502407ea332afc74b-x86_64-unknown-linux-gnu\r\nmsp430-fix\r\nmsp430-test\r\nwilliam@xubuntu-dtrain:~/Projects/msp430-size$ rustup override set ci-c43753f910aae000f8bcb0a502407ea332afc74b-x86_64-unknown-linux-gnu\r\ninfo: override toolchain for '/home/william/Projects/msp430-size' set to 'ci-c43753f910aae000f8bcb0a502407ea332afc74b-x86_64-unknown-linux-gnu'\r\nwilliam@xubuntu-dtrain:~/Projects/msp430-size$ xargo clean\r\nwilliam@xubuntu-dtrain:~/Projects/msp430-size$ xargo build --manifest-path=take-api/Cargo.toml --release --target=msp430-none-elf --example min --features use-bare-metal\r\n   Compiling semver-parser v0.7.0\r\n   Compiling autocfg v0.1.7\r\n   Compiling proc-macro2 v0.4.30\r\n   Compiling unicode-xid v0.1.0\r\n   Compiling libc v0.2.66\r\n   Compiling rand_core v0.4.2\r\n   Compiling syn v0.15.44\r\n   Compiling msp430-rt v0.2.0\r\n   Compiling msp430g2553 v0.2.0 (https://github.com/cr1901/msp430g2553?branch=rt-up#345b518a)\r\n   Compiling r0 v0.2.2\r\n   Compiling vcell v0.1.2\r\n   Compiling rand_core v0.3.1\r\n   Compiling rand_jitter v0.1.4\r\n   Compiling rand_xorshift v0.1.1\r\n   Compiling rand_hc v0.1.0\r\n   Compiling rand_isaac v0.1.1\r\n   Compiling semver v0.9.0\r\n   Compiling rand_chacha v0.1.1\r\n   Compiling rand_pcg v0.1.2\r\n   Compiling rand v0.6.5\r\n   Compiling rustc_version v0.2.3\r\n   Compiling bare-metal v0.2.5\r\n   Compiling msp430 v0.2.0\r\n   Compiling panic-msp430 v0.2.0\r\n   Compiling quote v0.6.13\r\n   Compiling msp430-rt-macros v0.2.0\r\n   Compiling take-api v0.1.0 (/home/william/Projects/msp430-size/take-api)\r\n    Finished release [optimized] target(s) in 16.89s\r\nwilliam@xubuntu-dtrain:~/Projects/msp430-size$ xargo build --manifest-path=take-api/Cargo.toml --release --target=msp430-none-elf --example min\r\n   Compiling msp430-rt v0.2.0\r\n   Compiling msp430g2553 v0.2.0 (https://github.com/cr1901/msp430g2553?branch=rt-up#345b518a)\r\n   Compiling take-api v0.1.0 (/home/william/Projects/msp430-size/take-api)\r\n    Finished release [optimized] target(s) in 1.99s\r\nwilliam@xubuntu-dtrain:~/Projects/msp430-size$ msp430-elf-size -A target/msp430-none-elf/release/examples/min-fe04a12c0ec047ac\r\ntarget/msp430-none-elf/release/examples/min-fe04a12c0ec047ac  :\r\nsection              size    addr\r\n.vector_table          32   65504\r\n.text                 234   49152\r\n.rodata                42   49386\r\n.bss                    4     512\r\n.data                   0     516\r\n.MSP430.attributes     23       0\r\nTotal                 335\r\n\r\n\r\nwilliam@xubuntu-dtrain:~/Projects/msp430-size$ msp430-elf-size -A target/msp430-none-elf/release/examples/min-ff1850411f698246\r\ntarget/msp430-none-elf/release/examples/min-ff1850411f698246  :\r\nsection              size    addr\r\n.vector_table          32   65504\r\n.text                 100   49152\r\n.rodata                 0   49252\r\n.bss                    4     512\r\n.data                   0     516\r\n.MSP430.attributes     23       0\r\nTotal                 159\r\n\r\n\r\nwilliam@xubuntu-dtrain:~/Projects/msp430-size$\r\n```\r\n</p></details>\r\n\r\n## Other Context\r\nThis bug is still present as of `rustc 1.42.0-nightly (1ed41b072 2020-01-01)`.\r\n\r\n### Inline contents of `test-regress.sh`:\r\nThe `test-regress.sh` script compiles the `min.rs` example in both possible configurations- inline bare_metal and external bare_metal- and compares the output binary sizes. A difference in binary size between the two configurations is considered a failure.\r\n\r\n```\r\n#!/bin/sh\r\nNOBM_FILE=`mktemp`\r\nBM_FILE=`mktemp`\r\n\r\nxargo build --manifest-path=take-api/Cargo.toml --release --target=msp430-none-elf --example min --features use-bare-metal\r\nmsp430-elf-size -A $CARGO_TARGET_DIR/msp430-none-elf/release/examples/min > $BM_FILE\r\n\r\nxargo build --manifest-path=take-api/Cargo.toml --release --target=msp430-none-elf --example min\r\nmsp430-elf-size -A $CARGO_TARGET_DIR/msp430-none-elf/release/examples/min > $NOBM_FILE\r\n\r\ndiff -q $NOBM_FILE $BM_FILE\r\nRV=$?\r\n\r\nrm $NOBM_FILE $BM_FILE\r\n\r\nexit $RV\r\n```", "closed_by": {"login": "cr1901", "id": 6418027, "node_id": "MDQ6VXNlcjY0MTgwMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/6418027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cr1901", "html_url": "https://github.com/cr1901", "followers_url": "https://api.github.com/users/cr1901/followers", "following_url": "https://api.github.com/users/cr1901/following{/other_user}", "gists_url": "https://api.github.com/users/cr1901/gists{/gist_id}", "starred_url": "https://api.github.com/users/cr1901/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cr1901/subscriptions", "organizations_url": "https://api.github.com/users/cr1901/orgs", "repos_url": "https://api.github.com/users/cr1901/repos", "events_url": "https://api.github.com/users/cr1901/events{/privacy}", "received_events_url": "https://api.github.com/users/cr1901/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67819/timeline", "performed_via_github_app": null, "state_reason": "completed"}