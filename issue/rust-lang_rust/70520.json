{"url": "https://api.github.com/repos/rust-lang/rust/issues/70520", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70520/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70520/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70520/events", "html_url": "https://github.com/rust-lang/rust/issues/70520", "id": 589704862, "node_id": "MDU6SXNzdWU1ODk3MDQ4NjI=", "number": 70520, "title": "rustc_mir::shim misuses `ParamEnv`s.", "user": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-29T03:05:13Z", "updated_at": "2020-03-29T12:26:23Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "(This example is about `CloneShim`, but `DropGlue` has a similar issue)\r\n\r\nIn this snippet, `param_env` is obtained from `tcx.param_env(def_id)` and used twice with `self_ty`:\r\n1. for `is_copy_modulo_regions`\r\n    * if `self_ty` doesn't involve type parameters, `param_env` doesn't matter, but if it does, they could be from anywhere (e.g. caller of `clone`, via MIR inliner), so the `param_env` being that of `Clone::clone` itself is not useful at all (all it contains is `Self: Clone`)\r\n    * to get the right `ParamEnv`, the `mir_shims` query would need to take `ParamEnvAnd<InstanceDef>` instead of just `InstanceDef` (but we might not need this)\r\n    * however it's a waste to generate one shim for every `Copy` type, we should instead do what `DropShim` does and have `Option<Ty>` in `CloneShim`, or split out of a `CloneByCopyShim`\r\n2. for evaluating an array length\r\n    * the length (a `ty::Const`) is converted to `u64` only to be converted back to `ty::Const`, which is unnecessary and we could skip it entirely\r\n\r\nhttps://github.com/rust-lang/rust/blob/77621317d643cc5d13da60b26ab68b057668e688/src/librustc_mir/shim.rs#L330-L343", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70520/timeline", "performed_via_github_app": null, "state_reason": null}