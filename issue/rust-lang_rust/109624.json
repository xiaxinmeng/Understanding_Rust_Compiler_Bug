{"url": "https://api.github.com/repos/rust-lang/rust/issues/109624", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/109624/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/109624/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/109624/events", "html_url": "https://github.com/rust-lang/rust/issues/109624", "id": 1640770404, "node_id": "I_kwDOAAsO6M5hzCtk", "number": 109624, "title": "llvm-tblgen Segmentation fault in CI on dist-aarch64-apple", "user": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 371266501, "node_id": "MDU6TGFiZWwzNzEyNjY1MDE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-spurious", "name": "A-spurious", "color": "f7e101", "default": false, "description": "Area: Spurious failures in builds (spuriously == for no apparent reason)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-03-26T04:50:04Z", "updated_at": "2023-04-05T17:23:22Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Two independent PRs have recently failed with a segmentation fault in llvm-tblgen on dist-aarch64-apple.\r\n\r\n* Mar 20, 2023, 5:37am PDT https://github.com/rust-lang/rust/pull/109383#issuecomment-1476152601\r\n* Mar 25, 2023, 9:26pm PDT https://github.com/rust-lang/rust/pull/106428#issuecomment-1483991513\r\n\r\n```\r\nPLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.\r\n[ 16%] Building WebAssemblyGenDisassemblerTables.inc...\r\nStack dump:\r\n0.\tProgram arguments: ../../../bin/llvm-tblgen -gen-emitter -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/RISCV -I/Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/include -I/Users/runner/work/rust/rust/src/llvm-project/llvm/include -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target -no-warn-on-unused-template-args /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/RISCV/RISCV.td --write-if-changed -o /Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/lib/Target/RISCV/RISCVGenMCCodeEmitter.inc\r\nStack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):\r\n0  llvm-tblgen              0x000000010eac46ca llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 42\r\n1  llvm-tblgen              0x000000010eac3868 llvm::sys::RunSignalHandlers() + 248\r\n2  llvm-tblgen              0x000000010eac4d50 SignalHandler(int) + 288\r\n3  libsystem_platform.dylib 0x00007ff801d59dfd _sigtramp + 29\r\n4  libsystem_platform.dylib 0x00007f8bd57055c0 _sigtramp + 18446743609108248544\r\n5  llvm-tblgen              0x000000010ead7e0c llvm::TypedInit::getCastTo(llvm::RecTy*) const + 28\r\n6  llvm-tblgen              0x000000010eadbcf2 llvm::RecordVal::setValue(llvm::Init*) + 66\r\n[ 16%] Building WebAssemblyGenFastISel.inc...\r\n7  llvm-tblgen              0x000000010ead98d3 llvm::Record::resolveReferences(llvm::Resolver&, llvm::RecordVal const*) + 147\r\n8  llvm-tblgen              0x000000010ead9ccf llvm::Record::resolveReferences(llvm::Init*) + 95\r\n9  llvm-tblgen              0x000000010eaf0a67 llvm::TGParser::addDefOne(std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>) + 199\r\n10 llvm-tblgen              0x000000010eaf01d2 llvm::TGParser::addEntry(llvm::RecordsEntry) + 290\r\n11 llvm-tblgen              0x000000010eaff8dd llvm::TGParser::ParseDefm(llvm::MultiClass*) + 3997\r\n12 llvm-tblgen              0x000000010eafde27 llvm::TGParser::ParseTopLevelLet(llvm::MultiClass*) + 1111\r\n13 llvm-tblgen              0x000000010eafde27 llvm::TGParser::ParseTopLevelLet(llvm::MultiClass*) + 1111\r\n14 llvm-tblgen              0x000000010eafde27 llvm::TGParser::ParseTopLevelLet(llvm::MultiClass*) + 1111\r\n15 llvm-tblgen              0x000000010eaffb02 llvm::TGParser::ParseFile() + 82\r\n16 llvm-tblgen              0x000000010eaca221 llvm::TableGenMain(char const*, bool (*)(llvm::raw_ostream&, llvm::RecordKeeper&)) + 721\r\n17 llvm-tblgen              0x000000010ea61d19 main + 137\r\n18 dyld                     0x00000001184be52e start + 462\r\n/bin/sh: line 1: 92162 Segmentation fault: 11  ../../../bin/llvm-tblgen -gen-emitter -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/RISCV -I/Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/include -I/Users/runner/work/rust/rust/src/llvm-project/llvm/include -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target -no-warn-on-unused-template-args /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/RISCV/RISCV.td --write-if-changed -o /Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/lib/Target/RISCV/RISCVGenMCCodeEmitter.inc\r\nmake[2]: *** [lib/Target/RISCV/RISCVGenMCCodeEmitter.inc] Error 139\r\nmake[2]: *** Waiting for unfinished jobs....\r\nPLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.\r\nStack dump:\r\n0.\tProgram arguments: ../../../bin/llvm-tblgen -gen-exegesis -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/AArch64 -I/Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/include -I/Users/runner/work/rust/rust/src/llvm-project/llvm/include -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target -no-warn-on-unused-template-args /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/AArch64/AArch64.td --write-if-changed -o /Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/lib/Target/AArch64/AArch64GenExegesis.inc\r\n[ 16%] Building WebAssemblyGenInstrInfo.inc...\r\nStack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):\r\n0  llvm-tblgen              0x000000010c6c46ca llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 42\r\n1  llvm-tblgen              0x000000010c6c3868 llvm::sys::RunSignalHandlers() + 248\r\n2  llvm-tblgen              0x000000010c6c4d50 SignalHandler(int) + 288\r\n3  libsystem_platform.dylib 0x00007ff801d59dfd _sigtramp + 29\r\n4  libsystem_platform.dylib 0x00007fc4d8b09010 _sigtramp + 18446743853975925296\r\n5  libsystem_c.dylib        0x00007ff801c8fd24 abort + 123\r\n[ 16%] Building SystemZGenMCCodeEmitter.inc...\r\n6  libsystem_malloc.dylib   0x00007ff801b6d357 has_default_zone0 + 0\r\n7  libsystem_malloc.dylib   0x00007ff801b7052b malloc_report + 151\r\n8  llvm-tblgen              0x000000010c4f3da9 llvm::Record::~Record() + 121\r\n9  llvm-tblgen              0x000000010c6e5e9f std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, void*>*) + 63\r\n10 llvm-tblgen              0x000000010c6e5e86 std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, void*>*) + 38\r\n11 llvm-tblgen              0x000000010c6e5e86 std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, void*>*) + 38\r\n12 llvm-tblgen              0x000000010c6e5e86 std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, void*>*) + 38\r\n13 llvm-tblgen              0x000000010c6e5e7a std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, void*>*) + 26\r\n14 llvm-tblgen              0x000000010c6e5e7a std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, void*>*) + 26\r\n[ 16%] Building SystemZGenRegisterInfo.inc...\r\n15 llvm-tblgen              0x000000010c6e5e7a std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, void*>*) + 26\r\n16 llvm-tblgen              0x000000010c6e5e7a std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, void*>*) + 26\r\n17 llvm-tblgen              0x000000010c6e5e7a std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, void*>*) + 26\r\n18 llvm-tblgen              0x000000010c6e5e7a std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, void*>*) + 26\r\n19 llvm-tblgen              0x000000010c6e5e7a std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, void*>*) + 26\r\n20 llvm-tblgen              0x000000010c6e5e7a std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, void*>*) + 26\r\n21 llvm-tblgen              0x000000010c6e5e86 std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, void*>*) + 38\r\n22 llvm-tblgen              0x000000010c6e5e7a std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, void*>*) + 26\r\n23 llvm-tblgen              0x000000010c6e5e7a std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, void*>*) + 26\r\n24 llvm-tblgen              0x000000010c6e5e7a std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, void*>*) + 26\r\n25 llvm-tblgen              0x000000010c6e5e7a std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, void*>*) + 26\r\n26 llvm-tblgen              0x000000010c6e5e7a std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>>>::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<llvm::Record, std::__1::default_delete<llvm::Record>>>, void*>*) + 26\r\n27 llvm-tblgen              0x000000010c6de66e llvm::RecordKeeper::~RecordKeeper() + 190\r\n28 llvm-tblgen              0x000000010c6cad63 llvm::TableGenMain(char const*, bool (*)(llvm::raw_ostream&, llvm::RecordKeeper&)) + 3603\r\n29 llvm-tblgen              0x000000010c661d19 main + 137\r\n30 dyld                     0x000000011857852e start + 462\r\n/bin/sh: line 1: 92183 Abort trap: 6           ../../../bin/llvm-tblgen -gen-exegesis -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/AArch64 -I/Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/include -I/Users/runner/work/rust/rust/src/llvm-project/llvm/include -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target -no-warn-on-unused-template-args /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/AArch64/AArch64.td --write-if-changed -o /Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/lib/Target/AArch64/AArch64GenExegesis.inc\r\nmake[2]: *** [lib/Target/AArch64/AArch64GenExegesis.inc] Error 134\r\nmake[2]: *** Deleting file `lib/Target/AArch64/AArch64GenExegesis.inc'\r\nmake[2]: *** Waiting for unfinished jobs....\r\nmake[1]: *** [lib/Target/AArch64/CMakeFiles/AArch64CommonTableGen.dir/all] Error 2\r\n[ 16%] Building SystemZGenSubtargetInfo.inc...\r\nmake[1]: *** Waiting for unfinished jobs....\r\n[ 16%] Building ARMGenSystemRegister.inc...\r\n[ 16%] Building WebAssemblyGenMCCodeEmitter.inc...\r\n[ 16%] Building WebAssemblyGenRegisterInfo.inc...\r\n[ 16%] Building WebAssemblyGenSubtargetInfo.inc...\r\n[ 16%] Built target WebAssemblyCommonTableGen\r\n[ 16%] Built target ARMCommonTableGen\r\nPLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.\r\nStack dump:\r\n0.\tProgram arguments: ../../../bin/llvm-tblgen -gen-instr-info -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/RISCV -I/Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/include -I/Users/runner/work/rust/rust/src/llvm-project/llvm/include -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target -no-warn-on-unused-template-args /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/RISCV/RISCV.td --write-if-changed -o /Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/lib/Target/RISCV/RISCVGenInstrInfo.inc\r\nStack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):\r\n0  llvm-tblgen              0x00000001038106ca llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 42\r\n1  llvm-tblgen              0x000000010380f868 llvm::sys::RunSignalHandlers() + 248\r\n2  llvm-tblgen              0x0000000103810d50 SignalHandler(int) + 288\r\n3  libsystem_platform.dylib 0x00007ff801d59dfd _sigtramp + 29\r\n4  libsystem_platform.dylib 0x0000000000000048 _sigtramp + 18446603370550157928\r\n5  llvm-tblgen              0x00000001035f278c llvm::TypeInfer::MergeInTypeInfo(llvm::TypeSetByHwMode&, llvm::TypeSetByHwMode const&) + 44\r\n6  llvm-tblgen              0x00000001035fe3a5 llvm::TreePatternNode::UpdateNodeType(unsigned int, llvm::ValueTypeByHwMode, llvm::TreePattern&) + 405\r\n7  llvm-tblgen              0x00000001035fe82a llvm::TreePatternNode::UpdateNodeTypeFromInst(unsigned int, llvm::Record*, llvm::TreePattern&) + 186\r\n8  llvm-tblgen              0x0000000103603e28 llvm::TreePatternNode::ApplyTypeConstraints(llvm::TreePattern&, bool) + 6696\r\n9  llvm-tblgen              0x0000000103606cde llvm::TreePattern::InferAllTypes(llvm::StringMap<llvm::SmallVector<llvm::TreePatternNode*, 1u>, llvm::MallocAllocator> const*) + 142\r\n10 llvm-tblgen              0x00000001036103bd llvm::CodeGenDAGPatterns::ParseOnePattern(llvm::Record*, llvm::TreePattern&, llvm::TreePattern&, std::__1::vector<llvm::Record*, std::__1::allocator<llvm::Record*>> const&) + 237\r\n11 llvm-tblgen              0x000000010360a964 llvm::CodeGenDAGPatterns::ParsePatterns() + 964\r\n12 llvm-tblgen              0x0000000103607b8d llvm::CodeGenDAGPatterns::CodeGenDAGPatterns(llvm::RecordKeeper&, std::__1::function<void (llvm::TreePattern*)>) + 909\r\n13 llvm-tblgen              0x00000001037226cf llvm::EmitInstrInfo(llvm::RecordKeeper&, llvm::raw_ostream&) + 95\r\n14 llvm-tblgen              0x00000001037adde2 (anonymous namespace)::LLVMTableGenMain(llvm::raw_ostream&, llvm::RecordKeeper&) + 146\r\n15 llvm-tblgen              0x00000001038162dc llvm::TableGenMain(char const*, bool (*)(llvm::raw_ostream&, llvm::RecordKeeper&)) + 908\r\n16 llvm-tblgen              0x00000001037add19 main + 137\r\n17 dyld                     0x000000011184652e start + 462\r\n/bin/sh: line 1: 92142 Segmentation fault: 11  ../../../bin/llvm-tblgen -gen-instr-info -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/RISCV -I/Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/include -I/Users/runner/work/rust/rust/src/llvm-project/llvm/include -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target -no-warn-on-unused-template-args /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/RISCV/RISCV.td --write-if-changed -o /Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/lib/Target/RISCV/RISCVGenInstrInfo.inc\r\nmake[2]: *** [lib/Target/RISCV/RISCVGenInstrInfo.inc] Error 139\r\n[ 16%] Built target SystemZCommonTableGen\r\nPLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.\r\nStack dump:\r\n0.\tProgram arguments: ../../../bin/llvm-tblgen -gen-global-isel -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/RISCV -I/Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/include -I/Users/runner/work/rust/rust/src/llvm-project/llvm/include -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target -no-warn-on-unused-template-args /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/RISCV/RISCV.td --write-if-changed -o /Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/lib/Target/RISCV/RISCVGenGlobalISel.inc\r\nStack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):\r\n0  llvm-tblgen              0x0000000103fb06ca llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 42\r\n1  llvm-tblgen              0x0000000103faf868 llvm::sys::RunSignalHandlers() + 248\r\n2  llvm-tblgen              0x0000000103fb0d50 SignalHandler(int) + 288\r\n3  libsystem_platform.dylib 0x00007ff801d59dfd _sigtramp + 29\r\n4  libsystem_platform.dylib 0x00007fe197240008 _sigtramp + 18446743977430245928\r\n5  llvm-tblgen              0x0000000103da22d7 llvm::TreePatternNode::NodeHasProperty(llvm::SDNP, llvm::CodeGenDAGPatterns const&) const + 311\r\n6  llvm-tblgen              0x0000000103db5f2d InstAnalyzer::AnalyzeNode(llvm::TreePatternNode const*) + 317\r\n7  llvm-tblgen              0x0000000103db5ee2 InstAnalyzer::AnalyzeNode(llvm::TreePatternNode const*) + 242\r\n8  llvm-tblgen              0x0000000103dabeba llvm::CodeGenDAGPatterns::InferInstructionFlags() + 442\r\n9  llvm-tblgen              0x0000000103da7ba5 llvm::CodeGenDAGPatterns::CodeGenDAGPatterns(llvm::RecordKeeper&, std::__1::function<void (llvm::TreePattern*)>) + 933\r\n10 llvm-tblgen              0x0000000103e822a9 llvm::EmitGlobalISel(llvm::RecordKeeper&, llvm::raw_ostream&) + 73\r\n11 llvm-tblgen              0x0000000103f4e11e (anonymous namespace)::LLVMTableGenMain(llvm::raw_ostream&, llvm::RecordKeeper&) + 974\r\n12 llvm-tblgen              0x0000000103fb62dc llvm::TableGenMain(char const*, bool (*)(llvm::raw_ostream&, llvm::RecordKeeper&)) + 908\r\n13 llvm-tblgen              0x0000000103f4dd19 main + 137\r\n14 dyld                     0x0000000112b3252e start + 462\r\n/bin/sh: line 1: 92140 Segmentation fault: 11  ../../../bin/llvm-tblgen -gen-global-isel -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/RISCV -I/Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/include -I/Users/runner/work/rust/rust/src/llvm-project/llvm/include -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target -no-warn-on-unused-template-args /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/RISCV/RISCV.td --write-if-changed -o /Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/lib/Target/RISCV/RISCVGenGlobalISel.inc\r\nmake[2]: *** [lib/Target/RISCV/RISCVGenGlobalISel.inc] Error 139\r\nPLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.\r\nStack dump:\r\n0.\tProgram arguments: ../../../bin/llvm-tblgen -gen-dag-isel -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/RISCV -I/Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/include -I/Users/runner/work/rust/rust/src/llvm-project/llvm/include -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target -omit-comments -no-warn-on-unused-template-args /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/RISCV/RISCV.td --write-if-changed -o /Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/lib/Target/RISCV/RISCVGenDAGISel.inc\r\nStack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):\r\n0  llvm-tblgen              0x00000001017e96ca llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 42\r\n1  llvm-tblgen              0x00000001017e8868 llvm::sys::RunSignalHandlers() + 248\r\n2  llvm-tblgen              0x00000001017e9d50 SignalHandler(int) + 288\r\n3  libsystem_platform.dylib 0x00007ff801d59dfd _sigtramp + 29\r\n4  libsystem_platform.dylib 000000000000000000 _sigtramp + 18446603370550157856\r\n5  llvm-tblgen              0x00000001015f28f6 std::__1::enable_if<__is_cpp17_forward_iterator<llvm::TypeSetByHwMode*>::value && is_constructible<llvm::TypeSetByHwMode, std::__1::iterator_traits<llvm::TypeSetByHwMode*>::reference>::value, void>::type std::__1::vector<llvm::TypeSetByHwMode, std::__1::allocator<llvm::TypeSetByHwMode>>::assign<llvm::TypeSetByHwMode*>(llvm::TypeSetByHwMode*, llvm::TypeSetByHwMode*) + 534\r\n6  llvm-tblgen              0x00000001015d90c8 llvm::TreePatternNode::clone() const + 1416\r\n7  llvm-tblgen              0x00000001015d8cac llvm::TreePatternNode::clone() const + 364\r\n8  llvm-tblgen              0x0000000101653921 llvm::ConvertPatternToMatcher(llvm::PatternToMatch const&, unsigned int, llvm::CodeGenDAGPatterns const&) + 209\r\n9  llvm-tblgen              0x0000000101647273 llvm::EmitDAGISel(llvm::RecordKeeper&, llvm::raw_ostream&) + 1555\r\n10 llvm-tblgen              0x0000000101786e62 (anonymous namespace)::LLVMTableGenMain(llvm::raw_ostream&, llvm::RecordKeeper&) + 274\r\n11 llvm-tblgen              0x00000001017ef2dc llvm::TableGenMain(char const*, bool (*)(llvm::raw_ostream&, llvm::RecordKeeper&)) + 908\r\n12 llvm-tblgen              0x0000000101786d19 main + 137\r\n13 dyld                     0x00000001036b552e start + 462\r\n/bin/sh: line 1: 91837 Segmentation fault: 11  ../../../bin/llvm-tblgen -gen-dag-isel -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/RISCV -I/Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/include -I/Users/runner/work/rust/rust/src/llvm-project/llvm/include -I /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target -omit-comments -no-warn-on-unused-template-args /Users/runner/work/rust/rust/src/llvm-project/llvm/lib/Target/RISCV/RISCV.td --write-if-changed -o /Users/runner/work/rust/rust/build/x86_64-apple-darwin/llvm/build/lib/Target/RISCV/RISCVGenDAGISel.inc\r\nmake[2]: *** [lib/Target/RISCV/RISCVGenDAGISel.inc] Error 139\r\nmake[1]: *** [lib/Target/RISCV/CMakeFiles/RISCVCommonTableGen.dir/all] Error 2\r\nmake: *** [all] Error 2\r\nthread 'main' panicked at '\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/109624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/109624/timeline", "performed_via_github_app": null, "state_reason": null}