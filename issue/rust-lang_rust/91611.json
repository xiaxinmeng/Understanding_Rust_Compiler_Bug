{"url": "https://api.github.com/repos/rust-lang/rust/issues/91611", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91611/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91611/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91611/events", "html_url": "https://github.com/rust-lang/rust/issues/91611", "id": 1072732910, "node_id": "I_kwDOAAsO6M4_8Jru", "number": 91611, "title": "Tracking Issue for async_fn_in_trait, return_position_impl_trait_in_trait", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 89436934, "node_id": "MDU6TGFiZWw4OTQzNjkzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-RFC-approved", "name": "B-RFC-approved", "color": "d304cb", "default": false, "description": "Approved by a merged RFC but not yet implemented."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 3537211959, "node_id": "LA_kwDOAAsO6M7S1ZI3", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-impl-incomplete", "name": "S-tracking-impl-incomplete", "color": "4682b4", "default": false, "description": ""}, {"id": 3618128266, "node_id": "LA_kwDOAAsO6M7XqEGK", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-async_fn_in_trait", "name": "F-async_fn_in_trait", "color": "f9c0cc", "default": false, "description": "Static async fn in traits"}, {"id": 4515945540, "node_id": "LA_kwDOAAsO6M8AAAABDSvcRA", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-return_position_impl_trait_in_trait", "name": "F-return_position_impl_trait_in_trait", "color": "f9c0cc", "default": false, "description": "`#![feature(return_position_impl_trait_in_trait)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2021-12-06T23:34:04Z", "updated_at": "2023-06-14T22:02:13Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nNOTE: For library features, please use the \"Library Tracking Issue\" template instead.\r\n\r\nThank you for creating a tracking issue! \ud83d\udcdc Tracking issues are for tracking a\r\nfeature from implementation to stabilisation. Make sure to include the relevant\r\nRFC for the feature if it has one. Otherwise provide a short summary of the\r\nfeature and link any relevant PRs or issues, and remove any sections that are\r\nnot relevant to the feature.\r\n\r\nRemember to add team labels to the tracking issue.\r\nFor a language team feature, this would e.g., be `T-lang`.\r\nSuch a feature should also be labeled with e.g., `F-my_feature`.\r\nThis label is used to associate issues (e.g., bugs and design questions) to the feature.\r\n-->\r\n\r\n* This is a tracking issue for the RFC \"static async fn in traits\" (rust-lang/rfcs#3185) and \"Return position `impl Trait` in traits\" (rust-lang/rfcs#3425).\r\n* The feature gate for async fn in traits is `#![feature(async_fn_in_trait)]`.\r\n* The feature gate for return position `impl Trait` in traits is `#![feature(return_position_impl_trait_in_trait)]`.\r\n* This feature is developed as part of the [async fundamentals initiative](https://rust-lang.github.io/async-fundamentals-initiative/) -- see that website for more information!\r\n\r\n### About tracking issues\r\n\r\nTracking issues are used to record the overall progress of implementation.\r\nThey are also used as hubs connecting to other relevant issues, e.g., bugs or open design questions.\r\nA tracking issue is however *not* meant for large scale discussion, questions, or bug reports about a feature.\r\nInstead, open a dedicated issue for the specific matter and add the relevant feature gate label.\r\n\r\n### Steps\r\n<!--\r\nInclude each step required to complete the feature. Typically this is a PR\r\nimplementing a feature, followed by a PR that stabilises the feature. However\r\nfor larger features an implementation could be broken up into multiple PRs.\r\n-->\r\n\r\n- [x] Implement the RFC \r\n- [ ] Adjust documentation ([see instructions on rustc-dev-guide][doc-guide])\r\n- [ ] Stabilization PR ([see instructions on rustc-dev-guide][stabilization-guide])\r\n\r\n[stabilization-guide]: https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#stabilization-pr\r\n[doc-guide]: https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#documentation-prs\r\n\r\n### Unresolved Questions\r\n\r\n#### Async fn in trait\r\n\r\n- [x] https://github.com/rust-lang/rust/issues/103854\r\n\r\n#### Return position impl Trait in trait\r\n\r\n- [ ] Should we stabilize this feature together with `async fn` to mitigate hazards of writing a trait that is not forwards-compatible with its desugaring?\r\n- [ ] Resolution of #112194 \r\n  - Note that this might impact the desugaring, as described in [this comment](https://github.com/rust-lang/rfcs/pull/3425#issuecomment-1580917997).\r\n- [ ] Should we limit the legal positions for `impl Trait` to positions that are nameable using upcoming features like return-type notation (RTN)? (See [this comment](https://github.com/rust-lang/rfcs/pull/3425#pullrequestreview-1467880633) for an example.)\r\n\r\n### Implementation history\r\n\r\n<!--\r\nInclude a list of all the PRs that were involved in implementing the feature.\r\n-->\r\n\r\n#### Async fn in trait\r\n\r\nhttps://github.com/rust-lang/rust/labels/F-async_fn_in_trait\r\n\r\n- https://github.com/rust-lang/rust/pull/102244\r\n- #100734\r\n\r\n#### Return position impl Trait in trait\r\n\r\nhttps://github.com/rust-lang/rust/labels/F-return_position_impl_trait_in_trait\r\n\r\nSeveral of these include code specific to async fn in trait.\r\n\r\n- https://github.com/rust-lang/rust/pull/101224\r\n- #101614\r\n- #101615\r\n- #101676\r\n- #101679\r\n- #102152\r\n- #102161\r\n- #102164\r\n- #102597\r\n- #102334\r\n- #103355\r\n\r\n<!-- TRIAGEBOT_START -->\r\n\r\n<!-- TRIAGEBOT_ASSIGN_START -->\r\n\r\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":null}$$TRIAGEBOT_ASSIGN_DATA_END -->\r\n\r\n<!-- TRIAGEBOT_ASSIGN_END -->\r\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91611/reactions", "total_count": 260, "+1": 151, "-1": 0, "laugh": 0, "hooray": 35, "confused": 0, "heart": 31, "rocket": 36, "eyes": 7}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91611/timeline", "performed_via_github_app": null, "state_reason": null}