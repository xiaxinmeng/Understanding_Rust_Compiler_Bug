{"url": "https://api.github.com/repos/rust-lang/rust/issues/112406", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112406/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112406/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112406/events", "html_url": "https://github.com/rust-lang/rust/issues/112406", "id": 1746803388, "node_id": "I_kwDOAAsO6M5oHhq8", "number": 112406, "title": "liballoc built with `-Csplit-debuginfo=unpacked` despite not being supported on riscv32imc-unknown-none-elf", "user": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}, {"id": 1210355734, "node_id": "MDU6TGFiZWwxMjEwMzU1NzM0", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-riscv", "name": "O-riscv", "color": "6e6ec0", "default": false, "description": "Target: RISC-V architecture"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-06-07T23:04:36Z", "updated_at": "2023-06-08T00:04:35Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've only observed this on Mac hosts, not Linux. (Are we mixing up host and target somewhere?)\r\n\r\nGiven the following config.toml:\r\n\r\n```\r\n# Includes one of the default files in src/bootstrap/defaults\r\nprofile = \"library\"\r\nchangelog-seen = 2\r\n\r\n[rust]\r\ndebuginfo-level-std = 2\r\n\r\n[target.riscv32imc-unknown-none-elf]\r\ncc = \"/usr/bin/clang\"\r\ncxx = \"/usr/bin/clang++\"\r\nlinker = \"/usr/bin/clang++\"\r\n```\r\n\r\nI get this error:\r\n\r\n```\r\n\u279c  rust git:(master) \u2717 ./x.py build library/alloc --target riscv32imc-unknown-none-elf\r\nBuilding bootstrap\r\n    Finished dev [unoptimized] target(s) in 0.12s\r\nBuilding stage0 library artifacts {alloc} (aarch64-apple-darwin -> riscv32imc-unknown-none-elf)\r\n   Compiling core v0.0.0 (/Users/tmandry/code/rust/library/core)\r\n   Compiling rustc-std-workspace-core v1.99.0 (/Users/tmandry/code/rust/library/rustc-std-workspace-core)\r\n   Compiling compiler_builtins v0.1.92\r\nerror: A dwo section may not contain relocations\r\n\r\n   Compiling alloc v0.0.0 (/Users/tmandry/code/rust/library/alloc)\r\nerror: could not compile `compiler_builtins` (lib) due to previous error\r\nwarning: build failed, waiting for other jobs to finish...\r\nerror: could not compile `core` (lib) due to previous error\r\nerror: could not compile `alloc` (lib) due to previous error\r\nBuild completed unsuccessfully in 0:00:08\r\n```\r\n\r\nRerunning with `-v` reveals that rustc is invoked with `-Csplit-debuginfo=unpacked`.\r\n\r\n<details>\r\n<summary>Verbose output</summary>\r\n\r\n```\r\n\u279c  rust git:(master) \u2717 ./x.py build library/alloc --target riscv32imc-unknown-none-elf -v\r\nBuilding bootstrap\r\nrunning: /Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0/bin/cargo build --manifest-path /Users/tmandry/code/rust/src/bootstrap/Cargo.toml --verbose\r\n       Fresh cfg-if v1.0.0\r\n       Fresh unicode-ident v1.0.0\r\n       Fresh version_check v0.9.4\r\n       Fresh bitflags v1.3.2\r\n       Fresh libc v0.2.140\r\n       Fresh cc v1.0.73\r\n       Fresh once_cell v1.12.0\r\n       Fresh proc-macro2 v1.0.56\r\n       Fresh memchr v2.5.0\r\n       Fresh typenum v1.15.0\r\n       Fresh pkg-config v0.3.25\r\n       Fresh io-lifetimes v1.0.9\r\n       Fresh errno v0.3.0\r\n       Fresh quote v1.0.26\r\n       Fresh generic-array v0.14.5\r\n       Fresh aho-corasick v0.7.18\r\n       Fresh anstyle v1.0.0\r\n       Fresh regex-syntax v0.6.26\r\n       Fresh clap_lex v0.4.1\r\n       Fresh syn v2.0.8\r\n       Fresh heck v0.4.1\r\n       Fresh clap_builder v4.2.4\r\n       Fresh crypto-common v0.1.3\r\n       Fresh serde v1.0.160\r\n       Fresh regex v1.5.6\r\n       Fresh log v0.4.17\r\n       Fresh block-buffer v0.10.2\r\n       Fresh clap_derive v4.2.0\r\n       Fresh bstr v0.2.17\r\n       Fresh rustix v0.37.6\r\n       Fresh fnv v1.0.7\r\n       Fresh same-file v1.0.6\r\n       Fresh lzma-sys v0.1.17\r\n       Fresh digest v0.10.3\r\n       Fresh clap v4.2.4\r\n       Fresh globset v0.4.8\r\n       Fresh walkdir v2.3.2\r\n       Fresh crossbeam-utils v0.8.14\r\n       Fresh thread_local v1.1.4\r\n       Fresh cpufeatures v0.2.5\r\n       Fresh filetime v0.2.16\r\n       Fresh xattr v0.2.3\r\n       Fresh ryu v1.0.10\r\n       Fresh itoa v1.0.2\r\n       Fresh lazy_static v1.4.0\r\n       Fresh clap_complete v4.2.2\r\n       Fresh semver v1.0.17\r\n       Fresh sha2 v0.10.2\r\n       Fresh serde_derive v1.0.160\r\n       Fresh xz2 v0.1.6\r\n       Fresh ignore v0.4.18\r\n       Fresh tar v0.4.38\r\n       Fresh serde_json v1.0.81\r\n       Fresh fd-lock v3.0.11\r\n       Fresh is-terminal v0.4.6\r\n       Fresh toml v0.5.9\r\n       Fresh object v0.31.1\r\n       Fresh cmake v0.1.48\r\n       Fresh termcolor v1.2.0\r\n       Fresh build_helper v0.1.0 (/Users/tmandry/code/rust/src/tools/build_helper)\r\n       Fresh hex v0.4.3\r\n       Fresh opener v0.5.0\r\n       Fresh bootstrap v0.0.0 (/Users/tmandry/code/rust/src/bootstrap)\r\n    Finished dev [unoptimized] target(s) in 0.07s\r\nrunning: /Users/tmandry/code/rust/build/bootstrap/debug/bootstrap build library/alloc --target riscv32imc-unknown-none-elf -v\r\nfinding compilers\r\nCC_aarch64-apple-darwin = \"cc\"\r\nCFLAGS_aarch64-apple-darwin = [\"-ffunction-sections\", \"-fdata-sections\", \"-fPIC\", \"-arch\", \"arm64\", \"-stdlib=libc++\"]\r\nCXX_aarch64-apple-darwin = \"c++\"\r\nCXXFLAGS_aarch64-apple-darwin = [\"-ffunction-sections\", \"-fdata-sections\", \"-fPIC\", \"-arch\", \"arm64\", \"-stdlib=libc++\"]\r\nAR_aarch64-apple-darwin = \"ar\"\r\nCC_riscv32imc-unknown-none-elf = \"/usr/bin/clang\"\r\nCFLAGS_riscv32imc-unknown-none-elf = [\"-ffunction-sections\", \"-fdata-sections\", \"--target=riscv32imc-unknown-none-elf\"]\r\nCXX_riscv32imc-unknown-none-elf = \"/usr/bin/clang++\"\r\nCXXFLAGS_riscv32imc-unknown-none-elf = [\"-ffunction-sections\", \"-fdata-sections\", \"--target=riscv32imc-unknown-none-elf\"]\r\nAR_riscv32imc-unknown-none-elf = \"/usr/bin/ar\"\r\nrunning sanity check\r\nlearning about cargo\r\nRemoving sysroot /Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-sysroot to avoid caching bugs\r\nRemoving sysroot /Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-sysroot/lib/rustlib/riscv32imc-unknown-none-elf/lib to avoid caching bugs\r\nRemoving sysroot /Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-sysroot/lib/rustlib/aarch64-apple-darwin/lib to avoid caching bugs\r\nRemoving sysroot /Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-sysroot to avoid caching bugs\r\nRemoving sysroot /Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-sysroot/lib/rustlib/riscv32imc-unknown-none-elf/lib to avoid caching bugs\r\nRemoving sysroot /Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-sysroot/lib/rustlib/aarch64-apple-darwin/lib to avoid caching bugs\r\nBuilding stage0 library artifacts {alloc} (aarch64-apple-darwin -> riscv32imc-unknown-none-elf)\r\nrunning: cd \"/Users/tmandry/code/rust\" && AR_riscv32imc_unknown_none_elf=\"/usr/bin/ar\" CARGO_INCREMENTAL=\"1\" CARGO_PROFILE_RELEASE_DEBUG=\"2\" CARGO_PROFILE_RELEASE_DEBUG_ASSERTIONS=\"false\" CARGO_PROFILE_RELEASE_OVERFLOW_CHECKS=\"false\" CARGO_TARGET_DIR=\"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std\" CARGO_TARGET_RISCV32IMC_UNKNOWN_NONE_ELF_LINKER=\"/usr/bin/clang++\" CC_riscv32imc_unknown_none_elf=\"/usr/bin/clang\" CFG_COMPILER_HOST_TRIPLE=\"riscv32imc-unknown-none-elf\" CFG_RELEASE_CHANNEL=\"dev\" CFLAGS_riscv32imc_unknown_none_elf=\"-ffunction-sections -fdata-sections --target=riscv32imc-unknown-none-elf\" CXXFLAGS_riscv32imc_unknown_none_elf=\"-ffunction-sections -fdata-sections --target=riscv32imc-unknown-none-elf\" CXX_riscv32imc_unknown_none_elf=\"/usr/bin/clang++\" LIBC_CHECK_CFG=\"1\" RANLIB_riscv32imc_unknown_none_elf=\"/usr/bin/ar s\" REAL_LIBRARY_PATH_VAR=\"DYLD_LIBRARY_PATH\" RUSTBUILD_NATIVE_DIR=\"/Users/tmandry/code/rust/build/riscv32imc-unknown-none-elf/native\" RUSTC=\"/Users/tmandry/code/rust/build/bootstrap/debug/rustc\" RUSTC_BOOTSTRAP=\"1\" RUSTC_BREAK_ON_ICE=\"1\" RUSTC_ERROR_METADATA_DST=\"/Users/tmandry/code/rust/build/tmp/extended-error-metadata\" RUSTC_FORCE_UNSTABLE=\"1\" RUSTC_INSTALL_BINDIR=\"bin\" RUSTC_LIBDIR=\"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0/lib\" RUSTC_LINT_FLAGS=\"-Wrust_2018_idioms -Wunused_lifetimes -Wsemicolon_in_expressions_from_macros -Dwarnings\" RUSTC_REAL=\"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0/bin/rustc\" RUSTC_SNAPSHOT=\"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0/bin/rustc\" RUSTC_SNAPSHOT_LIBDIR=\"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0/lib\" RUSTC_STAGE=\"0\" RUSTC_SYSROOT=\"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-sysroot\" RUSTC_VERBOSE=\"1\" RUSTDOC=\"/Users/tmandry/code/rust/build/bootstrap/debug/rustdoc\" RUSTDOCFLAGS=\"--cfg=bootstrap -Csymbol-mangling-version=legacy -Zunstable-options -Zunstable-options --check-cfg=values(bootstrap) --check-cfg=values(stdarch_intel_sde) --check-cfg=values(no_fp_fmt_parse) --check-cfg=values(no_global_oom_handling) --check-cfg=values(no_rc) --check-cfg=values(no_sync) --check-cfg=values(freebsd12) --check-cfg=values(freebsd13) --check-cfg=values(backtrace_in_libstd) --check-cfg=values(target_env,\\\"libnx\\\") --check-cfg=values(target_arch,\\\"asmjs\\\",\\\"spirv\\\",\\\"nvptx\\\",\\\"xtensa\\\") -Dwarnings -Wrustdoc::invalid_codeblock_attributes --crate-version 1.72.0-dev -Zcrate-attr=doc(html_root_url=\\\"https://doc.rust-lang.org/nightly/\\\") -Zcrate-attr=warn(rust_2018_idioms)\" RUSTDOC_REAL=\"/path/to/nowhere/rustdoc/not/required\" RUSTFLAGS=\"--cfg=bootstrap -Csymbol-mangling-version=legacy -Zunstable-options -Zunstable-options --check-cfg=values(bootstrap) --check-cfg=values(stdarch_intel_sde) --check-cfg=values(no_fp_fmt_parse) --check-cfg=values(no_global_oom_handling) --check-cfg=values(no_rc) --check-cfg=values(no_sync) --check-cfg=values(freebsd12) --check-cfg=values(freebsd13) --check-cfg=values(backtrace_in_libstd) --check-cfg=values(target_env,\\\"libnx\\\") --check-cfg=values(target_arch,\\\"asmjs\\\",\\\"spirv\\\",\\\"nvptx\\\",\\\"xtensa\\\") -Zmacro-backtrace -Clink-args=-Wl,-z,origin -Clink-args=-Wl,-rpath,$ORIGIN/../lib -Zunstable-options -Csplit-debuginfo=unpacked -Cprefer-dynamic -Cllvm-args=-import-instr-limit=10 -Zinline-mir -Clto=off -Cforce-unwind-tables=yes -Zcrate-attr=doc(html_root_url=\\\"https://doc.rust-lang.org/nightly/\\\")\" RUST_TEST_THREADS=\"10\" WINAPI_NO_BUNDLED_LIBRARIES=\"1\" __CARGO_DEFAULT_LIB_METADATA=\"bootstrapstd\" \"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0/bin/cargo\" \"build\" \"--target\" \"riscv32imc-unknown-none-elf\" \"--release\" \"-Zcheck-cfg=names,values,output\" \"-Zbinary-dep-depinfo\" \"-j\" \"10\" \"-v\" \"-p\" \"alloc\" \"--manifest-path\" \"/Users/tmandry/code/rust/library/alloc/Cargo.toml\" \"--features\" \" compiler-builtins-mem\" \"-p\" \"alloc\" \"--message-format\" \"json-render-diagnostics\"\r\n   Compiling core v0.0.0 (/Users/tmandry/code/rust/library/core)\r\n     Running `/Users/tmandry/code/rust/build/bootstrap/debug/rustc --crate-name core --edition=2021 library/core/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --diagnostic-width=195 --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C debuginfo=2 -Zunstable-options --check-cfg 'names()' --check-cfg 'values()' -C metadata=6dae326047fff8df -C extra-filename=-6dae326047fff8df --out-dir /Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps --target riscv32imc-unknown-none-elf -C linker=/usr/bin/clang++ -C incremental=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/incremental -L dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps -L dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/release/deps --cfg=bootstrap -Csymbol-mangling-version=legacy -Zunstable-options -Zunstable-options '--check-cfg=values(bootstrap)' '--check-cfg=values(stdarch_intel_sde)' '--check-cfg=values(no_fp_fmt_parse)' '--check-cfg=values(no_global_oom_handling)' '--check-cfg=values(no_rc)' '--check-cfg=values(no_sync)' '--check-cfg=values(freebsd12)' '--check-cfg=values(freebsd13)' '--check-cfg=values(backtrace_in_libstd)' '--check-cfg=values(target_env,\"libnx\")' '--check-cfg=values(target_arch,\"asmjs\",\"spirv\",\"nvptx\",\"xtensa\")' -Zmacro-backtrace -Clink-args=-Wl,-z,origin '-Clink-args=-Wl,-rpath,$ORIGIN/../lib' -Zunstable-options -Csplit-debuginfo=unpacked -Cprefer-dynamic -Cllvm-args=-import-instr-limit=10 -Zinline-mir -Clto=off -Cforce-unwind-tables=yes '-Zcrate-attr=doc(html_root_url=\"https://doc.rust-lang.org/nightly/\")' -Z binary-dep-depinfo`\r\n       Dirty rustc-std-workspace-core v1.99.0 (/Users/tmandry/code/rust/library/rustc-std-workspace-core): the dependency core was rebuilt\r\n   Compiling rustc-std-workspace-core v1.99.0 (/Users/tmandry/code/rust/library/rustc-std-workspace-core)\r\n     Running `/Users/tmandry/code/rust/build/bootstrap/debug/rustc --crate-name rustc_std_workspace_core --edition=2021 library/rustc-std-workspace-core/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --diagnostic-width=195 --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C debuginfo=2 -Zunstable-options --check-cfg 'names()' --check-cfg 'values()' -C metadata=fc593dfc8d04f127 -C extra-filename=-fc593dfc8d04f127 --out-dir /Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps --target riscv32imc-unknown-none-elf -C linker=/usr/bin/clang++ -C incremental=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/incremental -L dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps -L dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/release/deps --extern core=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps/libcore-6dae326047fff8df.rmeta --cfg=bootstrap -Csymbol-mangling-version=legacy -Zunstable-options -Zunstable-options '--check-cfg=values(bootstrap)' '--check-cfg=values(stdarch_intel_sde)' '--check-cfg=values(no_fp_fmt_parse)' '--check-cfg=values(no_global_oom_handling)' '--check-cfg=values(no_rc)' '--check-cfg=values(no_sync)' '--check-cfg=values(freebsd12)' '--check-cfg=values(freebsd13)' '--check-cfg=values(backtrace_in_libstd)' '--check-cfg=values(target_env,\"libnx\")' '--check-cfg=values(target_arch,\"asmjs\",\"spirv\",\"nvptx\",\"xtensa\")' -Zmacro-backtrace -Clink-args=-Wl,-z,origin '-Clink-args=-Wl,-rpath,$ORIGIN/../lib' -Zunstable-options -Csplit-debuginfo=unpacked -Cprefer-dynamic -Cllvm-args=-import-instr-limit=10 -Zinline-mir -Clto=off -Cforce-unwind-tables=yes '-Zcrate-attr=doc(html_root_url=\"https://doc.rust-lang.org/nightly/\")' -Z binary-dep-depinfo`\r\n   Compiling compiler_builtins v0.1.92\r\n     Running `/Users/tmandry/code/rust/build/bootstrap/debug/rustc --crate-name compiler_builtins /Users/tmandry/.cargo/registry/src/index.crates.io-6f17d22bba15001f/compiler_builtins-0.1.92/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --diagnostic-width=195 --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=10000 -C debuginfo=2 --cfg 'feature=\"compiler-builtins\"' --cfg 'feature=\"core\"' --cfg 'feature=\"default\"' --cfg 'feature=\"mem\"' --cfg 'feature=\"rustc-dep-of-std\"' -Zunstable-options --check-cfg 'names()' --check-cfg 'values()' -C metadata=acda6d6c8945d01d -C extra-filename=-acda6d6c8945d01d --out-dir /Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps --target riscv32imc-unknown-none-elf -C linker=/usr/bin/clang++ -L dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps -L dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/release/deps --extern core=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps/librustc_std_workspace_core-fc593dfc8d04f127.rmeta --cap-lints allow --cfg=bootstrap -Csymbol-mangling-version=legacy -Zunstable-options -Zunstable-options '--check-cfg=values(bootstrap)' '--check-cfg=values(stdarch_intel_sde)' '--check-cfg=values(no_fp_fmt_parse)' '--check-cfg=values(no_global_oom_handling)' '--check-cfg=values(no_rc)' '--check-cfg=values(no_sync)' '--check-cfg=values(freebsd12)' '--check-cfg=values(freebsd13)' '--check-cfg=values(backtrace_in_libstd)' '--check-cfg=values(target_env,\"libnx\")' '--check-cfg=values(target_arch,\"asmjs\",\"spirv\",\"nvptx\",\"xtensa\")' -Zmacro-backtrace -Clink-args=-Wl,-z,origin '-Clink-args=-Wl,-rpath,$ORIGIN/../lib' -Zunstable-options -Csplit-debuginfo=unpacked -Cprefer-dynamic -Cllvm-args=-import-instr-limit=10 -Zinline-mir -Clto=off -Cforce-unwind-tables=yes '-Zcrate-attr=doc(html_root_url=\"https://doc.rust-lang.org/nightly/\")' -Z binary-dep-depinfo --cfg 'feature=\"unstable\"' --cfg 'feature=\"mem\"'`\r\nerror: A dwo section may not contain relocations\r\n\r\n   Compiling alloc v0.0.0 (/Users/tmandry/code/rust/library/alloc)\r\n     Running `/Users/tmandry/code/rust/build/bootstrap/debug/rustc --crate-name alloc --edition=2021 library/alloc/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --diagnostic-width=195 --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"compiler-builtins-mem\"' -Zunstable-options --check-cfg 'names()' --check-cfg 'values()' -C metadata=26880db47770d3ae -C extra-filename=-26880db47770d3ae --out-dir /Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps --target riscv32imc-unknown-none-elf -C linker=/usr/bin/clang++ -C incremental=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/incremental -L dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps -L dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/release/deps --extern compiler_builtins=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps/libcompiler_builtins-acda6d6c8945d01d.rmeta --extern core=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps/libcore-6dae326047fff8df.rmeta --cfg=bootstrap -Csymbol-mangling-version=legacy -Zunstable-options -Zunstable-options '--check-cfg=values(bootstrap)' '--check-cfg=values(stdarch_intel_sde)' '--check-cfg=values(no_fp_fmt_parse)' '--check-cfg=values(no_global_oom_handling)' '--check-cfg=values(no_rc)' '--check-cfg=values(no_sync)' '--check-cfg=values(freebsd12)' '--check-cfg=values(freebsd13)' '--check-cfg=values(backtrace_in_libstd)' '--check-cfg=values(target_env,\"libnx\")' '--check-cfg=values(target_arch,\"asmjs\",\"spirv\",\"nvptx\",\"xtensa\")' -Zmacro-backtrace -Clink-args=-Wl,-z,origin '-Clink-args=-Wl,-rpath,$ORIGIN/../lib' -Zunstable-options -Csplit-debuginfo=unpacked -Cprefer-dynamic -Cllvm-args=-import-instr-limit=10 -Zinline-mir -Clto=off -Cforce-unwind-tables=yes '-Zcrate-attr=doc(html_root_url=\"https://doc.rust-lang.org/nightly/\")' -Z binary-dep-depinfo`\r\n    Building [=============>               ] 3/6: core, compiler_builtins, alloc\r\nDid not run successfully: exit status: 1\r\nDYLD_LIBRARY_PATH=\"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0/lib\" \"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0/bin/rustc\" \"--crate-name\" \"compiler_builtins\" \"/Users/tmandry/.cargo/registry/src/index.crates.io-6f17d22bba15001f/compiler_builtins-0.1.92/src/lib.rs\" \"--error-format=json\" \"--json=diagnostic-rendered-ansi,artifacts,future-incompat\" \"--diagnostic-width=195\" \"--crate-type\" \"lib\" \"--emit=dep-info,metadata,link\" \"-C\" \"opt-level=3\" \"-C\" \"embed-bitcode=no\" \"-C\" \"codegen-units=10000\" \"-C\" \"debuginfo=2\" \"--cfg\" \"feature=\\\"compiler-builtins\\\"\" \"--cfg\" \"feature=\\\"core\\\"\" \"--cfg\" \"feature=\\\"default\\\"\" \"--cfg\" \"feature=\\\"mem\\\"\" \"--cfg\" \"feature=\\\"rustc-dep-of-std\\\"\" \"-Zunstable-options\" \"--check-cfg\" \"names()\" \"--check-cfg\" \"values()\" \"-C\" \"metadata=acda6d6c8945d01d\" \"-C\" \"extra-filename=-acda6d6c8945d01d\" \"--out-dir\" \"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps\" \"--target\" \"riscv32imc-unknown-none-elf\" \"-C\" \"linker=/usr/bin/clang++\" \"-L\" \"dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps\" \"-L\" \"dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/release/deps\" \"--extern\" \"core=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps/librustc_std_workspace_core-fc593dfc8d04f127.rmeta\" \"--cap-lints\" \"allow\" \"--cfg=bootstrap\" \"-Csymbol-mangling-version=legacy\" \"-Zunstable-options\" \"-Zunstable-options\" \"--check-cfg=values(bootstrap)\" \"--check-cfg=values(stdarch_intel_sde)\" \"--check-cfg=values(no_fp_fmt_parse)\" \"--check-cfg=values(no_global_oom_handling)\" \"--check-cfg=values(no_rc)\" \"--check-cfg=values(no_sync)\" \"--check-cfg=values(freebsd12)\" \"--check-cfg=values(freebsd13)\" \"--check-cfg=values(backtrace_in_libstd)\" \"--check-cfg=values(target_env,\\\"libnx\\\")\" \"--check-cfg=values(target_arch,\\\"asmjs\\\",\\\"spirv\\\",\\\"nvptx\\\",\\\"xtensa\\\")\" \"-Zmacro-backtrace\" \"-Clink-args=-Wl,-z,origin\" \"-Clink-args=-Wl,-rpath,$ORIGIN/../lib\" \"-Zunstable-options\" \"-Csplit-debuginfo=unpacked\" \"-Cprefer-dynamic\" \"-Cllvm-args=-import-instr-limit=10\" \"-Zinline-mir\" \"-Clto=off\" \"-Cforce-unwind-tables=yes\" \"-Zcrate-attr=doc(html_root_url=\\\"https://doc.rust-lang.org/nightly/\\\")\" \"-Z\" \"binary-dep-depinfo\" \"--cfg\" \"feature=\\\"unstable\\\"\" \"--cfg\" \"feature=\\\"mem\\\"\" \"-Wrust_2018_idioms\" \"-Wunused_lifetimes\" \"-Wsemicolon_in_expressions_from_macros\" \"-Dwarnings\" \"--sysroot\" \"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-sysroot\" \"-Z\" \"force-unstable-if-unmarked\"\r\n-------------\r\nerror: could not compile `compiler_builtins` (lib) due to previous error\r\n\r\nCaused by:\r\n  process didn't exit successfully: `/Users/tmandry/code/rust/build/bootstrap/debug/rustc --crate-name compiler_builtins /Users/tmandry/.cargo/registry/src/index.crates.io-6f17d22bba15001f/compiler_builtins-0.1.92/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --diagnostic-width=195 --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=10000 -C debuginfo=2 --cfg 'feature=\"compiler-builtins\"' --cfg 'feature=\"core\"' --cfg 'feature=\"default\"' --cfg 'feature=\"mem\"' --cfg 'feature=\"rustc-dep-of-std\"' -Zunstable-options --check-cfg 'names()' --check-cfg 'values()' -C metadata=acda6d6c8945d01d -C extra-filename=-acda6d6c8945d01d --out-dir /Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps --target riscv32imc-unknown-none-elf -C linker=/usr/bin/clang++ -L dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps -L dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/release/deps --extern core=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps/librustc_std_workspace_core-fc593dfc8d04f127.rmeta --cap-lints allow --cfg=bootstrap -Csymbol-mangling-version=legacy -Zunstable-options -Zunstable-options '--check-cfg=values(bootstrap)' '--check-cfg=values(stdarch_intel_sde)' '--check-cfg=values(no_fp_fmt_parse)' '--check-cfg=values(no_global_oom_handling)' '--check-cfg=values(no_rc)' '--check-cfg=values(no_sync)' '--check-cfg=values(freebsd12)' '--check-cfg=values(freebsd13)' '--check-cfg=values(backtrace_in_libstd)' '--check-cfg=values(target_env,\"libnx\")' '--check-cfg=values(target_arch,\"asmjs\",\"spirv\",\"nvptx\",\"xtensa\")' -Zmacro-backtrace -Clink-args=-Wl,-z,origin '-Clink-args=-Wl,-rpath,$ORIGIN/../lib' -Zunstable-options -Csplit-debuginfo=unpacked -Cprefer-dynamic -Cllvm-args=-import-instr-limit=10 -Zinline-mir -Clto=off -Cforce-unwind-tables=yes '-Zcrate-attr=doc(html_root_url=\"https://doc.rust-lang.org/nightly/\")' -Z binary-dep-depinfo --cfg 'feature=\"unstable\"' --cfg 'feature=\"mem\"'` (exit status: 1)\r\nwarning: build failed, waiting for other jobs to finish...\r\n    Building [==================>          ] 4/6: core, alloc\r\nDid not run successfully: exit status: 1\r\nDYLD_LIBRARY_PATH=\"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0/lib\" \"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0/bin/rustc\" \"--crate-name\" \"core\" \"--edition=2021\" \"library/core/src/lib.rs\" \"--error-format=json\" \"--json=diagnostic-rendered-ansi,artifacts,future-incompat\" \"--diagnostic-width=195\" \"--crate-type\" \"lib\" \"--emit=dep-info,metadata,link\" \"-C\" \"opt-level=3\" \"-C\" \"embed-bitcode=no\" \"-C\" \"debuginfo=2\" \"-Zunstable-options\" \"--check-cfg\" \"names()\" \"--check-cfg\" \"values()\" \"-C\" \"metadata=6dae326047fff8df\" \"-C\" \"extra-filename=-6dae326047fff8df\" \"--out-dir\" \"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps\" \"--target\" \"riscv32imc-unknown-none-elf\" \"-C\" \"linker=/usr/bin/clang++\" \"-C\" \"incremental=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/incremental\" \"-L\" \"dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps\" \"-L\" \"dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/release/deps\" \"--cfg=bootstrap\" \"-Csymbol-mangling-version=legacy\" \"-Zunstable-options\" \"-Zunstable-options\" \"--check-cfg=values(bootstrap)\" \"--check-cfg=values(stdarch_intel_sde)\" \"--check-cfg=values(no_fp_fmt_parse)\" \"--check-cfg=values(no_global_oom_handling)\" \"--check-cfg=values(no_rc)\" \"--check-cfg=values(no_sync)\" \"--check-cfg=values(freebsd12)\" \"--check-cfg=values(freebsd13)\" \"--check-cfg=values(backtrace_in_libstd)\" \"--check-cfg=values(target_env,\\\"libnx\\\")\" \"--check-cfg=values(target_arch,\\\"asmjs\\\",\\\"spirv\\\",\\\"nvptx\\\",\\\"xtensa\\\")\" \"-Zmacro-backtrace\" \"-Clink-args=-Wl,-z,origin\" \"-Clink-args=-Wl,-rpath,$ORIGIN/../lib\" \"-Zunstable-options\" \"-Csplit-debuginfo=unpacked\" \"-Cprefer-dynamic\" \"-Cllvm-args=-import-instr-limit=10\" \"-Zinline-mir\" \"-Clto=off\" \"-Cforce-unwind-tables=yes\" \"-Zcrate-attr=doc(html_root_url=\\\"https://doc.rust-lang.org/nightly/\\\")\" \"-Z\" \"binary-dep-depinfo\" \"-Wrust_2018_idioms\" \"-Wunused_lifetimes\" \"-Wsemicolon_in_expressions_from_macros\" \"-Dwarnings\" \"--sysroot\" \"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-sysroot\" \"-Z\" \"force-unstable-if-unmarked\"\r\n-------------\r\nerror: could not compile `core` (lib) due to previous error\r\n\r\nCaused by:\r\n  process didn't exit successfully: `/Users/tmandry/code/rust/build/bootstrap/debug/rustc --crate-name core --edition=2021 library/core/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --diagnostic-width=195 --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C debuginfo=2 -Zunstable-options --check-cfg 'names()' --check-cfg 'values()' -C metadata=6dae326047fff8df -C extra-filename=-6dae326047fff8df --out-dir /Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps --target riscv32imc-unknown-none-elf -C linker=/usr/bin/clang++ -C incremental=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/incremental -L dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps -L dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/release/deps --cfg=bootstrap -Csymbol-mangling-version=legacy -Zunstable-options -Zunstable-options '--check-cfg=values(bootstrap)' '--check-cfg=values(stdarch_intel_sde)' '--check-cfg=values(no_fp_fmt_parse)' '--check-cfg=values(no_global_oom_handling)' '--check-cfg=values(no_rc)' '--check-cfg=values(no_sync)' '--check-cfg=values(freebsd12)' '--check-cfg=values(freebsd13)' '--check-cfg=values(backtrace_in_libstd)' '--check-cfg=values(target_env,\"libnx\")' '--check-cfg=values(target_arch,\"asmjs\",\"spirv\",\"nvptx\",\"xtensa\")' -Zmacro-backtrace -Clink-args=-Wl,-z,origin '-Clink-args=-Wl,-rpath,$ORIGIN/../lib' -Zunstable-options -Csplit-debuginfo=unpacked -Cprefer-dynamic -Cllvm-args=-import-instr-limit=10 -Zinline-mir -Clto=off -Cforce-unwind-tables=yes '-Zcrate-attr=doc(html_root_url=\"https://doc.rust-lang.org/nightly/\")' -Z binary-dep-depinfo` (exit status: 1)\r\n    Building [=======================>     ] 5/6: alloc\r\nDid not run successfully: exit status: 1\r\nDYLD_LIBRARY_PATH=\"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0/lib\" \"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0/bin/rustc\" \"--crate-name\" \"alloc\" \"--edition=2021\" \"library/alloc/src/lib.rs\" \"--error-format=json\" \"--json=diagnostic-rendered-ansi,artifacts,future-incompat\" \"--diagnostic-width=195\" \"--crate-type\" \"lib\" \"--emit=dep-info,metadata,link\" \"-C\" \"opt-level=3\" \"-C\" \"embed-bitcode=no\" \"-C\" \"debuginfo=2\" \"--cfg\" \"feature=\\\"compiler-builtins-mem\\\"\" \"-Zunstable-options\" \"--check-cfg\" \"names()\" \"--check-cfg\" \"values()\" \"-C\" \"metadata=26880db47770d3ae\" \"-C\" \"extra-filename=-26880db47770d3ae\" \"--out-dir\" \"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps\" \"--target\" \"riscv32imc-unknown-none-elf\" \"-C\" \"linker=/usr/bin/clang++\" \"-C\" \"incremental=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/incremental\" \"-L\" \"dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps\" \"-L\" \"dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/release/deps\" \"--extern\" \"compiler_builtins=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps/libcompiler_builtins-acda6d6c8945d01d.rmeta\" \"--extern\" \"core=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps/libcore-6dae326047fff8df.rmeta\" \"--cfg=bootstrap\" \"-Csymbol-mangling-version=legacy\" \"-Zunstable-options\" \"-Zunstable-options\" \"--check-cfg=values(bootstrap)\" \"--check-cfg=values(stdarch_intel_sde)\" \"--check-cfg=values(no_fp_fmt_parse)\" \"--check-cfg=values(no_global_oom_handling)\" \"--check-cfg=values(no_rc)\" \"--check-cfg=values(no_sync)\" \"--check-cfg=values(freebsd12)\" \"--check-cfg=values(freebsd13)\" \"--check-cfg=values(backtrace_in_libstd)\" \"--check-cfg=values(target_env,\\\"libnx\\\")\" \"--check-cfg=values(target_arch,\\\"asmjs\\\",\\\"spirv\\\",\\\"nvptx\\\",\\\"xtensa\\\")\" \"-Zmacro-backtrace\" \"-Clink-args=-Wl,-z,origin\" \"-Clink-args=-Wl,-rpath,$ORIGIN/../lib\" \"-Zunstable-options\" \"-Csplit-debuginfo=unpacked\" \"-Cprefer-dynamic\" \"-Cllvm-args=-import-instr-limit=10\" \"-Zinline-mir\" \"-Clto=off\" \"-Cforce-unwind-tables=yes\" \"-Zcrate-attr=doc(html_root_url=\\\"https://doc.rust-lang.org/nightly/\\\")\" \"-Z\" \"binary-dep-depinfo\" \"-Wrust_2018_idioms\" \"-Wunused_lifetimes\" \"-Wsemicolon_in_expressions_from_macros\" \"-Dwarnings\" \"--sysroot\" \"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-sysroot\" \"-Z\" \"force-unstable-if-unmarked\"\r\n-------------\r\nerror: could not compile `alloc` (lib) due to previous error\r\n\r\nCaused by:\r\n  process didn't exit successfully: `/Users/tmandry/code/rust/build/bootstrap/debug/rustc --crate-name alloc --edition=2021 library/alloc/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --diagnostic-width=195 --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"compiler-builtins-mem\"' -Zunstable-options --check-cfg 'names()' --check-cfg 'values()' -C metadata=26880db47770d3ae -C extra-filename=-26880db47770d3ae --out-dir /Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps --target riscv32imc-unknown-none-elf -C linker=/usr/bin/clang++ -C incremental=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/incremental -L dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps -L dependency=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/release/deps --extern compiler_builtins=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps/libcompiler_builtins-acda6d6c8945d01d.rmeta --extern core=/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std/riscv32imc-unknown-none-elf/release/deps/libcore-6dae326047fff8df.rmeta --cfg=bootstrap -Csymbol-mangling-version=legacy -Zunstable-options -Zunstable-options '--check-cfg=values(bootstrap)' '--check-cfg=values(stdarch_intel_sde)' '--check-cfg=values(no_fp_fmt_parse)' '--check-cfg=values(no_global_oom_handling)' '--check-cfg=values(no_rc)' '--check-cfg=values(no_sync)' '--check-cfg=values(freebsd12)' '--check-cfg=values(freebsd13)' '--check-cfg=values(backtrace_in_libstd)' '--check-cfg=values(target_env,\"libnx\")' '--check-cfg=values(target_arch,\"asmjs\",\"spirv\",\"nvptx\",\"xtensa\")' -Zmacro-backtrace -Clink-args=-Wl,-z,origin '-Clink-args=-Wl,-rpath,$ORIGIN/../lib' -Zunstable-options -Csplit-debuginfo=unpacked -Cprefer-dynamic -Cllvm-args=-import-instr-limit=10 -Zinline-mir -Clto=off -Cforce-unwind-tables=yes '-Zcrate-attr=doc(html_root_url=\"https://doc.rust-lang.org/nightly/\")' -Z binary-dep-depinfo` (exit status: 1)\r\ncommand did not execute successfully: cd \"/Users/tmandry/code/rust\" && AR_riscv32imc_unknown_none_elf=\"/usr/bin/ar\" CARGO_INCREMENTAL=\"1\" CARGO_PROFILE_RELEASE_DEBUG=\"2\" CARGO_PROFILE_RELEASE_DEBUG_ASSERTIONS=\"false\" CARGO_PROFILE_RELEASE_OVERFLOW_CHECKS=\"false\" CARGO_TARGET_DIR=\"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-std\" CARGO_TARGET_RISCV32IMC_UNKNOWN_NONE_ELF_LINKER=\"/usr/bin/clang++\" CC_riscv32imc_unknown_none_elf=\"/usr/bin/clang\" CFG_COMPILER_HOST_TRIPLE=\"riscv32imc-unknown-none-elf\" CFG_RELEASE_CHANNEL=\"dev\" CFLAGS_riscv32imc_unknown_none_elf=\"-ffunction-sections -fdata-sections --target=riscv32imc-unknown-none-elf\" CXXFLAGS_riscv32imc_unknown_none_elf=\"-ffunction-sections -fdata-sections --target=riscv32imc-unknown-none-elf\" CXX_riscv32imc_unknown_none_elf=\"/usr/bin/clang++\" LIBC_CHECK_CFG=\"1\" RANLIB_riscv32imc_unknown_none_elf=\"/usr/bin/ar s\" REAL_LIBRARY_PATH_VAR=\"DYLD_LIBRARY_PATH\" RUSTBUILD_NATIVE_DIR=\"/Users/tmandry/code/rust/build/riscv32imc-unknown-none-elf/native\" RUSTC=\"/Users/tmandry/code/rust/build/bootstrap/debug/rustc\" RUSTC_BOOTSTRAP=\"1\" RUSTC_BREAK_ON_ICE=\"1\" RUSTC_ERROR_METADATA_DST=\"/Users/tmandry/code/rust/build/tmp/extended-error-metadata\" RUSTC_FORCE_UNSTABLE=\"1\" RUSTC_INSTALL_BINDIR=\"bin\" RUSTC_LIBDIR=\"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0/lib\" RUSTC_LINT_FLAGS=\"-Wrust_2018_idioms -Wunused_lifetimes -Wsemicolon_in_expressions_from_macros -Dwarnings\" RUSTC_REAL=\"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0/bin/rustc\" RUSTC_SNAPSHOT=\"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0/bin/rustc\" RUSTC_SNAPSHOT_LIBDIR=\"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0/lib\" RUSTC_STAGE=\"0\" RUSTC_SYSROOT=\"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0-sysroot\" RUSTC_VERBOSE=\"1\" RUSTDOC=\"/Users/tmandry/code/rust/build/bootstrap/debug/rustdoc\" RUSTDOCFLAGS=\"--cfg=bootstrap -Csymbol-mangling-version=legacy -Zunstable-options -Zunstable-options --check-cfg=values(bootstrap) --check-cfg=values(stdarch_intel_sde) --check-cfg=values(no_fp_fmt_parse) --check-cfg=values(no_global_oom_handling) --check-cfg=values(no_rc) --check-cfg=values(no_sync) --check-cfg=values(freebsd12) --check-cfg=values(freebsd13) --check-cfg=values(backtrace_in_libstd) --check-cfg=values(target_env,\\\"libnx\\\") --check-cfg=values(target_arch,\\\"asmjs\\\",\\\"spirv\\\",\\\"nvptx\\\",\\\"xtensa\\\") -Dwarnings -Wrustdoc::invalid_codeblock_attributes --crate-version 1.72.0-dev -Zcrate-attr=doc(html_root_url=\\\"https://doc.rust-lang.org/nightly/\\\") -Zcrate-attr=warn(rust_2018_idioms)\" RUSTDOC_REAL=\"/path/to/nowhere/rustdoc/not/required\" RUSTFLAGS=\"--cfg=bootstrap -Csymbol-mangling-version=legacy -Zunstable-options -Zunstable-options --check-cfg=values(bootstrap) --check-cfg=values(stdarch_intel_sde) --check-cfg=values(no_fp_fmt_parse) --check-cfg=values(no_global_oom_handling) --check-cfg=values(no_rc) --check-cfg=values(no_sync) --check-cfg=values(freebsd12) --check-cfg=values(freebsd13) --check-cfg=values(backtrace_in_libstd) --check-cfg=values(target_env,\\\"libnx\\\") --check-cfg=values(target_arch,\\\"asmjs\\\",\\\"spirv\\\",\\\"nvptx\\\",\\\"xtensa\\\") -Zmacro-backtrace -Clink-args=-Wl,-z,origin -Clink-args=-Wl,-rpath,$ORIGIN/../lib -Zunstable-options -Csplit-debuginfo=unpacked -Cprefer-dynamic -Cllvm-args=-import-instr-limit=10 -Zinline-mir -Clto=off -Cforce-unwind-tables=yes -Zcrate-attr=doc(html_root_url=\\\"https://doc.rust-lang.org/nightly/\\\")\" RUST_TEST_THREADS=\"10\" WINAPI_NO_BUNDLED_LIBRARIES=\"1\" __CARGO_DEFAULT_LIB_METADATA=\"bootstrapstd\" \"/Users/tmandry/code/rust/build/aarch64-apple-darwin/stage0/bin/cargo\" \"build\" \"--target\" \"riscv32imc-unknown-none-elf\" \"--release\" \"-Zcheck-cfg=names,values,output\" \"-Zbinary-dep-depinfo\" \"-j\" \"10\" \"-v\" \"-p\" \"alloc\" \"--manifest-path\" \"/Users/tmandry/code/rust/library/alloc/Cargo.toml\" \"--features\" \" compiler-builtins-mem\" \"-p\" \"alloc\" \"--message-format\" \"json-render-diagnostics\"\r\nexpected success, got: exit status: 101\r\nTraceback (most recent call last):\r\n  File \"/Users/tmandry/code/rust/./x.py\", line 32, in <module>\r\n    bootstrap.main()\r\n  File \"/Users/tmandry/code/rust/src/bootstrap/bootstrap.py\", line 1094, in main\r\n    bootstrap(args)\r\n  File \"/Users/tmandry/code/rust/src/bootstrap/bootstrap.py\", line 1069, in bootstrap\r\n    run(args, env=env, verbose=build.verbose, is_bootstrap=True)\r\n  File \"/Users/tmandry/code/rust/src/bootstrap/bootstrap.py\", line 184, in run\r\n    raise RuntimeError(err)\r\nRuntimeError: failed to run: /Users/tmandry/code/rust/build/bootstrap/debug/bootstrap build library/alloc --target riscv32imc-unknown-none-elf -v\r\n```\r\n\r\n</details>\r\n\r\n#110224 is related, but the resolution for that appears to be to fix the target definition. The definition for the riscv32imc target correctly lists the only supported option as `off`:\r\n\r\n```\r\n\u279c  rust git:(master) \u2717 rustc --target riscv32imc-unknown-none-elf --print split-debuginfo\r\noff\r\n```\r\n\r\nSo this might actually be a cargo bug. cc @ehuss", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112406/timeline", "performed_via_github_app": null, "state_reason": null}