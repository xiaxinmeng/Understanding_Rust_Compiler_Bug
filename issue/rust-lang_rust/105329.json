{"url": "https://api.github.com/repos/rust-lang/rust/issues/105329", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105329/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105329/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105329/events", "html_url": "https://github.com/rust-lang/rust/issues/105329", "id": 1477342440, "node_id": "I_kwDOAAsO6M5YDnTo", "number": 105329, "title": "Confusing error message for unable to infer types", "user": {"login": "grhkm21", "id": 83517584, "node_id": "MDQ6VXNlcjgzNTE3NTg0", "avatar_url": "https://avatars.githubusercontent.com/u/83517584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grhkm21", "html_url": "https://github.com/grhkm21", "followers_url": "https://api.github.com/users/grhkm21/followers", "following_url": "https://api.github.com/users/grhkm21/following{/other_user}", "gists_url": "https://api.github.com/users/grhkm21/gists{/gist_id}", "starred_url": "https://api.github.com/users/grhkm21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grhkm21/subscriptions", "organizations_url": "https://api.github.com/users/grhkm21/orgs", "repos_url": "https://api.github.com/users/grhkm21/repos", "events_url": "https://api.github.com/users/grhkm21/events{/privacy}", "received_events_url": "https://api.github.com/users/grhkm21/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-12-05T20:09:09Z", "updated_at": "2022-12-05T23:58:28Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Given the following [code](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=43c2179566e47a3d0540c3f91fde0672):\r\n\r\n```rust\r\nfn main() {\r\n    let s = \"2\";\r\n    let vec: Vec<Vec<usize>> = vec![vec![]; 10];\r\n\r\n    let f = |x: &str| x.parse().unwrap();\r\n    vec[f(s)].push(10);\r\n}\r\n\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0282]: type annotations needed\r\n --> min.rs:6:5\r\n  |\r\n6 |     vec[f(s)].push(10);\r\n  |     ^^^^^^^^^ cannot infer type\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0282`.\r\n```\r\n\r\nThe error message as it is is quite confusing, especially for beginners (like me). The _actual_ root cause of the error is at the definition of `f`, where the return type of `.parse` (and hence of `f`) cannot be infered, since there is no way for the compiler to tell for what types is `SliceIndex<>` implemented for.\r\n\r\n---\r\n**Suggestion 1:** I propose to improve the error message so that it points to the part `f(s)` specifically, and even better to also tell the user to specify the type of `f`, even though the compiler might not be able to tell what it should be.\r\n\r\n**Suggestion 2:** Not sure if it is a good idea, but adding a special warning / hint for indexing vectors might be nice, since this pattern is so common for beginners? Something like this already exists for a different type of error, I believe:\r\n\r\n```rust\r\nfn main() {\r\n    let s = \"2\";\r\n    let vec: Vec<Vec<usize>> = vec![vec![]; 10];\r\n\r\n    let f = |x: &str| x.parse::<isize>().unwrap();\r\n    vec[f(s)].push(10);\r\n}\r\n```\r\n\r\nGives the error\r\n\r\n```\r\nerror[E0277]: the type `[Vec<usize>]` cannot be indexed by `isize`\r\n --> min.rs:6:9\r\n  |\r\n6 |     vec[f(s)].push(10);\r\n  |         ^^^^ slice indices are of type `usize` or ranges of `usize`\r\n  |\r\n  = help: the trait `SliceIndex<[Vec<usize>]>` is not implemented for `isize`\r\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\r\n  = note: required for `Vec<Vec<usize>>` to implement `Index<isize>`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\n```\r\n\r\nThis is my first time submitting a report, hopefully I didn't get anything wrong ^_^", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105329/timeline", "performed_via_github_app": null, "state_reason": null}