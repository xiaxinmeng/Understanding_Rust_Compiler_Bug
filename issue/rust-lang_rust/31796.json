{"url": "https://api.github.com/repos/rust-lang/rust/issues/31796", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/31796/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/31796/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/31796/events", "html_url": "https://github.com/rust-lang/rust/issues/31796", "id": 135118113, "node_id": "MDU6SXNzdWUxMzUxMTgxMTM=", "number": 31796, "title": "u64 calculation incorrect on ARMv5", "user": {"login": "returntoreality", "id": 255667, "node_id": "MDQ6VXNlcjI1NTY2Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/255667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/returntoreality", "html_url": "https://github.com/returntoreality", "followers_url": "https://api.github.com/users/returntoreality/followers", "following_url": "https://api.github.com/users/returntoreality/following{/other_user}", "gists_url": "https://api.github.com/users/returntoreality/gists{/gist_id}", "starred_url": "https://api.github.com/users/returntoreality/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/returntoreality/subscriptions", "organizations_url": "https://api.github.com/users/returntoreality/orgs", "repos_url": "https://api.github.com/users/returntoreality/repos", "events_url": "https://api.github.com/users/returntoreality/events{/privacy}", "received_events_url": "https://api.github.com/users/returntoreality/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 55301954, "node_id": "MDU6TGFiZWw1NTMwMTk1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-Arm", "name": "O-Arm", "color": "6e6ec0", "default": false, "description": "Target: 32-bit Arm processors (armv6, armv7, thumb...), including 64-bit Arm in AArch32 state"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 49, "created_at": "2016-02-20T20:42:15Z", "updated_at": "2016-03-12T22:42:48Z", "closed_at": "2016-03-12T22:42:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've built a cross rust compiler for armv5tel-unknown-linux-gnueabi and using this target json\n\n``` json\n{\n    \"arch\": \"arm\",\n    \"cpu\": \"generic\",\n    \"llvm-target\": \"armv5tel-unknown-linux-gnu\",\n    \"os\": \"linux\",\n    \"vendor\": \"unknown\",\n    \"relocation-model\": \"pic\",\n    \"target-endian\": \"little\",\n    \"target-pointer-width\": \"32\",\n    \"exe-allocation-crate\": \"alloc_system\",\n    \"lib-allocation-crate\": \"alloc_system\",\n    \"linker\": \"armv5tel-unknown-linux-gnueabi-gcc\",\n    \"ar\": \"armv5tel-unknown-linux-ar\",\n    \"dynamic-linking\": true,\n    \"executables\": true,\n    \"features\": \"+v5te,+soft-float\",\n\n    \"c-compiler\": \"armv5tel-unknown-linux-gnueabi-gcc\",\n    \"c-flags\": \"-Wall -g -fPIC -O2\",\n    \"c-link-flags\": \"-shared -fPIC -g\",\n    \"c-triple\": \"armv5tel-linux-gnueabi\"\n}\n```\n\nand this mk/cfg/armv5tel-unknown-linux-gnueabi.mk:\n\n``` makefile\n# armv5tel-unknown-linux-gnueabi configuration\nCROSS_PREFIX_armv5tel-unknown-linux-gnueabi=armv5tel-unknown-linux-gnueabi-\nCC_armv5tel-unknown-linux-gnueabi=gcc\nCXX_armv5tel-unknown-linux-gnueabi=g++\nCPP_armv5tel-unknown-linux-gnueabi=gcc -E\nAR_armv5tel-unknown-linux-gnueabi=ar\nCFG_LIB_NAME_armv5tel-unknown-linux-gnueabi=lib$(1).so\nCFG_STATIC_LIB_NAME_armv5tel-unknown-linux-gnueabi=lib$(1).a\nCFG_LIB_GLOB_armv5tel-unknown-linux-gnueabi=lib$(1)-*.so\nCFG_LIB_DSYM_GLOB_armv5tel-unknown-linux-gnueabi=lib$(1)-*.dylib.dSYM\nCFG_JEMALLOC_CFLAGS_armv5tel-unknown-linux-gnueabi := -D__arm__ -mfloat-abi=soft -march=armv5te $(CFLAGS)\nCFG_GCCISH_CFLAGS_armv5tel-unknown-linux-gnueabi := -Wall -g -fPIC -D__arm__ -mfloat-abi=soft -march=armv5te $(CFLAGS)\nCFG_GCCISH_CXXFLAGS_armv5tel-unknown-linux-gnueabi := -fno-rtti $(CXXFLAGS)\nCFG_GCCISH_LINK_FLAGS_armv5tel-unknown-linux-gnueabi := -shared -fPIC -g\nCFG_GCCISH_DEF_FLAG_armv5tel-unknown-linux-gnueabi := -Wl,--export-dynamic,--dynamic-list=\nCFG_LLC_FLAGS_armv5tel-unknown-linux-gnueabi :=\nCFG_INSTALL_NAME_armv5tel-unknown-linux-gnueabi =\nCFG_EXE_SUFFIX_armv5tel-unknown-linux-gnueabi :=\nCFG_WINDOWSY_armv5tel-unknown-linux-gnueabi :=\nCFG_UNIXY_armv5tel-unknown-linux-gnueabi := 1\nCFG_LDPATH_armv5tel-unknown-linux-gnueabi :=\nCFG_RUN_armv5tel-unknown-linux-gnueabi=$(2)\nCFG_RUN_TARG_armv5tel-unknown-linux-gnueabi=$(call CFG_RUN_armv5tel-unknown-linux-gnueabi,,$(2))\nRUSTC_FLAGS_armv5tel-unknown-linux-gnueabi :=\nRUSTC_CROSS_FLAGS_armv5tel-unknown-linux-gnueabi :=\nCFG_GNU_TRIPLE_armv5tel-unknown-linux-gnueabi := armv5tel-unknown-linux-gnueabi\n```\n\nI've run into problems with the regex crate, where an assertion ( assert!(start <= end);  ByteClassSet::set_range(&mut self, start: u8, end: u8) in src/compile.rs ) failed when compiling a regex, which worked fine on x86_64. I saw the hash function that is implemented near the assertion, so I wanted to see if the u64 calculations are correct (the armv5 is 32bit). Here is the original function:\n\n``` rust\n    fn hash(&self, suffix: &SuffixCacheKey) -> usize {\n        // Basic FNV-1a hash as described:\n        // https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function\n        const FNV_PRIME: u64 = 1099511628211;\n        let mut h = 14695981039346656037;\n        h = (h ^ (suffix.from_inst as u64)).wrapping_mul(FNV_PRIME);\n        h = (h ^ (suffix.start as u64)).wrapping_mul(FNV_PRIME);\n        h = (h ^ (suffix.end as u64)).wrapping_mul(FNV_PRIME);\n        (h as usize) % self.table.len()\n    }\n```\n\nI tried this code:\n\n``` rust\nfn main() {\n    const FNV_PRIME: u64 = 1099511628211;\n    let mut h = 14695981039346656037;\n    h = (h ^ (10 as u64)).wrapping_mul(FNV_PRIME);\n    h = (h ^ (50 as u64)).wrapping_mul(FNV_PRIME);\n    h = (h ^ (60 as u64)).wrapping_mul(FNV_PRIME);\n    println!(\"Hello, world! {}\", h);\n}\n```\n\nWhich has different results on x86_64 and armv5\nx86_64:\nHello, world! 3470322685770408467\narmv5:\nHello, world! 3642012766597943866\n\nI used clang on the armv5 device to compile this simple C program which does the same calculations:\nCode:\n\n``` c\n#include <stdint.h>\n#include <stdio.h>\nint main () {\n    const uint64_t FNV_PRIME = 1099511628211;\n    uint64_t h = 14695981039346656037u;\n    h = (h ^ (10))*(FNV_PRIME);\n    h = (h ^ (50))*(FNV_PRIME);\n    h = (h ^ (60))*(FNV_PRIME);\n    printf(\"Hello, world! %llu \\n\", h);\n}\n```\n\nResult:\nHello, world! 3470322685770408467\n## Meta\n\nrustc 1.8.0-dev (15611f75c 2016-02-19)\nbinary: rustc\ncommit-hash: 15611f75ca49bd6c40ecbe84caa44cb74a9781f4\ncommit-date: 2016-02-19\nhost: x86_64-unknown-linux-gnu\nrelease: 1.8.0-dev\n", "closed_by": {"login": "returntoreality", "id": 255667, "node_id": "MDQ6VXNlcjI1NTY2Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/255667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/returntoreality", "html_url": "https://github.com/returntoreality", "followers_url": "https://api.github.com/users/returntoreality/followers", "following_url": "https://api.github.com/users/returntoreality/following{/other_user}", "gists_url": "https://api.github.com/users/returntoreality/gists{/gist_id}", "starred_url": "https://api.github.com/users/returntoreality/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/returntoreality/subscriptions", "organizations_url": "https://api.github.com/users/returntoreality/orgs", "repos_url": "https://api.github.com/users/returntoreality/repos", "events_url": "https://api.github.com/users/returntoreality/events{/privacy}", "received_events_url": "https://api.github.com/users/returntoreality/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/31796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/31796/timeline", "performed_via_github_app": null, "state_reason": "completed"}