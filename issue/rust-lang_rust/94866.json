{"url": "https://api.github.com/repos/rust-lang/rust/issues/94866", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94866/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94866/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94866/events", "html_url": "https://github.com/rust-lang/rust/issues/94866", "id": 1166961032, "node_id": "I_kwDOAAsO6M5FjmmI", "number": 94866, "title": "Invalid syntax (missing comma) in non-exhaustive patterns error's suggestion involving macros", "user": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-03-11T23:01:10Z", "updated_at": "2022-06-21T01:04:05Z", "closed_at": "2022-06-21T01:04:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Given the following code: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=b417dca9b7f8cab72fc583d6a97f97de\r\n\r\n```rust\r\nmacro_rules! m {\r\n    () => {\r\n        {}\r\n    };\r\n}\r\n\r\nenum Enum { A, B }\r\n\r\nfn main() {\r\n    match Enum::A {\r\n        Enum::A => m!()\r\n    }\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```console\r\nerror[E0004]: non-exhaustive patterns: `B` not covered\r\n  --> src/main.rs:10:11\r\n   |\r\n10 |     match Enum::A {\r\n   |           ^^^^^^^ pattern `B` not covered\r\n   |\r\nnote: `Enum` defined here\r\n  --> src/main.rs:7:16\r\n   |\r\n7  | enum Enum { A, B }\r\n   |      ----      ^ not covered\r\n   = note: the matched value is of type `Enum`\r\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown\r\n   |\r\n11 ~         Enum::A => m!()\r\n12 +         B => todo!()\r\n   |\r\n```\r\n\r\nRustc's suggested fix is:\r\n\r\n```rust\r\n    match Enum::A {\r\n        Enum::A => m!()\r\n        B => todo!()\r\n    }\r\n```\r\n\r\nwhich is not valid syntax:\r\n\r\n```console\r\nerror: expected one of `,`, `.`, `?`, `}`, or an operator, found `B`\r\n  --> src/main.rs:12:9\r\n   |\r\n11 |         Enum::A => m!()\r\n   |                 --     - expected one of `,`, `.`, `?`, `}`, or an operator\r\n   |                 |\r\n   |                 while parsing the `match` arm starting here\r\n12 |         B => todo!()\r\n   |         ^ unexpected token\r\n```\r\n\r\nThe diagnostic appears to be getting misled by the fact that `m!()` expands to a braced block, which would not ordinarily require a trailing comma if written inline in the match arm. The diagnostic correctly suggests the comma if the macro expands to something different than a braced block.\r\n\r\n```rust\r\nmacro_rules! m {\r\n    () => {\r\n        ()\r\n    };\r\n}\r\n```\r\n\r\n```console\r\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown\r\n   |\r\n11 ~         Enum::A => m!(),\r\n12 +         B => todo!()\r\n   |\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94866/timeline", "performed_via_github_app": null, "state_reason": "completed"}