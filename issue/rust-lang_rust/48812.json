{"url": "https://api.github.com/repos/rust-lang/rust/issues/48812", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48812/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48812/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48812/events", "html_url": "https://github.com/rust-lang/rust/issues/48812", "id": 302970310, "node_id": "MDU6SXNzdWUzMDI5NzAzMTA=", "number": 48812, "title": "Mismatched lifetime in trait function declaration is not detected", "user": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 693665463, "node_id": "MDU6TGFiZWw2OTM2NjU0NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-diagnostics", "name": "WG-diagnostics", "color": "c2e0c6", "default": false, "description": "Working group: diagnostics"}, {"id": 867483626, "node_id": "MDU6TGFiZWw4Njc0ODM2MjY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-fixed-by-NLL", "name": "NLL-fixed-by-NLL", "color": "f799ea", "default": false, "description": "Bugs fixed, but only when NLL is enabled."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-07T05:32:42Z", "updated_at": "2021-10-04T15:49:15Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the following code:\r\n```rust\r\npub trait FromStr<'a>: Sized {\r\n    type Err;\r\n    fn from_str(s: &'a str) -> Result<Self, Self::Err>;\r\n}\r\n\r\nstruct Foo<'a>(&'a str);\r\n\r\nimpl<'a> FromStr<'a> for Foo<'a> {\r\n    type Err = ();\r\n    fn from_str(s: &str) -> Result<Self, Self::Err> {\r\n        Ok(Foo(s))\r\n    }\r\n}\r\n```\r\n\r\nThe compiler errors out failing to infer an appropriate lifetime:\r\n```\r\n\r\nerror[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\r\n  --> src/main.rs:11:12\r\n   |\r\n11 |         Ok(Foo(s))\r\n   |            ^^^\r\n   |\r\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 10:5...\r\n  --> src/main.rs:10:5\r\n   |\r\n10 | /     fn from_str(s: &str) -> Result<Self, Self::Err> {\r\n11 | |         Ok(Foo(s))\r\n12 | |     }\r\n   | |_____^\r\nnote: ...so that reference does not outlive borrowed content\r\n  --> src/main.rs:11:16\r\n   |\r\n11 |         Ok(Foo(s))\r\n   |                ^\r\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 8:1...\r\n  --> src/main.rs:8:1\r\n   |\r\n8  | impl<'a> FromStr<'a> for Foo<'a> {\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   = note: ...so that the expression is assignable:\r\n           expected std::result::Result<Foo<'a>, _>\r\n              found std::result::Result<Foo<'_>, _>\r\n```\r\n\r\nBut the most immediate error is that the declaration of `from_str` doesn't match the trait definition, missing the lifetime bound on `&str` to match the lifetime associated with the trait.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48812/timeline", "performed_via_github_app": null, "state_reason": null}