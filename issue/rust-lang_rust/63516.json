{"url": "https://api.github.com/repos/rust-lang/rust/issues/63516", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63516/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63516/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63516/events", "html_url": "https://github.com/rust-lang/rust/issues/63516", "id": 480117242, "node_id": "MDU6SXNzdWU0ODAxMTcyNDI=", "number": 63516, "title": "Weird compiler behavior with in-lining of a function -> constant value arbitrary changed", "user": {"login": "2ndTaleStudio", "id": 43264484, "node_id": "MDQ6VXNlcjQzMjY0NDg0", "avatar_url": "https://avatars.githubusercontent.com/u/43264484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/2ndTaleStudio", "html_url": "https://github.com/2ndTaleStudio", "followers_url": "https://api.github.com/users/2ndTaleStudio/followers", "following_url": "https://api.github.com/users/2ndTaleStudio/following{/other_user}", "gists_url": "https://api.github.com/users/2ndTaleStudio/gists{/gist_id}", "starred_url": "https://api.github.com/users/2ndTaleStudio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/2ndTaleStudio/subscriptions", "organizations_url": "https://api.github.com/users/2ndTaleStudio/orgs", "repos_url": "https://api.github.com/users/2ndTaleStudio/repos", "events_url": "https://api.github.com/users/2ndTaleStudio/events{/privacy}", "received_events_url": "https://api.github.com/users/2ndTaleStudio/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-08-13T12:00:34Z", "updated_at": "2019-09-12T12:03:19Z", "closed_at": "2019-09-12T12:03:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there,\r\n\r\nI guess I found a weird bug in the compiler in the following scenario:\r\nI do have a function with the following signature and the first part of the contents given like this:\r\n```\r\npub(crate) fn send_message<T: MailboxMessage>(channel: MailboxChannel, message: &T) -> MailboxResult<&T> {\r\n    let msg_ptr: *const T = message;\r\n    let msg_ptr_uncached: u32 = (msg_ptr as u32) | 0xC000_0000;\r\n```\r\nWhen this function get's compiled into a binary and the compiler decides to inline it, the constant value for the OR operation is changed to 0xC000_000**8**. The assembly looks like this:\r\n```\r\n[...]\r\n8e08:\te5901000 \tldr\tr1, [r0]\r\n    8e0c:\te3510000 \tcmp\tr1, #0\r\n    8e10:\t4afffffc \tbmi\t8e08 <_ZN15ruspiro_mailbox7Mailbox13get_clockrate17hf8c4e9c932479a4dE+0x48>\r\n    8e14:\te59f1098 \tldr\tr1, [pc, #152]\t; 8eb4 <_ZN15ruspiro_mailbox7Mailbox13get_clockrate17hf8c4e9c932479a4dE+0xf4>\r\n    8e18:\te3850123 \torr\tr0, r5, #-1073741816\t; 0xc0000008\r\n[...]\r\n```\r\nThis lead to very subtile error as the resulting value is just wrong!\r\nInterestingly when forcing the compiler never to inline the function with ``#[inline(never)]``\r\nThe resulting assembly is correct when it comes to the OR operation:\r\n```\r\n8e7c:\te5901000 \tldr\tr1, [r0]\r\n    8e80:\te3510000 \tcmp\tr1, #0\r\n    8e84:\t4afffffc \tbmi\t8e7c <_ZN15ruspiro_mailbox9interface12send_message17he410abe85cc9a455E+0x1c>\r\n    8e88:\te59f207c \tldr\tr2, [pc, #124]\t; 8f0c <_ZN15ruspiro_mailbox9interface12send_message17he410abe85cc9a455E+0xac>\r\n    8e8c:\te6ef0076 \tuxtb\tr0, r6\r\n    8e90:\te1801005 \torr\tr1, r0, r5\r\n    8e94:\te3811103 \torr\tr1, r1, #-1073741824\t; 0xc0000000\r\n```\r\nForcing the compiler not to inline the function is a working solution in the scenario, but as it was quite hard to find this bug I'm wondering whether this subtle issue exists on other places in the binary as well which lead to bugs I've not yet seen in my application.\r\n\r\nI'm using rust-nightly and cross compiling from windows host machine to armv7-unknown-linux-gnueabihf\r\n```\r\nrustc 1.38.0-nightly (2d1a551e1 2019-08-08)\r\nrustup 1.18.3 (435397f48 2019-05-22)\r\ncargo 1.38.0-nightly (42a8c0adf 2019-08-07)\r\nxargo 0.3.13\r\n```\r\n \r\n", "closed_by": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63516/timeline", "performed_via_github_app": null, "state_reason": "completed"}