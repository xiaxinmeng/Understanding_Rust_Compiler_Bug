{"url": "https://api.github.com/repos/rust-lang/rust/issues/90448", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90448/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90448/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90448/events", "html_url": "https://github.com/rust-lang/rust/issues/90448", "id": 1040541310, "node_id": "I_kwDOAAsO6M4-BWZ-", "number": 90448, "title": "HRTBs Aren't Assignable for a non-&self method but work fine for &self methods in the same impl", "user": {"login": "TheBlueMatt", "id": 649246, "node_id": "MDQ6VXNlcjY0OTI0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheBlueMatt", "html_url": "https://github.com/TheBlueMatt", "followers_url": "https://api.github.com/users/TheBlueMatt/followers", "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}", "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions", "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs", "repos_url": "https://api.github.com/users/TheBlueMatt/repos", "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}", "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-10-31T17:56:22Z", "updated_at": "2021-10-31T17:56:22Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "We have a bunch of code that reads a full Rust crate via syn and auto-generates C bindings for everything by concretizing traits into structs with a list of function pointers and wrapper structs for all the native types. While updating our C bindings for our latest release which now uses HRTBs for some traits, we ended up in a state where we cannot call a non-`&self` method due to HRTBs not being assignable, but can call a `&self` method in the sample impl block on the same concrete type just fine.\r\n\r\nA simplified crate is included below, which fails in the playpen on latest nightly.\r\n\r\nhttps://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=4d0e229a84ebc2d8d3e5060b1e7b0bb9\r\n\r\n```rust\r\n// Minimized Rust Code\r\ntrait A<'a> {\r\n    type Inner: B + 'a;\r\n    fn get(&'a self) -> Self::Inner;\r\n}\r\ntrait B {}\r\ntrait C<TheB: B> {}\r\n\r\nstruct Thing<TheA, TheC> where TheA: for<'a> A<'a>, TheC: for<'a> C<<TheA as A<'a>>::Inner> {\r\n    a: TheA,\r\n    c: TheC,\r\n}\r\nimpl<TheA, TheC> Thing<TheA, TheC> where TheA: for<'a> A<'a>, TheC: for<'a> C<<TheA as A<'a>>::Inner> {\r\n  fn create(a: TheA, c: TheC) -> Self {\r\n      Self { a , c }\r\n  }\r\n  fn call(&self) {}\r\n}\r\n\r\n// Minimized auto-generated C mappings\r\n#[repr(C)]\r\npub struct BImpl {}\r\nimpl B for BImpl {}\r\n\r\n#[repr(C)]\r\npub struct AImpl {}\r\nimpl<'a> A<'a> for AImpl {\r\n    type Inner = BImpl;\r\n    fn get(&'a self) -> BImpl { BImpl {} }\r\n}\r\n\r\n#[repr(C)]\r\npub struct CImpl {}\r\nimpl C<BImpl> for CImpl {\r\n}\r\n\r\ntype ConcreteThing = Thing<AImpl, CImpl>;\r\n#[repr(C)] // Here to show what's going on, though the compilation errors happen with a direct Thing<> too\r\npub struct CThing { inner: ConcreteThing }\r\n\r\n// Static methods don't work?\r\n#[no_mangle]\r\npub extern \"C\" fn Create_Thing(a: AImpl, c: CImpl) -> CThing {\r\n    CThing { inner: ConcreteThing::create(a, c) }\r\n}\r\n\r\n// ... but non-static methods on the same work fine?\r\n#[no_mangle]\r\npub extern \"C\" fn Thing_call(obj: &CThing) {\r\n    obj.inner.call()\r\n}\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90448/timeline", "performed_via_github_app": null, "state_reason": null}