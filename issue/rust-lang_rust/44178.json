{"url": "https://api.github.com/repos/rust-lang/rust/issues/44178", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44178/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44178/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44178/events", "html_url": "https://github.com/rust-lang/rust/issues/44178", "id": 253922396, "node_id": "MDU6SXNzdWUyNTM5MjIzOTY=", "number": 44178, "title": "ICE on out of memory error", "user": {"login": "amarao", "id": 652496, "node_id": "MDQ6VXNlcjY1MjQ5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/652496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amarao", "html_url": "https://github.com/amarao", "followers_url": "https://api.github.com/users/amarao/followers", "following_url": "https://api.github.com/users/amarao/following{/other_user}", "gists_url": "https://api.github.com/users/amarao/gists{/gist_id}", "starred_url": "https://api.github.com/users/amarao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amarao/subscriptions", "organizations_url": "https://api.github.com/users/amarao/orgs", "repos_url": "https://api.github.com/users/amarao/repos", "events_url": "https://api.github.com/users/amarao/events{/privacy}", "received_events_url": "https://api.github.com/users/amarao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-30T08:45:12Z", "updated_at": "2017-08-30T13:17:07Z", "closed_at": "2017-08-30T13:17:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\n\r\nI've played with rust, and when I've tried to push too many things in `Vec`, it cause Rust to made out of memory error. That was fine. But that it said that there was an 'Ilegal instruction' and that core was dumped.\r\n\r\nFinal of strace output on the binary:\r\n```\r\nmmap(NULL, 1073741824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f8041200000\r\nmadvise(0x7f8081200000, 536870912, MADV_DONTNEED) = 0\r\nmmap(0x7f8081200000, 1073741824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f8001200000\r\nmunmap(0x7f8001200000, 1073741824)      = 0\r\nmmap(NULL, 2147483648, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = -1 ENOMEM (Cannot allocate memory)\r\nbrk(0x557a28000000)                     = 0x5579a7e5f000\r\nwrite(2, \"fatal runtime error: out of memo\"..., 35fatal runtime error: out of memory\r\n) = 35\r\n--- SIGILL {si_signo=SIGILL, si_code=ILL_ILLOPN, si_addr=0x5579a61c11ba} ---\r\n+++ killed by SIGILL (core dumped) +++\r\nIllegal instruction (core dumped)\r\n```\r\n\r\nFinal of backtrace in gdb:\r\n\r\n```\r\n#6  0x000055555556d258 in panic_unwind::__rust_maybe_catch_panic (f=0x5555555667f0 <std::panicking::try::do_call<fn(),()>>, data=0x2 <error: Cannot access memory at address 0x2>, data_ptr=0x7fffffffdc90, vtable_ptr=0x7fffffffdc88)\r\n    at /build/rustc-tTSICN/rustc-1.18.0+dfsg1/src/libpanic_unwind/lib.rs:98\r\n#7  0x00005555555667a8 in std::panicking::try<(),fn()> (f=<optimized out>) at /build/rustc-tTSICN/rustc-1.18.0+dfsg1/src/libstd/panicking.rs:433\r\n#8  0x000055555555d2a6 in std::panic::catch_unwind<fn(),()> (f=<optimized out>) at /build/rustc-tTSICN/rustc-1.18.0+dfsg1/src/libstd/panic.rs:361\r\n#9  std::rt::lang_start (main=0x55555555aca0 <ch8::main> \"UH\\211\\345H\\203\\354`1\\300\\211\u01f8\\004\\000\", argc=1, argv=0x7fffffffde18) at /build/rustc-tTSICN/rustc-1.18.0+dfsg1/src/libstd/rt.rs:57\r\n#10 0x000055555555ade3 in main ()\r\n```\r\n\r\ngdb's `layout asm` shows:\r\n```\r\n   \u25020x55555555d1ab <std::sys::imp::init::oom_handler+11>    mov    $0x2,%edi                                                                                                                                                                                                             \r\n   \u25020x55555555d1b0 <std::sys::imp::init::oom_handler+16>    mov    $0x23,%edx                                                                                                                                                                                                            \r\n   \u25020x55555555d1b5 <std::sys::imp::init::oom_handler+21>    callq  0x5555555599f8                                                                                                                                                                                                        \r\n  >\u25020x55555555d1ba <std::sys::imp::init::oom_handler+26>    ud2        \r\n```\r\n\r\nWhy Rust calls for 'ud2' instruction which is intended to cause invalid opcode exception?\r\n\r\nMy source code  (but I think, that any long chain of push'es would do this).\r\n\r\n```\r\nenum E {\r\n    Signed(i32),\r\n    Unsigned(u32)\r\n}\r\n\r\n\r\nfn messup(input: &E) -> i32 {\r\n  match *input{\r\n    E::Signed(_) => {return 0;},\r\n    E::Unsigned(_) => {return 1;},\r\n  }\r\n}\r\n\r\nfn main() {\r\n  let mut counter = 0;\r\n  let mut example: Vec<E> = vec![];\r\n  while counter < 100000000 {\r\n    example.push(E::Signed(1));\r\n    example.push(E::Unsigned(1));\r\n    //println!(\"{}\", messup(&example[counter]));\r\n    messup(&example[counter]);\r\n    counter = counter + 1;\r\n  }\r\n  //println!(\"{}, {}\", messup(&example[0]), messup(&example[1]))\r\n\r\n}\r\n```", "closed_by": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44178/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44178/timeline", "performed_via_github_app": null, "state_reason": "completed"}