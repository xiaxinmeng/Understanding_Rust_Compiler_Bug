{"url": "https://api.github.com/repos/rust-lang/rust/issues/96514", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96514/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96514/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96514/events", "html_url": "https://github.com/rust-lang/rust/issues/96514", "id": 1218612344, "node_id": "I_kwDOAAsO6M5Ioox4", "number": 96514, "title": "the type of `ProjectionElem::Field` is not correct wrt subtyping", "user": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234876, "node_id": "MDU6TGFiZWwyMzQ4NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-hard", "name": "E-hard", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Hard / a lot"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 3675472455, "node_id": "LA_kwDOAAsO6M7bE0JH", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-variance", "name": "A-variance", "color": "f7e101", "default": false, "description": "Area: Variance (https://doc.rust-lang.org/nomicon/subtyping.html)"}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2022-04-28T11:47:57Z", "updated_at": "2023-02-20T12:41:17Z", "closed_at": "2023-02-20T12:41:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```rust\nstruct Foo<T>(T); // `T` is covariant.\n\nfn foo<'b>(x: Foo<for<'a> fn(&'a ())>) {\n    let Foo(y): Foo<fn(&'b ())> = x;\n}\n\nfn main() {}\n```\nshould compile but errors with\n```\nerror[E0308]: mismatched types\n --> src/main.rs:4:13\n  |\n4 |     let Foo(y): Foo<fn(&'b ())> = x;\n  |             ^ one type is more general than the other\n  |\n  = note: expected fn pointer `for<'a> fn(&'a ())`\n             found fn pointer `fn(&())`\n```\nlooking at the mir of `foo` it becomes clear why that happens:\n```rust\nfn foo(_1: Foo<for<'a> fn(&'a ())>) -> () {\n    debug x => _1;                       // in scope 0 at src/main.rs:3:12: 3:13\n    let mut _0: ();                      // return place in scope 0 at src/main.rs:3:40: 3:40\n    let _2: fn(&()) as UserTypeProjection { base: UserType(0), projs: [Field(field[0], ())] }; // in scope 0 at src/main.rs:4:13: 4:14\n    scope 1 {\n        debug y => _2;                   // in scope 1 at src/main.rs:4:13: 4:14\n    }\n\n    bb0: {\n        AscribeUserType(_1, +, UserTypeProjection { base: UserType(1), projs: [] }); // scope 0 at src/main.rs:4:17: 4:32\n        StorageLive(_2);                 // scope 0 at src/main.rs:4:13: 4:14\n        _2 = (_1.0: fn(&()));            // scope 0 at src/main.rs:4:13: 4:14\n        _0 = const ();                   // scope 0 at src/main.rs:3:40: 5:2\n        StorageDead(_2);                 // scope 0 at src/main.rs:5:1: 5:2\n        return;                          // scope 0 at src/main.rs:5:2: 5:2\n    }\n}\n```\nnotice that in `_2 = (_1.0: fn(&())); ` the type of `_1.0` is actually `for<'a> fn(&'a ())`.\n\nPossible ways to fix this are:\n- correctly deal with subtyping when sanitizing field projections, note that they cannot just always be covariant.\n- change the type of the field to be the actual one during mir building, so that subtyping actually happens at the assignment\n- ~~always lazily recompute the type of the field instead of storing it in the mir~~\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"b-naber\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96514/timeline", "performed_via_github_app": null, "state_reason": "completed"}