{"url": "https://api.github.com/repos/rust-lang/rust/issues/108452", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108452/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108452/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108452/events", "html_url": "https://github.com/rust-lang/rust/issues/108452", "id": 1599701040, "node_id": "I_kwDOAAsO6M5fWYAw", "number": 108452, "title": "Unable to notice trait bound in trait type when implementing trait on generic", "user": {"login": "asdfcube", "id": 36262524, "node_id": "MDQ6VXNlcjM2MjYyNTI0", "avatar_url": "https://avatars.githubusercontent.com/u/36262524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asdfcube", "html_url": "https://github.com/asdfcube", "followers_url": "https://api.github.com/users/asdfcube/followers", "following_url": "https://api.github.com/users/asdfcube/following{/other_user}", "gists_url": "https://api.github.com/users/asdfcube/gists{/gist_id}", "starred_url": "https://api.github.com/users/asdfcube/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asdfcube/subscriptions", "organizations_url": "https://api.github.com/users/asdfcube/orgs", "repos_url": "https://api.github.com/users/asdfcube/repos", "events_url": "https://api.github.com/users/asdfcube/events{/privacy}", "received_events_url": "https://api.github.com/users/asdfcube/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-02-25T12:57:35Z", "updated_at": "2023-04-05T17:39:55Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Ran this code on playground:\r\n\r\n```rust\r\ntrait Tr {\r\n    type X: Copy;\r\n}\r\n\r\nenum EnA<V: Tr> {\r\n    A(V::X),\r\n    B(V)\r\n}\r\n\r\nstruct Str {\r\n    x: &'static str\r\n}\r\n\r\nimpl Tr for Str {\r\n    type X = &'static str;\r\n}\r\n\r\nimpl<V: Tr> From<V::X> for EnA<V> {\r\n    fn from(value: V::X)->EnA<V> {\r\n        EnA::A(value)\r\n    }\r\n}\r\n```\r\n\r\nExpected to see no error since `EnA` does not derive `Copy` but `Tr::X` requires deriving `Copy`.\r\n\r\nInstead, this happened:\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0119]: conflicting implementations of trait `From<EnA<_>>` for type `EnA<_>`\r\n  --> src/lib.rs:18:1\r\n   |\r\n18 | impl<V: Tr> From<V::X> for EnA<V>{\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: conflicting implementation in crate `core`:\r\n           - impl<T> From<T> for T;\r\n\r\nFor more information about this error, try `rustc --explain E0119`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\nLooks like the compiler fails to realize that `EnA` can never be used as `Tr::X` and claims it conflicts with the blanket derivation. In fact, if I do:\r\n```rs\r\ntrait IntoEnA<V: Tr> {}\r\n\r\nimpl<V: Tr> IntoEnA<V> for V::X {}\r\n\r\nimpl<V: Tr> IntoEnA<V> for EnA<V>{}\r\n```\r\nSimilar issue arise:\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0119]: conflicting implementations of trait `IntoEnA<_>` for type `EnA<_>`\r\n  --> src/lib.rs:22:1\r\n   |\r\n20 | impl<V: Tr> IntoEnA<V> for V::X {}\r\n   | ------------------------------- first implementation here\r\n21 |\r\n22 | impl<V: Tr> IntoEnA<V> for EnA<V>{}\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `EnA<_>`\r\n\r\nFor more information about this error, try `rustc --explain E0119`.\r\nerror: could not compile `playground` due to previous error\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108452/timeline", "performed_via_github_app": null, "state_reason": null}