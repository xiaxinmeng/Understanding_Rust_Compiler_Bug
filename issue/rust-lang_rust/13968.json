{"url": "https://api.github.com/repos/rust-lang/rust/issues/13968", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/13968/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/13968/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/13968/events", "html_url": "https://github.com/rust-lang/rust/issues/13968", "id": 32875195, "node_id": "MDU6SXNzdWUzMjg3NTE5NQ==", "number": 13968, "title": "Cannot do `use cratename` at top-level; only in sub-mods.  Error message unclear.", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-06T08:52:55Z", "updated_at": "2015-04-22T21:49:13Z", "closed_at": "2015-04-22T21:49:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Someone on IRC asked how to reference a `pub static` in an external crate, noting that `cratename::value` was not resolving (it turned out they were writing this reference in a sub-module, not the top-level library).\n\nWhile making sample code to illustrate the ways to get such code to work, I found an oddity.\n\n(Note: It is probably just something where our error messages need to be improved.  Though there may be a reasonable argument that `use cratename` should just work anywhere, to ease cut-and-pasting code from sub-modules into the top-level lib.)\n\nIt is valid to say `use cratename::value` and it is valid to say `use local_name = cratename;`, but it is not valid to say `use cratename;` in the top-most level of the library/program.  (It _is_ valid to say `use cratename` in an inner module within the lib; just not the lib itself.)\n\nFrom my tests, it appears that the reason for this is that an `extern crate cratename` declaration implicitly imports `cratename` into the relative-path roots for the top-level of the library.\n\nTest code:\n\n``` rust\n// n.rs\n#![crate_type=\"lib\"]\npub static C : int = 3;\n// end of n.rs\n\n// m.rs\nextern crate n;\n\n#[cfg(version1a)] use n::C;\n#[cfg(version2a)] use local_n = n;\n#[cfg(version3a)] use n;\n\n#[cfg(version1a)] pub fn read() -> int { C }\n#[cfg(version2a)] pub fn read() -> int { local_n::C }\n#[cfg(version3a)] pub fn read() -> int { n::C }\n#[cfg(version4a)] pub fn read() -> int { ::n::C }\n#[cfg(version5a)] pub fn read() -> int { n::C }\n#[cfg(version6a)] pub fn read() -> int { self::n::C }\n\n#[cfg(version1b)]\n#[cfg(version2b)]\n#[cfg(version3b)]\n#[cfg(version4b)]\n#[cfg(version5b)]\npub fn read() -> int { sub_m::read() }\n\nmod sub_m {\n    #[cfg(version1b)] use n::C;\n    #[cfg(version2b)] use local_n = n;\n    #[cfg(version3b)] use n;\n\n    #[cfg(version1b)] pub fn read() -> int { C }\n    #[cfg(version2b)] pub fn read() -> int { local_n::C }\n    #[cfg(version3b)] pub fn read() -> int { n::C }\n    #[cfg(version4b)] pub fn read() -> int { ::n::C }\n    #[cfg(version5b)] pub fn read() -> int { super::n::C }\n}\n\npub fn main() {\n    println!(\"n::C is {}\", read());\n}\n// end of m.rs\n```\n\nHere's what currently happens:\n\n```\n% rustc -L/tmp /tmp/n.rs\n% rustc --out-dir /tmp /tmp/n.rs\n% for v in version{1a,2a,4a,5a,6a,1b,2b,3b,4b,5b,3a} ; do echo $v; rustc -L/tmp --cfg $v /tmp/m.rs && ./m ; done\nversion1a\nn::C is 3\nversion2a\nn::C is 3\nversion4a\nn::C is 3\nversion5a\nn::C is 3\nversion6a\nn::C is 3\nversion1b\nn::C is 3\nversion2b\nn::C is 3\nversion3b\nn::C is 3\nversion4b\nn::C is 3\nversion5b\nn::C is 3\nversion3a\n/tmp/m.rs:6:23: 6:24 error: unresolved import (maybe you meant `n::*`?)\n/tmp/m.rs:6 #[cfg(version3a)] use n;\n                                  ^\nerror: aborting due to previous error\n% \n```\n\nThis is a hint that the problem is probably that we end up with some sort of resolve collision when we do `use n` at the top-level.  It is possible that the fix here would simply be a better error message explaining the problem.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/13968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/13968/timeline", "performed_via_github_app": null, "state_reason": "completed"}