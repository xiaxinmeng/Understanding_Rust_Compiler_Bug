{"url": "https://api.github.com/repos/rust-lang/rust/issues/5727", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/5727/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/5727/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/5727/events", "html_url": "https://github.com/rust-lang/rust/issues/5727", "id": 12825490, "node_id": "MDU6SXNzdWUxMjgyNTQ5MA==", "number": 5727, "title": "Expose LLVM types", "user": {"login": "auroranockert", "id": 49616, "node_id": "MDQ6VXNlcjQ5NjE2", "avatar_url": "https://avatars.githubusercontent.com/u/49616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auroranockert", "html_url": "https://github.com/auroranockert", "followers_url": "https://api.github.com/users/auroranockert/followers", "following_url": "https://api.github.com/users/auroranockert/following{/other_user}", "gists_url": "https://api.github.com/users/auroranockert/gists{/gist_id}", "starred_url": "https://api.github.com/users/auroranockert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auroranockert/subscriptions", "organizations_url": "https://api.github.com/users/auroranockert/orgs", "repos_url": "https://api.github.com/users/auroranockert/repos", "events_url": "https://api.github.com/users/auroranockert/events{/privacy}", "received_events_url": "https://api.github.com/users/auroranockert/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-04-04T23:16:26Z", "updated_at": "2013-08-15T17:42:45Z", "closed_at": "2013-08-15T17:42:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This might not be a super idea, but It would be really cool and useful in some cases to be able to expose LLVM types like i1, i128, fp128, vectors <16 x i8> etc. to rust, mainly to interface with LLVM intrinsics that take these types as parameters, but also to implement SIMD in Rust.\n\nI don't know how this would be implemented, but it doesn't really matter if it is ugly since only library code would ever need it (probably.)\n", "closed_by": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/5727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/5727/timeline", "performed_via_github_app": null, "state_reason": "completed"}