{"url": "https://api.github.com/repos/rust-lang/rust/issues/66580", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66580/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66580/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66580/events", "html_url": "https://github.com/rust-lang/rust/issues/66580", "id": 525989891, "node_id": "MDU6SXNzdWU1MjU5ODk4OTE=", "number": 66580, "title": "ICE with type_alias_impl_trait: ty_is_local invoked on unexpected type", "user": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-20T18:25:31Z", "updated_at": "2019-11-29T11:35:01Z", "closed_at": "2019-11-29T11:35:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This code:\r\n```rust\r\n#![feature(type_alias_impl_trait)]\r\n\r\nfn main() {\r\n    let mut lazy = Wrap::default();\r\n    let a: bool = lazy.call();\r\n    assert_eq!(a, false);\r\n}\r\n\r\ntype Closure<T> = impl FnOnce() -> T;\r\n\r\nfn closure<T: Default>() -> Closure<T> {\r\n    || T::default()\r\n}\r\n\r\nstruct Wrap<T, F>(F, std::marker::PhantomData<dyn Fn() -> T>);\r\n\r\nimpl<T> Wrap<T, Closure<T>> {\r\n    fn default() -> Self\r\n    where\r\n        T: Default,\r\n    {\r\n        Self(closure::<T>(), std::marker::PhantomData)\r\n    }\r\n}\r\n\r\nimpl<T, F> Wrap<T, F> {\r\n    fn call(self) -> T \r\n    where\r\n        F: FnOnce() -> T,\r\n    {\r\n        self.0()\r\n    }\r\n}\r\n```\r\n([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=48226942be9f3e3761318aa28c27579c))\r\n\r\nCauses an ICE.\r\n\r\n<details>\r\n  <summary>backtrace</summary>\r\n<pre>\r\n   Compiling playground v0.0.1 (/playground)\r\nerror: internal compiler error: src/librustc/traits/coherence.rs:534: ty_is_local invoked on unexpected type: [closure@src/main.rs:12:5: 12:20]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:892:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:84\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:61\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1030\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1412\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:65\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:50\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:188\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:205\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:468\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_context_opt\r\n  18: rustc::ty::context::tls::with_opt\r\n  19: rustc::util::bug::opt_span_bug_fmt\r\n  20: rustc::util::bug::bug_fmt\r\n  21: rustc::traits::coherence::ty_is_non_local_constructor\r\n  22: rustc::traits::coherence::ty_is_non_local\r\n  23: rustc::traits::coherence::orphan_check_trait_ref\r\n  24: rustc::traits::coherence::trait_ref_is_knowable\r\n  25: rustc::traits::select::SelectionContext::candidate_from_obligation_no_cache\r\n  26: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  27: rustc::traits::select::SelectionContext::candidate_from_obligation\r\n  28: rustc::traits::select::SelectionContext::evaluate_stack\r\n  29: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  30: rustc::traits::select::SelectionContext::evaluate_predicate_recursively\r\n  31: rustc::infer::InferCtxt::probe\r\n  32: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut\r\n  33: <core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::try_fold\r\n  34: rustc::traits::coherence::overlap_within_probe\r\n  35: rustc::infer::InferCtxt::probe\r\n  36: rustc::traits::coherence::overlap\r\n  37: rustc::ty::context::GlobalCtxt::enter_local\r\n  38: rustc::traits::coherence::overlapping_impls\r\n  39: <rustc_typeck::coherence::inherent_impls_overlap::InherentOverlapChecker as rustc::hir::itemlikevisit::ItemLikeVisitor>::visit_item\r\n  40: rustc::hir::Crate::visit_all_item_likes\r\n  41: rustc_typeck::coherence::inherent_impls_overlap::crate_inherent_impls_overlap_check\r\n  42: rustc::ty::query::__query_compute::crate_inherent_impls_overlap_check\r\n  43: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  44: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  45: rustc_typeck::check_crate::{{closure}}::{{closure}}\r\n  46: rustc::util::common::time\r\n  47: rustc_typeck::check_crate\r\n  48: rustc_interface::passes::analysis\r\n  49: rustc::ty::query::__query_compute::analysis\r\n  50: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  51: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  52: rustc::ty::context::tls::enter_global\r\n  53: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  54: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  55: rustc_interface::passes::BoxedGlobalCtxt::enter\r\n  56: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  57: std::thread::local::LocalKey<T>::with\r\n  58: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.41.0-nightly (618b01f9f 2019-11-19) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [crate_inherent_impls_overlap_check] check for overlap between inherent impls defined in this crate\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n</pre>\r\n</details>", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66580/timeline", "performed_via_github_app": null, "state_reason": "completed"}