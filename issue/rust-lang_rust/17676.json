{"url": "https://api.github.com/repos/rust-lang/rust/issues/17676", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/17676/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/17676/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/17676/events", "html_url": "https://github.com/rust-lang/rust/issues/17676", "id": 44543045, "node_id": "MDU6SXNzdWU0NDU0MzA0NQ==", "number": 17676, "title": "Rust Guide: incorrect explanation of Result.ok() / Option.expect()", "user": {"login": "tcard", "id": 727422, "node_id": "MDQ6VXNlcjcyNzQyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/727422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tcard", "html_url": "https://github.com/tcard", "followers_url": "https://api.github.com/users/tcard/followers", "following_url": "https://api.github.com/users/tcard/following{/other_user}", "gists_url": "https://api.github.com/users/tcard/gists{/gist_id}", "starred_url": "https://api.github.com/users/tcard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tcard/subscriptions", "organizations_url": "https://api.github.com/users/tcard/orgs", "repos_url": "https://api.github.com/users/tcard/repos", "events_url": "https://api.github.com/users/tcard/events{/privacy}", "received_events_url": "https://api.github.com/users/tcard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-01T09:12:30Z", "updated_at": "2014-10-03T07:27:55Z", "closed_at": "2014-10-03T07:27:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "> Rust provides a method on these IoResult<T>s called ok(), which does the same thing as our match statement, but assuming that we have a valid value. If we don't, it will terminate our program. In this case, if we can't get input, our program doesn't work, so we're okay with that. In most cases, we would want to handle the error case explicitly. The result of ok() has a method, expect(), which allows us to give an error message if this crash happens.\n\nIf I'm not mistaken, [`ok()` just turns the `IoResult` into an `Option`](http://doc.rust-lang.org/std/result/enum.Result.html#method.ok). It won't terminate the program. It's [`expect()` which fails](http://doc.rust-lang.org/std/option/enum.Option.html#method.expect) or unwraps the value.\n\nAlso, wouldn't a call to the IoResult's [`unwrap()`](http://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap) be more direct? Although the custom failure message would be lost.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/17676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/17676/timeline", "performed_via_github_app": null, "state_reason": "completed"}