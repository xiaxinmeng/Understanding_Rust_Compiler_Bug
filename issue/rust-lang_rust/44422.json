{"url": "https://api.github.com/repos/rust-lang/rust/issues/44422", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44422/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44422/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44422/events", "html_url": "https://github.com/rust-lang/rust/issues/44422", "id": 256277492, "node_id": "MDU6SXNzdWUyNTYyNzc0OTI=", "number": 44422, "title": "Segfault on nightly starting from 2017-07-15-x86_64-unknown-linux-gnu", "user": {"login": "3Hren", "id": 969900, "node_id": "MDQ6VXNlcjk2OTkwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/969900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/3Hren", "html_url": "https://github.com/3Hren", "followers_url": "https://api.github.com/users/3Hren/followers", "following_url": "https://api.github.com/users/3Hren/following{/other_user}", "gists_url": "https://api.github.com/users/3Hren/gists{/gist_id}", "starred_url": "https://api.github.com/users/3Hren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/3Hren/subscriptions", "organizations_url": "https://api.github.com/users/3Hren/orgs", "repos_url": "https://api.github.com/users/3Hren/repos", "events_url": "https://api.github.com/users/3Hren/events{/privacy}", "received_events_url": "https://api.github.com/users/3Hren/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 100522, "node_id": "MDU6TGFiZWwxMDA1MjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-crash", "name": "I-crash", "color": "e10c02", "default": false, "description": "Issue: The compiler crashes (SIGSEGV, SIGABRT, etc). Use I-ICE instead when the compiler panics."}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-09-08T14:47:10Z", "updated_at": "2017-10-27T17:23:27Z", "closed_at": "2017-10-27T15:15:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "One of my nightly-only projects segfaults when compiling with nightly compiler starting from 2017-07-15-x86_64-unknown-linux-gnu till now.\r\n\r\nThis reproduces only on release builds (with opt-level > 1 and panic=abort). Debug builds works without crashing.\r\n\r\nThe last successful build was on nightly-2017-07-14-x86_64-unknown-linux-gnu.\r\n\r\n```gdb\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n[Switching to Thread 0x7ffff69ff700 (LWP 24951)]\r\n0x00005555557381c6 in drop_in_place<alloc::boxed::Box<Error>> () at /checkout/src/libcore/ptr.rs:60\r\n60\t/checkout/src/libcore/ptr.rs: No such file or directory.\r\n(gdb) bt\r\n#0  0x00005555557381c6 in drop_in_place<alloc::boxed::Box<Error>> () at /checkout/src/libcore/ptr.rs:60\r\n#1  drop_in_place<std::io::error::Custom> () at /checkout/src/libcore/ptr.rs:60\r\n#2  drop_in_place<alloc::boxed::Box<std::io::error::Custom>> () at /checkout/src/libcore/ptr.rs:60\r\n#3  drop_in_place<std::io::error::Repr> () at /checkout/src/libcore/ptr.rs:60\r\n#4  drop_in_place<std::io::error::Error> () at /checkout/src/libcore/ptr.rs:60\r\n#5  drop_in_place<rmpv::decode::Error> () at /checkout/src/libcore/ptr.rs:60\r\n#6  poll_recv<tokio_core::net::tcp::TcpStream> (self=<optimized out>) at /home/esafronov/code/cocaine-framework-rust/src/lib.rs:570\r\n#7  cocaine::{{impl}}::poll<tokio_core::net::tcp::TcpStream> (self=<optimized out>) at /home/esafronov/code/cocaine-framework-rust/src/lib.rs:634\r\n#8  0x0000555555741eaf in cocaine::{{impl}}::poll<cocaine::resolve::FixedResolver> (self=<optimized out>) at /home/esafronov/code/cocaine-framework-rust/src/lib.rs:1153\r\n#9  0x000055555574289c in cocaine::{{impl}}::poll<cocaine::resolve::FixedResolver> (self=<optimized out>) at /home/esafronov/code/cocaine-framework-rust/src/lib.rs:1081\r\n#10 0x0000555555728bf8 in futures::future::map_err::{{impl}}::poll<(),cocaine::Supervisor<cocaine::resolve::FixedResolver>,closure> (self=0x7ffff6252000)\r\n    at /home/esafronov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.15/src/future/map_err.rs:30\r\n#11 0x000055555576eb5a in poll<Future> (self=<optimized out>) at /home/esafronov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.15/src/future/mod.rs:113\r\n#12 {{closure}}<alloc::boxed::Box<Future>,alloc::arc::Arc<tokio_core::reactor::MySetReadiness>> (f=<optimized out>)\r\n    at /home/esafronov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.15/src/task_impl/mod.rs:289\r\n#13 {{closure}}<alloc::boxed::Box<Future>,closure,core::result::Result<futures::poll::Async<()>, ()>> ()\r\n    at /home/esafronov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.15/src/task_impl/mod.rs:350\r\n#14 set<closure,core::result::Result<futures::poll::Async<()>, ()>> (task=<optimized out>, f=...) at /home/esafronov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.15/src/task_impl/std/mod.rs:79\r\n#15 enter<alloc::boxed::Box<Future>,closure,core::result::Result<futures::poll::Async<()>, ()>> (self=<optimized out>, unpark=..., f=...)\r\n    at /home/esafronov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.15/src/task_impl/mod.rs:350\r\n#16 poll_future_notify<alloc::boxed::Box<Future>,alloc::arc::Arc<tokio_core::reactor::MySetReadiness>> (id=0, self=<optimized out>, notify=<optimized out>)\r\n    at /home/esafronov/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.15/src/task_impl/mod.rs:289\r\n#17 {{closure}} () at /home/esafronov/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.8/src/reactor/mod.rs:356\r\n#18 set<tokio_core::reactor::Core,closure,core::result::Result<futures::poll::Async<()>, ()>> (self=<optimized out>, t=<optimized out>, f=...)\r\n    at /home/esafronov/.cargo/registry/src/github.com-1ecc6299db9ec823/scoped-tls-0.1.0/src/lib.rs:135\r\n#19 dispatch_task (self=<optimized out>, token=<optimized out>) at /home/esafronov/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.8/src/reactor/mod.rs:355\r\n#20 dispatch (self=<optimized out>, token=..., ready=...) at /home/esafronov/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.8/src/reactor/mod.rs:316\r\n#21 tokio_core::reactor::{{impl}}::poll (self=<optimized out>, max_wait=...) at /home/esafronov/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.8/src/reactor/mod.rs:304\r\n#22 0x00005555557142ee in run<futures::stream::fold::Fold<futures::stream::and_then::AndThen<futures::sync::mpsc::UnboundedReceiver<cocaine::logging::Event>, closure, alloc::boxed::Box<futures::future::result_::FutureResult<(), ()>>>, closure, futures::future::result_::FutureResult<i32, ()>, i32>> (self=<optimized out>, f=...)\r\n    at /home/esafronov/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-core-0.1.8/src/reactor/mod.rs:241\r\n#23 {{closure}} () at /home/esafronov/code/cocaine-framework-rust/src/logging.rs:55\r\n#24 std::sys_common::backtrace::__rust_begin_short_backtrace<closure,()> (f=...) at /checkout/src/libstd/sys_common/backtrace.rs:136\r\n#25 0x00005555557147c8 in {{closure}}<closure,()> () at /checkout/src/libstd/thread/mod.rs:364\r\n#26 call_once<(),closure> (self=..., _args=<optimized out>) at /checkout/src/libstd/panic.rs:296\r\n#27 std::panicking::try::do_call<std::panic::AssertUnwindSafe<closure>,()> (data=<optimized out>) at /checkout/src/libstd/panicking.rs:479\r\n#28 0x00005555557b86cc in panic_abort::__rust_maybe_catch_panic () at /checkout/src/libpanic_abort/lib.rs:40\r\n#29 0x0000555555723813 in try<(),std::panic::AssertUnwindSafe<closure>> (f=...) at /checkout/src/libstd/panicking.rs:458\r\n#30 catch_unwind<std::panic::AssertUnwindSafe<closure>,()> (f=...) at /checkout/src/libstd/panic.rs:361\r\n#31 {{closure}}<closure,()> () at /checkout/src/libstd/thread/mod.rs:363\r\n#32 alloc::boxed::{{impl}}::call_box<(),closure> (self=0x7ffff6a27000, args=<optimized out>) at /checkout/src/liballoc/boxed.rs:651\r\n#33 0x00005555557b0aac in call_once<(),()> () at /checkout/src/liballoc/boxed.rs:661\r\n#34 start_thread () at /checkout/src/libstd/sys_common/thread.rs:21\r\n#35 std::sys::imp::thread::{{impl}}::new::thread_start () at /checkout/src/libstd/sys/unix/thread.rs:84\r\n#36 0x00007ffff77b8182 in start_thread (arg=0x7ffff69ff700) at pthread_create.c:312\r\n#37 0x00007ffff72cf47d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\r\n```\r\n\r\nUpd: this reproduces also on OS X.", "closed_by": {"login": "3Hren", "id": 969900, "node_id": "MDQ6VXNlcjk2OTkwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/969900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/3Hren", "html_url": "https://github.com/3Hren", "followers_url": "https://api.github.com/users/3Hren/followers", "following_url": "https://api.github.com/users/3Hren/following{/other_user}", "gists_url": "https://api.github.com/users/3Hren/gists{/gist_id}", "starred_url": "https://api.github.com/users/3Hren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/3Hren/subscriptions", "organizations_url": "https://api.github.com/users/3Hren/orgs", "repos_url": "https://api.github.com/users/3Hren/repos", "events_url": "https://api.github.com/users/3Hren/events{/privacy}", "received_events_url": "https://api.github.com/users/3Hren/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44422/timeline", "performed_via_github_app": null, "state_reason": "completed"}