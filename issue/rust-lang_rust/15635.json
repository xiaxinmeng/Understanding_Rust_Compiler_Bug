{"url": "https://api.github.com/repos/rust-lang/rust/issues/15635", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/15635/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/15635/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/15635/events", "html_url": "https://github.com/rust-lang/rust/issues/15635", "id": 37727449, "node_id": "MDU6SXNzdWUzNzcyNzQ0OQ==", "number": 15635, "title": "TreeMap: `find_with` is surprising", "user": {"login": "olivren", "id": 4093615, "node_id": "MDQ6VXNlcjQwOTM2MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4093615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olivren", "html_url": "https://github.com/olivren", "followers_url": "https://api.github.com/users/olivren/followers", "following_url": "https://api.github.com/users/olivren/following{/other_user}", "gists_url": "https://api.github.com/users/olivren/gists{/gist_id}", "starred_url": "https://api.github.com/users/olivren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olivren/subscriptions", "organizations_url": "https://api.github.com/users/olivren/orgs", "repos_url": "https://api.github.com/users/olivren/repos", "events_url": "https://api.github.com/users/olivren/events{/privacy}", "received_events_url": "https://api.github.com/users/olivren/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-07-12T19:59:13Z", "updated_at": "2014-09-16T03:19:18Z", "closed_at": "2014-09-16T03:19:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As far as I understand, the merged PR #15220 introduces the methods `find_with` and `find_mut_with` on `TreeMap`,  in order to provide a general solution to the problem of finding an equivalent string key. In particular, these methods make it possible to search a `TreeMap` using `String` keys to be searched without performing an allocation, using `t.find_with(|k| \"test\".cmp(&k.as_slice())`.\n\nI see an issue here : this method only works if the logic of the closure passed as an argument is exactly the same than the logic used to provide the natural ordering of the keys. Using a different logic in the comparision closure does not work as expected, and gives random result.\n\nThe documentation on these methods don't warn about this very strong restriction, and instead they present a wrong use of the API : using these methods to find a string by performing case insensitive comparisions. It happens that the provided example works as expected, but it is easy to modify this example such that the search does not find the expected result.\n\nHere is a variation of the provided example:\n\n``` rust\nextern crate collections;\nfn main() {\n    use std::ascii::StrAsciiExt;\n\n    let mut t = collections::treemap::TreeMap::new();\n    t.insert(\"a1\", \"a1\");\n    t.insert(\"A2\", \"a2\");\n\n    let ua_key = \"a1\";\n    let ua = t.find_with(|&k| {\n       ua_key.cmp(&k.to_ascii_lower().as_slice())\n    });\n\n    println!(\"{}\", ua);\n}\n```\n\nThis prints `None`.\n", "closed_by": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/15635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/15635/timeline", "performed_via_github_app": null, "state_reason": "completed"}