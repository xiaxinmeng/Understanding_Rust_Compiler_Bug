{"url": "https://api.github.com/repos/rust-lang/rust/issues/112460", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112460/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112460/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112460/events", "html_url": "https://github.com/rust-lang/rust/issues/112460", "id": 1749777839, "node_id": "I_kwDOAAsO6M5oS32v", "number": 112460, "title": "Neon miscompilation in stdarch tests with SeparateConstSwitch enabled", "user": {"login": "jacobbramley", "id": 5206553, "node_id": "MDQ6VXNlcjUyMDY1NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5206553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacobbramley", "html_url": "https://github.com/jacobbramley", "followers_url": "https://api.github.com/users/jacobbramley/followers", "following_url": "https://api.github.com/users/jacobbramley/following{/other_user}", "gists_url": "https://api.github.com/users/jacobbramley/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacobbramley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacobbramley/subscriptions", "organizations_url": "https://api.github.com/users/jacobbramley/orgs", "repos_url": "https://api.github.com/users/jacobbramley/repos", "events_url": "https://api.github.com/users/jacobbramley/events{/privacy}", "received_events_url": "https://api.github.com/users/jacobbramley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1966877457, "node_id": "MDU6TGFiZWwxOTY2ODc3NDU3", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-critical", "name": "P-critical", "color": "eb6420", "default": false, "description": "Critical priority"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-06-09T12:12:18Z", "updated_at": "2023-06-14T15:36:50Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Some stdarch Neon tests have started [failing](https://github.com/rust-lang/stdarch/actions/runs/5208601671/jobs/9397389795), I think due to a code generation error. An example is [`test_vld2q_dup_f32`](https://github.com/rust-lang/stdarch/blob/7c318a9221c5c225694cbee429a48ab2a6babc68/crates/core_arch/src/arm_shared/neon/generated.rs#L34905), and this is the first one hit with an unfiltered `cargo test`.\r\n\r\nI've not yet been able to reduce the stdarch test down to a standalone example. (At least, not one that also triggers this bug.) Inside the Docker container that stdarch uses for its tests (`ci/run-docker.sh armv7-unknown-linux-gnueabihf`):\r\n\r\n```\r\n$ export RUSTFLAGS=\"-D warnings -Z merge-functions=disabled  -Ctarget-feature=+neon\"\r\n$ cargo test --manifest-path=crates/core_arch/Cargo.toml --target=armv7-unknown-linux-gnueabihf --release test_vld2q_dup_f32\r\n   ...\r\n\r\nfailures:\r\n\r\n---- core_arch::arm_shared::neon::generated::test::test_vld2q_dup_f32 stdout ----\r\nthread 'core_arch::arm_shared::neon::generated::test::test_vld2q_dup_f32' panicked at 'assertion failed: `(left == right)`\r\n  left: `[f32x4(1.9991541, 1.9991536, 1.0, 1.0), f32x4(0.0, 0.0, 1.0, 1.0)]`,\r\n right: `[f32x4(1.0, 1.0, 1.0, 1.0), f32x4(1.0, 1.0, 1.0, 1.0)]`', crates/core_arch/src/arm_shared/neon/generated.rs:34910:9\r\n...\r\n```\r\n\r\nThe first two lanes of each result vector actually seem to be uninitialised; in my brief investigation I've seen different values there.\r\n\r\nOne curiosity is that the the symbol (`test_vld2q_dup_f32`) doesn't actually exist in the generated ELF, but I think I found the code using GDB (named `core::ops::function::FnOnce::call_once::h81d7cb0a06a6ffb8`). I assume this is a consequence of the optimisation path, or some kind of inlining. In any case, the code does look incorrect, at a glance:\r\n\r\n```\r\n     a737c:       f4e30daf        vld2.32 {d16[],d18[]}, [r3]\r\n     a7380:       f4a33daf        vld2.32 {d3[],d5[]}, [r3]\r\n     a7384:       eeb42a40        vcmp.f32        s4, s0\r\n...\r\n(then chained comparisons of `s5, s0`, `s6, s0` etc)\r\n```\r\n\r\nThat `vcmp.f32` compares `s4` (which is the lower 32 bits of `d2`), but we never loaded that. (It isn't written earlier in the function either.)\r\n\r\nA good compilation stores the results back to an array an calls `core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq`, so perhaps this is an inlining error.\r\n\r\n### Meta\r\n\r\nThe first failing nightly is `nightly-2023-06-02` (`d59363ad0`), but I bisected the problem down to [89bf30e73d97](https://github.com/rust-lang/rust/pull/112040/commits/89bf30e73d970ba7d0a202d35c16566a27dcf527). However, that commit simply enabled an optimisation pass. Manually enabling the pass in older nightlies shows exactly the same fault.\r\n\r\nThe following reproduces the bug on older nightlies (at least back to `nightly-2023-03-25`):\r\n\r\n```\r\n$ export RUSTFLAGS=\"-D warnings -Z merge-functions=disabled  -Ctarget-feature=+neon -Zmir-opt-level=4\"\r\n$ cargo test --manifest-path=crates/core_arch/Cargo.toml --target=armv7-unknown-linux-gnueabihf --release test_vld2q_dup_f32\r\n...\r\n```\r\n\r\nI think this is _probably_ a rustc bug, but I have not ruled out a bug in stdarch or some SIMD infrastructure it uses.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112460/timeline", "performed_via_github_app": null, "state_reason": null}