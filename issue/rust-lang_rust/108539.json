{"url": "https://api.github.com/repos/rust-lang/rust/issues/108539", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108539/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108539/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108539/events", "html_url": "https://github.com/rust-lang/rust/issues/108539", "id": 1601670386, "node_id": "I_kwDOAAsO6M5fd4zy", "number": 108539, "title": "diagnosics for expression in fn param could be improved", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-02-27T17:55:41Z", "updated_at": "2023-03-20T10:09:17Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "### Code\n\n```Rust\npub fn a(a: String::from(\"hi\")) {}\n\nfn main() {}\n```\n\n\n### Current output\n\n```Shell\nerror: expected type, found `\"hi\"`\n --> src/main.rs:1:26\n  |\n1 | pub fn a(a: String::from(\"hi\")) {}\n  |                          ^^^^ expected type\n\nerror: expected one of `->`, `where`, or `{`, found `)`\n --> src/main.rs:1:31\n  |\n1 | pub fn a(a: String::from(\"hi\")) {}\n  |                               ^ expected one of `->`, `where`, or `{`\n```\n\n\n### Desired output\n\n```Shell\nerror: expected type, found `\"hi\"`\n --> src/main.rs:1:26\n  |\n1 | pub fn a(a: String::from(\"hi\")) {}\n  |             ^^^^^^^^^^^^^^^^^^ expected type, found Expression\n```\n\n\n### Rationale and extra context\n\nperhaps we could span the entire expression?\nalso the second error seems a bit weird. Why do we expect a `->` or `where` when `fn a(a: Ty) {}` is technically valid?\n\n### Other cases\n\n_No response_\n\n### Anything else?\n\n_No response_\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":null}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108539/timeline", "performed_via_github_app": null, "state_reason": null}