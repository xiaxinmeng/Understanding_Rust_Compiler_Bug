{"url": "https://api.github.com/repos/rust-lang/rust/issues/93182", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93182/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93182/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93182/events", "html_url": "https://github.com/rust-lang/rust/issues/93182", "id": 1111159495, "node_id": "I_kwDOAAsO6M5COvLH", "number": 93182, "title": "Const Default with `generic_const_exprs` & super trait", "user": {"login": "mriise", "id": 15883679, "node_id": "MDQ6VXNlcjE1ODgzNjc5", "avatar_url": "https://avatars.githubusercontent.com/u/15883679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mriise", "html_url": "https://github.com/mriise", "followers_url": "https://api.github.com/users/mriise/followers", "following_url": "https://api.github.com/users/mriise/following{/other_user}", "gists_url": "https://api.github.com/users/mriise/gists{/gist_id}", "starred_url": "https://api.github.com/users/mriise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mriise/subscriptions", "organizations_url": "https://api.github.com/users/mriise/orgs", "repos_url": "https://api.github.com/users/mriise/repos", "events_url": "https://api.github.com/users/mriise/events{/privacy}", "received_events_url": "https://api.github.com/users/mriise/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-01-22T01:13:41Z", "updated_at": "2023-01-17T18:26:26Z", "closed_at": "2023-01-17T18:26:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n// must be enabled\r\n#![feature(generic_const_exprs)]\r\n\r\n// this causes an ICE!!!\r\npub const CONST: usize = 64;\r\npub trait Tr<const S: usize = CONST>: Foo<A<S>> {}\r\n\r\n// no ICE\r\n// pub trait Digest<const S: usize = 64>: FromH<A<S>> {} \r\n\r\nstruct St ();\r\n\r\nstruct A<const S: usize> ([u8; S]);\r\n\r\npub trait Foo<T> {\r\n    fn foo(_: T);\r\n}\r\n\r\nimpl<const S: usize> Foo<A<S>> for St {\r\n    fn foo(_: A<S>) {\r\n        todo!()\r\n    }\r\n}\r\n\r\npub trait FooBar {\r\n    type Tr: Tr;\r\n}\r\n\r\n```\r\n\r\nplayground: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=1a8997314db8560b8723adc2af0c07a3\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.60.0-nightly (777bb86bc 2022-01-20) running on x86_64-unknown-linux-gnu\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/subst.rs:588:17: const parameter `S/#1` (Const { ty: usize, val: Param(S/#1) }/1) out of range when substituting substs=[<Self as FooBar>::Tr]\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/777bb86bcdbc568be7cff6eeeaaf81a89b4aa50b/compiler/rustc_errors/src/lib.rs:1115:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.60.0-nightly (777bb86bc 2022-01-20) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [check_trait_item_well_formed] checking that `FooBar::Tr` is well-formed\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nCompiling playground v0.0.1 (/playground)\r\nwarning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/main.rs:2:12\r\n  |\r\n2 | #![feature(generic_const_exprs)]\r\n  |            ^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\r\n\r\nerror[E0601]: `main` function not found in crate `playground`\r\n  --> src/main.rs:2:1\r\n   |\r\n2  | / #![feature(generic_const_exprs)]\r\n3  | |\r\n4  | | // this causes an ICE!!!\r\n5  | | pub const CONST: usize = 64;\r\n...  |\r\n25 | |     type Tr: Tr;\r\n26 | | }\r\n   | |_^ consider adding a `main` function to `src/main.rs`\r\n\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/subst.rs:588:17: const parameter `S/#1` (Const { ty: usize, val: Param(S/#1) }/1) out of range when substituting substs=[<Self as FooBar>::Tr]\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/777bb86bcdbc568be7cff6eeeaaf81a89b4aa50b/compiler/rustc_errors/src/lib.rs:1115:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner>::span_bug::<rustc_span::span_encoding::Span>\r\n   3: <rustc_errors::Handler>::span_bug::<rustc_span::span_encoding::Span>\r\n   4: rustc_middle::ty::context::tls::with_opt::<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, ()>\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   6: rustc_middle::util::bug::span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   7: <&rustc_middle::ty::consts::Const as rustc_middle::ty::fold::TypeFoldable>::try_fold_with::<rustc_middle::ty::subst::SubstFolder>\r\n   8: <&rustc_middle::ty::TyS as rustc_middle::ty::fold::TypeFoldable>::super_fold_with::<rustc_middle::ty::subst::SubstFolder>\r\n   9: <alloc::vec::Vec<rustc_middle::ty::Predicate> as alloc::vec::spec_extend::SpecExtend<rustc_middle::ty::Predicate, core::iter::adapters::map::Map<core::slice::iter::Iter<(rustc_middle::ty::Predicate, rustc_span::span_encoding::Span)>, <rustc_middle::ty::generics::GenericPredicates>::instantiate_into::{closure#0}>>>::spec_extend\r\n  10: <rustc_middle::ty::generics::GenericPredicates>::instantiate_into\r\n  11: <rustc_middle::ty::generics::GenericPredicates>::instantiate\r\n  12: <rustc_trait_selection::traits::wf::WfPredicates>::nominal_obligations\r\n  13: <rustc_trait_selection::traits::wf::WfPredicates>::compute\r\n  14: <rustc_trait_selection::traits::fulfill::FulfillProcessor>::progress_changed_obligations\r\n  15: <rustc_data_structures::obligation_forest::ObligationForest<rustc_trait_selection::traits::fulfill::PendingPredicateObligation>>::process_obligations::<rustc_trait_selection::traits::fulfill::FulfillProcessor, rustc_data_structures::obligation_forest::Outcome<rustc_trait_selection::traits::fulfill::PendingPredicateObligation, rustc_infer::traits::FulfillmentErrorCode>>\r\n  16: <rustc_trait_selection::traits::fulfill::FulfillmentContext as rustc_infer::traits::engine::TraitEngine>::select_all_or_error\r\n  17: <rustc_infer::infer::InferCtxtBuilder>::enter::<(), <rustc_typeck::check::inherited::InheritedBuilder>::enter<<rustc_typeck::check::wfcheck::CheckWfFcxBuilder>::with_fcx<rustc_typeck::check::wfcheck::check_associated_item::{closure#0}>::{closure#0}, ()>::{closure#0}>\r\n  18: rustc_typeck::check::wfcheck::check_associated_item\r\n  19: rustc_typeck::check::wfcheck::check_trait_item\r\n  20: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, ()>>\r\n  21: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::check_trait_item_well_formed, rustc_query_impl::plumbing::QueryCtxt>\r\n  22: rustc_data_structures::sync::par_for_each_in::<&alloc::vec::Vec<core::option::Option<rustc_hir::hir::OwnerInfo>>, <rustc_middle::hir::map::Map>::par_visit_all_item_likes<rustc_typeck::check::wfcheck::CheckTypeWellFormedVisitor>::{closure#0}>\r\n  23: <rustc_session::session::Session>::track_errors::<rustc_typeck::check_crate::{closure#5}, ()>\r\n  24: rustc_typeck::check_crate\r\n  25: rustc_interface::passes::analysis\r\n  26: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorReported>>>\r\n  27: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  28: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorReported>>\r\n  29: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  30: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>\r\n  31: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.60.0-nightly (777bb86bc 2022-01-20) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [check_trait_item_well_formed] checking that `FooBar::Tr` is well-formed\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nFor more information about this error, try `rustc --explain E0601`.\r\nwarning: `playground` (bin \"playground\") generated 1 warning\r\nerror: could not compile `playground` due to previous error; 1 warning emitted\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93182/timeline", "performed_via_github_app": null, "state_reason": "completed"}