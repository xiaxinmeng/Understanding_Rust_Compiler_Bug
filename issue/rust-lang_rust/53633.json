{"url": "https://api.github.com/repos/rust-lang/rust/issues/53633", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53633/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53633/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53633/events", "html_url": "https://github.com/rust-lang/rust/issues/53633", "id": 353352859, "node_id": "MDU6SXNzdWUzNTMzNTI4NTk=", "number": 53633, "title": "const fold .repeat() of  same-char string literals", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-23T12:11:55Z", "updated_at": "2020-03-15T05:31:33Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "````rustc 1.30.0-nightly (33b923fd4 2018-08-18)````\r\n\r\n````rust\r\npub fn bla() ->  String {\r\n    \"aaa\".to_string()\r\n}\r\n````\r\nthis currently generates\r\n````asm\r\nexample::bla:\r\n  push rbx\r\n  mov rbx, rdi\r\n  lea rsi, [rip + .L__unnamed_1]\r\n  mov edx, 3\r\n  call <alloc::string::String as core::convert::From<&'a str>>::from@PLT\r\n  mov rax, rbx\r\n  pop rbx\r\n  ret\r\n\r\n.L__unnamed_1:\r\n  .zero 3,97\r\n````\r\n\r\nnow if we used ````.repeat(3)```` (this only applies for strings consisting only of one character sort), \r\n````rust\r\npub fn bla() ->  String {\r\n    \"aaa\".to_string().repeat(3)\r\n}\r\n````\r\n\r\nwe get this monster:\r\n````asm\r\ncore::ptr::drop_in_place:\r\n  mov rsi, qword ptr [rdi + 8]\r\n  test rsi, rsi\r\n  je .LBB0_1\r\n  mov rdi, qword ptr [rdi]\r\n  mov edx, 1\r\n  jmp __rust_dealloc@PLT\r\n.LBB0_1:\r\n  ret\r\n\r\nexample::bla:\r\n  push r14\r\n  push rbx\r\n  sub rsp, 24\r\n  mov r14, rdi\r\n  lea rsi, [rip + .L__unnamed_1]\r\n  mov rdi, rsp\r\n  mov edx, 3\r\n  call <alloc::string::String as core::convert::From<&'a str>>::from@PLT\r\n  mov rbx, qword ptr [rsp]\r\n  mov rdx, qword ptr [rsp + 16]\r\n  mov ecx, 3\r\n  mov rdi, r14\r\n  mov rsi, rbx\r\n  call alloc::str::<impl str>::repeat@PLT\r\n  mov rsi, qword ptr [rsp + 8]\r\n  test rsi, rsi\r\n  je .LBB1_3\r\n  mov edx, 1\r\n  mov rdi, rbx\r\n  call __rust_dealloc@PLT\r\n.LBB1_3:\r\n  mov rax, r14\r\n  add rsp, 24\r\n  pop rbx\r\n  pop r14\r\n  ret\r\n  mov rbx, rax\r\n  mov rdi, rsp\r\n  call core::ptr::drop_in_place\r\n  mov rdi, rbx\r\n  call _Unwind_Resume@PLT\r\n  ud2\r\n\r\n.L__unnamed_1:\r\n  .zero 3,97\r\n````\r\n\r\nalthough we could probably just have\r\n````asm\r\nexample::bla:\r\n  push rbx\r\n  mov rbx, rdi\r\n  lea rsi, [rip + .L__unnamed_1]\r\n  mov edx, 9\r\n  call <alloc::string::String as core::convert::From<&'a str>>::from@PLT\r\n  mov rax, rbx\r\n  pop rbx\r\n  ret\r\n\r\n.L__unnamed_1:\r\n  .zero 9,97\r\n````\r\n(diff to the first version)\r\n````diff\r\n@@ -2,11 +2,11 @@\r\n   push rbx\r\n   mov rbx, rdi\r\n   lea rsi, [rip + .L__unnamed_1]\r\n-  mov edx, 3\r\n+  mov edx, 9\r\n   call <alloc::string::String as core::convert::From<&'a str>>::from@PLT\r\n   mov rax, rbx\r\n   pop rbx\r\n   ret\r\n .L__unnamed_1:\r\n-  .zero 3,97\r\n+  .zero 9,97\r\n````", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53633/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 1, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53633/timeline", "performed_via_github_app": null, "state_reason": null}