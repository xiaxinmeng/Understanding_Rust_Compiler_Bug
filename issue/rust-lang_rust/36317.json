{"url": "https://api.github.com/repos/rust-lang/rust/issues/36317", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/36317/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/36317/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/36317/events", "html_url": "https://github.com/rust-lang/rust/issues/36317", "id": 175411711, "node_id": "MDU6SXNzdWUxNzU0MTE3MTE=", "number": 36317, "title": "Initial webassembly support via LLVM", "user": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 289259951, "node_id": "MDU6TGFiZWwyODkyNTk5NTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-help-wanted", "name": "E-help-wanted", "color": "02E10C", "default": false, "description": "Call for participation: Help is requested to fix this issue."}, {"id": 474645165, "node_id": "MDU6TGFiZWw0NzQ2NDUxNjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-wasm", "name": "O-wasm", "color": "6e6ec0", "default": false, "description": "Target: WASM (WebAssembly), http://webassembly.org/"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-07T04:44:22Z", "updated_at": "2017-01-03T21:02:48Z", "closed_at": "2017-01-03T21:02:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After a lot of work from a number of people, including @badboy and @tomaka it looks like we're home free. [Here's a recent summary](https://internals.rust-lang.org/t/need-help-with-emscripten-port/3154/76). And we still need help, and fast. If you want to volunteer, either say which of these you want to tackle here or on the irlo thread and I'll mark you down.\n\nImmediate tasks to get preliminary asmjs support:\n- [x] ignore-emscripten failing tests\n- [x] Merge the fastcomp squash into the rust llvm fork. It may be worth pushing this to a temporary branch on the assumption that it's not going to land easily in Rust, but I actually think this will go pretty smoothly. https://github.com/rust-lang/llvm/pull/50\n- [x] Land PR in Rust that adds asmjs support with new llvm branch and remaining Rust patches\n- [x] Fix jemalloc being disabled when asmjs is enabled. This causes test failures. liballoc_jemalloc needs to only be disabled for targets that don't support it.\n- [ ] Add an auto- builder that builds the asmjs target. We probably won't start testing it right away because testing this target is quite slow.\n- [ ] Add a dist- builder to create the asmjs target packages.\n\nThe first three here somebody else can pick up. I'll probably need to do the last two.\n\nRemaining tasks:\n- [ ] Fix failing tests.\n- [ ] Fix compiletest targetting wasm https://github.com/kripken/emscripten/issues/4542\n- [x] Fix the unwinder - the \"Patch panic_unwind to compile, but this is surely broken\" commit. It's likely this code will look like 32-bit ARM on musl. Unwinding is just completely broken for Rust+emscripten - lots of unimplemented symbols on emscripten side. https://github.com/rust-lang/rust/issues/36514\n- [x] Error on unimplemented symbols https://github.com/rust-lang/rust/issues/36515\n- [x] Enable broken std::num tests https://github.com/kripken/emscripten/issues/4543\n- [ ] Enable test_estimate_scaling_factor https://github.com/kripken/emscripten/issues/4563\n- [x] Enable checked_next_power of two tests https://github.com/kripken/emscripten/issues/4545\n- [x] Add the wasm32-unknown-emscripten target to rustc. It will be almost the same as the asmjs target (you can literally just grep for \"asmjs\" and \"emcripten\" and duplicate the various cfgs). Start with the  target specs in mk/cfg and in rustc. For the initial implementation we will not use the wasm llvm backend, but instead use the asmjs backend and ask emcc to convert the asmjs IR to wasm (I don't know how to do this offhand but it's possible - ask in #emscripten). Thusly we will have wasm support.\n- [ ] Get asmjs backend working without fastcomp patches https://github.com/rust-lang/rust/issues/36356\n- [ ] Test various cargo projects and report/fix bugs.\n- [ ] Create compelling Rust-on-wasm demos. Need to brainstorm here.\n\nMany of the failing tests are for multithreading. Let's not try to tackle that, but there are probably plenty that can be fixed. Adding the wasm target is probably the most fun. Ask in emscripten about how to test it. Having a mind-blowing demo is going to be important for us to bring the thunder alongside the wasm launch.\n", "closed_by": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/36317/reactions", "total_count": 24, "+1": 4, "-1": 0, "laugh": 0, "hooray": 20, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/36317/timeline", "performed_via_github_app": null, "state_reason": "completed"}