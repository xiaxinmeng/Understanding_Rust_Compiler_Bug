{"url": "https://api.github.com/repos/rust-lang/rust/issues/105449", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105449/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105449/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105449/events", "html_url": "https://github.com/rust-lang/rust/issues/105449", "id": 1484073028, "node_id": "I_kwDOAAsO6M5YdShE", "number": 105449, "title": "double ICE: assertion failed: `(left == right)' / attempt to subtract with overflow", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 4199206102, "node_id": "LA_kwDOAAsO6M76SszW", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-debug-assertions", "name": "requires-debug-assertions", "color": "76dcde", "default": false, "description": "This issue requires debug-assertions in some way"}], "state": "closed", "locked": false, "assignee": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-12-08T08:50:27Z", "updated_at": "2022-12-13T00:15:18Z", "closed_at": "2022-12-13T00:15:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n// Regression test for #66768.\r\n// check-pass\r\n#![allow(dead_code)]\r\n//-^ \"dead code\" is needed to reproduce the issue.\r\n\r\nuse std::marker::PhantomData;\r\nuse std::ops::{Add, Mul};\r\n\r\nfn problematic_function<Space>(material_surface_element: Edge2dElement)\r\nwhere\r\n    DefaultAllocator: FiniteElementAllocator<DimU1, Space>,\r\n{\r\n    let _: Point2<f64> = material_surface_element.map_reference_coords().into();\r\n}\r\n\r\nimpl<T> ArrayLength<T> for UTerm {\r\n    type ArrayType = ();\r\n}\r\nimpl<T, N: ArrayLength<T>> ArrayLength<T> for UInt<N, B0> {\r\n    type ArrayType = GenericArrayImplEven<T, N>;\r\n}\r\nimpl<T, N: ArrayLength<T>> ArrayLength<T> for UInt<N, B1> {\r\n    type ArrayType = GenericArrayImplOdd<T, N>;\r\n}\r\nimpl<U> Add<U> for UTerm {\r\n    type Output = U;\r\n    fn add(self, _: U) -> Self::Output {\r\n        unimplemented!()\r\n    }\r\n}\r\nimpl<Ul, Ur> Add<UInt<Ur, B1>> for UInt<Ul, B0>\r\nwhere\r\n    Ul: Add<Ur>,\r\n{\r\n    type Output = UInt<Sum<Ul, Ur>, B1>;\r\n    fn add(self, _: UInt<Ur, B1>) -> Self::Output {\r\n        unimplemented!()\r\n    }\r\n}\r\nimpl<U> Mul<U> for UTerm {\r\n    type Output = UTerm;\r\n    fn mul(self, _: U) -> Self {\r\n        unimplemented!()\r\n    }\r\n}\r\nimpl<Ul, B, Ur> Mul<UInt<Ur, B>> for UInt<Ul, B0>\r\nwhere\r\n    Ul: Mul<UInt<Ur, B>>,\r\n{\r\n    type Output = UInt<Prod<Ul, UInt<Ur, B>>, B0>;\r\n    fn mul(self, _: UInt<Ur, B>) -> Self::Output {\r\n        unimplemented!()\r\n    }\r\n}\r\nimpl<Ul, B, Ur> Mul<UInt<Ur, B>> for UInt<Ul, B1>\r\nwhere\r\n    Ul: Mul<UInt<Ur, B>>,\r\n    UInt<Prod<Ul, UInt<Ur, B>>, B0>: Add<UInt<Ur, B>>,\r\n{\r\n    type Output = Sum<UInt<Prod<Ul, UInt<Ur, B>>, B0>, UInt<Ur, B>>;\r\n    fn mul(self, _: UInt<Ur, B>) -> Self::Output {\r\n        unimplemented!()\r\n    }\r\n}\r\nimpl<N, R, C> Allocator<N, R, C> for DefaultAllocator\r\nwhere\r\n    R: DimName,\r\n    C: DimName,\r\n    R::Value: Mul<C::Value>,\r\n    Prod<R::Value, C::Value>: ArrayLength<N>,\r\n{\r\n    type Buffer = ArrayStorage<N, R, C>;\r\n    fn allocate_uninitialized(_: R, _: C) -> Self::Buffer {\r\n        unimplemented!()\r\n    }\r\n    fn allocate_from_iterator<I>(_: R, _: C, _: I) -> Self::Buffer {\r\n        unimplemented!()\r\n    }\r\n}\r\nimpl<N, C> Allocator<N, Dynamic, C> for DefaultAllocator {\r\n    type Buffer = VecStorage<N, Dynamic, C>;\r\n    fn allocate_uninitialized(_: Dynamic, _: C) -> Self::Buffer {\r\n        unimplemented!()\r\n    }\r\n    fn allocate_from_iterator<I>(_: Dynamic, _: C, _: I) -> Self::Buffer {\r\n        unimplemented!()\r\n    }\r\n}\r\nimpl DimName for DimU1 {\r\n    type Value = U1;\r\n    fn name() -> Self {\r\n        unimplemented!()\r\n    }\r\n}\r\nimpl DimName for DimU2 {\r\n    type Value = U2;\r\n    fn name() -> Self {\r\n        unimplemented!()\r\n    }\r\n}\r\nimpl<N, D> From<VectorN<N, D>> for Point<N, D>\r\nwhere\r\n    DefaultAllocator: Allocator<N, D>,\r\n{\r\n    fn from(_: VectorN<N, D>) -> Self {\r\n        unimplemented!()\r\n    }\r\n}\r\nimpl<GeometryDim, NodalDim> FiniteElementAllocator<GeometryDim, NodalDim> for DefaultAllocator where\r\n    DefaultAllocator: Allocator<f64, GeometryDim> + Allocator<f64, NodalDim>\r\n{\r\n}\r\nimpl ReferenceFiniteElement for Edge2dElement {\r\n    type NodalDim = DimU1;\r\n}\r\nimpl FiniteElement<DimU2> for Edge2dElement {\r\n    fn map_reference_coords(&self) -> Vector2<f64> {\r\n        unimplemented!()\r\n    }\r\n}\r\n\r\ntype Owned<N, R, C> = <DefaultAllocator as Allocator<N, R, C>>::Buffer;\r\ntype MatrixMN<N, R, C> = Matrix<N, R, C, Owned<N, R, C>>;\r\ntype VectorN<N, D> = MatrixMN<N, D, DimU1>;\r\ntype Vector2<N> = VectorN<N, DimU2>;\r\ntype Point2<N> = Point<N, DimU2>;\r\ntype U1 = UInt<UTerm, B1>;\r\ntype U2 = UInt<UInt<UTerm, B1>, B0>;\r\ntype Sum<A, B> = <A as Add<B>>::Output;\r\ntype Prod<A, B> = <A as Mul<B>>::Output;\r\n\r\nstruct GenericArray<T, U: ArrayLength<T>> {\r\n    _data: U::ArrayType,\r\n}\r\nstruct GenericArrayImplEven<T, U> {\r\n    _parent2: U,\r\n    _marker: T,\r\n}\r\nstruct GenericArrayImplOdd<T, U> {\r\n    _parent2: U,\r\n    _data: T,\r\n}\r\nstruct B0;\r\nstruct B1;\r\nstruct UTerm;\r\nstruct UInt<U, B> {\r\n    _marker: PhantomData<(U, B)>,\r\n}\r\nstruct DefaultAllocator;\r\nstruct Dynamic;\r\nstruct DimU1;\r\nstruct DimU2;\r\nstruct Matrix<N, R, C, S> {\r\n    _data: S,\r\n    _phantoms: PhantomData<(N, R, C)>,\r\n}\r\nstruct ArrayStorage<N, R, C>\r\nwhere\r\n    R: DimName,\r\n    C: DimName,\r\n    R::Value: Mul<C::Value>,\r\n    Prod<R::Value, C::Value>: ArrayLength<N>,\r\n{\r\n    _data: GenericArray<N, Prod<R::Value, C::Value>>,\r\n}\r\nstruct VecStorage<N, R, C> {\r\n    _data: N,\r\n    _nrows: R,\r\n    _ncols: C,\r\n}\r\nstruct Point<N, D>\r\nwhere\r\n    DefaultAllocator: Allocator<N, D>,\r\n{\r\n    _coords: VectorN<N, D>,\r\n}\r\nstruct Edge2dElement;\r\n\r\ntrait ArrayLength<T> {\r\n    type ArrayType;\r\n}\r\ntrait Allocator<Scalar, R, C = DimU1> {\r\n    type Buffer;\r\n    fn allocate_uninitialized(nrows: R, ncols: C) -> Self::Buffer;\r\n    fn allocate_from_iterator<I>(nrows: R, ncols: C, iter: I) -> Self::Buffer;\r\n}\r\ntrait DimName {\r\n    type Value;\r\n    fn name() -> Self;\r\n}\r\ntrait FiniteElementAllocator<GeometryDim, NodalDim>:\r\n    Allocator<f64, GeometryDim> + Allocator<f64, NodalDim>\r\n{\r\n}\r\ntrait ReferenceFiniteElement {\r\n    type NodalDim;\r\n}\r\ntrait FiniteElement<GeometryDim>: ReferenceFiniteElement\r\nwhere\r\n    DefaultAllocator: FiniteElementAllocator<GeometryDim, Self::NodalDim>,\r\n{\r\n    fn map_reference_coords(&self) -> VectorN<f64, GeometryDim>;\r\n}\r\n\r\nfn main() {}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nd43674e2c9b1a7b134ef76378c30e822c75c9aa1\r\n```\r\n\r\n### Error output\r\n`rustc -Zunstable-options ./issue-66768.rs`\r\n```\r\n\r\n```\r\n\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105449/timeline", "performed_via_github_app": null, "state_reason": "completed"}