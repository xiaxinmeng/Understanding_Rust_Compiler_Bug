{"url": "https://api.github.com/repos/rust-lang/rust/issues/82144", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82144/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82144/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82144/events", "html_url": "https://github.com/rust-lang/rust/issues/82144", "id": 808344331, "node_id": "MDU6SXNzdWU4MDgzNDQzMzE=", "number": 82144, "title": "Invalid LLVM coverage data produced when compiled with `-C opt-level=1`", "user": {"login": "catenacyber", "id": 35799796, "node_id": "MDQ6VXNlcjM1Nzk5Nzk2", "avatar_url": "https://avatars.githubusercontent.com/u/35799796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catenacyber", "html_url": "https://github.com/catenacyber", "followers_url": "https://api.github.com/users/catenacyber/followers", "following_url": "https://api.github.com/users/catenacyber/following{/other_user}", "gists_url": "https://api.github.com/users/catenacyber/gists{/gist_id}", "starred_url": "https://api.github.com/users/catenacyber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catenacyber/subscriptions", "organizations_url": "https://api.github.com/users/catenacyber/orgs", "repos_url": "https://api.github.com/users/catenacyber/repos", "events_url": "https://api.github.com/users/catenacyber/events{/privacy}", "received_events_url": "https://api.github.com/users/catenacyber/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2483744621, "node_id": "MDU6TGFiZWwyNDgzNzQ0NjIx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-code-coverage", "name": "A-code-coverage", "color": "f7e101", "default": false, "description": "Area: Source-based code coverage (-Cinstrument-coverage)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2021-02-15T09:09:22Z", "updated_at": "2021-04-08T20:06:30Z", "closed_at": "2021-03-25T07:48:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\nuse num_integer::Roots;\r\n \r\nfn main() {\r\n    let a:u32 = 54321; \r\n    let c = a.cbrt();\r\n    println!(\"Hello, world {} {}!\", a, c);\r\n}\r\n```\r\n\r\ncompiled with `RUSTFLAGS=\"-Zinstrument-coverage  -C opt-level=1\"`\r\nand Cargo.toml having\r\n```\r\n[dependencies]\r\nnum-integer = \"0.1\"\r\n```\r\n\r\nI expected to see this happen:\r\nRunning `llvm-profdata merge -j=1 -sparse`, then llvm-cov should give me a coverage report\r\n\r\nInstead, this happened: \r\nllvm-cov fails with `Failed to load coverage: Malformed instrumentation profile data\r\n\r\nWhen building with `-C opt-level=0`, the buggy behavior does not show up with this reproducer\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.52.0-nightly (07194ffcd 2021-02-10)\r\nbinary: rustc\r\ncommit-hash: 07194ffcd25b0871ce560b9f702e52db27ac9f77\r\ncommit-date: 2021-02-10\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.52.0-nightly\r\nLLVM version: 11.0.1\r\n```\r\n\r\nBacktrace\r\n\r\nThere is no backtrace here as the failure happens with llvm-cov\r\nI used the following clang\r\n```\r\nclang --version\r\nclang version 12.0.0 (https://github.com/llvm/llvm-project.git f086e85eea94a51eb42115496ac5d24f07bc8791)\r\n```\r\n\r\nUsing this patch in clang\r\n```\r\ndiff --git a/llvm/lib/ProfileData/Coverage/CoverageMappingReader.cpp b/llvm/lib/ProfileData/Coverage/CoverageMappingReader.cpp\r\nindex b75738bc360c..1ad5d930eafd 100644\r\n--- a/llvm/lib/ProfileData/Coverage/CoverageMappingReader.cpp\r\n+++ b/llvm/lib/ProfileData/Coverage/CoverageMappingReader.cpp\r\n@@ -525,7 +525,8 @@ class VersionedCovMapFuncRecordReader : public CovMapFuncRecordReader {\r\n       if (Error Err = CFR->template getFuncName<Endian>(ProfileNames, FuncName))\r\n         return Err;\r\n       if (FuncName.empty())\r\n-        return make_error<InstrProfError>(instrprof_error::malformed);\r\n+        FuncName = \"lola\";\r\n+        //return make_error<InstrProfError>(instrprof_error::malformed);\r\n       ++CovMapNumUsedRecords;\r\n       Records.emplace_back(Version, FuncName, FuncHash, Mapping,\r\n                            FileRange.StartingIndex, FileRange.Length);\r\n```\r\nI get more information with \r\n`./bin/llvm-cov show -name-regex=\"lol\" -instr-profile=dump.profdata -object=/path/to/rustbinary`\r\nIt shows the pretendedly unnamed function code which can be found here https://github.com/rust-num/num-integer/blob/master/src/roots.rs#L174\r\n```\r\n  174|      0|fn fixpoint<T, F>(mut x: T, f: F) -> T\r\n  175|      0|where\r\n  176|      0|    T: Integer + Copy,\r\n  177|      0|    F: Fn(T) -> T,\r\n  178|      0|{\r\n...\r\n```\r\n\r\ncc @richkadel\r\n\r\nOriginal discussion comes from https://github.com/google/oss-fuzz/pull/4697", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82144/timeline", "performed_via_github_app": null, "state_reason": "completed"}