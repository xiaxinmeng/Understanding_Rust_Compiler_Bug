{"url": "https://api.github.com/repos/rust-lang/rust/issues/57741", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57741/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57741/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57741/events", "html_url": "https://github.com/rust-lang/rust/issues/57741", "id": 400846386, "node_id": "MDU6SXNzdWU0MDA4NDYzODY=", "number": 57741, "title": "Suggest dereferencing boxed enum when matching", "user": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "closed", "locked": false, "assignee": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-01-18T18:52:19Z", "updated_at": "2019-01-21T11:07:58Z", "closed_at": "2019-01-21T11:07:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code:\r\n\r\n```\r\nenum E {\r\n    A(usize),\r\n    B(usize),\r\n}\r\n\r\nfn main() {\r\n    let x = Box::new(E::A(3));\r\n    let y = match x {\r\n        E::A(a) | E::B(a) => a,\r\n    };\r\n}\r\n```\r\n\r\n[the compiler outputs](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=408bb5fbf39a14ad034778701352d7ed):\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:9:9\r\n  |\r\n8 |     let y = match x {\r\n  |                   - this match expression has type `std::boxed::Box<E>`\r\n9 |         E::A(a) | E::B(a) => a,\r\n  |         ^^^^^^^ expected struct `std::boxed::Box`, found enum `E`\r\n  |\r\n  = note: expected type `std::boxed::Box<E>`\r\n             found type `E`\r\n\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:9:19\r\n  |\r\n8 |     let y = match x {\r\n  |                   - this match expression has type `std::boxed::Box<E>`\r\n9 |         E::A(a) | E::B(a) => a,\r\n  |                   ^^^^^^^ expected struct `std::boxed::Box`, found enum `E`\r\n  |\r\n  = note: expected type `std::boxed::Box<E>`\r\n             found type `E`\r\n```\r\n\r\nAdding changing line 8 to `let y = match *x {` makes the code compile correctly (partly thanks to match ergonomics, I believe).\r\n\r\nThe error message would ideally be closer to\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:9:9\r\n  |\r\n8 |     let y = match x {\r\n  |                   -\r\n  |                   |\r\n  |                   this match expression has type `std::boxed::Box<E>`\r\n  |                   help: dereference the boxed value: `*x`\r\n9 |         E::A(a) | E::B(a) => a,\r\n  |         ^^^^^^^   ^^^^^^^ expected struct `std::boxed::Box`, found enum `E`\r\n  |         |\r\n  |         expected struct `std::boxed::Box`, found enum `E`\r\n  |\r\n  = note: expected type `std::boxed::Box<E>`\r\n             found type `E`\r\n```\r\n\r\nAdding the suggestion should be relatively easy, condensing the multiple alternative match arm discriminants with mismatched type errors into one might be more involved.\r\n\r\n----\r\n\r\n@nikomatsakis should we consider extending the match ergonomics to also account for `Box`?\r\n\r\n----\r\n\r\n_[Case taken from an old reddit post from a newcomer to the language](https://www.reddit.com/r/rust/comments/36ce52/reflections_on_a_weekend_with_rust/)._", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57741/timeline", "performed_via_github_app": null, "state_reason": "completed"}