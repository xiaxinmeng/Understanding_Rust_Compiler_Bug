{"url": "https://api.github.com/repos/rust-lang/rust/issues/40384", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40384/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40384/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40384/events", "html_url": "https://github.com/rust-lang/rust/issues/40384", "id": 212988499, "node_id": "MDU6SXNzdWUyMTI5ODg0OTk=", "number": 40384, "title": "std::process::Command no way to handle command-line length limits", "user": {"login": "mcharsley", "id": 11978775, "node_id": "MDQ6VXNlcjExOTc4Nzc1", "avatar_url": "https://avatars.githubusercontent.com/u/11978775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcharsley", "html_url": "https://github.com/mcharsley", "followers_url": "https://api.github.com/users/mcharsley/followers", "following_url": "https://api.github.com/users/mcharsley/following{/other_user}", "gists_url": "https://api.github.com/users/mcharsley/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcharsley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcharsley/subscriptions", "organizations_url": "https://api.github.com/users/mcharsley/orgs", "repos_url": "https://api.github.com/users/mcharsley/repos", "events_url": "https://api.github.com/users/mcharsley/events{/privacy}", "received_events_url": "https://api.github.com/users/mcharsley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 657353545, "node_id": "MDU6TGFiZWw2NTczNTM1NDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-accepted", "name": "C-feature-accepted", "color": "f5f1fd", "default": false, "description": "Category: A feature request that has been accepted pending implementation."}, {"id": 3812066157, "node_id": "LA_kwDOAAsO6M7jN4Nt", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-process", "name": "A-process", "color": "f7e101", "default": false, "description": "Area: std::process and std::env"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-03-09T10:02:40Z", "updated_at": "2023-01-26T20:27:12Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The arg method doesn't track the total resulting command-line length and has no way of indicating to clients that the resulting command-line length would exceed the OS's underlying maximum length. This is fine for launching subprocesses with dozens of arguments, but renders it impossible to implement xargs or similar functionality.\r\n\r\nCan I suggest a new method \r\n\r\n`fn try_add_arg<S: AsRef<OsStr>>(&mut self, arg: S) -> Option<S>`\r\n\r\nwith documentation saying that it's only preferable to `arg` when you're wanting multi-kilobyte command-lines?\r\n\r\n`try_add_arg` would keep track of the number of args already added, and if the number of args or the resulting length would exceed the OS limits, then it ignores the argument and returns it back to the client. Otherwise it acts like the normal `arg` method and returns None.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40384/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40384/timeline", "performed_via_github_app": null, "state_reason": null}