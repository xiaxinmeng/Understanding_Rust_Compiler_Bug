{"url": "https://api.github.com/repos/rust-lang/rust/issues/107466", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107466/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107466/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107466/events", "html_url": "https://github.com/rust-lang/rust/issues/107466", "id": 1562237247, "node_id": "I_kwDOAAsO6M5dHdk_", "number": 107466, "title": "MPSC Sender channel not dropping buffer when all Receivers are dropped during a thread panic unwind", "user": {"login": "philipr-za", "id": 25514413, "node_id": "MDQ6VXNlcjI1NTE0NDEz", "avatar_url": "https://avatars.githubusercontent.com/u/25514413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philipr-za", "html_url": "https://github.com/philipr-za", "followers_url": "https://api.github.com/users/philipr-za/followers", "following_url": "https://api.github.com/users/philipr-za/following{/other_user}", "gists_url": "https://api.github.com/users/philipr-za/gists{/gist_id}", "starred_url": "https://api.github.com/users/philipr-za/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philipr-za/subscriptions", "organizations_url": "https://api.github.com/users/philipr-za/orgs", "repos_url": "https://api.github.com/users/philipr-za/repos", "events_url": "https://api.github.com/users/philipr-za/events{/privacy}", "received_events_url": "https://api.github.com/users/philipr-za/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-01-30T11:14:58Z", "updated_at": "2023-03-21T23:41:14Z", "closed_at": "2023-03-21T23:41:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a regression report! \ud83d\udc1b A regression is something that changed between versions of Rust but was not supposed to.\r\n\r\nPlease provide a short summary of the regression, along with any information you feel is relevant to replicate it.\r\n-->\r\n\r\n### Code\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::sync::mpsc;\r\nuse std::thread;\r\nuse std::time::{Duration, Instant};\r\n\r\nstruct Foo {\r\n    data: i32,\r\n    start: Instant,\r\n}\r\n\r\nimpl Drop for Foo {\r\n    fn drop(&mut self) {\r\n        println!(\r\n            \"Dropping Foo with data {} - {:?}\",\r\n            self.data,\r\n            self.start.elapsed()\r\n        );\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let start = Instant::now();\r\n    let (tx1, rx1) = mpsc::sync_channel(1);\r\n\r\n    let _ = thread::spawn(move || {\r\n        // Move the receiver into this thread.\r\n        let _rx = rx1;\r\n        thread::sleep(Duration::from_secs(1));\r\n        panic!(\"expected panic\");\r\n        // Under 1.66.1 sender `tx1` and the item in it's buffer are dropped after this panic causes\r\n        // the thread to unwind and the Receiver to be dropped\r\n        // Under 1.67.0 the sender `tx1` and the data in it's buffer are not dropped here\r\n    });\r\n\r\n    tx1.send(Foo { data: 1, start }).unwrap();\r\n    println!(\"Sends completed - {:?}\", start.elapsed());\r\n\r\n    thread::sleep(Duration::from_secs(5));\r\n    println!(\"Ending - {:?}\", start.elapsed());\r\n    // Under 1.67.0 the sender `tx1` and the data in it's buffer are only dropped when the\r\n    // whole process ends here\r\n}\r\n```\r\n\r\nI expected to see this happen: I expected to see the struct `Foo` in the Sender buffer get dropped after the Receiver is dropped during the unwind of the panicking thread.\r\n\r\nInstead, this happened: The data in the Sender buffer is not dropped until the whole process ends.\r\n\r\n### Version it worked on\r\n\r\n<!--\r\nProvide the most recent version this worked on, for example:\r\n\r\nIt most recently worked on: Rust 1.47\r\n-->\r\n\r\nIt most recently worked on: 1.66.1\r\n\r\n### Version with regression\r\n\r\n<!--\r\nProvide the version you are using that has the regression.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.67.0 (fc594f156 2023-01-24)\r\nbinary: rustc\r\ncommit-hash: fc594f15669680fa70d255faec3ca3fb507c3405\r\ncommit-date: 2023-01-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.67.0\r\nLLVM version: 15.0.6\r\n\r\n```\r\n\r\n<!--\r\nDid the compiler crash? If so, please provide a backtrace.\r\n-->\r\n\r\n</p>\r\n</details>\r\n\r\n<!--\r\nIf you know when this regression occurred, please add a line like below, replacing `{channel}` with one of stable, beta, or nightly.\r\n\r\n@rustbot modify labels: +regression-from-stable-to-{channel} -regression-untriaged\r\n-->\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107466/timeline", "performed_via_github_app": null, "state_reason": "completed"}