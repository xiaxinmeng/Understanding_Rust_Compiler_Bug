{"url": "https://api.github.com/repos/rust-lang/rust/issues/34050", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/34050/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/34050/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/34050/events", "html_url": "https://github.com/rust-lang/rust/issues/34050", "id": 158230482, "node_id": "MDU6SXNzdWUxNTgyMzA0ODI=", "number": 34050, "title": "Better errors for \"closure may outlive current function\" (lifetime issues)", "user": {"login": "AndiDog", "id": 1376043, "node_id": "MDQ6VXNlcjEzNzYwNDM=", "avatar_url": "https://avatars.githubusercontent.com/u/1376043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndiDog", "html_url": "https://github.com/AndiDog", "followers_url": "https://api.github.com/users/AndiDog/followers", "following_url": "https://api.github.com/users/AndiDog/following{/other_user}", "gists_url": "https://api.github.com/users/AndiDog/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndiDog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndiDog/subscriptions", "organizations_url": "https://api.github.com/users/AndiDog/orgs", "repos_url": "https://api.github.com/users/AndiDog/repos", "events_url": "https://api.github.com/users/AndiDog/events{/privacy}", "received_events_url": "https://api.github.com/users/AndiDog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-02T20:20:08Z", "updated_at": "2019-12-25T17:27:56Z", "closed_at": "2019-12-25T17:27:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Source forum thread can be found [here](https://users.rust-lang.org/t/closure-may-outlive-current-function-but-shouldnt/5985). Here's a simplified problem statement:\n\n``` rust\ntype MyFn = FnMut(); // implicit 'static, not working\n// working: type MyFn<'a> = FnMut() + 'a;\n\nfn do_some_work(f: &mut MyFn) {\n  for _ in 0..5 {\n    f();\n  }\n}\n\nfn main() {\n    let mut v = Vec::<String>::new();\n\n    {\n        let mut process = || {\n            v.push(\"A\".to_string());\n        };\n\n        // Error only occurs if the closure is referenced, but not if this line\n        // is commented out:\n        do_some_work(&mut process);\n    }\n\n    println!(\"v={:?}\", v);\n}\n```\n\nThe above code gives these errors (`rustc 1.10.0-beta.1 (b27d59534 2016-05-23)`):\n\n``` rust\ntest.rs:14:27: 14:29 error: closure may outlive the current function, but it borrows `v`, which is owned by the current function [E0373]\ntest.rs:14         let mut process = || {\n                                     ^~\ntest.rs:14:27: 14:29 help: run `rustc --explain E0373` to see a detailed explanation\ntest.rs:15:13: 15:14 note: `v` is borrowed here\ntest.rs:15             v.push(\"A\".to_string());\n                       ^\ntest.rs:14:27: 14:29 help: to force the closure to take ownership of `v` (and any other referenced variables), use the `move` keyword, as shown:\ntest.rs:           let mut process = move || {\nerror: aborting due to previous error\n```\n\nUsing the correct type definition with dynamic lifetime (instead of the implicit `'static`) makes it work, see line 2 (`type MyFn<'a> = FnMut() + 'a;`). The error also vanishes if the closure is simply not used - i.e. `do_some_work(&mut process)` is commented out - hence I had expected that line to at least be part of the error message. My understanding is that the closure's lifetime is derived as `'static` because of the implicit `'static` in the MyFn type definition.  I suggest something like this in the error notes, if possible:\n\n```\n[...]\ntest.rs:20:27: 20:34 note: closure lifetime derived as 'static from here\ntest.rs:20        do_some_work(&mut process);\n                                    ~~~~~~~\n```\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/34050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/34050/timeline", "performed_via_github_app": null, "state_reason": "completed"}