{"url": "https://api.github.com/repos/rust-lang/rust/issues/96972", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96972/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96972/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96972/events", "html_url": "https://github.com/rust-lang/rust/issues/96972", "id": 1234039385, "node_id": "I_kwDOAAsO6M5JjfJZ", "number": 96972, "title": "confusing type mismatch error when external crates introduce additional trait implementations", "user": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-05-12T14:05:38Z", "updated_at": "2022-05-12T16:26:53Z", "closed_at": "2022-05-12T16:26:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Consider the [following code](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=6b6db0ecf3ca2c99c45c8e1927508baa):\r\n\r\n```rust\r\npub enum Error {\r\n    Foo,\r\n}\r\n\r\n#[test]\r\nfn it_works() {\r\n    Err(Error::Foo) == Err(Error::Foo);\r\n}\r\n```\r\n\r\nThe error message output here is very nice and easy to understand:\r\n\r\n```\r\nerror[E0369]: binary operation `==` cannot be applied to type `Result<_, Error>`\r\n --> src/lib.rs:7:21\r\n  |\r\n7 |     Err(Error::Foo) == Err(Error::Foo);\r\n  |     --------------- ^^ --------------- Result<_, Error>\r\n  |     |\r\n  |     Result<_, Error>\r\n  |\r\nnote: an implementation of `PartialEq` might be missing for `Error`\r\n...\r\n```\r\n\r\nNow lets add a dependency on an external crate (inlined here) ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=379eb7c15828dfdf7fb9247e45ef060a)):\r\n\r\n```rust\r\n// NB: in the original reproduction this was an external crate.\r\npub mod rkyv {\r\n    pub enum ArchivedResult<T, E> {\r\n        Ok(T),\r\n        Err(E),\r\n    }\r\n\r\n    impl<T: PartialEq<U>, U, E: PartialEq<F>, F> PartialEq<ArchivedResult<T, E>>\r\n    for Result<U, F> {\r\n        fn eq(&self, _: &ArchivedResult<T, E>) -> bool { todo!() }\r\n    }\r\n}\r\n\r\npub enum Error {\r\n    Foo,\r\n}\r\n\r\n#[test]\r\nfn it_works() {\r\n    Err(Error::Foo) == Err(Error::Foo);\r\n}\r\n```\r\n\r\nOnce that's done the diagnostic regresses significantly, to the point where it made me suspect an incremental or a similarly serious bug somewhere\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/lib.rs:20:24\r\n   |\r\n20 |     Err(Error::Foo) == Err(Error::Foo);\r\n   |                        ^^^^^^^^^^^^^^^ expected enum `ArchivedResult`, found enum `Result`\r\n   |\r\n   = note: expected enum `ArchivedResult<_, _>`\r\n              found enum `Result<_, Error>`\r\nhelp: try wrapping the expression in a variant of `ArchivedResult`\r\n   |\r\n20 |     Err(Error::Foo) == rkyv::ArchivedResult::Ok(Err(Error::Foo));\r\n   |                        +++++++++++++++++++++++++               +\r\n20 |     Err(Error::Foo) == rkyv::ArchivedResult::Err(Err(Error::Foo));\r\n   |                        ++++++++++++++++++++++++++               +\r\n```\r\n\r\nI think I  would've preferred a plain old \u201ctrait is not implemented\u201d error here.", "closed_by": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96972/timeline", "performed_via_github_app": null, "state_reason": "completed"}