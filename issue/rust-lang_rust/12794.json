{"url": "https://api.github.com/repos/rust-lang/rust/issues/12794", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/12794/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/12794/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/12794/events", "html_url": "https://github.com/rust-lang/rust/issues/12794", "id": 29064081, "node_id": "MDU6SXNzdWUyOTA2NDA4MQ==", "number": 12794, "title": "Modify Json Decoder to handle missing/optional Json fields if mapped to Option ", "user": {"login": "quux00", "id": 694387, "node_id": "MDQ6VXNlcjY5NDM4Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/694387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quux00", "html_url": "https://github.com/quux00", "followers_url": "https://api.github.com/users/quux00/followers", "following_url": "https://api.github.com/users/quux00/following{/other_user}", "gists_url": "https://api.github.com/users/quux00/gists{/gist_id}", "starred_url": "https://api.github.com/users/quux00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quux00/subscriptions", "organizations_url": "https://api.github.com/users/quux00/orgs", "repos_url": "https://api.github.com/users/quux00/repos", "events_url": "https://api.github.com/users/quux00/events{/privacy}", "received_events_url": "https://api.github.com/users/quux00/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2014-03-09T22:11:41Z", "updated_at": "2014-09-09T22:11:28Z", "closed_at": "2014-09-09T22:11:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, the Json Decoder fails if the JSON it is decoding lacks a field in the Decodable struct it is mapping onto.\n\nI propose that if a struct field maps to an Option, the Json Decoder would handle missing fields by mapping None to the field.\n\nHere's a code example:\n\n``` rust\nextern crate serialize;\n\n#[deriving(Decodable)]\npub struct LogEntry {\n    index: u64,\n    term: u64,\n    command_name: ~str,\n    command: Option<~str>,  // optional in the JSON\n}\n\n#[cfg(test)]\nmod test {\n    use serialize::{json, Decodable};\n\n    #[test]\n    fn test_json_decode_of_LogEntry() {\n        let jstr = ~r##\"{\"index\": 200, \"term\": 4, \"command_name\": \"foo\"}\"##;\n        let jobj = json::from_str(jstr);\n\n        let mut decoder = json::Decoder::new(jobj.unwrap());\n        let decoded_obj: super::LogEntry = Decodable::decode(&mut decoder);  // fails\n\n        assert_eq!(None, decoded_obj.command);\n    }\n}\n```\n\nThis fails at runtime with the error message:\n\n```\n---- test::test_json_decode_of_LogEntry stdout ----\n    task 'test::test_json_decode_of_LogEntry' failed at 'JSON decode error: missing required 'command' field in object: {}', /home/quux00/rustlang/rust/src/libserialize/json.rs:1128\n```\n\nI discussed this in the #rust IRC channel and cmr said this sounded reasonable when optional fields map to `Option<>` fields and suggested I file it here as a enhancement request. \n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/12794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/12794/timeline", "performed_via_github_app": null, "state_reason": "completed"}