{"url": "https://api.github.com/repos/rust-lang/rust/issues/94682", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94682/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94682/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94682/events", "html_url": "https://github.com/rust-lang/rust/issues/94682", "id": 1160706809, "node_id": "I_kwDOAAsO6M5FLvr5", "number": 94682, "title": "Surprising behavior of portable SIMD integer vector max/min", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-03-06T20:24:46Z", "updated_at": "2022-03-10T23:22:35Z", "closed_at": "2022-03-10T23:22:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following code does not print what I would expect:\r\n```rust\r\n#![feature(portable_simd)]\r\nuse std::simd::*;\r\n\r\nfn main() {\r\n    let a = i32x4::splat(10);\r\n    let b = i32x4::from_array([1, 2, 12, -4]);\r\n    println!(\"{:?} {:?}\", a.max(b), a.min(b));\r\n}\r\n```\r\nI expected element-wise max/min, but I got:\r\n```\r\n[10, 10, 10, 10] [1, 2, 12, -4]\r\n```\r\n\r\nThe funny thing is that portable-simd does not even define `max`/`min` on its integer SIMD types (only on the float ones). What happens is that it falls back to `Ord::max`, and it looks like vectors implement `Ord` by comparing them as arrays, which probably uses lexicographic comparison.\r\n\r\nHowever this means integer and float vectors `max`/`min` methods behave very differently, so this is probably not intended?\r\n\r\nCc @workingjubilee ", "closed_by": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94682/reactions", "total_count": 4, "+1": 0, "-1": 0, "laugh": 4, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94682/timeline", "performed_via_github_app": null, "state_reason": "completed"}