{"url": "https://api.github.com/repos/rust-lang/rust/issues/84513", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84513/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84513/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84513/events", "html_url": "https://github.com/rust-lang/rust/issues/84513", "id": 866728809, "node_id": "MDU6SXNzdWU4NjY3Mjg4MDk=", "number": 84513, "title": "Tracking Issue for edition-dependent IntoIterator for arrays", "user": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 889209675, "node_id": "MDU6TGFiZWw4ODkyMDk2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-iterators", "name": "A-iterators", "color": "f7e101", "default": false, "description": "Area: Iterators"}, {"id": 2947369052, "node_id": "MDU6TGFiZWwyOTQ3MzY5MDUy", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-edition-2021", "name": "A-edition-2021", "color": "f7e101", "default": false, "description": "Area: The 2021 edition"}, {"id": 3425147156, "node_id": "LA_kwDOAAsO6M7MJ5kU", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-array", "name": "A-array", "color": "f7e101", "default": false, "description": "Area: [T; N]"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2021-04-24T11:53:07Z", "updated_at": "2023-03-07T05:33:21Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "- [x] `array::IntoIter` type: https://github.com/rust-lang/rust/issues/65798\r\n- [x] Idea to make `.into_iter()` resolution edition dependent: https://github.com/rust-lang/rust/issues/84133\r\n- [x] FCP: https://github.com/rust-lang/rust/pull/84147#issuecomment-818988924\r\n- [x] IntoIterator implementation for arrays: ~~https://github.com/rust-lang/rust/pull/65819~~ Included in https://github.com/rust-lang/rust/pull/84147\r\n- [x] Ignore the by-value `.into_iter()` in method resolution on Rust 2015 and Rust 2018: https://github.com/rust-lang/rust/pull/84147\r\n- [x] Update `array_into_iter` lint.\r\n    - [x] Change the \"might change in the future\" wording: #85682\r\n    - [x] Correct wording for the current situation in the message (arrays *do* implement the trait, the method is just hiding itself in `a.into_iter()` syntax for backwards compatibility): #85682\r\n    - [x] Also suggest just removing `.into_iter()` in `for a in [1, 2, 3].into_iter()`, since that now works on all editions: #85682\r\n    - [x] Also suggest `IntoIterator::into_iter(array)`: #85682\r\n    - [x] Extend lint to also cover [this case](https://github.com/rust-lang/rust/pull/84147#issuecomment-819000436) and [this case](https://github.com/rust-lang/rust/issues/88099)? https://github.com/rust-lang/rust/pull/88512\r\n- [x] Update documentation\r\n    - [x] #87701\r\n        - [x] Point out that behaviour might be switched on 2015 and 2018 too one day - https://github.com/rust-lang/rust/pull/84590\r\n        - [x] Fix docs of `array::IntoIter::new` (the \".. in the future, after ..\" part): https://github.com/rust-lang/rust/pull/88610\r\n        - [x] Update docs of the `array` primitive type - https://github.com/rust-lang/rust/pull/88613\r\n    - [x] Update the book (e.g. [this section](https://doc.rust-lang.org/book/ch03-05-control-flow.html#looping-through-a-collection-with-for) and probably more, and many examples).\r\n- [x] Update standard library\r\n    - [x] Remove usages of `array::IntoIter::new`: #85930\r\n    - [x] Update expressions like like `.chain(array.iter().cloned())` to just `.chain(array)` since that now works on all editions. (Same for `zip`, `extend` etc.): #85930\r\n    - [x] Use `.extend(array)` and `from_iter(array)` wherever that simplifies things.\r\n    - [x] Remove `arrays do not yet implement IntoIterator` message from Iterator trait: #85670\r\n    - [x] Remove `for _ in [start..end]` messages from Iterator trait. (Could use a new clippy lint?): https://github.com/rust-lang/rust/pull/85689\r\n- [x] Deprecate `array::IntoIter::new` (`IntoIterator::into_iter([1,2,3])` now works too on all editions.): https://github.com/rust-lang/rust/pull/88611\r\n\r\nOnce edition 2021 is stable:\r\n- [ ] Update examples like [this](https://github.com/rust-lang/rust/blob/e11a9fa52a3f372dadd6db3d3f2ed7dc2621dcc4/library/core/src/iter/traits/iterator.rs#L458-L469) to use arrays by value. (`Some(&1)` \u2192 `Some(1)` etc.)\r\n    - [ ] Update examples to no longer avoid iterating arrays. (Many doctest examples are using iterators over e.g. `&i32` instead of just `i32`.)\r\n- [ ] Remove about 200 usages of `.iter().copied()` and `.iter().cloned()` from examples and tests.\r\n\r\nUnresolved questions:\r\n- [ ] Do something about the 'copying large arrays' [footgun](https://github.com/rust-lang/rust/pull/84147#issuecomment-819417230). (Add `IntoIterator` implementation for `Box<[T; N]>` etc? Add lint about big copies?)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84513/reactions", "total_count": 20, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 20, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84513/timeline", "performed_via_github_app": null, "state_reason": null}