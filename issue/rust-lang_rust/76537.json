{"url": "https://api.github.com/repos/rust-lang/rust/issues/76537", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/76537/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/76537/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/76537/events", "html_url": "https://github.com/rust-lang/rust/issues/76537", "id": 697126982, "node_id": "MDU6SXNzdWU2OTcxMjY5ODI=", "number": 76537, "title": "unhelpful message about reaching recursion limit because of extraneous &", "user": {"login": "jberkenbilt", "id": 997128, "node_id": "MDQ6VXNlcjk5NzEyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/997128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jberkenbilt", "html_url": "https://github.com/jberkenbilt", "followers_url": "https://api.github.com/users/jberkenbilt/followers", "following_url": "https://api.github.com/users/jberkenbilt/following{/other_user}", "gists_url": "https://api.github.com/users/jberkenbilt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jberkenbilt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jberkenbilt/subscriptions", "organizations_url": "https://api.github.com/users/jberkenbilt/orgs", "repos_url": "https://api.github.com/users/jberkenbilt/repos", "events_url": "https://api.github.com/users/jberkenbilt/events{/privacy}", "received_events_url": "https://api.github.com/users/jberkenbilt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-09-09T20:14:27Z", "updated_at": "2020-09-10T05:24:50Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\nenum Node {\r\n    Item(Option<i32>),\r\n    Box(Box<Node>),\r\n}\r\n\r\nimpl Node {\r\n    fn new() -> Self {\r\n        Node::Item(None)\r\n    }\r\n    fn new_box() -> Self {\r\n        Node::Box(Box::new(Self::new()))\r\n    }\r\n\r\n    fn apply<F: Fn(&i32) -> bool + Copy>(&self, f: F) -> bool {\r\n        match &self {\r\n            Node::Item(None) => false,\r\n            Node::Item(Some(x)) => f(x),\r\n            Node::Box(c) => {\r\n                c.apply(&f) // <--- should be c.apply(f)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let a = Node::new_box();\r\n    assert!(! a.apply(|x| x == &3));\r\n}\r\n```\r\n\r\nI expected to see this happen: *I passed a reference to a closure rather than a closure. I would have expected to see a suggestion that I omit the `&`*\r\n\r\nInstead, this happened: *I got the following error:*\r\n\r\n```\r\nerror: reached the recursion limit while instantiating `Node::apply::<&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&[closure@bug.rs:27:23: 27:34]>`\r\n  --> bug.rs:19:17\r\n   |\r\n19 |                 c.apply(&f) // <--- should be c.apply(f)\r\n   |                 ^^^^^^^^^^^\r\n   |\r\nnote: `Node::apply` defined here\r\n  --> bug.rs:14:5\r\n   |\r\n14 | /     fn apply<F: Fn(&i32) -> bool + Copy>(&self, f: F) -> bool {\r\n15 | |         match &self {\r\n16 | |             Node::Item(None) => false,\r\n17 | |             Node::Item(Some(x)) => f(x),\r\n...  |\r\n21 | |         }\r\n22 | |     }\r\n   | |_____^\r\n\r\nerror: aborting due to previous error\r\n```\r\nAs I am new to rust (but have been programming since 1982), I spent a few hours narrowing my file that wouldn't compile down to this nearly minimal version when I spotted the error. The compiler, which is usually very helpful, did not give me any hint as to what was actually wrong.\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.46.0 (04488afe3 2020-08-24)\r\nbinary: rustc\r\ncommit-hash: 04488afe34512aa4c33566eb16d8c912a3ae04f9\r\ncommit-date: 2020-08-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.46.0\r\nLLVM version: 10.0\r\n```\r\n\r\nI am brand new to rust (just started playing with it about 5 days ago), so I apologize if I have missed some step in reporting this bug, such as testing on the nightly channel (which I think I've done but I'm not entirely certain).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/76537/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/76537/timeline", "performed_via_github_app": null, "state_reason": null}