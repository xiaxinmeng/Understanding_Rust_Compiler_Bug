{"url": "https://api.github.com/repos/rust-lang/rust/issues/106737", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/106737/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/106737/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/106737/events", "html_url": "https://github.com/rust-lang/rust/issues/106737", "id": 1529528581, "node_id": "I_kwDOAAsO6M5bKsEF", "number": 106737, "title": "Add unreachable hints for length getters?", "user": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2023-01-11T18:59:29Z", "updated_at": "2023-01-14T03:08:23Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As discussed in this [thread](https://internals.rust-lang.org/t/18126), Rust does not provide LLVM any information about possible lengths of slices, vectors, and other types. In some cases it prevents LLVM from applying optimizations since it has to account for invalid lengths.\r\n\r\nI suggest updating length getters of slice-like types to something like this:\r\n```rust\r\n#[inline]\r\npub const fn len(&self) -> usize {\r\n    let len = ...;\r\n    let size = core::mem::size_of::<T>();\r\n    // on most arches we can use `isize::MAX as usize`\r\n    // instead of `usize::MAX`, but IIRC not everywhere\r\n    if size != 0 && len > usize::MAX / size {\r\n        unsafe { core::hint::unreachable_unchecked() }\r\n    }\r\n    len\r\n}\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/106737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/106737/timeline", "performed_via_github_app": null, "state_reason": null}