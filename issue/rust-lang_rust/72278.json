{"url": "https://api.github.com/repos/rust-lang/rust/issues/72278", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72278/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72278/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72278/events", "html_url": "https://github.com/rust-lang/rust/issues/72278", "id": 619527085, "node_id": "MDU6SXNzdWU2MTk1MjcwODU=", "number": 72278, "title": "ICE when using lifetime arguments explicitly in late bound lifetime parameters ", "user": {"login": "fschutt", "id": 12084016, "node_id": "MDQ6VXNlcjEyMDg0MDE2", "avatar_url": "https://avatars.githubusercontent.com/u/12084016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fschutt", "html_url": "https://github.com/fschutt", "followers_url": "https://api.github.com/users/fschutt/followers", "following_url": "https://api.github.com/users/fschutt/following{/other_user}", "gists_url": "https://api.github.com/users/fschutt/gists{/gist_id}", "starred_url": "https://api.github.com/users/fschutt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fschutt/subscriptions", "organizations_url": "https://api.github.com/users/fschutt/orgs", "repos_url": "https://api.github.com/users/fschutt/repos", "events_url": "https://api.github.com/users/fschutt/events{/privacy}", "received_events_url": "https://api.github.com/users/fschutt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-16T18:06:33Z", "updated_at": "2020-05-31T12:19:44Z", "closed_at": "2020-05-30T16:35:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nIgnore the purpose of the code (it was to create a C-API compatible Box<Any> that can be used to and from C) - [playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=5f918b37761b38fc297abba5be5c05e2)\r\n\r\n```Rust\r\npub struct RefAny { }\r\n\r\nimpl RefAny {\r\n    pub fn downcast_mut<'a, U: 'static>(&'a mut self) -> Option<&'a mut U> {\r\n        unsafe { self.downcast_mut_unchecked::<'a, U>() } // <- panic here in lifetime resolution\r\n    }\r\n\r\n    unsafe fn downcast_mut_unchecked<'a, U>(&'a mut self) -> Option<&'a mut U> {\r\n        None\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.43.1 (8d69840ab 2020-05-04) running on x86_64-unknown-linux-gnu\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nwarning: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\r\n  --> src/main.rs:78:52\r\n   |\r\n78 |             unsafe { self.downcast_mut_unchecked::<'a, U>() }\r\n   |                                                    ^^\r\n...\r\n82 |     unsafe fn downcast_mut_unchecked<'a, U>(&'a mut self) -> Option<&'a mut U> {\r\n   |                                      -- the late bound lifetime parameter is introduced here\r\n   |\r\n   = note: `#[warn(late_bound_lifetime_arguments)]` on by default\r\n   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\r\n   = note: for more information, see issue #42868 <https://github.com/rust-lang/rust/issues/42868>\r\n\r\nerror: internal compiler error: src/librustc_typeck/check/mod.rs:3314: no type for node HirId { owner: DefIndex(31), local_id: 5 }: type U (hir_id=HirId { owner: DefIndex(31), local_id: 5 }) in fcx 0x7f8e2c3f06e0\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:875:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.1 (8d69840ab 2020-05-04) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck_tables_of] type-checking `RefAny::downcast_mut`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `playground`.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: src/librustc_typeck/check/mod.rs:3314: no type for node HirId { owner: DefIndex(31), local_id: 5 }: type U (hir_id=HirId { owner: DefIndex(31), local_id: 5 }) in fcx 0x7fe1f35f06e0\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:875:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1063\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1426\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:474\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_opt\r\n  18: rustc::util::bug::opt_span_bug_fmt\r\n  19: rustc::util::bug::bug_fmt\r\n  20: rustc_typeck::check::FnCtxt::node_ty\r\n  21: <rustc_typeck::check::writeback::WritebackCx as rustc_hir::intravisit::Visitor>::visit_ty\r\n  22: rustc_hir::intravisit::walk_generic_args\r\n  23: rustc_hir::intravisit::walk_expr\r\n  24: <rustc_typeck::check::writeback::WritebackCx as rustc_hir::intravisit::Visitor>::visit_expr\r\n  25: <rustc_typeck::check::writeback::WritebackCx as rustc_hir::intravisit::Visitor>::visit_expr\r\n  26: <rustc_typeck::check::writeback::WritebackCx as rustc_hir::intravisit::Visitor>::visit_expr\r\n  27: rustc_hir::intravisit::walk_expr\r\n  28: <rustc_typeck::check::writeback::WritebackCx as rustc_hir::intravisit::Visitor>::visit_expr\r\n  29: <rustc_typeck::check::writeback::WritebackCx as rustc_hir::intravisit::Visitor>::visit_expr\r\n  30: rustc_typeck::check::writeback::<impl rustc_typeck::check::FnCtxt>::resolve_type_vars_in_body\r\n  31: rustc::ty::context::GlobalCtxt::enter_local\r\n  32: rustc_typeck::check::typeck_tables_of\r\n  33: rustc::ty::query::__query_compute::typeck_tables_of\r\n  34: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_tables_of>::compute\r\n  35: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  36: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  37: rustc::ty::<impl rustc::ty::context::TyCtxt>::par_body_owners\r\n  38: rustc_typeck::check::typeck_item_bodies\r\n  39: rustc::ty::query::__query_compute::typeck_item_bodies\r\n  40: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  41: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  42: rustc_typeck::check_crate\r\n  43: rustc_interface::passes::analysis\r\n  44: rustc::ty::query::__query_compute::analysis\r\n  45: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  46: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  47: rustc::ty::context::tls::enter_global\r\n  48: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72278/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72278/timeline", "performed_via_github_app": null, "state_reason": "completed"}