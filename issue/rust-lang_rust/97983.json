{"url": "https://api.github.com/repos/rust-lang/rust/issues/97983", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/97983/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/97983/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/97983/events", "html_url": "https://github.com/rust-lang/rust/issues/97983", "id": 1268193856, "node_id": "I_kwDOAAsO6M5LlxpA", "number": 97983, "title": "confusing \"borrowed data escapes outside of closure/function\" with nll", "user": {"login": "ben0x539", "id": 24142, "node_id": "MDQ6VXNlcjI0MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/24142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ben0x539", "html_url": "https://github.com/ben0x539", "followers_url": "https://api.github.com/users/ben0x539/followers", "following_url": "https://api.github.com/users/ben0x539/following{/other_user}", "gists_url": "https://api.github.com/users/ben0x539/gists{/gist_id}", "starred_url": "https://api.github.com/users/ben0x539/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ben0x539/subscriptions", "organizations_url": "https://api.github.com/users/ben0x539/orgs", "repos_url": "https://api.github.com/users/ben0x539/repos", "events_url": "https://api.github.com/users/ben0x539/events{/privacy}", "received_events_url": "https://api.github.com/users/ben0x539/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-06-11T07:46:25Z", "updated_at": "2023-01-29T13:55:31Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=f1da9fd81d99e0b07d5bd390b7133b84 <!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\n#![feature(ptr_metadata)]\r\nuse std::ptr::metadata;\r\ntrait Tr<'a> {}\r\nfn f<'a>(r1: &mut dyn Tr<'a>) {\r\n    |r2: &mut dyn Tr<'_>| metadata(r1) == metadata(r2);\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[[E0521]](https://doc.rust-lang.org/nightly/error-index.html#E0521): borrowed data escapes outside of closure\r\n --> src/lib.rs:5:27\r\n  |\r\n4 | fn f<'a>(r1: &mut dyn Tr<'a>) {\r\n  |          -- `r1` declared here, outside of the closure body\r\n5 |     |r2: &mut dyn Tr<'_>| metadata(r1) == metadata(r2);\r\n  |      --                   ^^^^^^^^^^^^ `r2` escapes the closure body here\r\n  |      |\r\n  |      `r2` is a reference that is only valid in the closure body\r\n\r\nerror[[E0521]](https://doc.rust-lang.org/nightly/error-index.html#E0521): borrowed data escapes outside of function\r\n --> src/lib.rs:5:27\r\n  |\r\n4 | fn f<'a>(r1: &mut dyn Tr<'a>) {\r\n  |      --  -- `r1` is a reference that is only valid in the function body\r\n  |      |\r\n  |      lifetime `'a` defined here\r\n5 |     |r2: &mut dyn Tr<'_>| metadata(r1) == metadata(r2);\r\n  |                           ^^^^^^^^^^^^\r\n  |                           |\r\n  |                           `r1` escapes the function body here\r\n  |                           argument requires that `'a` must outlive `'static`\r\n```\r\n\r\nI think this is very confusing because nothing is \"escaping\" from anywhere here, neither from the closure (it just returns bool! nothing is going anywhere!) not from the enclosing function (it doesn't even _do_ anything).\r\n\r\nBefore nll, the error used to look like (arbitrarily my previously installed nightly-2022-04-14, if you add `#![feature(nll)]` you get the above output again):\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:5:43\r\n  |\r\n5 |     |r2: &mut dyn Tr<'_>| metadata(r1) == metadata(r2);\r\n  |                                           ^^^^^^^^^^^^ lifetime mismatch\r\n  |\r\n  = note: expected struct `DynMetadata<dyn Tr<'a>>`\r\n             found struct `DynMetadata<dyn Tr<'_>>`\r\nnote: the anonymous lifetime #2 defined here...\r\n --> src/lib.rs:5:5\r\n  |\r\n5 |     |r2: &mut dyn Tr<'_>| metadata(r1) == metadata(r2);\r\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...does not necessarily outlive the lifetime `'a` as defined here\r\n --> src/lib.rs:4:6\r\n  |\r\n4 | fn f<'a>(r1: &mut dyn Tr<'a>) {\r\n  |      ^^\r\n\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:5:43\r\n  |\r\n5 |     |r2: &mut dyn Tr<'_>| metadata(r1) == metadata(r2);\r\n  |                                           ^^^^^^^^^^^^ lifetime mismatch\r\n  |\r\n  = note: expected struct `DynMetadata<dyn Tr<'a>>`\r\n             found struct `DynMetadata<dyn Tr<'_>>`\r\nnote: the lifetime `'a` as defined here...\r\n --> src/lib.rs:4:6\r\n  |\r\n4 | fn f<'a>(r1: &mut dyn Tr<'a>) {\r\n  |      ^^\r\nnote: ...does not necessarily outlive the anonymous lifetime #2 defined here\r\n --> src/lib.rs:5:5\r\n  |\r\n5 |     |r2: &mut dyn Tr<'_>| metadata(r1) == metadata(r2);\r\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\nI found that a lot more immediately clear.\r\n\r\nI'm sure this can be minimized to avoid `ptr_metadata` but I'm already super confused as-is and can't really wrap my head around how all the metadata stuff is defined right now.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/97983/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/97983/timeline", "performed_via_github_app": null, "state_reason": null}