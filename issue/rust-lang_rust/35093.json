{"url": "https://api.github.com/repos/rust-lang/rust/issues/35093", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/35093/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/35093/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/35093/events", "html_url": "https://github.com/rust-lang/rust/issues/35093", "id": 168150856, "node_id": "MDU6SXNzdWUxNjgxNTA4NTY=", "number": 35093, "title": "Make LLVM better at using XMM registers to perform structure moves", "user": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 55301991, "node_id": "MDU6TGFiZWw1NTMwMTk5MQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-x86", "name": "O-x86", "color": "6e6ec0", "default": false, "description": "Target: x86 processors"}, {"id": 55302148, "node_id": "MDU6TGFiZWw1NTMwMjE0OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-x86_64", "name": "O-x86_64", "color": "6e6ec0", "default": false, "description": "Target: x64 processors"}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 289259951, "node_id": "MDU6TGFiZWwyODkyNTk5NTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-help-wanted", "name": "E-help-wanted", "color": "02E10C", "default": false, "description": "Call for participation: Help is requested to fix this issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-07-28T17:25:21Z", "updated_at": "2022-02-20T19:50:08Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here's a small snippet of Servo code from block flow fragmentation:\n\n```\nservo[0x100bf974e] <+6638>:  mov    r10b, byte ptr [rbp - 0x729]\nservo[0x100bf9755] <+6645>:  mov    r9, qword ptr [rbp - 0x728]\nservo[0x100bf975c] <+6652>:  mov    rax, qword ptr [rbp - 0x720]\nservo[0x100bf9763] <+6659>:  mov    rdi, qword ptr [rbp - 0x718]\nservo[0x100bf976a] <+6666>:  mov    r8, qword ptr [rbp - 0x6c8]\nservo[0x100bf9771] <+6673>:  mov    rdx, qword ptr [rbp - 0x710]\nservo[0x100bf9778] <+6680>:  mov    qword ptr [rbp - 0x710], rdx\nservo[0x100bf977f] <+6687>:  mov    qword ptr [r13 + 0x78], r8\nservo[0x100bf9783] <+6691>:  mov    qword ptr [r13 + 0x80], rdi\nservo[0x100bf978a] <+6698>:  mov    qword ptr [r13 + 0x88], rax\nservo[0x100bf9791] <+6705>:  mov    qword ptr [r13 + 0x90], r9\nservo[0x100bf9798] <+6712>:  mov    byte ptr [r13 + 0x98], r10b\nservo[0x100bf979f] <+6719>:  mov    al, byte ptr [rbp - 0x34a]\nservo[0x100bf97a5] <+6725>:  mov    byte ptr [r13 + 0x9f], al\nservo[0x100bf97ac] <+6732>:  mov    ax, word ptr [rbp - 0x34c]\nservo[0x100bf97b3] <+6739>:  mov    word ptr [r13 + 0x9d], ax\nservo[0x100bf97bb] <+6747>:  mov    eax, dword ptr [rbp - 0x350]\nservo[0x100bf97c1] <+6753>:  mov    dword ptr [r13 + 0x99], eax\nservo[0x100bf97c8] <+6760>:  mov    eax, dword ptr [r13 + 0x15c]\nservo[0x100bf97cf] <+6767>:  test   ah, 0x6\nservo[0x100bf97d2] <+6770>:  je     0x100bf9949               ; <+7145>\n```\n\nI see this all over the place. It should be using XMM registers instead. This is bad because: (a) it clogs up the instruction stream; (b) it's an inefficient way to perform structure moves; (c) it kills tons of registers, resulting in spills elsewhere (notice rax, rdx, rdi, r8, r9, and r10 are all dead for no good reason); (d) it puts pressure on the register allocator, making compile times worse.\n\nIs there some way to get LLVM to emit the right thing here?\n\ncc @eddyb @brson\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/35093/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/35093/timeline", "performed_via_github_app": null, "state_reason": null}