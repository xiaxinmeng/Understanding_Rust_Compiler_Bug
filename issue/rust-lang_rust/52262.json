{"url": "https://api.github.com/repos/rust-lang/rust/issues/52262", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52262/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52262/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52262/events", "html_url": "https://github.com/rust-lang/rust/issues/52262", "id": 340291175, "node_id": "MDU6SXNzdWUzNDAyOTExNzU=", "number": 52262, "title": "ICE on dereferencing non-Copy raw pointer on latest nightly", "user": {"login": "IsaacWoods", "id": 10314464, "node_id": "MDQ6VXNlcjEwMzE0NDY0", "avatar_url": "https://avatars.githubusercontent.com/u/10314464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IsaacWoods", "html_url": "https://github.com/IsaacWoods", "followers_url": "https://api.github.com/users/IsaacWoods/followers", "following_url": "https://api.github.com/users/IsaacWoods/following{/other_user}", "gists_url": "https://api.github.com/users/IsaacWoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/IsaacWoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IsaacWoods/subscriptions", "organizations_url": "https://api.github.com/users/IsaacWoods/orgs", "repos_url": "https://api.github.com/users/IsaacWoods/repos", "events_url": "https://api.github.com/users/IsaacWoods/events{/privacy}", "received_events_url": "https://api.github.com/users/IsaacWoods/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2018-07-11T15:22:08Z", "updated_at": "2019-10-07T21:13:48Z", "closed_at": "2019-10-07T21:13:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Firstly, I have been unable to reproduce this minimally, but it should be similar to something like [this](https://play.rust-lang.org/?gist=e9f8328ec670d0ea04d68c8de739d5de&version=nightly&mode=debug&edition=2015), but this example gives the correct error. I'll update this issue if I can find a proper repro.\r\n\r\nHowever, locally I'm getting an ICE:\r\n```\r\nerror: internal compiler error: Accessing `(*_5)` with the kind `Write(Move)` shouldn't be possible\r\n  --> src/madt.rs:40:31\r\n   |\r\n40 |         let header = unsafe { *(pointer as *const EntryHeader) };\r\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: (MoveData { move_paths: [Mov\r\nePath { place: _0 }, MovePath { place: _1 }, MovePath { place: _2 }, MovePath { place: _3 }, MovePat\r\nh { place: _4 }, MovePath { place: _5 }, MovePath { place: _6 }, MovePath { place: _7 }, MovePath {\r\nplace: _8 }, MovePath { place: _9 }, MovePath { place: _10 }, MovePath { place: _11 }, MovePath { pl\r\nace: _12 }], moves: [mp6@bb0[6], mp6@bb0[7], mp5@bb0[9], mp9@bb0[15]], loc_map: LocationMap { map: [\r\n[[], [], [], [], [], [], [mo0], [mo1], [], [mo2], [], [], [], [], [], [mo3]]] }, path_map: [[], [],\r\n[], [], [], [mo2], [mo0, mo1], [], [], [mo3], [], [], []], rev_lookup: MovePathLookup { locals: [mp0\r\n, mp1, mp2, mp3, mp4, mp5, mp6, mp7, mp8, mp9, mp10, mp11, mp12], projections: {} }, inits: [mp1@src\r\n/madt.rs:38:13: 38:22 (Deep), mp3@src/madt.rs:39:23: 39:46 (Deep), mp6@src/madt.rs:40:33: 40:40 (Dee\r\np), mp5@src/madt.rs:40:32: 40:63 (Deep), mp4@src/madt.rs:40:31: 40:63 (Deep), mp12@<panic macros>:4:\r\n1: 4:72 (Deep), mp10@<panic macros>:4:1: 4:72 (Deep), mp9@<panic macros>:4:1: 4:72 (Deep)], init_loc\r\n_map: LocationMap { map: [[[], [in1], [], [], [], [in2], [in3], [], [in4], [], [], [], [in5], [in6],\r\n [in7], []]] }, init_path_map: [[], [in0], [], [in1], [in4], [in3], [in2], [], [], [in7], [in6], [],\r\n [in5]] }, [IllegalMove { cannot_move_out_of: IllegalMoveOrigin { location: bb0[8], kind: BorrowedCo\r\nntent { target_ty: madt::EntryHeader } } }])', libcore/result.rs:945:5\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:479\r\n   6: std::panicking::continue_panic_fmt\r\n             at libstd/panicking.rs:390\r\n   7: rust_begin_unwind\r\n             at libstd/panicking.rs:325\r\n   8: core::panicking::panic_fmt\r\n             at libcore/panicking.rs:77\r\n   9: core::result::unwrap_failed\r\n  10: <rustc_mir::transform::elaborate_drops::ElaborateDrops as rustc_mir::transform::MirPass>::run_\r\npass\r\n  11: rustc_mir::transform::optimized_mir::{{closure}}\r\n  12: rustc_mir::transform::optimized_mir\r\n  13: rustc::ty::query::__query_compute::optimized_mir\r\n  14: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::q\r\nueries::optimized_mir<'tcx>>::compute\r\n  15: rustc::ty::context::tls::with_context\r\n  16: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  17: rustc::ty::context::tls::with_related_context\r\n  18: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_wit\r\nh_job\r\n  19: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_query\r\n  20: rustc::ty::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::instance_mir\r\n  21: rustc_mir::monomorphize::collector::collect_items_rec\r\n  22: rustc_mir::monomorphize::collector::collect_crate_mono_items::{{closure}}\r\n  23: rustc::util::common::time\r\n  24: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  25: rustc::util::common::time\r\n  26: rustc_codegen_llvm::base::collect_and_partition_mono_items\r\n  27: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::q\r\nueries::collect_and_partition_mono_items<'tcx>>::compute\r\n  28: rustc::ty::context::tls::with_context\r\n  29: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  30: rustc::ty::context::tls::with_related_context\r\n  31: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_wit\r\nh_job\r\n  32: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query\r\n  33: rustc::ty::query::plumbing::force_from_dep_node\r\n  34: rustc::dep_graph::graph::DepGraph::try_mark_green\r\n  35: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_mark_green_\r\nand_read\r\n  36: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  37: rustc_metadata::encoder::encode_metadata\r\n  38: rustc_metadata::cstore_impl::<impl rustc::middle::cstore::CrateStore for rustc_metadata::cstor\r\ne::CStore>::encode_metadata\r\n  39: rustc::ty::context::TyCtxt::encode_metadata\r\n  40: rustc_codegen_llvm::base::write_metadata\r\n  41: rustc::util::common::time\r\n  42: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBacken\r\nd>::codegen_crate\r\n  43: rustc::util::common::time\r\n  44: rustc_driver::driver::phase_4_codegen\r\n  45: rustc_driver::driver::compile_input::{{closure}}\r\n  46: rustc::ty::context::tls::enter_context\r\n  47: <std::thread::local::LocalKey<T>>::with\r\n  48: rustc::ty::context::TyCtxt::create_and_enter\r\n  49: rustc_driver::driver::compile_input\r\n  50: rustc_driver::run_compiler_with_pool\r\n  51: <scoped_tls::ScopedKey<T>>::set\r\n  52: <scoped_tls::ScopedKey<T>>::set\r\n  53: syntax::with_globals\r\n  54: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  55: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:105\r\n  56: rustc_driver::run\r\n  57: rustc_driver::main\r\n  58: std::rt::lang_start::{{closure}}\r\n  59: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  60: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:105\r\n  61: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:392\r\n             at libstd/rt.rs:58\r\n  62: main\r\n  63: __libc_start_main\r\n  64: <unknown>\r\nquery stack during panic:\r\n#0 [optimized_mir] processing `<madt::MadtEntryIter<'a> as core::iter::Iterator>::next`\r\n#1 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: internal compiler error: unexpected panic\r\n```\r\n\r\nThis is with `rustc 1.29.0-nightly (e5f6498d3 2018-07-10)`.", "closed_by": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52262/timeline", "performed_via_github_app": null, "state_reason": "completed"}