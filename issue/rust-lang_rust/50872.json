{"url": "https://api.github.com/repos/rust-lang/rust/issues/50872", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50872/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50872/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50872/events", "html_url": "https://github.com/rust-lang/rust/issues/50872", "id": 324506658, "node_id": "MDU6SXNzdWUzMjQ1MDY2NTg=", "number": 50872, "title": "Calling `borrow_mut` on a `Box`ed trait object and passing the result to a function can cause a spurious compile error", "user": {"login": "SolraBizna", "id": 427857, "node_id": "MDQ6VXNlcjQyNzg1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/427857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SolraBizna", "html_url": "https://github.com/SolraBizna", "followers_url": "https://api.github.com/users/SolraBizna/followers", "following_url": "https://api.github.com/users/SolraBizna/following{/other_user}", "gists_url": "https://api.github.com/users/SolraBizna/gists{/gist_id}", "starred_url": "https://api.github.com/users/SolraBizna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SolraBizna/subscriptions", "organizations_url": "https://api.github.com/users/SolraBizna/orgs", "repos_url": "https://api.github.com/users/SolraBizna/repos", "events_url": "https://api.github.com/users/SolraBizna/events{/privacy}", "received_events_url": "https://api.github.com/users/SolraBizna/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-18T18:19:26Z", "updated_at": "2022-03-22T07:31:39Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "This code does not compile:\r\n\r\n```rust\r\nuse std::borrow::BorrowMut;\r\n\r\npub trait Trait {}\r\npub struct Struct {}\r\nimpl Trait for Struct {}\r\n\r\nfn func(_: &mut Trait) {}\r\n\r\nfn main() {\r\n    let mut foo: Box<Trait> = Box::new(Struct{});\r\n    func(foo.borrow_mut());\r\n}\r\n```\r\n\r\nHowever, if you use `as` to be clear on what you expect `borrow_mut()` to return:\r\n\r\n```rust\r\n    func(foo.borrow_mut() as &mut Trait);\r\n```\r\n\r\nIt will then compile.\r\n\r\nThis does not happen when the boxed type is a struct, only a trait. Simple assignments don't seem to trigger it either. (**Edit:** Forgot to add that this happens both on current stable and current nightly.)\r\n\r\nHere is the output when compiling on the Playground:\r\n\r\n```\r\n   Compiling playground v0.0.1 (file:///playground)\r\nerror[E0597]: `foo` does not live long enough\r\n  --> src/main.rs:11:10\r\n   |\r\n11 |     func(foo.borrow_mut());\r\n   |          ^^^ borrowed value does not live long enough\r\n12 | }\r\n   | - `foo` dropped here while still borrowed\r\n   |\r\n   = note: values in a scope are dropped in the opposite order they are created\r\n\r\nwarning: variable does not need to be mutable\r\n  --> src/main.rs:10:9\r\n   |\r\n10 |     let mut foo: Box<Trait> = Box::new(Struct{});\r\n   |         ----^^^\r\n   |         |\r\n   |         help: remove this `mut`\r\n   |\r\n   = note: #[warn(unused_mut)] on by default\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0597`.\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50872/timeline", "performed_via_github_app": null, "state_reason": null}