{"url": "https://api.github.com/repos/rust-lang/rust/issues/95921", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95921/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95921/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95921/events", "html_url": "https://github.com/rust-lang/rust/issues/95921", "id": 1199424559, "node_id": "I_kwDOAAsO6M5HfcQv", "number": 95921, "title": "HRTB with nested lifetimes and explicit lifetime bounds fails.", "user": {"login": "aliemjay", "id": 28497461, "node_id": "MDQ6VXNlcjI4NDk3NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/28497461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aliemjay", "html_url": "https://github.com/aliemjay", "followers_url": "https://api.github.com/users/aliemjay/followers", "following_url": "https://api.github.com/users/aliemjay/following{/other_user}", "gists_url": "https://api.github.com/users/aliemjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/aliemjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aliemjay/subscriptions", "organizations_url": "https://api.github.com/users/aliemjay/orgs", "repos_url": "https://api.github.com/users/aliemjay/repos", "events_url": "https://api.github.com/users/aliemjay/events{/privacy}", "received_events_url": "https://api.github.com/users/aliemjay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-04-11T05:45:36Z", "updated_at": "2023-04-05T17:34:28Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\ntrait Service<Req> {}\r\n\r\nimpl<'a, Req: 'a> Service<&'a Req> for u8 {}\r\n\r\nfn main() {\r\n    fn impl_check() where u8: for<'a, 'b> Service<&'a &'b u8> {}\r\n    impl_check()\r\n}\r\n```\r\n\r\nI expected to see this happen: *code compiles fine*\r\n\r\nInstead, this happened: *`Implementation is not general enough` Error*\r\n\r\nRemoving the explicit lifetime bound on the impl fixes the problem:\r\n```diff\r\n- impl<'a, Req: 'a> Service<&'a Req> for u8 {}\r\n+ impl<'a, Req> Service<&'a Req> for u8 {}\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\nReproduced on both the current stable and nightly branches.\r\n\r\n`rustc --version --verbose`:\r\n```\r\n1.62.0-nightly (2022-04-09 8bf93e9b6791acee3a59)\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Error Output</summary>\r\n<p>\r\n\r\n```\r\nerror: implementation of `Service` is not general enough\r\n [--> src/lib.rs:7:5\r\n](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021#)  |\r\n7 |     impl_check()\r\n  |     ^^^^^^^^^^ implementation of `Service` is not general enough\r\n  |\r\n  = note: `u8` must implement `Service<&'0 &'1 u8>`, for any two lifetimes `'0` and `'1`...\r\n  = note: ...but it actually implements `Service<&'2 &'b u8>`, for some specific lifetime `'2`\r\n```\r\n\r\n</p>\r\n</details>\r\n@rustbot label A-typesystem, A-lifetimes, A-traits", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95921/timeline", "performed_via_github_app": null, "state_reason": null}