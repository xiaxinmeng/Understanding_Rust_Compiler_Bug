{"url": "https://api.github.com/repos/rust-lang/rust/issues/40920", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40920/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40920/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40920/events", "html_url": "https://github.com/rust-lang/rust/issues/40920", "id": 218076041, "node_id": "MDU6SXNzdWUyMTgwNzYwNDE=", "number": 40920, "title": "x.py (bootstrap) does not accept -j, despite the docs and apparent logic to handle it.", "user": {"login": "CleanCut", "id": 5838512, "node_id": "MDQ6VXNlcjU4Mzg1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5838512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CleanCut", "html_url": "https://github.com/CleanCut", "followers_url": "https://api.github.com/users/CleanCut/followers", "following_url": "https://api.github.com/users/CleanCut/following{/other_user}", "gists_url": "https://api.github.com/users/CleanCut/gists{/gist_id}", "starred_url": "https://api.github.com/users/CleanCut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CleanCut/subscriptions", "organizations_url": "https://api.github.com/users/CleanCut/orgs", "repos_url": "https://api.github.com/users/CleanCut/repos", "events_url": "https://api.github.com/users/CleanCut/events{/privacy}", "received_events_url": "https://api.github.com/users/CleanCut/received_events", "type": "User", "site_admin": true}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-03-30T04:09:26Z", "updated_at": "2017-03-31T04:35:31Z", "closed_at": "2017-03-30T14:15:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While working on #40417 I discovered that `x.py` spits out the help string if you try to use the `-j` option.  This will affect #40366 as well, which I ran across while looking to see if this issue had already been reported.\r\n\r\n`x.py` is just a thin wrapper around the `main()` function of `src/bootstrap/bootstrap.py`, which mostly ensures the `bootstrap` binary (`src/bootstrap/bin/main.rs`) has been compiled and then passes most arguments (including `-j`) to the `bootstrap` binary.\r\n\r\nIt is the `bootstrap` binary itself which can't handle the `-j` argument -- the python script just passes the argument through to it.  The `bootstrap` binary is placed at `build/bootstrap/debug/bootstrap` when it is built.  You can see the buggy behavior by just doing this:\r\n\r\n```shell\r\n$ build/bootstrap/debug/bootstrap -j 10 build\r\nunknown command: -j\r\nUsage: x.py -j [options] [<args>...]\r\n\r\nOptions:\r\n    -v, --verbose       use verbose output (-vv for very verbose)\r\n    -i, --incremental   use incremental compilation\r\n        --config FILE   TOML configuration file for build\r\n        --build BUILD   build target of the stage0 compiler\r\n        --host HOST     host targets to build\r\n        --target TARGET target targets to build\r\n        --on-fail CMD   command to run on failure\r\n        --stage N       stage to build\r\n        --keep-stage N  stage to keep without recompiling\r\n        --src DIR       path to the root of the rust checkout\r\n    -j, --jobs JOBS     number of jobs to run in parallel\r\n    -h, --help          print this help message\r\n\r\nSubcommands:\r\n    build       Compile either the compiler or libraries\r\n    test        Build and run some test suites\r\n    bench       Build and run some benchmarks\r\n    doc         Build documentation\r\n    clean       Clean out build directories\r\n    dist        Build and/or install distribution artifacts\r\n\r\nTo learn more about a subcommand, run `./x.py <command> -h`\r\n```\r\n\r\nIf the `bootstrap` binary hasn't been built yet, you can build it by running `x.py build` first.\r\n\r\nI _think_ the problem is in the `getopts` logic in `src/bootstrap/flags.rs`.  That's where I have gotten to debugging the program, anyway.  I have never used the `getopts` module, so I paused to create this issue before diving into the docs.\r\n\r\nI'll continue on and see if I can debug it and produce a patch, but I would be delighted if someone beat me to it. ;-)", "closed_by": {"login": "retep998", "id": 666308, "node_id": "MDQ6VXNlcjY2NjMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/666308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retep998", "html_url": "https://github.com/retep998", "followers_url": "https://api.github.com/users/retep998/followers", "following_url": "https://api.github.com/users/retep998/following{/other_user}", "gists_url": "https://api.github.com/users/retep998/gists{/gist_id}", "starred_url": "https://api.github.com/users/retep998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retep998/subscriptions", "organizations_url": "https://api.github.com/users/retep998/orgs", "repos_url": "https://api.github.com/users/retep998/repos", "events_url": "https://api.github.com/users/retep998/events{/privacy}", "received_events_url": "https://api.github.com/users/retep998/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40920/timeline", "performed_via_github_app": null, "state_reason": "completed"}