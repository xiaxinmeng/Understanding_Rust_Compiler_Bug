{"url": "https://api.github.com/repos/rust-lang/rust/issues/75973", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75973/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75973/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75973/events", "html_url": "https://github.com/rust-lang/rust/issues/75973", "id": 687003058, "node_id": "MDU6SXNzdWU2ODcwMDMwNTg=", "number": 75973, "title": "TcpStream with non_blocking mode and read_to_end() leads to incomplete message", "user": {"login": "qiujiangkun", "id": 33482468, "node_id": "MDQ6VXNlcjMzNDgyNDY4", "avatar_url": "https://avatars.githubusercontent.com/u/33482468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qiujiangkun", "html_url": "https://github.com/qiujiangkun", "followers_url": "https://api.github.com/users/qiujiangkun/followers", "following_url": "https://api.github.com/users/qiujiangkun/following{/other_user}", "gists_url": "https://api.github.com/users/qiujiangkun/gists{/gist_id}", "starred_url": "https://api.github.com/users/qiujiangkun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qiujiangkun/subscriptions", "organizations_url": "https://api.github.com/users/qiujiangkun/orgs", "repos_url": "https://api.github.com/users/qiujiangkun/repos", "events_url": "https://api.github.com/users/qiujiangkun/events{/privacy}", "received_events_url": "https://api.github.com/users/qiujiangkun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-27T07:11:55Z", "updated_at": "2020-10-03T14:57:24Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I ran in to this problem:\r\n\r\nI have a TcpStream set on non_blocking(true). When I read from it, depending on the delay after I send the http request, it may drop some data of the reponse or not. It shouldn't work like this anyway.\r\n\r\nMoreover, it seems like that read_to_end will end when meeting EOF. How will this behavior in non_blocking mode? Is there a way to tell how many bytes is ready without actually reading in order to pre-allocate buffers?\r\n\r\n\r\n## When the delay is less than 30 ms\r\n```log\r\nlen: 183\r\n);};}})();};if(window.pageState==0){initIndex();}})();document.cookie = 'IS_STATIC=1;expires=' + new Date(new Date().getTime() + 10*60*1000).toGMTString();</script>\r\n</body></html>\r\n```\r\n## When the delay is more than 30 ms, say 100 ms\r\n```log\r\nlen: 15550\r\n HTTP/1.0 200 OK\r\nAccept-Ranges: bytes\r\nCache-Control: no-cache\r\nContent-Length: 14615\r\nContent-Type: text/html\r\n<more>\r\n```\r\n\r\n## Code\r\n```rust\r\nuse std::io::{Write, Read};\r\nuse std::net::TcpStream;\r\nuse std::{str, thread};\r\nuse std::time::Duration;\r\n\r\n#[allow(dead_code)]\r\nfn sleep(ms: u64) {\r\n    thread::sleep(Duration::from_millis(ms));\r\n}\r\n\r\nfn main() {\r\n    // www.baidu.com\r\n    let mut tcp = TcpStream::connect(\"39.156.66.14:80\").unwrap();\r\n    tcp.set_nonblocking(true).unwrap();\r\n    tcp.set_nodelay(true).unwrap();\r\n    tcp.write(b\"GET / HTTP/1.0\\r\\n\\r\\n\").unwrap();\r\n    // FIXME if sleep time is less than 30, it will receive incomplete message\r\n    // sleep(0);\r\n    sleep(100);\r\n    loop {\r\n        tcp.flush().unwrap();\r\n        let mut v = vec![];\r\n        // FIXME does read to end make sense for non blocking?\r\n        match tcp.read_to_end(&mut v) {\r\n            Ok(n) => {\r\n                if v.len() > 0 {\r\n                    unsafe {\r\n                        println!(\"len: {}\\n {}\", n, str::from_utf8_unchecked(&v));\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            Err(_e) => {\r\n                print!(\".\");\r\n            }\r\n        }\r\n    }\r\n}\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75973/timeline", "performed_via_github_app": null, "state_reason": null}