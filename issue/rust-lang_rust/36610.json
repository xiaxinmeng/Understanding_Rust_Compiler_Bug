{"url": "https://api.github.com/repos/rust-lang/rust/issues/36610", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/36610/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/36610/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/36610/events", "html_url": "https://github.com/rust-lang/rust/issues/36610", "id": 178251299, "node_id": "MDU6SXNzdWUxNzgyNTEyOTk=", "number": 36610, "title": "Lazy compilation of libstd", "user": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-09-21T05:37:25Z", "updated_at": "2021-05-01T06:42:04Z", "closed_at": "2021-05-01T06:42:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Updated (2016-09-21)\n\nBlockers:\n- [ ] rust-lang/rfcs#1133 make Cargo aware of std dependencies.\n  - Implementation: rust-lang/cargo#2768\n- [x] rust-lang/rust#36501 can't `cargo build` `std` because building `libstd.dylib` fails.\n- [x] rust-lang/rust#36488 can't `cargo build` `std` with `jemalloc` enabled from the `rust-src` component on Linux.\n  - I'm assuming that building `std` from the `rust-src` component will be the common case.\n\nNon-blockers:\n- [x]  rust-lang/rust#37252 LLVM assertion when `cargo build`ing `std` with `panic=abort`\n  - This is one of the main use cases\n- [x] rust-lang/rust#36512 `compiler_builtins`: base conditional compilation on the specification of the target rather than on its triple\n  - Should make it easier/possible to compile `compiler_builtins` for _custom_ targets.\n- [x] rust-lang/rust#35437 port `compiler-rt` intrinsics to Rust\n  - Should make it easier to port `compiler_builtins` to _new_ targets and to add new\n    intrinsics for features like `i128`.\n  - Initial work: https://github.com/japaric/rustc-builtins\n  - Merging into rust-lang/rust metabug: japaric/rustc-builtins#66\n\nFood for thought:\n- Escape hatch for compiling `std` on stable/beta.\n- Stability of this feature? Stability of Cargo features exposed by `std` and other crates? \n\n---\n### Original issue\n\n@alexcrichton in #34400: \n\n> One of the major blockers of our dream to \"lazily compile std\" is to ensure that we have the ability to compile compiler-rt on-demand.\n#34400 was sort of half-tracking this issue before being closed by #35021, whose PR message implies that the bit about lazy compilation is yet to be done.\n\n(And I'm frankly not even sure what lazy compilation of libstd even entails, so I'll have to ask @alexcrichton to elaborate further.)\n", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/36610/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/36610/timeline", "performed_via_github_app": null, "state_reason": "completed"}