{"url": "https://api.github.com/repos/rust-lang/rust/issues/73307", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73307/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73307/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73307/events", "html_url": "https://github.com/rust-lang/rust/issues/73307", "id": 638109826, "node_id": "MDU6SXNzdWU2MzgxMDk4MjY=", "number": 73307, "title": "vec or hashmap seem to still hold heap memory after lifetime", "user": {"login": "Right2Left", "id": 16451571, "node_id": "MDQ6VXNlcjE2NDUxNTcx", "avatar_url": "https://avatars.githubusercontent.com/u/16451571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Right2Left", "html_url": "https://github.com/Right2Left", "followers_url": "https://api.github.com/users/Right2Left/followers", "following_url": "https://api.github.com/users/Right2Left/following{/other_user}", "gists_url": "https://api.github.com/users/Right2Left/gists{/gist_id}", "starred_url": "https://api.github.com/users/Right2Left/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Right2Left/subscriptions", "organizations_url": "https://api.github.com/users/Right2Left/orgs", "repos_url": "https://api.github.com/users/Right2Left/repos", "events_url": "https://api.github.com/users/Right2Left/events{/privacy}", "received_events_url": "https://api.github.com/users/Right2Left/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2020-06-13T06:53:14Z", "updated_at": "2022-10-09T03:20:04Z", "closed_at": "2022-10-05T20:27:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::thread;\r\nuse std::time::Duration;\r\nuse std::collections::HashMap;\r\n\r\n \r\nfn main() {\r\n    //let value = read_file(\"./1k.conf\");\r\n    let value = \"test content\".to_string();\r\n\r\n    println!(\"begin\");\r\n    thread::sleep(Duration::from_secs(20));\r\n\r\n    test_vec_not_clear(&value);\r\n    wait_for_free(10);\r\n\r\n    test_map_not_clear(&value);\r\n    wait_for_free(10);\r\n\r\n    wait_for_free(40);\r\n\r\n    test_map_not_clear(&value);\r\n    wait_for_free(10);\r\n\r\n    println!(\"end\");\r\n    loop{\r\n        thread::sleep(Duration::from_secs(20));\r\n    }\r\n\r\n}\r\n\r\nfn wait_for_free(count: i32){\r\n    for i in 0..count  {\r\n        println!(\"wait count: {}\", i);\r\n        thread::sleep(Duration::from_secs(1));\r\n    }\r\n}\r\n\r\nfn test_vec_not_clear(value: &str){\r\n    println!(\"to test vec not clear\");\r\n    thread::sleep(Duration::from_secs(5));\r\n    let mut vec = Vec::new();\r\n    for _i in 0..1000000{\r\n        vec.push(value.to_string());\r\n    }\r\n}\r\n\r\nfn test_map_not_clear(value: &str){\r\n    println!(\"to test map not clear\");\r\n    thread::sleep(Duration::from_secs(5));\r\n    let mut map = HashMap::new();\r\n    for i in 0..1000000{\r\n        map.insert(i.to_string(), value.to_string());\r\n    }\r\n}\r\n```\r\n\r\nthen use valgrind to start:\r\n`valgrind --tool=massif --detailed-freq=1 --massif-out-file=massif.out.test.%p ./test_mem`\r\n\r\nI expected to see this happen: \r\nmemory will down to slow usage after line:24\r\n28M -> 300M -> 28M -> 300M -> 28M -> 300M -> 28M\r\n\r\nInstead, this happened: \r\nthe memory usage is : \r\n28M -> 300M -> 85M -> 300M -> 137M -> 300M -> 137M\r\nthe massif report\uff1a\r\n\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\ntest@test-Standard-PC-i440FX-PIIX-1996:~/hzx/test_mem/target/debug$ rustc --version --verbose\r\nrustc 1.41.1 (f3e1a954d 2020-02-24)\r\nbinary: rustc\r\ncommit-hash: f3e1a954d2ead4e2fc197c7da7d71e6c61bad196\r\ncommit-date: 2020-02-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.41.1\r\nLLVM version: 9.0\r\ntest@test-Standard-PC-i440FX-PIIX-1996:~/hzx/test_mem/target/debug$ \r\n```\r\n\r\n```\r\nrustc 1.46.0-nightly (feb3536eb 2020-06-09)\r\nbinary: rustc\r\ncommit-hash: feb3536eba10c2e4585d066629598f03d5ddc7c6\r\ncommit-date: 2020-06-09\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.46.0-nightly\r\nLLVM version: 10.0\r\n```\r\nin lastest version is same.\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73307/timeline", "performed_via_github_app": null, "state_reason": "completed"}