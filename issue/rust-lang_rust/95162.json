{"url": "https://api.github.com/repos/rust-lang/rust/issues/95162", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95162/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95162/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95162/events", "html_url": "https://github.com/rust-lang/rust/issues/95162", "id": 1174901740, "node_id": "I_kwDOAAsO6M5GB5Ps", "number": 95162, "title": "Early otherwise branch MIR opt is unsound", "user": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-03-21T05:16:52Z", "updated_at": "2022-03-23T19:00:04Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I re-wrote this pass in #91840 ; however, I don't think the new version is sound either (#95161). I'm currently working on a MCVE miscompilation, but quoting from the PR:\r\n\r\n> This is unsound. Someone could write code like this:\r\n> ```rust\r\n> let Q = val;\r\n> if discriminant(P) == otherwise {\r\n>     let ptr = &mut Q as *mut _ as *mut u8;\r\n>     unsafe { *ptr = 10; } // Any invalid value for the type\r\n> }\r\n> \r\n> match P {\r\n>     A => match Q {\r\n>         A => {\r\n>             // code\r\n>         }\r\n>         _ => {\r\n>             // don't use Q\r\n>         }\r\n>     }\r\n>     _ => {\r\n>         // don't use Q\r\n>     }\r\n> };\r\n> ```\r\n> \r\n> Hoisting the `discriminant(Q)` out of the `A` arm causes us to compute the discriminant of an\r\n> invalid value, which is UB.\r\n\r\n> In order to fix this, we would either need to show that the discriminant computation of\r\n> `place` is computed in all branches, including the `otherwise` branch, or we would need\r\n> another analysis pass to determine that the place is fully initialized. It might even be best\r\n> to have the hoisting be performed in a different pass and just do the CFG changing in this\r\n> pass.\r\n\r\nFor an example of a test that almost miscompiles, see [here](https://play.rust-lang.org/?version=nightly&mode=release&edition=2021&gist=b3b2cc8d9dc9629b85c77223ea7c4cce). The opt doesn't fire on that particular version, but it would if there was a `SimplifyCFG` immediately before.\r\n\r\n@rustbot label +A-mir +A-mir-opt +T-compiler", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95162/timeline", "performed_via_github_app": null, "state_reason": null}