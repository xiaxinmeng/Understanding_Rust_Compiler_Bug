{"url": "https://api.github.com/repos/rust-lang/rust/issues/55436", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55436/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55436/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55436/events", "html_url": "https://github.com/rust-lang/rust/issues/55436", "id": 374736762, "node_id": "MDU6SXNzdWUzNzQ3MzY3NjI=", "number": 55436, "title": "Impl stability is not checked", "user": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 201852178, "node_id": "MDU6TGFiZWwyMDE4NTIxNzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-stability", "name": "A-stability", "color": "f7e101", "default": false, "description": "Area: issues related to #[stable] and #[unstable] attributes themselves."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-10-28T09:58:59Z", "updated_at": "2023-05-10T07:10:05Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Found this implementing #55431. There I want to make an unstable impl for a stable trait with stable types. We can mark impls `#[unstable]`, but they seem to be just ignored.\r\n\r\n```rust\r\n#[unstable(feature = \"boxed_closure_impls\", ...)] // This seems to be ignored!\r\nimpl<A, F: FnOnce<A> + ?Sized> FnOnce<A> for Box<F> { ... }\r\n```\r\n\r\nA similar case is the `CoerceUnsized` impl for `NonNull` types. This is marked `#[unstable]` but can be used indirectly through coercion. These `#[unstable]` markers don't show up in rustdoc as well.\r\n\r\nQuestions:\r\n\r\n- Is this a bug (or an unimplemented feature)? I currently suspect that it's the case, because stability will get complicated when trait solver is involved.\r\n- If we implement this...\r\n  - When should we consider them unstable? In my mind, coherence checking should always see all impls as visible. The hidden impls RFC (https://github.com/rust-lang/rfcs/pull/2529) may have a similar idea.\r\n  - How should unstable traits behave with respect to type inference? I think they should be removed from candidates in winnowing if there are multiple options, and selected impls should be double-checked.\r\n  - Do we need an RFC in this case?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55436/timeline", "performed_via_github_app": null, "state_reason": null}