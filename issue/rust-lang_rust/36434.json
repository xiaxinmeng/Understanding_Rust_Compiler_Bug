{"url": "https://api.github.com/repos/rust-lang/rust/issues/36434", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/36434/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/36434/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/36434/events", "html_url": "https://github.com/rust-lang/rust/issues/36434", "id": 176516549, "node_id": "MDU6SXNzdWUxNzY1MTY1NDk=", "number": 36434, "title": "Can associated items be self-referential?", "user": {"login": "amluto", "id": 202764, "node_id": "MDQ6VXNlcjIwMjc2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/202764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amluto", "html_url": "https://github.com/amluto", "followers_url": "https://api.github.com/users/amluto/followers", "following_url": "https://api.github.com/users/amluto/following{/other_user}", "gists_url": "https://api.github.com/users/amluto/gists{/gist_id}", "starred_url": "https://api.github.com/users/amluto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amluto/subscriptions", "organizations_url": "https://api.github.com/users/amluto/orgs", "repos_url": "https://api.github.com/users/amluto/repos", "events_url": "https://api.github.com/users/amluto/events{/privacy}", "received_events_url": "https://api.github.com/users/amluto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-13T00:12:04Z", "updated_at": "2016-09-13T15:46:06Z", "closed_at": "2016-09-13T15:46:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider this code:\n\n```\ntrait Future {\n    type Item;\n}\n\ntrait Stream {\n    type Item;\n}\n\nimpl<S: Sized> Future for Stream<Item = S> {\n    type Item = Option<(S, Box<Self::Item>)>;\n}\n```\n\nIt fails to compile with:\n\n```\nerror: overflow evaluating the requirement `<Stream<Item=S> + 'static as Future>::Item` [E0275]\n```\n\nThis isn't quite the case described by E0275 -- this isn't recursively referencing more and more types -- `Self::Item` has what I would consider to be a concrete type, even if it's awkward to write down.\n\nAnyway, there are two questions here:\n1. If this kind of code isn't intended to be supported, should the E0275 explanation be updated or should the error message be improved?\n2. I think it would be really neat if this type of code were supported.  Then I could have a Future that streams out values without needing to treat a stream as a special case.  Would this make any sense from a language POV?\n", "closed_by": {"login": "amluto", "id": 202764, "node_id": "MDQ6VXNlcjIwMjc2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/202764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amluto", "html_url": "https://github.com/amluto", "followers_url": "https://api.github.com/users/amluto/followers", "following_url": "https://api.github.com/users/amluto/following{/other_user}", "gists_url": "https://api.github.com/users/amluto/gists{/gist_id}", "starred_url": "https://api.github.com/users/amluto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amluto/subscriptions", "organizations_url": "https://api.github.com/users/amluto/orgs", "repos_url": "https://api.github.com/users/amluto/repos", "events_url": "https://api.github.com/users/amluto/events{/privacy}", "received_events_url": "https://api.github.com/users/amluto/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/36434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/36434/timeline", "performed_via_github_app": null, "state_reason": "completed"}