{"url": "https://api.github.com/repos/rust-lang/rust/issues/72634", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72634/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72634/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72634/events", "html_url": "https://github.com/rust-lang/rust/issues/72634", "id": 625244736, "node_id": "MDU6SXNzdWU2MjUyNDQ3MzY=", "number": 72634, "title": "Poor diagnostics on missing semicolon after match statement", "user": {"login": "moxian", "id": 7831163, "node_id": "MDQ6VXNlcjc4MzExNjM=", "avatar_url": "https://avatars.githubusercontent.com/u/7831163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moxian", "html_url": "https://github.com/moxian", "followers_url": "https://api.github.com/users/moxian/followers", "following_url": "https://api.github.com/users/moxian/following{/other_user}", "gists_url": "https://api.github.com/users/moxian/gists{/gist_id}", "starred_url": "https://api.github.com/users/moxian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moxian/subscriptions", "organizations_url": "https://api.github.com/users/moxian/orgs", "repos_url": "https://api.github.com/users/moxian/repos", "events_url": "https://api.github.com/users/moxian/events{/privacy}", "received_events_url": "https://api.github.com/users/moxian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-26T22:39:26Z", "updated_at": "2020-05-28T23:57:43Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried this code ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=8a78e534c893d563ba3bf81786161178)):\r\n\r\n```rust\r\nfn stuff() -> i32 {\r\n    match 1i32 {\r\n        2i32 => 3i32,\r\n        _ => panic!(\"wrong\"),\r\n    }\r\n    4i32\r\n}\r\n```\r\n\r\nI expected to see this happen:\r\nA compiler error about missing `;` between `}` and `4i32`\r\n\r\nInstead, this happened:\r\n```rust\r\nerror[E0308]: `match` arms have incompatible types\r\n --> src/lib.rs:4:14\r\n  |\r\n2 | /     match 1i32 {\r\n3 | |         2i32 => 3i32,\r\n  | |                 ---- this is found to be of type `i32`\r\n4 | |         _ => panic!(\"wrong\"),\r\n  | |              ^^^^^^^^^^^^^^^ expected `i32`, found `()`\r\n5 | |     }\r\n  | |_____- `match` arms have incompatible types\r\n  |\r\n  = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\r\n```\r\n\r\nThis is very confusing, because I \"know\" that `panic!()` return type is `!` which is coercible to anything else (or whatever is the technical explanation for \"we can really ignore the return type of `panic!`\"), so it should not ever be present in error messages about mistyping stuff.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.44.0-beta.3 (0f0d70055 2020-05-11)\r\nbinary: rustc\r\ncommit-hash: 0f0d70055530bdbf3f0acb7b8ad25aa4a6ad8ea9\r\ncommit-date: 2020-05-11\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.44.0-beta.3\r\nLLVM version: 9.0\r\n```\r\n\r\nThis issue is also present in 1.34.2 (from a year ago), and in two-week-old nightly (rustc 1.45.0-nightly (99cb9ccb9 2020-05-11))\r\n\r\n\r\np.s.: When deminimizing the issue, i realized that it's even more confusing when match is the last statement in a for loop (as it was in my real code), i.e.:\r\n```rust\r\nfn stuff2(){\r\n    for _ in 0..5{\r\n        match 1i32 {\r\n            2i32 => 3i32,\r\n            _ => panic!(\"wrong\"),\r\n        }\r\n    }\r\n}\r\n```\r\ngives the same error message about incompatible match arms.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72634/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72634/timeline", "performed_via_github_app": null, "state_reason": null}