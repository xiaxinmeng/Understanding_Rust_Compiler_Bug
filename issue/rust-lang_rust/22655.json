{"url": "https://api.github.com/repos/rust-lang/rust/issues/22655", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/22655/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/22655/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/22655/events", "html_url": "https://github.com/rust-lang/rust/issues/22655", "id": 58486819, "node_id": "MDU6SXNzdWU1ODQ4NjgxOQ==", "number": 22655, "title": "can't store static references in a Unique indirectly", "user": {"login": "blaenk", "id": 84680, "node_id": "MDQ6VXNlcjg0Njgw", "avatar_url": "https://avatars.githubusercontent.com/u/84680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blaenk", "html_url": "https://github.com/blaenk", "followers_url": "https://api.github.com/users/blaenk/followers", "following_url": "https://api.github.com/users/blaenk/following{/other_user}", "gists_url": "https://api.github.com/users/blaenk/gists{/gist_id}", "starred_url": "https://api.github.com/users/blaenk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blaenk/subscriptions", "organizations_url": "https://api.github.com/users/blaenk/orgs", "repos_url": "https://api.github.com/users/blaenk/repos", "events_url": "https://api.github.com/users/blaenk/events{/privacy}", "received_events_url": "https://api.github.com/users/blaenk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-02-22T02:15:38Z", "updated_at": "2015-02-28T02:21:59Z", "closed_at": "2015-02-28T02:21:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**EDIT**: Removed talk of variance, since it doesn't seem to be the cause and it was unnecessarily longer due to it.\n\nIt seems to me like 801bc48939e6df1678ad2934ce35d981a068f253 is an attempt to introduce the second approach from the [unresolved questions](https://github.com/rust-lang/rfcs/blob/master/text/0738-variance.md#unresolved-questions) of RFC 738.\n\n> Rewrite safe abstractions to use `*const` (or even `usize`) instead of `*mut`, casting to `*mut` only they have a `&mut self` method. This is probably the most conservative option.\n\nIt seems to me that the commit is actually a **breaking change**, because it broke my code without my changing it. Consider this reduced example (thanks to @p1start for helping me to reduce it further).\n\n``` rust\npub struct Node<V> {\n    vals: V,\n    edges: ::std::ptr::Unique<Node<V>>,\n}\n\nfn is_send<T: Send>() {}\n\nfn main() {\n    is_send::<Node<&'static ()>>();\n}\n```\n\nThis overflows on the recursive requirement evaluation:\n\n```\n<anon>:16:5: 16:33 error: overflow evaluating the requirement `Node<&()> : core::marker::Send` [E0275]\n<anon>:16     is_send::<Node<&'static ()>>();\n              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n<anon>:16:5: 16:33 note: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\n<anon>:16     is_send::<Node<&'static ()>>();\n              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n<anon>:16:5: 16:33 note: required because it appears within the type `Node<&()>`\n<anon>:16     is_send::<Node<&'static ()>>();\n              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n<anon>:16:5: 16:33 note: required because it appears within the type `Node<&()>`\n<anon>:16     is_send::<Node<&'static ()>>();\n              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n<anon>:16:5: 16:33 note: required because it appears within the type `Node<&()>`\n<anon>:16     is_send::<Node<&'static ()>>();\n              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n<anon>:16:5: 16:33 note: required because it appears within the type `Node<&()>`\n<anon>:16     is_send::<Node<&'static ()>>();\n              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n<anon>:16:5: 16:33 note: required because it appears within the type `Node<&()>`\n<anon>:16     is_send::<Node<&'static ()>>();\n              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[... truncated ...]\n```\n\nI attempted to bump the recursion limit to 2046 even and it just told me to try again with 4096, so I figure it's just going to infinitely recurse if allowed.\n\nThis only seems to happen if I use a `&'static` reference, so I think that has something to do with it.\n\n@p1start came up with an example that actually hangs rustc completely when using a recursive type:\n\n``` rust\npub struct Node<V> {\n    vals: V,\n    edges: ::std::ptr::Unique<Node<V>>,\n}\n\nstruct Foo<'a> {\n    x: Box<Option<Node<(&'a (), Foo<'a>)>>>\n}\n\nfn is_send<T: Send>() {}\n\nfn main() {\n    is_send::<Foo>();\n}\n```\n\nThe real-world scenario that led me to this bug was a `BTreeMap` with `&'static str` keys:\n\n``` rust\nuse std::collections::BTreeMap;\n\nfn is_send<T: Send>() {}\n\nfn main() {\n    is_send::<BTreeMap<&'static (), ()>>();\n}\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/22655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/22655/timeline", "performed_via_github_app": null, "state_reason": "completed"}