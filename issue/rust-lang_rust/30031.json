{"url": "https://api.github.com/repos/rust-lang/rust/issues/30031", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/30031/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/30031/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/30031/events", "html_url": "https://github.com/rust-lang/rust/issues/30031", "id": 118670252, "node_id": "MDU6SXNzdWUxMTg2NzAyNTI=", "number": 30031, "title": "`arc::Weak::upgrade` does not account for overflow", "user": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 100522, "node_id": "MDU6TGFiZWwxMDA1MjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-crash", "name": "I-crash", "color": "e10c02", "default": false, "description": "Issue: The compiler crashes (SIGSEGV, SIGABRT, etc). Use I-ICE instead when the compiler panics."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 4434017660, "node_id": "LA_kwDOAAsO6M8AAAABCEm9fA", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-atomic", "name": "A-atomic", "color": "f7e101", "default": false, "description": "Area: atomics, barriers, and sync primitives"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-11-24T18:06:53Z", "updated_at": "2023-03-03T22:10:57Z", "closed_at": "2015-11-25T08:14:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Similar to the issue fixed in #27174, these two methods do not account for overflow, causing use-after-frees in extremely contrived situations on machines with 32-bit `usize`s.\n\nBoth of these examples exhibit the erroneous behavior when compiled and run with `-C opt-level=3 --target=i686-unknown-linux-gnu`:\n\n`downgrade.rs`:\n\n``` rust\nuse std::sync::Arc;\n\nfn main() {\n    let a = Arc::new(\"42\".to_owned());\n\n    for _ in 0..std::usize::MAX - 2 {\n        let w = Arc::downgrade(&a); // add 1 to the weak count\n        std::mem::forget(w);        // avoid decrementing the weak count\n    }\n\n    // the weak count is now `std::usize::MAX - 1`\n\n    {\n        let w = Arc::downgrade(&a); // add 1 to the weak count\n        let x = w.clone();          // add 1 to the weak count so it wraps to 0\n        drop(w);                    // drop `w`, deallocating the underlying `String`\n        drop(x);                    // drop `x`, trying to deallocate the same `String`\n    }\n}\n```\n\n`upgrade.rs`:\n\n``` rust\nuse std::sync::Arc;\n\nfn main() {\n    let a = Arc::new(\"42\".to_owned());\n    let w = Arc::downgrade(&a);\n\n    for _ in 0..std::usize::MAX - 1 {\n        let b = w.upgrade(); // add 1 to the strong count\n        std::mem::forget(b); // avoid decrementing the strong count\n    }\n\n    // the strong count is now `std::usize::MAX`\n\n    {\n        let b = w.upgrade().unwrap(); // add 1 to the strong count so it wraps to 0\n        let c = b.clone();            // add 1 to the strong count so it is 1\n        drop(c);                      // drop `c`, dropping the underlying `String`\n    }\n\n    println!(\"{:?}\", a); // accesses the dropped `String`\n}\n```\n\nNote that I've been working on a general consolidation of both reference-counted types at https://github.com/apasel422/ref_count.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/30031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/30031/timeline", "performed_via_github_app": null, "state_reason": "completed"}