{"url": "https://api.github.com/repos/rust-lang/rust/issues/12609", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/12609/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/12609/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/12609/events", "html_url": "https://github.com/rust-lang/rust/issues/12609", "id": 28458079, "node_id": "MDU6SXNzdWUyODQ1ODA3OQ==", "number": 12609, "title": "Pattern reachability algorithm fails in the presence of uninhabited types", "user": {"login": "glaebhoerl", "id": 1216629, "node_id": "MDQ6VXNlcjEyMTY2Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1216629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glaebhoerl", "html_url": "https://github.com/glaebhoerl", "followers_url": "https://api.github.com/users/glaebhoerl/followers", "following_url": "https://api.github.com/users/glaebhoerl/following{/other_user}", "gists_url": "https://api.github.com/users/glaebhoerl/gists{/gist_id}", "starred_url": "https://api.github.com/users/glaebhoerl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glaebhoerl/subscriptions", "organizations_url": "https://api.github.com/users/glaebhoerl/orgs", "repos_url": "https://api.github.com/users/glaebhoerl/repos", "events_url": "https://api.github.com/users/glaebhoerl/events{/privacy}", "received_events_url": "https://api.github.com/users/glaebhoerl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 37, "created_at": "2014-02-27T21:53:41Z", "updated_at": "2017-01-07T01:08:18Z", "closed_at": "2017-01-07T01:08:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "From `check_match.rs`:\n\n```\n// Algorithm from http://moscova.inria.fr/~maranget/papers/warn/index.html\n//\n// Whether a vector `v` of patterns is 'useful' in relation to a set of such\n// vectors `m` is defined as there being a set of inputs that will match `v`\n// but not any of the sets in `m`.\n//\n// This is used both for reachability checking (if a pattern isn't useful in\n// relation to preceding patterns, it is not reachable) and exhaustiveness\n// checking (if a wildcard pattern is useful in relation to a matrix, the\n// matrix isn't exhaustive).\n\n// Note: is_useful doesn't work on empty types, as the paper notes.\n// So it assumes that v is non-empty.\n```\n\nThis results in, most prominently (#4499), a `match` on an empty enum with a wildcard pattern being accepted:\n\n```\nenum X { }\nfn x() -> X { unimplemented!() }\nmatch x() {\n    _ => println!(\"hi\")\n}\n```\n\nwhile if you add a variant to the enum and a corresponding arm to the match:\n\n```\nenum X { X }\nfn x() -> X { unimplemented!() }\nmatch x() {\n    X => println!(\"hello\"),\n    _ => println!(\"hi\")\n}\n```\n\nrustc rejects the program with `error: unreachable pattern`.\n\nClearly a trailing wildcard pattern after you've already matched all possible values in preceding arms should always be considered unreachable, and this is true even when the number of potential values, and hence preceding arms, are both zero.\n\nAs the comment notes the algorithm we use relies on \"no empty types\" as an assumption, so this may not be an _easy_ bug, but it's still a bug.\n", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/12609/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/12609/timeline", "performed_via_github_app": null, "state_reason": "completed"}