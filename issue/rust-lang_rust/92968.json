{"url": "https://api.github.com/repos/rust-lang/rust/issues/92968", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92968/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92968/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92968/events", "html_url": "https://github.com/rust-lang/rust/issues/92968", "id": 1105080940, "node_id": "I_kwDOAAsO6M5B3jJs", "number": 92968, "title": "missing optimization: switching enum field order to deduplicate identical functions", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1049491442, "node_id": "MDU6TGFiZWwxMDQ5NDkxNDQy", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-heavy", "name": "I-heavy", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to binary size of generated code."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-01-16T15:24:22Z", "updated_at": "2022-02-18T21:43:26Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "````rust\r\npub enum A {\r\n    True,\r\n    False\r\n}\r\n\r\npub fn af(a: bool) -> char {\r\n    if a {\r\n        'X'\r\n    } else {\r\n        'F'\r\n    }\r\n}\r\n\r\npub fn bf(a: A) -> char {\r\n    match a {\r\n        A::True => 'X',\r\n        A::False => 'F',\r\n    }\r\n}\r\n````\r\nwe generate two functions for this example:\r\n````\r\nexample::af:\r\n        test    edi, edi\r\n        mov     ecx, 88\r\n        mov     eax, 70\r\n        cmovne  eax, ecx\r\n        ret\r\n\r\nexample::bf:\r\n        test    edi, edi\r\n        mov     ecx, 70\r\n        mov     eax, 88\r\n        cmovne  eax, ecx\r\n        ret\r\n\r\n````\r\nBut if I reorder the enum fields in the declaration to \r\n````\r\nFale,\r\nTrue\r\n````\r\nllvm manages to successfully deduplicate the functions:\r\n````\r\nexample::af:\r\n        test    edi, edi\r\n        mov     ecx, 88\r\n        mov     eax, 70\r\n        cmovne  eax, ecx\r\n        ret\r\n````\r\n\r\nhttps://rust.godbolt.org/z/dzj4KKP1h\r\n\r\nI wonder if we could somehow dedupe unconditionally, maybe by reordering the enum fields or doing some sort of whole-program-optimization (at lto stage?).\r\n\r\nhttps://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/reordering.20enum.20fields.20to.20merge.20functions", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92968/timeline", "performed_via_github_app": null, "state_reason": null}