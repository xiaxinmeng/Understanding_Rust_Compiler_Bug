{"url": "https://api.github.com/repos/rust-lang/rust/issues/69731", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69731/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69731/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69731/events", "html_url": "https://github.com/rust-lang/rust/issues/69731", "id": 576180625, "node_id": "MDU6SXNzdWU1NzYxODA2MjU=", "number": 69731, "title": "Add Kotlin Standard Library's functions: let & also", "user": {"login": "hzqd", "id": 40200761, "node_id": "MDQ6VXNlcjQwMjAwNzYx", "avatar_url": "https://avatars.githubusercontent.com/u/40200761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hzqd", "html_url": "https://github.com/hzqd", "followers_url": "https://api.github.com/users/hzqd/followers", "following_url": "https://api.github.com/users/hzqd/following{/other_user}", "gists_url": "https://api.github.com/users/hzqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/hzqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hzqd/subscriptions", "organizations_url": "https://api.github.com/users/hzqd/orgs", "repos_url": "https://api.github.com/users/hzqd/repos", "events_url": "https://api.github.com/users/hzqd/events{/privacy}", "received_events_url": "https://api.github.com/users/hzqd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-05T11:20:15Z", "updated_at": "2020-03-05T11:23:44Z", "closed_at": "2020-03-05T11:23:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "To better support method chaining, Rust could include following trait, which can improve user experience:\r\n```rust\r\npub trait KtStd {\r\n    fn let_imut<R, F>(&self, block: F) -> R where F: FnOnce(&Self) -> R;\r\n    fn let_mut<R, F>(&mut self, block: F) -> R where F: FnMut(&mut Self) -> R;\r\n    fn let_owned<R, F>(self, block: F) -> R where Self: Sized, F: FnOnce(Self) -> R;\r\n\r\n    fn also_imut<F>(&self, block: F) -> &Self where F: FnOnce(&Self);\r\n    fn also_mut<F>(&mut self, block: F) -> &mut Self where F: FnMut(&mut Self);\r\n}\r\n```\r\n\r\nBefore it:\r\n```rust\r\nlet mut s = String::new();\r\nstdin().read_line(&mut s).unwrap();\r\ns. // do something.\r\nprintln!(\"{}\" s);\r\n```\r\n\r\nAfter:\r\n```rust\r\nString::new()\r\n    .also_mut(|mut s| { stdin().read_line(&mut s).unwrap(); }) // return receiver\r\n    . // do some method channing.\r\n    .let_imut(|s| println!(\"{}\", s)) // return closure\r\n```\r\n\r\n\r\nHere is already an implementation:\r\n```rust\r\nimpl<T> KtStd for T {\r\n    fn let_imut<R, F>(&self, block: F) -> R\r\n    where\r\n        F: FnOnce(&Self) -> R,\r\n    {\r\n        block(self)\r\n    }\r\n\r\n    fn let_mut<R, F>(&mut self, mut block: F) -> R\r\n    where\r\n        F: FnMut(&mut Self) -> R,\r\n    {\r\n        block(self)\r\n    }\r\n\r\n    fn let_owned<R, F>(self, block: F) -> R\r\n    where\r\n        Self: Sized,\r\n        F: FnOnce(Self) -> R,\r\n    {\r\n        block(self)\r\n    }\r\n\r\n    fn also_imut<F>(&self, block: F) -> &Self\r\n    where\r\n        F: FnOnce(&Self),\r\n    {\r\n        block(self);\r\n        self\r\n    }\r\n\r\n    fn also_mut<F>(&mut self, mut block: F) -> &mut Self\r\n    where\r\n        F: FnMut(&mut Self),\r\n    {\r\n        block(self);\r\n        self\r\n    }\r\n}\r\n```", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69731/timeline", "performed_via_github_app": null, "state_reason": "completed"}