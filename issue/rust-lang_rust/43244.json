{"url": "https://api.github.com/repos/rust-lang/rust/issues/43244", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43244/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43244/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43244/events", "html_url": "https://github.com/rust-lang/rust/issues/43244", "id": 243134988, "node_id": "MDU6SXNzdWUyNDMxMzQ5ODg=", "number": 43244, "title": "Tracking issue for Vec::extract_if and LinkedList::extract_if", "user": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 166999014, "node_id": "MDU6TGFiZWwxNjY5OTkwMTQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-collections", "name": "A-collections", "color": "f7e101", "default": false, "description": "Area: std::collections."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 2240305001, "node_id": "MDU6TGFiZWwyMjQwMzA1MDAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/Libs-Tracked", "name": "Libs-Tracked", "color": "d4c5f9", "default": false, "description": "Libs issues that are tracked on the team's project board."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 192, "created_at": "2017-07-14T23:26:41Z", "updated_at": "2023-06-20T00:19:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Feature gate: `#![feature(extract_if)]` (previously `drain_filter`)\r\n\r\nThis is a tracking issue for `Vec::extract_if` and `LinkedList::extract_if`, which can be used for random deletes using iterators.\r\n\r\n### Public API\r\n\r\n```rust\r\npub mod alloc {\r\n    pub mod vec {\r\n        impl<T, A: Allocator> Vec<T, A> {\r\n            pub fn drain_filter<F>(&mut self, filter: F) -> DrainFilter<'_, T, F, A>\r\n            where\r\n                F: FnMut(&mut T) -> bool,\r\n            {\r\n            }\r\n        }\r\n\r\n        #[derive(Debug)]\r\n        pub struct DrainFilter<'a, T, F, #[unstable(feature = \"allocator_api\", issue = \"32838\")] A: Allocator = Global>\r\n        where\r\n            F: FnMut(&mut T) -> bool, {}\r\n\r\n        impl<T, F, A: Allocator> Iterator for DrainFilter<'_, T, F, A>\r\n        where\r\n            F: FnMut(&mut T) -> bool,\r\n        {\r\n            type Item = T;\r\n            fn next(&mut self) -> Option<T> {}\r\n            fn size_hint(&self) -> (usize, Option<usize>) {}\r\n        }\r\n\r\n        impl<T, F, A: Allocator> Drop for DrainFilter<'_, T, F, A>\r\n        where\r\n            F: FnMut(&mut T) -> bool,\r\n        {\r\n            fn drop(&mut self) {}\r\n        }\r\n    }\r\n\r\n    pub mod collections {\r\n        pub mod linked_list {\r\n            impl<T> LinkedList<T> {\r\n                pub fn drain_filter<F>(&mut self, filter: F) -> DrainFilter<'_, T, F>\r\n                where\r\n                    F: FnMut(&mut T) -> bool,\r\n                {\r\n                }\r\n            }\r\n\r\n            pub struct DrainFilter<'a, T: 'a, F: 'a>\r\n            where\r\n                F: FnMut(&mut T) -> bool, {}\r\n\r\n            impl<T, F> Iterator for DrainFilter<'_, T, F>\r\n            where\r\n                F: FnMut(&mut T) -> bool,\r\n            {\r\n                type Item = T;\r\n                fn next(&mut self) -> Option<T> {}\r\n                fn size_hint(&self) -> (usize, Option<usize>) {}\r\n            }\r\n\r\n            impl<T, F> Drop for DrainFilter<'_, T, F>\r\n            where\r\n                F: FnMut(&mut T) -> bool,\r\n            {\r\n                fn drop(&mut self) {}\r\n            }\r\n\r\n            impl<T: fmt::Debug, F> fmt::Debug for DrainFilter<'_, T, F>\r\n            where\r\n                F: FnMut(&mut T) -> bool,\r\n            {\r\n                fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {}\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Steps / History\r\n\r\n- [x] Implementation: #43245\r\n- [ ] Stabilization PR\r\n\r\n### Unresolved Questions\r\n\r\n- What should the method be named?\r\n- Should `drain_filter` accept a `Range` argument?\r\n- How should the iterator behave on drop/panic mid-iteration, or if leaked?\r\n- Missing `Send`+`Sync` impls on linked list's DrainFilter, [see comment](https://github.com/rust-lang/rust/issues/43244#issuecomment-1268857915)\r\n\r\nSee https://github.com/rust-lang/rust/issues/43244#issuecomment-641638196 for a more detailed summary of open issues.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43244/reactions", "total_count": 119, "+1": 103, "-1": 0, "laugh": 0, "hooray": 16, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43244/timeline", "performed_via_github_app": null, "state_reason": null}