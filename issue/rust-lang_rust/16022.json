{"url": "https://api.github.com/repos/rust-lang/rust/issues/16022", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16022/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16022/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16022/events", "html_url": "https://github.com/rust-lang/rust/issues/16022", "id": 38832051, "node_id": "MDU6SXNzdWUzODgzMjA1MQ==", "number": 16022, "title": "UnsafeCell semantics", "user": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-07-27T04:14:43Z", "updated_at": "2016-02-29T02:14:33Z", "closed_at": "2015-01-27T16:20:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed that we currently emit `noalias` on function parameters of type `&mut` unconditionally, even if they contain `UnsafeCell`. This means that we cannot create aliases to the data of `UnsafeCell` if we pass it to a function as `&mut`, which implies that we cannot create aliases to mutable data at all. This seems to go against the spirit and documentation of `UnsafeCell`. @cmr indicated on IRC that this might be reasonable, since   `UnsafeCell` is supposedly only used with `&`. I think it's a bit odd that changing from `&` to `&mut` will silently break `UnsafeCell` usage.\n\nI suggest we allow `UnsafeCell` to work with `&mut`. I further suggest that we only allow pointers based on (using LLVM's definition) `UnsafeCell::get` and `UnsafeCell::unwrap`. This means we can ensure the implementation of `UnsafeCell::get` doesn't base it's return on `&self` and then mark all references as `noalias`.\n\nI'm not sure if that will lead to performance improvements since it will inhibit alias analysis on the unsafe code. An expensive way to fix that would be to remove all non-conservative `noalias` markers, let `UnsafeCell::get`'s return be based on `&self` and run LLVM passes again.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16022/timeline", "performed_via_github_app": null, "state_reason": "completed"}