{"url": "https://api.github.com/repos/rust-lang/rust/issues/44118", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44118/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44118/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44118/events", "html_url": "https://github.com/rust-lang/rust/issues/44118", "id": 253198123, "node_id": "MDU6SXNzdWUyNTMxOTgxMjM=", "number": 44118, "title": "Document traits from #[derive(...)]", "user": {"login": "carols10cents", "id": 193874, "node_id": "MDQ6VXNlcjE5Mzg3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/193874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carols10cents", "html_url": "https://github.com/carols10cents", "followers_url": "https://api.github.com/users/carols10cents/followers", "following_url": "https://api.github.com/users/carols10cents/following{/other_user}", "gists_url": "https://api.github.com/users/carols10cents/gists{/gist_id}", "starred_url": "https://api.github.com/users/carols10cents/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carols10cents/subscriptions", "organizations_url": "https://api.github.com/users/carols10cents/orgs", "repos_url": "https://api.github.com/users/carols10cents/repos", "events_url": "https://api.github.com/users/carols10cents/events{/privacy}", "received_events_url": "https://api.github.com/users/carols10cents/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-27T23:38:05Z", "updated_at": "2022-01-18T22:17:29Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Moving here from https://github.com/rust-lang/cargo/issues/4406 on @dns2utf8's behalf:\r\n\r\nWhile documenting every public function of [ThreadPool](https://github.com/rust-threadpool/rust-threadpool) I had to implement `#[derive(Clone)` manually so I would be able to add an example.\r\n\r\nI assume `cargo doc` has a default template for the derive-able traits.\r\nSo I propose something like this:\r\n```rust\r\n#[derive(Clone)\r\n/// My custom doc\r\n/// ```\r\n/// let my = custom.example();\r\n/// ```\r\n#[derive(PartialEq, Eq)\r\n/// My custom doc for both traits\r\n/// ```\r\n/// let my = custom.example();\r\n/// ```\r\nstruct CustomStruct;\r\n```\r\n\r\nThe template would have to include something like \"yield\" within the code it is generating.\r\nIn this case it should generate something equal to:\r\n```rust\r\nimpl Clone for CustomStruct {\r\n    /// My custom doc\r\n    /// ```\r\n    /// let my = custom.example();\r\n    /// ```\r\n    fn clone(&self) -> Self { CustomStruct }\r\n}\r\n/* similar for the other two traits */\r\nstruct CustomStruct;\r\n```\r\n\r\nWhat do you think?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44118/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44118/timeline", "performed_via_github_app": null, "state_reason": null}