{"url": "https://api.github.com/repos/rust-lang/rust/issues/42374", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42374/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42374/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42374/events", "html_url": "https://github.com/rust-lang/rust/issues/42374", "id": 233092285, "node_id": "MDU6SXNzdWUyMzMwOTIyODU=", "number": 42374, "title": "Badly behaved Encode and Decode impls for FileMap", "user": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-02T06:51:47Z", "updated_at": "2022-05-15T16:50:06Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The impls added in #22235 violate some assumptions in libserialize by trying to serialize multiple values for the \"lines\" field. When decoding, it ends up hitting [this unwrap](https://github.com/rust-lang/rust/blob/1.17.0/src/libserialize/json.rs#L2091).\r\n\r\n```rust\r\n#![feature(rustc_private)]\r\n\r\nextern crate syntax_pos;\r\nextern crate serialize;\r\n\r\nuse std::cell::RefCell;\r\nuse syntax_pos::{FileMap, BytePos};\r\nuse serialize::json;\r\n\r\nfn main() {\r\n    let file_map = FileMap {\r\n        name: \"rustc\".to_owned(),\r\n        name_was_remapped: false,\r\n        crate_of_origin: 0,\r\n        src: None,\r\n        start_pos: BytePos(0),\r\n        end_pos: BytePos(0),\r\n        lines: RefCell::new(vec![BytePos(1), BytePos(2), BytePos(3)]),\r\n        multibyte_chars: RefCell::new(vec![]),\r\n    };\r\n\r\n    let j = json::as_pretty_json(&file_map).to_string();\r\n    println!(\"{}\", j);\r\n\r\n    // panic in libserialize\r\n    let _ = json::decode::<FileMap>(&j);\r\n}\r\n```\r\n\r\n```\r\n{\r\n  \"name\": \"rustc\",\r\n  \"name_was_remapped\": false,\r\n  \"start_pos\": 0,\r\n  \"end_pos\": 0,\r\n  \"lines\": 31111,\r\n  \"multibyte_chars\": []\r\n}\r\nthread 'main' panicked at 'called `Option::unwrap()` on a `None` value', /checkout/src/libcore/option.rs:335\r\n```\r\n\r\nThis may not be important if it has worked for this long, but there may be other variations of this bug lurking elsewhere.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42374/timeline", "performed_via_github_app": null, "state_reason": null}