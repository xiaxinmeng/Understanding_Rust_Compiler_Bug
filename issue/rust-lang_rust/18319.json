{"url": "https://api.github.com/repos/rust-lang/rust/issues/18319", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/18319/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/18319/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/18319/events", "html_url": "https://github.com/rust-lang/rust/issues/18319", "id": 46823297, "node_id": "MDU6SXNzdWU0NjgyMzI5Nw==", "number": 18319, "title": "JSON encoder silently corrupts some 64-bit ints", "user": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-10-25T20:56:26Z", "updated_at": "2014-12-09T13:51:51Z", "closed_at": "2014-12-09T13:51:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "_Because of JavaScript_\u2122, the JSON number type can't represent all 64-bit numbers.  This code\n\n``` rust\nextern crate serialize;\n\nuse serialize::json;\n\nfn main() {\n    let n: u64 = 0x747865747a6f6d71;\n    let j = json::encode(&n); \n    let m: u64 = json::decode(j.as_slice()).unwrap();\n    assert_eq!(n, m);  \n}\n```\n\nfails with\n\n```\ntask '<main>' failed at 'assertion failed: `(left == right) && (right == left)` (left: `8392569456549653873`, right: `8392569456549654464`)', foo.rs:9\n```\n\nThis is pretty surprising, especially when the `u64` field is buried within a struct that's deriving `Encodable`.  If the encoder is going to implement `emit_u64` and `emit_i64` at all, it should do something that doesn't silently corrupt data.  There's no universal standard for 64-bit numbers in JSON but a decimal ASCII string seems like a reasonable default.  `emit_uint` and `emit_int` should also switch to that.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/18319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/18319/timeline", "performed_via_github_app": null, "state_reason": "completed"}