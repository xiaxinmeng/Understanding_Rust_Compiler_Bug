{"url": "https://api.github.com/repos/rust-lang/rust/issues/78703", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78703/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78703/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78703/events", "html_url": "https://github.com/rust-lang/rust/issues/78703", "id": 735315838, "node_id": "MDU6SXNzdWU3MzUzMTU4Mzg=", "number": 78703, "title": "Suggest for<'a> syntax when lifetime bounds can't be satisfied", "user": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-11-03T13:23:43Z", "updated_at": "2023-01-08T01:21:58Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When a function incorrectly specifies lifetime as an argument, but uses a reference borrowed inside the function body:\r\n\r\n```rust\r\nasync fn actual<'a, BT>(bt: BT) where BT: BoolTrait<'a> {\r\n    let v = 42;\r\n    bt.check(&v).await;\r\n}\r\n```\r\n\r\nit would be helpful to suggest using the higher-rank trait bounds instead. This is probably the least known lifetime syntax, and it could help users who are stuck, because they've tried to put lifetime bounds on traits or methods.\r\n\r\n```rust\r\nasync fn expected<BT>(bt: BT) where BT: for<'a> BoolTrait<'a> {\r\n    let v = 42;\r\n    bt.check(&v).await;\r\n}\r\n```\r\n\r\n----\r\n\r\nContext for the example ([the playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=83e5d109a64cfa8a0377d7b920a892dc)):\r\n\r\n```rust\r\nuse core::future::Future;\r\nuse core::pin::Pin;\r\n\r\ntrait BoolTrait<'a> {\r\n    fn check(&'a self, value: &i32) -> Pin<Box<dyn Future<Output = bool> + 'a>>;\r\n}\r\n\r\nimpl<'a, F, Fut: 'a> BoolTrait<'a> for F\r\n    where\r\n        F: Fn(&i32) -> Fut,\r\n        Fut: Future<Output = bool> + 'a {\r\n    fn check(&'a self, value: &i32) -> Pin<Box<dyn Future<Output=bool> + 'a>> {\r\n        Box::pin(self(value))\r\n    }\r\n}\r\n```\r\n\r\n[forum thread](https://users.rust-lang.org/t/lifetimes-for-type-params-the-parameter-type-may-not-live-long-enough/50981)\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78703/timeline", "performed_via_github_app": null, "state_reason": null}