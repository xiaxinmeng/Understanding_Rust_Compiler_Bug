{"url": "https://api.github.com/repos/rust-lang/rust/issues/54378", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/54378/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/54378/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/54378/events", "html_url": "https://github.com/rust-lang/rust/issues/54378", "id": 362066958, "node_id": "MDU6SXNzdWUzNjIwNjY5NTg=", "number": 54378, "title": "\"Cannot infer appropriate lifetime\" points at associated const of type `Option<!>`", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-20T08:08:50Z", "updated_at": "2022-06-11T01:39:40Z", "closed_at": "2022-06-11T01:39:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I have no idea what is going on in this piece of code:\r\n```rust\r\n#![feature(never_type)]\r\n\r\nuse std::marker::PhantomData;\r\n\r\npub trait Machine<'a, 'mir, 'tcx>: Sized {\r\n    type MemoryKinds: ::std::fmt::Debug + Copy + Eq;\r\n    const MUT_STATIC_KIND: Option<Self::MemoryKinds>;\r\n}\r\n\r\npub struct CompileTimeEvaluator<'a, 'mir, 'tcx: 'a+'mir> {\r\n    pub _data: PhantomData<(&'a (), &'mir (), &'tcx ())>,\r\n}\r\n\r\nimpl<'a, 'mir, 'tcx: 'a + 'mir> Machine<'a, 'mir, 'tcx>\r\n    for CompileTimeEvaluator<'a, 'mir, 'tcx>\r\n{\r\n    type MemoryKinds = !;\r\n\r\n    const MUT_STATIC_KIND: Option<!> = None;\r\n}\r\n```\r\nwhen it [fails to compile](https://play.rust-lang.org/?gist=725ca22dcc0c3cfbb3812047973c1b84&version=nightly&mode=debug&edition=2015) saying\r\n```\r\nerror[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'tcx` due to conflicting requirements\r\n  --> src/lib.rs:19:5\r\n   |\r\n19 |     const MUT_STATIC_KIND: Option<!> = None;\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\nnote: first, the lifetime cannot outlive the lifetime 'tcx as defined on the impl at 14:16...\r\n  --> src/lib.rs:14:16\r\n   |\r\n14 | impl<'a, 'mir, 'tcx: 'a + 'mir> Machine<'a, 'mir, 'tcx>\r\n   |                ^^^^\r\nnote: ...but the lifetime must also be valid for the lifetime 'a as defined on the impl at 14:6...\r\n  --> src/lib.rs:14:6\r\n   |\r\n14 | impl<'a, 'mir, 'tcx: 'a + 'mir> Machine<'a, 'mir, 'tcx>\r\n   |      ^^\r\n   = note: ...so that the types are compatible:\r\n           expected Machine<'a, 'mir, 'tcx>\r\n              found Machine<'_, '_, '_>\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nI would expect the code to be accepted. How can something of type `Option<!>` have problems inferring a lifetime?!? The error is entirely not helpful.\r\n\r\nCuriously, if I remove the `'a + 'mir` bound on `'tcx` in the `impl`, [this compiles](https://play.rust-lang.org/?gist=5cfbe6401618e295747b0494ce3476e9&version=nightly&mode=debug&edition=2015). *Removing* a bound that's already implied by the type itself should not make a difference, right?", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/54378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/54378/timeline", "performed_via_github_app": null, "state_reason": "completed"}