{"url": "https://api.github.com/repos/rust-lang/rust/issues/85660", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85660/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85660/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85660/events", "html_url": "https://github.com/rust-lang/rust/issues/85660", "id": 900430224, "node_id": "MDU6SXNzdWU5MDA0MzAyMjQ=", "number": 85660, "title": "[ER] A harder case of missed array bound test elision", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-05-25T07:48:52Z", "updated_at": "2023-04-05T17:35:31Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Another common case where LLVM doesn't infer the safety of the array access:\r\n\r\n```rust\r\nfn copy_to_front_evens(arr: &mut [u32; 100]) {\r\n    let mut pos = 0; // Tortoise\r\n    for i in 0 .. arr.len() { // Hare\r\n        if arr[i] % 2 == 1 {\r\n            arr[pos] = arr[i];\r\n            pos += 1;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nCompiled with -O it performs a bound test in `arr[pos]`:\r\n\r\n```asm\r\ncopy_to_front_evens:\r\n\tpushq\t%rax\r\n\tmovq\t%rdi, %rax\r\n\tmovl\t$1, %ecx\r\n\txorl\t%edi, %edi\r\n\tjmp\t.LBB0_1\r\n\r\n.LBB0_7:\r\n\taddq\t$2, %rcx\r\n\tcmpq\t$101, %rcx\r\n\tje\t.LBB0_8\r\n\r\n.LBB0_1:\r\n\tmovl\t-4(%rax,%rcx,4), %edx\r\n\ttestb\t$1, %dl\r\n\tje\t.LBB0_4\r\n\tcmpq\t$99, %rdi\r\n\tja\t.LBB0_9\r\n\tmovl\t%edx, (%rax,%rdi,4)\r\n\taddq\t$1, %rdi\r\n\r\n.LBB0_4:\r\n\tmovl\t(%rax,%rcx,4), %edx\r\n\ttestb\t$1, %dl\r\n\tje\t.LBB0_7\r\n\tcmpq\t$99, %rdi\r\n\tja\t.LBB0_9\r\n\tmovl\t%edx, (%rax,%rdi,4)\r\n\taddq\t$1, %rdi\r\n\tjmp\t.LBB0_7\r\n\r\n.LBB0_8:\r\n\tpopq\t%rax\r\n\tretq\r\n\r\n.LBB0_9:\r\n\tleaq\t.L__unnamed_1(%rip), %rdx\r\n\tmovl\t$100, %esi\r\n\tcallq\t*core::panicking::panic_bounds_check@GOTPCREL(%rip)\r\n\tud2\r\n```\r\n\r\nI don't know if a back-end like LLVM is supposed to infer complex situations as this one. Perhaps this is the job of explicit code annotations of pre/post-conditions, loop (in)variants, etc.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85660/timeline", "performed_via_github_app": null, "state_reason": null}