{"url": "https://api.github.com/repos/rust-lang/rust/issues/42692", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42692/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42692/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42692/events", "html_url": "https://github.com/rust-lang/rust/issues/42692", "id": 236413531, "node_id": "MDU6SXNzdWUyMzY0MTM1MzE=", "number": 42692, "title": "Correct the partial initialization of a struct", "user": {"login": "vityafx", "id": 1146369, "node_id": "MDQ6VXNlcjExNDYzNjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1146369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vityafx", "html_url": "https://github.com/vityafx", "followers_url": "https://api.github.com/users/vityafx/followers", "following_url": "https://api.github.com/users/vityafx/following{/other_user}", "gists_url": "https://api.github.com/users/vityafx/gists{/gist_id}", "starred_url": "https://api.github.com/users/vityafx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vityafx/subscriptions", "organizations_url": "https://api.github.com/users/vityafx/orgs", "repos_url": "https://api.github.com/users/vityafx/repos", "events_url": "https://api.github.com/users/vityafx/events{/privacy}", "received_events_url": "https://api.github.com/users/vityafx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-06-16T08:21:58Z", "updated_at": "2023-01-27T14:46:53Z", "closed_at": "2017-06-17T01:14:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is a [question](https://stackoverflow.com/questions/19650265/using-rust-is-there-a-faster-shorter-way-to-initialize-variables-in-a-struct) about the partial initialization of a struct. The answer there says that to use the `..Default::default()` syntax your type must implement the `Default` trait, however, I don't see any reason for this.\r\n\r\nAssume we have the following code:\r\n\r\n```rust\r\nstruct A {\r\n    field: u64,\r\n}\r\nstruct B {\r\n    field_a: A,\r\n    field_b: Option<bool>,  // Option<bool> implements `Default` trait\r\n    field_c: Option<String>,  // Option<bool> implements `Default` trait\r\n    field_d: bool,    // bool implements `Default` trait\r\n}\r\n```\r\nSo, when we want to partially initialize it we actually don't need a `Default` trait to be implemented for our struct `B`, but we do for it's fields which we don't initialize (we initialize them by using `Default`):\r\n\r\n```rust\r\nimpl B {\r\n    fn new(a: A) {\r\n        B {\r\n            field_a: A,    // We have just specified the field which does not implement `Default` trait\r\n            ..Default::default()    // We have said that everything else is constructed with default values because their types implement Default trait\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nSo, there is really no need in `Default` trait to be implement for the whole structure `B` if it's fields do that. You simply don't even touch the `Default` trait of `B` structure, but you do that for it's fields!\r\n\r\nCan we improve partial structs initialization not to require `Default` trait for the whole type if we don't use it actually?", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42692/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42692/timeline", "performed_via_github_app": null, "state_reason": "completed"}