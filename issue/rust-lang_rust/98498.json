{"url": "https://api.github.com/repos/rust-lang/rust/issues/98498", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98498/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98498/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98498/events", "html_url": "https://github.com/rust-lang/rust/issues/98498", "id": 1284698646, "node_id": "I_kwDOAAsO6M5MkvIW", "number": 98498, "title": "Data race in thread::scope", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/94", "html_url": "https://github.com/rust-lang/rust/milestone/94", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/94/labels", "id": 7981561, "node_id": "MI_kwDOAAsO6M4Aecn5", "number": 94, "title": "1.63.0", "description": null, "creator": {"login": "rustbot", "id": 47979223, "node_id": "MDQ6VXNlcjQ3OTc5MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47979223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustbot", "html_url": "https://github.com/rustbot", "followers_url": "https://api.github.com/users/rustbot/followers", "following_url": "https://api.github.com/users/rustbot/following{/other_user}", "gists_url": "https://api.github.com/users/rustbot/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustbot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustbot/subscriptions", "organizations_url": "https://api.github.com/users/rustbot/orgs", "repos_url": "https://api.github.com/users/rustbot/repos", "events_url": "https://api.github.com/users/rustbot/events{/privacy}", "received_events_url": "https://api.github.com/users/rustbot/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 772, "state": "closed", "created_at": "2022-05-15T04:52:15Z", "updated_at": "2022-11-06T09:13:54Z", "due_on": null, "closed_at": "2022-08-14T12:59:19Z"}, "comments": 4, "created_at": "2022-06-25T19:50:50Z", "updated_at": "2022-07-15T22:24:07Z", "closed_at": "2022-07-15T22:24:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following code sometimes causes a data race to be reported by Miri:\r\n```rust\r\n#![feature(atomic_from_mut, inline_const)]\r\nuse std::sync::atomic::{AtomicBool, Ordering};\r\n\r\nfn main() {\r\nlet mut some_bools = [const { AtomicBool::new(false) }; 10];\r\n\r\nlet view: &mut [bool] = AtomicBool::get_mut_slice(&mut some_bools);\r\nassert_eq!(view, [false; 10]);\r\nview[..5].copy_from_slice(&[true; 5]);\r\n\r\nstd::thread::scope(|s| {\r\n    for t in &some_bools[..5] {\r\n        s.spawn(move || assert_eq!(t.load(Ordering::Relaxed), true));\r\n    }\r\n\r\n    for f in &some_bools[5..] {\r\n        s.spawn(move || assert_eq!(f.load(Ordering::Relaxed), false));\r\n    }\r\n});\r\n}\r\n```\r\nMiri reports:\r\n```\r\nnote: tracking was triggered\r\n   --> /home/r/.rustup/toolchains/miri/lib/rustlib/src/rust/library/std/src/thread/scoped.rs:133:17\r\n    |\r\n133 |       let scope = Scope {\r\n    |  _________________^\r\n134 | |         data: ScopeData {\r\n135 | |             num_running_threads: AtomicUsize::new(0),\r\n136 | |             main_thread: current(),\r\n...   |\r\n140 | |         scope: PhantomData,\r\n141 | |     };\r\n    | |_____^ created allocation with id 1082\r\n    |\r\n    = note: inside `std::thread::scope::<[closure@atomic.rs:12:20: 20:2], ()>` at /home/r/.rustup/toolchains/miri/lib/rustlib/src/rust/library/std/src/thread/scoped.rs:133:17\r\nnote: inside `main` at atomic.rs:12:1\r\n   --> atomic.rs:12:1\r\n    |\r\n12  | / std::thread::scope(|s| {\r\n13  | |     for t in &some_bools[..5] {\r\n14  | |         s.spawn(move || assert_eq!(t.load(Ordering::Relaxed), true));\r\n15  | |     }\r\n...   |\r\n19  | |     }\r\n20  | | });\r\n    | |__^\r\n\r\nerror: Undefined Behavior: Data race detected between Deallocate on Thread(id = 0, name = \"main\") and Read on Thread(id = 2) at alloc1082+0x8 (current vector clock = VClock([114, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]), conflicting timestamp = VClock([113, 0, 9, 9, 9, 0, 0, 0, 0, 0, 9]))\r\n  --> atomic.rs:12:1\r\n   |\r\n12 | / std::thread::scope(|s| {\r\n13 | |     for t in &some_bools[..5] {\r\n14 | |         s.spawn(move || assert_eq!(t.load(Ordering::Relaxed), true));\r\n15 | |     }\r\n...  |\r\n19 | |     }\r\n20 | | });\r\n   | |__^ Data race detected between Deallocate on Thread(id = 0, name = \"main\") and Read on Thread(id = 2) at alloc1082+0x8 (current vector clock = VClock([114, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]), conflicting timestamp = VClock([113, 0, 9, 9, 9, 0, 0, 0, 0, 0, 9]))\r\n   |\r\n   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\r\n   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\r\n\r\n   = note: inside `main` at atomic.rs:12:1\r\n```\r\nThe deallocation occurs when `scope` returns and its local variable `scope` gets deallocated.\r\n\r\nThe read occurs here (I am fairly sure):\r\n\r\nhttps://github.com/rust-lang/rust/blob/7098a714e8dffe32ae10a27a18a3d73b23431a55/library/std/src/thread/scoped.rs#L58-L59\r\n\r\nThis reads the contents of the field `self.main_thread` *after* the `fetch_sub`. But the moment the `fetch_sub` is done, the memory backing `self` might be deallocated. That makes the read a potential use-after-free, and a race with the deallocation.\r\n\r\nCc @m-ou-se ", "closed_by": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98498/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98498/timeline", "performed_via_github_app": null, "state_reason": "completed"}