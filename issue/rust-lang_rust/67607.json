{"url": "https://api.github.com/repos/rust-lang/rust/issues/67607", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67607/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67607/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67607/events", "html_url": "https://github.com/rust-lang/rust/issues/67607", "id": 542365710, "node_id": "MDU6SXNzdWU1NDIzNjU3MTA=", "number": 67607, "title": "Tracking code that can panic?", "user": {"login": "axos88", "id": 1281218, "node_id": "MDQ6VXNlcjEyODEyMTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1281218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axos88", "html_url": "https://github.com/axos88", "followers_url": "https://api.github.com/users/axos88/followers", "following_url": "https://api.github.com/users/axos88/following{/other_user}", "gists_url": "https://api.github.com/users/axos88/gists{/gist_id}", "starred_url": "https://api.github.com/users/axos88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axos88/subscriptions", "organizations_url": "https://api.github.com/users/axos88/orgs", "repos_url": "https://api.github.com/users/axos88/repos", "events_url": "https://api.github.com/users/axos88/events{/privacy}", "received_events_url": "https://api.github.com/users/axos88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-25T16:49:55Z", "updated_at": "2019-12-25T16:55:12Z", "closed_at": "2019-12-25T16:55:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is just something that occured to me that *might* be useful for a lot of things, but it will probably be a lot of work and might turn out to be a hard (as in non-linear) problem and might not be worth the trouble. Anyways, throwing it in here.\r\n\r\nSo the compiler potentially *could* track code that is able and is not able to panic. This could lead to solutions to a few things on the wishlist, such as https://github.com/rust-lang/rfcs/pull/1736, and probably many others.\r\n\r\nA new set of `Fn` subtypes could be introduced, that would only compile if the code within is unable to panic, and then `core::mem::replace_with` could ask for such a function.\r\nA lot of unsafe code could probably benefit too by `knowing` that a piece of code is unable to panic, or accepting only callbacks / Fn-s that are known not to panic. A lot of safety nets could be removed.\r\nActually the implementation of the https://github.com/Sgeo/take_mut/blob/master/src/lib.rs is an example where an input closure panicking might lead to UB, and having the compiler make that check can remove the catch_unwind checks.\r\n\r\n\r\nThere will probably be a bit of head scratching around FFI, but I think it might be safe to assume any code that calls FFI can panic (since it can pretty much circumvent all of rust's safety checks).\r\n\r\nI'm nowhere near knowledgable enough to make this into an RFC, but if there is generally positive feedback on this, I might try to tackle it.", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67607/timeline", "performed_via_github_app": null, "state_reason": "completed"}