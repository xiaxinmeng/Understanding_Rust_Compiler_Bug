{"url": "https://api.github.com/repos/rust-lang/rust/issues/49600", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49600/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49600/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49600/events", "html_url": "https://github.com/rust-lang/rust/issues/49600", "id": 310597730, "node_id": "MDU6SXNzdWUzMTA1OTc3MzA=", "number": 49600, "title": "\ud83d\ude80 create a query for the program clauses needed to solve a given goal", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 693557542, "node_id": "MDU6TGFiZWw2OTM1NTc1NDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-traits", "name": "WG-traits", "color": "c2e0c6", "default": false, "description": "Working group: Traits, https://internals.rust-lang.org/t/announcing-traits-working-group/6804"}], "state": "closed", "locked": false, "assignee": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-04-02T20:20:28Z", "updated_at": "2018-11-15T12:13:38Z", "closed_at": "2018-11-15T12:13:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "One of the key parts of the interface between the Chalk Solver and rustc is when the solver [requests the program clauses to solve a given goal](https://github.com/rust-lang-nursery/chalk/blob/6ab7717085360e6e8d1f2122186de4885341f6a5/chalk-engine/src/context/mod.rs#L179-L185):\r\n\r\n```rust\r\n    /// Returns the set of program clauses that might apply to\r\n    /// `goal`. (This set can be over-approximated, naturally.)\r\n    fn program_clauses(\r\n        &self,\r\n        environment: &I::Environment,\r\n        goal: &I::DomainGoal,\r\n    ) -> Vec<I::ProgramClause>;\r\n```\r\n\r\nIn Rustc, this is our chance to do some queries and figure out the full set of clauses. This is building on the work in https://github.com/rust-lang/rust/issues/49177, where we create the lowering rules for a trait, item, etc (see also [the rustc guide coverage](https://rust-lang-nursery.github.io/rustc-guide/traits-lowering-rules.html)). \r\n\r\nThe set of clauses is somewhat specific to the domain goal:\r\n\r\n- `Implemented(P0: Trait<...>)`\r\n  - come from the [header of `Trait`](https://rust-lang-nursery.github.io/rustc-guide/traits-lowering-rules.html#trait-header)\r\n  - come from [each impl](https://rust-lang-nursery.github.io/rustc-guide/traits-lowering-rules.html#lowering-impls)\r\n- `FromEnv(P0: Trait<..>)`\r\n  - these come -- ultimately -- from the param environment\r\n  - but because of [implied bounds rules](https://rust-lang-nursery.github.io/rustc-guide/traits-lowering-rules.html#implied-bounds) we need to combine with the rules from traits\r\n  - we need to compute transitive closure of traits reachable from the env and combine their program clauses, or else iterate over \"all traits\" (which is actually not easy)\r\n  - I have some code working towards this on my WIP branch for this issue\r\n- ... the rest have to be written out :)\r\n\r\nI'll probably keep iterating on this, but if somebody is keen to hack on it, I'd love to collaborate.", "closed_by": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49600/timeline", "performed_via_github_app": null, "state_reason": "completed"}