{"url": "https://api.github.com/repos/rust-lang/rust/issues/70693", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70693/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70693/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70693/events", "html_url": "https://github.com/rust-lang/rust/issues/70693", "id": 592600173, "node_id": "MDU6SXNzdWU1OTI2MDAxNzM=", "number": 70693, "title": "RFE: x86_64-unknown-linux-musl `static-pie` target for ASLR", "user": {"login": "haraldh", "id": 427825, "node_id": "MDQ6VXNlcjQyNzgyNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/427825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haraldh", "html_url": "https://github.com/haraldh", "followers_url": "https://api.github.com/users/haraldh/followers", "following_url": "https://api.github.com/users/haraldh/following{/other_user}", "gists_url": "https://api.github.com/users/haraldh/gists{/gist_id}", "starred_url": "https://api.github.com/users/haraldh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haraldh/subscriptions", "organizations_url": "https://api.github.com/users/haraldh/orgs", "repos_url": "https://api.github.com/users/haraldh/repos", "events_url": "https://api.github.com/users/haraldh/events{/privacy}", "received_events_url": "https://api.github.com/users/haraldh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 122062043, "node_id": "MDU6TGFiZWwxMjIwNjIwNDM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-security", "name": "A-security", "color": "f7e101", "default": false, "description": "Area: Security related issues (example: address space layout randomization)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 630662867, "node_id": "MDU6TGFiZWw2MzA2NjI4Njc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-musl", "name": "O-musl", "color": "6e6ec0", "default": false, "description": "Target: The musl libc"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-02T12:40:18Z", "updated_at": "2020-06-19T12:12:18Z", "closed_at": "2020-06-19T12:12:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With musl we can generate static binaries just fine. But without much work we can even generate a static position independent executable, which would enable Address Space Layout Randomization for free.\r\n\r\nFor this to work, we need:\r\n\r\n* rustc: `relocation-model=pic`\r\n* gcc: `-static-pie`\r\n* remove any `-no-pie`\r\n* ld.lld has `-pie` or `--pic-executable`\r\n* replace musl `crt1.o` with `rcrt1.o` https://github.com/rust-lang/rust/blob/0f72ce1b271b40a5652049362e6aab5914f7b1d3/src/librustc_target/spec/linux_musl_base.rs#L24\r\n\r\n```console\r\n\u276f ldd target/x86_64-unknown-linux-musl/debug/payload\r\n\tstatically linked\r\n\r\n\u276f file target/x86_64-unknown-linux-musl/debug/payload\r\n../target/x86_64-unknown-linux-musl/debug/payload: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), statically linked, BuildID[sha1]=747e92db7323dd8d1d57474e2a79516727c1b919, with debug_info, not stripped\r\n\r\n\u276f readelf -l target/x86_64-unknown-linux-musl/debug/payload\r\n\r\nElf file type is DYN (Shared object file)\r\nEntry point 0x3180\r\nThere are 10 program headers, starting at offset 64\r\n\r\nProgram Headers:\r\n  Type           Offset             VirtAddr           PhysAddr\r\n                 FileSiz            MemSiz              Flags  Align\r\n  LOAD           0x0000000000000000 0x0000000000000000 0x0000000000000000\r\n                 0x0000000000002f30 0x0000000000002f30  R      0x1000\r\n  LOAD           0x0000000000003000 0x0000000000003000 0x0000000000003000\r\n                 0x000000000002a68e 0x000000000002a68e  R E    0x1000\r\n  LOAD           0x000000000002e000 0x000000000002e000 0x000000000002e000\r\n                 0x000000000000d95c 0x000000000000d95c  R      0x1000\r\n  LOAD           0x000000000003c620 0x000000000003d620 0x000000000003d620\r\n                 0x0000000000001b34 0x0000000000003688  RW     0x1000\r\n  DYNAMIC        0x000000000003d990 0x000000000003e990 0x000000000003e990\r\n                 0x0000000000000130 0x0000000000000130  RW     0x8\r\n  NOTE           0x0000000000000270 0x0000000000000270 0x0000000000000270\r\n                 0x0000000000000024 0x0000000000000024  R      0x4\r\n  TLS            0x000000000003c620 0x000000000003d620 0x000000000003d620\r\n                 0x0000000000000030 0x00000000000000c0  R      0x20\r\n  GNU_EH_FRAME   0x0000000000034c1c 0x0000000000034c1c 0x0000000000034c1c\r\n                 0x0000000000000d54 0x0000000000000d54  R      0x4\r\n  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000\r\n                 0x0000000000000000 0x0000000000000000  RW     0x10\r\n  GNU_RELRO      0x000000000003c620 0x000000000003d620 0x000000000003d620\r\n                 0x00000000000019e0 0x00000000000019e0  R      0x1\r\n\r\n Section to Segment mapping:\r\n  Segment Sections...\r\n   00     .note.gnu.build-id .gnu.hash .dynsym .dynstr .rela.dyn \r\n   01     .init .text .fini \r\n   02     .rodata .debug_gdb_scripts .eh_frame_hdr .eh_frame .gcc_except_table \r\n   03     .tdata .data.rel.ro .dynamic .got .data .bss \r\n   04     .dynamic \r\n   05     .note.gnu.build-id \r\n   06     .tdata .tbss \r\n   07     .eh_frame_hdr \r\n   08     \r\n   09     .tdata .data.rel.ro .dynamic .got \r\n\r\n\u276f ../target/x86_64-unknown-linux-musl/debug/payload | grep Entry\r\naux: Entry(140177653338496)\r\n\r\n\u276f ../target/x86_64-unknown-linux-musl/debug/payload | grep Entry\r\naux: Entry(140526706565504)\r\n\r\n\u276f ../target/x86_64-unknown-linux-musl/debug/payload | grep Entry\r\naux: Entry(139632460222848)\r\n```\r\n`payload` is a program printing all the AUX vectors, which also contains the entry address of the program. As you can see it changes with every start of the program.\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70693/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70693/timeline", "performed_via_github_app": null, "state_reason": "completed"}