{"url": "https://api.github.com/repos/rust-lang/rust/issues/86172", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86172/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86172/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86172/events", "html_url": "https://github.com/rust-lang/rust/issues/86172", "id": 916460920, "node_id": "MDU6SXNzdWU5MTY0NjA5MjA=", "number": 86172, "title": "Compile error: static lifetime not satisfied but it is", "user": {"login": "Skepfyr", "id": 3080863, "node_id": "MDQ6VXNlcjMwODA4NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/3080863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Skepfyr", "html_url": "https://github.com/Skepfyr", "followers_url": "https://api.github.com/users/Skepfyr/followers", "following_url": "https://api.github.com/users/Skepfyr/following{/other_user}", "gists_url": "https://api.github.com/users/Skepfyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Skepfyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Skepfyr/subscriptions", "organizations_url": "https://api.github.com/users/Skepfyr/orgs", "repos_url": "https://api.github.com/users/Skepfyr/repos", "events_url": "https://api.github.com/users/Skepfyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Skepfyr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 3793096324, "node_id": "LA_kwDOAAsO6M7iFg6E", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-async", "name": "WG-async", "color": "c2e0c6", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2021-06-09T17:44:47Z", "updated_at": "2023-05-18T16:50:19Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n```rust\r\nuse std::{\r\n    future::Future,\r\n    marker::PhantomData,\r\n    {pin::Pin, sync::Arc},\r\n};\r\n\r\nfn validate_signature() -> impl Future<Output = ()> + Send {\r\n    let certificate_store = Cache::<CertificateRetriever>::new();\r\n    let res = Box::pin(async move {\r\n        certificate_store.get().await;\r\n    });\r\n    fn foo<T: 'static>(_c: &T) {}\r\n    res\r\n}\r\n\r\ntype CertificateRetriever =\r\n    Arc<dyn Retrieve<Future = Pin<Box<dyn Future<Output = ()> + Send + 'static>>>>;\r\n\r\ntrait Retrieve: Send + Sync {\r\n    type Future: Future<Output = ()> + Send + 'static;\r\n\r\n    fn get(&self) -> Self::Future;\r\n}\r\n\r\nimpl<R: Retrieve + ?Sized> Retrieve for Arc<R> {\r\n    type Future = R::Future;\r\n\r\n    fn get(&self) -> Self::Future {\r\n        todo!()\r\n    }\r\n}\r\n\r\nstruct Cache<R: Retrieve> {\r\n    marker: PhantomData<R>,\r\n}\r\n\r\nimpl<R> Cache<R>\r\nwhere\r\n    R: Retrieve + 'static,\r\n{\r\n    fn new() -> Self {\r\n        todo!()\r\n    }\r\n    async fn get(&self) {\r\n        self.get_value().await\r\n    }\r\n\r\n    fn get_value(&self) -> R::Future {\r\n        todo!()\r\n    }\r\n}\r\n\r\n```\r\n[Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=264bf5dbdc598ac4a0e4aed54ff64a34)\r\n\r\nI expected to see this to compile fine, minor changes to the code cause it to compile.\r\n\r\nInstead, I get this error:\r\n```\r\nerror[E0477]: the type `Pin<Box<dyn Future<Output = ()> + Send>>` does not fulfill the required lifetime\r\n --> src/lib.rs:7:28\r\n  |\r\n7 | fn validate_signature() -> impl Future<Output = ()> + Send {\r\n  |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: type must satisfy the static lifetime\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nThis may be a duplicate of #80052 but as it involves no associated constants I'm keeping it separate for now.\r\nCompiled with rustc 1.52.1\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86172/timeline", "performed_via_github_app": null, "state_reason": null}