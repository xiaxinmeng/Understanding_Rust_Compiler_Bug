{"url": "https://api.github.com/repos/rust-lang/rust/issues/70944", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70944/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70944/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70944/events", "html_url": "https://github.com/rust-lang/rust/issues/70944", "id": 597057026, "node_id": "MDU6SXNzdWU1OTcwNTcwMjY=", "number": 70944, "title": "\"mismatched types\" on indexing into trait with two Index subtraits via output type", "user": {"login": "fabianschuiki", "id": 342324, "node_id": "MDQ6VXNlcjM0MjMyNA==", "avatar_url": "https://avatars.githubusercontent.com/u/342324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabianschuiki", "html_url": "https://github.com/fabianschuiki", "followers_url": "https://api.github.com/users/fabianschuiki/followers", "following_url": "https://api.github.com/users/fabianschuiki/following{/other_user}", "gists_url": "https://api.github.com/users/fabianschuiki/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabianschuiki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabianschuiki/subscriptions", "organizations_url": "https://api.github.com/users/fabianschuiki/orgs", "repos_url": "https://api.github.com/users/fabianschuiki/repos", "events_url": "https://api.github.com/users/fabianschuiki/events{/privacy}", "received_events_url": "https://api.github.com/users/fabianschuiki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-09T06:39:11Z", "updated_at": "2020-10-18T02:28:20Z", "closed_at": "2020-10-18T02:28:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "If a trait has two or more `Index` subtraits, and one obtains a reference to something that implements that trait under specific conditions, typeck reports an error for indexing with all but the last `Index`'s key. Seems to happen only if that reference was obtained through another trait's output type.\r\n\r\nConsider the following example ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=619415d35b0211d5daffd055f90593ae)):\r\n```rust\r\nuse std::ops::Index;\r\n\r\nstruct KeyA;\r\nstruct KeyB;\r\nstruct KeyC;\r\n\r\ntrait Foo: Index<KeyA> + Index<KeyB> + Index<KeyC> {}\r\ntrait FooBuilder {\r\n    type Inner: Foo;\r\n    fn inner(&self) -> &Self::Inner;\r\n}\r\n\r\nfn do_stuff(foo: &impl FooBuilder) {\r\n    let inner = foo.inner();\r\n    &inner[KeyA];\r\n    //     ^^^^ expected struct `KeyC`, found struct `KeyA`\r\n    &inner[KeyB];\r\n    //     ^^^^ expected struct `KeyC`, found struct `KeyB`\r\n    &inner[KeyC];\r\n}\r\n```\r\n\r\nThis breaks with the message:\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/lib.rs:15:12\r\n   |\r\n15 |     &inner[KeyA];\r\n   |            ^^^^ expected struct `KeyC`, found struct `KeyA`\r\n\r\nerror[E0308]: mismatched types\r\n  --> src/lib.rs:16:12\r\n   |\r\n16 |     &inner[KeyB];\r\n   |            ^^^^ expected struct `KeyC`, found struct `KeyB`\r\n```\r\n\r\nThe issue does not occur if the indexing is performed on a `Foo` directly. That is, the following works just fine ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=ede84fb6ba7fe32eda13633e99a14e68)):\r\n```rust\r\nfn do_stuff(foo: &impl Foo) {\r\n    let inner = foo;\r\n    &inner[KeyA];\r\n    &inner[KeyB];\r\n    &inner[KeyC];\r\n}\r\n```\r\n\r\nWhat I would expect to happen is that all three index operations work. More specifically, I would expect each of the operations to produce the corresponding `Index::Output` type correctly.\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.42.0 (b8cedc004 2020-03-09)\r\nbinary: rustc\r\ncommit-hash: b8cedc00407a4c56a3bda1ed605c6fc166655447\r\ncommit-date: 2020-03-09\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.42.0\r\nLLVM version: 9.0\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70944/timeline", "performed_via_github_app": null, "state_reason": "completed"}