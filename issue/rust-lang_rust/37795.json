{"url": "https://api.github.com/repos/rust-lang/rust/issues/37795", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/37795/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/37795/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/37795/events", "html_url": "https://github.com/rust-lang/rust/issues/37795", "id": 189617339, "node_id": "MDU6SXNzdWUxODk2MTczMzk=", "number": 37795, "title": "entry id not found when using copy and serde_derive", "user": {"login": "xrl", "id": 693059, "node_id": "MDQ6VXNlcjY5MzA1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/693059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xrl", "html_url": "https://github.com/xrl", "followers_url": "https://api.github.com/users/xrl/followers", "following_url": "https://api.github.com/users/xrl/following{/other_user}", "gists_url": "https://api.github.com/users/xrl/gists{/gist_id}", "starred_url": "https://api.github.com/users/xrl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xrl/subscriptions", "organizations_url": "https://api.github.com/users/xrl/orgs", "repos_url": "https://api.github.com/users/xrl/repos", "events_url": "https://api.github.com/users/xrl/events{/privacy}", "received_events_url": "https://api.github.com/users/xrl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-11-16T07:34:01Z", "updated_at": "2016-11-22T03:50:06Z", "closed_at": "2016-11-18T01:04:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "My `cargo build` is failing with a panic, directing me here to post information.\r\n\r\nI tried this code:\r\n\r\n`guid.rs`:\r\n```\r\npub type GuidPrefix = [u8; 12];\r\n\r\n#[derive(Default, Debug, PartialEq, Copy, Clone)]\r\npub struct Guid {\r\n    pub guid_prefix: GuidPrefix,\r\n    pub entity_id: EntityId\r\n}\r\n\r\n\r\nimpl Guid {\r\n    pub fn new() -> Self {\r\n        Guid {\r\n            guid_prefix: [0; 12],\r\n            entity_id: EntityId {\r\n                entity_key: [0; 3],\r\n                entity_kind: EntityKind::UserUnknown\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n`entity_id.rs`:\r\n\r\n```\r\n#[derive(Default, Debug, PartialEq, Copy, Clone, Deserialize, Serialize)]\r\npub struct EntityId {\r\n    pub entity_key: [u8; 3],\r\n    pub entity_kind: EntityKind,\r\n}\r\n```\r\n\r\nI expected to see this happen: no panics\r\n\r\nInstead, this happened: panic\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.15.0-nightly (0ed951993 2016-11-14)\r\nbinary: rustc\r\ncommit-hash: 0ed951993fb5721a303ca5fa743543dd9f3f6b10\r\ncommit-date: 2016-11-14\r\nhost: x86_64-apple-darwin\r\nrelease: 1.15.0-nightly\r\nLLVM version: 3.9\r\n```\r\n\r\nBacktrace:\r\n\r\n```\r\nLP-XLANGE-OSX:rtps xlange$ RUST_BACKTRACE=1 cargo build\r\n   Compiling rtps v0.2.4 (file:///Users/xlange/code/rust/rtps)\r\nerror[E0428]: a value named `_IMPL_SERIALIZE_FOR_EntityId` has already been defined in this module\r\n  --> src/common_types/entity_id.rs:66:63\r\n   |\r\n66 | #[derive(Default, Debug, PartialEq, Copy, Clone, Deserialize, Serialize)]\r\n   |                                                  -----------  ^^^^^^^^^ already defined\r\n   |                                                  |\r\n   |                                                  previous definition of `_IMPL_SERIALIZE_FOR_EntityId` here\r\n\r\nerror[E0428]: a type named `EntityId` has already been defined in this module\r\n  --> src/common_types/entity_id.rs:67:1\r\n   |\r\n66 | #[derive(Default, Debug, PartialEq, Copy, Clone, Deserialize, Serialize)]\r\n   |                                                               --------- previous definition of `EntityId` here\r\n67 | pub struct EntityId {\r\n   | ^ already defined\r\n\r\nerror[E0428]: a value named `_IMPL_SERIALIZE_FOR_FragmentNumberSet` has already been defined in this module\r\n --> src/common_types/fragment_number.rs:3:38\r\n  |\r\n3 | #[derive(PartialEq,Debug,Deserialize,Serialize,Copy,Clone)]\r\n  |                          ----------- ^^^^^^^^^ already defined\r\n  |                          |\r\n  |                          previous definition of `_IMPL_SERIALIZE_FOR_FragmentNumberSet` here\r\n\r\nerror[E0428]: a type named `FragmentNumberSet` has already been defined in this module\r\n --> src/common_types/fragment_number.rs:4:1\r\n  |\r\n3 | #[derive(PartialEq,Debug,Deserialize,Serialize,Copy,Clone)]\r\n  |                                      --------- previous definition of `FragmentNumberSet` here\r\n4 | pub struct FragmentNumberSet {\r\n  | ^ already defined\r\n\r\nerror[E0428]: a type named `ArcBuffer` has already been defined in this module\r\n --> src/common_types/rc_buffer.rs:7:1\r\n  |\r\n6 | #[derive(Debug, Clone, PartialEq, Serialize)]\r\n  |                                   --------- previous definition of `ArcBuffer` here\r\n7 | pub struct ArcBuffer {\r\n  | ^ already defined\r\n\r\nerror[E0428]: a value named `_IMPL_DESERIALIZE_FOR_SequenceNumberSet` has already been defined in this module\r\n --> src/common_types/sequence_number.rs:7:36\r\n  |\r\n7 | #[derive(PartialEq,Debug,Serialize,Deserialize,Copy,Clone,Default)]\r\n  |                          --------- ^^^^^^^^^^^ already defined\r\n  |                          |\r\n  |                          previous definition of `_IMPL_DESERIALIZE_FOR_SequenceNumberSet` here\r\n\r\nerror[E0428]: a type named `SequenceNumberSet` has already been defined in this module\r\n  --> src/common_types/sequence_number.rs:8:1\r\n   |\r\n7  | #[derive(PartialEq,Debug,Serialize,Deserialize,Copy,Clone,Default)]\r\n   |                                    ----------- previous definition of `SequenceNumberSet` here\r\n8  | pub struct SequenceNumberSet {\r\n   | ^ already defined\r\n\r\nerror[E0428]: a value named `_IMPL_SERIALIZE_FOR_Timestamp` has already been defined in this module\r\n --> src/common_types/timestamp.rs:1:38\r\n  |\r\n1 | #[derive(PartialEq,Debug,Deserialize,Serialize,Clone,Copy)]\r\n  |                          ----------- ^^^^^^^^^ already defined\r\n  |                          |\r\n  |                          previous definition of `_IMPL_SERIALIZE_FOR_Timestamp` here\r\n\r\nerror[E0428]: a type named `Timestamp` has already been defined in this module\r\n --> src/common_types/timestamp.rs:2:1\r\n  |\r\n1 | #[derive(PartialEq,Debug,Deserialize,Serialize,Clone,Copy)]\r\n  |                                      --------- previous definition of `Timestamp` here\r\n2 | pub struct Timestamp {\r\n  | ^ already defined\r\n\r\nerror[E0428]: a type named `Message` has already been defined in this module\r\n  --> src/message/mod.rs:10:1\r\n   |\r\n9  | #[derive(Deserialize,Debug,PartialEq)]\r\n   |          ----------- previous definition of `Message` here\r\n10 | pub struct Message {\r\n   | ^ already defined\r\n\r\nerror[E0428]: a type named `Submessage` has already been defined in this module\r\n --> src/submessage.rs:7:1\r\n  |\r\n6 | #[derive(Deserialize, Debug, PartialEq)]\r\n  |          ----------- previous definition of `Submessage` here\r\n7 | pub struct Submessage {\r\n  | ^ already defined\r\n\r\nerror[E0432]: unresolved import `super::super::super::sync::Monitor`\r\n --> src/entity/traits/history_cache_trait.rs:4:5\r\n  |\r\n4 | use super::super::super::sync::Monitor;\r\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `Monitor` in `sync`\r\n\r\nerror[E0432]: unresolved import `super::super::super::sync::Monitor`\r\n  --> src/entity/reader/stateless_reader.rs:14:5\r\n   |\r\n14 | use super::super::super::sync::Monitor;\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `Monitor` in `sync`\r\n\r\nerror[E0204]: the trait `Copy` may not be implemented for this type\r\n --> src/common_types/guid.rs:5:37\r\n  |\r\n5 | #[derive(Default, Debug, PartialEq, Copy, Clone)]\r\n  |                                     ^^^^ field `entity_id` does not implement `Copy`\r\n\r\nerror: internal compiler error: ../src/librustc_metadata/decoder.rs:490: entry: id not found: DefIndex(1) in crate \"serde_derive\" with number 13\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: run with `RUST_BACKTRACE=1` for a backtrace\r\n\r\nthread 'rustc' panicked at 'Box<Any>', ../src/librustc_errors/lib.rs:424\r\nstack backtrace:\r\n   1:        0x10553f4ea - std::sys::imp::backtrace::tracing::imp::write::h944c02ac40aee2d7\r\n   2:        0x10554c77f - std::panicking::default_hook::{{closure}}::h6875a2976258b020\r\n   3:        0x10554c32d - std::panicking::default_hook::h88ffbc5922643264\r\n   4:        0x10554cc46 - std::panicking::rust_panic_with_hook::ha5aed1dfc0e220e3\r\n   5:        0x102cd4f2a - std::panicking::begin_panic::h264cdc75d51b518b\r\n   6:        0x102ce5d34 - rustc_errors::Handler::bug::h620f7270292f0095\r\n   7:        0x102040ecc - rustc::session::opt_span_bug_fmt::{{closure}}::h4a9b70c3df8b4b3a\r\n   8:        0x102040cd9 - rustc::session::opt_span_bug_fmt::h7d83586c6e2c7ae6\r\n   9:        0x10204085a - rustc::session::bug_fmt::he2d2f00a4afa9d1e\r\n  10:        0x101578b73 - rustc_metadata::decoder::<impl rustc_metadata::cstore::CrateMetadata>::entry::h5e3d8114267e9116\r\n  11:        0x1015814ab - rustc_metadata::cstore_impl::<impl rustc::middle::cstore::CrateStore<'tcx> for rustc_metadata::cstore::CStore>::visibility::h2949b511f18961ee\r\n  12:        0x101589f66 - rustc_metadata::cstore_impl::<impl rustc::middle::cstore::CrateStore<'tcx> for rustc_metadata::cstore::CStore>::visible_parent_map::hab53861eb74bce8d\r\n  13:        0x10208a1c4 - rustc::ty::item_path::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::push_item_path::haa7f7a9afda5f72a\r\n  14:        0x1020d62d5 - rustc::util::ppaux::parameterized::h7bcfb1fd3d8a947a\r\n  15:        0x105590cb5 - core::fmt::write::h01739b8f12f355f9\r\n  16:        0x102072c4c - rustc::traits::specialize::specialization_graph::Graph::insert::h62250bf0632d4218\r\n  17:        0x1020a6d12 - rustc::ty::trait_def::TraitDef::add_impl_for_specialization::h39896639aba068c7\r\n  18:        0x101371b67 - <rustc_typeck::coherence::overlap::OverlapChecker<'cx, 'tcx> as rustc::hir::intravisit::Visitor<'v>>::visit_item::h5ba64bfdace3da91\r\n  19:        0x10137aaab - rustc_typeck::coherence::check_coherence::h7b433ad2f4520d1a\r\n  20:        0x1013816a1 - rustc_typeck::check_crate::h4045752b69a796e8\r\n  21:        0x100e1e1ac - rustc_driver::driver::phase_3_run_analysis_passes::{{closure}}::h97a3a12d948df547\r\n  22:        0x100e1b37d - rustc_driver::driver::phase_3_run_analysis_passes::hb0ad9de18d423e67\r\n  23:        0x100e02bc5 - rustc_driver::driver::compile_input::h8e119234b60571d5\r\n  24:        0x100e48229 - rustc_driver::run_compiler::hbdfc4f84e2e0f4b9\r\n  25:        0x100d67988 - std::panicking::try::do_call::hf679f17bf3b43b0b\r\n  26:        0x10554f1fa - __rust_maybe_catch_panic\r\n  27:        0x100d8baaf - <F as alloc::boxed::FnBox<A>>::call_box::h506fb5d7b8891cd4\r\n  28:        0x10554b8d4 - std::sys::imp::thread::Thread::new::thread_start::h8084b1107992ae5b\r\n  29:     0x7fff9169c99c - _pthread_body\r\n  30:     0x7fff9169c919 - _pthread_start\r\n\r\nerror: Could not compile `rtps`.\r\n```", "closed_by": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/37795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/37795/timeline", "performed_via_github_app": null, "state_reason": "completed"}