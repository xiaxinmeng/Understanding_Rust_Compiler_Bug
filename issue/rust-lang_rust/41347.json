{"url": "https://api.github.com/repos/rust-lang/rust/issues/41347", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41347/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41347/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41347/events", "html_url": "https://github.com/rust-lang/rust/issues/41347", "id": 222234288, "node_id": "MDU6SXNzdWUyMjIyMzQyODg=", "number": 41347, "title": "std::fs file not found code: 38, message: \"Function not implemented\"", "user": {"login": "yoni386", "id": 12250330, "node_id": "MDQ6VXNlcjEyMjUwMzMw", "avatar_url": "https://avatars.githubusercontent.com/u/12250330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoni386", "html_url": "https://github.com/yoni386", "followers_url": "https://api.github.com/users/yoni386/followers", "following_url": "https://api.github.com/users/yoni386/following{/other_user}", "gists_url": "https://api.github.com/users/yoni386/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoni386/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoni386/subscriptions", "organizations_url": "https://api.github.com/users/yoni386/orgs", "repos_url": "https://api.github.com/users/yoni386/repos", "events_url": "https://api.github.com/users/yoni386/events{/privacy}", "received_events_url": "https://api.github.com/users/yoni386/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 33, "created_at": "2017-04-17T21:17:38Z", "updated_at": "2019-12-09T18:56:44Z", "closed_at": "2019-12-09T18:56:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Rust Generated code worked on CentOS but but *fail on VMware Esxi hypervisor.\r\n\r\nSome of the code portion does work on the same machine. explained in detail below.\r\nc and rust libc works fine while rust std::fs panicked at 'Unable to open' \"Function not implemented\".\r\n\r\n//rust libc \r\n\r\n```rust\r\nunsafe {\r\nlet fd = libc::open(filename.as_ptr(), libc::O_RDONLY);\r\nlet mut fp = libc::fopen(filename.as_ptr(), r.as_ptr());\r\nlibc::fgets(buff.as_mut_ptr(), 255, fp);\r\n\r\n\r\n//println!(\"{}\", str::from_utf8(buff).unwrap());\r\n\r\n\r\n// println!(\"{:?}\", &buff[..]); // this works\r\n\r\n\r\nlibc::printf(buff[..].as_ptr() as *const i8);\r\n//let s = CString::new(buff.as_ptr()).expect(\"Invalid name\");\r\n//libc::printf(b\"2: %s\\n\", buff.as_ptr() as *const i8 );\r\n//libc::printf(\"%s\\n\", buff);\r\nlibc::close(fd);\r\n}\r\n\r\n```\r\n\r\n// c code\r\n```c\r\n#include <stdio.h>\r\n\r\nmain() {\r\n\r\n   FILE *fp;\r\n   char buff[255];\r\n\r\n   fp = fopen(\"/var/log/vmkernel.log\", \"r\");\r\n   fscanf(fp, \"%s\", buff);\r\n   printf(\"1 : %s\\n\", buff );\r\n\r\n   fgets(buff, 255, (FILE*)fp);\r\n   printf(\"2: %s\\n\", buff );\r\n\r\n   fgets(buff, 1255, (FILE*)fp);\r\n   printf(\"3: %s\\n\", buff );\r\n\r\n    fgets(buff, 1255, (FILE*)fp);\r\n   printf(\"4: %s\\n\", buff );\r\n\r\n   fclose(fp);\r\n\r\n} \r\n```\r\n\r\n//the output \r\n```\r\n[root@v25:/tmp/b] RUST_BACKTRACE=1 ./4\r\nHello, world3!\r\nHello from a thread!\r\n1          2          3          4          5          hello.txt  z\r\nprocess exited with: exit code: 0\r\nChild's id is 486267\r\n\"5\"\r\n\"4\"\r\n\"3\"\r\n\"2\"\r\n\"1\"\r\n\"z\"\r\n\"hello.txt\"\r\nthread 'main' panicked at 'Unable to open the file: Error { repr: Os { code: 38, message: \"Function not implemented\" } }', /buildslave/rust-buildbot/slave/stable-dist-rustc-linux/build/src/libcore/result.rs:868\r\nstack backtrace:\r\n   1:        0x37b79246c - <unknown>\r\n   2:        0x37b796b0e - <unknown>\r\n   3:        0x37b796714 - <unknown>\r\n   4:        0x37b796f4b - <unknown>\r\n   5:        0x37b796de4 - <unknown>\r\n   6:        0x37b796d09 - <unknown>\r\n   7:        0x37b796c97 - <unknown>\r\n   8:        0x37b7bcd5d - <unknown>\r\n   9:        0x37b789262 - <unknown>\r\n  10:        0x37b78a79f - <unknown>\r\n  11:        0x37b79eaca - <unknown>\r\n  12:        0x37b797456 - <unknown>\r\n  13:        0x3bc46b8cc - <unknown>\r\n  14:        0x37b788e78 - <unknown>\r\n1          2          3          4          5          hello.txt  z\r\n```\r\n\r\n// full example\r\n\r\n```rust\r\nextern crate libc;\r\nuse std::ffi::CString;\r\nuse std::fs::File;\r\nuse std::str;\r\nuse std::io::BufReader;\r\nuse std::io::prelude::*;\r\n\r\n\r\nfn main() {\r\n\r\nlet filename = CString::new(\"/var/log/vmkernel.log\").unwrap();\r\nlet r = CString::new(\"r\").unwrap();\r\nlet mut buff = [0i8; 255];\r\n\r\n// libc works\r\n\r\n\r\nunsafe {\r\n\r\n\r\nlet fd = libc::open(filename.as_ptr(), libc::O_RDONLY);\r\nlet mut fp = libc::fopen(filename.as_ptr(), r.as_ptr());\r\nlibc::fgets(buff.as_mut_ptr(), 255, fp);\r\n\r\n\r\n//println!(\"{}\", str::from_utf8(buff).unwrap());\r\n\r\n\r\n// println!(\"{:?}\", &buff[..]); // this works\r\n\r\n\r\nlibc::printf(buff[..].as_ptr() as *const i8);\r\n//let s = CString::new(buff.as_ptr()).expect(\"Invalid name\");\r\n//libc::printf(b\"2: %s\\n\", buff.as_ptr() as *const i8 );\r\n//libc::printf(\"%s\\n\", buff);\r\nlibc::close(fd);\r\n}\r\n\r\n\r\n// c also work\r\n\r\n// #include <stdio.h>\r\n\r\n\r\n// main() {\r\n\r\n\r\n// FILE *fp;\r\n// char buff[1255];\r\n\r\n\r\n// fp = fopen(\"/var/log/vmkernel.log\", \"r\");\r\n// fscanf(fp, \"%s\", buff);\r\n// printf(\"1 : %s\\n\", buff );\r\n\r\n\r\n// fgets(buff, 1255, (FILE*)fp);\r\n// printf(\"2: %s\\n\", buff );\r\n\r\n\r\n// fgets(buff, 1255, (FILE*)fp);\r\n// printf(\"3: %s\\n\", buff );\r\n\r\n\r\n// fgets(buff, 1255, (FILE*)fp);\r\n// printf(\"4: %s\\n\", buff );\r\n\r\n\r\n// fclose(fp);\r\n\r\n\r\n// }\r\n\r\n\r\n// Using std::fs. problem; \r\n//this thread 'main' panicked at 'Unable to open the file: Error { repr: Os { code: 38, message: \"Function not implemented\" } }', /buildslave/rust-buildbot/slave/stable-dist-rustc-linux/build/src/libcore/result.rs:868 stack backtrace:\r\nlet file = File::open(\"/var/log/vmkernel.log\");\r\n\r\n\r\nlet mut buf_reader = BufReader::new(file);\r\nlet mut contents = String::new();\r\nbuf_reader.read_to_string(&mut contents)?;\r\nprintln!(\"{}\", &contents);\r\n\r\n}\r\n```\r\n\r\nIf it's interesting, I found more issues in rust, also in those cases I compared it to c++ which  successfully worked.\r\nPlease note - in centos OS the same rust and c are working only when taking it to Esxi OS there a valid problem. \r\n\r\nFor example:\r\nc and c++ stdout, threads, system working. in rust only stdout (prints) worked \"out of the box\".\r\n\r\nAs said c and c++ and libs just work \"out of the box\", rust from the other hand forced me to do tweaks libc and compile it static and etc. The current status:\r\n\r\n1. Using stdout (println!) worked on 6.0 and 6.5 version without and effort from my side.\r\n2. using std::thread complained panicked missing glibc_2.14 and didn't work while c++ did. Now this works partiality  - mainly on esx6.5.\r\n3. std::process now works on 6.5 with the tweaks below while c++ worked almost with 0% effort from my side. \r\n\r\nCompiltion info:\r\nVMware Esxi hypervisor version 6.5 with libc 2.12 (dev machine was centos 6 - compiled from cantos 6 as target x86_64-unknown-linux-musl and x86_64-unknown-linux-gnu.\r\ntarget x86_64-unknown-linux-musl also from cantos7 which has libc2.17.\r\n\r\nLet me know if more info can help. I will try more if there some kind of workaround and I will update.\r\n\r\n\r\n\r\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41347/timeline", "performed_via_github_app": null, "state_reason": "completed"}