{"url": "https://api.github.com/repos/rust-lang/rust/issues/71852", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71852/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71852/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71852/events", "html_url": "https://github.com/rust-lang/rust/issues/71852", "id": 611452071, "node_id": "MDU6SXNzdWU2MTE0NTIwNzE=", "number": 71852, "title": "Trait and function bounds checking differ", "user": {"login": "Ekleog", "id": 411447, "node_id": "MDQ6VXNlcjQxMTQ0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/411447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ekleog", "html_url": "https://github.com/Ekleog", "followers_url": "https://api.github.com/users/Ekleog/followers", "following_url": "https://api.github.com/users/Ekleog/following{/other_user}", "gists_url": "https://api.github.com/users/Ekleog/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ekleog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ekleog/subscriptions", "organizations_url": "https://api.github.com/users/Ekleog/orgs", "repos_url": "https://api.github.com/users/Ekleog/repos", "events_url": "https://api.github.com/users/Ekleog/events{/privacy}", "received_events_url": "https://api.github.com/users/Ekleog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-03T16:32:44Z", "updated_at": "2020-05-06T20:52:20Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The reproducer is here:\r\n```rust\r\nuse std::fmt::Debug;\r\n\r\npub trait Trait {\r\n    fn do_stuff(self) -> ();\r\n}\r\n\r\nimpl<F> Trait for F\r\nwhere\r\n    F: 'static + for<'a> Fn(&'a ()) -> Box<dyn 'a + Debug>,\r\n{\r\n    fn do_stuff(self) -> () {\r\n        ()\r\n    }\r\n}\r\n\r\npub fn foo() {\r\n    fn assert_type<F>(f: F) -> F\r\n    where\r\n        F: 'static + for<'a> Fn(&'a ()) -> Box<dyn 'a + Debug>,\r\n    {\r\n        f\r\n    }\r\n    // Compiles\r\n    Trait::do_stuff(assert_type(|_: &()| Box::new(())));\r\n    // Doesn't compile\r\n    Trait::do_stuff(|_: &()| Box::new(()));\r\n}\r\n```\r\n[(playground link)](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=2030c96a7e797153b4113f206a446b9c)\r\n\r\nApparently, adding `assert_type()` around the closure does pass the function bounds. However, when it's not there, the closure doesn't pass the trait bounds despite them being the same.\r\n\r\nMost surprising as an end-user (though I guess not that unexpected from an implementation point of view, as we force the bounds in another way), adding the `assert_type` makes the trait bounds pass.\r\n\r\nThe issue is, of course, that I have to have a `T: Trait` and then call the trait function on it -- ideally without having to manually wrap with `assert_type` at every place where `T: Trait` is taken as an argument, as it'd require a different `assert_type` function per implementor of `Trait`.\r\n\r\n(for some more context, this arose with futures instead of `Debug`, but as it reproduced just as well with `Debug` I\u00a0figured it'd be a better choice than having it be `Future`, to reduce complexity of the example)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71852/timeline", "performed_via_github_app": null, "state_reason": null}