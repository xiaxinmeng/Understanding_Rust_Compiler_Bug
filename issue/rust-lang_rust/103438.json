{"url": "https://api.github.com/repos/rust-lang/rust/issues/103438", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103438/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103438/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103438/events", "html_url": "https://github.com/rust-lang/rust/issues/103438", "id": 1419822245, "node_id": "I_kwDOAAsO6M5UoMSl", "number": 103438, "title": "Confusing error when forgetting to break with value from loop-match", "user": {"login": "RReverser", "id": 557590, "node_id": "MDQ6VXNlcjU1NzU5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/557590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RReverser", "html_url": "https://github.com/RReverser", "followers_url": "https://api.github.com/users/RReverser/followers", "following_url": "https://api.github.com/users/RReverser/following{/other_user}", "gists_url": "https://api.github.com/users/RReverser/gists{/gist_id}", "starred_url": "https://api.github.com/users/RReverser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RReverser/subscriptions", "organizations_url": "https://api.github.com/users/RReverser/orgs", "repos_url": "https://api.github.com/users/RReverser/repos", "events_url": "https://api.github.com/users/RReverser/events{/privacy}", "received_events_url": "https://api.github.com/users/RReverser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-10-23T14:58:24Z", "updated_at": "2022-10-23T14:58:24Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\nenum E {\r\n    A(i32),\r\n    B,\r\n}\r\n\r\nfn foo(e: E) -> Result<i32, &'static str> {\r\n    let a = loop {\r\n        match e {\r\n            E::A(a) => a,\r\n            E::B => {\r\n                return Err(\"b\")\r\n            },\r\n        }\r\n    };\r\n    Ok(a)\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[[E0308]](https://doc.rust-lang.org/stable/error-index.html#E0308): `match` arms have incompatible types\r\n  --> src/lib.rs:11:17\r\n   |\r\n8  | /         match e {\r\n9  | |             E::A(a) => a,\r\n   | |                        - this is found to be of type `i32`\r\n10 | |             E::B => {\r\n11 | |                 return Err(\"b\")\r\n   | |                 ^^^^^^^^^^^^^^^ expected `i32`, found `()`\r\n12 | |             },\r\n13 | |         }\r\n   | |_________- `match` arms have incompatible types\r\n\r\nwarning: unreachable expression\r\n  --> src/lib.rs:15:5\r\n   |\r\n7  |       let a = loop {\r\n   |  _____________-\r\n8  | |         match e {\r\n9  | |             E::A(a) => a,\r\n10 | |             E::B => {\r\n...  |\r\n13 | |         }\r\n14 | |     };\r\n   | |_____- any code following this expression is unreachable\r\n15 |       Ok(a)\r\n   |       ^^^^^ unreachable expression\r\n   |\r\n   = note: `#[warn(unreachable_code)]` on by default\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nwarning: `playground` (lib) generated 1 warning\r\nerror: could not compile `playground` due to previous error; 1 warning emitted\r\n```\r\n\r\nThe \"expected `i32`, found `()`\" suggestion is bogus, because the `return` actually has \"never\" type, and it's perfectly valid in a match that expects `i32`, e.g. the same code without `loop` works fine:\r\n\r\n```rust\r\nenum E {\r\n    A(i32),\r\n    B,\r\n}\r\n\r\nfn foo(e: E) -> Result<i32, &'static str> {\r\n    let a = {\r\n        match e {\r\n            E::A(a) => a,\r\n            E::B => {\r\n                return Err(\"b\")\r\n            },\r\n        }\r\n    };\r\n    Ok(a)\r\n}\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\n\r\nIf possible to guess from context, it should tell me that I forgot to use `break a`  instead of just `a` in the first branch. Otherwise not sure what the end result should be, but it definitely shouldn't say that `return` has a non-never type as that leads the developer down the wrong path.\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103438/timeline", "performed_via_github_app": null, "state_reason": null}