{"url": "https://api.github.com/repos/rust-lang/rust/issues/48136", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48136/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48136/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48136/events", "html_url": "https://github.com/rust-lang/rust/issues/48136", "id": 296158438, "node_id": "MDU6SXNzdWUyOTYxNTg0Mzg=", "number": 48136, "title": "Confusing mismatched type error (part 2)", "user": {"login": "joshlf", "id": 1046063, "node_id": "MDQ6VXNlcjEwNDYwNjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1046063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshlf", "html_url": "https://github.com/joshlf", "followers_url": "https://api.github.com/users/joshlf/followers", "following_url": "https://api.github.com/users/joshlf/following{/other_user}", "gists_url": "https://api.github.com/users/joshlf/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshlf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshlf/subscriptions", "organizations_url": "https://api.github.com/users/joshlf/orgs", "repos_url": "https://api.github.com/users/joshlf/repos", "events_url": "https://api.github.com/users/joshlf/events{/privacy}", "received_events_url": "https://api.github.com/users/joshlf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-11T04:04:58Z", "updated_at": "2018-12-24T10:04:30Z", "closed_at": "2018-12-24T10:04:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Related to (but different from) #43608.\r\n\r\nIf you have a function whose return type uses impl trait, you can get confusing type inference errors. The following code...\r\n\r\n```rust\r\nfn foo() -> impl std::fmt::Debug {\r\n    if false {\r\n        return;\r\n    }\r\n    \r\n    \"hello\"\r\n}\r\n```\r\n\r\n...produces the following error:\r\n\r\n```text\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:12:5\r\n   |\r\n12 |     \"hello\"\r\n   |     ^^^^^^^ expected (), found reference\r\n   |\r\n   = note: expected type `()`\r\n              found type `&'static str`\r\n```\r\n\r\nIn a much more complicated and less obvious instance of this issue, I spent a long time trying to figure out why the compiler thought that `impl std::fmt::Debug` implied that my return value had to be `()`. It would be very helpful if the compiler could say something like \"expected type `()` because of this line\" and point to the original `return` (or whatever line caused the inference).\r\n\r\nWithout impl trait, the issue is less prominent because the types must match exactly, and as a result, if the two different return values have different types, at least one of them must fail to match the stated return type in the function declaration. Consider, for example, the following code:\r\n\r\n```rust\r\nfn bar() -> &'static str {\r\n    if false {\r\n        return;\r\n    }\r\n    \r\n    \"hello\"\r\n}\r\n```\r\n\r\nwhich gives the following error:\r\n\r\n```text\r\nerror[E0069]: `return;` in a function whose return type is not `()`\r\n  --> src/main.rs:17:9\r\n   |\r\n17 |         return;\r\n   |         ^^^^^^ return type is not ()\r\n```\r\n\r\nThe issue with impl trait is that both return values might implement the trait (in this case, both `()` and `&'static str` implement `Debug`), and so you don't get the same useful messages that you would with a concrete return type.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48136/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48136/timeline", "performed_via_github_app": null, "state_reason": "completed"}