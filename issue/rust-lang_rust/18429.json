{"url": "https://api.github.com/repos/rust-lang/rust/issues/18429", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/18429/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/18429/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/18429/events", "html_url": "https://github.com/rust-lang/rust/issues/18429", "id": 47195926, "node_id": "MDU6SXNzdWU0NzE5NTkyNg==", "number": 18429, "title": "Confusing error message: \"unable to infer enough type information to locate the impl of the trait `core::kinds::Sized`\"", "user": {"login": "carllerche", "id": 6180, "node_id": "MDQ6VXNlcjYxODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carllerche", "html_url": "https://github.com/carllerche", "followers_url": "https://api.github.com/users/carllerche/followers", "following_url": "https://api.github.com/users/carllerche/following{/other_user}", "gists_url": "https://api.github.com/users/carllerche/gists{/gist_id}", "starred_url": "https://api.github.com/users/carllerche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carllerche/subscriptions", "organizations_url": "https://api.github.com/users/carllerche/orgs", "repos_url": "https://api.github.com/users/carllerche/repos", "events_url": "https://api.github.com/users/carllerche/events{/privacy}", "received_events_url": "https://api.github.com/users/carllerche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-10-29T19:57:16Z", "updated_at": "2014-11-09T00:43:40Z", "closed_at": "2014-11-09T00:43:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "With the following rust snippet, I get the error message:\n\n```\n$ rustc msg.rs\nmsg.rs:13:9: 13:12 error: unable to infer enough type information to locate the impl of the trait `core::kinds::Sized` for the type `Foo<<generic integer #0>>`; type annotations required\nmsg.rs:13     let foo = Foo::new(1);\n                  ^~~\nmsg.rs:13:9: 13:12 note: all local variables must have a statically known size\nmsg.rs:13     let foo = Foo::new(1);\n                  ^~~\nerror: aborting due to previous error\n```\n\nThe issue is caused by having an extra semicolon at the last line of the new fn, but the error message was very confusing and it took me a while to realize that this was the problem.\n\n``` rust\n#[deriving(Show)]\npub struct Foo<T> {\n    foo: T\n}\n\nimpl<T> Foo<T> {\n    fn new(foo: T) -> Foo<T> {\n        Foo { foo: foo };\n    }\n}\n\npub fn main() {\n    let foo = Foo::new(1);\n    println!(\"foo = {}\", foo);\n}\n```\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/18429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/18429/timeline", "performed_via_github_app": null, "state_reason": "completed"}