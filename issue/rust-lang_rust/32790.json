{"url": "https://api.github.com/repos/rust-lang/rust/issues/32790", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/32790/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/32790/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/32790/events", "html_url": "https://github.com/rust-lang/rust/issues/32790", "id": 146513334, "node_id": "MDU6SXNzdWUxNDY1MTMzMzQ=", "number": 32790, "title": "MIR match bindings have the scope of the match instead of the arm.", "user": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-07T05:28:35Z", "updated_at": "2016-04-17T06:06:35Z", "closed_at": "2016-04-17T06:06:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Reduced from a debuginfo test failing with an implementation of #31005:\n\n``` rust\nfn main() {\n    match Ok::<(), ()>(()) {\n        Ok(a) => zzz(),\n        Err(a) => zzz()\n    }\n}\n\nfn zzz() {}\n```\n\n``` rust\nfn main() -> () {\n    let var0: (); // a in Scope(3) at test2.rs:3:12: 3:13\n    let var1: (); // a in Scope(3) at test2.rs:4:13: 4:14\n    let mut tmp0: std::result::Result<(), ()>;\n    let mut tmp1: ();\n\n    bb0: {\n        tmp1 = (); // Scope(5) at test2.rs:2:24: 2:26\n        tmp0 = std::prelude::v1::Ok<(), ()>(tmp1,); // Scope(4) at test2.rs:2:11: 2:27\n        switch(tmp0) -> [Ok: bb4, Err: bb5]; // Scope(3) at test2.rs:3:9: 3:14\n    }\n\n    bb1: {\n        return; // Scope(0) at test2.rs:1:1: 6:2\n    }\n\n    bb2: {\n        return = zzz() -> bb1; // Scope(7) at test2.rs:3:18: 3:23\n    }\n\n    bb3: {\n        return = zzz() -> bb1; // Scope(10) at test2.rs:4:19: 4:24\n    }\n\n    bb4: {\n        var0 = ((tmp0 as Ok).0: ()); // Scope(3) at test2.rs:3:12: 3:13\n        goto -> bb2; // Scope(3) at test2.rs:3:9: 3:14\n    }\n\n    bb5: {\n        var1 = ((tmp0 as Err).0: ()); // Scope(3) at test2.rs:4:13: 4:14\n        goto -> bb3; // Scope(3) at test2.rs:4:9: 4:15\n    }\n    Scope(0) {\n        Scope(1) {\n            Parent: Scope(0)\n            Scope(2) {\n                Parent: Scope(1)\n                Scope(3) {\n                    Parent: Scope(2)\n                    Scope(4) {\n                        Parent: Scope(3)\n                        Scope(5) {\n                            Parent: Scope(4)\n                    Scope(6) {\n                        Parent: Scope(3)\n                        Scope(7) {\n                            Parent: Scope(6)\n                            Scope(8) {\n                                Parent: Scope(7)\n                    Scope(9) {\n                        Parent: Scope(3)\n                        Scope(10) {\n                            Parent: Scope(9)\n                            Scope(11) {\n                                Parent: Scope(10)\n}\n```\n\nYou can see that both `a` bindings and their assignments share the scope of the match, `Scope(3)`.\n\nThis appears to be intentional in the implementation of pattern-matching:\n\n``` rust\n        // Before we do anything, create uninitialized variables with\n        // suitable extent for all of the bindings in this match. It's\n        // easiest to do this up front because some of these arms may\n        // be unreachable or reachable multiple times.\n        let var_scope_id = self.innermost_scope_id();\n        for arm in &arms {\n            self.declare_bindings(var_scope_id, &arm.patterns[0]);\n        }\n```\n\nHowever, this breaks debugging (as both variables appear declared at the same time) and potentially MIR-based region/borrow checking, in the future.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/32790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/32790/timeline", "performed_via_github_app": null, "state_reason": "completed"}