{"url": "https://api.github.com/repos/rust-lang/rust/issues/81838", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81838/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81838/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81838/events", "html_url": "https://github.com/rust-lang/rust/issues/81838", "id": 802782932, "node_id": "MDU6SXNzdWU4MDI3ODI5MzI=", "number": 81838, "title": "Contents from global_asm! leak into other assemblies", "user": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 91598611, "node_id": "MDU6TGFiZWw5MTU5ODYxMQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inline-assembly", "name": "A-inline-assembly", "color": "f7e101", "default": false, "description": "Area: inline asm!(..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2046313052, "node_id": "MDU6TGFiZWwyMDQ2MzEzMDUy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-asm", "name": "F-asm", "color": "f9c0cc", "default": false, "description": "`#![feature(asm)]` (not `llvm_asm`)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-02-06T20:18:50Z", "updated_at": "2021-02-06T21:24:04Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "In code like this as noted [here](https://rust-lang.zulipchat.com/#narrow/stream/216763-project-inline-asm/topic/global_asm.20with.20format_specifiers/near/225426992)\r\n\r\n```rust\r\n#![feature(global_asm)]\r\n#![feature(asm)]\r\n\r\nglobal_asm!(r\"\r\n.macro foo, arg, size\r\n  add \\arg, \\arg, \\size\r\n.endm\");\r\n\r\nconst BAR: u64 = 10;\r\n\r\npub fn bar(mut v: u64) -> u64 {\r\n    unsafe { \r\n        asm!(\"foo {v}, {}\", const(BAR), v = inout(reg) v);\r\n    }\r\n    v\r\n}\r\n```\r\n\r\nthe macro will leak into the inline `asm!`, but this is likely extremely brittle.  For instance, Rust is free to split this module into 2 distinct CGUs, making the code like this mysteriously work or break.\r\n\r\nThis could probably be mitigated by isolating all the `global_asm!` into its own CGU \u2013 that way none of the inline asm invocations would be able to observe the `global_asm!` stuff. Alternatively, if we find we want to support this behaviour we would be forced to collect all uses of `global_asm!` and items containing inline asm in a crate into a single CGU. Supporting this would also have implications to alternative backend support.\r\n\r\ncc https://github.com/rust-lang/rust/issues/35119", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81838/timeline", "performed_via_github_app": null, "state_reason": null}