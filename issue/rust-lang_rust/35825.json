{"url": "https://api.github.com/repos/rust-lang/rust/issues/35825", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/35825/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/35825/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/35825/events", "html_url": "https://github.com/rust-lang/rust/issues/35825", "id": 172156678, "node_id": "MDU6SXNzdWUxNzIxNTY2Nzg=", "number": 35825, "title": "Using bare trait where not possible should suggest to use a trait object or generic bound", "user": {"login": "trinitroglycerin", "id": 2939173, "node_id": "MDQ6VXNlcjI5MzkxNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2939173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trinitroglycerin", "html_url": "https://github.com/trinitroglycerin", "followers_url": "https://api.github.com/users/trinitroglycerin/followers", "following_url": "https://api.github.com/users/trinitroglycerin/following{/other_user}", "gists_url": "https://api.github.com/users/trinitroglycerin/gists{/gist_id}", "starred_url": "https://api.github.com/users/trinitroglycerin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trinitroglycerin/subscriptions", "organizations_url": "https://api.github.com/users/trinitroglycerin/orgs", "repos_url": "https://api.github.com/users/trinitroglycerin/repos", "events_url": "https://api.github.com/users/trinitroglycerin/events{/privacy}", "received_events_url": "https://api.github.com/users/trinitroglycerin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-19T15:24:22Z", "updated_at": "2022-12-16T01:46:27Z", "closed_at": "2022-12-16T01:46:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code snippet will generate an E0277 error - I've elided some as it's not entirely necessary for the whole context, but this is not runnable:\n\n``` rust\ntype SomeType = /* whatever */;\n\nfn do_something(iter: Iterator<SomeType>) {}\n\nfn get_some_iterator() -> Iterator<SomeType> {\n  ...\n}\n\nfn main() {\n  let iterator = get_some_iterator();\n  do_something(iterator);\n}\n```\n\nE0277 indicates the following message:\n\n```\nerror: the trait bound `std::iter::Iterator<Item=SomeType> + 'static: std::marker::Sized` is not satisfied [E0277]\nhelp: run `rustc --explain E0277` to see a detailed explanation\nnote: `std::iter::Iterator<Item=SomeType> + 'static` does not have a constant size known at compile-time\nnote: all local variables must have a statically known size\n```\n\nI want to stress that yes, this error is factually correct: The reason why I have this error is because the naked trait `Iterator` has no defined size at compile time, and that the solution is to either `Box` or borrow an `Iterator` (and thus rely on dynamic dispatch) or convert `do_something` into a generic function so that it is then monomorphised and Rust is aware of the size of the object at compile time.\n\nMy suggestion is that the error message is not entirely clear: While it is true that the error is due to the trait size being undefined, coming from another language (like C#/Java/TypeScript) which uses interfaces, this can be confusing as traits are _almost_-but-not-quite analogous to interfaces. It may be useful to add an extra note to this error message (or accompanying docs) when passing a bare trait with something along the lines of:\n\n> note: You appear to be passing a bare trait object as a parameter. ...\n\nAnd explain in some basic detail the difference between these approaches. For example:\n\n> Passing a trait in this manner results in an undefined size at compile time because the implementation of the Trait is unknown until runtime. You should either place the Trait in a `Box` or immutable borrow which will enable the type to be resolved at runtime (and use dynamic dispatch) or alter the function to use the Trait as a generic bound (and be monomorphised and use static dispatch).\n\nNote: This behaviour led me to write [this article](https://gist.github.com/danpantry/0f521db30c3479484b4e026439cc84c2) when trying to fully understand the topic.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/35825/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/35825/timeline", "performed_via_github_app": null, "state_reason": "completed"}