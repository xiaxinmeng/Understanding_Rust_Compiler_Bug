{"url": "https://api.github.com/repos/rust-lang/rust/issues/68748", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68748/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68748/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68748/events", "html_url": "https://github.com/rust-lang/rust/issues/68748", "id": 558607974, "node_id": "MDU6SXNzdWU1NTg2MDc5NzQ=", "number": 68748, "title": "Recursive type error is over-eager", "user": {"login": "Diggsey", "id": 451321, "node_id": "MDQ6VXNlcjQ1MTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/451321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Diggsey", "html_url": "https://github.com/Diggsey", "followers_url": "https://api.github.com/users/Diggsey/followers", "following_url": "https://api.github.com/users/Diggsey/following{/other_user}", "gists_url": "https://api.github.com/users/Diggsey/gists{/gist_id}", "starred_url": "https://api.github.com/users/Diggsey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Diggsey/subscriptions", "organizations_url": "https://api.github.com/users/Diggsey/orgs", "repos_url": "https://api.github.com/users/Diggsey/repos", "events_url": "https://api.github.com/users/Diggsey/events{/privacy}", "received_events_url": "https://api.github.com/users/Diggsey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-02-01T22:27:01Z", "updated_at": "2020-02-02T18:00:40Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Example code:\r\n```rust\r\nuse std::marker::PhantomData;\r\n\r\ntrait Request {\r\n    type Downgraded: Request;\r\n}\r\n\r\nenum Test<R: Request> {\r\n    A(PhantomData<dyn FnOnce() -> R>),\r\n    B(Test<R::Downgraded>),\r\n}\r\n```\r\n\r\nThis code will error with `error[E0072]: recursive type `Test` has infinite size`, but it doesn't necessarily *have* infinite size, it depends how the chain of \"request downgrades\" is terminated.\r\n\r\nFor example, if I terminate the downgrade chain by defining a request that downgrades to itself, and is uninhabited, then the enum makes perfect sense.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68748/timeline", "performed_via_github_app": null, "state_reason": null}