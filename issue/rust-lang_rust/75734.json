{"url": "https://api.github.com/repos/rust-lang/rust/issues/75734", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75734/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75734/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75734/events", "html_url": "https://github.com/rust-lang/rust/issues/75734", "id": 682497137, "node_id": "MDU6SXNzdWU2ODI0OTcxMzc=", "number": 75734, "title": "Pretty-printing adds additional parentheses, breaking the proc-macro reparse check", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108435, "node_id": "MDU6TGFiZWwxMDg0MzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-pretty", "name": "A-pretty", "color": "f7e101", "default": false, "description": "Area: Pretty printing."}, {"id": 2079070889, "node_id": "MDU6TGFiZWwyMDc5MDcwODg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-proc-macros", "name": "A-proc-macros", "color": "f7e101", "default": false, "description": "Area: Procedural macros"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-20T07:40:22Z", "updated_at": "2020-10-14T02:48:01Z", "closed_at": "2020-10-14T02:48:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following code:\r\n\r\n```rusthttps://github.com/Aaron1011\r\nfn main() {\r\n    &|_: u8| {};\r\n}\r\n```\r\n\r\nis pretty-printed as:\r\n\r\n```rust\r\nfn main() { &(|_: u8| { }); }\r\n```\r\n\r\nThe extra parenthesis completely change the structure of the re-parsed `TokenStream` (we now have tokens wrapped in a `TokenTree::Delimited`), breaking the pretty-print and reparse check done during proc-macro expansion. This results in an instance of https://github.com/rust-lang/rust/issues/43081.\r\n\r\nThis behavior was introduced by https://github.com/rust-lang/rust/pull/43742. The PR description states that is intended to \"make pprust easier to use with programmatically constructed ASTs.\" - however, I can't find a concrete example of code that is affected by this.\r\n\r\nI see a few possible ways of fixing this:\r\n1. Try to ignore this type of 'unnecessary' parentheses when we compare the original and re-parsed tokens. This seems extremely difficult, since we can't know which parenthesis are necessary without actually parsing the `TokenStream`.\r\n2. Skip inserting these extra parentheses during pretty-printing for proc-macro expansion, but insert them during all other pretty-printing. This should work correctly, but represents yet another hack needed by the pretty-print/reparsing code.\r\n3. Partially revert https://github.com/rust-lang/rust/pull/43742 - we would still insert parenthesis when pretty-printing the HIR, but we would rely solely on `ExprKind::Paren` when pretty-printing the AST. I'm not exactly certain what the consequences of doing this are. Do we ever end up pretty-printing code-generated AST nodes (e.g. from builtin macros), other than when explicitly requested via `-Z unpretty=expanded`?\r\n\r\nIf we could get it to work without breaking anything, solution 3 seems like the cleanest way of solving this.\r\n\r\ncc @petrochenkov ", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75734/timeline", "performed_via_github_app": null, "state_reason": "completed"}