{"url": "https://api.github.com/repos/rust-lang/rust/issues/90665", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90665/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90665/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90665/events", "html_url": "https://github.com/rust-lang/rust/issues/90665", "id": 1046674120, "node_id": "I_kwDOAAsO6M4-YvrI", "number": 90665, "title": "Diagnostic forgets about transitive trait bounds when there are multiple candidate impls.", "user": {"login": "BGR360", "id": 13339928, "node_id": "MDQ6VXNlcjEzMzM5OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/13339928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BGR360", "html_url": "https://github.com/BGR360", "followers_url": "https://api.github.com/users/BGR360/followers", "following_url": "https://api.github.com/users/BGR360/following{/other_user}", "gists_url": "https://api.github.com/users/BGR360/gists{/gist_id}", "starred_url": "https://api.github.com/users/BGR360/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BGR360/subscriptions", "organizations_url": "https://api.github.com/users/BGR360/orgs", "repos_url": "https://api.github.com/users/BGR360/repos", "events_url": "https://api.github.com/users/BGR360/events{/privacy}", "received_events_url": "https://api.github.com/users/BGR360/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 347795552, "node_id": "MDU6TGFiZWwzNDc3OTU1NTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-specialization", "name": "A-specialization", "color": "f7e101", "default": false, "description": "Area: Trait impl specialization"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1472579062, "node_id": "MDU6TGFiZWwxNDcyNTc5MDYy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-specialization", "name": "F-specialization", "color": "f9c0cc", "default": false, "description": "`#![feature(specialization)]`"}, {"id": 1568304854, "node_id": "MDU6TGFiZWwxNTY4MzA0ODU0", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-rustc_attrs", "name": "F-rustc_attrs", "color": "f9c0cc", "default": false, "description": "Internal rustc attributes gated on the `#[rustc_attrs]` feature gate."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2021-11-07T06:40:40Z", "updated_at": "2023-03-14T07:33:29Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**EDIT this was originally reported as a problem specific to auto-traits, but I don't think it actually is. See the [comment below](https://github.com/rust-lang/rust/issues/90665#issuecomment-1243096941)**.\r\n\r\n**EDIT 2: It's actually not specific to specialization either. See [this comment](https://github.com/rust-lang/rust/issues/90665#issuecomment-1246260554)**\r\n\r\nThis is spun off from https://github.com/rust-lang/rust/issues/90601.\r\n\r\nGiven the following code ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=4283307336cd352d7ff2dc7b876de71d)):\r\n\r\n```rust\r\n#![feature(min_specialization)]\r\n#![feature(rustc_attrs)]\r\n\r\n#[rustc_specialization_trait]\r\ntrait Special {}\r\n\r\ntrait Foo {\r\n    fn foo();\r\n}\r\n\r\nimpl<T: Send> Foo for T {\r\n    default fn foo() {\r\n        println!(\"foo\");\r\n    }\r\n}\r\n\r\nfn main() {\r\n    <std::rc::Rc<()> as Foo>::foo();\r\n}\r\n```\r\n\r\nThe current (good) output is:\r\n\r\n```\r\nerror[E0277]: `Rc<()>` cannot be sent between threads safely\r\n  --> src/main.rs:18:5\r\n   |\r\n18 |     <std::rc::Rc<()> as Foo>::foo();\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `Rc<()>` cannot be sent between threads safely\r\n   |\r\n   = help: the trait `Send` is not implemented for `Rc<()>`\r\nnote: required because of the requirements on the impl of `Foo` for `Rc<()>`\r\n  --> src/main.rs:11:15\r\n   |\r\n11 | impl<T: Send> Foo for T {\r\n   |               ^^^     ^\r\nnote: required by `Foo::foo`\r\n  --> src/main.rs:8:5\r\n   |\r\n8  |     fn foo();\r\n   |     ^^^^^^^^^\r\n```\r\n\r\n\r\n\r\nBut if you add a specialized impl of `Foo` ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=6113f5db020bc7be414b75a8ef079bd3)):\r\n\r\n```rust\r\n#![feature(min_specialization)]\r\n#![feature(rustc_attrs)]\r\n\r\n#[rustc_specialization_trait]\r\ntrait Special {}\r\n\r\ntrait Foo {\r\n    fn foo();\r\n}\r\n\r\nimpl<T: Send> Foo for T {\r\n    default fn foo() {\r\n        println!(\"foo\");\r\n    }\r\n}\r\n\r\nimpl<T: Send + Special> Foo for T {\r\n    fn foo() {\r\n        println!(\"special foo\");\r\n    }\r\n}\r\n\r\nfn main() {\r\n    <std::rc::Rc<()> as Foo>::foo();\r\n}\r\n```\r\n\r\nThen the error message loses all of the information regarding the unimplemented auto trait:\r\n\r\n```\r\nerror[E0277]: the trait bound `Rc<()>: Foo` is not satisfied\r\n  --> src/main.rs:24:5\r\n   |\r\n24 |     <std::rc::Rc<()> as Foo>::foo();\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Foo` is not implemented for `Rc<()>`\r\n   |\r\nnote: required by `Foo::foo`\r\n  --> src/main.rs:8:5\r\n   |\r\n8  |     fn foo();\r\n   |     ^^^^^^^^^\r\n```\r\n\r\nSo there is something about the presence of a specialized impl that causes trait selection to not know that there's an unimplemented auto trait obligation. I have confirmed this by exploring the debug logging of rustc a little bit:\r\n\r\n```\r\nWithout specialized impl:\r\nrustc_trait_selection::traits::error_reporting::report_fulfillment_error error=FulfillmentError(Obligation(predicate=Binder(TraitPredicate(<std::rc::Rc<()> as std::marker::Send>, polarity:Positive), []), depth=1),Unimplemented), body_id=Some(BodyId { hir_id: HirId { owner: DefId(0:9 ~ issue_xxxxx_specialization[8170]::main), local_id: 12 } }), fallback_has_occurred=false\r\n\r\nWith specialized impl:\r\nrustc_trait_selection::traits::error_reporting::report_fulfillment_error error=FulfillmentError(Obligation(predicate=Binder(TraitPredicate(<std::rc::Rc<()> as Foo>, polarity:Positive), []), depth=0),Unimplemented), body_id=Some(BodyId { hir_id: HirId { owner: DefId(0:12 ~ issue_xxxxx_specialization[8170]::main), local_id: 12 } }), fallback_has_occurred=false\r\n```\r\n\r\nIf you take a look at Example 4 in https://github.com/rust-lang/rust/issues/90601, you can see that this can result in detrimentally unhelpful error messages in more complex cases.\r\n\r\ncc https://github.com/rust-lang/rust/issues/13231 https://github.com/rust-lang/rust/issues/31844 https://github.com/rust-lang/rust/pull/68970\r\n\r\n@rustbot label +A-specialization +A-traits +D-confusing +D-terse +F-auto_traits +F-specialization\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90665/timeline", "performed_via_github_app": null, "state_reason": null}