{"url": "https://api.github.com/repos/rust-lang/rust/issues/110381", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110381/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110381/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110381/events", "html_url": "https://github.com/rust-lang/rust/issues/110381", "id": 1669617549, "node_id": "I_kwDOAAsO6M5jhFeN", "number": 110381, "title": "rustc segfault with struct containing large array of fat pointers + a bool", "user": {"login": "drey7925", "id": 2965325, "node_id": "MDQ6VXNlcjI5NjUzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/2965325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drey7925", "html_url": "https://github.com/drey7925", "followers_url": "https://api.github.com/users/drey7925/followers", "following_url": "https://api.github.com/users/drey7925/following{/other_user}", "gists_url": "https://api.github.com/users/drey7925/gists{/gist_id}", "starred_url": "https://api.github.com/users/drey7925/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drey7925/subscriptions", "organizations_url": "https://api.github.com/users/drey7925/orgs", "repos_url": "https://api.github.com/users/drey7925/repos", "events_url": "https://api.github.com/users/drey7925/events{/privacy}", "received_events_url": "https://api.github.com/users/drey7925/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-04-16T00:17:37Z", "updated_at": "2023-04-16T01:01:55Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure of the full cause to be quite honest. Some debugging notes from other Discord users that helped me reproduce and verify the issue:\r\n\r\n* for one user, 4095 [for the array size] works fine, 4096 segfaults. \r\n* On i686, the size can go up to 8191 for another user before crashing\r\n* Removing the `dirty` bool causes the error to go away for me\r\n* Replacing the microbench call with `std::hint::black_box(DataBlock::make())` also causes the error to go away for me\r\n\r\n### Code\r\n\r\nPlease see https://gist.github.com/drey7925/53e36a957ca54991e693b67098d51d12 for a full code listing\r\n\r\n```Rust\r\nuse std::{any::Any, sync::Arc};\r\n\r\npub struct DataBlock {\r\n    extended_data: [Option<Box<dyn Any>>; 4096],\r\n    dirty: bool,\r\n}\r\nimpl DataBlock {\r\n    fn make() -> Result<DataBlock, ()> {\r\n        Ok(DataBlock {\r\n            extended_data: std::array::from_fn(|_| None),\r\n            dirty: false,\r\n        })\r\n    }\r\n}\r\n\r\n#[cfg(test)]\r\nmod tests {\r\n    use super::*;\r\n    use microbench::{self, Options};\r\n\r\n    #[test]\r\n    fn test_chunk_roundtrip() {\r\n        let options = Options::default();\r\n        microbench::bench(&options, \"deserialize_chunk\", || DataBlock::make());\r\n    }\r\n}\r\n```\r\n\r\nCargo.toml:\r\n```\r\n[package]\r\nname = \"rustc-crash-repro\"\r\nversion = \"0.1.0\"\r\nedition = \"2021\"\r\n[dependencies]\r\nmicrobench = \"0.5.0\"\r\n```\r\n\r\nCargo.lock:\r\n```\r\nversion = 3\r\n\r\n[[package]]\r\nname = \"microbench\"\r\nversion = \"0.5.0\"\r\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\r\nchecksum = \"c4c44e40aee4e6fd2f4257bb91e5948ce79285aeb949129448889cf2fbf6da0b\"\r\n\r\n[[package]]\r\nname = \"rustc-crash-repro\"\r\nversion = \"0.1.0\"\r\ndependencies = [\r\n \"microbench\",\r\n]\r\n```\r\n\r\nTo run: `cargo +stable test --release`\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.68.2 (9eb3afe9e 2023-03-27)\r\nbinary: rustc\r\ncommit-hash: 9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0\r\ncommit-date: 2023-03-27\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.68.2\r\nLLVM version: 15.0.6\r\n\r\nAlso reproduces on\r\n\r\nrustc 1.68.2 (9eb3afe9e 2023-03-27)\r\nbinary: rustc\r\ncommit-hash: 9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0\r\ncommit-date: 2023-03-27\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.68.2\r\nLLVM version: 15.0.6\r\n\r\nand\r\n\r\nrustc 1.66.0 (69f9c33d7 2022-12-12)\r\nbinary: rustc\r\ncommit-hash: 69f9c33d71c871fc16ac445211281c6e7a340943\r\ncommit-date: 2022-12-12\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.66.0\r\nLLVM version: 15.0.2\r\n```\r\n\r\n\r\n### Error output\r\n\r\n```\r\nprocess didn't exit successfully: `rustc --crate-name rustc_crash_repro --edition=2021 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --diagnostic-width=252 --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no --test -C metadata=d0f935590eb979e4 -C extra-filename=-d0f935590eb979e4 --out-dir [path]/target/release/deps -L dependency=[path]/target/release/deps --extern microbench=[path]/target/release/deps/libmicrobench-8b09c09bbd603738.rlib` (signal: 11, SIGSEGV: invalid memory reference)\r\n```\r\n\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n/home/drey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-93862cade34bf92c.so(+0x32ae373)[0x7eff6797f373]\r\n/lib/x86_64-linux-gnu/libc.so.6(+0x42520)[0x7eff64335520]\r\n/home/drey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/libLLVM-15-rust-1.68.2-stable.so(_ZN4llvm12SelectionDAG18ReplaceAllUsesWithEPNS_6SDNodeEPKNS_7SDValueE+0x17c)[0x7eff6290f298]\r\n/home/drey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/libLLVM-15-rust-1.68.2-stable.so(+0x5672916)[0x7eff62a72916]\r\n/home/drey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/libLLVM-15-rust-1.68.2-stable.so(_ZN4llvm12SelectionDAG7CombineENS_12CombineLevelEPNS_9AAResultsENS_10CodeGenOpt5LevelE+0x17f1)[0x7eff62dba8f1]\r\n/home/drey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/libLLVM-15-rust-1.68.2-stable.so(_ZN4llvm16SelectionDAGISel17CodeGenAndEmitDAGEv+0x6e)[0x7eff62ad65ee]\r\n/home/drey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/libLLVM-15-rust-1.68.2-stable.so(_ZN4llvm16SelectionDAGISel20SelectAllBasicBlocksERKNS_8FunctionE+0x12c5)[0x7eff62dd93c7]\r\n/home/drey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/libLLVM-15-rust-1.68.2-stable.so(_ZN4llvm16SelectionDAGISel20runOnMachineFunctionERNS_15MachineFunctionE+0x410)[0x7eff62e34f90]\r\n/home/drey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/libLLVM-15-rust-1.68.2-stable.so(+0x5a34b53)[0x7eff62e34b53]\r\n/home/drey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/libLLVM-15-rust-1.68.2-stable.so(_ZN4llvm13FPPassManager13runOnFunctionERNS_8FunctionE+0xafd)[0x7eff62aa70bd]\r\n/home/drey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/libLLVM-15-rust-1.68.2-stable.so(_ZN4llvm13FPPassManager11runOnModuleERNS_6ModuleE+0x2f)[0x7eff62aa6589]\r\n/home/drey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/libLLVM-15-rust-1.68.2-stable.so(_ZN4llvm6legacy15PassManagerImpl3runERNS_6ModuleE+0x21a)[0x7eff62aebd1a]\r\n/home/drey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-93862cade34bf92c.so(+0x27dd132)[0x7eff66eae132]\r\n/home/drey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-93862cade34bf92c.so(+0x27dcad5)[0x7eff66eadad5]\r\n/home/drey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-93862cade34bf92c.so(+0x27daa0a)[0x7eff66eaba0a]\r\n/home/drey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-93862cade34bf92c.so(+0x27d786d)[0x7eff66ea886d]\r\n/home/drey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-93862cade34bf92c.so(+0x27d6834)[0x7eff66ea7834]\r\n/home/drey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-93862cade34bf92c.so(+0x27d56a3)[0x7eff66ea66a3]\r\n/home/drey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/librustc_driver-93862cade34bf92c.so(+0x27d5406)[0x7eff66ea6406]\r\n/home/drey/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/libstd-bc6b80525d6b1f3b.so(rust_metadata_std_f8b79e573431a86c+0x10e823)[0x7eff64644823]\r\n/lib/x86_64-linux-gnu/libc.so.6(+0x94b43)[0x7eff64387b43]\r\n/lib/x86_64-linux-gnu/libc.so.6(+0x126a00)[0x7eff64419a00]\r\n\r\nor on Windows:\r\n\r\n # Child-SP          RetAddr               Call Site\r\n00 00000077`430fba10 00007ffe`c0bd8fc9     rustc_driver_4de585d93dcd8eb1!llvm::SelectionDAG::ReplaceAllUsesWith+0x1a0\r\n01 00000077`430fbb90 00007ffe`c0bd1dc3     rustc_driver_4de585d93dcd8eb1!llvm::DenseMapBase<llvm::SmallDenseMap<llvm::SDNode * __ptr64,llvm::detail::DenseSetEmpty,16,llvm::DenseMapInfo<llvm::SDNode * __ptr64,void>,llvm::detail::DenseSetPair<llvm::SDNode * __ptr64> >,llvm::SDNode * __ptr64,llvm::detail::DenseSetEmpty,llvm::DenseMapInfo<llvm::SDNode * __ptr64,void>,llvm::detail::DenseSetPair<llvm::SDNode * __ptr64> >::moveFromOldBuckets+0x4109\r\n02 00000077`430fc660 00007ffe`c0ad16c8     rustc_driver_4de585d93dcd8eb1!llvm::SelectionDAG::Combine+0x17b3\r\n03 00000077`430fcf70 00007ffe`c0ad0540     rustc_driver_4de585d93dcd8eb1!llvm::SelectionDAGISel::CodeGenAndEmitDAG+0xd8\r\n04 00000077`430fd390 00007ffe`c0ace9e7     rustc_driver_4de585d93dcd8eb1!llvm::SelectionDAGISel::SelectAllBasicBlocks+0xdb0\r\n05 00000077`430fd760 00007ffe`bf5bd3d9     rustc_driver_4de585d93dcd8eb1!llvm::SelectionDAGISel::runOnMachineFunction+0x3b7\r\n06 00000077`430fd890 00007ffe`c0580888     rustc_driver_4de585d93dcd8eb1!llvm::AVRDAGToDAGISel::`scalar deleting destructor'+0xb9\r\n07 00000077`430fd8e0 00007ffe`c0409c61     rustc_driver_4de585d93dcd8eb1!llvm::MachineFunctionPass::runOnFunction+0x118\r\n08 00000077`430fde70 00007ffe`c0411ae1     rustc_driver_4de585d93dcd8eb1!llvm::FPPassManager::runOnFunction+0x571\r\n09 00000077`430fe170 00007ffe`bf4e20ad     rustc_driver_4de585d93dcd8eb1!llvm::FPPassManager::runOnModule+0x31\r\n0a 00000077`430fe1c0 00007ffe`bf48e82c     rustc_driver_4de585d93dcd8eb1!llvm::legacy::PassManagerImpl::run+0x27d\r\n0b 00000077`430fe300 00007ffe`bf458b97     rustc_driver_4de585d93dcd8eb1!LLVMRustWriteOutputFile+0x3dc\r\n0c 00000077`430fe5a0 00007ffe`bf45c1bb     rustc_driver_4de585d93dcd8eb1!RNvYNtNtNtNtCs2vRy9Nn98DZ_12rustc_middle2ty6consts4kind9ConstKindNtNtB8_5visit13TypeVisitable23has_escaping_bound_varsCs753WWl4Jsqx_16rustc_hir_typeck+0xf47\r\n0d 00000077`430fe6d0 00007ffe`bf472d80     rustc_driver_4de585d93dcd8eb1!RNvNtNtCse1ZkExa1DRd_18rustc_codegen_llvm4back5write7codegen+0x40b\r\n0e 00000077`430fe9d0 00007ffe`bf466d5e     rustc_driver_4de585d93dcd8eb1!RINvNtNtCsf7Ykt4ZYILz_17rustc_codegen_ssa4back5write19start_async_codegenNtCse1ZkExa1DRd_18rustc_codegen_llvm18LlvmCodegenBackendEB1b_+0xa8c0\r\n0f 00000077`430feca0 00007ffe`bf408a59     rustc_driver_4de585d93dcd8eb1!RINvNtNtCsf7Ykt4ZYILz_17rustc_codegen_ssa4back5write17execute_work_itemNtCse1ZkExa1DRd_18rustc_codegen_llvm18LlvmCodegenBackendEB19_+0x35e\r\n10 00000077`430ff080 00007ffe`bf438377     rustc_driver_4de585d93dcd8eb1!RINvNtNtCs4shZNHyK4px_3std10sys_common9backtrace28___rust_begin_short_backtraceNCINvXs0_Cse1ZkExa1DRd_18rustc_codegen_llvmNtB1o_18LlvmCodegenBackendNtNtNtCsf7Ykt4ZYILz_17rustc_codegen_ssa6traits7backend19ExtraBackendMethods18spawn_named_threadNCINvNtNtB2s_4back5write10spawn_workB1W_E0uE0uEB1o_+0xf9\r\n11 00000077`430ff590 00007fff`acf0021c     rustc_driver_4de585d93dcd8eb1!RINvXs1C_NtCs4hXP7hK1Gxt_10rustc_span6def_idNtB7_10LocalDefIdNtNtCs1RoSZkFyxqL_4core4hash4Hash4hashNtCscaonAXChtWT_10rustc_hash8FxHasherECskWiUba3cX2K_18rustc_monomorphize+0x6d7\r\n12 (Inline Function) --------`--------     std_9f65829977a28b3f!alloc::boxed::impl$45::call_once+0xb [/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library\\alloc\\src\\boxed.rs @ 1988] \r\n13 (Inline Function) --------`--------     std_9f65829977a28b3f!alloc::boxed::impl$45::call_once+0x16 [/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library\\alloc\\src\\boxed.rs @ 1988] \r\n14 00000077`430ff920 00007fff`c4c5269d     std_9f65829977a28b3f!std::sys::windows::thread::impl$0::new::thread_start+0x4c [/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library\\std\\src\\sys\\windows\\thread.rs @ 56] \r\n15 00000077`430ff9b0 00007fff`c662a9f8     KERNEL32!BaseThreadInitThunk+0x1d\r\n16 00000077`430ff9e0 00000000`00000000     ntdll!RtlUserThreadStart+0x28\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110381/timeline", "performed_via_github_app": null, "state_reason": null}