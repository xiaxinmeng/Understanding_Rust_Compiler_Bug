{"url": "https://api.github.com/repos/rust-lang/rust/issues/111839", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111839/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111839/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111839/events", "html_url": "https://github.com/rust-lang/rust/issues/111839", "id": 1719259294, "node_id": "I_kwDOAAsO6M5medCe", "number": 111839, "title": "`offset_of!` ecosystem testing", "user": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 289259951, "node_id": "MDU6TGFiZWwyODkyNTk5NTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-help-wanted", "name": "E-help-wanted", "color": "02E10C", "default": false, "description": "Call for participation: Help is requested to fix this issue."}, {"id": 4989566137, "node_id": "LA_kwDOAAsO6M8AAAABKWa8uQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-offset_of", "name": "F-offset_of", "color": "f9c0cc", "default": false, "description": "`#![feature(offset_of)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-05-22T09:12:17Z", "updated_at": "2023-06-11T18:07:47Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm filing this issue to get some testing of the `offset_of` macro, whose implementation has recently been merged in #106934 .\r\n\r\nThere is already widespread use of the `offset_of` macro in the ecosystem through an implementation supporting stable via the `memoffset` crate, whose version 0.9.0 supports the `unstable_offset_of` feature due to https://github.com/Gilnaa/memoffset/pull/72. So for a lot of the users, testing out is as simple as updating `memoffset` and running the tests with the `unstable_offset_of` feature enabled. Thankfully, for testing one doesn't have to add that feature to Cargo.toml, creating a requirement on nightly, one can just add `--features memoffset/unstable_offset_of` and it will work.\r\n\r\nThe biggest [reverse dependencies](https://crates.io/crates/memoffset/reverse_dependencies) of `memoffset` are:\r\n\r\n- [x] crossbeam-epoch: [PR](https://github.com/crossbeam-rs/crossbeam/pull/981)\r\n- [x] nix: [PR](https://github.com/nix-rust/nix/pull/2042)\r\n- [x] rustix: [PR](https://github.com/bytecodealliance/rustix/pull/689)\r\n- [ ] pyo3: [PR](https://github.com/PyO3/pyo3/pull/3170)\r\n- [x] wayland-sys: [PR](https://github.com/Smithay/wayland-rs/pull/626)\r\n- [ ] wasmtime-runtime\r\n- [ ] wasmer-types/wasmer-vm\r\n- [ ] field-offset: [PR](https://github.com/Diggsey/rust-field-offset/pull/24)\r\n- [x] rowan: [PR](https://github.com/rust-analyzer/rowan/pull/154)\r\n- [ ] glium\r\n- [x] intrusive-collections: [PR](https://github.com/Amanieu/intrusive-rs/pull/86)\r\n- [x] imgui: [PR](https://github.com/imgui-rs/imgui-rs/pull/726)\r\n- [x] egui-glow: [PR](https://github.com/emilk/egui/pull/3034)\r\n- [ ] virtio-queue\r\n- [x] arcstr: [PR](https://github.com/thomcc/arcstr/pull/54)\r\n- [ ] ggez\r\n\r\nIt would be good to go through this list, and:\r\n\r\n1. update the `memoffset` crate to 0.9.0, ideally filing a PR (but not enabling `unstable_offset_of` in Cargo.toml unless the project already requires nightly!) \r\n2. run `cargo +nightly test --features memoffset/unstable_offset_of` or `cargo +nightly run --features memoffset/unstable_offset_of` etc, trying out the feature and seeing if something is broken, ideally also the `--all` parameter if it's a workspace\r\n3. tell here about the experience\r\n\r\nIn addition of that, it is useful to get feedback from any project that uses the `memoffset` crate indirectly as a transitive dependency. For that, one also has to wait for the upgrade to 0.9.0 to go through the dependency chain and then one can add a direct (unused) dependency on `memoffset` to enable the feature, and test it out.\r\n\r\nFor example, field-offset has a large number of [reverse dependencies](https://crates.io/crates/field-offset/reverse_dependencies) that one could go through also. I have made a PR for rustc in https://github.com/rust-lang/rust/pull/112298.\r\n\r\ncc #106655 tracking issue", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111839/timeline", "performed_via_github_app": null, "state_reason": null}