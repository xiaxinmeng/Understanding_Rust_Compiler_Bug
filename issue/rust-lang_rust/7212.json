{"url": "https://api.github.com/repos/rust-lang/rust/issues/7212", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/7212/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/7212/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/7212/events", "html_url": "https://github.com/rust-lang/rust/issues/7212", "id": 15674455, "node_id": "MDU6SXNzdWUxNTY3NDQ1NQ==", "number": 7212, "title": "Persistent datatypes", "user": {"login": "Aluminium95", "id": 597486, "node_id": "MDQ6VXNlcjU5NzQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/597486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aluminium95", "html_url": "https://github.com/Aluminium95", "followers_url": "https://api.github.com/users/Aluminium95/followers", "following_url": "https://api.github.com/users/Aluminium95/following{/other_user}", "gists_url": "https://api.github.com/users/Aluminium95/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aluminium95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aluminium95/subscriptions", "organizations_url": "https://api.github.com/users/Aluminium95/orgs", "repos_url": "https://api.github.com/users/Aluminium95/repos", "events_url": "https://api.github.com/users/Aluminium95/events{/privacy}", "received_events_url": "https://api.github.com/users/Aluminium95/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-06-18T08:11:13Z", "updated_at": "2013-08-15T05:04:13Z", "closed_at": "2013-06-18T08:25:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be great to be able to get some \u00ab persistent datatypes \u00bb the way clojure has because it allow the programmer to get some purely immutable variables without performances issues [as wikipedia says](http://en.wikipedia.org/wiki/Persistent_data_structure).\n\nBecause Rust is able to handle unique boxes, and has a garbage collector, it will be \u00ab easy \u00bb to implement some of those persistent structures.\n\n``` rust\n\nlet myvec = ~[1, 8, 9];\n\nlet second = myvec.append (8); // creates a new vec (does not modify \u00ab myvec \u00bb)\nlet third = myvec.insert (8,1) // idem \n```\n\nThis would also allow to pass some immutable values between tasks, with an O(1) complexity and allow the task to \u00ab modify \u00bb the value with a near O(1) complexity ... This would be very great !\n\nI found some articles about the implementation of such types in clojure :\n- [Persistent Vectors](http://blog.higher-order.net/2009/02/01/understanding-clojures-persistentvector-implementation/)\n- [Persistent HashMaps](http://blog.higher-order.net/2009/09/08/understanding-clojures-persistenthashmap-deftwice/)\n\nThen if this is possible, it would also be great to be able to specify that a variable is mutable only in a small block (like a function) in order to produce by mutation, an immutable value. For exemple to fill a vector with a function application and return a new immutable vector (sorry, I don't realy know the syntax of Rust ...)\n\n``` rust\nfn new_vector_fill (func : &(fn(int) -> int), size : int) -> ~[int] {\n    let mut vec = vector::new (size); // creates a new vector \n    // iterates over the vector and fill with \u00ab vec[i] = f(i) \u00bb\n    return ~vec; // convert into a immutable value ...\n}\n```\n\nIs it possible ? Would it be usefull ? \n", "closed_by": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/7212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/7212/timeline", "performed_via_github_app": null, "state_reason": "completed"}