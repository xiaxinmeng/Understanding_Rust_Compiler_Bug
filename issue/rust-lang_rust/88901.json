{"url": "https://api.github.com/repos/rust-lang/rust/issues/88901", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88901/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88901/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88901/events", "html_url": "https://github.com/rust-lang/rust/issues/88901", "id": 994305003, "node_id": "MDU6SXNzdWU5OTQzMDUwMDM=", "number": 88901, "title": "A Lifetime-generic `Copy` impl can allow fields which are only `Copy` when `'static`", "user": {"login": "danielhenrymantilla", "id": 9920355, "node_id": "MDQ6VXNlcjk5MjAzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9920355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielhenrymantilla", "html_url": "https://github.com/danielhenrymantilla", "followers_url": "https://api.github.com/users/danielhenrymantilla/followers", "following_url": "https://api.github.com/users/danielhenrymantilla/following{/other_user}", "gists_url": "https://api.github.com/users/danielhenrymantilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielhenrymantilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielhenrymantilla/subscriptions", "organizations_url": "https://api.github.com/users/danielhenrymantilla/orgs", "repos_url": "https://api.github.com/users/danielhenrymantilla/repos", "events_url": "https://api.github.com/users/danielhenrymantilla/events{/privacy}", "received_events_url": "https://api.github.com/users/danielhenrymantilla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2021-09-12T22:53:41Z", "updated_at": "2023-01-21T00:43:17Z", "closed_at": "2023-01-21T00:43:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#[derive(Clone)]\r\nstruct Foo<'lt>(&'lt ());\r\n\r\nimpl Copy for Foo<'static> {}\r\n\r\n#[derive(Clone)]\r\nstruct Bar<'lt>(Foo<'lt>);\r\n\r\nimpl<'any> Copy for Bar<'any> {}\r\n\r\nfn check(b: Bar<'_>) -> (Bar<'_>, Bar<'_>) {\r\n    (b, b)\r\n}\r\n```\r\n\r\n  - <sub><sup>(Note about `#[derive(Clone)]`: while this simple snippet features a `Clone` impl for all lifetimes, it is possible to restrict the impl of `Clone for Foo` to `'static` as well, and yet offer a `Bar<'any>` which is `Clone`able (thanks to it being `Copy`able). See below for a more detailed example about that).</sup></sub>\r\n\r\nI expected to see this happen:\r\n\r\n  - Either the `impl Copy for Bar<'_> {}` should have failed, or, at the very least, the borrow checker ought to have complained about the actual copy of `b` (from looking at the old related issue, a \"late\" / on-use borrow-checker issue was deemed good enough since such a check does prevent unsoundness).\r\n\r\n    Alas, we can see here that that check can be dodged by using a wrapper type.\r\n\r\nInstead, this happened:\r\n\r\n  - the code compiled fine.\r\n\r\n### Meta\r\n\r\nstable, beta and nightly are affected by this, and I suspect all versions of Rust do.\r\n\r\n### Impact\r\n\r\nWhile contrived, this ought to be a `I-unsound` issue, since a library could feature a lifetime-generic type `Foo<'lt>` with an exploited safety invariant of `Foo<'not_static>` not being cloneable. [Demo](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=6dd2a633a984291a3467315ecc6789cd)\r\n\r\n  - That being said, I'd qualify it as **low priority**, since the example is indeed very contrived.\r\n\r\n### Bonus / tangential issue \ud83c\udf81\r\n\r\nA type which is only `Copy` when `'static` becomes, in practice / in non-generic context, **unmoveable** when non-`'static`:\r\n\r\n```rust\r\n#[derive(Clone)]\r\nstruct Foo<'lt>(&'lt ());\r\n\r\nimpl Copy for Foo<'static> {}\r\n\r\nfn check(f: Foo<'_>) {\r\n    assert!(Some(f).is_some()); // Error, lifetime `'static` required\r\n}\r\n```\r\n\r\n  - [Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=45e0be3b8abb36a2adffe42fe4703d42)\r\n\r\n  - Indeed, the `move_or_copy` heuristic decides to go for copy since the type is indeed `copy_modulo_regions`, but then the borrow checker (correctly) forbids the `Copy` operation since the lifetime isn't (can't be proven to be) `'static`", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88901/reactions", "total_count": 6, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 6, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88901/timeline", "performed_via_github_app": null, "state_reason": "completed"}