{"url": "https://api.github.com/repos/rust-lang/rust/issues/112565", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112565/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112565/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112565/events", "html_url": "https://github.com/rust-lang/rust/issues/112565", "id": 1753199475, "node_id": "I_kwDOAAsO6M5of7Nz", "number": 112565, "title": "Suggestion from `error[E0034]: multiple applicable items in scope` don't always apply", "user": {"login": "ogoffart", "id": 959326, "node_id": "MDQ6VXNlcjk1OTMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/959326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ogoffart", "html_url": "https://github.com/ogoffart", "followers_url": "https://api.github.com/users/ogoffart/followers", "following_url": "https://api.github.com/users/ogoffart/following{/other_user}", "gists_url": "https://api.github.com/users/ogoffart/gists{/gist_id}", "starred_url": "https://api.github.com/users/ogoffart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ogoffart/subscriptions", "organizations_url": "https://api.github.com/users/ogoffart/orgs", "repos_url": "https://api.github.com/users/ogoffart/repos", "events_url": "https://api.github.com/users/ogoffart/events{/privacy}", "received_events_url": "https://api.github.com/users/ogoffart/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-06-12T17:13:45Z", "updated_at": "2023-06-12T17:15:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\npub mod the_module {\r\n    pub trait A {\r\n        fn xx(&self, _: u32) {}\r\n    }\r\n    pub trait B : A {\r\n        fn xx(&self, _: u64) {}\r\n    }\r\n}\r\n\r\npub mod another_module {\r\n    pub fn hallo(foo: std::rc::Rc<&dyn crate::the_module::B>) {\r\n        foo.xx(0u32);\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Current output\r\n\r\n```Shell\r\nerror[E0034]: multiple applicable items in scope\r\n  --> src/lib.rs:13:13\r\n   |\r\n13 |         foo.xx(0u32);\r\n   |             ^^ multiple `xx` found\r\n   |\r\nnote: candidate #1 is defined in the trait `A`\r\n  --> src/lib.rs:4:9\r\n   |\r\n4  |         fn xx(&self, _: u32) {}\r\n   |         ^^^^^^^^^^^^^^^^^^^^\r\nnote: candidate #2 is defined in the trait `B`\r\n  --> src/lib.rs:7:9\r\n   |\r\n7  |         fn xx(&self, _: u64) {}\r\n   |         ^^^^^^^^^^^^^^^^^^^^\r\nhelp: disambiguate the method for candidate #1\r\n   |\r\n13 |         A::xx(foo, 0u32);\r\n   |         ~~~~~~~~~~~~~~~~\r\nhelp: disambiguate the method for candidate #2\r\n   |\r\n13 |         B::xx(foo, 0u32);\r\n   |         ~~~~~~~~~~~~~~~~\r\n```\r\n\r\n\r\n### Desired output\r\n\r\n```Shell\r\n[...]\r\nhelp: disambiguate the method for candidate #1\r\n   |\r\n13 |         crate::the_module::A::xx(&foo, 0u32);\r\n   |         ~~~~~~~~~~~~~~~~\r\nhelp: disambiguate the method for candidate #2\r\n   |\r\n13 |         crate::the_module::B::xx(&foo, 0u32);\r\n   |         ~~~~~~~~~~~~~~~~\r\n```\r\n\r\n\r\n### Rationale and extra context\r\n\r\nThe suggestion to disambiguate don't apply cleanly because\r\n\r\n 1. The module path is not correct  (maybe related to #100683 ?)\r\n 2. it is missing a dereference (`&`) before the foo.\r\n\r\n### Other cases\r\n\r\n\r\nNote that if we change the code to use `&dyn` instead of `Rc`:\r\n\r\n```Rust\r\n    pub fn hallo(foo: &dyn crate::the_module::B) {\r\n        foo.xx(0u32);\r\n    }\r\n```\r\n\r\n\r\nThe suggestion becomes \r\n```\r\nhelp: disambiguate the method for candidate #1\r\n   |\r\n13 |         A::xx(&foo, 0u32);\r\n   |         ~~~~~~~~~~~~~~~~~\r\n```\r\n\r\nNow the suggestion adds a `&` while it shouldn't. That's the reversed problem.\r\n\r\n\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112565/timeline", "performed_via_github_app": null, "state_reason": null}