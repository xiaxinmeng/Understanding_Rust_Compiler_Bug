{"url": "https://api.github.com/repos/rust-lang/rust/issues/77506", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77506/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77506/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77506/events", "html_url": "https://github.com/rust-lang/rust/issues/77506", "id": 714165527, "node_id": "MDU6SXNzdWU3MTQxNjU1Mjc=", "number": 77506, "title": "Unnecessary memcpy with mir-opt-level=2 and above ", "user": {"login": "MSxDOS", "id": 15524350, "node_id": "MDQ6VXNlcjE1NTI0MzUw", "avatar_url": "https://avatars.githubusercontent.com/u/15524350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSxDOS", "html_url": "https://github.com/MSxDOS", "followers_url": "https://api.github.com/users/MSxDOS/followers", "following_url": "https://api.github.com/users/MSxDOS/following{/other_user}", "gists_url": "https://api.github.com/users/MSxDOS/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSxDOS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSxDOS/subscriptions", "organizations_url": "https://api.github.com/users/MSxDOS/orgs", "repos_url": "https://api.github.com/users/MSxDOS/repos", "events_url": "https://api.github.com/users/MSxDOS/events{/privacy}", "received_events_url": "https://api.github.com/users/MSxDOS/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-10-03T20:02:28Z", "updated_at": "2020-10-06T17:53:55Z", "closed_at": "2020-10-06T17:53:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "```Rust\r\npub fn test() -> Vec<u32> {\r\n    let mut vec = Vec::with_capacity(2);\r\n    vec.push(1);    \r\n    vec.push(2);\r\n    vec\r\n}\r\n```\r\nmir-opt-level=1:\r\n```ASM\r\n        push    rbx\r\n        mov     rbx, rdi\r\n        mov     edi, 8\r\n        mov     esi, 4\r\n        call    qword ptr [rip + __rust_alloc@GOTPCREL]\r\n        test    rax, rax\r\n        je      .LBB1_1\r\n        mov     qword ptr [rbx], rax\r\n        movaps  xmm0, xmmword ptr [rip + .LCPI1_0]\r\n        movups  xmmword ptr [rbx + 8], xmm0\r\n\tmov     rdi, rbx\r\n        mov     esi, 1\r\n        call    alloc::vec::Vec<T>::push\r\n        mov     rdi, rbx\r\n        mov     esi, 2\r\n        call    alloc::vec::Vec<T>::push\r\n        mov     rax, rbx\r\n        pop     rbx\r\n        ret\r\n.LBB1_1:\r\n        mov     edi, 8\r\n        mov     esi, 4\r\n        call    qword ptr [rip + alloc::alloc::handle_alloc_error@GOTPCREL]\r\n        ud2\r\n```\r\nmir-opt-level=2\r\nAnd here it looks like the whole `Vec` struct is getting copied to a temp stack location for `push` and then to the final dest:\r\n```ASM\r\n\tpush    r14\r\n        push    rbx\r\n        sub     rsp, 24\r\n        mov     rbx, rdi\r\n        mov     edi, 8\r\n        mov     esi, 4\r\n        call    qword ptr [rip + __rust_alloc@GOTPCREL]\r\n\ttest    rax, rax\r\n        je      .LBB1_1\r\n        mov     qword ptr [rsp], rax\r\n        movaps  xmm0, xmmword ptr [rip + .LCPI1_0]\r\n        movups  xmmword ptr [rsp + 8], xmm0\r\n        mov     r14, rsp\r\n        mov     rdi, r14\r\n        mov     esi, 1\r\n        call    alloc::vec::Vec<T>::push\r\n\tmov     rdi, r14\r\n        mov     esi, 2\r\n        call    alloc::vec::Vec<T>::push\r\n        mov     rax, qword ptr [rsp + 16]\r\n        mov     qword ptr [rbx + 16], rax\r\n        movups  xmm0, xmmword ptr [rsp]\r\n        movups  xmmword ptr [rbx], xmm0\r\n\tmov     rax, rbx\r\n        add     rsp, 24\r\n        pop     rbx\r\n        pop     r14\r\n        ret\r\n.LBB1_1:\r\n        mov     edi, 8\r\n        mov     esi, 4\r\n        call    qword ptr [rip + alloc::alloc::handle_alloc_error@GOTPCREL]\r\n        ud2\r\n```\r\nhttps://rust.godbolt.org/z/fWvKW6\r\n\r\ncc @jonas-schievink Aren't those supposed to be rather eliminated by #72632 ? That said, I've seen 2 and especially 3 producing worse code than 1 even before it landed so there may be something else interfering. ", "closed_by": {"login": "MSxDOS", "id": 15524350, "node_id": "MDQ6VXNlcjE1NTI0MzUw", "avatar_url": "https://avatars.githubusercontent.com/u/15524350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSxDOS", "html_url": "https://github.com/MSxDOS", "followers_url": "https://api.github.com/users/MSxDOS/followers", "following_url": "https://api.github.com/users/MSxDOS/following{/other_user}", "gists_url": "https://api.github.com/users/MSxDOS/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSxDOS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSxDOS/subscriptions", "organizations_url": "https://api.github.com/users/MSxDOS/orgs", "repos_url": "https://api.github.com/users/MSxDOS/repos", "events_url": "https://api.github.com/users/MSxDOS/events{/privacy}", "received_events_url": "https://api.github.com/users/MSxDOS/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77506/timeline", "performed_via_github_app": null, "state_reason": "completed"}