{"url": "https://api.github.com/repos/rust-lang/rust/issues/38788", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/38788/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/38788/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/38788/events", "html_url": "https://github.com/rust-lang/rust/issues/38788", "id": 198392389, "node_id": "MDU6SXNzdWUxOTgzOTIzODk=", "number": 38788, "title": "Tracking issue for the \"ptx-kernel\" ABI", "user": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 510582527, "node_id": "MDU6TGFiZWw1MTA1ODI1Mjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-NVPTX", "name": "O-NVPTX", "color": "6e6ec0", "default": false, "description": "Target: the NVPTX LLVM backend for running rust on GPUs, https://llvm.org/docs/NVPTXUsage.html"}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 3537216018, "node_id": "LA_kwDOAAsO6M7S1aIS", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-design-concerns", "name": "S-tracking-design-concerns", "color": "4682b4", "default": false, "description": "Blocking design concerns"}, {"id": 3537250192, "node_id": "LA_kwDOAAsO6M7S1ieQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-needs-summary", "name": "S-tracking-needs-summary", "color": "4682b4", "default": false, "description": "It's hard to tell what's been done and what hasn't! Someone should do some investigation."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-01-02T23:49:48Z", "updated_at": "2022-06-17T09:14:24Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Introduced in #38559.\r\n\r\nFeature gate: `abi_ptx`\r\n\r\nThis ABI is used to generate [\"global\"] functions. All the other functions that *don't* use the \"ptx-kernel\" ABI are [\"device\"] functions.\r\n\r\n[\"global\"]: https://docs.nvidia.com/cuda/cuda-c-programming-guide/#global\r\n[\"device\"]: https://docs.nvidia.com/cuda/cuda-c-programming-guide/#device-function-qualifier\r\n\r\nThe host can only make the device, the GPU, execute global functions, not device functions. IOW, a PTX module that only contains device functions is basically unusable.\r\n\r\n---\r\n\r\nNote that this ABI *can't* be emulated using naked functions.\r\n\r\n``` rust\r\n#![feature(abi_ptx)]\r\n#![feature(naked_functions)]\r\n#![no_std]\r\n\r\n#[naked]\r\n#[no_mangle]\r\nfn foo() {}\r\n\r\n#[no_mangle]\r\nfn bar() {}\r\n\r\n#[no_mangle]\r\nextern \"ptx-kernel\" fn baz() {}\r\n```\r\n\r\nProduces:\r\n\r\n```\r\n.version 3.2\r\n.target sm_20\r\n.address_size 64\r\n\r\n.func foo()\r\n{\r\n        .local .align 8 .b8     __local_depot0[8];\r\n        .reg .b64       %SP;\r\n        .reg .b64       %SPL;\r\n\r\n        mov.u64         %SPL, __local_depot0;\r\n        bra.uni         LBB0_1;\r\nLBB0_1:\r\n        ret;\r\n}\r\n\r\n.func bar()\r\n{\r\n        .local .align 8 .b8     __local_depot1[8];\r\n        .reg .b64       %SP;\r\n        .reg .b64       %SPL;\r\n\r\n        mov.u64         %SPL, __local_depot1;\r\n        bra.uni         LBB1_1;\r\nLBB1_1:\r\n        ret;\r\n}\r\n\r\n.entry baz()\r\n{\r\n        .local .align 8 .b8     __local_depot2[8];\r\n        .reg .b64       %SP;\r\n        .reg .b64       %SPL;\r\n\r\n        mov.u64         %SPL, __local_depot2;\r\n        bra.uni         LBB2_1;\r\nLBB2_1:\r\n        ret;\r\n}\r\n```\r\n\r\nNote that only `baz` uses the `.entry` directive.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/38788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/38788/timeline", "performed_via_github_app": null, "state_reason": null}