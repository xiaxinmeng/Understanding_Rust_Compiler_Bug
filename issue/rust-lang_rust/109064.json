{"url": "https://api.github.com/repos/rust-lang/rust/issues/109064", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/109064/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/109064/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/109064/events", "html_url": "https://github.com/rust-lang/rust/issues/109064", "id": 1620571356, "node_id": "I_kwDOAAsO6M5gl_Tc", "number": 109064, "title": "`+outline-atomics` violates \"core shall not depend on libc\"", "user": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 632453790, "node_id": "MDU6TGFiZWw2MzI0NTM3OTA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-target-specs", "name": "A-target-specs", "color": "f7e101", "default": false, "description": "Area: compile-target specifications"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}, {"id": 3940166907, "node_id": "LA_kwDOAAsO6M7q2iz7", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-AArch64", "name": "O-AArch64", "color": "6e6ec0", "default": false, "description": "Armv8-A or later processors in AArch64 mode"}, {"id": 5223550385, "node_id": "LA_kwDOAAsO6M8AAAABN1kNsQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-target-feature", "name": "A-target-feature", "color": "f7e101", "default": false, "description": "Area: Enabling/disabling target features like AVX, Neon, etc."}, {"id": 5257912668, "node_id": "LA_kwDOAAsO6M8AAAABOWVhXA", "url": "https://api.github.com/repos/rust-lang/rust/labels/-Zbuild-std", "name": "-Zbuild-std", "color": "382EF0", "default": false, "description": ""}, {"id": 5274348802, "node_id": "LA_kwDOAAsO6M8AAAABOmAtAg", "url": "https://api.github.com/repos/rust-lang/rust/labels/needs-mcp", "name": "needs-mcp", "color": "fceb9f", "default": false, "description": "This change is large enough that it needs a major change proposal before starting work."}], "state": "open", "locked": false, "assignee": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2023-03-13T00:28:47Z", "updated_at": "2023-04-03T20:32:52Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a policy that Rust's `core` does not depend on the libc implementation for a given target. This has caused us quite a deal of heartache in the past, and it is about to cause us more, but I believe it is and has been the right choice. Rust code relying only on our core library should not really _require_ participation from any other toolchain or library beyond our own code. We should be able to have \"pure Rust\" targets without being entangled with implementation details. We should be able to, in the long run, build and link our own code. And we should not close the door on that, certainly not at this stage where people are actually building pure Rust runtime libraries and operating systems.\r\n\r\nIn https://github.com/rust-lang/rust/pull/83655 I made a mistake that violated this policy. I was not familiar with how the function definitions would be resolved, and I thought they only depended on the linker somehow. It had not occurred to me, at the time, that it induced a dependency on glibc, and I was somehow not tipped off by the other bugs that started showing up. It has caused recurring issues even until relatively recently:\r\n- https://github.com/rust-lang/rust/issues/89626#issuecomment-1242636038\r\n- https://github.com/rust-lang/rust/issues/101172\r\n- https://github.com/rust-lang/wg-cargo-std-aware/issues/74\r\n\r\nI have personally also run into this in another project, even with _very_ recent compilers.\r\nA lot of work has been done to make my mistake compile anyways, and it's _still not enough_.\r\nObviously, this deeply hurts our ability to implement things like `-Zbuild-std`.\r\n\r\nFortunately, it is easily corrected: simply remove the feature from the aarch64-unknown-linux-gnu target spec unless and until we arrive at an implementation that does not require participation from glibc. This will lead to a performance regression using atomic instructions in some cases, but that's an acceptable loss if the alternative is continually trashing everyone's ability to build Rust code.\r\n\r\nThis may require retouching code in compiler-builtins as well.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/109064/reactions", "total_count": 7, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 7, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/109064/timeline", "performed_via_github_app": null, "state_reason": null}