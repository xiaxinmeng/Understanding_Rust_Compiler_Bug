{"url": "https://api.github.com/repos/rust-lang/rust/issues/99882", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99882/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99882/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99882/events", "html_url": "https://github.com/rust-lang/rust/issues/99882", "id": 1321655136, "node_id": "I_kwDOAAsO6M5Oxttg", "number": 99882, "title": "Imprecise error message for tuples with explicit type annotations", "user": {"login": "cr1901", "id": 6418027, "node_id": "MDQ6VXNlcjY0MTgwMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/6418027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cr1901", "html_url": "https://github.com/cr1901", "followers_url": "https://api.github.com/users/cr1901/followers", "following_url": "https://api.github.com/users/cr1901/following{/other_user}", "gists_url": "https://api.github.com/users/cr1901/gists{/gist_id}", "starred_url": "https://api.github.com/users/cr1901/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cr1901/subscriptions", "organizations_url": "https://api.github.com/users/cr1901/orgs", "repos_url": "https://api.github.com/users/cr1901/repos", "events_url": "https://api.github.com/users/cr1901/events{/privacy}", "received_events_url": "https://api.github.com/users/cr1901/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-07-29T01:29:36Z", "updated_at": "2022-08-11T01:23:28Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Issue\n\nConsider the following code ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=f565a2698f3decfb6f2e40cb9fb882e2)):\n\n```rust\nfn main() {\n    let foo = [1, 2, 3, 4];\n    let bar: (Vec<i32>, Vec<i64>) = foo.iter().partition(|r| **r < 3);\n    \n    println!(\"{:?}\", bar);\n}\n```\n\nThe current output as of a recent nightly\n\n```\nCompiling playground v0.0.1 (/playground)\nerror[[E0308]](https://doc.rust-lang.org/stable/error-index.html#E0308): mismatched types\n --> src/main.rs:3:37\n  |\n3 |     let bar: (Vec<i32>, Vec<i64>) = foo.iter().partition(|r| **r < 3);\n  |              --------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `i64`, found `i32`\n  |              |\n  |              expected due to this\n  |\n  = note: expected tuple `(Vec<i32>, Vec<i64>)`\n             found tuple `(_, _)`\n\nFor more information about this error, try `rustc --explain E0308`.\nerror: could not compile `playground` due to previous error\n```\n\nWhat the error's actually saying is \"partition() returns a tuple of two elements of the same type\". However, the error message as written suggests the whole expression returns an `i32`, since the arrows point to the entire expression. Additionally, since the \"`expected due to this`\" message the points to my explicit type annotations, I interpret the error message on the LHS of the let-binding to mean \"an `i64` is expected to satisfy typechecking on the LHS of the let-binding\".\n\nAlthough obvious in retrospect, I spent several seconds staring at those lines without the error clicking. Only after looking at the \"`note: expected tuple`\" line (i.e. the message specifically mentioned the tuple), did I realize that rustc didn't like the type of one of the tuple's elements, rather than the whole tuple, and gave error messages accordingly.\n\nI think the error could be improved by moving the dashed line on the LHS of the let-binding to emphasize only the (first?) mismatched tuple element, and changing the message on the RHS of the binding to reflect which tuple element caused the mismatch. I eventually\nunderstood that `rustc` was focused on writing errors for a specific tuple element by the \"`note: expected tuple`\" line, but it took me longer than I'd like to make the connection. I think better error output might look like this:\n\n```\nCompiling playground v0.0.1 (/playground)\nerror[[E0308]](https://doc.rust-lang.org/stable/error-index.html#E0308): mismatched types\n --> src/main.rs:3:37\n  |\n3 |     let bar: (Vec<i32>, Vec<i64>) = foo.iter().partition(|r| **r < 3);\n  |                        ----------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `i64` on tuple element 1, found `i32`\n  |                        |\n  |                        expected due to this element\n  |\n  = note: expected tuple `(Vec<i32>, Vec<i64>)`\n             found tuple `(_, _)`\n\nFor more information about this error, try `rustc --explain E0308`.\nerror: could not compile `playground` due to previous error\n```\n\n## Extra Information\n\n```sh\nwjones@DietPi:~/src/rust/pi-ctl$ rustc -Vv\nrustc 1.64.0-nightly (4d6d601c8 2022-07-26)\nbinary: rustc\ncommit-hash: 4d6d601c8a83284d6b23c253a3e2a060fd197316\ncommit-date: 2022-07-26\nhost: armv7-unknown-linux-gnueabihf\nrelease: 1.64.0-nightly\nLLVM version: 14.0.6\n```\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":null}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99882/timeline", "performed_via_github_app": null, "state_reason": null}