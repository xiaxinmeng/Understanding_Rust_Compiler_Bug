{"url": "https://api.github.com/repos/rust-lang/rust/issues/89834", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89834/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89834/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89834/events", "html_url": "https://github.com/rust-lang/rust/issues/89834", "id": 1024529261, "node_id": "I_kwDOAAsO6M49ERNt", "number": 89834, "title": "ICE with rustdoc JSON backend and duplicated exports", "user": {"login": "sunshowers", "id": 180618, "node_id": "MDQ6VXNlcjE4MDYxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/180618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunshowers", "html_url": "https://github.com/sunshowers", "followers_url": "https://api.github.com/users/sunshowers/followers", "following_url": "https://api.github.com/users/sunshowers/following{/other_user}", "gists_url": "https://api.github.com/users/sunshowers/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunshowers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunshowers/subscriptions", "organizations_url": "https://api.github.com/users/sunshowers/orgs", "repos_url": "https://api.github.com/users/sunshowers/repos", "events_url": "https://api.github.com/users/sunshowers/events{/privacy}", "received_events_url": "https://api.github.com/users/sunshowers/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2682491374, "node_id": "MDU6TGFiZWwyNjgyNDkxMzc0", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-rustdoc-json", "name": "A-rustdoc-json", "color": "f7e101", "default": false, "description": "Area: Rustdoc JSON backend"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-10-12T22:34:57Z", "updated_at": "2021-10-13T03:16:24Z", "closed_at": "2021-10-13T03:16:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there --\r\n\r\nLooks like the rustdoc json output seems to have an issue with duplicated exports. I hit this issue with https://docs.rs/ansi_term/0.12.1/ansi_term/index.html, which exports both `Color` and `Colour` as the same type.\r\n\r\n### Code\r\n\r\nMinimized example:\r\n\r\n```Rust\r\nmod inner {\r\n    pub struct Public;\r\n}\r\npub use inner::Public as NewName1;\r\npub use inner::Public as NewName2;\r\n```\r\n\r\nReproduces with the following command:\r\n\r\n```\r\nRUSTDOCFLAGS='--output-format json' cargo +nightly doc\r\n```\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.57.0-nightly (5b210643e 2021-10-11)\r\nbinary: rustc\r\ncommit-hash: 5b210643ebf2485aafdf2494de8cf41941a64e95\r\ncommit-date: 2021-10-11\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.57.0-nightly\r\nLLVM version: 13.0.0\r\n\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: `(left == right)`\r\n  left: `Item { id: Id(\"0:4\"), crate_id: 0, name: Some(\"NewName1\"), span: Some(Span { filename: \"src/lib.rs\", begin: (2, 4), end: (2, 22) }), visibility: Public, docs: None, links: {}, attrs: [], deprecation: None, inner: Struct(Struct { struct_type: Unit, generics: Generics { params: [], where_predicates: [] }, fields_stripped: false, fields: [], impls: [Id(\"a:2:2989-0:4\"), Id(\"a:2:3001-0:4\"), Id(\"a:2:3030-0:4\"), Id(\"a:2:8303-0:4\"), Id(\"a:2:8304-0:4\"), Id(\"b:2:2922-0:4\"), Id(\"b:2:2918-0:4\"), Id(\"b:2:2933-0:4\"), Id(\"b:2:2928-0:4\"), Id(\"b:2:2594-0:4\"), Id(\"b:2:2597-0:4\"), Id(\"b:2:3652-0:4\")] }) }`,\r\n right: `Item { id: Id(\"0:4\"), crate_id: 0, name: Some(\"NewName2\"), span: Some(Span { filename: \"src/lib.rs\", begin: (2, 4), end: (2, 22) }), visibility: Public, docs: None, links: {}, attrs: [], deprecation: None, inner: Struct(Struct { struct_type: Unit, generics: Generics { params: [], where_predicates: [] }, fields_stripped: false, fields: [], impls: [Id(\"a:2:2989-0:4\"), Id(\"a:2:3001-0:4\"), Id(\"a:2:3030-0:4\"), Id(\"a:2:8303-0:4\"), Id(\"a:2:8304-0:4\"), Id(\"b:2:2922-0:4\"), Id(\"b:2:2918-0:4\"), Id(\"b:2:2933-0:4\"), Id(\"b:2:2928-0:4\"), Id(\"b:2:2594-0:4\"), Id(\"b:2:2597-0:4\"), Id(\"b:2:3652-0:4\")] }) }`', src/librustdoc/json/mod.rs:195:17\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   0: rust_begin_unwind\r\n             at /rustc/5b210643ebf2485aafdf2494de8cf41941a64e95/library/std/src/panicking.rs:517:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/5b210643ebf2485aafdf2494de8cf41941a64e95/library/core/src/panicking.rs:100:14\r\n   2: core::panicking::assert_failed_inner\r\n   3: core::panicking::assert_failed\r\n   4: <rustdoc::json::JsonRenderer as rustdoc::formats::renderer::FormatRenderer>::item\r\n   5: <rustdoc::json::JsonRenderer as rustdoc::formats::renderer::FormatRenderer>::item\r\n   6: rustdoc::formats::renderer::run_format\r\n   7: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n   8: rustc_interface::passes::QueryContext::enter\r\n   9: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  10: rustc_span::with_source_map\r\n  11: rustc_interface::interface::create_compiler_and_run\r\n  12: rustdoc::main_options\r\n  13: scoped_tls::ScopedKey<T>::set\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nI spent a little time looking at this, and it looks like changing `mod inner` to `pub mod inner` also fails with `jsondocck`:\r\n\r\n```\r\nthread 'main' panicked at 'Name collision: import_id is duplicated', src/tools/jsondocck/src/main.rs:274:21\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n```\r\n\r\nso it's likely that the handling of duplicate public re-exports is also broken.", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89834/timeline", "performed_via_github_app": null, "state_reason": "completed"}