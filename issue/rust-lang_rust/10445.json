{"url": "https://api.github.com/repos/rust-lang/rust/issues/10445", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/10445/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/10445/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/10445/events", "html_url": "https://github.com/rust-lang/rust/issues/10445", "id": 22542543, "node_id": "MDU6SXNzdWUyMjU0MjU0Mw==", "number": 10445, "title": "`&mut` references located in aliasable memory should be considered frozen", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-11-12T19:09:10Z", "updated_at": "2013-11-25T11:43:41Z", "closed_at": "2013-11-21T18:32:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We only permit `&mut` pointees to be mutated if the `&mut` is in a unique location (i.e., another `&mut`, a local variable, etc). Based on this, it is safe to conclude that the memory referenced by an `&mut` pointer found in an _aliasable_ location is frozen. But the borrow checker considers such memory to be unsafe for use. This is overly conservative and prevents important compositional patterns.\n\nIn particular, I should be able to define a type `BorrowedMap` that looks like this:\n\n```\nstruct BorrowedMap<'m,K,V> {\n    map: &'m mut HashMap<K,V>\n}\n```\n\nand now I should be able to implement the `Map<K,V>` trait for `BorrowedMap`:\n\n```\nimpl<'m,K,V> Map<K,V> for BorrowedMap<'m,K,V> {\n    fn insert(&mut self, key: K, value: V) { self.map.insert(key, value); }\n    fn find<'a>(&'a self, key: &K) -> Option<'a V> {\n        self.map.find(key) // ERROR\n    }\n}\n```\n\nHowever I can't because I get an error at the marked line. This is because `self.map` is an `&mut` found inside of an aliasable location (`self`) and hence it cannot be considered frozen. But why not? Nobody can mutate it, after all.\n\nNote that the maximum lifetime of a freeze would be `'a` (which is sufficient for this case).\n\nNominating.\n", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/10445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/10445/timeline", "performed_via_github_app": null, "state_reason": "completed"}