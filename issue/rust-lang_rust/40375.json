{"url": "https://api.github.com/repos/rust-lang/rust/issues/40375", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40375/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40375/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40375/events", "html_url": "https://github.com/rust-lang/rust/issues/40375", "id": 212850602, "node_id": "MDU6SXNzdWUyMTI4NTA2MDI=", "number": 40375, "title": "Misleading suggestion for missing trait bounds", "user": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-08T20:42:04Z", "updated_at": "2020-06-15T19:20:35Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This is a simplified version of https://users.rust-lang.org/t/solved-iterator-filter-and-zip-in-place/9809/4\r\n\r\n```rust\r\ntrait Foo {\r\n    fn foo(self) -> Self;\r\n}\r\n\r\nimpl<I, T, U> Foo for I\r\n    where I: Iterator<Item = (T, U)>\r\n{\r\n    fn foo(self) -> Self {\r\n        self\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let v = vec![(1, 'a'), (2, 'b'), (3, 'c')];\r\n    for x in v.iter().foo() {\r\n        println!(\"{:?}\", x);\r\n    }\r\n}\r\n```\r\n\r\n[The error is](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=6d156770fb7bf83601c77a3d71592a02):\r\n\r\n```\r\nerror: no method named `foo` found for type `std::slice::Iter<'_, ({integer}, char)>` in the current scope\r\n  --> <anon>:15:23\r\n   |\r\n15 |     for x in v.iter().foo() {\r\n   |                       ^^^\r\n   |\r\n   = note: the method `foo` exists but the following trait bounds were not satisfied: `&std::slice::Iter<'_, ({integer}, char)> : std::iter::Iterator`\r\n   = help: items from traits can only be used if the trait is implemented and in scope; the following trait defines an item `foo`, perhaps you need to implement it:\r\n   = help: candidate #1: `Foo`\r\n```\r\n\r\nThe `note:` chose to report missing `&Iter: Iterator`, which is true, but it's not best thing it could have noted.  I guess it's looking at `&Iter` because of some auto-ref in the method call.  But if you force it to use `Iter` directly with UFCS, like `Foo::foo(v.iter())`, the note is more useful.\r\n\r\n```\r\nerror[E0271]: type mismatch resolving `<std::slice::Iter<'_, ({integer}, char)> as std::iter::Iterator>::Item == (_, _)`\r\n  --> <anon>:15:14\r\n   |\r\n15 |     for x in Foo::foo(v.iter()) {\r\n   |              ^^^^^^^^ expected reference, found tuple\r\n   |\r\n   = note: expected type `&({integer}, char)`\r\n              found type `(_, _)`\r\n   = note: required because of the requirements on the impl of `Foo` for `std::slice::Iter<'_, ({integer}, char)>`\r\n   = note: required by `Foo::foo`\r\n```\r\n\r\nSo we *do* have an `Iterator`, just the wrong `Item`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40375/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40375/timeline", "performed_via_github_app": null, "state_reason": null}