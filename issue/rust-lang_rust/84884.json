{"url": "https://api.github.com/repos/rust-lang/rust/issues/84884", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84884/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84884/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84884/events", "html_url": "https://github.com/rust-lang/rust/issues/84884", "id": 874881630, "node_id": "MDU6SXNzdWU4NzQ4ODE2MzA=", "number": 84884, "title": "`-Z instrument-coverage` shows missing coverage for unbraced closures invoking only a macro", "user": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2483744621, "node_id": "MDU6TGFiZWwyNDgzNzQ0NjIx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-code-coverage", "name": "A-code-coverage", "color": "f7e101", "default": false, "description": "Area: Source-based code coverage (-Cinstrument-coverage)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-05-03T20:24:21Z", "updated_at": "2021-05-07T10:06:40Z", "closed_at": "2021-05-07T10:06:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I expect something that looks like the result, for a similar (non-macro) closure:\r\n\r\n```\r\n  131|      1|    let _short_unused_closure = | _unused_arg: u8 | countdown += 1;\r\n                                                                  ^0\r\n```\r\n\r\nBut instead we get results like the following:\r\n\r\n```\r\n  135|      1|    let short_used_not_covered_closure_macro = | used_arg: u8 | println!(\"not called\");\r\n  136|      1|    let _short_unused_closure = | _unused_arg: u8 | println!(\"not called\");\r\n...\r\n  170|      1|    let short_used_not_covered_closure_line_break_no_block_embedded_branch =\r\n  171|       |        | _unused_arg: u8 |\r\n  172|       |            println!(\r\n  173|       |                \"not called: {}\",\r\n  174|       |                if is_true { \"check\" } else { \"me\" }\r\n  175|       |            )\r\n  176|       |    ;\r\n  177|      1|    if is_false {\r\n  178|      0|        short_used_not_covered_closure_macro(0);\r\n  179|      0|        short_used_not_covered_closure_line_break_no_block_embedded_branch(0);\r\n  180|      1|    }\r\n  ```\r\n\r\nThis issue is demonstrated in the coverage results from the test: https://github.com/rust-lang/rust/blob/031c756d16290f3f8ed25a64126ff82cca17123d/src/test/run-make/coverage/closure.rs#L136\r\n\r\nI have a new PR in progress to show more examples, and those examples expose the fact that the coverage for `println!(...)` is actually being added to the macro's source itself. \r\n\r\nNote that there were 5 `println!(...)` macro calls with missing coverage in the corresponding test case, and the coverage report shows 5 `Unexecuted instantiations`. So all are taken into account.\r\n\r\nNevertheless, this is a function-like macro, and it should behave like a function call, and show the coverage at the calling site.\r\n\r\n```\r\n/usr/local/google/home/richkadel/rust/library/std/src/macros.rs:\r\n   94|       |macro_rules! println {\r\n   95|       |    () => ($crate::print!(\"\\n\"));\r\n   96|      0|    ($($arg:tt)*) => ({\r\n   97|      0|        $crate::io::_print($crate::format_args_nl!($($arg)*));\r\n  ------------------\r\n  | Unexecuted instantiation: closure::main::{closure#13}\r\n  ------------------\r\n   98|      0|    })\r\n  ------------------\r\n  | Unexecuted instantiation: closure::main::{closure#5}\r\n  ------------------\r\n  | Unexecuted instantiation: closure::main::{closure#12}\r\n  ------------------\r\n  | Unexecuted instantiation: closure::main::{closure#6}\r\n  ------------------\r\n  | Unexecuted instantiation: closure::main::{closure#11}\r\n  ------------------\r\n   99|       |}\r\n```\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84884/timeline", "performed_via_github_app": null, "state_reason": "completed"}