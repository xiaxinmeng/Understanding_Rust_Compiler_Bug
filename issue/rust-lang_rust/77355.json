{"url": "https://api.github.com/repos/rust-lang/rust/issues/77355", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77355/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77355/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77355/events", "html_url": "https://github.com/rust-lang/rust/issues/77355", "id": 711682974, "node_id": "MDU6SXNzdWU3MTE2ODI5NzQ=", "number": 77355, "title": "`if matches!(...)` results in worse mir than `if let ...`", "user": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}, {"id": 1976249039, "node_id": "MDU6TGFiZWwxOTc2MjQ5MDM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-patterns", "name": "A-patterns", "color": "f7e101", "default": false, "description": "Relating to patterns and pattern matching"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-09-30T06:49:51Z", "updated_at": "2021-02-24T10:04:59Z", "closed_at": "2021-02-24T10:04:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is probably something we can and should optimize:\r\n```rust\r\npub enum Foo {\r\n    A,\r\n    B,\r\n    C,\r\n    D,\r\n    E,\r\n    F,\r\n}\r\n\r\npub fn matches(num: Foo) -> u32 {\r\n    if matches!(num, Foo::B | Foo::C) {\r\n        23\r\n    } else {\r\n        42\r\n    }\r\n}\r\n\r\n\r\npub fn if_let(num: Foo) -> u32 {\r\n    if let Foo::B | Foo::C = num {\r\n        23\r\n    } else {\r\n        42\r\n    }\r\n}\r\n```\r\nresults in\r\n```\r\nfn matches(_1: Foo) -> u32 {\r\n    debug num => _1;                     // in scope 0 at ./example.rs:10:16: 10:19\r\n    let mut _0: u32;                     // return place in scope 0 at ./example.rs:10:29: 10:32\r\n    let mut _2: bool;                    // in scope 0 at /rustc/7f7a1cbfd3b55daee191247770627afab09eece2/library/core/src/macros/mod.rs:246:9: 249:10\r\n    let mut _3: isize;                   // in scope 0 at ./example.rs:11:22: 11:28\r\n\r\n    bb0: {\r\n        StorageLive(_2);                 // scope 0 at /rustc/7f7a1cbfd3b55daee191247770627afab09eece2/library/core/src/macros/mod.rs:246:9: 249:10\r\n        _3 = discriminant(_1);           // scope 0 at ./example.rs:11:22: 11:28\r\n        switchInt(move _3) -> [1_isize: bb2, 2_isize: bb2, otherwise: bb1]; // scope 0 at ./example.rs:11:22: 11:28\r\n    }\r\n\r\n    bb1: {\r\n        _2 = const false;                // scope 0 at /rustc/7f7a1cbfd3b55daee191247770627afab09eece2/library/core/src/macros/mod.rs:248:18: 248:23\r\n        goto -> bb3;                     // scope 0 at /rustc/7f7a1cbfd3b55daee191247770627afab09eece2/library/core/src/macros/mod.rs:246:9: 249:10\r\n    }\r\n\r\n    bb2: {\r\n        _2 = const true;                 // scope 0 at /rustc/7f7a1cbfd3b55daee191247770627afab09eece2/library/core/src/macros/mod.rs:247:48: 247:52\r\n        goto -> bb3;                     // scope 0 at /rustc/7f7a1cbfd3b55daee191247770627afab09eece2/library/core/src/macros/mod.rs:246:9: 249:10\r\n    }\r\n\r\n    bb3: {\r\n        switchInt(_2) -> [false: bb4, otherwise: bb5]; // scope 0 at ./example.rs:11:5: 15:6\r\n    }\r\n\r\n    bb4: {\r\n        _0 = const 42_u32;               // scope 0 at ./example.rs:14:9: 14:11\r\n        goto -> bb6;                     // scope 0 at ./example.rs:11:5: 15:6\r\n    }\r\n\r\n    bb5: {\r\n        _0 = const 23_u32;               // scope 0 at ./example.rs:12:9: 12:11\r\n        goto -> bb6;                     // scope 0 at ./example.rs:11:5: 15:6\r\n    }\r\n\r\n    bb6: {\r\n        StorageDead(_2);                 // scope 0 at ./example.rs:16:1: 16:2\r\n        return;                          // scope 0 at ./example.rs:16:2: 16:2\r\n    }\r\n}\r\n\r\nfn if_let(_1: Foo) -> u32 {\r\n    debug num => _1;                     // in scope 0 at ./example.rs:19:15: 19:18\r\n    let mut _0: u32;                     // return place in scope 0 at ./example.rs:19:28: 19:31\r\n    let mut _2: isize;                   // in scope 0 at ./example.rs:20:12: 20:18\r\n\r\n    bb0: {\r\n        _2 = discriminant(_1);           // scope 0 at ./example.rs:20:12: 20:18\r\n        switchInt(move _2) -> [1_isize: bb2, 2_isize: bb2, otherwise: bb1]; // scope 0 at ./example.rs:20:12: 20:18\r\n    }\r\n\r\n    bb1: {\r\n        _0 = const 42_u32;               // scope 0 at ./example.rs:23:9: 23:11\r\n        goto -> bb3;                     // scope 0 at ./example.rs:20:5: 24:6\r\n    }\r\n\r\n    bb2: {\r\n        _0 = const 23_u32;               // scope 0 at ./example.rs:21:9: 21:11\r\n        goto -> bb3;                     // scope 0 at ./example.rs:20:5: 24:6\r\n    }\r\n\r\n    bb3: {\r\n        return;                          // scope 0 at ./example.rs:25:2: 25:2\r\n    }\r\n}\r\n```\r\nhttps://godbolt.org/z/8K79o8", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77355/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77355/timeline", "performed_via_github_app": null, "state_reason": "completed"}