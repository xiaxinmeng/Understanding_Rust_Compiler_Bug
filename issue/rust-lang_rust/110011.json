{"url": "https://api.github.com/repos/rust-lang/rust/issues/110011", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110011/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110011/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110011/events", "html_url": "https://github.com/rust-lang/rust/issues/110011", "id": 1657715193, "node_id": "I_kwDOAAsO6M5izrn5", "number": 110011, "title": "Tracking Issue for `#[track_caller]` on async fn", "user": {"login": "bryangarza", "id": 1396101, "node_id": "MDQ6VXNlcjEzOTYxMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1396101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryangarza", "html_url": "https://github.com/bryangarza", "followers_url": "https://api.github.com/users/bryangarza/followers", "following_url": "https://api.github.com/users/bryangarza/following{/other_user}", "gists_url": "https://api.github.com/users/bryangarza/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryangarza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryangarza/subscriptions", "organizations_url": "https://api.github.com/users/bryangarza/orgs", "repos_url": "https://api.github.com/users/bryangarza/repos", "events_url": "https://api.github.com/users/bryangarza/events{/privacy}", "received_events_url": "https://api.github.com/users/bryangarza/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-04-06T16:22:13Z", "updated_at": "2023-05-31T20:18:36Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--This is a tracking issue for the RFC \"XXX\" (rust-lang/rfcs#NNN).-->\r\nThis is a tracking issue for `#[track_caller]` on async fn.\r\nThe feature gate `#[feature(async_fn_track_caller)]` for the issue is not implemented yet (https://github.com/rust-lang/rust/issues/110009)\r\n\r\n### About tracking issues\r\n\r\nTracking issues are used to record the overall progress of implementation.\r\nThey are also used as hubs connecting to other relevant issues, e.g., bugs or open design questions.\r\nA tracking issue is however *not* meant for large scale discussion, questions, or bug reports about a feature.\r\nInstead, open a dedicated issue for the specific matter and add the relevant feature gate label.\r\n\r\n### Steps\r\n<!--\r\nInclude each step required to complete the feature. Typically this is a PR\r\nimplementing a feature, followed by a PR that stabilises the feature. However\r\nfor larger features an implementation could be broken up into multiple PRs.\r\n-->\r\n\r\n- [ ] Implement https://github.com/rust-lang/rust/issues/110009\r\n<!--- [ ] Implement the RFC (cc @rust-lang/XXX -- can anyone write up mentoring\r\n      instructions?)-->\r\n- [ ] Update tracking behavior (see Unresolved Questions)\r\n- [ ] Adjust documentation ([see instructions on rustc-dev-guide][doc-guide])\r\n- [ ] Stabilization PR ([see instructions on rustc-dev-guide][stabilization-guide])\r\n\r\n[stabilization-guide]: https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#stabilization-pr\r\n[doc-guide]: https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#documentation-prs\r\n\r\n### Unresolved Questions\r\n<!--\r\nInclude any open questions that need to be answered before the feature can be\r\nstabilised.\r\n-->\r\n\r\n(Copied over from: https://github.com/rust-lang/rust/issues/87417#issuecomment-1496735888)\r\n\r\nIt's not 100% clear that tracking the poller, rather than the original caller, is the ideal behavior. That said, we may still be able to resolve the question without an RFC.\r\n\r\nArguments in favor of tracking the poller (current behavior):\r\n\r\n- The user might expect to see the call that's happening now rather than one that happened in the past.\r\n- Prevents us from having to store the caller in the Future type.\r\n- Usually poller and caller are the same function, anyway, so we should do the simpler and more performant thing.\r\n\r\nArguments in favor of tracking the original caller instead of the poller:\r\n\r\n- User might expect to see the actual caller; especially given the name track_caller, showing the poller can confusing.\r\n- A &'static Location is only one pointer; storing it is not so bad.\r\n- Combinators won't need to add #[track_caller] to \"thread through\" the caller information.\r\n- If we tracked the poller, #[track_caller] on a spawned task would show the executor.\r\n  - There's no way today for the executor to save off caller location information (e.g. in spawn) and re-provide it to the polled function, even if it wanted to. We could fix this with a set_caller API.\r\n  - Tracking won't work for &dyn Future. Executors can easily work around this if they have an API with access to the underlying type before coercing to dyn, as most do ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=815c4e7373f6d21e3f5a1bb5bdfb8872)). But if you happen to already have a dyn Future, you'll be stuck.\r\n\r\n### Implementation history\r\n\r\n<!--\r\nInclude a list of all the PRs that were involved in implementing the feature.\r\n-->\r\n\r\n- https://github.com/rust-lang/rust/pull/104219\r\n- https://github.com/rust-lang/rust/pull/104741\r\n- https://github.com/rust-lang/rust/pull/105180", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110011/timeline", "performed_via_github_app": null, "state_reason": null}