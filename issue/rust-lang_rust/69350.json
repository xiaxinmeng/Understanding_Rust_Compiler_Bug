{"url": "https://api.github.com/repos/rust-lang/rust/issues/69350", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69350/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69350/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69350/events", "html_url": "https://github.com/rust-lang/rust/issues/69350", "id": 568999415, "node_id": "MDU6SXNzdWU1Njg5OTk0MTU=", "number": 69350, "title": "Don't suggest adding 'static lifetime to function arguments", "user": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-21T14:48:06Z", "updated_at": "2021-05-13T18:47:10Z", "closed_at": "2021-05-13T18:47:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When using a temporary reference in a context where temporary references are not allowed, rustc gives a technically-correct suggestion that in practice is most often misleading and makes beginners stuck trying to solve a wrong problem:\r\n\r\n```rust\r\nfn naninani(arg: &str) {\r\n    std::thread::spawn(|| {\r\n        println!(\"{}\", arg);\r\n    });\r\n}\r\n```\r\n\r\n```\r\nerror[E0621]: explicit lifetime required in the type of `arg`\r\n --> src/lib.rs:2:5\r\n  |\r\n1 | fn naninani(arg: &str) {\r\n  |                  ---- help: add explicit lifetime `'static` to the type of `arg`: `&'static str`\r\n2 |     std::thread::spawn(|| {\r\n  |     ^^^^^^^^^^^^^^^^^^ lifetime `'static` required\r\n```\r\n\r\nThis suggestion is very unlikely to be useful in a real program. If the function is changed to require arguments with a `'static` lifetime, it generally just causes more borrow checking errors at the call sites of the function, causing inexperienced users dig deeper in the wrong direction.\r\n\r\n\r\nMy suggestions:\r\n\r\n* Don't make code change suggestions for `'static` lifetime outside of globals. In this case no suggestion at all would be better than a misleading code change.\r\n\r\n* Because the correct solution is most likely *not* to use a reference at all, don't focus the message on the (unusual) kind of reference that would work, but explain that most (i.e. non-`'static`) references won't work.\r\n\r\nI suggest changing \"lifetime `'static` required\" say something along the lines of \"temporary references are not allowed\".\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69350/reactions", "total_count": 32, "+1": 10, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 22, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69350/timeline", "performed_via_github_app": null, "state_reason": "completed"}