{"url": "https://api.github.com/repos/rust-lang/rust/issues/112602", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112602/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112602/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112602/events", "html_url": "https://github.com/rust-lang/rust/issues/112602", "id": 1755842209, "node_id": "I_kwDOAAsO6M5oqAah", "number": 112602, "title": "Cycle detected when computing type, but only when function is const", "user": {"login": "K4rakara", "id": 40474474, "node_id": "MDQ6VXNlcjQwNDc0NDc0", "avatar_url": "https://avatars.githubusercontent.com/u/40474474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/K4rakara", "html_url": "https://github.com/K4rakara", "followers_url": "https://api.github.com/users/K4rakara/followers", "following_url": "https://api.github.com/users/K4rakara/following{/other_user}", "gists_url": "https://api.github.com/users/K4rakara/gists{/gist_id}", "starred_url": "https://api.github.com/users/K4rakara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/K4rakara/subscriptions", "organizations_url": "https://api.github.com/users/K4rakara/orgs", "repos_url": "https://api.github.com/users/K4rakara/repos", "events_url": "https://api.github.com/users/K4rakara/events{/privacy}", "received_events_url": "https://api.github.com/users/K4rakara/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 268744493, "node_id": "MDU6TGFiZWwyNjg3NDQ0OTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-fn", "name": "A-const-fn", "color": "f7e101", "default": false, "description": "Area: const fn foo(..) {..}. Pure functions which can be applied at compile time."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-06-14T00:43:30Z", "updated_at": "2023-06-15T05:12:43Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\npub struct Parser<H>(H);\r\n\r\nimpl<H, T> Parser<H>\r\nwhere\r\n    H: for<'a> Fn(&'a str) -> T,\r\n{\r\n    pub const fn new(handler: H) -> Parser<H> {\r\n        Parser(handler)\r\n    }\r\n\r\n    pub const fn many<'s>(\r\n        &'s self,\r\n    ) -> Parser<impl for<'a> Fn(&'a str) -> Vec<T> + 's> {\r\n        Parser::new(|_| unimplemented!())\r\n    }\r\n}\r\n\r\nfn main() {\r\n    println!(\"Hello, world!\");\r\n}\r\n```\r\n\r\nWhich causes the following error:\r\n\r\n```\r\nerror[E0391]: cycle detected when computing type of `<impl at src/main.rs:3:1: 3:21>::many::{opaque#0}`\r\n  --> src/main.rs:13:17\r\n   |\r\n13 |     ) -> Parser<impl for<'a> Fn(&'a str) -> Vec<T> + 's> {\r\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\nnote: ...which requires borrow-checking `<impl at src/main.rs:3:1: 3:21>::many`...\r\n  --> src/main.rs:11:5\r\n   |\r\n11 | /     pub const fn many<'s>(\r\n12 | |         &'s self,\r\n13 | |     ) -> Parser<impl for<'a> Fn(&'a str) -> Vec<T> + 's> {\r\n   | |________________________________________________________^\r\nnote: ...which requires const checking `<impl at src/main.rs:3:1: 3:21>::many`...\r\n  --> src/main.rs:11:5\r\n   |\r\n11 | /     pub const fn many<'s>(\r\n12 | |         &'s self,\r\n13 | |     ) -> Parser<impl for<'a> Fn(&'a str) -> Vec<T> + 's> {\r\n   | |________________________________________________________^\r\n   = note: ...which requires computing whether `Parser<<impl at src/main.rs:3:1: 3:21>::many::{opaque#0}>` is freeze...\r\n   = note: ...which requires evaluating trait selection obligation `Parser<<impl at src/main.rs:3:1: 3:21>::many::{opaque#0}>: core::marker::Freeze`...\r\n   = note: ...which again requires computing type of `<impl at src/main.rs:3:1: 3:21>::many::{opaque#0}`, completing the cycle\r\nnote: cycle used when checking item types in top-level module\r\n  --> src/main.rs:1:1\r\n   |\r\n1  | / pub struct Parser<H>(H);\r\n2  | |\r\n3  | | impl<H, T> Parser<H>\r\n4  | | where\r\n...  |\r\n19 | |     println!(\"Hello, world!\");\r\n20 | | }\r\n   | |_^\r\n\r\nFor more information about this error, try `rustc --explain E0391`.\r\nerror: could not compile `miri-cycle` (bin \"miri-cycle\") due to previous error\r\n```\r\n\r\nHowever, what is peculiar is that if you remove the `const` keyword from the `many` function, compilation succeeds, with absolutely no warnings or errors.\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.72.0-nightly (df77afbca 2023-06-12)\r\nbinary: rustc\r\ncommit-hash: df77afbcaf3365a32066a8ca4a00ae6fc9a69647\r\ncommit-date: 2023-06-12\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.72.0-nightly\r\nLLVM version: 16.0.5\r\n```\r\n\r\nNo backtrace is emitted when I use `RUST_BACKTRACE=1 cargo build`.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112602/timeline", "performed_via_github_app": null, "state_reason": null}