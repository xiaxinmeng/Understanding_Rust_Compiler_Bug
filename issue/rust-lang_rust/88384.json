{"url": "https://api.github.com/repos/rust-lang/rust/issues/88384", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88384/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88384/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88384/events", "html_url": "https://github.com/rust-lang/rust/issues/88384", "id": 981071849, "node_id": "MDU6SXNzdWU5ODEwNzE4NDk=", "number": 88384, "title": "ICE on const generic + static slice of fn()", "user": {"login": "simon-auch", "id": 12716644, "node_id": "MDQ6VXNlcjEyNzE2NjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/12716644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simon-auch", "html_url": "https://github.com/simon-auch", "followers_url": "https://api.github.com/users/simon-auch/followers", "following_url": "https://api.github.com/users/simon-auch/following{/other_user}", "gists_url": "https://api.github.com/users/simon-auch/gists{/gist_id}", "starred_url": "https://api.github.com/users/simon-auch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simon-auch/subscriptions", "organizations_url": "https://api.github.com/users/simon-auch/orgs", "repos_url": "https://api.github.com/users/simon-auch/repos", "events_url": "https://api.github.com/users/simon-auch/events{/privacy}", "received_events_url": "https://api.github.com/users/simon-auch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 3313407404, "node_id": "MDU6TGFiZWwzMzEzNDA3NDA0", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-adt_const_params", "name": "F-adt_const_params", "color": "f9c0cc", "default": false, "description": "`#![feature(adt_const_params)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-08-27T09:49:35Z", "updated_at": "2021-09-22T00:37:48Z", "closed_at": "2021-09-22T00:37:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(fn_traits)]\r\n#![feature(adt_const_params)]\r\n\r\n#[derive(PartialEq, Eq)]\r\nstruct CompileTimeSettings{\r\n    hooks: &'static[fn()],\r\n}\r\n\r\nstruct Foo<const T: CompileTimeSettings>;\r\n\r\nimpl<const T: CompileTimeSettings> Foo<T> {\r\n    fn callHooks(){\r\n    }\r\n}\r\n\r\nfn main(){\r\n    const settings: CompileTimeSettings = CompileTimeSettings{\r\n        hooks: &[],\r\n    };\r\n    \r\n    Foo::<settings>::callHooks();\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.0-nightly (0afc20860 2021-08-25) running on x86_64-unknown-linux-gnu\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_mir/src/const_eval/mod.rs:160:14: cannot destructure constant Const { ty: &[fn()], val: Value(ByRef { alloc: Allocation { bytes: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], relocations: Relocations(SortedMap { data: [(Size { raw: 0 }, alloc4)] }), init_mask: InitMask { blocks: [65535], len: Size { raw: 16 } }, align: Align { pow2: 3 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1145:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: std::panic::panic_any\r\n   2: rustc_errors::HandlerInner::bug\r\n   3: rustc_errors::Handler::bug\r\n   4: rustc_middle::ty::context::tls::with_opt\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: rustc_mir::const_eval::destructure_const\r\n   8: core::ops::function::FnOnce::call_once\r\n   9: rustc_query_system::query::plumbing::get_query_impl\r\n  10: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::destructure_const\r\n  11: rustc_middle::ty::relate::super_relate_consts\r\n  12: <rustc_infer::infer::combine::ConstInferUnifier as rustc_middle::ty::relate::TypeRelation>::consts\r\n  13: rustc_middle::ty::relate::super_relate_consts\r\n  14: <rustc_infer::infer::combine::ConstInferUnifier as rustc_middle::ty::relate::TypeRelation>::consts\r\n  15: rustc_infer::infer::combine::<impl rustc_infer::infer::InferCtxt>::unify_const_variable\r\n  16: rustc_infer::infer::combine::<impl rustc_infer::infer::InferCtxt>::super_combine_consts\r\n  17: <rustc_middle::ty::subst::GenericArg as rustc_middle::ty::relate::Relate>::relate\r\n  18: <I as rustc_middle::ty::context::InternAs<[T],R>>::intern_with\r\n  19: rustc_middle::ty::relate::super_relate_tys\r\n  20: rustc_infer::infer::combine::<impl rustc_infer::infer::InferCtxt>::super_combine_tys\r\n  21: <rustc_infer::infer::equate::Equate as rustc_middle::ty::relate::TypeRelation>::tys\r\n  22: rustc_infer::infer::InferCtxt::commit_if_ok\r\n  23: rustc_traits::type_op::AscribeUserTypeCx::relate\r\n  24: rustc_traits::type_op::AscribeUserTypeCx::relate_mir_and_user_ty\r\n  25: <rustc_infer::infer::InferCtxtBuilder as rustc_trait_selection::infer::InferCtxtBuilderExt>::enter_canonical_trait_query\r\n  26: rustc_traits::type_op::type_op_ascribe_user_type\r\n  27: rustc_query_system::query::plumbing::get_query_impl\r\n  28: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::type_op_ascribe_user_type\r\n  29: rustc_trait_selection::traits::query::type_op::ascribe_user_type::<impl rustc_trait_selection::traits::query::type_op::QueryTypeOp for rustc_middle::traits::query::type_op::AscribeUserType>::perform_query\r\n  30: rustc_trait_selection::traits::query::type_op::QueryTypeOp::fully_perform_into\r\n  31: <rustc_middle::ty::ParamEnvAnd<Q> as rustc_trait_selection::traits::query::type_op::TypeOp>::fully_perform\r\n  32: rustc_mir::borrow_check::type_check::canonical::<impl rustc_mir::borrow_check::type_check::TypeChecker>::fully_perform_op\r\n  33: rustc_mir::borrow_check::type_check::type_check\r\n  34: rustc_mir::borrow_check::nll::compute_regions\r\n  35: rustc_mir::borrow_check::do_mir_borrowck\r\n  36: rustc_infer::infer::InferCtxtBuilder::enter\r\n  37: rustc_mir::borrow_check::mir_borrowck\r\n  38: core::ops::function::FnOnce::call_once\r\n  39: rustc_query_system::query::plumbing::get_query_impl\r\n  40: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_borrowck\r\n  41: rustc_middle::ty::<impl rustc_middle::ty::context::TyCtxt>::par_body_owners\r\n  42: rustc_interface::passes::analysis\r\n  43: rustc_query_system::query::plumbing::get_query_impl\r\n  44: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  45: rustc_interface::passes::QueryContext::enter\r\n  46: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  47: rustc_span::with_source_map\r\n  48: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88384/timeline", "performed_via_github_app": null, "state_reason": "completed"}