{"url": "https://api.github.com/repos/rust-lang/rust/issues/105866", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105866/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105866/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105866/events", "html_url": "https://github.com/rust-lang/rust/issues/105866", "id": 1501887447, "node_id": "I_kwDOAAsO6M5ZhPvX", "number": 105866, "title": "[AVR] branch on .is_some() broken and inconsistent with .unwrap_or's result", "user": {"login": "gergoerdi", "id": 116009, "node_id": "MDQ6VXNlcjExNjAwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/116009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gergoerdi", "html_url": "https://github.com/gergoerdi", "followers_url": "https://api.github.com/users/gergoerdi/followers", "following_url": "https://api.github.com/users/gergoerdi/following{/other_user}", "gists_url": "https://api.github.com/users/gergoerdi/gists{/gist_id}", "starred_url": "https://api.github.com/users/gergoerdi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gergoerdi/subscriptions", "organizations_url": "https://api.github.com/users/gergoerdi/orgs", "repos_url": "https://api.github.com/users/gergoerdi/repos", "events_url": "https://api.github.com/users/gergoerdi/events{/privacy}", "received_events_url": "https://api.github.com/users/gergoerdi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 1884641928, "node_id": "MDU6TGFiZWwxODg0NjQxOTI4", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-AVR", "name": "O-AVR", "color": "6e6ec0", "default": false, "description": "Target: AVR processors (ATtiny, ATmega, etc.)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-12-18T12:35:07Z", "updated_at": "2022-12-25T00:35:01Z", "closed_at": "2022-12-25T00:35:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Nightly 2022-12-09, I am observing weird behaviour when branching on `Option<u8>::is_some`, even though a subsequent `Option<u8>::unwrap_or` seems to work as expected. \r\n\r\nI tried to make a convincing small reproducer for this; this code started its life as an iterator, hence the maybe weird structure.\r\n\r\n```\r\nfn stripe(x: u8, y: u8, mask: u8) -> Option<u8> {\r\n    if x < 1 || x >= 5 { return None };\r\n    if y < 1 || y >= 3 { return None };\r\n\r\n    Some(mask)\r\n}\r\n\r\nfn next(x: &mut u8, y: &mut u8, mask: &mut u8) -> Option<u8> {\r\n    if *x >= 6 {\r\n        None\r\n    } else {\r\n        let result = stripe(*x, *y, *mask);\r\n\r\n        *y += 1;\r\n        if *y >= 4 {\r\n            *y = 0;\r\n            *x += 1;\r\n            if result.is_some() { *mask <<= 1 }; // HERE\r\n        }\r\n        Some(result.unwrap_or(0))\r\n    }\r\n}\r\n```\r\n\r\nIf I start this from `x=0; y=0; mask=1;` and send out the result of `next()` over SPI, what I observe is that `mask` never changes from `1`, as if the `if result.is_some() { *mask <<= 1 }` code never ran. Note, however, that the output is only non-0 in the positions where `result.unwrap_or` would be given a `Some` value in `result`.\r\n\r\n```\r\n00 00 00 00\r\n00 01 01 00\r\n00 01 01 00\r\n00 01 01 00\r\n00 01 01 00\r\n00 00 00 00\r\n```\r\n\r\nIf I make the shift unconditional in the `HERE` line, I get the expected output:\r\n\r\n```\r\n00 00 00 00\r\n00 02 02 00\r\n00 04 04 00\r\n00 08 08 00\r\n00 10 10 00\r\n00 00 00 00\r\n```\r\n\r\n(of course, it is not the *desired* output, since the point would be to only shift `mask` inside the middle \"rectangle\").", "closed_by": {"login": "gergoerdi", "id": 116009, "node_id": "MDQ6VXNlcjExNjAwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/116009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gergoerdi", "html_url": "https://github.com/gergoerdi", "followers_url": "https://api.github.com/users/gergoerdi/followers", "following_url": "https://api.github.com/users/gergoerdi/following{/other_user}", "gists_url": "https://api.github.com/users/gergoerdi/gists{/gist_id}", "starred_url": "https://api.github.com/users/gergoerdi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gergoerdi/subscriptions", "organizations_url": "https://api.github.com/users/gergoerdi/orgs", "repos_url": "https://api.github.com/users/gergoerdi/repos", "events_url": "https://api.github.com/users/gergoerdi/events{/privacy}", "received_events_url": "https://api.github.com/users/gergoerdi/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105866/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}