{"url": "https://api.github.com/repos/rust-lang/rust/issues/16792", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16792/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16792/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16792/events", "html_url": "https://github.com/rust-lang/rust/issues/16792", "id": 41290534, "node_id": "MDU6SXNzdWU0MTI5MDUzNA==", "number": 16792, "title": "Guide: Bindings without initialization are not explained", "user": {"login": "Florob", "id": 133684, "node_id": "MDQ6VXNlcjEzMzY4NA==", "avatar_url": "https://avatars.githubusercontent.com/u/133684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Florob", "html_url": "https://github.com/Florob", "followers_url": "https://api.github.com/users/Florob/followers", "following_url": "https://api.github.com/users/Florob/following{/other_user}", "gists_url": "https://api.github.com/users/Florob/gists{/gist_id}", "starred_url": "https://api.github.com/users/Florob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Florob/subscriptions", "organizations_url": "https://api.github.com/users/Florob/orgs", "repos_url": "https://api.github.com/users/Florob/repos", "events_url": "https://api.github.com/users/Florob/events{/privacy}", "received_events_url": "https://api.github.com/users/Florob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-27T14:40:22Z", "updated_at": "2014-09-09T22:11:36Z", "closed_at": "2014-09-09T22:11:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The last paragraph of section 5 reads:\n\n> So, we've cleared up all of the confusion around bindings, with one exception: why does Rust let us declare a variable binding without an initial value if we must initialize the binding before we use it? And how does it know that we have or have not initialized the binding? For that, we need to learn our next concept: if.\n\nUnless I managed to completely miss it, those questions are never answered. I assume there were meant to be examples along the lines of\n\n```\nlet y: int;\nif x == 5i { y = 3 } else { y = 8 }\nprintln!(\"{}\", y);\n```\n\nand\n\n```\nlet y: int;\nif x == 5i { y = 3 }\nprintln!(\"{}\", y);\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16792/timeline", "performed_via_github_app": null, "state_reason": "completed"}