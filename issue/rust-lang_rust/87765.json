{"url": "https://api.github.com/repos/rust-lang/rust/issues/87765", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87765/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87765/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87765/events", "html_url": "https://github.com/rust-lang/rust/issues/87765", "id": 960687398, "node_id": "MDU6SXNzdWU5NjA2ODczOTg=", "number": 87765, "title": "Mutate error in Compiler Session Diagnostics", "user": {"login": "LDY1998", "id": 30492120, "node_id": "MDQ6VXNlcjMwNDkyMTIw", "avatar_url": "https://avatars.githubusercontent.com/u/30492120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LDY1998", "html_url": "https://github.com/LDY1998", "followers_url": "https://api.github.com/users/LDY1998/followers", "following_url": "https://api.github.com/users/LDY1998/following{/other_user}", "gists_url": "https://api.github.com/users/LDY1998/gists{/gist_id}", "starred_url": "https://api.github.com/users/LDY1998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LDY1998/subscriptions", "organizations_url": "https://api.github.com/users/LDY1998/orgs", "repos_url": "https://api.github.com/users/LDY1998/repos", "events_url": "https://api.github.com/users/LDY1998/events{/privacy}", "received_events_url": "https://api.github.com/users/LDY1998/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-08-04T16:14:53Z", "updated_at": "2021-08-05T04:12:52Z", "closed_at": "2021-08-05T04:12:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nI am working under project prusti, which is a verification tool against rust. The tool is designed to be a plugin that work along with the compiler and verify the user's source code if they annotate it with our syntax.\r\n\r\nRecently I am trying to implement a new feature in the project and I would like to access the error recorded during rust compile and map it to a more clear prusti internal error, is there any API available for doing that? If there isn't I wonder if it's possible to have that in rust so that it allows the plugin developer to have more freedom to decide what they want to do with the errors? (like a mutable reference to error or to be able to register a callback to deal with error)\r\n\r\nI've also asked the question in forums and compiler zulip:\r\nhttps://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/Map.2FMutate.20error.20in.20Compiler.20Session.20Diagnostics/near/248254289\r\nhttps://internals.rust-lang.org/t/access-to-compiler-error-in-callbacks/15134\r\n", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87765/timeline", "performed_via_github_app": null, "state_reason": "completed"}