{"url": "https://api.github.com/repos/rust-lang/rust/issues/41343", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41343/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41343/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41343/events", "html_url": "https://github.com/rust-lang/rust/issues/41343", "id": 222167031, "node_id": "MDU6SXNzdWUyMjIxNjcwMzE=", "number": 41343, "title": "Misleading error when a trait method implementation has explicit lifetime parameters but the trait signature does not.", "user": {"login": "peterjoel", "id": 150875, "node_id": "MDQ6VXNlcjE1MDg3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/150875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterjoel", "html_url": "https://github.com/peterjoel", "followers_url": "https://api.github.com/users/peterjoel/followers", "following_url": "https://api.github.com/users/peterjoel/following{/other_user}", "gists_url": "https://api.github.com/users/peterjoel/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterjoel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterjoel/subscriptions", "organizations_url": "https://api.github.com/users/peterjoel/orgs", "repos_url": "https://api.github.com/users/peterjoel/repos", "events_url": "https://api.github.com/users/peterjoel/events{/privacy}", "received_events_url": "https://api.github.com/users/peterjoel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-04-17T16:26:17Z", "updated_at": "2022-06-08T22:02:44Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider this example ([playground](https://play.rust-lang.org/?gist=f6e6314f04cbe19a3f30d1e03208a281&version=nightly&backtrace=0)):\r\n```\r\nuse std::vec::Vec;\r\nuse std::option::Option;\r\n\r\ntrait MyTrait {\r\n    fn bar(&self, vec: &Vec<u32>) -> Option<&u32>;\r\n}\r\n\r\nstruct Foo;\r\n\r\nimpl MyTrait for Foo {\r\n    fn bar<'a>(&self, vec: &'a Vec<u32>) -> Option<&'a u32> {\r\n        vec.get(0)\r\n    }\r\n}\r\n```\r\n\r\nThe error message is:\r\n\r\n```\r\nrustc 1.18.0-nightly (7627e3d31 2017-04-16)\r\nerror[E0495]: cannot infer an appropriate lifetime for lifetime parameter 'a in generic type due to conflicting requirements\r\n  --> <anon>:11:5\r\n   |\r\n11 |       fn bar<'a>(&self, vec: &'a Vec<u32>) -> Option<&'a u32> {\r\n   |  _____^ starting here...\r\n12 | |         vec.get(0)\r\n13 | |     }\r\n   | |_____^ ...ending here\r\n   |\r\nnote: first, the lifetime cannot outlive the anonymous lifetime #2 defined on the body at 11:60...\r\n  --> <anon>:11:61\r\n   |\r\n11 |       fn bar<'a>(&self, vec: &'a Vec<u32>) -> Option<&'a u32> {\r\n   |  _____________________________________________________________^ starting here...\r\n12 | |         vec.get(0)\r\n13 | |     }\r\n   | |_____^ ...ending here\r\nnote: ...so that method type is compatible with trait (expected fn(&Foo, &std::vec::Vec<u32>) -> std::option::Option<&u32>, found fn(&Foo, &std::vec::Vec<u32>) -> std::option::Option<&u32>)\r\n  --> <anon>:11:5\r\n   |\r\n11 |       fn bar<'a>(&self, vec: &'a Vec<u32>) -> Option<&'a u32> {\r\n   |  _____^ starting here...\r\n12 | |         vec.get(0)\r\n13 | |     }\r\n   | |_____^ ...ending here\r\nnote: but, the lifetime must be valid for the anonymous lifetime #1 defined on the body at 11:60...\r\n  --> <anon>:11:61\r\n   |\r\n11 |       fn bar<'a>(&self, vec: &'a Vec<u32>) -> Option<&'a u32> {\r\n   |  _____________________________________________________________^ starting here...\r\n12 | |         vec.get(0)\r\n13 | |     }\r\n   | |_____^ ...ending here\r\nnote: ...so that method type is compatible with trait (expected fn(&Foo, &std::vec::Vec<u32>) -> std::option::Option<&u32>, found fn(&Foo, &std::vec::Vec<u32>) -> std::option::Option<&u32>)\r\n  --> <anon>:11:5\r\n   |\r\n11 |       fn bar<'a>(&self, vec: &'a Vec<u32>) -> Option<&'a u32> {\r\n   |  _____^ starting here...\r\n12 | |         vec.get(0)\r\n13 | |     }\r\n   | |_____^ ...ending here\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\n\r\nAll of the text of the error is focussed on the body of the function, even though there are no lifetime problems in the body with respect to the signature of the surrounding function. The actual error is that the signatures of the trait method and its implementation do not match.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41343/timeline", "performed_via_github_app": null, "state_reason": null}