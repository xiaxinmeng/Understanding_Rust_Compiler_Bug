{"url": "https://api.github.com/repos/rust-lang/rust/issues/76180", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/76180/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/76180/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/76180/events", "html_url": "https://github.com/rust-lang/rust/issues/76180", "id": 689559126, "node_id": "MDU6SXNzdWU2ODk1NTkxMjY=", "number": 76180, "title": "functions that return direct static references to const fns fail to compile", "user": {"login": "Cobrand", "id": 8882127, "node_id": "MDQ6VXNlcjg4ODIxMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/8882127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cobrand", "html_url": "https://github.com/Cobrand", "followers_url": "https://api.github.com/users/Cobrand/followers", "following_url": "https://api.github.com/users/Cobrand/following{/other_user}", "gists_url": "https://api.github.com/users/Cobrand/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cobrand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cobrand/subscriptions", "organizations_url": "https://api.github.com/users/Cobrand/orgs", "repos_url": "https://api.github.com/users/Cobrand/repos", "events_url": "https://api.github.com/users/Cobrand/events{/privacy}", "received_events_url": "https://api.github.com/users/Cobrand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-31T22:34:11Z", "updated_at": "2020-08-31T22:37:27Z", "closed_at": "2020-08-31T22:37:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\nWhen having a function that returns a static reference, you can return borrows to direct structs such as `A(5)` but not `const fn`s which return the same struct such as `A::new(5)`. It's kind of tricky to explain, the example is easier to understand.\r\n\r\n# Example\r\n\r\n```rust\r\n#[derive(Copy, Clone)]\r\npub struct A(i32);\r\n\r\nimpl A {\r\n    pub const fn new(i: i32) -> A {\r\n        A(i)\r\n    }\r\n}\r\n\r\n// comment to make it compile\r\nfn not_good() -> &'static A {\r\n    &A::new(5) // <- this should work since A::new is const fn\r\n}\r\n\r\nfn good1() -> &'static A {\r\n    &A(5)\r\n}\r\n\r\nfn good2() -> &'static A {\r\n    static THIS_DOES_WORK: &'static A = &A::new(5);\r\n    THIS_DOES_WORK\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\n[playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=875acd7ddacf56661862f3658420308f)\r\n\r\n## Current Behavior (1.46.0 Stable)\r\n\r\n```\r\nerror[E0515]: cannot return reference to temporary value\r\n  --> src/main.rs:13:5\r\n   |\r\n13 |     &A::new(5)\r\n   |     ^---------\r\n   |     ||\r\n   |     |temporary value created here\r\n   |     returns a reference to data owned by the current function\r\n```\r\n\r\nThere is a borrow error when there shouldn't be: this error is perfectly valid when `A::new` is not const fn, but if `A::new` is const fn, it shouldn't output an error.", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/76180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/76180/timeline", "performed_via_github_app": null, "state_reason": "completed"}