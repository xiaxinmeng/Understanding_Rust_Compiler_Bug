{"url": "https://api.github.com/repos/rust-lang/rust/issues/80256", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80256/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80256/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80256/events", "html_url": "https://github.com/rust-lang/rust/issues/80256", "id": 771899822, "node_id": "MDU6SXNzdWU3NzE4OTk4MjI=", "number": 80256, "title": "Trait with associated type bounds cannot be made into an object because it uses `Self` as a type parameter", "user": {"login": "ldr709", "id": 8682972, "node_id": "MDQ6VXNlcjg2ODI5NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/8682972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldr709", "html_url": "https://github.com/ldr709", "followers_url": "https://api.github.com/users/ldr709/followers", "following_url": "https://api.github.com/users/ldr709/following{/other_user}", "gists_url": "https://api.github.com/users/ldr709/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldr709/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldr709/subscriptions", "organizations_url": "https://api.github.com/users/ldr709/orgs", "repos_url": "https://api.github.com/users/ldr709/repos", "events_url": "https://api.github.com/users/ldr709/events{/privacy}", "received_events_url": "https://api.github.com/users/ldr709/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 125141240, "node_id": "MDU6TGFiZWwxMjUxNDEyNDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-dst", "name": "A-dst", "color": "f7e101", "default": false, "description": "Area: Dynamically Sized Types"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-12-21T06:47:35Z", "updated_at": "2023-04-05T17:39:45Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A simplified example where this shows up is the following trait.\r\n\r\n```rust\r\ntrait Conversion {\r\n    type Source: Into<Self::Target>;\r\n    type Target;\r\n}\r\n```\r\n\r\n([Full code](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=fa933915af340b6d5597678d6177359b))\r\n\r\nIf you try to make a trait object, say `&dyn Conversion<Source = String, Target = Box<str>>`, then Rust errors:\r\n\r\n```\r\nerror[E0038]: the trait `Conversion` cannot be made into an object\r\n  --> src/main.rs:14:12\r\n   |\r\n1  | trait Conversion {\r\n   |       ---------- this trait cannot be made into an object...\r\n2  |     type Source: Into<Self::Target>;\r\n   |                  ------------------ ...because it uses `Self` as a type parameter in this\r\n...\r\n14 |     let b: &dyn Conversion<Source = String, Target = Box<str>> = &a;\r\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Conversion` cannot be made into an object\r\n```\r\n\r\nIf the bound was something like `Source: Into<Self>` this error would make sense, but instead the bound references another associated type, which all must be fully specified when making a trait object type anyway.\r\n\r\nThis problem does not seem to occur when associated types are used to define functions in the trait, as creating a `&dyn Deref<Target = ...>` trait object works.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80256/timeline", "performed_via_github_app": null, "state_reason": null}