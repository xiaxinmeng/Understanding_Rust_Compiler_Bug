{"url": "https://api.github.com/repos/rust-lang/rust/issues/21069", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/21069/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/21069/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/21069/events", "html_url": "https://github.com/rust-lang/rust/issues/21069", "id": 54127223, "node_id": "MDU6SXNzdWU1NDEyNzIyMw==", "number": 21069, "title": "Numeric traits inconsistent with integer type system", "user": {"login": "sneves", "id": 1407263, "node_id": "MDQ6VXNlcjE0MDcyNjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1407263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sneves", "html_url": "https://github.com/sneves", "followers_url": "https://api.github.com/users/sneves/followers", "following_url": "https://api.github.com/users/sneves/following{/other_user}", "gists_url": "https://api.github.com/users/sneves/gists{/gist_id}", "starred_url": "https://api.github.com/users/sneves/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sneves/subscriptions", "organizations_url": "https://api.github.com/users/sneves/orgs", "repos_url": "https://api.github.com/users/sneves/repos", "events_url": "https://api.github.com/users/sneves/events{/privacy}", "received_events_url": "https://api.github.com/users/sneves/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 178802147, "node_id": "MDU6TGFiZWwxNzg4MDIxNDc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-needs-decision", "name": "I-needs-decision", "color": "e11d21", "default": false, "description": "Issues in need of decision."}], "state": "closed", "locked": false, "assignee": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/22", "html_url": "https://github.com/rust-lang/rust/milestone/22", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/22/labels", "id": 924511, "node_id": "MDk6TWlsZXN0b25lOTI0NTEx", "number": 22, "title": "1.0 beta", "description": "", "creator": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 80, "state": "closed", "created_at": "2015-01-06T21:40:55Z", "updated_at": "2015-04-08T23:57:21Z", "due_on": null, "closed_at": "2015-04-08T23:57:21Z"}, "comments": 5, "created_at": "2015-01-13T00:04:02Z", "updated_at": "2015-03-31T18:26:25Z", "closed_at": "2015-03-31T18:26:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "From all the integer traits present in `std::num`, only `SignedInt` includes `Neg`. The `Neg` trait is not implemented by `Int` and `UnsignedInt` types because, presumably, it does not make sense to negate unsigned integers. I will not argue whether this is a good policy or not.\n\nHowever, this makes writing generic code for unsigned types harder than it needs to be. For example, suppose we have the function \n\n```\nfn f(x: u32) -> u32 { -(x >> 31) }\n```\n\nThis function works perfectly (albeit with a warning, but it _is_ valid Rust as far as I can tell) when implemented with a concrete unsigned integer type. However, when making the function generic it stops working:\n\n```\nfn f<T: UnsignedInt>(x: T) -> T { -(x >> (size_of::<T>()*8 - 1)) }\n// error: cannot apply unary operator `-` to type `T`\n```\n\nChanging this to `0 - <expression>` is a simple solution, but one that also does not work very well without pulling other (`NumCast`, `FromPrimitive`) traits. Another solution is to pull in the `Neg` trait directly, but this increases verbosity due to `Neg`'s associated type machinery. All in all, the lack of unsigned negation complicates things.\n\nNow, I accept that you may not want to make unsigned negation common or encouraged behavior. But in that case it also makes no sense to have the `-` operator available at all for unsigned types; users that really want such semantics can replace it by `0-<expression>` in non-generic code. \n\nMy overall point is:\n- If `u32`, `usize`, etc allow negation, i.e., have the `Neg` type implemented, so should `UnsignedInt`;\n- If `UnsignedInt` is not meant to be negatable, neither should be `u32`, `usize`, etc.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/21069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/21069/timeline", "performed_via_github_app": null, "state_reason": "completed"}