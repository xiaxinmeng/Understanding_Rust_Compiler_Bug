{"url": "https://api.github.com/repos/rust-lang/rust/issues/80682", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80682/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80682/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80682/events", "html_url": "https://github.com/rust-lang/rust/issues/80682", "id": 777974763, "node_id": "MDU6SXNzdWU3Nzc5NzQ3NjM=", "number": 80682, "title": "slice::swap violates the aliasing rules", "user": {"login": "Darksonn", "id": 928074, "node_id": "MDQ6VXNlcjkyODA3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/928074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Darksonn", "html_url": "https://github.com/Darksonn", "followers_url": "https://api.github.com/users/Darksonn/followers", "following_url": "https://api.github.com/users/Darksonn/following{/other_user}", "gists_url": "https://api.github.com/users/Darksonn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Darksonn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Darksonn/subscriptions", "organizations_url": "https://api.github.com/users/Darksonn/orgs", "repos_url": "https://api.github.com/users/Darksonn/repos", "events_url": "https://api.github.com/users/Darksonn/events{/privacy}", "received_events_url": "https://api.github.com/users/Darksonn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2021-01-04T10:00:26Z", "updated_at": "2021-01-22T02:42:36Z", "closed_at": "2021-01-22T02:42:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `slice::swap` method is currently implemented as\r\n\r\nhttps://github.com/rust-lang/rust/blob/b33e234155b33ab6bce280fb2445b62b68622b61/library/core/src/slice/mod.rs#L544-L556\r\n\r\nIf called with `a == b`, then it first creates a raw pointer to an element in the vector, and then it creates a mutable reference to that same element, asserting exclusive access. It then proceeds to use the original raw pointer even though we just asserted exclusive access through a different reference.\r\n\r\nIn fact, when running the following program in miri:\r\n```Rust\r\nfn main() {\r\n    let mut v = vec![1, 2, 3, 4];\r\n    v.swap(2, 2);\r\n}\r\n```\r\nwith `MIRIFLAGS=\"-Zmiri-track-raw-pointers\"`, it fails with an error.\r\n<details>\r\n  <summary>Click to open miri failure</summary>\r\n\r\n```\r\nerror: Undefined Behavior: no item granting read access to tag <3005> at alloc1335+0x8 found in borrow stack.\r\n    --> /home/alice/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/intrinsics.rs:1867:14\r\n     |\r\n1867 |     unsafe { copy_nonoverlapping(src, dst, count) }\r\n     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no item granting read access to tag <3005> at alloc1335+0x8 found in borrow stack.\r\n     |\r\n     = help: this indicates a potential bug in the program: it performed an invalid operation, but the rules it violated are still experimental\r\n     = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\r\n             \r\n     = note: inside `std::intrinsics::copy_nonoverlapping::<i32>` at /home/alice/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/intrinsics.rs:1867:14\r\n     = note: inside `std::ptr::swap::<i32>` at /home/alice/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/mod.rs:386:9\r\n     = note: inside `core::slice::<impl [i32]>::swap` at /home/alice/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/mod.rs:554:13\r\nnote: inside `main` at src/main.rs:3:5\r\n    --> src/main.rs:3:5\r\n     |\r\n3    |     v.swap(2, 2);\r\n     |     ^^^^^^^^^^^^\r\n     = note: inside `<fn() as std::ops::FnOnce<()>>::call_once - shim(fn())` at /home/alice/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:227:5\r\n     = note: inside `std::sys_common::backtrace::__rust_begin_short_backtrace::<fn(), ()>` at /home/alice/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:125:18\r\n     = note: inside closure at /home/alice/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/rt.rs:66:18\r\n     = note: inside `std::ops::function::impls::<impl std::ops::FnOnce<()> for &dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>::call_once` at /home/alice/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:259:13\r\n     = note: inside `std::panicking::r#try::do_call::<&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe, i32>` at /home/alice/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:379:40\r\n     = note: inside `std::panicking::r#try::<i32, &dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>` at /home/alice/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:343:19\r\n     = note: inside `std::panic::catch_unwind::<&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe, i32>` at /home/alice/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panic.rs:396:14\r\n     = note: inside `std::rt::lang_start_internal` at /home/alice/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/rt.rs:51:25\r\n     = note: inside `std::rt::lang_start::<()>` at /home/alice/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/rt.rs:65:5\r\n```\r\n\r\n</details>\r\n\r\nArguably it is also incorrect even when called with `a != b` since creating the second raw pointer involves first creating a mutable reference to the entire slice, asserting exclusive access to the entire slice. However, miri does not fail in this case.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80682/timeline", "performed_via_github_app": null, "state_reason": "completed"}