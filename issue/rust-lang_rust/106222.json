{"url": "https://api.github.com/repos/rust-lang/rust/issues/106222", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/106222/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/106222/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/106222/events", "html_url": "https://github.com/rust-lang/rust/issues/106222", "id": 1512996084, "node_id": "I_kwDOAAsO6M5aLnz0", "number": 106222, "title": "google.github.io/comprehensive-rust thread 'main' panicked at 'index out of bounds: the len is 3 but the index is 3'", "user": {"login": "LLyaudet", "id": 4527928, "node_id": "MDQ6VXNlcjQ1Mjc5Mjg=", "avatar_url": "https://avatars.githubusercontent.com/u/4527928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LLyaudet", "html_url": "https://github.com/LLyaudet", "followers_url": "https://api.github.com/users/LLyaudet/followers", "following_url": "https://api.github.com/users/LLyaudet/following{/other_user}", "gists_url": "https://api.github.com/users/LLyaudet/gists{/gist_id}", "starred_url": "https://api.github.com/users/LLyaudet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LLyaudet/subscriptions", "organizations_url": "https://api.github.com/users/LLyaudet/orgs", "repos_url": "https://api.github.com/users/LLyaudet/repos", "events_url": "https://api.github.com/users/LLyaudet/events{/privacy}", "received_events_url": "https://api.github.com/users/LLyaudet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-12-28T17:15:30Z", "updated_at": "2023-03-27T19:19:44Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI tried this code:\r\n\r\n```rust\r\nfn main() {\r\n    let array = [10, 20, 30];\r\n    print!(\"Iterating over array:\");\r\n    for n in array {\r\n        print!(\" {n}\");\r\n    }\r\n    println!();\r\n\r\n    print!(\"Iterating over range:\");\r\n    for i in 0..4 {\r\n        print!(\" {}\", array[i]);\r\n    }\r\n    println!();\r\n}\r\n```\r\n\r\nwhich is a one digit modification of the exercise there : https://google.github.io/comprehensive-rust/exercises/day-1/for-loops.html\r\n\r\nI expected to see this happen:\r\na nice compiler error at time of build\r\n\r\nInstead, this happened:\r\na nice crash report at execution\r\n   Compiling playground v0.0.1 (/playground)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 1.17s\r\n     Running `target/debug/playground`\r\nthread 'main' panicked at 'index out of bounds: the len is 3 but the index is 3', src/main.rs:11:23\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\nIterating over array: 10 20 30\r\nIterating over range: 10 20 30\r\n\r\nSince there is no conditional at all between creation of array and loop definition,\r\nI thought Rust would catch it.\r\n(Well, technically there may be conditionals in print macros.)\r\nI did it first on the website but I reproduced directly on my machine,\r\nand here are the outputs from my machine.\r\n\r\n### Meta\r\n\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.61.0\r\nbinary: rustc\r\ncommit-hash: unknown\r\ncommit-date: unknown\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.61.0\r\nLLVM version: 14.0.6\r\n\r\n```\r\n\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nRUST_BACKTRACE=1 cargo run\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.02s\r\n     Running `target/debug/exercise`\r\nIterating over array: 10 20 30\r\nthread 'main' panicked at 'index out of bounds: the len is 3 but the index is 3', src/main.rs:11:23\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /build/rustc-zmPChZ/rustc-1.61.0+dfsg1/library/std/src/panicking.rs:584:5\r\n   1: core::panicking::panic_fmt\r\n             at /build/rustc-zmPChZ/rustc-1.61.0+dfsg1/library/core/src/panicking.rs:143:14\r\n   2: core::panicking::panic_bounds_check\r\n             at /build/rustc-zmPChZ/rustc-1.61.0+dfsg1/library/core/src/panicking.rs:84:5\r\n   3: exercise::main\r\n             at ./src/main.rs:11:23\r\n   4: core::ops::function::FnOnce::call_once\r\n             at /build/rustc-zmPChZ/rustc-1.61.0+dfsg1/library/core/src/ops/function.rs:227:5\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nIterating over range: 10 20 30\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/106222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/106222/timeline", "performed_via_github_app": null, "state_reason": null}