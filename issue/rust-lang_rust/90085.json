{"url": "https://api.github.com/repos/rust-lang/rust/issues/90085", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90085/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90085/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90085/events", "html_url": "https://github.com/rust-lang/rust/issues/90085", "id": 1030973656, "node_id": "I_kwDOAAsO6M49c2jY", "number": 90085, "title": "`impl FusedIterator for Cycle<I>` is incorrect ", "user": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 889209675, "node_id": "MDU6TGFiZWw4ODkyMDk2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-iterators", "name": "A-iterators", "color": "f7e101", "default": false, "description": "Area: Iterators"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-10-20T04:56:19Z", "updated_at": "2021-10-21T23:17:42Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code [on playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=91a3caafed82c5dd018c63c78cd3a4b0):\r\n\r\n```rust\r\n// Cycle implementation\r\n/*\r\n    fn next(&mut self) -> Option<<I as Iterator>::Item> {\r\n        match self.iter.next() {\r\n            None => {\r\n                self.iter = self.orig.clone();\r\n                self.iter.next()\r\n            }\r\n            y => y,\r\n        }\r\n    }\r\n*/\r\nuse std::iter::FusedIterator;\r\nuse std::rc::Rc;\r\nuse std::cell::Cell;\r\n\r\npub struct ErraticIterator(Rc<Cell<usize>>, Option<()>);\r\n\r\nimpl Clone for ErraticIterator {\r\n    fn clone(&self) -> ErraticIterator {\r\n        self.0.set(self.0.get() + 1);\r\n        \r\n        Self(self.0.clone(), Some(()))\r\n    }\r\n}\r\n\r\nimpl Iterator for ErraticIterator {\r\n    type Item = ();\r\n    \r\n    // Cycle behavior:\r\n    //\r\n    // Some(())\r\n    // None -> .clone() -> None\r\n    // Some(())\r\n    // None -> .clone() -> None\r\n    // ..\r\n    fn next(&mut self) -> Option<()> {\r\n        if self.0.get() % 2 == 0 {\r\n            self.1.take()\r\n        } else {\r\n            None\r\n        }\r\n    }\r\n}\r\n\r\npub fn fused_iter(it: &mut impl FusedIterator<Item = ()>) {\r\n    it.for_each(|()| {});\r\n    \r\n    assert!(it.next().is_none());\r\n}\r\n\r\nfn main() {\r\n    let it = ErraticIterator(Rc::new(Cell::new(0)), Some(()));\r\n    fused_iter(&mut it.cycle())\r\n}\r\n```\r\n\r\nI expected to see this happen: `Cycle<ErraticIterator>` should not be fuse thus compilation should fail.\r\n\r\nInstead, this happened: Cycle implements FusedIterator, so the assertion fails that should always pass for actually fused iterators.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90085/timeline", "performed_via_github_app": null, "state_reason": null}