{"url": "https://api.github.com/repos/rust-lang/rust/issues/109605", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/109605/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/109605/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/109605/events", "html_url": "https://github.com/rust-lang/rust/issues/109605", "id": 1640621177, "node_id": "I_kwDOAAsO6M5hyeR5", "number": 109605, "title": "Unable to satisfy associated type equality constraints (E0284) past a certain depth with multiple supertraits sharing a common supertrait", "user": {"login": "okready", "id": 423952, "node_id": "MDQ6VXNlcjQyMzk1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/423952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/okready", "html_url": "https://github.com/okready", "followers_url": "https://api.github.com/users/okready/followers", "following_url": "https://api.github.com/users/okready/following{/other_user}", "gists_url": "https://api.github.com/users/okready/gists{/gist_id}", "starred_url": "https://api.github.com/users/okready/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/okready/subscriptions", "organizations_url": "https://api.github.com/users/okready/orgs", "repos_url": "https://api.github.com/users/okready/repos", "events_url": "https://api.github.com/users/okready/events{/privacy}", "received_events_url": "https://api.github.com/users/okready/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-03-25T18:46:19Z", "updated_at": "2023-04-05T17:23:21Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a hierarchy of traits, where the super-most trait has some associated type that the sub-traits in the hierarchy apply additional trait constraints to. In lieu of using associated type bounds (or any unstable features), I'm declaring an associated type in each sub-trait with the appropriate trait constraints and applying an equality constraint between each supertrait associated type and the sub-trait's associated type, e.g.:\r\n\r\n```rust\r\ntrait BaseTrait {\r\n    type AssocBase;\r\n}\r\n\r\ntrait Foo {}\r\ntrait SubTrait: BaseTrait<AssocBase = Self::AssocSub> {\r\n    type AssocSub: Foo;\r\n}\r\n```\r\n\r\nThis has worked fine under most circumstances where a sub-trait only has one supertrait from the hierarchy, but fails to compile when a sub-trait has multiple supertraits that share a common base, where that base in turn has yet another parent in the hierarchy.\r\n\r\nI tried [this code](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=f2156eee8cb56e4f8fe2e193f23092ad) (minimal repro I could construct, with associated type trait constraints omitted as they don't seem to affect the results):\r\n\r\n```rust\r\npub trait BaseTrait {\r\n    type AssocBase;\r\n}\r\n\r\npub trait MiddleTrait: BaseTrait<AssocBase = Self::AssocMiddle> {\r\n    type AssocMiddle;\r\n}\r\n\r\npub trait SubTraitA: MiddleTrait<AssocMiddle = Self::AssocSubA> {\r\n    type AssocSubA;\r\n}\r\n\r\npub trait SubTraitB: MiddleTrait<AssocMiddle = Self::AssocSubB> {\r\n    type AssocSubB;\r\n}\r\n\r\npub trait CombinedTrait:\r\n    SubTraitA<AssocSubA = Self::AssocCombined> + SubTraitB<AssocSubB = Self::AssocCombined>\r\n{\r\n    type AssocCombined;\r\n}\r\n```\r\n\r\nI expected to see this happen: Successful compilation.\r\n\r\nInstead, this happened:\r\n\r\n```\r\nCompiling playground v0.0.1 (/playground)\r\nerror[[E0284]](https://doc.rust-lang.org/nightly/error_codes/E0284.html): type annotations needed\r\n  --> src/lib.rs:17:1\r\n   |\r\n17 | / pub trait CombinedTrait:\r\n18 | |     SubTraitA<AssocSubA = Self::AssocCombined> + SubTraitB<AssocSubB = Self::AssocCombined>\r\n   | |___________________________________________________________________________________________^ cannot infer type\r\n   |\r\n   = note: cannot satisfy `<Self as MiddleTrait>::AssocMiddle == _`\r\n\r\nerror[[E0284]](https://doc.rust-lang.org/nightly/error_codes/E0284.html): type annotations needed: cannot satisfy `<Self as MiddleTrait>::AssocMiddle == <Self as CombinedTrait>::AssocCombined`\r\n  --> src/lib.rs:18:5\r\n   |\r\n18 |     SubTraitA<AssocSubA = Self::AssocCombined> + SubTraitB<AssocSubB = Self::AssocCombined>\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot satisfy `<Self as MiddleTrait>::AssocMiddle == <Self as CombinedTrait>::AssocCombined`\r\n   |\r\nnote: required by a bound in `SubTraitA`\r\n  --> src/lib.rs:9:34\r\n   |\r\n9  | pub trait SubTraitA: MiddleTrait<AssocMiddle = Self::AssocSubA> {\r\n   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `SubTraitA`\r\n\r\nerror[[E0284]](https://doc.rust-lang.org/nightly/error_codes/E0284.html): type annotations needed\r\n  --> src/lib.rs:20:5\r\n   |\r\n20 |     type AssocCombined;\r\n   |     ^^^^^^^^^^^^^^^^^^ cannot infer type\r\n   |\r\n   = note: cannot satisfy `<Self as MiddleTrait>::AssocMiddle == _`\r\n\r\nFor more information about this error, try `rustc --explain E0284`.\r\nerror: could not compile `playground` (lib) due to 3 previous errors\r\n```\r\n\r\nAdding [explicit equality constraints on `AssocBase` and `AssocMiddle`](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=3e179e3074e902824bb37c30ed15b4ec) to all applicable traits does not resolve the issue, but [removing `BaseTrait` from the hierarchy](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=26ae392036d3754a8c1c28790d972618) does compile successfully.\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.70.0-nightly (8be3c2bda 2023-03-24)\r\nbinary: rustc\r\ncommit-hash: 8be3c2bda6b683f87b24714ba595e8b04faef54c\r\ncommit-date: 2023-03-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.70.0-nightly\r\nLLVM version: 15.0.7\r\n```\r\n(Also tested with 1.68.1 stable.)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/109605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/109605/timeline", "performed_via_github_app": null, "state_reason": null}