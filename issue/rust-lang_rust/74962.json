{"url": "https://api.github.com/repos/rust-lang/rust/issues/74962", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74962/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74962/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74962/events", "html_url": "https://github.com/rust-lang/rust/issues/74962", "id": 669243814, "node_id": "MDU6SXNzdWU2NjkyNDM4MTQ=", "number": 74962, "title": "Is RawVec still necessary?", "user": {"login": "Plecra", "id": 60934058, "node_id": "MDQ6VXNlcjYwOTM0MDU4", "avatar_url": "https://avatars.githubusercontent.com/u/60934058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Plecra", "html_url": "https://github.com/Plecra", "followers_url": "https://api.github.com/users/Plecra/followers", "following_url": "https://api.github.com/users/Plecra/following{/other_user}", "gists_url": "https://api.github.com/users/Plecra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Plecra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Plecra/subscriptions", "organizations_url": "https://api.github.com/users/Plecra/orgs", "repos_url": "https://api.github.com/users/Plecra/repos", "events_url": "https://api.github.com/users/Plecra/events{/privacy}", "received_events_url": "https://api.github.com/users/Plecra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-30T22:18:40Z", "updated_at": "2020-07-31T18:12:17Z", "closed_at": "2020-07-31T18:12:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "While reading the implementation of RawVec, I was struggling to distinguish it from a `Box<[MaybeUninit<T>]>`. Is there a significant difference in the API?\r\n\r\nI ask because, if they are interchangeable, I think writing the implementations based on `Box` would be worthwhile:\r\n\r\n- I'd expect it to reduce the `unsafe` code in `Vec` etc.\r\n- It'd also make the code much more readable. By using the types to express the combination of properties `RawVec` has, readers are given pointers to help understand what the type is achieving (allocating (`Box`) uninitialized memory (`MaybeUninit`) with a runtime length (`[T]`))", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74962/timeline", "performed_via_github_app": null, "state_reason": "completed"}