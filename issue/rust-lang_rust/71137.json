{"url": "https://api.github.com/repos/rust-lang/rust/issues/71137", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71137/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71137/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71137/events", "html_url": "https://github.com/rust-lang/rust/issues/71137", "id": 599697327, "node_id": "MDU6SXNzdWU1OTk2OTczMjc=", "number": 71137, "title": "Improve await error messaging for trait obligations", "user": {"login": "rokob", "id": 831355, "node_id": "MDQ6VXNlcjgzMTM1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/831355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rokob", "html_url": "https://github.com/rokob", "followers_url": "https://api.github.com/users/rokob/followers", "following_url": "https://api.github.com/users/rokob/following{/other_user}", "gists_url": "https://api.github.com/users/rokob/gists{/gist_id}", "starred_url": "https://api.github.com/users/rokob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rokob/subscriptions", "organizations_url": "https://api.github.com/users/rokob/orgs", "repos_url": "https://api.github.com/users/rokob/repos", "events_url": "https://api.github.com/users/rokob/events{/privacy}", "received_events_url": "https://api.github.com/users/rokob/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}], "state": "closed", "locked": false, "assignee": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-04-14T16:22:26Z", "updated_at": "2020-04-22T14:39:30Z", "closed_at": "2020-04-22T14:39:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\nuse std::future::Future;\r\nuse std::sync::Mutex;\r\n\r\nfn fake_spawn<F: Future + Send + 'static>(f: F) { }\r\n\r\nasync fn wrong_mutex() {\r\n  let m = Mutex::new(1);\r\n  {\r\n    let mut guard = m.lock().unwrap();\r\n    (async { \"right\"; }).await;\r\n    *guard += 1;\r\n  }\r\n\r\n  (async { \"wrong\"; }).await;\r\n}\r\n\r\nfn main() {\r\n  fake_spawn(wrong_mutex());\r\n}\r\n\r\n```\r\n\r\nI expected to see this happen:\r\n\r\n```\r\nerror: future cannot be sent between threads safely\r\n  --> src/main.rs:18:3\r\n   |\r\n4  | fn fake_spawn<F: Future + Send + 'static>(f: F) { }\r\n   |    ----------             ---- required by this bound in `fake_spawn`\r\n...\r\n18 |   fake_spawn(wrong_mutex());\r\n   |   ^^^^^^^^^^ future returned by `wrong_mutex` is not `Send`\r\n   |\r\n   = help: within `impl std::future::Future`, the trait `std::marker::Send` is not implemented for `std::sync::MutexGuard<'_, i32>`\r\nnote: future is not `Send` as this value is used across an await\r\n  --> src/main.rs:14:3\r\n   |\r\n9  |     let mut guard = m.lock().unwrap();\r\n   |         --------- has type `std::sync::MutexGuard<'_, i32>`\r\n...\r\n12 |   }\r\n   |   - `mut guard` is later dropped here\r\n9  |     let mut guard = m.lock().unwrap();\r\n10 |   (async { \"right\"; }).await;\r\n   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^ await occurs here, with `mut guard` maybe used later\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nInstead, this happened:\r\n\r\n```\r\nerror: future cannot be sent between threads safely\r\n  --> src/main.rs:18:3\r\n   |\r\n4  | fn fake_spawn<F: Future + Send + 'static>(f: F) { }\r\n   |    ----------             ---- required by this bound in `fake_spawn`\r\n...\r\n18 |   fake_spawn(wrong_mutex());\r\n   |   ^^^^^^^^^^ future returned by `wrong_mutex` is not `Send`\r\n   |\r\n   = help: within `impl std::future::Future`, the trait `std::marker::Send` is not implemented for `std::sync::MutexGuard<'_, i32>`\r\nnote: future is not `Send` as this value is used across an await\r\n  --> src/main.rs:14:3\r\n   |\r\n9  |     let mut guard = m.lock().unwrap();\r\n   |         --------- has type `std::sync::MutexGuard<'_, i32>`\r\n...\r\n12 |   }\r\n   |   - `mut guard` is later dropped here\r\n13 |\r\n14 |   (async { \"wrong\"; }).await;\r\n   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^ await occurs here, with `mut guard` maybe used later\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nNote that the await pointed to be the error message is wrong.\r\n\r\nThe code that gets the span for the await is here https://github.com/rust-lang/rust/blob/32fb4dcdd7a57683a639a0959442711d0fd123bc/src/librustc_trait_selection/traits/error_reporting/suggestions.rs#L1340. The last span in generator_interior_types is not guaranteed to be the right await point.\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.42.0 (b8cedc004 2020-03-09)\r\nbinary: rustc\r\ncommit-hash: b8cedc00407a4c56a3bda1ed605c6fc166655447\r\ncommit-date: 2020-03-09\r\nhost: x86_64-apple-darwin\r\nrelease: 1.42.0\r\nLLVM version: 9.0\r\n```\r\n\r\nI also see the same behaviour with:\r\n\r\n```\r\nrustc 1.44.0-nightly (6dee5f112 2020-04-06)\r\nbinary: rustc\r\ncommit-hash: 6dee5f1126dfd5c9314ee5ae9d9eb010e35ef257\r\ncommit-date: 2020-04-06\r\nhost: x86_64-apple-darwin\r\nrelease: 1.44.0-nightly\r\nLLVM version: 9.0\r\n```\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71137/timeline", "performed_via_github_app": null, "state_reason": "completed"}