{"url": "https://api.github.com/repos/rust-lang/rust/issues/80051", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80051/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80051/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80051/events", "html_url": "https://github.com/rust-lang/rust/issues/80051", "id": 767468065, "node_id": "MDU6SXNzdWU3Njc0NjgwNjU=", "number": 80051, "title": "[ER] std::mem::array_len", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-12-15T11:03:24Z", "updated_at": "2020-12-18T00:43:42Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "This is an Enhancement Request, I'd like this since years. I'd like a const function (like `std::mem::size_of`) that given an array returns its length:\r\n\r\n```rust\r\nfn main() {\r\n    use std::mem::array_len;\r\n    let a = [0_u32; 10];\r\n    let b = [0; array_len::<&a>()];\r\n}\r\n```\r\n\r\nNote that in this code the array 'a' isn't a const, otherwise this suffices:\r\n\r\n```rust\r\nconst fn array_len<T, const N: usize>(_: &[T; N]) -> usize { N }\r\n```\r\n\r\nThe purporse of array_len is to avoid defining a third usize constant LEN when you only want two arrays to have the same length and you want DRY code.\r\n\r\nIn D language you don't need such special function because the normal `.length` attribute of arrays and vectors is usable in a constant context too:\r\n\r\n```d\r\nvoid main() {\r\n    int[5] a; // An array with length fixed at compile-time, like a Rust array.\r\n    int[a.length] b; // Another one.\r\n}\r\n```\r\n\r\nBut I think we can't have `array::len` const in Rust.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80051/timeline", "performed_via_github_app": null, "state_reason": null}