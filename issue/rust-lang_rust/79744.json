{"url": "https://api.github.com/repos/rust-lang/rust/issues/79744", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79744/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79744/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79744/events", "html_url": "https://github.com/rust-lang/rust/issues/79744", "id": 757764513, "node_id": "MDU6SXNzdWU3NTc3NjQ1MTM=", "number": 79744, "title": "`overflowing_literals` error is confusing because of type inference", "user": {"login": "shreepads", "id": 12682170, "node_id": "MDQ6VXNlcjEyNjgyMTcw", "avatar_url": "https://avatars.githubusercontent.com/u/12682170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shreepads", "html_url": "https://github.com/shreepads", "followers_url": "https://api.github.com/users/shreepads/followers", "following_url": "https://api.github.com/users/shreepads/following{/other_user}", "gists_url": "https://api.github.com/users/shreepads/gists{/gist_id}", "starred_url": "https://api.github.com/users/shreepads/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shreepads/subscriptions", "organizations_url": "https://api.github.com/users/shreepads/orgs", "repos_url": "https://api.github.com/users/shreepads/repos", "events_url": "https://api.github.com/users/shreepads/events{/privacy}", "received_events_url": "https://api.github.com/users/shreepads/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 419557634, "node_id": "MDU6TGFiZWw0MTk1NTc2MzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-medium", "name": "E-medium", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Medium / intermediate"}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}], "state": "closed", "locked": false, "assignee": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2020-12-05T19:30:15Z", "updated_at": "2021-02-17T22:37:45Z", "closed_at": "2021-02-17T22:37:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nWhile experimenting with the Rust By Example playground on the Inference section at https://doc.rust-lang.org/stable/rust-by-example/types/inference.html I came across what I believe is an error in the error produced by the compiler.\r\n\r\nI do not expect this example to work but the error `literal out of range for 'i8'` is reported against line 4 `let e2 = 230;` which is a perfectly valid statement. The problem is lower down where two different types are pushed onto the same Vector but possibly due to the way the inference engine works this is being incorrectly reported against line 4. If I comment out the line `vec.push(e2);`, the example works fine, apart from a `warning: unused variable: 'e2'`.\r\n\r\n### Code\r\n\r\n```Rust\r\nfn main() {\r\n    // Because of the annotation, the compiler knows that `elem` has type i8.\r\n    let elem = 6i8;\r\n    let e2 = 230;\r\n\r\n    // Create an empty vector (a growable array).\r\n    let mut vec = Vec::new();\r\n    // At this point the compiler doesn't know the exact type of `vec`, it\r\n    // just knows that it's a vector of something (`Vec<_>`).\r\n\r\n    // Insert `elem` in the vector.\r\n    vec.push(e2);\r\n    vec.push(elem);\r\n    // Aha! Now the compiler knows that `vec` is a vector of `u8`s (`Vec<u8>`)\r\n    // TODO ^ Try commenting out the `vec.push(elem)` line\r\n\r\n    println!(\"{:?}\", vec);\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`: I am unable to determine the exact compiler version in the Rust By Example playground. I have run the same example on my Fedora 32 Workstation machine and with the same result. The rustc version details for this machine are as follows\r\n```\r\nrustc 1.48.0\r\nbinary: rustc\r\ncommit-hash: unknown\r\ncommit-date: unknown\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.48.0\r\nLLVM version: 10.0\r\n\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror: literal out of range for `i8`\r\n --> src/main.rs:4:14\r\n  |\r\n4 |     let e2 = 230;\r\n  |              ^^^\r\n  |\r\n  = note: `#[deny(overflowing_literals)]` on by default\r\n  = note: the literal `230` does not fit into the type `i8` whose range is `-128..=127`\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\nSorry I don't know exactly how to provide this.\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79744/timeline", "performed_via_github_app": null, "state_reason": "completed"}