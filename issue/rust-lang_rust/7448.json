{"url": "https://api.github.com/repos/rust-lang/rust/issues/7448", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/7448/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/7448/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/7448/events", "html_url": "https://github.com/rust-lang/rust/issues/7448", "id": 16129724, "node_id": "MDU6SXNzdWUxNjEyOTcyNA==", "number": 7448, "title": "Borrowing &mut multiple times in fn argument list fails, although the borrows do not overlap.", "user": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-06-28T07:09:03Z", "updated_at": "2013-07-03T15:59:24Z", "closed_at": "2013-07-03T15:59:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I recently had a case where a function needed an argument prepared by another function. Both functions take the same `&mut` (they both update a cache reachable through that reference). However, I had to pull the argument preparation call out of the argument list to avoid a `cannot borrow ... as mutable more than once at a time` error. Here is a minimal test case:\n\n```\nfn g(x: &mut int) -> int {\n    *x\n}\n\nfn f(x: &mut int, y: int) {\n    *x += y;\n}\n\nfn main() {\n    let mut a = 1;\n\n    // This works:\n    let tmp = g(&mut a);\n    f(&mut a, tmp);\n\n    // This is essentially the same, but fails the borrow check\n    f(&mut a, g(&mut a));\n}\n```\n\nMaybe I'm overlooking something here, but I think the second call should work too, as the ref borrowed by `g()` is returned before it is borrowed by `f()`.\n", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/7448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/7448/timeline", "performed_via_github_app": null, "state_reason": "completed"}