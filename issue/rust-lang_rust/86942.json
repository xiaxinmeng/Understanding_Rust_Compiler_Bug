{"url": "https://api.github.com/repos/rust-lang/rust/issues/86942", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86942/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86942/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86942/events", "html_url": "https://github.com/rust-lang/rust/issues/86942", "id": 938998734, "node_id": "MDU6SXNzdWU5Mzg5OTg3MzQ=", "number": 86942, "title": "Tracking Issue for `more_fallible_allocation_methods`", "user": {"login": "Ericson2314", "id": 1055245, "node_id": "MDQ6VXNlcjEwNTUyNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1055245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ericson2314", "html_url": "https://github.com/Ericson2314", "followers_url": "https://api.github.com/users/Ericson2314/followers", "following_url": "https://api.github.com/users/Ericson2314/following{/other_user}", "gists_url": "https://api.github.com/users/Ericson2314/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ericson2314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ericson2314/subscriptions", "organizations_url": "https://api.github.com/users/Ericson2314/orgs", "repos_url": "https://api.github.com/users/Ericson2314/repos", "events_url": "https://api.github.com/users/Ericson2314/events{/privacy}", "received_events_url": "https://api.github.com/users/Ericson2314/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-07-07T15:13:57Z", "updated_at": "2022-04-17T05:02:59Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Feature gate: `#![feature(more_fallible_allocation_methods)]`\r\n\r\nThis is a tracking issue for adding more fallible allocation methods, i.e. ones where allocation failure will return `Err(_)` rather than calling some diverging global handler.\r\n\r\nIt overlaps a bit with #32838, since the most general methods will be fallible and allocator-agnostic.\r\n\r\n### Public API\r\n\r\nBasically, all the methods in the `alloc` crate that begin with `try_`. Perhaps others in `std` someday.\r\n\r\n### Steps / History\r\n\r\n- [ ] Implementation:\r\n  - ~~#86938~~ https://github.com/rust-lang/rust/pull/95051\r\n  - more to come probably\r\n  - Might consider removing less general methods that are unstable, such as `RawVec`'s, to avoid combinatorial explosion.\r\n- [ ] Final comment period (FCP)\r\n- [ ] Stabilization PR\r\n\r\n### Unresolved Questions\r\n\r\n- Iteration with no_global_oom_handling adding in https://github.com/rust-lang/rust/pull/84266, proposed to be turned to a feature in https://github.com/rust-lang/rfcs/pull/3140\r\n\r\n- Put methods on other type / in other location to avoid `try_` prefix (which is sort of an ad-hoc namespacing trick).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86942/timeline", "performed_via_github_app": null, "state_reason": null}