{"url": "https://api.github.com/repos/rust-lang/rust/issues/72274", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72274/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72274/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72274/events", "html_url": "https://github.com/rust-lang/rust/issues/72274", "id": 619517401, "node_id": "MDU6SXNzdWU2MTk1MTc0MDE=", "number": 72274, "title": "Distribute libc.a as a separate library instead of bundling it into liblibc.rlib on musl and wasi", "user": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 474645165, "node_id": "MDU6TGFiZWw0NzQ2NDUxNjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-wasm", "name": "O-wasm", "color": "6e6ec0", "default": false, "description": "Target: WASM (WebAssembly), http://webassembly.org/"}, {"id": 630662867, "node_id": "MDU6TGFiZWw2MzA2NjI4Njc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-musl", "name": "O-musl", "color": "6e6ec0", "default": false, "description": "Target: The musl libc"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2020-05-16T17:11:39Z", "updated_at": "2023-02-15T13:41:11Z", "closed_at": "2023-02-15T13:40:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Right now the libc crate links native libc with `#[link(kind = \"static\")]` for two targets - musl and wasi.\r\n\r\n`kind = \"static\"` means that object files from native libc.a are bundled into liblibc.rlib and distributed with rustc toolchain in this form.\r\nThen if user builds something with `+crt-static` then the bundled object files are used, and if user builds with `-crt-static` then they are \"unbundled\" and dynamic linking with libc.so available at user site happens.\r\n\r\nExperience with windows-gnu targets (https://github.com/rust-lang/rust/pull/67429) and porting rust to musl-native targets (https://github.com/rust-lang/rust/pull/40113) showed that it's strongly preferable to use the native toolchain available at user site to using anything bundled with rustc toolchain, and that includes libc.a as well.\r\n\r\nAt the same time rustc historically provides more \"self-contained\" experience for selected targets (windows-gnu, musl, wasm), so we must continue shipping libc.a in some form in case the user *doesn't* have a native toolchain available.\r\n\r\nThat we means we need to *fall back* from using the native toolchain if it's available to using bundled libc.a (and other libraries) if it's not.\r\nSuch scheme is already used relatively successfully for windows-gnu, but not for musl and wasi.\r\n\r\nSo, the plan of the work should be roughly like this:\r\n- [x] Link libc as `kind = \"static-nobundle\"` instead of `kind = \"static\"` in the libc crate (https://github.com/rust-lang/libc/pull/1327).\r\n- [x] Modify rustbuild to distribute libc.a for musl (and whatever is its equivalent for wasi) similarly to how we distribute crt1.o objects for the same targets.\r\n- [x] Organize library search directories during linking in such way that they find the native toolchain first and then fall back to the rust toolchain's sysroot where the bundled libc.a resides (should be similar to https://github.com/rust-lang/rust/pull/67429).\r\n- [x] Eliminate the \"unbundling\" logic from the compiler.\r\n\r\nOnce this is done https://github.com/rust-lang/rust/issues/65760 should become fixed as well.\r\n\r\nUPD: libunwind (https://github.com/rust-lang/rust/tree/master/src/libunwind) on musl also bundles `libunwind.a`, it should probably have the same treatment.\r\n\r\ncc @hvenev @gnzlbg @alexcrichton @mati865 @smaeul", "closed_by": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72274/reactions", "total_count": 8, "+1": 8, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72274/timeline", "performed_via_github_app": null, "state_reason": "completed"}