{"url": "https://api.github.com/repos/rust-lang/rust/issues/67945", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67945/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67945/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67945/events", "html_url": "https://github.com/rust-lang/rust/issues/67945", "id": 545849555, "node_id": "MDU6SXNzdWU1NDU4NDk1NTU=", "number": 67945, "title": "ICE: index out of bounds: the len is 0 but the index is 0", "user": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1405345617, "node_id": "MDU6TGFiZWwxNDA1MzQ1NjE3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lazy-normalization", "name": "A-lazy-normalization", "color": "f7e101", "default": false, "description": "Area: lazy normalization (tracking issue: #60471)"}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 2345070748, "node_id": "MDU6TGFiZWwyMzQ1MDcwNzQ4", "url": "https://api.github.com/repos/rust-lang/rust/labels/const-generics-fixed-by-const_generics", "name": "const-generics-fixed-by-const_generics", "color": "3f5dca", "default": false, "description": "A bug that has been fixed once `const_generics` is enabled."}, {"id": 2392976201, "node_id": "MDU6TGFiZWwyMzkyOTc2MjAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/const-generics-fixed-by-min_const_generics", "name": "const-generics-fixed-by-min_const_generics", "color": "3f5dca", "default": false, "description": "A bug that has been fixed once `min_const_generics` is enabled."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2020-01-06T17:39:16Z", "updated_at": "2022-06-13T22:17:22Z", "closed_at": "2022-06-13T22:17:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following ICE's on nightly and beta:\r\n\r\n```Rust\r\nuse std::marker::PhantomData;\r\n\r\nuse std::mem::{self, MaybeUninit};\r\n\r\nstruct Bug<S> {\r\n    A: [(); {\r\n        let x: S = MaybeUninit::uninit();\r\n        let b = &*(&x as *const _ as *const S);\r\n        0\r\n    }],\r\n}\r\n```\r\n\r\n<details>\r\n<summary>Backtrace:</summary>\r\n\r\n```\r\nthread 'rustc' panicked at 'index out of bounds: the len is 0 but the index is 0', /rustc/da3629b05f8f1b425a738bfe9fe9aedd47c5417a/src/libcore/slice/mod.rs:2791:10\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:77\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1057\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1426\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:195\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:215\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:476\r\n  12: rust_begin_unwind\r\n             at src/libstd/panicking.rs:376\r\n  13: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:84\r\n  14: core::panicking::panic_bounds_check\r\n             at src/libcore/panicking.rs:62\r\n  15: rustc::ty::Generics::type_param\r\n  16: rustc::ty::error::<impl rustc::ty::context::TyCtxt>::note_and_explain_type_err\r\n  17: rustc::infer::error_reporting::<impl rustc::infer::InferCtxt>::note_type_err\r\n  18: rustc::infer::error_reporting::<impl rustc::infer::InferCtxt>::report_and_explain_type_error\r\n  19: rustc::infer::InferCtxt::report_mismatched_types\r\n  20: rustc_typeck::check::demand::<impl rustc_typeck::check::FnCtxt>::demand_coerce_diag\r\n  21: rustc_typeck::check::demand::<impl rustc_typeck::check::FnCtxt>::demand_coerce\r\n  22: rustc_typeck::check::FnCtxt::check_decl_local\r\n  23: rustc_typeck::check::FnCtxt::check_stmt\r\n  24: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  25: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  26: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  27: rustc::ty::context::tls::with_context::{{closure}}\r\n  28: rustc_typeck::check::typeck_tables_of\r\n  29: rustc::ty::query::__query_compute::typeck_tables_of\r\n  30: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_tables_of>::compute\r\n  31: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  32: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  33: rustc_mir::const_eval::eval_queries::const_eval_raw_provider\r\n  34: rustc::ty::query::__query_compute::const_eval_raw\r\n  35: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval_raw>::compute\r\n  36: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  37: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  38: rustc_mir::const_eval::eval_queries::const_eval_validated_provider\r\n  39: rustc::ty::query::__query_compute::const_eval_validated\r\n  40: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval_validated>::compute\r\n  41: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  42: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  43: rustc_mir::const_eval::eval_queries::const_eval_validated_provider\r\n  44: rustc::ty::query::__query_compute::const_eval_validated\r\n  45: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval_validated>::compute\r\n  46: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  47: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  48: rustc::mir::interpret::queries::<impl rustc::ty::context::TyCtxt>::const_eval_instance\r\n  49: rustc::ty::sty::Const::eval::{{closure}}\r\n  50: rustc::ty::sty::Const::eval\r\n  51: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable for &rustc::ty::TyS>::super_fold_with\r\n  52: <rustc::traits::project::AssocTypeNormalizer as rustc::ty::fold::TypeFolder>::fold_ty\r\n  53: rustc::traits::project::normalize\r\n  54: rustc_typeck::check::FnCtxt::normalize_associated_types_in\r\n  55: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold\r\n  56: rustc::ty::context::GlobalCtxt::enter_local\r\n  57: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  58: rustc::ty::query::__query_compute::check_item_well_formed\r\n  59: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::check_item_well_formed>::compute\r\n  60: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  61: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  62: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::ensure_query\r\n  63: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:79\r\n  64: rustc_data_structures::sync::par_for_each_in\r\n  65: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:79\r\n  66: rustc::hir::Crate::par_visit_all_item_likes\r\n  67: rustc::util::common::time\r\n  68: rustc_typeck::check_crate\r\n  69: rustc_interface::passes::analysis\r\n  70: rustc::ty::query::__query_compute::analysis\r\n  71: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  72: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  73: rustc::ty::context::tls::enter_global\r\n  74: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  75: scoped_tls::ScopedKey<T>::set\r\n  76: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.42.0-nightly (da3629b05 2019-12-29) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck_tables_of] processing `Bug::A::{{constant}}#0`\r\n#1 [const_eval_raw] const-evaluating `Bug::A::{{constant}}#0`\r\n#2 [const_eval_validated] const-evaluating + checking `Bug::A::{{constant}}#0`\r\n#3 [const_eval_validated] const-evaluating + checking `Bug::A::{{constant}}#0`\r\n#4 [check_item_well_formed] processing `Bug`\r\n#5 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\n</details>", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67945/timeline", "performed_via_github_app": null, "state_reason": "completed"}