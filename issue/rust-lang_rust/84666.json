{"url": "https://api.github.com/repos/rust-lang/rust/issues/84666", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84666/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84666/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84666/events", "html_url": "https://github.com/rust-lang/rust/issues/84666", "id": 870190500, "node_id": "MDU6SXNzdWU4NzAxOTA1MDA=", "number": 84666, "title": "The `type_name` of tuple-structs and their ZST function item are the same", "user": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-04-28T17:37:08Z", "updated_at": "2021-06-04T07:10:55Z", "closed_at": "2021-06-04T07:10:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=f6fa0a5aa4d0a3d422c2db601a77c304\r\n\r\n```rust\r\nuse std::any::type_name;\r\n\r\nstruct Velocity(f32, f32);\r\n\r\nfn show_name<T>(_: T) {\r\n    dbg!(type_name::<T>());\r\n}\r\n\r\nfn main() {\r\n    show_name(Velocity);\r\n    show_name(Velocity(0.0, -9.8));\r\n}\r\n```\r\n\r\nI expected to see this happen:\r\nThe two names would be different, so that in logging I'd be able to notice I passed the wrong thing.\r\n\r\nInstead, this happened:\r\n```\r\n[src/main.rs:6] type_name::<T>() = \"playground::Velocity\"\r\n[src/main.rs:6] type_name::<T>() = \"playground::Velocity\"\r\n```\r\n\r\nContext:\r\nThis came up in the bevy discord server: https://discord.com/channels/691052431525675048/742884593551802431/836883497578397706\r\n\r\nIt allows you to put an instance of anything as a component on an entity, and get it back again later by type.  So passing in a `struct Marker;` instance is fine -- and useful for filtering -- but it can't tell the difference between *useful* ZSTs like that and *accidental* ZSTs like `Velocity` where they meant to pass `Velocity::new()`.  It would be nice for that to be at least available in debug logging, as a way to see what's available, but if that shows `\"Velocity\"` then it'd be particularly confusing when the \"give me a `::<Velocity>()`\" doesn't work.\r\n\r\nI'm not proposing any concrete string that this should return; it'd just be nice for it to be better distinguished.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84666/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84666/timeline", "performed_via_github_app": null, "state_reason": "completed"}