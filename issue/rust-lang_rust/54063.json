{"url": "https://api.github.com/repos/rust-lang/rust/issues/54063", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/54063/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/54063/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/54063/events", "html_url": "https://github.com/rust-lang/rust/issues/54063", "id": 358308967, "node_id": "MDU6SXNzdWUzNTgzMDg5Njc=", "number": 54063, "title": "How do I get a mut reference to a *mut c_char (FFI)?", "user": {"login": "crusty-dave", "id": 41089818, "node_id": "MDQ6VXNlcjQxMDg5ODE4", "avatar_url": "https://avatars.githubusercontent.com/u/41089818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crusty-dave", "html_url": "https://github.com/crusty-dave", "followers_url": "https://api.github.com/users/crusty-dave/followers", "following_url": "https://api.github.com/users/crusty-dave/following{/other_user}", "gists_url": "https://api.github.com/users/crusty-dave/gists{/gist_id}", "starred_url": "https://api.github.com/users/crusty-dave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crusty-dave/subscriptions", "organizations_url": "https://api.github.com/users/crusty-dave/orgs", "repos_url": "https://api.github.com/users/crusty-dave/repos", "events_url": "https://api.github.com/users/crusty-dave/events{/privacy}", "received_events_url": "https://api.github.com/users/crusty-dave/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-08T16:24:37Z", "updated_at": "2018-09-08T18:00:37Z", "closed_at": "2018-09-08T16:52:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am looking to do something like the following:\r\n\r\n```\r\n    pub unsafe fn validate_str_mut<'a>(str_ptr: *mut c_char, _str_max: usize) -> Result<(&'a mut [u8]), ()> {\r\n        if str_ptr.is_null() {\r\n            return Err(());\r\n        }\r\n        //  Make sure that we can convert from a C string\r\n        //  to a Rust &u8\r\n        let cur_str: &CStr = CStr::from_ptr(str_ptr);\r\n        let new_str: &mut [u8] = cur_str.to_bytes().as_mut();\r\n\r\n        Ok(new_str)\r\n    }\r\n```\r\nHowever, that returns the following error:\r\n\r\n```\r\nerror[E0596]: cannot borrow immutable borrowed content as mutable\r\n   --> jims_uri\\src\\lib.rs:499:34\r\n    |\r\n499 |         let new_str: &mut [u8] = cur_str.to_bytes().as_mut();\r\n    |                                  ^^^^^^^^^^^^^^^^^^ cannot borrow as mutable\r\n\r\n```\r\n\r\nI don't see a way to do anything like the following:\r\n\r\n`        let cur_str: &mut CStr = CStr::from_ptr(str_ptr);\r\n`\r\n\r\nThe intent is to allocate the memory in the C++ code, and simply allow Rust to populate it.  Ideally I could use _str_max to let Rust know the size so that it wouldn't exceed the allocation.\r\n\r\nI am starting to think that I will need to reverse the logic where I allocate the string in Rust, but then I need extra calls from C++ to deallocate it.\r\n\r\nNote that the following works for a const string\r\n\r\n```\r\n    pub unsafe fn validate_str<'a>(str_ptr: *const c_char) -> Result<(&'a [u8]), ()> {\r\n        if str_ptr.is_null() {\r\n            return Err(());\r\n        }\r\n        //  Make sure that we can convert the URI from a C string\r\n        //  to a Rust &str\r\n        let cur_str: &CStr = CStr::from_ptr(str_ptr);\r\n        let new_str = cur_str.to_bytes();\r\n\r\n        Ok(new_str)\r\n    }\r\n```\r\nAny advice is appreciated.\r\n\r\nThanks,\r\n-Dave\r\n", "closed_by": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/54063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/54063/timeline", "performed_via_github_app": null, "state_reason": "completed"}