{"url": "https://api.github.com/repos/rust-lang/rust/issues/43236", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43236/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43236/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43236/events", "html_url": "https://github.com/rust-lang/rust/issues/43236", "id": 242971783, "node_id": "MDU6SXNzdWUyNDI5NzE3ODM=", "number": 43236, "title": "Call clone on a reference may just clone the reference", "user": {"login": "BusyJay", "id": 1701473, "node_id": "MDQ6VXNlcjE3MDE0NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1701473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BusyJay", "html_url": "https://github.com/BusyJay", "followers_url": "https://api.github.com/users/BusyJay/followers", "following_url": "https://api.github.com/users/BusyJay/following{/other_user}", "gists_url": "https://api.github.com/users/BusyJay/gists{/gist_id}", "starred_url": "https://api.github.com/users/BusyJay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BusyJay/subscriptions", "organizations_url": "https://api.github.com/users/BusyJay/orgs", "repos_url": "https://api.github.com/users/BusyJay/repos", "events_url": "https://api.github.com/users/BusyJay/events{/privacy}", "received_events_url": "https://api.github.com/users/BusyJay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-14T11:30:12Z", "updated_at": "2017-07-19T16:23:27Z", "closed_at": "2017-07-19T16:23:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Considering following code:\r\n\r\n```\r\nuse std::sync::atomic::*;\r\n\r\n#[derive(Default)]\r\nstruct A {\r\n   counter: AtomicUsize,\r\n}\r\n\r\nimpl A {\r\n    fn clone(&self) -> Box<A> {\r\n        Box::new(A {\r\n            counter: AtomicUsize::new(self.counter.load(Ordering::SeqCst)),\r\n        })\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let a = Box::new(A::default());\r\n    let b = &a;\r\n    assert_eq!(a.counter.load(Ordering::SeqCst), 0);\r\n    a.clone().counter.fetch_add(1, Ordering::SeqCst);\r\n    assert_eq!(a.counter.load(Ordering::SeqCst), 0);\r\n    b.clone().counter.fetch_add(1, Ordering::SeqCst);\r\n    assert_eq!(a.counter.load(Ordering::SeqCst), 0);\r\n}\r\n```\r\n\r\n`b.clone` will just clone the reference, hence it will update a in place rather in a temporary copy, so the final assert will fail.\r\n\r\nOn one hand, I know that reference can be copied, hence it's reasonable to implement `Clone` too. But I think it will be quite easy to make the mistake and assume clone will return a new instance with deref and type inference enabled by default.\r\n\r\nOn the other hand, I'm only sure that reference implements Copy and Clone, but what else traits does it implement? And any other method does it provide by default? Can these methods lead to confusion too?", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43236/timeline", "performed_via_github_app": null, "state_reason": "completed"}