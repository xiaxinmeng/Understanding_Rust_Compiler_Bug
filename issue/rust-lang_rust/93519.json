{"url": "https://api.github.com/repos/rust-lang/rust/issues/93519", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93519/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93519/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93519/events", "html_url": "https://github.com/rust-lang/rust/issues/93519", "id": 1119886341, "node_id": "I_kwDOAAsO6M5CwBwF", "number": 93519, "title": "Opaque error message for opaque type", "user": {"login": "Geobert", "id": 72570, "node_id": "MDQ6VXNlcjcyNTcw", "avatar_url": "https://avatars.githubusercontent.com/u/72570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Geobert", "html_url": "https://github.com/Geobert", "followers_url": "https://api.github.com/users/Geobert/followers", "following_url": "https://api.github.com/users/Geobert/following{/other_user}", "gists_url": "https://api.github.com/users/Geobert/gists{/gist_id}", "starred_url": "https://api.github.com/users/Geobert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Geobert/subscriptions", "organizations_url": "https://api.github.com/users/Geobert/orgs", "repos_url": "https://api.github.com/users/Geobert/repos", "events_url": "https://api.github.com/users/Geobert/events{/privacy}", "received_events_url": "https://api.github.com/users/Geobert/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-01-31T20:14:20Z", "updated_at": "2022-06-20T07:02:58Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n[For this code](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=c1a7b6c97dd8eace89b04c5b6b2f1137)\r\n```rust\r\nuse anyhow;\r\n\r\nfn main() {}\r\n\r\ntrait MyTrait {}\r\n\r\nasync fn endpoint() -> anyhow::Result<impl MyTrait> {\r\n    if true {\r\n        call_a().await\r\n    } else {\r\n        call_b().await\r\n    }\r\n}\r\n\r\nasync fn call_a() -> anyhow::Result<impl MyTrait> {\r\n    todo!()\r\n}\r\n\r\nasync fn call_b() -> anyhow::Result<impl MyTrait> {\r\n    todo!()\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:11:9\r\n   |\r\n11 |         call_b().await\r\n   |         ^^^^^^^^^^^^^^ expected opaque type, found a different opaque type\r\n...\r\n15 | async fn call_a() -> anyhow::Result<impl MyTrait> {\r\n   |                                     ------------ the expected opaque type\r\n...\r\n19 | async fn call_b() -> anyhow::Result<impl MyTrait> {\r\n   |                                     ------------ the found opaque type\r\n   |\r\n   = note: expected enum `Result<impl MyTrait, _>` (opaque type at <src/main.rs:15:37>)\r\n              found enum `Result<impl MyTrait, _>` (opaque type at <src/main.rs:19:37>)\r\n   = note: distinct uses of `impl Trait` result in different opaque types\r\n\r\nerror[E0720]: cannot resolve opaque type\r\n  --> src/main.rs:15:37\r\n   |\r\n15 | async fn call_a() -> anyhow::Result<impl MyTrait> {\r\n   |                                     ^^^^^^^^^^^^ cannot resolve opaque type\r\n\r\nerror[E0720]: cannot resolve opaque type\r\n  --> src/main.rs:19:37\r\n   |\r\n19 | async fn call_b() -> anyhow::Result<impl MyTrait> {\r\n   |                                     ^^^^^^^^^^^^ cannot resolve opaque type\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=d937792ca9217c9556025f96e5574df9\r\n\r\nI was asked to create a ticket to improve the compiler when the Result type of a Future is an `impl Trait` after asking the question on the forum: https://users.rust-lang.org/t/another-distinct-uses-of-impl-trait-result-in-different-opaque-types/71136\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93519/timeline", "performed_via_github_app": null, "state_reason": null}