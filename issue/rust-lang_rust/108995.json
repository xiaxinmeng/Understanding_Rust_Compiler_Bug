{"url": "https://api.github.com/repos/rust-lang/rust/issues/108995", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108995/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108995/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108995/events", "html_url": "https://github.com/rust-lang/rust/issues/108995", "id": 1619410344, "node_id": "I_kwDOAAsO6M5ghj2o", "number": 108995, "title": "Inconsistent behavior of auto_traits+negative_impls across crates.", "user": {"login": "booti386", "id": 2191922, "node_id": "MDQ6VXNlcjIxOTE5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/2191922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/booti386", "html_url": "https://github.com/booti386", "followers_url": "https://api.github.com/users/booti386/followers", "following_url": "https://api.github.com/users/booti386/following{/other_user}", "gists_url": "https://api.github.com/users/booti386/gists{/gist_id}", "starred_url": "https://api.github.com/users/booti386/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/booti386/subscriptions", "organizations_url": "https://api.github.com/users/booti386/orgs", "repos_url": "https://api.github.com/users/booti386/repos", "events_url": "https://api.github.com/users/booti386/events{/privacy}", "received_events_url": "https://api.github.com/users/booti386/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1967303144, "node_id": "MDU6TGFiZWwxOTY3MzAzMTQ0", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-negative_impls", "name": "F-negative_impls", "color": "f9c0cc", "default": false, "description": "#![feature(negative_impls)]"}, {"id": 2543602342, "node_id": "MDU6TGFiZWwyNTQzNjAyMzQy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-auto_traits", "name": "F-auto_traits", "color": "f9c0cc", "default": false, "description": "`#![feature(auto_traits)]`"}, {"id": 3771326768, "node_id": "LA_kwDOAAsO6M7gyeEw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-auto-traits", "name": "A-auto-traits", "color": "f7e101", "default": false, "description": "Area: auto traits (`auto trait Send`)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-03-10T18:14:44Z", "updated_at": "2023-04-05T17:25:36Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n// Crate a\r\n\r\n#![feature(auto_traits)]\r\n#![feature(negative_impls)]\r\n\r\npub auto trait NotVoid {}\r\nimpl !NotVoid for () {}\r\n\r\npub trait A<I, O> {}\r\n\r\nimpl<T, I: NotVoid> A<I, ()> for T {}\r\nimpl<T, O: NotVoid> A<(), O> for T {} // OK\r\n\r\nuse b::ExternNotVoid;\r\n\r\npub trait B<I, O> {}\r\n\r\nimpl<T, I: ExternNotVoid> B<I, ()> for T {}\r\nimpl<T, O: ExternNotVoid> B<(), O> for T {} // Error\r\n```\r\n```rust\r\n// Crate b\r\n\r\n#![feature(auto_traits)]\r\n#![feature(negative_impls)]\r\n\r\npub auto trait ExternNotVoid {}\r\nimpl !ExternNotVoid for () {}\r\n```\r\n\r\nI expected to see this happen:\r\nIdentical behavior when `NotVoid` is declared in an external crate.\r\n\r\nInstead, this happened:\r\n```rust\r\nerror[E0119]: conflicting implementations of trait `B<(), ()>`\r\n  --> a.rs:19:1\r\n   |\r\n18 | impl<T, I: ExternNotVoid> B<I, ()> for T {} // Error\r\n   | ---------------------------------------- first implementation here\r\n19 | impl<T, O: ExternNotVoid> B<(), O> for T {} // Error\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0119`.\r\n```\r\nAn error is produced when `NotVoid` is declared in an external crate (`ExternNotVoid`).\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.70.0-nightly (e3dfeeaa4 2023-03-07)\r\nbinary: rustc\r\ncommit-hash: e3dfeeaa45f117281b19773d67f3f253de65cee1\r\ncommit-date: 2023-03-07\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.70.0-nightly\r\nLLVM version: 15.0.7\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108995/timeline", "performed_via_github_app": null, "state_reason": null}