{"url": "https://api.github.com/repos/rust-lang/rust/issues/84154", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84154/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84154/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84154/events", "html_url": "https://github.com/rust-lang/rust/issues/84154", "id": 856772448, "node_id": "MDU6SXNzdWU4NTY3NzI0NDg=", "number": 84154, "title": "Compiler Error : 'rustc' panicked at 'assertion failed: !self.substitutions.is_empty()', compiler/rustc_errors/src/lib.rs:192:9", "user": {"login": "diogo464", "id": 21161320, "node_id": "MDQ6VXNlcjIxMTYxMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/21161320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diogo464", "html_url": "https://github.com/diogo464", "followers_url": "https://api.github.com/users/diogo464/followers", "following_url": "https://api.github.com/users/diogo464/following{/other_user}", "gists_url": "https://api.github.com/users/diogo464/gists{/gist_id}", "starred_url": "https://api.github.com/users/diogo464/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diogo464/subscriptions", "organizations_url": "https://api.github.com/users/diogo464/orgs", "repos_url": "https://api.github.com/users/diogo464/repos", "events_url": "https://api.github.com/users/diogo464/events{/privacy}", "received_events_url": "https://api.github.com/users/diogo464/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-04-13T09:27:38Z", "updated_at": "2021-04-16T06:50:33Z", "closed_at": "2021-04-16T06:50:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nstruct Transform {\r\n    x: f32,\r\n    y: f32,\r\n}\r\n\r\nstruct SliceWrapper<'a, T>(&'a [T]);\r\nimpl<'a, T> SliceWrapper<'a, T> {\r\n    fn slice(&self) -> &[T] {\r\n        self.0\r\n    }\r\n}\r\n\r\nfn foo(transforms: SliceWrapper<Transform>) {\r\n    for t in transforms.slice() {\r\n        t.x += 1.0;\r\n    }\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\nThe error doesn't happen on stable 1.51.0 but happens on 1.52.0-beta.3 (2021-04-06 215738137bcbef2c3637) and nightly.\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.53.0-nightly (d0695c908 2021-04-12)\r\nbinary: rustc\r\ncommit-hash: d0695c9081b16077d0aed368bccaf437d77ff497\r\ncommit-date: 2021-04-12\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.53.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: !self.substitutions.is_empty()', compiler/rustc_errors/src/lib.rs:192:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (d0695c908 2021-04-12) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [mir_borrowck] borrow-checking `foo`\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: could not compile `compiler_bug`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Expected output, from stable</strong></summary>\r\n<p>\r\n\r\n```\r\nerror[E0594]: cannot assign to `t.x` which is behind a `&` reference\r\n  --> src/main.rs:15:9\r\n   |\r\n14 |     for t in transforms.slice() {\r\n   |              ------------------ this iterator yields `&` references\r\n15 |         t.x += 1.0;\r\n   |         ^^^^^^^^^^ `t` is a `&` reference, so the data it refers to cannot be written\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0594`.\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: !self.substitutions.is_empty()', compiler/rustc_errors/src/lib.rs:192:9\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/d0695c9081b16077d0aed368bccaf437d77ff497/library/std/src/panicking.rs:493:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/d0695c9081b16077d0aed368bccaf437d77ff497/library/core/src/panicking.rs:92:14\r\n   2: core::panicking::panic\r\n             at /rustc/d0695c9081b16077d0aed368bccaf437d77ff497/library/core/src/panicking.rs:50:5\r\n   3: rustc_errors::CodeSuggestion::splice_lines\r\n   4: <rustc_errors::emitter::EmitterWriter as rustc_errors::emitter::Emitter>::emit_diagnostic\r\n   5: rustc_errors::json::Diagnostic::from_errors_diagnostic\r\n   6: <rustc_errors::json::JsonEmitter as rustc_errors::emitter::Emitter>::emit_diagnostic\r\n   7: rustc_errors::HandlerInner::emit_diagnostic\r\n   8: rustc_errors::Handler::emit_diagnostic\r\n   9: rustc_mir::borrow_check::do_mir_borrowck\r\n  10: rustc_infer::infer::InferCtxtBuilder::enter\r\n  11: rustc_mir::borrow_check::mir_borrowck\r\n  12: core::ops::function::FnOnce::call_once\r\n  13: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  14: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  15: rustc_data_structures::stack::ensure_sufficient_stack\r\n  16: rustc_query_system::query::plumbing::force_query_with_job\r\n  17: rustc_query_system::query::plumbing::get_query_impl\r\n  18: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_borrowck\r\n  19: rustc_middle::ty::<impl rustc_middle::ty::context::TyCtxt>::par_body_owners\r\n  20: rustc_interface::passes::analysis\r\n  21: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  22: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  23: rustc_data_structures::stack::ensure_sufficient_stack\r\n  24: rustc_query_system::query::plumbing::force_query_with_job\r\n  25: rustc_query_system::query::plumbing::get_query_impl\r\n  26: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  27: rustc_interface::passes::QueryContext::enter\r\n  28: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  29: rustc_span::with_source_map\r\n  30: rustc_interface::interface::create_compiler_and_run\r\n  31: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (d0695c908 2021-04-12) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [mir_borrowck] borrow-checking `foo`\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: could not compile `compiler_bug`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"lolgeny\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "diogo464", "id": 21161320, "node_id": "MDQ6VXNlcjIxMTYxMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/21161320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diogo464", "html_url": "https://github.com/diogo464", "followers_url": "https://api.github.com/users/diogo464/followers", "following_url": "https://api.github.com/users/diogo464/following{/other_user}", "gists_url": "https://api.github.com/users/diogo464/gists{/gist_id}", "starred_url": "https://api.github.com/users/diogo464/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diogo464/subscriptions", "organizations_url": "https://api.github.com/users/diogo464/orgs", "repos_url": "https://api.github.com/users/diogo464/repos", "events_url": "https://api.github.com/users/diogo464/events{/privacy}", "received_events_url": "https://api.github.com/users/diogo464/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84154/timeline", "performed_via_github_app": null, "state_reason": "completed"}