{"url": "https://api.github.com/repos/rust-lang/rust/issues/79166", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79166/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79166/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79166/events", "html_url": "https://github.com/rust-lang/rust/issues/79166", "id": 745683651, "node_id": "MDU6SXNzdWU3NDU2ODM2NTE=", "number": 79166, "title": "inaccurate const drop error doesn't mention #![feature(const_precise_live_drops)]", "user": {"login": "meithecatte", "id": 23580910, "node_id": "MDQ6VXNlcjIzNTgwOTEw", "avatar_url": "https://avatars.githubusercontent.com/u/23580910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meithecatte", "html_url": "https://github.com/meithecatte", "followers_url": "https://api.github.com/users/meithecatte/followers", "following_url": "https://api.github.com/users/meithecatte/following{/other_user}", "gists_url": "https://api.github.com/users/meithecatte/gists{/gist_id}", "starred_url": "https://api.github.com/users/meithecatte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meithecatte/subscriptions", "organizations_url": "https://api.github.com/users/meithecatte/orgs", "repos_url": "https://api.github.com/users/meithecatte/repos", "events_url": "https://api.github.com/users/meithecatte/events{/privacy}", "received_events_url": "https://api.github.com/users/meithecatte/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 43009118, "node_id": "MDU6TGFiZWw0MzAwOTExOA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-destructors", "name": "A-destructors", "color": "f7e101", "default": false, "description": "Area: destructors (Drop, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 268744493, "node_id": "MDU6TGFiZWwyNjg3NDQ0OTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-fn", "name": "A-const-fn", "color": "f7e101", "default": false, "description": "Area: const fn foo(..) {..}. Pure functions which can be applied at compile time."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-11-18T13:58:24Z", "updated_at": "2021-05-15T23:33:51Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```rust\r\nstruct Test<T>(T);\r\n\r\nimpl<T> Test<T> {\r\n    const fn unpack(self) -> T {\r\n        self.0\r\n    }\r\n}\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=47781313c3e1482de4802cbc4f56a548))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0493]: destructors cannot be evaluated at compile-time\r\n --> src/lib.rs:4:21\r\n  |\r\n4 |     const fn unpack(self) -> T {\r\n  |                     ^^^^ constant functions cannot evaluate destructors\r\n5 |         self.0\r\n6 |     }\r\n  |     - value is dropped here\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0493`.\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\n\r\nHowever, no destructors are actually ran, as can be seen in the MIR output:\r\n```\r\nfn <impl at src/lib.rs:3:1: 7:2>::unpack(_1: Test<T>) -> T {\r\n    debug self => _1;                    // in scope 0 at src/lib.rs:4:15: 4:19\r\n    let mut _0: T;                       // return place in scope 0 at src/lib.rs:4:24: 4:25\r\n\r\n    bb0: {\r\n        _0 = move (_1.0: T);             // scope 0 at src/lib.rs:5:9: 5:15\r\n        return;                          // scope 0 at src/lib.rs:6:6: 6:6\r\n    }\r\n}\r\n```\r\n\r\nThe same effect can be observed if the field access is replaced by pattern matching, either in `let` or `match`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79166/timeline", "performed_via_github_app": null, "state_reason": null}