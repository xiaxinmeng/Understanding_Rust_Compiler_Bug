{"url": "https://api.github.com/repos/rust-lang/rust/issues/93955", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93955/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93955/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93955/events", "html_url": "https://github.com/rust-lang/rust/issues/93955", "id": 1135243298, "node_id": "I_kwDOAAsO6M5DqnAi", "number": 93955, "title": "E0107 and E0275 may occurs ICE", "user": {"login": "Toru3", "id": 8950310, "node_id": "MDQ6VXNlcjg5NTAzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8950310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Toru3", "html_url": "https://github.com/Toru3", "followers_url": "https://api.github.com/users/Toru3/followers", "following_url": "https://api.github.com/users/Toru3/following{/other_user}", "gists_url": "https://api.github.com/users/Toru3/gists{/gist_id}", "starred_url": "https://api.github.com/users/Toru3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Toru3/subscriptions", "organizations_url": "https://api.github.com/users/Toru3/orgs", "repos_url": "https://api.github.com/users/Toru3/repos", "events_url": "https://api.github.com/users/Toru3/events{/privacy}", "received_events_url": "https://api.github.com/users/Toru3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2022-02-13T05:31:51Z", "updated_at": "2022-03-26T12:52:27Z", "closed_at": "2022-03-26T12:52:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nuse std::ops::Add;\r\nstruct Point<T> {\r\n    x: T,\r\n    y: T,\r\n}\r\n\r\nimpl<'a, T> Add for &'a Point<T>\r\nwhere\r\n    for<'x> &'x T: Add<Output = T>,\r\n{\r\n    type Output = Point<T>;\r\n    fn add(self, rhs: Self) -> Self::Output {\r\n        Point {\r\n            x: &self.x + &rhs.x,\r\n            y: &self.y + &rhs.y,\r\n        }\r\n    }\r\n}\r\n\r\nfn add<T, U>(x: T, y: T) -> T\r\nwhere\r\n    T: From<U>,\r\n    for<'x> &'x T: Add<Output = U>,\r\n{\r\n    T::from(&x + &y)\r\n}\r\n\r\nfn main() {\r\n    let x = 2;\r\n    let y = 3;\r\n    //let a = add(x, y); // E0275\r\n    let b = add::<i32>(x, y); // ICE\r\n    //let c = add::<i32, i32>(x, y); // works\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.59.0-beta.7 (f58f0dfd7 2022-02-11)\r\nbinary: rustc\r\ncommit-hash: f58f0dfd7261dba0cafc25273d8158b6965c7695\r\ncommit-date: 2022-02-11\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.59.0-beta.7\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0107]: this function takes 2 generic arguments but 1 generic argument was supplied\r\n  --> src/main.rs:32:13\r\n   |\r\n32 |     let b = add::<i32>(x, y); // ICE\r\n   |             ^^^   --- supplied 1 generic argument\r\n   |             |\r\n   |             expected 2 generic arguments\r\n   |\r\nnote: function defined here, with 2 generic parameters: `T`, `U`\r\n  --> src/main.rs:20:4\r\n   |\r\n20 | fn add<T, U>(x: T, y: T) -> T\r\n   |    ^^^ -  -\r\nhelp: add missing generic argument\r\n   |\r\n32 |     let b = add::<i32, U>(x, y); // ICE\r\n   |                      +++\r\n\r\nerror: internal compiler error: compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs:855:17: ErrorReporting Overflow should not reach `report_selection_err` call\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1169:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.59.0-beta.7 (f58f0dfd7 2022-02-11) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental -C target-cpu=native --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `main`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\nend of query stack\r\nFor more information about this error, try `rustc --explain E0107`.\r\nerror: could not compile `report-bug` due to previous error\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror[E0107]: this function takes 2 generic arguments but 1 generic argument was supplied\r\n  --> src/main.rs:32:13\r\n   |\r\n32 |     let b = add::<i32>(x, y); // ICE\r\n   |             ^^^   --- supplied 1 generic argument\r\n   |             |\r\n   |             expected 2 generic arguments\r\n   |\r\nnote: function defined here, with 2 generic parameters: `T`, `U`\r\n  --> src/main.rs:20:4\r\n   |\r\n20 | fn add<T, U>(x: T, y: T) -> T\r\n   |    ^^^ -  -\r\nhelp: add missing generic argument\r\n   |\r\n32 |     let b = add::<i32, U>(x, y); // ICE\r\n   |                      +++\r\n\r\nerror: internal compiler error: compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs:855:17: ErrorReporting Overflow should not reach `report_selection_err` call\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1169:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner>::bug\r\n   3: <rustc_errors::Handler>::bug\r\n   4: rustc_middle::ty::context::tls::with_opt::<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, ()>\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtExt>::report_selection_error\r\n   8: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtPrivExt>::report_fulfillment_error\r\n   9: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::error_reporting::InferCtxtExt>::report_fulfillment_errors\r\n  10: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n  11: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  12: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  13: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_decl\r\n  14: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  15: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  16: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  17: rustc_typeck::check::check::check_fn\r\n  18: <rustc_infer::infer::InferCtxtBuilder>::enter::<&rustc_middle::ty::context::TypeckResults, <rustc_typeck::check::inherited::InheritedBuilder>::enter<rustc_typeck::check::typeck_with_fallback<rustc_typeck::check::typeck::{closure#0}>::{closure#1}, &rustc_middle::ty::context::TypeckResults>::{closure#0}>\r\n  19: rustc_typeck::check::typeck\r\n  20: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>\r\n  21: rustc_data_structures::stack::ensure_sufficient_stack::<(&rustc_middle::ty::context::TypeckResults, rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>::{closure#3}>\r\n  22: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>>\r\n  23: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  24: <rustc_middle::hir::map::Map>::par_body_owners::<rustc_typeck::check::typeck_item_bodies::{closure#0}>\r\n  25: rustc_typeck::check::typeck_item_bodies\r\n  26: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), ()>\r\n  27: rustc_data_structures::stack::ensure_sufficient_stack::<((), rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, (), ()>::{closure#3}>\r\n  28: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), ()>>\r\n  29: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::typeck_item_bodies, rustc_query_impl::plumbing::QueryCtxt>\r\n  30: <rustc_session::session::Session>::time::<(), rustc_typeck::check_crate::{closure#7}>\r\n  31: rustc_typeck::check_crate\r\n  32: rustc_interface::passes::analysis\r\n  33: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), core::result::Result<(), rustc_errors::ErrorReported>>\r\n  34: rustc_data_structures::stack::ensure_sufficient_stack::<(core::result::Result<(), rustc_errors::ErrorReported>, rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, (), core::result::Result<(), rustc_errors::ErrorReported>>::{closure#3}>\r\n  35: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorReported>>>\r\n  36: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  37: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorReported>>\r\n  38: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  39: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>\r\n  40: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.59.0-beta.7 (f58f0dfd7 2022-02-11) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental -C target-cpu=native --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `main`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nFor more information about this error, try `rustc --explain E0107`.\r\nerror: could not compile `report-bug` due to previous error\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93955/timeline", "performed_via_github_app": null, "state_reason": "completed"}