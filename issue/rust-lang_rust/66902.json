{"url": "https://api.github.com/repos/rust-lang/rust/issues/66902", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66902/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66902/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66902/events", "html_url": "https://github.com/rust-lang/rust/issues/66902", "id": 530579422, "node_id": "MDU6SXNzdWU1MzA1Nzk0MjI=", "number": 66902, "title": "ConstEval/ConstProp: get rid of `Panic` error kind", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-30T13:30:44Z", "updated_at": "2020-02-13T15:56:30Z", "closed_at": "2020-02-13T15:56:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "With the Miri engine now having support for properly executing panics, a panicking program does not really constitute an \"interpreter error\" any more. So we should get rid of the `InterpError::Panic` variant.\r\n\r\n* We'll need to decide what else to do with the `throw_panic!` that still exist. [This one](https://github.com/rust-lang/rust/blob/8f1bbd69e13c9e04a4c2b75612bc0c31af972439/src/librustc_mir/interpret/place.rs#L390) I think should be `throw_ub!` instead; same for the \"division/remainder by zero\" [in this file](https://github.com/rust-lang/rust/blob/8f1bbd69e13c9e04a4c2b75612bc0c31af972439/src/librustc_mir/interpret/operator.rs). With well-formed MIR I think those are all unreachable, but I see no harm in letting Miri also support some \"reasonable\" MIR that rustc would never emit (such as omitting the bounds check on an array access, or the div-by-zero check). [Overflowing pointer arithmetic](https://github.com/rust-lang/rust/blob/8f1bbd69e13c9e04a4c2b75612bc0c31af972439/src/librustc/mir/interpret/pointer.rs#L91) should also be UB I think.\r\n* ConstEval should probably format an error message directly when a panic occurs ([here](https://github.com/rust-lang/rust/blob/8f1bbd69e13c9e04a4c2b75612bc0c31af972439/src/librustc_mir/interpret/intrinsics.rs#L372) or in the new `assert_panic` hook added by https://github.com/rust-lang/rust/pull/66874). This could be propagated outwards via a new `MachineError(String)` variant of `InterpError`, if nothing else fits.\r\n* I am not sure what ConstProp should do. The `throw_panic!` mentioned above are, I think, currently actually hit by ConstProp -- but maybe those same errors can be better shown by determining that the condition of an `Assert` terminator is constant, and indeed that might explain why we currently sometimes have duplicate error messages. It also contains a `throw_panic!` [here](https://github.com/rust-lang/rust/blob/8f1bbd69e13c9e04a4c2b75612bc0c31af972439/src/librustc_mir/transform/const_prop.rs#L489).\r\n\r\nCc @oli-obk @wesleywiser ", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66902/timeline", "performed_via_github_app": null, "state_reason": "completed"}