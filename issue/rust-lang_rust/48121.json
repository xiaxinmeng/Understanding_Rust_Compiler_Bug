{"url": "https://api.github.com/repos/rust-lang/rust/issues/48121", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48121/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48121/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48121/events", "html_url": "https://github.com/rust-lang/rust/issues/48121", "id": 296102627, "node_id": "MDU6SXNzdWUyOTYxMDI2Mjc=", "number": 48121, "title": "Better handling for unwrapping reference to Result (or Option)", "user": {"login": "xliiv", "id": 298994, "node_id": "MDQ6VXNlcjI5ODk5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/298994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xliiv", "html_url": "https://github.com/xliiv", "followers_url": "https://api.github.com/users/xliiv/followers", "following_url": "https://api.github.com/users/xliiv/following{/other_user}", "gists_url": "https://api.github.com/users/xliiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/xliiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xliiv/subscriptions", "organizations_url": "https://api.github.com/users/xliiv/orgs", "repos_url": "https://api.github.com/users/xliiv/repos", "events_url": "https://api.github.com/users/xliiv/events{/privacy}", "received_events_url": "https://api.github.com/users/xliiv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-02-10T13:54:48Z", "updated_at": "2022-08-19T17:47:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Having such simplified code:\r\n\r\n```rust\r\nfn main() {\r\n    let result: Result<String, String> = Ok(\"ok\".to_string());\r\n    let ref_result = &result;\r\n    let x = ref_result.unwrap();\r\n}\r\n```\r\ngives:\r\n\r\n```\r\nerror[E0507]: cannot move out of borrowed content\r\n --> src/main.rs:4:13\r\n  |\r\n4 |     let x = ref_result.unwrap();\r\n  |             ^^^^^^^^^^ cannot move out of borrowed content\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: Could not compile `playground`.\r\n```\r\n\r\nThanks to irc Kimundi & Amarnath I got the solution & expanation:\r\n\r\n```rust\r\n// use:\r\nlet x = ref_result.as_ref().unwrap();\r\n```\r\n\r\n### Explanation:\r\n* `unwrap` requires full ownership because it moves values\r\n    * see `self` in [signature](https://doc.rust-lang.org/core/result/enum.Result.html#method.unwrap)?\r\n* `ref_result` is only borrowing, (`ref_result` is a reference, a reference means borrowing)\r\n\r\nUsing `.as_ref()` works because:\r\nIt creates a brand new `Result` with references to inner value, like:\r\nfrom initial:\r\n\r\n    `&Result<T, V>`\r\n\r\nto brand new one:\r\n\r\n    `Result<&T, &V>`\r\n\r\nSee implementation of `Result.as_ref` [here](https://doc.rust-lang.org/src/core/result.rs.html#400)\r\n\r\nIf i got this correctly, using `unwrap` on `&Result` will always be corrupted.\r\nMy question is, could this be handled internally somehow by Rust?\r\nAnd/Or better compilation error would be awesome for noobs like me :)\r\nI'm not sure what the message should look like but the current one is a bit general.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48121/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48121/timeline", "performed_via_github_app": null, "state_reason": null}