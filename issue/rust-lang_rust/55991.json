{"url": "https://api.github.com/repos/rust-lang/rust/issues/55991", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55991/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55991/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55991/events", "html_url": "https://github.com/rust-lang/rust/issues/55991", "id": 381376516, "node_id": "MDU6SXNzdWUzODEzNzY1MTY=", "number": 55991, "title": "Invalid span of a struct's generics in presence of a where clause but no parameter", "user": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-15T23:01:46Z", "updated_at": "2019-06-02T17:26:37Z", "closed_at": "2019-06-02T17:26:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is an issue that was reported initially to `rustfmt` in https://github.com/rust-lang-nursery/rustfmt/issues/3194.\r\nThe problematic code was based on the `Generics.span` field, which gave a wrong `BytePos` in case of a `struct` with a `where` clause but no parameter.\r\n\r\n# Problem\r\n\r\nBelow is an explanation of the problem, and there is a runnable example below to test it out.\r\n\r\n## Observed\r\n\r\nWith the code `mod m { struct S where A: B; }`, the field `generics.span` of the `struct` item is equal to  `Span { lo: BytePos(0), hi: BytePos(0), .. }`; this points to the _start_ of the input.\r\n\r\n## Expected\r\n\r\nThe `span` value should point to the position just after the struct ident, i.e.,  `Span { lo: BytePos(16), hi: BytePos(16), .. }`.\r\n\r\n# Versions\r\n\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.32.0-nightly (6f93e93af 2018-11-14)\r\nbinary: rustc\r\ncommit-hash: 6f93e93af6f823948cc13d2938957757c6486d88\r\ncommit-date: 2018-11-14\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.32.0-nightly\r\nLLVM version: 8.0\r\n```\r\n\r\n# Example code\r\n\r\n- tested with `rustc-ap-syntax = \"297.0.0\"`\r\n\r\n```rust\r\nextern crate syntax;\r\n\r\nuse syntax::ast::*;\r\nuse syntax::ext::quote::rt::FileName;\r\nuse syntax::parse;\r\nuse syntax::parse::ParseSess;\r\nuse syntax::source_map::FilePathMapping;\r\n\r\nfn main() {\r\n    // With source = \"mod m { struct S<A> where A: B; }\":\r\n    // - the generics span is equal to `Span { lo: BytePos(16), hi: BytePos(19), .. }`\r\n    //\r\n    // With source = \"mod m { struct S where A: B; }\":\r\n    // - the generics span is equal to `Span { lo: BytePos(0), hi: BytePos(0), .. }`\r\n    // - it would be better if the span pointed to the portion just after the ident with the difference between `hi` and `lo` equal to 0, i.e., `Span { lo: BytePos(16), hi: BytePos(16), .. }`\r\n\r\n    //let source = \"mod m { struct S<A> where A: B; }\";\r\n    let source = \"mod m { struct S where A: B; }\";\r\n\r\n    let session = ParseSess::new(FilePathMapping::empty());\r\n    let file_name = FileName::Custom(\"source\".to_string());\r\n\r\n    syntax::with_globals(|| {\r\n        let mut parser = parse::new_parser_from_source_str(&session, file_name, source.to_string());\r\n        let result = parser.parse_crate_mod().unwrap();\r\n        let item = &result.module.items[0];\r\n        if let ItemKind::Mod(module) = &item.node {\r\n            let item = &module.items[0];\r\n            if let ItemKind::Struct(_data, generics) = &item.node {\r\n                println!(\"generics.span = [{:?}]\", generics.span);\r\n                println!(\"generics.params = [{:?}]\", generics.params.len());\r\n            }\r\n        }\r\n    });\r\n}\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55991/timeline", "performed_via_github_app": null, "state_reason": "completed"}