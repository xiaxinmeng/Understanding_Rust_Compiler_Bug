{"url": "https://api.github.com/repos/rust-lang/rust/issues/79438", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79438/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79438/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79438/events", "html_url": "https://github.com/rust-lang/rust/issues/79438", "id": 751308731, "node_id": "MDU6SXNzdWU3NTEzMDg3MzE=", "number": 79438, "title": "stack overflow from do_mir_borrowck() when building tinyvec 1.X", "user": {"login": "jclulow", "id": 304070, "node_id": "MDQ6VXNlcjMwNDA3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/304070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jclulow", "html_url": "https://github.com/jclulow", "followers_url": "https://api.github.com/users/jclulow/followers", "following_url": "https://api.github.com/users/jclulow/following{/other_user}", "gists_url": "https://api.github.com/users/jclulow/gists{/gist_id}", "starred_url": "https://api.github.com/users/jclulow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jclulow/subscriptions", "organizations_url": "https://api.github.com/users/jclulow/orgs", "repos_url": "https://api.github.com/users/jclulow/repos", "events_url": "https://api.github.com/users/jclulow/events{/privacy}", "received_events_url": "https://api.github.com/users/jclulow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 100522, "node_id": "MDU6TGFiZWwxMDA1MjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-crash", "name": "I-crash", "color": "e10c02", "default": false, "description": "Issue: The compiler crashes (SIGSEGV, SIGABRT, etc). Use I-ICE instead when the compiler panics."}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 808123953, "node_id": "MDU6TGFiZWw4MDgxMjM5NTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-release", "name": "T-release", "color": "bfd4f2", "default": false, "description": "Relevant to the release subteam, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-11-26T05:58:10Z", "updated_at": "2021-02-11T15:13:22Z", "closed_at": "2021-02-11T15:10:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a reproducible stack overflow when trying to build versions of `tinyvec` as of [this commit](https://github.com/Lokathor/tinyvec/commit/d3c1c6a56d8a498a855839670d768acc37451314) on illumos systems.  The output is terse, reporting a SIGSEGV instead of an overflow, but I have verified by looking at the generated core file that it is indeed overflowing a (manually allocated) stack.\r\n\r\n### Meta\r\n\r\nI am running `1.48.0` stable `rustc`, built by the official project CI/CD:\r\n\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.48.0 (7eac88abb 2020-11-16)\r\nbinary: rustc\r\ncommit-hash: 7eac88abb2e57e752f3302f02be5f3ce3d7adfb4\r\ncommit-date: 2020-11-16\r\nhost: x86_64-unknown-illumos\r\nrelease: 1.48.0\r\nLLVM version: 11.0\r\n```\r\n\r\nNotably, this appears to have been fixed in the current beta; i.e.,\r\n\r\n```\r\n$ rustc +beta --version --verbose\r\nrustc 1.49.0-beta.2 (bd26e4e54 2020-11-24)\r\nbinary: rustc\r\ncommit-hash: bd26e4e544992e52f2080906f71b2f1e6dc1b14a\r\ncommit-date: 2020-11-24\r\nhost: x86_64-unknown-illumos\r\nrelease: 1.49.0-beta.2\r\n```\r\n\r\nI tried setting `RUST_BACKTRACE` in the environment, but that did not appear to result in the printing of a backtrace; merely the same message as before:\r\n\r\n```\r\n$ cargo build\r\n   Compiling tinyvec v1.0.0-alpha.3 (/ws/safari/tinyvec)\r\nerror: could not compile `tinyvec`\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --crate-name tinyvec --edition=2018\r\n  src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type\r\n  lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg\r\n  'feature=\"default\"' -C metadata=40a113bdeb46ccf1 -C\r\n  extra-filename=-40a113bdeb46ccf1 --out-dir\r\n  /ws/safari/tinyvec/target/debug/deps -C\r\n  incremental=/ws/safari/tinyvec/target/debug/incremental -L\r\n  dependency=/ws/safari/tinyvec/target/debug/deps`\r\n  (signal: 11, SIGSEGV: invalid memory reference)\r\n```\r\n\r\n### Analysis\r\n\r\nI ran the command that `cargo` reported as failed under the debugger so that I could extract some information:\r\n\r\n```\r\n$ mdb /ws/cache/rustup/toolchains/stable-x86_64-unknown-illumos/bin/rustc\r\n> ::run --crate-name tinyvec --edition=2018 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"default\"' -C metadata=40a113bdeb46ccf1 -C extra-filename=-40a113bdeb46ccf1 --out-dir /ws/safari/tinyvec/target/debug/deps -C incremental=/ws/safari/tinyvec/target/debug/incremental -L dependency=/ws/safari/tinyvec/target/debug/deps\r\nmdb: stop on SIGSEGV\r\nmdb: target stopped at:\r\nlibrustc_driver-62310f2a8429cf4e.so`_ZN12rustc_middle3mir10terminator10Terminator10successors17h15d87a6a04130f8aE+9:\r\ncall   -0x555ecee       <0xfffffc7fdc31e050>\r\n> $G\r\nC++ symbol demangling enabled\r\n> $C\r\nfffffc7fe7730010 librustc_driver-62310f2a8429cf4e.so`rustc_middle::mir::terminator::Terminator::successors::h15d87a6a04130f8a+9()\r\nfffffc7fe7730090 librustc_driver-62310f2a8429cf4e.so`rustc_data_structures::graph::iterate::post_order_walk::h34870d682b9e7096 +0x6d()\r\nfffffc7fe7730110 librustc_driver-62310f2a8429cf4e.so`rustc_data_structures::graph::iterate::post_order_walk::h34870d682b9e7096 +0xf7()\r\nfffffc7fe7730190 librustc_driver-62310f2a8429cf4e.so`rustc_data_structures::graph::iterate::post_order_walk::h34870d682b9e7096 +0xf7()\r\n\r\n  ... removed ~8000 identical call frames ...\r\n\r\nfffffc7fe782d490 librustc_driver-62310f2a8429cf4e.so`rustc_data_structures::graph::iterate::post_order_walk::h34870d682b9e7096 +0xf7()\r\nfffffc7fe782d510 librustc_driver-62310f2a8429cf4e.so`rustc_data_structures::graph::iterate::post_order_walk::h34870d682b9e7096 +0xf7()\r\nfffffc7fe782d590 librustc_driver-62310f2a8429cf4e.so`rustc_data_structures::graph::iterate::post_order_walk::h34870d682b9e7096 +0xf7()\r\nfffffc7fe782d5f0 librustc_driver-62310f2a8429cf4e.so`rustc_data_structures::graph::iterate::reverse_post_order::h5fce7dd4b7fe12da+0xb2()\r\nfffffc7fe782d730 librustc_driver-62310f2a8429cf4e.so`rustc_data_structures::graph::dominators::dominators::h70f1ad1b6cee1f19+0x33()\r\nfffffc7fe782e8f0 librustc_driver-62310f2a8429cf4e.so`rustc_mir::borrow_check::do_mir_borrowck::h35d428c91e81ce64+0x3ff5()\r\nfffffc7fe782efb0 librustc_driver-62310f2a8429cf4e.so`rustc_infer::infer::InferCtxtBuilder::enter::h0f8b6d85dda7446d+0x35a()\r\nfffffc7fe782f2b0 librustc_driver-62310f2a8429cf4e.so`rustc_mir::borrow_check::mir_borrowck::h45ffca0342ef78c2+0xb0()\r\nfffffc7fe782f310 librustc_driver-62310f2a8429cf4e.so`core::ops::function::FnOnce::call_once::hd939c4446c14a2b1 +0xba()\r\nfffffc7fe782f370 librustc_driver-62310f2a8429cf4e.so`rustc_middle::ty::query::_$LT$impl$u20$rustc_query_system..query..config..QueryAccessors$LT$rustc_middle..ty..context..TyCtxt$GT$$u20$for$u20$rustc_middle..ty..query..queries..mir_borrowck$GT$::compute::hec014b565b71c90a +0x5d()\r\nfffffc7fe782f3e0 librustc_driver-62310f2a8429cf4e.so`rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps::hfb0b3153a1302131+0xb1()\r\nfffffc7fe782f680 librustc_driver-62310f2a8429cf4e.so`rustc_query_system::dep_graph::graph::DepGraph$LT$K$GT$::with_task_impl::he17c6a42e208f92c +0x155()\r\nfffffc7fe782f730 librustc_driver-62310f2a8429cf4e.so`rustc_data_structures::stack::ensure_sufficient_stack::h0feb4a6c79708354+0x13a()\r\nfffffc7fe782f950 librustc_driver-62310f2a8429cf4e.so`rustc_query_system::query::plumbing::get_query_impl::h2371bfafc3cbb116+0x15f7()\r\nfffffc7fe782f9e0 librustc_driver-62310f2a8429cf4e.so`rustc_query_system::query::plumbing::ensure_query_impl::h84084328873d8e5e+0x81()\r\nfffffc7fe782faf0 librustc_driver-62310f2a8429cf4e.so`rustc_session::utils::<impl rustc_session::session::Session>::time::h23f9ce0ea49c0e69+0xec()\r\nfffffc7fe782fb80 librustc_driver-62310f2a8429cf4e.so`rustc_interface::passes::analysis::hf97778f8ad9faa62+0xa4()\r\nfffffc7fe782fbf0 librustc_driver-62310f2a8429cf4e.so`rustc_middle::ty::query::_$LT$impl$u20$rustc_query_system..query..config..QueryAccessors$LT$rustc_middle..ty..context..TyCtxt$GT$$u20$for$u20$rustc_middle..ty..query..queries..analysis$GT$::compute::h8ae15860df5ab22d +0x62()\r\nfffffc7fe782fc60 librustc_driver-62310f2a8429cf4e.so`rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps::h2bbe4b4470c14592+0xb4()\r\nfffffc7fe782ff00 librustc_driver-62310f2a8429cf4e.so`rustc_query_system::dep_graph::graph::DepGraph$LT$K$GT$::with_task_impl::h72aeec2c7c783475 +0x152()\r\nfffffc7fe782ffd0 librustc_driver-62310f2a8429cf4e.so`stacker::grow::{{closure}}::h65d554ddf01eba3b+0x10c()\r\nfffffc7fe782fff0 librustc_driver-62310f2a8429cf4e.so`psm::on_stack::with_on_stack::h81c3cae1e30d3bf1 +0x16()\r\nfffffc7fecff5790 librustc_driver-62310f2a8429cf4e.so`rust_psm_on_stack+9()\r\nfffffc7fecff5830 librustc_driver-62310f2a8429cf4e.so`stacker::_grow::h18eb622876b9878c+0x151()\r\nfffffc7fecff58c0 librustc_driver-62310f2a8429cf4e.so`rustc_data_structures::stack::ensure_sufficient_stack::h9698eb2fb5d0ecee+0xdb()\r\nfffffc7fecff5a70 librustc_driver-62310f2a8429cf4e.so`rustc_query_system::query::plumbing::get_query_impl::h32766f8721ee67f8+0x135e()\r\nfffffc7fecff5af0 librustc_driver-62310f2a8429cf4e.so`rustc_interface::passes::QueryContext::enter::hc7db4b569261a65f+0x6d()\r\nfffffc7fecffc200 librustc_driver-62310f2a8429cf4e.so`rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter::h2f967153f9e55894+0x640()\r\nfffffc7fecffc5d0 librustc_driver-62310f2a8429cf4e.so`rustc_span::with_source_map::h23a899951826437f+0x161()\r\nfffffc7fecffe1e0 librustc_driver-62310f2a8429cf4e.so`scoped_tls::ScopedKey<T>::set::h7e5adfeb9680b50e+0x4a2()\r\nfffffc7fecffff10 librustc_driver-62310f2a8429cf4e.so`std::sys_common::backtrace::__rust_begin_short_backtrace::h1651eb0501994140+0x208()\r\nfffffc7fecffff60 librustc_driver-62310f2a8429cf4e.so`core::ops::function::FnOnce::call_once{{vtable.shim}}::h09a817ac54a70804+0x4c()\r\nfffffc7fecffffb0 libstd-5e60dcc3938c5a75.so`std::sys::unix::thread::Thread::new::thread_start::hb7bf59c563d203d3+0x2d()\r\nfffffc7fecffffe0 libc.so.1`_thrp_setup+0x6c(fffffc7fed700280)\r\nfffffc7fecfffff0 libc.so.1`_lwp_start()\r\n```\r\n\r\nThis is thread 2, which has an official thread stack starting at `0xfffffc7fed000000` and extending down to `0xfffffc7fec800000`:\r\n\r\n```\r\n> $l\r\n2\r\n> _uberdata::print all_lwps->ul_forw->ul_lwpid\r\nall_lwps->ul_forw->ul_lwpid = 0x2\r\n> _uberdata::print all_lwps->ul_forw[] ! grep stk\r\n    all_lwps->ul_forw->ul_stk = 0xfffffc7fec800000\r\n    all_lwps->ul_forw->ul_stktop = 0xfffffc7fed000000\r\n    all_lwps->ul_forw->ul_stksiz = 0x800000\r\n```\r\n\r\nNote that `ensure_sufficient_stack()` allocates its own stack and arranges via `stacker` to begin executing new calls on that stack, so after the `rust_psm_on_stack()` frame we are on the bonus stack, which appears to have a size of ~1MB:\r\n\r\n```\r\n> fffffc7fe782fff0::whatis\r\nfffffc7fe782fff0 is in [ anon ] [fffffc7fe7730000,fffffc7fe7831000)\r\n> fffffc7fe7831000 - fffffc7fe7730000 = D\r\n                1052672\r\n```\r\n\r\nAnd, indeed, the top frame as we SIGSEGV is quite close to the top of the bonus stack:\r\n\r\n```\r\n> $C ! head -1\r\nfffffc7fe7730010 librustc_driver-62310f2a8429cf4e.so`rustc_middle::mir::terminator::Terminator::successors::h15d87a6a04130f8a+9()\r\n\r\n> fffffc7fe7730010 - fffffc7fe7730000 = D\r\n                16\r\n```\r\n\r\n### Request\r\n\r\nBecause this appears to be fixed in the beta release, I had a look to see if I could find a relevant commit.  Indeed, this one seems to fit the bill: https://github.com/rust-lang/rust/commit/af72a70ee27faa85522f7656e042c85ab1ee275e (PR #78607).\r\n\r\nIs there a process to get this backported to the stable branch, 1.48?  This failure appears to make it difficult or impossible to build things that use tinyvec (such as, transitively, anything that uses reqwest) with the current stable toolchain for us.", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79438/timeline", "performed_via_github_app": null, "state_reason": "completed"}