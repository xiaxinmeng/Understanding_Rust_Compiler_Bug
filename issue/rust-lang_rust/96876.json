{"url": "https://api.github.com/repos/rust-lang/rust/issues/96876", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96876/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96876/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96876/events", "html_url": "https://github.com/rust-lang/rust/issues/96876", "id": 1229963335, "node_id": "I_kwDOAAsO6M5JT8BH", "number": 96876, "title": "rustc segfaults on riscv64 musl", "user": {"login": "nmeum", "id": 2326560, "node_id": "MDQ6VXNlcjIzMjY1NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2326560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nmeum", "html_url": "https://github.com/nmeum", "followers_url": "https://api.github.com/users/nmeum/followers", "following_url": "https://api.github.com/users/nmeum/following{/other_user}", "gists_url": "https://api.github.com/users/nmeum/gists{/gist_id}", "starred_url": "https://api.github.com/users/nmeum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nmeum/subscriptions", "organizations_url": "https://api.github.com/users/nmeum/orgs", "repos_url": "https://api.github.com/users/nmeum/repos", "events_url": "https://api.github.com/users/nmeum/events{/privacy}", "received_events_url": "https://api.github.com/users/nmeum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-05-09T16:22:14Z", "updated_at": "2022-07-22T15:04:08Z", "closed_at": "2022-07-22T15:04:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am a contributor to the [Alpine Linux](https://alpinelinux.org) distribution (which uses [musl libc](https://musl.libc.org)). Since recently, Alpine has support for riscv64. In this context, I am currently trying to make Rust available on this architecture. With [some patching](https://github.com/rust-lang/rust/issues/93975#issuecomment-1121295992), I was able to successfully bootstrap a stage2 rustc for riscv64 musl by cross-compiling using our x86_64 Rust package on Alpine Linux Edge. Compiling basic software (e.g. hello world) with the stage2 rustc works on riscv64 musl. Unfortunately, re-compiling rustc itself with stage2 does not and causes a segmentation fault early on in the build process.\r\n\r\n### Code\r\n\r\n```Rust\r\n$ python3 ./x.py dist\r\nBuilding rustbuild\r\n   Compiling proc-macro2 v1.0.30\r\n   Compiling memchr v2.4.1\r\n   Compiling unicode-xid v0.2.2\r\n   Compiling syn v1.0.80\r\n   Compiling cfg-if v1.0.0\r\n   Compiling serde_derive v1.0.125\r\n   Compiling lazy_static v1.4.0\r\n   Compiling log v0.4.14\r\n   Compiling regex-automata v0.1.10\r\n   Compiling libc v0.2.116\r\n   Compiling serde v1.0.125\r\n   Compiling regex-syntax v0.6.25\r\n   Compiling ryu v1.0.5\r\n   Compiling crossbeam-utils v0.8.6\r\n   Compiling serde_json v1.0.59\r\n   Compiling fnv v1.0.7\r\n   Compiling once_cell v1.7.2\r\n   Compiling same-file v1.0.6\r\n   Compiling unicode-width v0.1.8\r\n   Compiling bootstrap v0.0.0 (/home/buildozer/aports/community/rust/src/rustc-1.60.0-src/src/bootstrap)\r\n   Compiling itoa v0.4.6\r\n   Compiling cc v1.0.69\r\n   Compiling build_helper v0.1.0 (/home/buildozer/aports/community/rust/src/rustc-1.60.0-src/src/build_helper)\r\nerror: could not compile `ryu`\r\n\r\nCaused by:\r\n  process didn't exit successfully: `/usr/bin/rustc --crate-name build_script_build --edition=2018 /home/buildozer/aports/community/rust/src/rustc-1.60.0-src/vendor/ryu-1.0.5/build.rs --error-format=json --json=diagnostic-rendered-ansi,\r\nartifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=0 -C metadata=0008fc44e561b019 -C extra-filename=-0008fc44e561b019 --out-dir /home/buildozer/aports/community/rust/src/rustc-1.60.0-src/bui\r\nld/bootstrap/debug/build/ryu-0008fc44e561b019 -L dependency=/home/buildozer/aports/community/rust/src/rustc-1.60.0-src/build/bootstrap/debug/deps --cap-lints allow -C target-feature=-crt-static -C linker=gcc -Wrust_2018_idioms -Wunused_\r\nlifetimes -Wsemicolon_in_expressions_from_macros` (signal: 11, SIGSEGV: invalid memory reference)\r\nwarning: build failed, waiting for other jobs to finish...\r\nthread 'rustc' panicked at 'index out of bounds: the len is 6 but the index is 2636', compiler/rustc_span/src/hygiene.rs:448:21\r\nstack backtrace:\r\nthread 'rustc' panicked at 'index out of bounds: the len is 171 but the index is 10920', compiler/rustc_span/src/hygiene.rs:448:21\r\nstack backtrace:\r\nthread 'rustc' panicked at 'index out of bounds: the len is 155 but the index is 257', compiler/rustc_span/src/hygiene.rs:448:21\r\n```\r\n\r\nThe backtrace for this segfault looks as follows:\r\n\r\n```\r\n(gdb) bt\r\n#0  0x0000003f8d13bff4 in <rustc_span::span_encoding::Span as rustc_data_structures::stable_hasher::HashStable<rustc_query_system::ich::hcx::StableHashingContext>>::hash_stable () from /usr/lib/librustc_driver-e81ecd0b9419698e.so\r\n#1  0x0000003f8d12c6a6 in <rustc_query_system::ich::hcx::StableHashingContext as rustc_hir::stable_hash_impls::HashStableContext>::hash_hir_expr::{closure#0} () from /usr/lib/librustc_driver-e81ecd0b9419698e.so\r\n#2  0x0000003f8d12cbf4 in <rustc_query_system::ich::hcx::StableHashingContext as rustc_hir::stable_hash_impls::HashStableContext>::hash_hir_expr::{closure#0} () from /usr/lib/librustc_driver-e81ecd0b9419698e.so\r\n#3  0x0000003f8d12e184 in <rustc_query_system::ich::hcx::StableHashingContext as rustc_hir::stable_hash_impls::HashStableContext>::hash_hir_expr::{closure#0} () from /usr/lib/librustc_driver-e81ecd0b9419698e.so\r\n#4  0x0000003f8d12cadc in <rustc_query_system::ich::hcx::StableHashingContext as rustc_hir::stable_hash_impls::HashStableContext>::hash_hir_expr::{closure#0} () from /usr/lib/librustc_driver-e81ecd0b9419698e.so\r\n#5  0x0000003f8d13f39a in <&[rustc_hir::hir::Stmt] as rustc_data_structures::stable_hasher::HashStable<rustc_query_system::ich::hcx::StableHashingContext>>::hash_stable () from /usr/lib/librustc_driver-e81ecd0b9419698e.so\r\n#6  0x0000003f8d12cefc in <rustc_query_system::ich::hcx::StableHashingContext as rustc_hir::stable_hash_impls::HashStableContext>::hash_hir_expr::{closure#0} () from /usr/lib/librustc_driver-e81ecd0b9419698e.so\r\n#7  0x0000003f8d12c60c in <rustc_query_system::ich::hcx::StableHashingContext as rustc_hir::stable_hash_impls::HashStableContext>::hash_hir_expr () from /usr/lib/librustc_driver-e81ecd0b9419698e.so\r\n#8  0x0000003f8c040e56 in <rustc_query_system::ich::hcx::StableHashingContext as rustc_hir::stable_hash_impls::HashStableContext>::hash_body_id () from /usr/lib/librustc_driver-e81ecd0b9419698e.so\r\n#9  0x0000003f8c0831d0 in <rustc_hir::hir::OwnerNode as rustc_data_structures::stable_hasher::HashStable<rustc_query_system::ich::hcx::StableHashingContext>>::hash_stable () from /usr/lib/librustc_driver-e81ecd0b9419698e.so\r\n#10 0x0000003f8c053590 in <rustc_ast_lowering::LoweringContext>::make_owner_info () from /usr/lib/librustc_driver-e81ecd0b9419698e.so\r\n#11 0x0000003f8c03b138 in <rustc_ast_lowering::item::ItemLowerer as rustc_ast::visit::Visitor>::visit_item () from /usr/lib/librustc_driver-e81ecd0b9419698e.so\r\n#12 0x0000003f8c04f340 in rustc_ast_lowering::lower_crate () from /usr/lib/librustc_driver-e81ecd0b9419698e.so\r\n#13 0x0000003f8b9e5122 in <rustc_interface::queries::Queries>::global_ctxt () from /usr/lib/librustc_driver-e81ecd0b9419698e.so\r\n#14 0x0000003f8b8f3808 in rustc_interface::interface::run_compiler::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0} () from /usr/lib/librustc_driver-e81ecd0b9419698e.so\r\n#15 0x0000003f8b925ecc in std::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>> () from /usr/lib/librustc_driver-e81ecd0b9419698e.so\r\n#16 0x0000003f8b8eef4a in <<std::thread::Builder>::spawn_unchecked_<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>::{closure#1} as core::ops::function::FnOnce<()>>::call_once::{shim:vtable#0} () from /usr/lib/librustc_driver-e81ecd0b9419698e.so\r\n#17 0x0000003f8b1eade6 in std::sys::unix::thread::Thread::new::thread_start () from /usr/lib/libstd-5a982fb5ee18f2d1.so\r\n#18 0x0000003f8dc18b72 in start (p=0x3f857cd6b8) at src/thread/pthread_create.c:203\r\n#19 0x0000003f8dc1a248 in __clone () at src/thread/riscv64/clone.s:30\r\nBacktrace stopped: frame did not save the PC\r\n```\r\n\r\nIt looks to me like it is segfaulting while attempting to print a backtrace?\r\n\r\nFull log: [alpine-edge-riscv64-buildlog.txt](https://github.com/rust-lang/rust/files/8653441/alpine-edge-riscv64-buildlog.txt)\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.60.0\r\nbinary: rustc\r\ncommit-hash: unknown\r\ncommit-date: unknown\r\nhost: riscv64-alpine-linux-musl\r\nrelease: 1.60.0\r\nLLVM version: 13.0.1\r\n```\r\n\r\nAs you can see, this version uses a custom Alpine triplet with some minor patches applied which cause rustc to link against musl dynamically by default. You can find the full set of patches (including the once required to make rust-1.6.0 build on riscv64 musl in the first place) [here](https://gitlab.alpinelinux.org/alpine/aports/-/tree/29bf87127e65b3fdd6129e896b5e1dc385b8b420/community/rust). I don't think that the issue is caused by the patches that we are currently applying, hence reporting this here (if strictly needed I can also compile a rustc without our custom triplet, however, as noted above vanilla rust-1.6.0 wont compile without patches on riscv64 musl anyhow).\r\n\r\nAny ideas what might be causing this or tips on how to debug this further?\r\n\r\nRelated: https://github.com/rust-lang/rust/issues/93975\r\n\r\n---\r\n\r\nCC: @nekopsykose, @kaniini, @Cogitri", "closed_by": {"login": "nmeum", "id": 2326560, "node_id": "MDQ6VXNlcjIzMjY1NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2326560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nmeum", "html_url": "https://github.com/nmeum", "followers_url": "https://api.github.com/users/nmeum/followers", "following_url": "https://api.github.com/users/nmeum/following{/other_user}", "gists_url": "https://api.github.com/users/nmeum/gists{/gist_id}", "starred_url": "https://api.github.com/users/nmeum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nmeum/subscriptions", "organizations_url": "https://api.github.com/users/nmeum/orgs", "repos_url": "https://api.github.com/users/nmeum/repos", "events_url": "https://api.github.com/users/nmeum/events{/privacy}", "received_events_url": "https://api.github.com/users/nmeum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96876/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96876/timeline", "performed_via_github_app": null, "state_reason": "completed"}