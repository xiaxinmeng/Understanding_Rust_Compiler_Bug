{"url": "https://api.github.com/repos/rust-lang/rust/issues/21025", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/21025/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/21025/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/21025/events", "html_url": "https://github.com/rust-lang/rust/issues/21025", "id": 54079641, "node_id": "MDU6SXNzdWU1NDA3OTY0MQ==", "number": 21025, "title": "Type mismatch error should have spans if it's too long", "user": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-01-12T17:09:50Z", "updated_at": "2017-04-12T16:05:35Z", "closed_at": "2017-04-12T16:05:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\nerror: mismatched types: expected `session_types::Session<session_types::Cap<(), session_types::Rec<session_types::Offer<_, session_types::Rcv<collections::string::String, session_types::Choose<session_types::Snd<_, _>, session_types::Snd<_, session_types::Offer<_, session_types::Rcv<collections::string::String, session_types::Choose<session_types::Snd<(), _>, session_types::Snd<_, session_types::Rec<session_types::Offer<_, session_types::Offer<_, session_types::Snd<collections::string::String, session_types::Eps>>>>>>>>>>>>>>, (), _>`, found `session_types::Session<session_types::Cap<(), session_types::Rec<session_types::Offer<session_types::Snd<collections::string::String, session_types::Eps>, session_types::Rcv<collections::string::String, session_types::Choose<session_types::Snd<collections::string::String, session_types::Var<session_types::Z>>, session_types::Snd<collections::string::String, session_types::Offer<session_types::Snd<collections::string::String, session_types::Eps>, session_types::Rcv<collections::string::String, session_types::Choose<session_types::Snd<collections::string::String, session_types::Var<session_types::Z>>, session_types::Snd<collections::string::String, session_types::Rec<session_types::Offer<session_types::Snd<isize, session_types::Snd<isize, session_types::Var<session_types::Z>>>, session_types::Offer<session_types::Rcv<isize, session_types::Choose<session_types::Snd<collections::string::String, session_types::Snd<collections::string::String, session_types::Var<session_types::Z>>>, session_types::Snd<collections::string::String, session_types::Var<session_types::Z>>>>, session_types::Snd<collections::string::String, session_types::Eps>>>>>>>>>>>>>>, (), ()>` (expected (), found struct collections::string::String) \n```\n\nIt would be useful if there was a note as to where the `()` and `String` from `(expected (), found struct collections::string::String)` were for large types.\n\nAn additional note that's shown when the error report is above x (300?) characters which highlights the mismatched types (using something like our `^~~~~~` for code spans) would be useful.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/21025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/21025/timeline", "performed_via_github_app": null, "state_reason": "completed"}