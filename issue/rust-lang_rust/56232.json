{"url": "https://api.github.com/repos/rust-lang/rust/issues/56232", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56232/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56232/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56232/events", "html_url": "https://github.com/rust-lang/rust/issues/56232", "id": 384289297, "node_id": "MDU6SXNzdWUzODQyODkyOTc=", "number": 56232, "title": "Oh rust doctest lints, where art \u00feou? (Add a way to run clippy on doctests)", "user": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 1118559391, "node_id": "MDU6TGFiZWwxMTE4NTU5Mzkx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-doctests", "name": "A-doctests", "color": "f7e101", "default": false, "description": "Area: Documentation tests, run by rustdoc"}, {"id": 2513492750, "node_id": "MDU6TGFiZWwyNTEzNDkyNzUw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-clippy", "name": "A-clippy", "color": "f7e101", "default": false, "description": "Area: Clippy"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-11-26T11:32:47Z", "updated_at": "2022-09-15T16:49:21Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, doctests benefit from being code in numerous ways, such as being tested. However, this unfortunately does not (yet?) apply to clippy lints. For (an atmittedly contrived) example:\r\n\r\n```rust\r\n/// is the given number odd?\r\n///\r\n/// # Examples\r\n///\r\n/// ```rust\r\n///# use testdoclints::is_odd;\r\n/// let mut a = 1;\r\n/// a = a + 1; // this should lint `clippy::assign_op_pattern`\r\n/// assert!(!is_odd(a));\r\n/// ```\r\npub fn is_odd(x: usize) -> bool {\r\n    (x & 1) == 1\r\n}\r\n```\r\n\r\nRunning `cargo clippy` shows no lint.\r\n\r\nTo solve this, we'd need to be able to hook into the test code generation and present the resulting AST and HIR to our lints. I am unsure where to put this issue, but as clippy is not the only source of custom lints, I think solving it within rust/rustdoc makes sense.\r\n\r\ncc @Manishearth @oli-obk ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56232/reactions", "total_count": 10, "+1": 6, "-1": 0, "laugh": 4, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56232/timeline", "performed_via_github_app": null, "state_reason": null}