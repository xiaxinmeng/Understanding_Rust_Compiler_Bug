{"url": "https://api.github.com/repos/rust-lang/rust/issues/88185", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88185/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88185/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88185/events", "html_url": "https://github.com/rust-lang/rust/issues/88185", "id": 975761003, "node_id": "MDU6SXNzdWU5NzU3NjEwMDM=", "number": 88185, "title": "Invariant lifetime incorrectly extended until value is dropped", "user": {"login": "Cassy343", "id": 15149738, "node_id": "MDQ6VXNlcjE1MTQ5NzM4", "avatar_url": "https://avatars.githubusercontent.com/u/15149738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cassy343", "html_url": "https://github.com/Cassy343", "followers_url": "https://api.github.com/users/Cassy343/followers", "following_url": "https://api.github.com/users/Cassy343/following{/other_user}", "gists_url": "https://api.github.com/users/Cassy343/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cassy343/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cassy343/subscriptions", "organizations_url": "https://api.github.com/users/Cassy343/orgs", "repos_url": "https://api.github.com/users/Cassy343/repos", "events_url": "https://api.github.com/users/Cassy343/events{/privacy}", "received_events_url": "https://api.github.com/users/Cassy343/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-08-20T16:36:06Z", "updated_at": "2021-08-20T17:30:42Z", "closed_at": "2021-08-20T17:30:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\n#![feature(dropck_eyepatch)]\r\n\r\nuse std::{\r\n    cell::Cell,\r\n    marker::PhantomData\r\n};\r\n\r\nstruct Dummy<T> {\r\n    _marker: PhantomData<fn() -> T>\r\n}\r\n\r\nimpl<T> Dummy<T> {\r\n    fn new() -> Self {\r\n        Self {\r\n            _marker: PhantomData\r\n        }\r\n    }\r\n\r\n    fn none(&self) -> Option<T> {\r\n        None\r\n    }\r\n}\r\n\r\nunsafe impl<#[may_dangle] T> Drop for Dummy<T> {\r\n    fn drop(&mut self) {\r\n        // Do nothing\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let mut s = \"str\".to_owned();\r\n    let dummy = Dummy::new();\r\n\r\n    #[allow(unused_assignments, unused_variables)]\r\n    {\r\n        // This initial value defines some lifetime `'a` for the immutable borrow, and the cell\r\n        // makes it invariant\r\n        let mut borrow = Some(Cell::new(&s));\r\n\r\n        // Force `dummy` to adopt the type `Dummy<Cell<&'a String>>`\r\n        borrow = dummy.none();\r\n    }\r\n\r\n    // Error on this line\r\n    s.push('!');\r\n\r\n    // Force `dummy` to be dropped here\r\n    drop(dummy);\r\n}\r\n```\r\n\r\nI expected to see this happen:\r\nThe above code theoretically should compile because there is no feasible way that `Dummy` could \"use\" a `T` when it's dropped. First of all, `Dummy` only contains a `fn() -> T` as far as the type system is concerned. Second, its drop implementation states that `T` may dangle. Given these two facts, the compiler should be able to shorten the lifetime `'a` since dropping a `Dummy` will never access a `T` nor drop a `T`.\r\n\r\nInstead, this happened: the code did not compile due to the following error:\r\n```rs\r\nerror[E0502]: cannot borrow `s` as mutable because it is also borrowed as immutable\r\n   --> src/main.rs:157:5\r\n    |\r\n150 |         let mut borrow = Some(Cell::new(&s));\r\n    |                                         -- immutable borrow occurs here\r\n...\r\n157 |     s.push('!');\r\n    |     ^^^^^^^^^^^ mutable borrow occurs here\r\n...\r\n160 |     drop(dummy);\r\n    |          ----- immutable borrow later used here\r\n\r\nFor more information about this error, try `rustc --explain E0502`.\r\nerror: could not compile `rusttests` due to previous error\r\n```\r\n\r\nI encountered this error when originally filing an issue about dropping `std::iter::Empty` causing a similar error, however when I tried to create my own version of `Empty`, I encountered this error which seemed more concerning.\r\n\r\nThis error only happens if `dummy` is dropped after `s.push('!');`. The obvious fix in this example is to remove the explicit drop, however this error present the more general question of whether or not a type which contains a `T: 'a` should extend `'a` to the point where it is dropped even if it does not use or drop a `T`.\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.0-nightly (0fa319039 2021-08-12)\r\nbinary: rustc\r\ncommit-hash: 0fa3190394475a84360b34e074e719d519bc40f1\r\ncommit-date: 2021-08-12\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.56.0-nightly\r\nLLVM version: 12.0.1\r\n```", "closed_by": {"login": "Cassy343", "id": 15149738, "node_id": "MDQ6VXNlcjE1MTQ5NzM4", "avatar_url": "https://avatars.githubusercontent.com/u/15149738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cassy343", "html_url": "https://github.com/Cassy343", "followers_url": "https://api.github.com/users/Cassy343/followers", "following_url": "https://api.github.com/users/Cassy343/following{/other_user}", "gists_url": "https://api.github.com/users/Cassy343/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cassy343/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cassy343/subscriptions", "organizations_url": "https://api.github.com/users/Cassy343/orgs", "repos_url": "https://api.github.com/users/Cassy343/repos", "events_url": "https://api.github.com/users/Cassy343/events{/privacy}", "received_events_url": "https://api.github.com/users/Cassy343/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88185/timeline", "performed_via_github_app": null, "state_reason": "completed"}