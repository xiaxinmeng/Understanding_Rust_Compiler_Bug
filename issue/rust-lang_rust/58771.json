{"url": "https://api.github.com/repos/rust-lang/rust/issues/58771", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58771/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58771/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58771/events", "html_url": "https://github.com/rust-lang/rust/issues/58771", "id": 414994757, "node_id": "MDU6SXNzdWU0MTQ5OTQ3NTc=", "number": 58771, "title": "Lack of variance information for subtypes in error messages (E0495)", "user": {"login": "mitsuhiko", "id": 7396, "node_id": "MDQ6VXNlcjczOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/7396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitsuhiko", "html_url": "https://github.com/mitsuhiko", "followers_url": "https://api.github.com/users/mitsuhiko/followers", "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}", "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions", "organizations_url": "https://api.github.com/users/mitsuhiko/orgs", "repos_url": "https://api.github.com/users/mitsuhiko/repos", "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}", "received_events_url": "https://api.github.com/users/mitsuhiko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-27T08:10:46Z", "updated_at": "2023-01-08T11:41:34Z", "closed_at": "2023-01-07T22:28:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We tried to build some more complex traits and this lead to a situation where the compiler would refuse to compile the trait implementation for a certain type. The reason for this turned out to be that an embedded unsafe cell somewhere deep inside the type made it invariant.\r\n\r\nHere is an example of this:\r\n\r\n```rust\r\nuse std::cell::UnsafeCell;\r\nuse std::rc::Rc;\r\n\r\ntype Invariant<T> = UnsafeCell<T>;\r\ntype Covariant<T> = T;\r\n\r\n//type Wrapper<T> = Invariant<T>;\r\ntype Wrapper<T> = Covariant<T>;\r\n\r\ntrait AsSelf<'slf> {\r\n    type Ref: ?Sized;\r\n\r\n    fn as_self(&'slf self) -> &Self::Ref;\r\n}\r\n\r\nstruct Foo<'a>(Wrapper<&'a str>);\r\n\r\nimpl<'slf, 'd: 'slf> AsSelf<'slf> for Foo<'d> {\r\n    type Ref = Foo<'slf>;\r\n\r\n    fn as_self(&'slf self) -> &Self::Ref {\r\n        self\r\n    }\r\n}\r\n```\r\n\r\nThis compiles, but if `Wrapper<T>` is changed to the Invariant version, then it refuses to compile with this error:\r\n\r\n    error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'slf` due to conflicting requirements\r\n      --> src/lib.rs:21:42\r\n       |\r\n    21 |       fn as_self(&'slf self) -> &Self::Ref {\r\n       |  __________________________________________^\r\n    22 | |         self\r\n    23 | |     }\r\n       | |_____^\r\n       |\r\n    note: first, the lifetime cannot outlive the lifetime 'slf as defined on the impl at 18:6...\r\n      --> src/lib.rs:18:6\r\n       |\r\n    18 | impl<'slf, 'd: 'slf> AsSelf<'slf> for Foo<'d> {\r\n       |      ^^^^\r\n       = note: ...so that the types are compatible:\r\n               expected AsSelf<'slf>\r\n                  found AsSelf<'_>\r\n    note: but, the lifetime must be valid for the lifetime 'd as defined on the impl at 18:12...\r\n      --> src/lib.rs:18:12\r\n       |\r\n    18 | impl<'slf, 'd: 'slf> AsSelf<'slf> for Foo<'d> {\r\n       |            ^^\r\n       = note: ...so that the expression is assignable:\r\n               expected &'slf Foo<'_>\r\n                  found &'slf Foo<'d>\r\n    \r\n    error: aborting due to previous error\r\n\r\nThis is a pretty gnarly situation one finds itself in because a) the compiler says `rustc --explain E0495` but there is no extended help for E0495 and b) the actual problem here is rooted in variance and subtyping and not necessarily lifetimes as such. Would it be possible to indicate that the compiler considers `Wrapper<T>` invariant because it contains an `UnsafeCell<T>` (or `&mut T`) and maybe even where and link to the variance docs? This would help tremendously understanding what's happening here.\r\n\r\nI think this is somewhat related to #51243 and #42516", "closed_by": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58771/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58771/timeline", "performed_via_github_app": null, "state_reason": "completed"}