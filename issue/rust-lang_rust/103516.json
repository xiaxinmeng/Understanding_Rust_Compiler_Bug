{"url": "https://api.github.com/repos/rust-lang/rust/issues/103516", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103516/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103516/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103516/events", "html_url": "https://github.com/rust-lang/rust/issues/103516", "id": 1422163640, "node_id": "I_kwDOAAsO6M5UxH64", "number": 103516, "title": "Support for WebAssembly externref in non-web environment", "user": {"login": "kwerner8", "id": 100682506, "node_id": "U_kgDOBgBLCg", "avatar_url": "https://avatars.githubusercontent.com/u/100682506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kwerner8", "html_url": "https://github.com/kwerner8", "followers_url": "https://api.github.com/users/kwerner8/followers", "following_url": "https://api.github.com/users/kwerner8/following{/other_user}", "gists_url": "https://api.github.com/users/kwerner8/gists{/gist_id}", "starred_url": "https://api.github.com/users/kwerner8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kwerner8/subscriptions", "organizations_url": "https://api.github.com/users/kwerner8/orgs", "repos_url": "https://api.github.com/users/kwerner8/repos", "events_url": "https://api.github.com/users/kwerner8/events{/privacy}", "received_events_url": "https://api.github.com/users/kwerner8/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 474645165, "node_id": "MDU6TGFiZWw0NzQ2NDUxNjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-wasm", "name": "O-wasm", "color": "6e6ec0", "default": false, "description": "Target: WASM (WebAssembly), http://webassembly.org/"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2022-10-25T09:35:39Z", "updated_at": "2023-04-09T17:44:26Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "My goal is to compile a function written in Rust to WebAssembly which has as an input/output type `externref`. \r\nThen I want to call this function as an export in Wasmtime. So, this function will receive an `externref ` as an input and also return one.\r\n\r\nThe WebAssembly Code in the wat format should look similar to this:\r\n\r\n```\r\n(func (export \"func\") (param externref) (result externref)\r\n... WebAssembly Code ... )\r\n```\r\n\r\nI have seen that there exists [`wasm-bindgen`](https://crates.io/crates/wasm-bindgen) for browser hosts. \r\n\r\nIs there a way to produce `externref` as an input and output for exports of functions written in Rust that can be called in non-web environments like Wasmtime?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103516/timeline", "performed_via_github_app": null, "state_reason": null}