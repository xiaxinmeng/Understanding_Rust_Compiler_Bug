{"url": "https://api.github.com/repos/rust-lang/rust/issues/20094", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/20094/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/20094/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/20094/events", "html_url": "https://github.com/rust-lang/rust/issues/20094", "id": 52584095, "node_id": "MDU6SXNzdWU1MjU4NDA5NQ==", "number": 20094, "title": "at_exit_impl::push(...) in dynamic libraries causes fatal runtime error.", "user": {"login": "aatxe", "id": 744293, "node_id": "MDQ6VXNlcjc0NDI5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/744293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aatxe", "html_url": "https://github.com/aatxe", "followers_url": "https://api.github.com/users/aatxe/followers", "following_url": "https://api.github.com/users/aatxe/following{/other_user}", "gists_url": "https://api.github.com/users/aatxe/gists{/gist_id}", "starred_url": "https://api.github.com/users/aatxe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aatxe/subscriptions", "organizations_url": "https://api.github.com/users/aatxe/orgs", "repos_url": "https://api.github.com/users/aatxe/repos", "events_url": "https://api.github.com/users/aatxe/events{/privacy}", "received_events_url": "https://api.github.com/users/aatxe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36953, "node_id": "MDU6TGFiZWwzNjk1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-runtime", "name": "A-runtime", "color": "f7e101", "default": false, "description": "Area: std's runtime and \"pre-main\" init for handling backtraces, unwinds, stack overflows"}, {"id": 100522, "node_id": "MDU6TGFiZWwxMDA1MjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-crash", "name": "I-crash", "color": "e10c02", "default": false, "description": "Issue: The compiler crashes (SIGSEGV, SIGABRT, etc). Use I-ICE instead when the compiler panics."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-12-21T02:49:14Z", "updated_at": "2014-12-21T13:15:33Z", "closed_at": "2014-12-21T13:15:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If in one compilation unit you use `std::dynamic_lib` to load a dynamic library that in any way makes use of [`at_exit_impl::push(...)`](https://github.com/rust-lang/rust/blob/master/src/libstd/rt/at_exit_imp.rs#L68), it will crash with the follow message:\n\n```\nYou've met with a terrible fate, haven't you?\n\nfatal runtime error:  assertion failed: queue != 0\nAn unknown error occurred\n```\n\nrustc --version: `rustc 0.13.0-nightly (99d6956c3 2014-12-18 20:32:07 +0000)`\n\nHere's a minimal example.\n\nbin.rs\n\n``` rust\nuse std::dynamic_lib::DynamicLibrary;\n\nfn main() {\n    let lib = DynamicLibrary::open(Some(\"liblib.dylib\")).unwrap();\n    let f: fn() -> () = unsafe {\n        std::mem::transmute(lib.symbol::<u8>(\"wait_a_second\").unwrap())\n    };\n    f();\n}\n```\n\nlib.rs\n\n``` rust\n#![crate_type = \"dylib\"]\nuse std::io::timer::sleep;\nuse std::time::Duration;\n\n#[no_mangle]\npub fn wait_a_second() {\n    sleep(Duration::seconds(1));\n}\n```\n\nHere's what happens when I run it in lldb:\n\n```\n(lldb) run\nProcess 69773 launched: '.../dylib_bug/bin/target/bin' (x86_64)\n\nYou've met with a terrible fate, haven't you?\n\nfatal runtime error:  assertion failed: queue != 0\nProcess 69773 stopped\n* thread #1: tid = 0x394878, 0x000000010039ca33 liblib.dylib`util::abort::h8ba00c2136f26841IAa + 1139, queue = 'com.apple.main-thread', stop reason = EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)\n    frame #0: 0x000000010039ca33 liblib.dylib`util::abort::h8ba00c2136f26841IAa + 1139\nliblib.dylib`util::abort::h8ba00c2136f26841IAa + 1139:\n-> 0x10039ca33:  ud2    \n   0x10039ca35:  leaq   0x109874(%rip), %rdi      ; slice::_$u{5b}T$u{5d}.ops..SliceMut$LT$uint$C$$u{20}$u{5b}T$u{5d}$GT$::slice_or_fail_mut::_MSG_FILE_LINE::ha4d533c479b1fc1a63p\n   0x10039ca3c:  callq  0x1003ed000               ; panicking::panic::hac921c6f165f7fcfYil\n   0x10039ca41:  nop    \n```\n\nHere's a full backtrace:\n\n```\n(lldb) bt\n* thread #1: tid = 0x394878, 0x000000010039ca33 liblib.dylib`util::abort::h8ba00c2136f26841IAa + 1139, queue = 'com.apple.main-thread', stop reason = EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)\n  * frame #0: 0x000000010039ca33 liblib.dylib`util::abort::h8ba00c2136f26841IAa + 1139\n    frame #1: 0x00007fff00000002\n    frame #2: 0x000000010039cd0e liblib.dylib`at_exit_imp::push::hb6640ed5b53b1979pca + 606\n    frame #3: 0x0000000100354516 liblib.dylib`io::timer::Timer::new::hbb817820b4539044MTg + 1702\n    frame #4: 0x0000000100353961 liblib.dylib`io::timer::sleep::h01e98bc9d1a92f64mTg + 81\n    frame #5: 0x0000000100301726 liblib.dylib`lib::wait_a_second + 70 at lib.rs:7\n    frame #6: 0x0000000100001144 bin`bin::main + 244 at main.rs:8\n    frame #7: 0x000000010000b504 bin`thunk::F.Invoke$LT$A$C$$u{20}R$GT$::invoke::h9550677989481874930 + 52\n    frame #8: 0x000000010000b5e4 bin`rt::start::closure.32606 + 164\n    frame #9: 0x000000010000e3ac bin`rust_try_inner + 12\n    frame #10: 0x000000010000e396 bin`rust_try + 6\n    frame #11: 0x000000010000cdb7 bin`unwind::try::hd2914c9e1dfb1e85quc + 71\n    frame #12: 0x000000010000cc8c bin`task::Task::run::h1b91448272071078pLb + 124\n    frame #13: 0x000000010000b3bf bin`rt::start::h10cffa116e64677e8ky + 511\n    frame #14: 0x000000010000b1ad bin`rt::lang_start::h024b6f4a45c643bdpky + 109\n    frame #15: 0x00000001000011cf bin`main + 79\n    frame #16: 0x00007fff9422d5c9 libdyld.dylib`start + 1\n    frame #17: 0x00007fff9422d5c9 libdyld.dylib`start + 1\n```\n\nI've also found this to occur both with libserialize and hyper, both occurring in the same function.\nHere's a full stacktrace from [a (non-minimized) instance](https://github.com/aatxe/awebot-plugins/blob/68bd058f245dc42b5c8038588e6598b065d0a330/tell/src/lib.rs) using libseralize:\n\n```\n(lldb) bt\n* thread #1: tid = 0x38aad5, 0x0000000102d22833 libtell.dylib`util::abort::h8ba00c2136f26841IAa + 1139, queue = 'com.apple.main-thread', stop reason = EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)\n  * frame #0: 0x0000000102d22833 libtell.dylib`util::abort::h8ba00c2136f26841IAa + 1139\n    frame #1: 0x00007fff00000002\n    frame #2: 0x0000000102d22b0e libtell.dylib`at_exit_imp::push::hb6640ed5b53b1979pca + 606\n    frame #3: 0x0000000102c6c45a libtell.dylib`mod_enabled::h4686cd5e49874322pAa + 1290\n    frame #4: 0x0000000102c12b79 libtell.dylib`json::Decoder...Decoder$LT$DecoderError$GT$::read_struct::h8174437894480588352 + 281\n    frame #5: 0x0000000102c12a23 libtell.dylib`tell::data::Messages.::serialize::Decodable<__D, __E>::decode(__arg_0=0x00007fff5fbfde20) + 115 at lib.rs:51\n    frame #6: 0x0000000102c11e62 libtell.dylib`json::decode::h301605206192535520 + 498\n    frame #7: 0x0000000102c0b12e libtell.dylib`tell::data::Messages::load_internal + 1358 at lib.rs:70\n    frame #8: 0x0000000102c07a67 libtell.dylib`tell::data::Messages::load + 71 at lib.rs:58\n    frame #9: 0x0000000102c05add libtell.dylib`tell::process_internal<std::io::buffered::BufferedReader<irc::conn::NetStream>,std::io::buffered::BufferedWriter<irc::conn::NetStream>>(server=0x00007fff5fbff338, source=(data_ptr = \"awe!awe@irc.pdgn.colibibVMSG \", length = 19), command=(data_ptr = \"PRIVMSG\", length = 7), args=&[&str] at 0x00007fff5fbfe718) + 413 at lib.rs:29\n    frame #10: 0x0000000102c01680 libtell.dylib`tell::process(server=0x00007fff5fbff338, message=Message at 0x00007fff5fbfe8c0) + 768 at lib.rs:22\n    frame #11: 0x0000000100027385 awebot`awebot::process_message_dynamic(server=0x00007fff5fbff338, message=Message at 0x00007fff5fbfeed8, cache=0x00007fff5fbff290) + 1781 at <std macros>:60\n    frame #12: 0x0000000100001acb awebot`awebot::main + 1259 at main.rs:22\n    frame #13: 0x00000001001258b4 awebot`thunk::F.Invoke$LT$A$C$$u{20}R$GT$::invoke::h9550677989481874930 + 52\n    frame #14: 0x0000000100125994 awebot`rt::start::closure.32606 + 164\n    frame #15: 0x0000000100128f6c awebot`rust_try_inner + 12\n    frame #16: 0x0000000100128f56 awebot`rust_try + 6\n    frame #17: 0x0000000100127977 awebot`unwind::try::hd2914c9e1dfb1e85quc + 71\n    frame #18: 0x000000010012784c awebot`task::Task::run::h1b91448272071078pLb + 124\n    frame #19: 0x000000010012576f awebot`rt::start::h10cffa116e64677e8ky + 511\n    frame #20: 0x000000010012555d awebot`rt::lang_start::h024b6f4a45c643bdpky + 109\n    frame #21: 0x0000000100001b4f awebot`main + 79\n    frame #22: 0x00007fff9422d5c9 libdyld.dylib`start + 1\n    frame #23: 0x00007fff9422d5c9 libdyld.dylib`start + 1\n```\n", "closed_by": {"login": "aatxe", "id": 744293, "node_id": "MDQ6VXNlcjc0NDI5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/744293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aatxe", "html_url": "https://github.com/aatxe", "followers_url": "https://api.github.com/users/aatxe/followers", "following_url": "https://api.github.com/users/aatxe/following{/other_user}", "gists_url": "https://api.github.com/users/aatxe/gists{/gist_id}", "starred_url": "https://api.github.com/users/aatxe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aatxe/subscriptions", "organizations_url": "https://api.github.com/users/aatxe/orgs", "repos_url": "https://api.github.com/users/aatxe/repos", "events_url": "https://api.github.com/users/aatxe/events{/privacy}", "received_events_url": "https://api.github.com/users/aatxe/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/20094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/20094/timeline", "performed_via_github_app": null, "state_reason": "completed"}