{"url": "https://api.github.com/repos/rust-lang/rust/issues/78168", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78168/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78168/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78168/events", "html_url": "https://github.com/rust-lang/rust/issues/78168", "id": 725995819, "node_id": "MDU6SXNzdWU3MjU5OTU4MTk=", "number": 78168, "title": "Improve error for missing braces in const block", "user": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 2306075829, "node_id": "MDU6TGFiZWwyMzA2MDc1ODI5", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-inline_const", "name": "F-inline_const", "color": "f9c0cc", "default": false, "description": "Inline constants (aka: const blocks, const expressions, anonymous constants)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-10-20T22:46:27Z", "updated_at": "2021-04-06T00:12:39Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Someone may try to write code like this ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=14c47489294acc468ca46b036fef4086)):\r\n\r\n```rust\r\n#![allow(incomplete_features)]\r\n#![feature(inline_const)]\r\n\r\nfn foo() {\r\n    let x = 2;\r\n    match x {\r\n        const 2 => {}\r\n    }\r\n}\r\n```\r\n\r\nYet this produces these misleading errors:\r\n\r\n```rust\r\n   Compiling playground v0.0.1 (/playground)\r\nerror: expected identifier, found keyword `const`\r\n --> src/lib.rs:7:9\r\n  |\r\n7 |         const 2 => {}\r\n  |         ^^^^^ expected identifier, found keyword\r\n\r\nerror: expected one of `=>`, `@`, `if`, or `|`, found `2`\r\n --> src/lib.rs:7:15\r\n  |\r\n7 |         const 2 => {}\r\n  |               ^ expected one of `=>`, `@`, `if`, or `|`\r\n\r\nerror: aborting due to 2 previous errors\r\n\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n---\r\n\r\nAnother example ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=b4eaa0866c85e582f1b7770910764a82)):\r\n\r\n```rust\r\n#![allow(incomplete_features)]\r\n#![feature(inline_const)]\r\n\r\nfn foo() {\r\n    let x = const 2;\r\n}\r\n```\r\n\r\nError:\r\n\r\n```rust\r\n   Compiling playground v0.0.1 (/playground)\r\nerror: expected expression, found keyword `const`\r\n --> src/lib.rs:5:13\r\n  |\r\n5 |     let x = const 2;\r\n  |             ^^^^^ expected expression\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78168/timeline", "performed_via_github_app": null, "state_reason": null}