{"url": "https://api.github.com/repos/rust-lang/rust/issues/53868", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53868/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53868/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53868/events", "html_url": "https://github.com/rust-lang/rust/issues/53868", "id": 356108586, "node_id": "MDU6SXNzdWUzNTYxMDg1ODY=", "number": 53868, "title": "Show a suggestion after the compiler fails when you implement `from` and forget to mark as `pub`", "user": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 66893153, "node_id": "MDU6TGFiZWw2Njg5MzE1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-visibility", "name": "A-visibility", "color": "f7e101", "default": false, "description": "Area: visibility/privacy modifiers such as `pub`"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-31T20:04:57Z", "updated_at": "2022-11-11T04:05:10Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Let say we have a `main.rs` like this ...\r\n\r\n```rust\r\nuse std::io::{self, Write};\r\nuse std::process::Command;\r\n\r\nmod cmd;\r\nmod error;\r\n\r\nuse cmd::Cmd;\r\nuse error::Error;\r\n\r\nfn main() -> Result<(), io::Error> {\r\n    let stdin = io::stdin();\r\n    let mut stdout = io::stdout();\r\n\r\n    loop {\r\n        let mut line = String::new();\r\n        print!(\"> \");\r\n        stdout.flush()?;\r\n        stdin.read_line(&mut line)?;\r\n\r\n        match Cmd::from(&line) {\r\n            Ok(cmd) => {\r\n                let output = Command::new(cmd.binary).args(cmd.args).output()?;\r\n                print!(\"{}\", String::from_utf8_lossy(&output.stdout));\r\n            }\r\n            Err(Error::NoBinary) => {}\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nan `error.rs` like this ...\r\n\r\n```rust\r\n#[derive(Debug)]\r\npub enum Error {\r\n    NoBinary,\r\n}\r\n```\r\n\r\nand `cmd.rs` like this ...\r\n\r\n```rust\r\nuse error::Error;\r\n\r\n// A command consists of a binary and its arguments\r\npub struct Cmd<'a> {\r\n    pub binary: &'a str,\r\n    args: Vec<&'a str>,\r\n}\r\n\r\nimpl<'a> Cmd<'a> {\r\n    // Extract the command and its arguments from the commandline\r\n    fn from(line: &'a str) -> Result<Self, Error> {\r\n        let mut parts = line.split_whitespace();\r\n        let binary = parts.nth(0).ok_or_else(|| Error::NoBinary)?;\r\n        let args = parts.collect();\r\n\r\n        Ok(Cmd { binary, args })\r\n    }\r\n}\r\n```\r\n\r\nIf you try to compile this you get the following error ...\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:20:25\r\n   |\r\n20 |         match Cmd::from(&line) {\r\n   |                         ^^^^^ expected struct `cmd::Cmd`, found reference\r\n   |\r\n   = note: expected type `cmd::Cmd<'_>`\r\n              found type `&std::string::String`\r\n\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:21:13\r\n   |\r\n21 |             Ok(cmd) => {\r\n   |             ^^^^^^^ expected struct `cmd::Cmd`, found enum `std::result::Result`\r\n   |\r\n   = note: expected type `cmd::Cmd<'_>`\r\n              found type `std::result::Result<_, _>`\r\n\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:25:13\r\n   |\r\n25 |             Err(Error::NoBinary) => {}\r\n   |             ^^^^^^^^^^^^^^^^^^^^ expected struct `cmd::Cmd`, found enum `std::result::Result`\r\n   |\r\n   = note: expected type `cmd::Cmd<'_>`\r\n              found type `std::result::Result<_, _>`\r\n```\r\n\r\nThe code is wrong because the `from` fn is not `pub`. As soon as you mark it as `pub` everything works as expected.\r\nThe problem is that I'd expect a mention in the error report that the `from` considered by the compiler is not the one you're trying to call. It's just that you forgot to mark the fn as `pub`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53868/timeline", "performed_via_github_app": null, "state_reason": null}