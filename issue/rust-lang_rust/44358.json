{"url": "https://api.github.com/repos/rust-lang/rust/issues/44358", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44358/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44358/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44358/events", "html_url": "https://github.com/rust-lang/rust/issues/44358", "id": 255440313, "node_id": "MDU6SXNzdWUyNTU0NDAzMTM=", "number": 44358, "title": "Expose min and max values in benchmarks", "user": {"login": "str4d", "id": 4993799, "node_id": "MDQ6VXNlcjQ5OTM3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/str4d", "html_url": "https://github.com/str4d", "followers_url": "https://api.github.com/users/str4d/followers", "following_url": "https://api.github.com/users/str4d/following{/other_user}", "gists_url": "https://api.github.com/users/str4d/gists{/gist_id}", "starred_url": "https://api.github.com/users/str4d/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/str4d/subscriptions", "organizations_url": "https://api.github.com/users/str4d/orgs", "repos_url": "https://api.github.com/users/str4d/repos", "events_url": "https://api.github.com/users/str4d/events{/privacy}", "received_events_url": "https://api.github.com/users/str4d/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 602425123, "node_id": "MDU6TGFiZWw2MDI0MjUxMjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-dev-tools", "name": "T-dev-tools", "color": "bfd4f2", "default": false, "description": "Relevant to the dev-tools subteam, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 630810559, "node_id": "MDU6TGFiZWw2MzA4MTA1NTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-libtest", "name": "A-libtest", "color": "f7e101", "default": false, "description": "Area: #[test] related"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-05T23:48:15Z", "updated_at": "2020-06-18T18:05:51Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, `cargo bench` prints output along these lines:\r\n\r\n```\r\ntest bls12_381::bench_pairing_final_exponentiation ... bench:   1,753,823 ns/iter (+/- 30,711)\r\ntest bls12_381::bench_pairing_full                 ... bench:   2,641,309 ns/iter (+/- 35,774)\r\ntest bls12_381::bench_pairing_g1_preparation       ... bench:      13,801 ns/iter (+/- 293)\r\ntest bls12_381::bench_pairing_g2_preparation       ... bench:     233,722 ns/iter (+/- 11,857)\r\ntest bls12_381::bench_pairing_miller_loop          ... bench:     618,548 ns/iter (+/- 26,680)\r\ntest bls12_381::ec::g1::bench_g1_add_assign        ... bench:       1,189 ns/iter (+/- 53)\r\n```\r\n\r\nThe values are derived [here](https://github.com/rust-lang/rust/blob/7f054990b6bb19e15750a4442a24941cc157acb6/src/libtest/lib.rs#L844-L845), from which we can determine that the key value is a median, which is good! Unfortunately, the other value given is a range, which is not particularly useful:\r\n\r\n- As-printed, it looks like [an error or standard deviation](https://en.wikipedia.org/wiki/Plus-minus_sign#In_statistics); either mis-interpretation would mean that the uncertainty is overstated by at least a factor of two!\r\n- The range itself, in the context of a `+/-`, only makes sense if the underlying benchmark has a normal (Gaussian) distribution. But depending on the benchmark, that may not be the case. Say the output is `100 +/- 20`: there is no way to distinguish between a `(min, max)` of `(81, 101)` versus `(99, 119)`, which should be interpreted very differently by the programmer.\r\n\r\nI would personally like to gain access to the min and max values for the purpose of CI benchmarks (e.g. [here](https://speed.z.cash/timeline/?exe=1&base=1%2B9&ben=time+solveequihash&env=1&revs=50&equid=off&quarts=on&extr=on)), so I'd like to see those values exposed either by default, or accessible via a flag. Alternatively (or in addition), the range should be replaced with a standard deviation or standard error.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44358/reactions", "total_count": 6, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 2, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44358/timeline", "performed_via_github_app": null, "state_reason": null}