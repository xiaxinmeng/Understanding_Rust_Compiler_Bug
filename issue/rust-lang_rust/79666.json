{"url": "https://api.github.com/repos/rust-lang/rust/issues/79666", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79666/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79666/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79666/events", "html_url": "https://github.com/rust-lang/rust/issues/79666", "id": 756408684, "node_id": "MDU6SXNzdWU3NTY0MDg2ODQ=", "number": 79666, "title": "ICE with const generics and GATs", "user": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-12-03T17:41:44Z", "updated_at": "2021-02-13T05:38:00Z", "closed_at": "2021-02-13T05:38:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\n#![feature(const_generics)]\r\n#![feature(generic_associated_types)]\r\n\r\ntrait A {\r\n    type B<const N: usize>;\r\n    \r\n    fn foo<const N: usize>(&self) -> Self::B<{N}>;\r\n}\r\n```\r\n\r\n[Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=b9da5a6d412079faf1ecc54d755ef451)\r\n\r\n\r\n### Meta\r\n```\r\nrustc 1.50.0-nightly (1c389ffef 2020-11-24)\r\nbinary: rustc\r\ncommit-hash: 1c389ffeff814726dec325f0f2b0c99107df2673\r\ncommit-date: 2020-11-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.50.0-nightly\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nwarning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/main.rs:1:12\r\n  |\r\n1 | #![feature(const_generics)]\r\n  |            ^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\r\n  = help: consider using `min_const_generics` instead, which is more stable and complete\r\n\r\nwarning: the feature `generic_associated_types` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/main.rs:2:12\r\n  |\r\n2 | #![feature(generic_associated_types)]\r\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: see issue #44265 <https://github.com/rust-lang/rust/issues/44265> for more information\r\n\r\nwarning: Error finalizing incremental compilation session directory `/home/cynecx/dev/rust-ice/target/debug/incremental/rust_ice-2od6n63huil2c/s-ftn1ij8uum-1wj4523-working`: No such file or directory (os error 2)\r\n\r\nwarning: 3 warnings emitted\r\n\r\nerror: internal compiler error: unexpected const parent path Ty(Ty { hir_id: HirId { owner: DefId(0:6 ~ rust_ice[b006]::A::foo), local_id: 7 }, kind: Path(TypeRelative(Ty { hir_id: HirId { owner: DefId(0:6 ~ rust_ice[b006]::A::foo), local_id: 9 }, kind: Path(Resolved(None, Path { span: src/main.rs:7:38: 7:50 (#0), res: SelfTy(Some(DefId(0:3 ~ rust_ice[b006]::A)), None), segments: [PathSegment { ident: Self#0, hir_id: Some(HirId { owner: DefId(0:6 ~ rust_ice[b006]::A::foo), local_id: 8 }), res: Some(SelfTy(Some(DefId(0:3 ~ rust_ice[b006]::A)), None)), args: None, infer_args: false }] })), span: src/main.rs:7:38: 7:50 (#0) }, PathSegment { ident: B#0, hir_id: Some(HirId { owner: DefId(0:6 ~ rust_ice[b006]::A::foo), local_id: 15 }), res: Some(Err), args: Some(GenericArgs { args: [Const(ConstArg { value: AnonConst { hir_id: HirId { owner: DefId(0:6 ~ rust_ice[b006]::A::foo), local_id: 10 }, body: BodyId { hir_id: HirId { owner: DefId(0:6 ~ rust_ice[b006]::A::foo), local_id: 14 } } }, span: src/main.rs:7:46: 7:49 (#0) })], bindings: [], parenthesized: false }), infer_args: false })), span: src/main.rs:7:38: 7:50 (#0) })\r\n --> src/main.rs:7:46\r\n  |\r\n7 |     fn foo<const N: usize>(&self) -> Self::B<{N}>;\r\n  |                                              ^^^\r\n  |\r\n  = note: delayed at compiler/rustc_typeck/src/collect/type_of.rs:83:34\r\n\r\nerror: internal compiler error: unexpected const parent in type_of_def_id(): Ty(Ty { hir_id: HirId { owner: DefId(0:6 ~ rust_ice[b006]::A::foo), local_id: 7 }, kind: Path(TypeRelative(Ty { hir_id: HirId { owner: DefId(0:6 ~ rust_ice[b006]::A::foo), local_id: 9 }, kind: Path(Resolved(None, Path { span: src/main.rs:7:38: 7:50 (#0), res: SelfTy(Some(DefId(0:3 ~ rust_ice[b006]::A)), None), segments: [PathSegment { ident: Self#0, hir_id: Some(HirId { owner: DefId(0:6 ~ rust_ice[b006]::A::foo), local_id: 8 }), res: Some(SelfTy(Some(DefId(0:3 ~ rust_ice[b006]::A)), None)), args: None, infer_args: false }] })), span: src/main.rs:7:38: 7:50 (#0) }, PathSegment { ident: B#0, hir_id: Some(HirId { owner: DefId(0:6 ~ rust_ice[b006]::A::foo), local_id: 15 }), res: Some(Err), args: Some(GenericArgs { args: [Const(ConstArg { value: AnonConst { hir_id: HirId { owner: DefId(0:6 ~ rust_ice[b006]::A::foo), local_id: 10 }, body: BodyId { hir_id: HirId { owner: DefId(0:6 ~ rust_ice[b006]::A::foo), local_id: 14 } } }, span: src/main.rs:7:46: 7:49 (#0) })], bindings: [], parenthesized: false }), infer_args: false })), span: src/main.rs:7:38: 7:50 (#0) })\r\n  |\r\n  = note: delayed at compiler/rustc_typeck/src/collect/type_of.rs:334:26\r\n\r\nerror: internal compiler error: TyKind::Error constructed but no error reported\r\n  |\r\n  = note: delayed at compiler/rustc_typeck/src/check/coercion.rs:1260:42\r\n\r\nerror: internal compiler error: TyKind::Error constructed but no error reported\r\n  |\r\n  = note: delayed at compiler/rustc_typeck/src/check/fn_ctxt/checks.rs:707:27\r\n\r\nerror: internal compiler error: TyKind::Error constructed but no error reported\r\n  |\r\n  = note: delayed at compiler/rustc_typeck/src/check/coercion.rs:153:49\r\n\r\nerror: internal compiler error: TyKind::Error constructed but no error reported\r\n  |\r\n  = note: delayed at compiler/rustc_typeck/src/check/coercion.rs:867:53\r\n\r\nerror: internal compiler error: cat_expr Errd\r\n --> src/main.rs:7:46\r\n  |\r\n7 |     fn foo<const N: usize>(&self) -> Self::B<{N}>;\r\n  |                                              ^^^\r\n  |\r\n  = note: delayed at compiler/rustc_typeck/src/check/regionck.rs:405:31\r\n\r\nerror: internal compiler error: TyKind::Error constructed but no error reported\r\n  |\r\n  = note: delayed at compiler/rustc_mir_build/src/build/mod.rs:684:18\r\n\r\nerror: internal compiler error: mir_const_qualif: MIR had errors\r\n --> src/main.rs:7:46\r\n  |\r\n7 |     fn foo<const N: usize>(&self) -> Self::B<{N}>;\r\n  |                                              ^^^\r\n  |\r\n  = note: delayed at compiler/rustc_mir/src/transform/mod.rs:229:18\r\n\r\nerror: internal compiler error: PromoteTemps: MIR had errors\r\n --> src/main.rs:7:46\r\n  |\r\n7 |     fn foo<const N: usize>(&self) -> Self::B<{N}>;\r\n  |                                              ^^^\r\n  |\r\n  = note: delayed at compiler/rustc_mir/src/transform/promote_consts.rs:55:22\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:8 ~ rust_ice[b006]::A::foo::{constant#0}) (\"return type\"): bad type [type error]\r\n --> src/main.rs:7:46\r\n  |\r\n7 |     fn foo<const N: usize>(&self) -> Self::B<{N}>;\r\n  |                                              ^^^\r\n  |\r\n  = note: delayed at compiler/rustc_mir/src/borrow_check/type_check/mod.rs:253:27\r\n\r\nerror: internal compiler error: TyKind::Error constructed but no error reported\r\n  |\r\n  = note: delayed at compiler/rustc_mir/src/borrow_check/type_check/mod.rs:715:20\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:8 ~ rust_ice[b006]::A::foo::{constant#0}) (LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: [type error], user_ty: None, source_info: SourceInfo { span: src/main.rs:7:46: 7:49 (#0), scope: scope[0] } }): bad type [type error]\r\n --> src/main.rs:7:46\r\n  |\r\n7 |     fn foo<const N: usize>(&self) -> Self::B<{N}>;\r\n  |                                              ^^^\r\n  |\r\n  = note: delayed at compiler/rustc_mir/src/borrow_check/type_check/mod.rs:253:27\r\n\r\n```\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', compiler/rustc_errors/src/lib.rs:974:13\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/std/src/panicking.rs:493:5\r\n   1: std::panicking::begin_panic_fmt\r\n             at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/std/src/panicking.rs:435:5\r\n   2: rustc_errors::HandlerInner::flush_delayed\r\n   3: <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop\r\n   4: core::ptr::drop_in_place\r\n   5: <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop\r\n   6: core::ptr::drop_in_place\r\n   7: rustc_span::with_source_map\r\n   8: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (1c389ffef 2020-11-24) running on x86_64-unknown-linux-gnu\r\n\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"BoxyUwU\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79666/timeline", "performed_via_github_app": null, "state_reason": "completed"}