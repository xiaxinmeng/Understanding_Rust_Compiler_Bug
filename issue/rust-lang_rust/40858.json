{"url": "https://api.github.com/repos/rust-lang/rust/issues/40858", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40858/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40858/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40858/events", "html_url": "https://github.com/rust-lang/rust/issues/40858", "id": 217315454, "node_id": "MDU6SXNzdWUyMTczMTU0NTQ=", "number": 40858, "title": "Slow compilation on large project when nothing changes", "user": {"login": "jonhoo", "id": 176295, "node_id": "MDQ6VXNlcjE3NjI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/176295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonhoo", "html_url": "https://github.com/jonhoo", "followers_url": "https://api.github.com/users/jonhoo/followers", "following_url": "https://api.github.com/users/jonhoo/following{/other_user}", "gists_url": "https://api.github.com/users/jonhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonhoo/subscriptions", "organizations_url": "https://api.github.com/users/jonhoo/orgs", "repos_url": "https://api.github.com/users/jonhoo/repos", "events_url": "https://api.github.com/users/jonhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonhoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-03-27T17:18:16Z", "updated_at": "2017-09-15T18:10:36Z", "closed_at": "2017-09-15T18:10:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm working on a [decently large](https://github.com/mit-pdos/distributary/) Rust project, and have lately found compilation times (especially for `cargo test`) to be excruciatingly slow. In particular, from a complete build, followed by a `touch src/lib.rs` takes ~80s with the latest nightly and `CARGO_INCREMENTAL=1`:\r\n\r\n```console\r\n$ env | grep CARGO\r\nCARGO_INCREMENTAL=1\r\n$ git clone https://github.com/mit-pdos/distributary.git\r\n$ git checkout 2fd16356a15ab3b0fbb7dbd9cbc85add984251b7 # HEAD has a workaround\r\n$ cd distributary\r\n$ cargo --version\r\ncargo 0.19.0-nightly (c995e9eb5 2017-03-17)\r\n$ rustc --version\r\nrustc 1.17.0-nightly (7846dbe0c 2017-03-26)\r\n$ cargo clean\r\n$ cargo t --no-run\r\n   Compiling nom v1.2.4\r\n   Compiling unicode-normalization v0.1.4\r\n   Compiling serde v0.9.11\r\n...\r\n   Compiling distributary v0.1.0 (file:///home/jon/dev/projects/distributary)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 362.66 secs\r\n$ cargo t --no-run\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.1 secs\r\n$ touch src/lib.rs\r\n$ cargo t --no-run\r\n   Compiling distributary v0.1.0 (file:///home/jon/dev/projects/distributary)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 80.84 secs\r\n```\r\n\r\n@mbrubeck suggested on #rust that I try using ld.gold. That helps, but the slowdown is still there:\r\n```console\r\n$ cargo clean\r\n$ env RUSTFLAGS=\"-C link-args=-fuse-ld=gold\" cargo t --no-run\r\n   ...\r\n   Compiling distributary v0.1.0 (file:///home/jon/dev/projects/distributary)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 276.47 secs\r\n$ touch src/lib.rs\r\n$ env RUSTFLAGS=\"-C link-args=-fuse-ld=gold\" cargo t --no-run\r\n   Compiling distributary v0.1.0 (file:///home/jon/dev/projects/distributary)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 45.35 secs\r\n```\r\n\r\nPart of the issue seems to be that `rust` re-links the library and all binaries (of which this particular project has 11) each time, and double-compiles a bunch of things (due to `#[cfg(test)]`). Compiling just the unit tests in `lib` is better, though still somewhat slow, and obviously insufficient (I also want to compile and run `tests/`):\r\n```console\r\n$ touch src/lib.rs\r\n$ env RUSTFLAGS=\"-C link-args=-fuse-ld=gold\" cargo rustc --lib -- --test\r\n   Compiling distributary v0.1.0 (file:///home/jon/dev/projects/distributary)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 11.72 secs\r\n```\r\n\r\n@aidanhs observed that it is actually *necessary* to compile the binaries, because the tests script may depend on them (e.g., [cargo](https://github.com/rust-lang/cargo/blob/master/src/cargo/ops/cargo_rustc/context.rs#L646)), or because the binaries themselves contain tests. I tried using `cargo test --test lib --lib` to avoid compiling binaries, but that doesn't seem to work correctly.\r\n\r\nI'm not entirely sure exactly what the right fix for this is, but 12s compilation time for the core library (and 80s for the full crate) when nothing has changed seems excessive, and just what incremental compile was intended to help with. Having a way to say \"don't compile binaries when testing\" would also be nice, and save a decent chunk of compilation time for projects with many binaries, but I'm guessing that's more of an orthogonal cargo issue?", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40858/timeline", "performed_via_github_app": null, "state_reason": "completed"}