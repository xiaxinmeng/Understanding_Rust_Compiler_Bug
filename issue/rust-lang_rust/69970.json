{"url": "https://api.github.com/repos/rust-lang/rust/issues/69970", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69970/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69970/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69970/events", "html_url": "https://github.com/rust-lang/rust/issues/69970", "id": 580381503, "node_id": "MDU6SXNzdWU1ODAzODE1MDM=", "number": 69970, "title": "reordering type parameters causes const generics ICE", "user": {"login": "Nugine", "id": 30099658, "node_id": "MDQ6VXNlcjMwMDk5NjU4", "avatar_url": "https://avatars.githubusercontent.com/u/30099658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nugine", "html_url": "https://github.com/Nugine", "followers_url": "https://api.github.com/users/Nugine/followers", "following_url": "https://api.github.com/users/Nugine/following{/other_user}", "gists_url": "https://api.github.com/users/Nugine/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nugine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nugine/subscriptions", "organizations_url": "https://api.github.com/users/Nugine/orgs", "repos_url": "https://api.github.com/users/Nugine/repos", "events_url": "https://api.github.com/users/Nugine/events{/privacy}", "received_events_url": "https://api.github.com/users/Nugine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-13T05:32:51Z", "updated_at": "2020-03-21T16:41:35Z", "closed_at": "2020-03-21T16:41:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Code\r\n\r\n```rust\r\n#![feature(const_generics)]\r\n\r\nstruct Bad<const N: usize, T> {\r\n    arr: [u8; { N }],\r\n    another: T,\r\n}\r\n\r\n// struct Good<T, const N: usize> {\r\n//     arr: [u8; { N }],\r\n//     another: T,\r\n// }\r\n\r\nfn main() {}\r\n```\r\n\r\n### Meta\r\n\r\n`rustc +nightly --version --verbose`:\r\n```\r\nrustc 1.43.0-nightly (c20d7eecb 2020-03-11)\r\nbinary: rustc\r\ncommit-hash: c20d7eecbc0928b57da8fe30b2ef8528e2bdd5be\r\ncommit-date: 2020-03-11\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.43.0-nightly\r\nLLVM version: 9.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: type parameters must be declared prior to const parameters\r\n --> src/main.rs:3:28\r\n  |\r\n3 | struct Bad<const N: usize, T> {\r\n  |           -----------------^- help: reorder the parameters: lifetimes, then types, then consts: `<T, const N: usize>`\r\n\r\nwarning: the feature `const_generics` is incomplete and may cause the compiler to crash\r\n --> src/main.rs:1:12\r\n  |\r\n1 | #![feature(const_generics)]\r\n  |            ^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n\r\nthread 'rustc' panicked at 'index out of bounds: the len is 1 but the index is 1', src/librustc_typeck/collect.rs:1318:54\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.0-nightly (c20d7eecb 2020-03-11) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: type parameters must be declared prior to const parameters\r\n --> src/main.rs:3:28\r\n  |\r\n3 | struct Bad<const N: usize, T> {\r\n  |           -----------------^- help: reorder the parameters: lifetimes, then types, then consts: `<T, const N: usize>`\r\n\r\nwarning: the feature `const_generics` is incomplete and may cause the compiler to crash\r\n --> src/main.rs:1:12\r\n  |\r\n1 | #![feature(const_generics)]\r\n  |            ^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n\r\nthread 'rustc' panicked at 'index out of bounds: the len is 1 but the index is 1', src/librustc_typeck/collect.rs:1318:54\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1063\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1426\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:474\r\n  12: rust_begin_unwind\r\n             at src/libstd/panicking.rs:378\r\n  13: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:111\r\n  14: core::panicking::panic_bounds_check\r\n             at src/libcore/panicking.rs:69\r\n  15: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut\r\n  16: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::spec_extend\r\n  17: rustc_typeck::collect::generics_of\r\n  18: rustc::ty::query::__query_compute::generics_of\r\n  19: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::generics_of>::compute\r\n  20: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  21: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  22: <rustc_typeck::collect::CollectItemTypesVisitor as rustc_hir::intravisit::Visitor>::visit_item\r\n  23: rustc::hir::map::Map::visit_item_likes_in_module\r\n  24: rustc_typeck::collect::collect_mod_item_types\r\n  25: rustc::ty::query::__query_compute::collect_mod_item_types\r\n  26: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::collect_mod_item_types>::compute\r\n  27: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  28: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  29: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::ensure_query\r\n  30: rustc_typeck::check_crate\r\n  31: rustc_interface::passes::analysis\r\n  32: rustc::ty::query::__query_compute::analysis\r\n  33: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  34: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  35: rustc::ty::context::tls::enter_global\r\n  36: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  37: scoped_tls::ScopedKey<T>::set\r\n  38: rustc_ast::attr::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.0-nightly (c20d7eecb 2020-03-11) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [generics_of] processing `Bad`\r\n#1 [collect_mod_item_types] collecting item types in top-level module\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69970/timeline", "performed_via_github_app": null, "state_reason": "completed"}