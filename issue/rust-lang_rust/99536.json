{"url": "https://api.github.com/repos/rust-lang/rust/issues/99536", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99536/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99536/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99536/events", "html_url": "https://github.com/rust-lang/rust/issues/99536", "id": 1312131211, "node_id": "I_kwDOAAsO6M5ONYiL", "number": 99536, "title": "nightly 2022-06-29 rejects previously compiling code with missing trait implementations", "user": {"login": "hawkw", "id": 2796466, "node_id": "MDQ6VXNlcjI3OTY0NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2796466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hawkw", "html_url": "https://github.com/hawkw", "followers_url": "https://api.github.com/users/hawkw/followers", "following_url": "https://api.github.com/users/hawkw/following{/other_user}", "gists_url": "https://api.github.com/users/hawkw/gists{/gist_id}", "starred_url": "https://api.github.com/users/hawkw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hawkw/subscriptions", "organizations_url": "https://api.github.com/users/hawkw/orgs", "repos_url": "https://api.github.com/users/hawkw/repos", "events_url": "https://api.github.com/users/hawkw/events{/privacy}", "received_events_url": "https://api.github.com/users/hawkw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252628, "node_id": "MDU6TGFiZWwyNjIyNTI2Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-beta", "name": "regression-from-stable-to-beta", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to beta."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2022-07-20T23:32:47Z", "updated_at": "2022-08-18T18:24:29Z", "closed_at": "2022-08-18T18:24:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\n### Code\r\n\r\nThe `linkerd2-proxy` project fails to compile on nighty 2022-06-29 and later due to a \"missing\" implementation of a trait in an `impl Trait` return value. The same code compiles successfully on stable and on prior nightlies. The error occurs when using `impl Trait` as an associated type of a return value that is itself an `impl Trait`, when the associated type has trait bounds placed on it by the outer `impl Trait`. \r\n\r\nAn error like this is generated:\r\n```\r\nerror[E0277]: the trait bound `impl std::marker::Send + Unpin: linkerd_app_core::linkerd_io::AsyncRead` is not satisfied\r\n   --> linkerd/app/inbound/src/lib.rs:158:9\r\n    |\r\n158 | /         impl svc::MakeConnection<\r\n159 | |                 T,\r\n160 | |                 Connection = impl Send + Unpin,\r\n161 | |                 Metadata = impl Send + Unpin,\r\n162 | |                 Error = Error,\r\n163 | |                 Future = impl Send,\r\n164 | |             > + Clone,\r\n    | |_____________________^ the trait `linkerd_app_core::linkerd_io::AsyncRead` is not implemented for `impl std::marker::Send + Unpin`\r\n    |\r\n    = help: the following other types implement trait `linkerd_app_core::linkerd_io::AsyncRead`:\r\n              &[u8]\r\n              &mut T\r\n              Box<T>\r\n              BoxedIo\r\n              BufStream<RW>\r\n              DuplexStream\r\n              EitherIo<L, R>\r\n              Pin<P>\r\n            and 38 others\r\n    = note: required because of the requirements on the impl of `linkerd_app_core::svc::MakeConnection<T>` for `linkerd_app_core::svc::Filter<linkerd_app_core::svc::MapErr<linkerd_app_core::svc::linkerd_stack::Timeout<ConnectTcp>, impl (FnOnce(Box<(dyn std::error::Error + Sync + std::marker::Send + 'static)>) -> Box<(dyn std::error::Error + Sync + std::marker::Send + 'static)>) + Clone>, [closure@linkerd/app/inbound/src/lib.rs:186:38: 193:18]>`\r\n\r\nerror[E0277]: the trait bound `impl std::marker::Send + Unpin: linkerd_app_core::linkerd_io::AsyncWrite` is not satisfied\r\n   --> linkerd/app/inbound/src/lib.rs:158:9\r\n    |\r\n158 | /         impl svc::MakeConnection<\r\n159 | |                 T,\r\n160 | |                 Connection = impl Send + Unpin,\r\n161 | |                 Metadata = impl Send + Unpin,\r\n162 | |                 Error = Error,\r\n163 | |                 Future = impl Send,\r\n164 | |             > + Clone,\r\n    | |_____________________^ the trait `linkerd_app_core::linkerd_io::AsyncWrite` is not implemented for `impl std::marker::Send + Unpin`\r\n    |\r\n    = help: the following other types implement trait `linkerd_app_core::linkerd_io::AsyncWrite`:\r\n              &mut T\r\n              Box<T>\r\n              BoxedIo\r\n              BufStream<RW>\r\n              DuplexStream\r\n              EitherIo<L, R>\r\n              Pin<P>\r\n              PrefixedIo<I>\r\n            and 38 others\r\n    = note: required because of the requirements on the impl of `linkerd_app_core::svc::MakeConnection<T>` for `linkerd_app_core::svc::Filter<linkerd_app_core::svc::MapErr<linkerd_app_core::svc::linkerd_stack::Timeout<ConnectTcp>, impl (FnOnce(Box<(dyn std::error::Error + Sync + std::marker::Send + 'static)>) -> Box<(dyn std::error::Error + Sync + std::marker::Send + 'static)>) + Clone>, [closure@linkerd/app/inbound/src/lib.rs:186:38: 193:18]>`\r\n\r\nerror[E0277]: the trait bound `impl std::marker::Send + Unpin: linkerd_app_core::linkerd_io::AsyncRead` is not satisfied\r\n  --> linkerd/app/outbound/src/tcp/connect.rs:39:9\r\n   |\r\n39 | /         impl svc::MakeConnection<\r\n40 | |                 T,\r\n41 | |                 Connection = impl Send + Unpin,\r\n42 | |                 Metadata = ConnectMeta,\r\n43 | |                 Error = Error,\r\n44 | |                 Future = impl Send,\r\n45 | |             > + Clone,\r\n   | |_____________________^ the trait `linkerd_app_core::linkerd_io::AsyncRead` is not implemented for `impl std::marker::Send + Unpin`\r\n   |\r\n   = help: the following other types implement trait `linkerd_app_core::linkerd_io::AsyncRead`:\r\n             &[u8]\r\n             &mut T\r\n             Box<T>\r\n             BoxedIo\r\n             DuplexStream\r\n             EitherIo<L, R>\r\n             Pin<P>\r\n             PrefixedIo<I>\r\n           and 38 others\r\n   = note: required because of the requirements on the impl of `MakeConnection<T>` for `linkerd_app_core::transport::linkerd_transport_metrics::Client<linkerd_app_core::transport::Metrics, BoxFuture<linkerd_app_core::svc::MapErr<linkerd_app_core::svc::linkerd_stack::Timeout<OpaqueTransport<linkerd_app_core::linkerd_tls::Client<linkerd_app_core::identity::NewClient, C>>>, impl (FnOnce(Box<(dyn std::error::Error + Sync + std::marker::Send + 'static)>) -> Box<(dyn std::error::Error + Sync + std::marker::Send + 'static)>) + Clone>>>`\r\n\r\nerror[E0277]: the trait bound `impl std::marker::Send + Unpin: linkerd_app_core::linkerd_io::AsyncWrite` is not satisfied\r\n  --> linkerd/app/outbound/src/tcp/connect.rs:39:9\r\n   |\r\n39 | /         impl svc::MakeConnection<\r\n40 | |                 T,\r\n41 | |                 Connection = impl Send + Unpin,\r\n42 | |                 Metadata = ConnectMeta,\r\n43 | |                 Error = Error,\r\n44 | |                 Future = impl Send,\r\n45 | |             > + Clone,\r\n   | |_____________________^ the trait `linkerd_app_core::linkerd_io::AsyncWrite` is not implemented for `impl std::marker::Send + Unpin`\r\n   |\r\n   = help: the following other types implement trait `linkerd_app_core::linkerd_io::AsyncWrite`:\r\n             &mut T\r\n             Box<T>\r\n             BoxedIo\r\n             DuplexStream\r\n             EitherIo<L, R>\r\n             Pin<P>\r\n             PrefixedIo<I>\r\n             ScopedIo<I>\r\n           and 38 others\r\n   = note: required because of the requirements on the impl of `MakeConnection<T>` for `linkerd_app_core::transport::linkerd_transport_metrics::Client<linkerd_app_core::transport::Metrics, BoxFuture<linkerd_app_core::svc::MapErr<linkerd_app_core::svc::linkerd_stack::Timeout<OpaqueTransport<linkerd_app_core::linkerd_tls::Client<linkerd_app_core::identity::NewClient, C>>>, impl (FnOnce(Box<(dyn std::error::Error + Sync + std::marker::Send + 'static)>) -> Box<(dyn std::error::Error + Sync + std::marker::Send + 'static)>) + Clone>>>`\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\n```\r\n\r\nUnfortunately, I don't have a minimal reproducer yet; I'd like to find one, but for now, checking out https://github.com/linkerd/linkerd2-proxy/commit/0288b9c998c3343e1e24a404fe997ed3ce5e6572 and running `cargo +nigihtly-2022-06-29 build` will fail with this error. \r\n\r\n### Version it worked on\r\n\r\nThe most recent nightly that can compile the `linkerd2-proxy` codebase successfully is `2022-06-28`. Successful CI build: https://github.com/linkerd/linkerd2-proxy/runs/7088482069?check_suite_focus=true\r\n\r\n### Version with regression\r\n\r\n\r\nNightly `2022-06-29` and later fails to compile the same codebase. Failing CI build: https://github.com/linkerd/linkerd2-proxy/runs/7107925369?check_suite_focus=true\r\n\r\nWe ran `cargo bisect-rustc` and it appears that commit 00ebeb87ac87a492bd59ace6bd43d6ad1629ca4e introduced the regression.\r\n\r\nsearched nightlies: from nightly-2022-06-28 to nightly-2022-06-30\r\nregressed nightly: nightly-2022-06-29\r\nsearched commit range: https://github.com/rust-lang/rust/compare/2f3ddd9f594adf9773547aa7cedb43c4ac8ffd2f...830880640304ba8699c5f9a0c4665c38a3271963\r\nregressed commit: https://github.com/rust-lang/rust/commit/00ebeb87ac87a492bd59ace6bd43d6ad1629ca4e\r\n\r\n<details>\r\n<summary>bisected with <a href='https://github.com/rust-lang/cargo-bisect-rustc'>cargo-bisect-rustc</a> v0.6.3</summary>\r\n\r\nHost triple: x86_64-unknown-linux-gnu\r\nReproduce with:\r\n```bash\r\ncargo bisect-rustc --start 2022-06-28 --end 2022-06-30 --test-dir ../linkerd2-proxy -- build \r\n```\r\n\r\n</details>", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99536/timeline", "performed_via_github_app": null, "state_reason": "completed"}