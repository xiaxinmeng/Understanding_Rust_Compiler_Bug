{"url": "https://api.github.com/repos/rust-lang/rust/issues/103081", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103081/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103081/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103081/events", "html_url": "https://github.com/rust-lang/rust/issues/103081", "id": 1410110430, "node_id": "I_kwDOAAsO6M5UDJPe", "number": 103081, "title": "report bug", "user": {"login": "walkerofcode", "id": 18344268, "node_id": "MDQ6VXNlcjE4MzQ0MjY4", "avatar_url": "https://avatars.githubusercontent.com/u/18344268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/walkerofcode", "html_url": "https://github.com/walkerofcode", "followers_url": "https://api.github.com/users/walkerofcode/followers", "following_url": "https://api.github.com/users/walkerofcode/following{/other_user}", "gists_url": "https://api.github.com/users/walkerofcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/walkerofcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/walkerofcode/subscriptions", "organizations_url": "https://api.github.com/users/walkerofcode/orgs", "repos_url": "https://api.github.com/users/walkerofcode/repos", "events_url": "https://api.github.com/users/walkerofcode/events{/privacy}", "received_events_url": "https://api.github.com/users/walkerofcode/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2022-10-15T09:40:18Z", "updated_at": "2022-12-07T11:31:33Z", "closed_at": "2022-12-07T11:31:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n<code>\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\n<version>\r\n v0.3.6\r\n```\r\n\r\n### Error output\r\n\r\n\r\n```\r\n<output>\r\n(.venv) root@alenservice2:~/pathfinder/py# cargo build --release --bin pathfinder\r\n   Compiling pathfinder v0.3.6 (/root/pathfinder/crates/pathfinder)\r\n    Building [=======================> ] 429/430: pathfinder(bin)             \r\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\r\n\r\nerror: internal compiler error: broken MIR in DropGlue(DefId(2:2767 ~ core[ca3d]::ptr::drop_in_place), Some(hyper::server::conn::spawn_all::State<hyper::server::tcp::addr_stream::AddrStream, futures::future::Ready<std::result::Result<hyper::service::util::ServiceFn<[closure@warp::server::Server<warp::filter::or::Or<warp::filter::or::Or<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::health_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, fn() -> impl warp::reply::Reply {warp::reply::reply}>, warp::filter::and_then::AndThen<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::ready_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, [closure@pathfinder_lib::monitoring::ready_route::{closure#0}]>, [closure@pathfinder_lib::monitoring::ready_route::{closure#1}]>>, warp::filter::and_then::AndThen<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::metrics_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, [closure@pathfinder_lib::monitoring::metrics_route::{closure#0}]>, [closure@pathfinder_lib::monitoring::metrics_route::{closure#1}]>>>::bind_ephemeral<std::net::SocketAddr>::{closure#1}::{closure#0}::{closure#0}], hyper::body::body::Body>, std::convert::Infallible>>, hyper::service::util::ServiceFn<[closure@warp::server::Server<warp::filter::or::Or<warp::filter::or::Or<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::health_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, fn() -> impl warp::reply::Reply {warp::reply::reply}>, warp::filter::and_then::AndThen<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::ready_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, [closure@pathfinder_lib::monitoring::ready_route::{closure#0}]>, [closure@pathfinder_lib::monitoring::ready_route::{closure#1}]>>, warp::filter::and_then::AndThen<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::metrics_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, [closure@pathfinder_lib::monitoring::metrics_route::{closure#0}]>, [closure@pathfinder_lib::monitoring::metrics_route::{closure#1}]>>>::bind_ephemeral<std::net::SocketAddr>::{closure#1}::{closure#0}::{closure#0}], hyper::body::body::Body>, hyper::common::exec::Exec, hyper::server::conn::spawn_all::NoopWatcher>)) (after pass PhaseChange-Runtime(Optimized)) at bb3[0]:\r\n                                Field projection `((*_1) as Connected).field[0]` specified type `hyper::server::conn::upgrades::UpgradeableConnection<hyper::server::tcp::addr_stream::AddrStream, hyper::service::util::ServiceFn<[closure@warp::server::Server<warp::filter::or::Or<warp::filter::or::Or<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::health_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, fn() -> impl warp::reply::Reply {warp::reply::reply}>, warp::filter::and_then::AndThen<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::ready_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, [closure@pathfinder_lib::monitoring::ready_route::{closure#0}]>, [closure@pathfinder_lib::monitoring::ready_route::{closure#1}]>>, warp::filter::and_then::AndThen<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::metrics_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, [closure@pathfinder_lib::monitoring::metrics_route::{closure#0}]>, [closure@pathfinder_lib::monitoring::metrics_route::{closure#1}]>>>::bind_ephemeral<std::net::SocketAddr>::{closure#1}::{closure#0}::{closure#0}], hyper::body::body::Body>, hyper::common::exec::Exec>`, but actual type is <hyper::server::conn::spawn_all::NoopWatcher as hyper::server::conn::spawn_all::Watcher<hyper::server::tcp::addr_stream::AddrStream, hyper::service::util::ServiceFn<[closure@warp::server::Server<warp::filter::or::Or<warp::filter::or::Or<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::health_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, fn() -> impl warp::reply::Reply {warp::reply::reply}>, warp::filter::and_then::AndThen<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::ready_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, [closure@pathfinder_lib::monitoring::ready_route::{closure#0}]>, [closure@pathfinder_lib::monitoring::ready_route::{closure#1}]>>, warp::filter::and_then::AndThen<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::metrics_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, [closure@pathfinder_lib::monitoring::metrics_route::{closure#0}]>, [closure@pathfinder_lib::monitoring::metrics_route::{closure#1}]>>>::bind_ephemeral<std::net::SocketAddr>::{closure#1}::{closure#0}::{closure#0}], hyper::body::body::Body>, hyper::common::exec::Exec>>::Future\r\n  |\r\n  = note: delayed at compiler/rustc_const_eval/src/transform/validate.rs:127:36\r\n\r\nerror: internal compiler error: broken MIR in DropGlue(DefId(2:2767 ~ core[ca3d]::ptr::drop_in_place), Some(tokio::runtime::task::core::Stage<hyper::server::conn::spawn_all::NewSvcTask<hyper::server::tcp::addr_stream::AddrStream, futures::future::Ready<std::result::Result<hyper::service::util::ServiceFn<[closure@warp::server::Server<warp::filter::or::Or<warp::filter::or::Or<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::health_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, fn() -> impl warp::reply::Reply {warp::reply::reply}>, warp::filter::and_then::AndThen<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::ready_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, [closure@pathfinder_lib::monitoring::ready_route::{closure#0}]>, [closure@pathfinder_lib::monitoring::ready_route::{closure#1}]>>, warp::filter::and_then::AndThen<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::metrics_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, [closure@pathfinder_lib::monitoring::metrics_route::{closure#0}]>, [closure@pathfinder_lib::monitoring::metrics_route::{closure#1}]>>>::bind_ephemeral<std::net::SocketAddr>::{closure#1}::{closure#0}::{closure#0}], hyper::body::body::Body>, std::convert::Infallible>>, hyper::service::util::ServiceFn<[closure@warp::server::Server<warp::filter::or::Or<warp::filter::or::Or<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::health_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, fn() -> impl warp::reply::Reply {warp::reply::reply}>, warp::filter::and_then::AndThen<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::ready_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, [closure@pathfinder_lib::monitoring::ready_route::{closure#0}]>, [closure@pathfinder_lib::monitoring::ready_route::{closure#1}]>>, warp::filter::and_then::AndThen<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::metrics_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, [closure@pathfinder_lib::monitoring::metrics_route::{closure#0}]>, [closure@pathfinder_lib::monitoring::metrics_route::{closure#1}]>>>::bind_ephemeral<std::net::SocketAddr>::{closure#1}::{closure#0}::{closure#0}], hyper::body::body::Body>, hyper::common::exec::Exec, hyper::server::conn::spawn_all::NoopWatcher>>)) (after pass PhaseChange-Runtime(Optimized)) at bb3[0]:\r\n                                Field projection `((*_1) as Finished).field[0]` specified type `std::result::Result<(), tokio::task::JoinError>`, but actual type is std::result::Result<<hyper::server::conn::spawn_all::NewSvcTask<hyper::server::tcp::addr_stream::AddrStream, futures::future::Ready<std::result::Result<hyper::service::util::ServiceFn<[closure@warp::server::Server<warp::filter::or::Or<warp::filter::or::Or<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::health_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, fn() -> impl warp::reply::Reply {warp::reply::reply}>, warp::filter::and_then::AndThen<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::ready_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, [closure@pathfinder_lib::monitoring::ready_route::{closure#0}]>, [closure@pathfinder_lib::monitoring::ready_route::{closure#1}]>>, warp::filter::and_then::AndThen<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::metrics_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, [closure@pathfinder_lib::monitoring::metrics_route::{closure#0}]>, [closure@pathfinder_lib::monitoring::metrics_route::{closure#1}]>>>::bind_ephemeral<std::net::SocketAddr>::{closure#1}::{closure#0}::{closure#0}], hyper::body::body::Body>, std::convert::Infallible>>, hyper::service::util::ServiceFn<[closure@warp::server::Server<warp::filter::or::Or<warp::filter::or::Or<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::health_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, fn() -> impl warp::reply::Reply {warp::reply::reply}>, warp::filter::and_then::AndThen<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::ready_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, [closure@pathfinder_lib::monitoring::ready_route::{closure#0}]>, [closure@pathfinder_lib::monitoring::ready_route::{closure#1}]>>, warp::filter::and_then::AndThen<warp::filter::map::Map<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::filters::method::get::{closure#0}]>::{closure#0}]>, warp::filter::and::And<warp::filter::and::And<warp::filters::any::Any, warp::filters::path::Exact<warp::filters::path::internal::Opaque<pathfinder_lib::monitoring::metrics_route::__StaticPath>>>, warp::filter::FilterFn<[closure@warp::filters::path::end::{closure#0}]>>>, [closure@pathfinder_lib::monitoring::metrics_route::{closure#0}]>, [closure@pathfinder_lib::monitoring::metrics_route::{closure#1}]>>>::bind_ephemeral<std::net::SocketAddr>::{closure#1}::{closure#0}::{closure#0}], hyper::body::body::Body>, hyper::common::exec::Exec, hyper::server::conn::spawn_all::NoopWatcher> as futures::Future>::Output, tokio::task::JoinError>\r\n  |\r\n  = note: delayed at compiler/rustc_const_eval/src/transform/validate.rs:127:36\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1499:13\r\nstack backtrace:\r\n   0:     0x7fc02845e010 - std::backtrace_rs::backtrace::libunwind::trace::hef7d61bc1f746d9e\r\n                               at /rustc/b44197abb0b3ffe4908892e1e08ab1cd721ff3b9/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   1:     0x7fc02845e010 - std::backtrace_rs::backtrace::trace_unsynchronized::hf5f51e813259ccf5\r\n                               at /rustc/b44197abb0b3ffe4908892e1e08ab1cd721ff3b9/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7fc02845e010 - std::sys_common::backtrace::_print_fmt::hab5444ef511f9f50\r\n                               at /rustc/b44197abb0b3ffe4908892e1e08ab1cd721ff3b9/library/std/src/sys_common/backtrace.rs:66:5\r\n   3:     0x7fc02845e010 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h672a37fcb181ad87\r\n                               at /rustc/b44197abb0b3ffe4908892e1e08ab1cd721ff3b9/library/std/src/sys_common/backtrace.rs:45:22\r\n   4:     0x7fc0284b8e1e - core::fmt::write::ha365d41fbfbc3d99\r\n                               at /rustc/b44197abb0b3ffe4908892e1e08ab1cd721ff3b9/library/core/src/fmt/mod.rs:1202:17\r\n   5:     0x7fc02844ebd5 - std::io::Write::write_fmt::hccfd6c6541788842\r\n                               at /rustc/b44197abb0b3ffe4908892e1e08ab1cd721ff3b9/library/std/src/io/mod.rs:1679:15\r\n   6:     0x7fc028460c63 - std::sys_common::backtrace::_print::h6b28d3d4b1ee1596\r\n                               at /rustc/b44197abb0b3ffe4908892e1e08ab1cd721ff3b9/library/std/src/sys_common/backtrace.rs:48:5\r\n   7:     0x7fc028460c63 - std::sys_common::backtrace::print::hf84ccb312d6e358c\r\n                               at /rustc/b44197abb0b3ffe4908892e1e08ab1cd721ff3b9/library/std/src/sys_common/backtrace.rs:35:9\r\n   8:     0x7fc028460c63 - std::panicking::default_hook::{{closure}}::hd34df275dbd2477a\r\n                               at /rustc/b44197abb0b3ffe4908892e1e08ab1cd721ff3b9/library/std/src/panicking.rs:295:22\r\n   9:     0x7fc02846094f - std::panicking::default_hook::h524bcd868597b19d\r\n                               at /rustc/b44197abb0b3ffe4908892e1e08ab1cd721ff3b9/library/std/src/panicking.rs:314:9\r\n  10:     0x7fc02acb4de1 - rustc_driver[f07d70ef82560c26]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n  11:     0x7fc02846149d - std::panicking::rust_panic_with_hook::h76797dba44d06d3b\r\n                               at /rustc/b44197abb0b3ffe4908892e1e08ab1cd721ff3b9/library/std/src/panicking.rs:702:17\r\n  12:     0x7fc02bde39d1 - std[4107dec329232d4d]::panicking::begin_panic::<rustc_errors[d5a9de326e1e0dab]::ExplicitBug>::{closure#0}\r\n  13:     0x7fc02bde3526 - std[4107dec329232d4d]::sys_common::backtrace::__rust_end_short_backtrace::<std[4107dec329232d4d]::panicking::begin_panic<rustc_errors[d5a9de326e1e0dab]::ExplicitBug>::{closure#0}, !>\r\n  14:     0x7fc02bde3096 - std[4107dec329232d4d]::panicking::begin_panic::<rustc_errors[d5a9de326e1e0dab]::ExplicitBug>\r\n  15:     0x7fc02bde5cb6 - std[4107dec329232d4d]::panic::panic_any::<rustc_errors[d5a9de326e1e0dab]::ExplicitBug>\r\n  16:     0x7fc02a81b2f8 - <rustc_errors[d5a9de326e1e0dab]::HandlerInner as core[ca3d6f4a5bbb0418]::ops::drop::Drop>::drop\r\n  17:     0x7fc029aad378 - core[ca3d6f4a5bbb0418]::ptr::drop_in_place::<rustc_session[f26670c2d9a6f903]::parse::ParseSess>\r\n  18:     0x7fc029a6bfc8 - <alloc[38116f25942e088]::rc::Rc<rustc_session[f26670c2d9a6f903]::session::Session> as core[ca3d6f4a5bbb0418]::ops::drop::Drop>::drop\r\n  19:     0x7fc029a68bcd - core[ca3d6f4a5bbb0418]::ptr::drop_in_place::<rustc_interface[fefa945b6091ce56]::interface::Compiler>\r\n  20:     0x7fc029a66417 - rustc_interface[fefa945b6091ce56]::interface::create_compiler_and_run::<core[ca3d6f4a5bbb0418]::result::Result<(), rustc_errors[d5a9de326e1e0dab]::ErrorGuaranteed>, rustc_driver[f07d70ef82560c26]::run_compiler::{closure#1}>\r\n  21:     0x7fc029a64931 - <scoped_tls[5261b271aa48d896]::ScopedKey<rustc_span[9f4721860e90387f]::SessionGlobals>>::set::<rustc_interface[fefa945b6091ce56]::interface::run_compiler<core[ca3d6f4a5bbb0418]::result::Result<(), rustc_errors[d5a9de326e1e0dab]::ErrorGuaranteed>, rustc_driver[f07d70ef82560c26]::run_compiler::{closure#1}>::{closure#0}, core[ca3d6f4a5bbb0418]::result::Result<(), rustc_errors[d5a9de326e1e0dab]::ErrorGuaranteed>>\r\n  22:     0x7fc029a6461f - std[4107dec329232d4d]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[fefa945b6091ce56]::util::run_in_thread_pool_with_globals<rustc_interface[fefa945b6091ce56]::interface::run_compiler<core[ca3d6f4a5bbb0418]::result::Result<(), rustc_errors[d5a9de326e1e0dab]::ErrorGuaranteed>, rustc_driver[f07d70ef82560c26]::run_compiler::{closure#1}>::{closure#0}, core[ca3d6f4a5bbb0418]::result::Result<(), rustc_errors[d5a9de326e1e0dab]::ErrorGuaranteed>>::{closure#0}, core[ca3d6f4a5bbb0418]::result::Result<(), rustc_errors[d5a9de326e1e0dab]::ErrorGuaranteed>>\r\n  23:     0x7fc02ab196a9 - <<std[4107dec329232d4d]::thread::Builder>::spawn_unchecked_<rustc_interface[fefa945b6091ce56]::util::run_in_thread_pool_with_globals<rustc_interface[fefa945b6091ce56]::interface::run_compiler<core[ca3d6f4a5bbb0418]::result::Result<(), rustc_errors[d5a9de326e1e0dab]::ErrorGuaranteed>, rustc_driver[f07d70ef82560c26]::run_compiler::{closure#1}>::{closure#0}, core[ca3d6f4a5bbb0418]::result::Result<(), rustc_errors[d5a9de326e1e0dab]::ErrorGuaranteed>>::{closure#0}, core[ca3d6f4a5bbb0418]::result::Result<(), rustc_errors[d5a9de326e1e0dab]::ErrorGuaranteed>>::{closure#1} as core[ca3d6f4a5bbb0418]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  24:     0x7fc02846b2f3 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h22c3cb4ad0b05bde\r\n                               at /rustc/b44197abb0b3ffe4908892e1e08ab1cd721ff3b9/library/alloc/src/boxed.rs:1940:9\r\n  25:     0x7fc02846b2f3 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h4722ed9fd39a6440\r\n                               at /rustc/b44197abb0b3ffe4908892e1e08ab1cd721ff3b9/library/alloc/src/boxed.rs:1940:9\r\n  26:     0x7fc02846b2f3 - std::sys::unix::thread::Thread::new::thread_start::hf692e608a98fe429\r\n                               at /rustc/b44197abb0b3ffe4908892e1e08ab1cd721ff3b9/library/std/src/sys/unix/thread.rs:108:17\r\n  27:     0x7fc02833b609 - start_thread\r\n  28:     0x7fc02825e133 - clone\r\n  29:                0x0 - <unknown>\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.65.0-nightly (b44197abb 2022-09-05) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -C opt-level=3 -C embed-bitcode=no\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: could not compile `pathfinder`\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "apiraino", "id": 6098822, "node_id": "MDQ6VXNlcjYwOTg4MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6098822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apiraino", "html_url": "https://github.com/apiraino", "followers_url": "https://api.github.com/users/apiraino/followers", "following_url": "https://api.github.com/users/apiraino/following{/other_user}", "gists_url": "https://api.github.com/users/apiraino/gists{/gist_id}", "starred_url": "https://api.github.com/users/apiraino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apiraino/subscriptions", "organizations_url": "https://api.github.com/users/apiraino/orgs", "repos_url": "https://api.github.com/users/apiraino/repos", "events_url": "https://api.github.com/users/apiraino/events{/privacy}", "received_events_url": "https://api.github.com/users/apiraino/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103081/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}