{"url": "https://api.github.com/repos/rust-lang/rust/issues/83975", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83975/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83975/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83975/events", "html_url": "https://github.com/rust-lang/rust/issues/83975", "id": 852604847, "node_id": "MDU6SXNzdWU4NTI2MDQ4NDc=", "number": 83975, "title": "ARM target-feature cfgs are not enabled when the target-feature is enabled", "user": {"login": "mattico", "id": 853158, "node_id": "MDQ6VXNlcjg1MzE1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/853158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattico", "html_url": "https://github.com/mattico", "followers_url": "https://api.github.com/users/mattico/followers", "following_url": "https://api.github.com/users/mattico/following{/other_user}", "gists_url": "https://api.github.com/users/mattico/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattico/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattico/subscriptions", "organizations_url": "https://api.github.com/users/mattico/orgs", "repos_url": "https://api.github.com/users/mattico/repos", "events_url": "https://api.github.com/users/mattico/events{/privacy}", "received_events_url": "https://api.github.com/users/mattico/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-04-07T16:57:28Z", "updated_at": "2021-04-07T18:49:35Z", "closed_at": "2021-04-07T18:49:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n$ rustc --version\r\nrustc 1.53.0-nightly (07e0e2ec2 2021-03-24)\r\n$ rustc --target=thumbv7em-none-eabihf --print cfg\r\n<snip>\r\ntarget_feature=\"dsp\"\r\ntarget_feature=\"mclass\"\r\ntarget_feature=\"thumb-mode\"\r\ntarget_feature=\"v5te\"\r\ntarget_feature=\"v6\"\r\ntarget_feature=\"v6k\"\r\ntarget_feature=\"v6t2\"\r\ntarget_feature=\"v7\"\r\n<snip>\r\n$ rustc --target=thumbv7em-none-eabihf -C target-feature=+armv7e-m,+m7,+v7clrex,+fp-armv8d16,+hwdiv,+fp64,+fpregs,+fpregs64,+noarm,+db,+thumb2 --print cfg\r\n<snip>\r\ntarget_feature=\"dsp\"\r\ntarget_feature=\"mclass\"\r\ntarget_feature=\"thumb-mode\"\r\ntarget_feature=\"v5te\"\r\ntarget_feature=\"v6\"\r\ntarget_feature=\"v6k\"\r\ntarget_feature=\"v6t2\"\r\ntarget_feature=\"v7\"\r\ntarget_feature=\"vfp2\"\r\n<snip>\r\n```\r\n\r\nTo the best of my knowledge, all of the above features are valid for my target, an STM32H743XIH6. At the very least `fp-armv8d16` [is valid for Cortex-M7 targets](https://github.com/rust-lang/llvm-project/blob/171991e30966695fd118c90ebbb2eeec5098ccce/llvm/lib/Target/ARM/ARM.td#L1196-L1199): fpv5 [has the same instructions as ARMv8](https://reviews.llvm.org/D5537). If any of the target features are not valid, rustc should print a warning message.\r\n\r\nHowever, rustc doesn't appear to actually enable any of the target_feature cfgs, somehow deciding that `vfp2` is good enough - despite the fact that `vfp2` isn't even a valid option for `ARMv7e-M`[^1]. Testing the enabled features using `cfg!` or `#[cfg()]` gives the same result (I wish I had found `--print cfg` sooner).\r\n\r\nI did some comparisons using godbolt: [Rust](https://rust.godbolt.org/z/a89o1nPj5) | [C GCC/Clang](https://godbolt.org/z/YMPGEr1qj)\r\nIt appears that the `target-feature`s are working, at least the ones that I can easily generate instructions for. Enabling any feature which tells LLVM there's 64-bit float support causes it to emit all 64-bit float instructions. Disabling `v7clrex` causes it to stop emitting `clrex`.\r\n\r\n~I think what's happening is there's [some logic](https://github.com/rust-lang/llvm-project/blob/rustc/12.0-2021-02-03/llvm/lib/Target/ARM/ARM.td) in LLVM which enables other target features and internal flags based on the target features it's given. Then it/rustc finds a minimum set of target-features which would end up enabling the resulting internal flags - e.g. `vfp2` enables `fp64` so since `fp64` is enabled we'll say that `vfp2` is enabled. Then that reduced set of features is what actually ends up as `cfg`s. This makes `#[cfg(target_feature = \"\")]` almost useless on ARM since most of the target-features say they are disabled even when they seem to work.~\r\n\r\n[^1]: Armv7-M Architecture Reference Manual section A2.5", "closed_by": {"login": "mattico", "id": 853158, "node_id": "MDQ6VXNlcjg1MzE1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/853158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattico", "html_url": "https://github.com/mattico", "followers_url": "https://api.github.com/users/mattico/followers", "following_url": "https://api.github.com/users/mattico/following{/other_user}", "gists_url": "https://api.github.com/users/mattico/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattico/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattico/subscriptions", "organizations_url": "https://api.github.com/users/mattico/orgs", "repos_url": "https://api.github.com/users/mattico/repos", "events_url": "https://api.github.com/users/mattico/events{/privacy}", "received_events_url": "https://api.github.com/users/mattico/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83975/timeline", "performed_via_github_app": null, "state_reason": "completed"}