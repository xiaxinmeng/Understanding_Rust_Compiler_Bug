{"url": "https://api.github.com/repos/rust-lang/rust/issues/80186", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80186/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80186/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80186/events", "html_url": "https://github.com/rust-lang/rust/issues/80186", "id": 771365526, "node_id": "MDU6SXNzdWU3NzEzNjU1MjY=", "number": 80186, "title": "Misguiding help on error \"`mut` must be attached to each individual binding\"", "user": {"login": "tomprogrammer", "id": 57975, "node_id": "MDQ6VXNlcjU3OTc1", "avatar_url": "https://avatars.githubusercontent.com/u/57975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomprogrammer", "html_url": "https://github.com/tomprogrammer", "followers_url": "https://api.github.com/users/tomprogrammer/followers", "following_url": "https://api.github.com/users/tomprogrammer/following{/other_user}", "gists_url": "https://api.github.com/users/tomprogrammer/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomprogrammer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomprogrammer/subscriptions", "organizations_url": "https://api.github.com/users/tomprogrammer/orgs", "repos_url": "https://api.github.com/users/tomprogrammer/repos", "events_url": "https://api.github.com/users/tomprogrammer/events{/privacy}", "received_events_url": "https://api.github.com/users/tomprogrammer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}, {"id": 1976249039, "node_id": "MDU6TGFiZWwxOTc2MjQ5MDM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-patterns", "name": "A-patterns", "color": "f7e101", "default": false, "description": "Relating to patterns and pattern matching"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-12-19T11:43:47Z", "updated_at": "2020-12-21T13:12:34Z", "closed_at": "2020-12-21T13:12:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code to create a mutable variable binding to `tuple.0` while also dereferencing it in the same pattern. Of course this code is not correct. I think the intention can be guessed because of the order in which `&` and `mut` appear, especially in the parenthesized variant.\r\n\r\n```rust\r\n#![allow(unused_variables)]\r\nfn main() {\r\n    let tuple: (&u8, &[u8]) = (&0, &[0, 0]);\r\n    let (mut &last, rest) = tuple;\r\n    let (mut (&last), rest) = tuple;\r\n    // `last` should be type of `u8`\r\n    // EDIT: This can be minimized to:\r\n    let mut &x = &0;\r\n}\r\n```\r\n\r\nThis is the correct code, where the tokens `&` and `mut` are separated by parentheses to avoid parsing as `&mut`. This is also perfectly logical since patterns are read from the outside inwards destructuring the given value. My fault was to interpret `&` and `mut` like operators which got me stuck at the code I've written above.\r\n\r\n```rust\r\n#![allow(unused_variables)]\r\nfn main() {\r\n    let tuple: (&u8, &[u8]) = (&0, &[0, 0]);\r\n    let (&(mut last), rest) = tuple;\r\n    // EDIT: This can be minimized to:\r\n    let &(mut x) = &0;\r\n}\r\n```\r\n\r\nThe issue is that the help output by the compiler isn't actually helping much because it changes semantics of the code. The compiler suggests to use `&mut` which would dereference a mutable reference when used in a pattern. That is very different from dereferencing a shared reference and mutably binding a variable.\r\n\r\nSince `&mut` consists of two tokens `&` and `mut` the compiler tries to show you that the two token are in the wrong order I guess. In my opinion this is less probable than trying to express the pattern `&(mut variable)` wrongly as `mut &variable`. For the variant `mut (&variable)` the help is not correct anyway since the compiler ignores the parentheses.\r\n\r\nI propose to change the help text to suggest `&(mut last)` instead. I'm not sure whether there are cases where this help would be wrong also.\r\n\r\nCurrent error and help:\r\n\r\n```\r\nerror: `mut` must be attached to each individual binding\r\n --> src/main.rs:5:10\r\n  |\r\n4 |     let (mut &last, rest) = tuple;\r\n  |          ^^^^^^^^^ help: add `mut` to each binding: `&mut last`\r\n  |\r\n  = note: `mut` may be followed by `variable` and `variable @ pattern`\r\n\r\nerror: `mut` must be attached to each individual binding\r\n --> src/main.rs:6:10\r\n  |\r\n5 |     let (mut (&last), rest) = tuple;\r\n  |          ^^^^^^^^^^^ help: add `mut` to each binding: `(&mut last)`\r\n  |\r\n  = note: `mut` may be followed by `variable` and `variable @ pattern`\r\n\r\nwarning: unnecessary parentheses around pattern\r\n --> src/main.rs:6:10\r\n  |\r\n5 |     let (mut (&last), rest) = tuple;\r\n  |          ^^^^^^^^^^^ help: remove these parentheses\r\n  |\r\n  = note: `#[warn(unused_parens)]` on by default\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\nAll the compiler channels produce the same output.\r\n`rustc --version --verbose`:\r\nStable:\r\n```\r\nrustc 1.48.0 (7eac88abb 2020-11-16)\r\nbinary: rustc\r\ncommit-hash: 7eac88abb2e57e752f3302f02be5f3ce3d7adfb4\r\ncommit-date: 2020-11-16\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.48.0\r\nLLVM version: 11.0\r\n```\r\nBeta:\r\n```\r\nrustc 1.49.0-beta.4 (877c7cbe1 2020-12-10)\r\nbinary: rustc\r\ncommit-hash: 877c7cbe142a373f93d38a23741dcc3a0a17a2af\r\ncommit-date: 2020-12-10\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.49.0-beta.4\r\n```\r\nNightly:\r\n```\r\nrustc 1.50.0-nightly (f74583445 2020-12-18)\r\nbinary: rustc\r\ncommit-hash: f74583445702e2e27ec4415376f2c540a83d7ded\r\ncommit-date: 2020-12-18\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.50.0-nightly\r\n```\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80186/timeline", "performed_via_github_app": null, "state_reason": "completed"}