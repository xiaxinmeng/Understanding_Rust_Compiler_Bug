{"url": "https://api.github.com/repos/rust-lang/rust/issues/111655", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111655/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111655/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111655/events", "html_url": "https://github.com/rust-lang/rust/issues/111655", "id": 1712693678, "node_id": "I_kwDOAAsO6M5mFaGu", "number": 111655, "title": "std incorrectly states that `?` uses\u00a0`Into` on the underlying error type", "user": {"login": "memoryruins", "id": 6868531, "node_id": "MDQ6VXNlcjY4Njg1MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/6868531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/memoryruins", "html_url": "https://github.com/memoryruins", "followers_url": "https://api.github.com/users/memoryruins/followers", "following_url": "https://api.github.com/users/memoryruins/following{/other_user}", "gists_url": "https://api.github.com/users/memoryruins/gists{/gist_id}", "starred_url": "https://api.github.com/users/memoryruins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/memoryruins/subscriptions", "organizations_url": "https://api.github.com/users/memoryruins/orgs", "repos_url": "https://api.github.com/users/memoryruins/repos", "events_url": "https://api.github.com/users/memoryruins/events{/privacy}", "received_events_url": "https://api.github.com/users/memoryruins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-05-16T20:26:15Z", "updated_at": "2023-06-01T10:47:09Z", "closed_at": "2023-06-01T10:47:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Location\n\nhttps://github.com/rust-lang/rust/blob/b652d9a0fd5c5a7eeacd1ae8299166941c221230/library/core/src/convert/mod.rs#L497-L499\n\n### Summary\n\nAccording to the [reference](https://doc.rust-lang.org/nightly/reference/expressions/operator-expr.html) and rustc, the `?` operator uses the `From` trait on the underlying error.\r\n\r\nFor example ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=ffd3077e02a30f6eaec1f8f8db483643)),\r\n\r\n```rust\r\nstruct A;\r\nstruct B;\r\n\r\nimpl Into<B> for A {\r\n    fn into(self) -> B {\r\n        B\r\n    }\r\n}\r\n\r\nfn f(x: Result<(), A>) -> Result<(), B> {\r\n    x?;\r\n    Ok(())\r\n}\r\n```\r\n`rustc 1.71.0-nightly (ce5919fce 2023-05-15)`\r\n\r\n```\r\nerror[[E0277]](https://doc.rust-lang.org/nightly/error_codes/E0277.html): `?` couldn't convert the error to `B`\r\n  --> src/lib.rs:17:6\r\n   |\r\n16 | fn f(x: Result<(), A>) -> Result<(), B> {\r\n   |                           ------------- expected `B` because of this\r\n17 |     x?;\r\n   |      ^ the trait `From<A>` is not implemented for `B`\r\n   |\r\n   = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait\r\n   = help: the following other types implement trait `FromResidual<R>`:\r\n             <Result<T, F> as FromResidual<Result<Infallible, E>>>\r\n             <Result<T, F> as FromResidual<Yeet<E>>>\r\n   = note: required for `Result<(), B>` to implement `FromResidual<Result<Infallible, A>>`\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\n```\r\n\r\nIf the `Into<B>` impl is replaced with a `From<A>` impl, the example will successfully compile.\r\n\r\nThe docs in core/std should no longer state that `?` uses `Into`.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111655/timeline", "performed_via_github_app": null, "state_reason": "completed"}