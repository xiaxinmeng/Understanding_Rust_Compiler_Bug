{"url": "https://api.github.com/repos/rust-lang/rust/issues/30754", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/30754/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/30754/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/30754/events", "html_url": "https://github.com/rust-lang/rust/issues/30754", "id": 125293611, "node_id": "MDU6SXNzdWUxMjUyOTM2MTE=", "number": 30754, "title": "Array initialization with repeated enum variant requires the whole enum type to be Copy", "user": {"login": "benw", "id": 12386, "node_id": "MDQ6VXNlcjEyMzg2", "avatar_url": "https://avatars.githubusercontent.com/u/12386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benw", "html_url": "https://github.com/benw", "followers_url": "https://api.github.com/users/benw/followers", "following_url": "https://api.github.com/users/benw/following{/other_user}", "gists_url": "https://api.github.com/users/benw/gists{/gist_id}", "starred_url": "https://api.github.com/users/benw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benw/subscriptions", "organizations_url": "https://api.github.com/users/benw/orgs", "repos_url": "https://api.github.com/users/benw/repos", "events_url": "https://api.github.com/users/benw/events{/privacy}", "received_events_url": "https://api.github.com/users/benw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-07T00:14:35Z", "updated_at": "2016-01-07T00:55:45Z", "closed_at": "2016-01-07T00:45:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to initialize an array of `Option<Foo>` with `[None; 5]`. The `None` variant is constant and has no associated data, so there seems to be no reason that it couldn't be copied into all the entries in the array:\n\n``` rust\nstruct Foo;\n\nfn main() {\n    let mut array: [Option<Foo>; 5] = [None; 5];\n}\n```\n\nSadly this errors because `Foo` is not `Copy`, so `Option<Foo>` is not `Copy`.\n\n```\n<anon>:4:35: 4:44 error: the trait `core::marker::Copy` is not implemented for the type `Foo` [E0277]\n<anon>:4     let array: [Option<Foo>; 5] = [None; 5];\n                                           ^~~~~~~~~\n```\n\nI gather array initialization treats `None` as an expression in this case? Could it instead notice that `None` is a constant, and copy it to all the elements in the array?\n", "closed_by": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/30754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/30754/timeline", "performed_via_github_app": null, "state_reason": "completed"}