{"url": "https://api.github.com/repos/rust-lang/rust/issues/90713", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90713/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90713/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90713/events", "html_url": "https://github.com/rust-lang/rust/issues/90713", "id": 1047961778, "node_id": "I_kwDOAAsO6M4-dqCy", "number": 90713, "title": "Seemingly equivalent GAT trait implementations behave differently", "user": {"login": "petrosagg", "id": 939420, "node_id": "MDQ6VXNlcjkzOTQyMA==", "avatar_url": "https://avatars.githubusercontent.com/u/939420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrosagg", "html_url": "https://github.com/petrosagg", "followers_url": "https://api.github.com/users/petrosagg/followers", "following_url": "https://api.github.com/users/petrosagg/following{/other_user}", "gists_url": "https://api.github.com/users/petrosagg/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrosagg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrosagg/subscriptions", "organizations_url": "https://api.github.com/users/petrosagg/orgs", "repos_url": "https://api.github.com/users/petrosagg/repos", "events_url": "https://api.github.com/users/petrosagg/events{/privacy}", "received_events_url": "https://api.github.com/users/petrosagg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}, {"id": 3307663436, "node_id": "MDU6TGFiZWwzMzA3NjYzNDM2", "url": "https://api.github.com/repos/rust-lang/rust/labels/GATs-triaged", "name": "GATs-triaged", "color": "e88000", "default": false, "description": "Issues using the `generic_associated_types` feature that have been triaged"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-11-08T21:59:01Z", "updated_at": "2021-12-09T21:21:39Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nThe following code fails to compile:\r\n\r\n```rust\r\n#![feature(generic_associated_types)]\r\n\r\nuse std::ops::Deref;\r\n\r\ntrait GetOutput {\r\n    type Output<'a>\r\n    where\r\n        Self: 'a;\r\n\r\n    fn output<'a>(&'a self) -> Self::Output<'a>;\r\n}\r\n\r\nimpl<T, D> GetOutput for T\r\nwhere\r\n    T: Deref<Target = D>,\r\n    D: GetOutput,\r\n{\r\n    type Output<'a>\r\n    where\r\n        Self: 'a,\r\n        D: 'a,\r\n    = D::Output<'a>;\r\n\r\n    fn output<'a>(&'a self) -> Self::Output<'a> {\r\n        self.deref().output()\r\n    }\r\n}\r\n```\r\n\r\nBut this equivalent (I think) code compiles just fine:\r\n\r\n```rust\r\n#![feature(generic_associated_types)]\r\n\r\nuse std::ops::Deref;\r\n\r\ntrait GetOutput {\r\n    type Output<'a>\r\n    where\r\n        Self: 'a;\r\n\r\n    fn output<'a>(&'a self) -> Self::Output<'a>;\r\n}\r\n\r\nimpl<T> GetOutput for T\r\nwhere\r\n    T: Deref,\r\n    T::Target: GetOutput,\r\n{\r\n    type Output<'a>\r\n    where\r\n        Self: 'a,\r\n        <Self as Deref>::Target: 'a,\r\n    = <<Self as Deref>::Target as GetOutput>::Output<'a>;\r\n\r\n    fn output<'a>(&'a self) -> Self::Output<'a> {\r\n        self.deref().output()\r\n    }\r\n}\r\n```\r\n\r\nThere might be a subtle difference between the two implementation but I can't see any. This is a simplified example from this question in the Rust subreddit: https://www.reddit.com/r/rust/comments/qp8dwl/hey_rustaceans_got_an_easy_question_ask_here/hjsfjgs/", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90713/timeline", "performed_via_github_app": null, "state_reason": null}