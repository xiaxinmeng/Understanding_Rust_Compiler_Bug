{"url": "https://api.github.com/repos/rust-lang/rust/issues/24660", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/24660/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/24660/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/24660/events", "html_url": "https://github.com/rust-lang/rust/issues/24660", "id": 69853837, "node_id": "MDU6SXNzdWU2OTg1MzgzNw==", "number": 24660, "title": "Conditional mutation in Iterator::next doesn't optimise well", "user": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-04-21T14:01:12Z", "updated_at": "2015-06-18T22:17:10Z", "closed_at": "2015-06-18T22:16:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "``` rust\n#![crate_type = \"lib\"]\n\nstruct R {\n    start: i32,\n    end: i32\n}\n\nimpl Iterator for R\n{\n    type Item = i32;\n\n    fn next(&mut self) -> Option<i32> {\n        if self.start < self.end {\n            let old = self.start;\n            self.start += 1;\n            Some(old)\n        } else {\n            None\n        }\n    }\n}\n\n\npub fn test() -> usize {\n    R { start: 0, end: 100000}.count()\n}\n```\n\nCompiles to:\n\n``` asm\n_ZN4test20h08046f2c32b9b146kaaE:\n    .cfi_startproc\n    xorl    %ecx, %ecx\n    movq    $-1, %rax\n    .align  16, 0x90\n.LBB0_1:\n    cmpl    $100000, %ecx\n    setl    %dl\n    movzbl  %dl, %edx\n    addl    %ecx, %edx\n    incq    %rax\n    cmpl    $100000, %ecx\n    movl    %edx, %ecx\n    jl  .LBB0_1\n    retq\n```\n\nIt should at least look something like:\n\n``` asm\n    xorl    %eax, %eax\n    movl    $100000, %ecx\n.LBB0_1: \n    incl    %eax\n    decl    %ecx\n    jne .LBB0_1\n```\n\nBut really that case should be constant folded (clang folds the equivalent C `for` loop).\n\n(NB. `count` is currently implemented as `self.fold(0, |c, _| c + 1)`, and the bad codegen occurs if that is definition is used directly, and also if one uses the mutating for loop: `let mut c = 0; for _ in ... { c += 1 }`.)\n\nThis previously affected `std::ops::Range` (i.e. `x..y`), but #24705 implemented a work-around.\n", "closed_by": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/24660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/24660/timeline", "performed_via_github_app": null, "state_reason": "completed"}