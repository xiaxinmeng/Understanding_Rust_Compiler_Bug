{"url": "https://api.github.com/repos/rust-lang/rust/issues/61788", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61788/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61788/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61788/events", "html_url": "https://github.com/rust-lang/rust/issues/61788", "id": 455466754, "node_id": "MDU6SXNzdWU0NTU0NjY3NTQ=", "number": 61788, "title": "Irrefutable `if let` on a single-variant enum only produces () value", "user": {"login": "moxian", "id": 7831163, "node_id": "MDQ6VXNlcjc4MzExNjM=", "avatar_url": "https://avatars.githubusercontent.com/u/7831163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moxian", "html_url": "https://github.com/moxian", "followers_url": "https://api.github.com/users/moxian/followers", "following_url": "https://api.github.com/users/moxian/following{/other_user}", "gists_url": "https://api.github.com/users/moxian/gists{/gist_id}", "starred_url": "https://api.github.com/users/moxian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moxian/subscriptions", "organizations_url": "https://api.github.com/users/moxian/orgs", "repos_url": "https://api.github.com/users/moxian/repos", "events_url": "https://api.github.com/users/moxian/events{/privacy}", "received_events_url": "https://api.github.com/users/moxian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-06-12T23:23:56Z", "updated_at": "2019-11-27T13:20:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=1a6f75f70181628848d7fdf82edc25b6))\r\n\r\n```rust\r\nenum Enum{\r\n    Variant(i32),\r\n}\r\n\r\nfn stuff(x: Enum) -> i32{\r\n    if let Enum::Variant(value) = x {\r\n        value\r\n    }\r\n}\r\n```\r\ngives the following error:\r\n```rust\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0317]: if may be missing an else clause\r\n --> src/lib.rs:6:5\r\n  |\r\n6 | /     if let Enum::Variant(value) = x {\r\n7 | |         value\r\n8 | |     }\r\n  | |_____^ expected (), found i32\r\n  |\r\n  = note: expected type `()`\r\n             found type `i32`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0317`.\r\nerror: Could not compile `playground`.\r\n```\r\nwhich is weird, since the `else` clause would never be visited even if it was present.\r\n\r\nThe equivalent one-arm match\r\n```rust\r\nenum Enum{\r\n    Variant(i32),\r\n}\r\n\r\nfn stuff(x: Enum) -> i32{\r\n    match x {\r\n        Enum::Variant(value) => value,\r\n    }\r\n}\r\n```\r\ncompiles just fine (expectedly).\r\n\r\nAdding an `else { unreachable!() }` branch to the `if let` is, of course, possible, but unelegant, and really shouldn't be needed, as it can be inferred at compile time.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61788/timeline", "performed_via_github_app": null, "state_reason": null}