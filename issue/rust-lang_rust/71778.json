{"url": "https://api.github.com/repos/rust-lang/rust/issues/71778", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71778/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71778/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71778/events", "html_url": "https://github.com/rust-lang/rust/issues/71778", "id": 611031065, "node_id": "MDU6SXNzdWU2MTEwMzEwNjU=", "number": 71778, "title": "Issue when running cargo test in nested lib in a workspace.", "user": {"login": "abrassel", "id": 22563285, "node_id": "MDQ6VXNlcjIyNTYzMjg1", "avatar_url": "https://avatars.githubusercontent.com/u/22563285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abrassel", "html_url": "https://github.com/abrassel", "followers_url": "https://api.github.com/users/abrassel/followers", "following_url": "https://api.github.com/users/abrassel/following{/other_user}", "gists_url": "https://api.github.com/users/abrassel/gists{/gist_id}", "starred_url": "https://api.github.com/users/abrassel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abrassel/subscriptions", "organizations_url": "https://api.github.com/users/abrassel/orgs", "repos_url": "https://api.github.com/users/abrassel/repos", "events_url": "https://api.github.com/users/abrassel/events{/privacy}", "received_events_url": "https://api.github.com/users/abrassel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-01T23:13:25Z", "updated_at": "2020-05-03T14:33:05Z", "closed_at": "2020-05-03T14:33:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust test```\r\n\r\nI expected to see my tests run.\r\n\r\nInstead, this happened: ```thread panicked while panicking. aborting.```\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.42.0 (b8cedc004 2020-03-09)\r\nbinary: rustc\r\ncommit-hash: b8cedc00407a4c56a3bda1ed605c6fc166655447\r\ncommit-date: 2020-03-09\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.42.0\r\nLLVM version: 9.0\r\n```\r\n\r\n```\r\nrunning 2 tests\r\nthread 'linked_bst::tests::test_inorder' panicked at 'thread 'assertion failed: `(left == right)`\r\n  left: `Some(10)`,\r\n right: `Some(1)`linked_bst::tests::test_preorder', ' panicked at 'pqueue/src/linked_bst.rsassertion failed: `(left == right)`\r\n  left: `Some(7)`,\r\n right: `Some(4)`:', 250pqueue/src/linked_bst.rs::9223\r\n:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:77\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1052\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1426\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:472\r\n  11: rust_begin_unwind\r\n             at src/libstd/panicking.rs:380\r\n  12: std::panicking::begin_panic_fmt\r\n             at src/libstd/panicking.rs:334\r\n  13: pqueue::linked_bst::tests::test_inorder\r\n             at pqueue/src/linked_bst.rs:250\r\n  14: pqueue::linked_bst::tests::test_inorder::{{closure}}\r\n             at pqueue/src/linked_bst.rs:235\r\n  15: core::ops::function::FnOnce::call_once\r\n             at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/libcore/ops/function.rs:232\r\n  16: <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once\r\n             at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/liballoc/boxed.rs:1015\r\n  17: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:86\r\n  18: std::panicking::try\r\n             at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/libstd/panicking.rs:281\r\n  19: std::panic::catch_unwind\r\n             at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/libstd/panic.rs:394\r\n  20: test::run_test_in_process\r\n             at src/libtest/lib.rs:539\r\n  21: test::run_test::run_test_inner::{{closure}}\r\n             at src/libtest/lib.rs:452\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nthread 'linked_bst::tests::test_inorder' panicked at 'not yet implemented', pqueue/src/linked_bst.rs:stack backtrace:\r\n69:9\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:77\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1052\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1426\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:472\r\n  11: rust_begin_unwind\r\n             at src/libstd/panicking.rs:380\r\n  12: std::panicking::begin_panic_fmt\r\n             at src/libstd/panicking.rs:334\r\n  13: pqueue::linked_bst::tests::test_preorder\r\n             at pqueue/src/linked_bst.rs:223\r\n  14: pqueue::linked_bst::tests::test_preorder::{{closure}}\r\n             at pqueue/src/linked_bst.rs:207\r\n  15: core::ops::function::FnOnce::call_once\r\n             at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/libcore/ops/function.rs:232\r\n  16: <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once\r\n             at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/liballoc/boxed.rs:1015\r\n  17: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:86\r\n  18: std::panicking::try\r\n             at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/libstd/panicking.rs:281\r\n  19: std::panic::catch_unwind\r\n             at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/libstd/panic.rs:394\r\n  20: test::run_test_in_process\r\n             at src/libtest/lib.rs:539\r\n  21: test::run_test::run_test_inner::{{closure}}\r\n             at src/libtest/lib.rs:452\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nthread 'linked_bst::tests::test_preorder' panicked at 'not yet implemented', pqueue/src/linked_bst.rs:stack backtrace:\r\n69:9\r\n   0:     0x563e4d00a8c4 - backtrace::backtrace::libunwind::trace::h90669f559fb267f0\r\n                               at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1:     0x563e4d00a8c4 - backtrace::backtrace::trace_unsynchronized::hffde4e353d8f2f9a\r\n                               at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2:     0x563e4d00a8c4 - std::sys_common::backtrace::_print_fmt::heaf44068b7eaaa6a\r\n                               at src/libstd/sys_common/backtrace.rs:77\r\n   3:     0x563e4d00a8c4 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h88671019cf081de2\r\n                               at src/libstd/sys_common/backtrace.rs:59\r\n   4:     0x563e4d02baac - core::fmt::write::h4e6a29ee6319c9fd\r\n                               at src/libcore/fmt/mod.rs:1052\r\n   5:     0x563e4d007657 - std::io::Write::write_fmt::hf06b1c86d898d7d6\r\n                               at src/libstd/io/mod.rs:1426\r\n   6:     0x563e4d00cb75 - std::sys_common::backtrace::_print::h404ff5f2b50cae09\r\n                               at src/libstd/sys_common/backtrace.rs:62\r\n   7:     0x563e4d00cb75 - std::sys_common::backtrace::print::hcc4377f1f882322e\r\n                               at src/libstd/sys_common/backtrace.rs:49\r\n   8:     0x563e4d00cb75 - std::panicking::default_hook::{{closure}}::hc172eff6f35b7f39\r\n                               at src/libstd/panicking.rs:204\r\n   9:     0x563e4d00c861 - std::panicking::default_hook::h7a68887d113f8029\r\n                               at src/libstd/panicking.rs:224\r\n  10:     0x563e4d00d1da - std::panicking::rust_panic_with_hook::hb7ad5693188bdb00\r\n                               at src/libstd/panicking.rs:472\r\n  11:     0x563e4cfb81a7 - std::panicking::begin_panic::hfde593c8adcd0526\r\n                               at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/libstd/panicking.rs:399\r\n  12:     0x563e4cfb537d - pqueue::linked_bst::LinkedBST<T>::clear::h2873c5d588334bfd\r\n                               at pqueue/src/linked_bst.rs:69\r\n  13:     0x563e4cfb53ee - <pqueue::linked_bst::LinkedBST<T> as core::ops::drop::Drop>::drop::h38b4d751f0d5f3f0\r\n                               at pqueue/src/linked_bst.rs:119\r\n  14:     0x563e4cfba361 - core::ptr::drop_in_place::h35cce6e99d4c3796\r\n                               at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/libcore/ptr/mod.rs:174\r\n  15:     0x563e4cfbdf52 - pqueue::linked_bst::tests::test_inorder::hc7f228591a4e9506\r\n                               at pqueue/src/linked_bst.rs:260\r\n  16:     0x563e4cfb770a - pqueue::linked_bst::tests::test_inorder::{{closure}}::h8a090ecf7f7e0c38\r\n                               at pqueue/src/linked_bst.rs:235\r\n  17:     0x563e4cfba29e - core::ops::function::FnOnce::call_once::h88abc37c6a737e12\r\n                               at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/libcore/ops/function.rs:232\r\n  18:     0x563e4cfcb16f - <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once::h475aad1d2c31134b\r\n                               at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/liballoc/boxed.rs:1015\r\n  19:     0x563e4d013e77 - __rust_maybe_catch_panic\r\n                               at src/libpanic_unwind/lib.rs:86\r\n  20:     0x563e4cfe5f81 - std::panicking::try::hd62f6e4f8420ceba\r\n                               at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/libstd/panicking.rs:281\r\n  21:     0x563e4cfe5f81 - std::panic::catch_unwind::hc2e8046ccc21e1ce\r\n                               at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/libstd/panic.rs:394\r\n  22:     0x563e4cfe5f81 - test::run_test_in_process::h995368d8855d316e\r\n                               at src/libtest/lib.rs:539\r\n  23:     0x563e4cfe5f81 - test::run_test::run_test_inner::{{closure}}::h9d340cbc9c948d1d\r\n                               at src/libtest/lib.rs:452\r\n  24:     0x563e4cfbf8a6 - std::sys_common::backtrace::__rust_begin_short_backtrace::h263f57609c58fd78\r\n                               at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/libstd/sys_common/backtrace.rs:129\r\n  25:     0x563e4cfc3e76 - std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}::he48f3c390b307d2a\r\n                               at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/libstd/thread/mod.rs:475\r\n  26:     0x563e4cfc3e76 - <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once::h25632fa6cd6e735b\r\n                               at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/libstd/panic.rs:318\r\n  27:     0x563e4cfc3e76 - std::panicking::try::do_call::h46edd85e35bab050\r\n                               at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/libstd/panicking.rs:305\r\n  28:     0x563e4d013e77 - __rust_maybe_catch_panic\r\n                               at src/libpanic_unwind/lib.rs:86\r\n  29:     0x563e4cfc49d6 - std::panicking::try::h689d027f9de46764\r\n                               at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/libstd/panicking.rs:281\r\n  30:     0x563e4cfc49d6 - std::panic::catch_unwind::h007d6d1ca365ec57\r\n                               at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/libstd/panic.rs:394\r\n  31:     0x563e4cfc49d6 - std::thread::Builder::spawn_unchecked::{{closure}}::h7348caa4b4241ad9\r\n                               at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/libstd/thread/mod.rs:474\r\n  32:     0x563e4cfc49d6 - core::ops::function::FnOnce::call_once{{vtable.shim}}::h1c0e48707c1ce7ba\r\n                               at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/libcore/ops/function.rs:232\r\n  33:     0x563e4d001baf - <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once::he3e3bc9932f56404\r\n                               at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/liballoc/boxed.rs:1015\r\n  34:     0x563e4d0133e0 - <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once::h0d82364c11057a62\r\n                               at /rustc/b8cedc00407a4c56a3bda1ed605c6fc166655447/src/liballoc/boxed.rs:1015\r\n  35:     0x563e4d0133e0 - std::sys_common::thread::start_thread::h6cf2238254b521b3\r\n                               at src/libstd/sys_common/thread.rs:13\r\n  36:     0x563e4d0133e0 - std::sys::unix::thread::Thread::new::thread_start::he70a06005b4d03f8\r\n                               at src/libstd/sys/unix/thread.rs:80\r\n  37:     0x7fef0ea50609 - start_thread\r\n  38:     0x7fef0e95c103 - __clone\r\n  39:                0x0 - <unknown>\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "abrassel", "id": 22563285, "node_id": "MDQ6VXNlcjIyNTYzMjg1", "avatar_url": "https://avatars.githubusercontent.com/u/22563285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abrassel", "html_url": "https://github.com/abrassel", "followers_url": "https://api.github.com/users/abrassel/followers", "following_url": "https://api.github.com/users/abrassel/following{/other_user}", "gists_url": "https://api.github.com/users/abrassel/gists{/gist_id}", "starred_url": "https://api.github.com/users/abrassel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abrassel/subscriptions", "organizations_url": "https://api.github.com/users/abrassel/orgs", "repos_url": "https://api.github.com/users/abrassel/repos", "events_url": "https://api.github.com/users/abrassel/events{/privacy}", "received_events_url": "https://api.github.com/users/abrassel/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71778/timeline", "performed_via_github_app": null, "state_reason": "completed"}