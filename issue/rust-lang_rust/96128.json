{"url": "https://api.github.com/repos/rust-lang/rust/issues/96128", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96128/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96128/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96128/events", "html_url": "https://github.com/rust-lang/rust/issues/96128", "id": 1206215977, "node_id": "I_kwDOAAsO6M5H5WUp", "number": 96128, "title": "Closure in async block fails to compile when it should, issues incorrect/misleading diagnostic", "user": {"login": "cdhowie", "id": 354641, "node_id": "MDQ6VXNlcjM1NDY0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/354641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdhowie", "html_url": "https://github.com/cdhowie", "followers_url": "https://api.github.com/users/cdhowie/followers", "following_url": "https://api.github.com/users/cdhowie/following{/other_user}", "gists_url": "https://api.github.com/users/cdhowie/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdhowie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdhowie/subscriptions", "organizations_url": "https://api.github.com/users/cdhowie/orgs", "repos_url": "https://api.github.com/users/cdhowie/repos", "events_url": "https://api.github.com/users/cdhowie/events{/privacy}", "received_events_url": "https://api.github.com/users/cdhowie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-04-16T21:04:28Z", "updated_at": "2022-07-20T22:35:44Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I've put the code reproducing this issue in the [cdhowie/warp-lifetime-issue-repro](https://github.com/cdhowie/warp-lifetime-issue-repro) repository as it has a dependency on warp.  I have not been able to build a reproduction of this issue outside of warp or rocket-rs, but I believe the issue is with the compiler nonetheless, for a few reasons.  I have been able to reproduce the issue on all of the following Rust Docker images:\r\n\r\n* docker.io/library/rust:1.59-bullseye (d6c4db7b2530)\r\n* docker.io/library/rust:1.60-bullseye (5593c6ce4c4e)\r\n* docker.io/rustlang/rust:nightly-bullseye (cf477c958fa3 -- 1.62.0-nightly (e7575f967 2022-04-14))\r\n\r\nThe summary is that passing a very simple non-capturing closure in an async route handler causes a lifetime mismatch error, referencing a type that is not used or demanded in the handler:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n   --> src/main.rs:39:6\r\n    |\r\n39  |     .and_then(|_id, provider: Arc<T>| async move {\r\n    |      ^^^^^^^^ lifetime mismatch\r\n    |\r\n    = note: expected type `for<'r> FnOnce<(&&Item,)>`\r\n               found type `for<'r> FnOnce<(&'r &Item,)>`\r\nnote: this closure does not fulfill the lifetime requirements\r\n   --> src/main.rs:42:41\r\n    |\r\n42  |         let items = items.iter().filter(|item| !item.is_deleted());\r\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: the lifetime requirement is introduced here\r\n   --> /appsrc/.cache/registry/src/github.com-1ecc6299db9ec823/warp-0.3.2/src/filter/mod.rs:259:32\r\n    |\r\n259 |         F::Output: TryFuture + Send,\r\n    |                                ^^^^\r\n```\r\n\r\nNowhere in the handler is an `FnOnce` built, nor is one asked for by `Iterator::filter()` so at the very least the diagnostic is misleading.  However, rewriting the code to use a free function instead of a closure allows the code to compile:\r\n\r\n```\r\nfn item_is_not_deleted(item: &&Item) -> bool {\r\n    !item.is_deleted()\r\n}\r\n\r\n// Replace line 42 with:\r\n\r\nlet items = items.iter().filter(item_is_not_deleted);\r\n```\r\n\r\nI can't see any reason why a closure should fail here but a free function should work; I'd expect them to be effectively identical since the closure doesn't capture anything from its environment.\r\n\r\nFor more specific details, see the repository linked above.  (I'm happy to copy the repro code directly into this issue if desired, just let me know.)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96128/timeline", "performed_via_github_app": null, "state_reason": null}