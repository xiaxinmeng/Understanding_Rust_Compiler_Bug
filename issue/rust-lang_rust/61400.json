{"url": "https://api.github.com/repos/rust-lang/rust/issues/61400", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61400/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61400/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61400/events", "html_url": "https://github.com/rust-lang/rust/issues/61400", "id": 450865696, "node_id": "MDU6SXNzdWU0NTA4NjU2OTY=", "number": 61400, "title": "Coherence problem when a generic has a default value from an associated type", "user": {"login": "ohadravid", "id": 2358365, "node_id": "MDQ6VXNlcjIzNTgzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/2358365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ohadravid", "html_url": "https://github.com/ohadravid", "followers_url": "https://api.github.com/users/ohadravid/followers", "following_url": "https://api.github.com/users/ohadravid/following{/other_user}", "gists_url": "https://api.github.com/users/ohadravid/gists{/gist_id}", "starred_url": "https://api.github.com/users/ohadravid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ohadravid/subscriptions", "organizations_url": "https://api.github.com/users/ohadravid/orgs", "repos_url": "https://api.github.com/users/ohadravid/repos", "events_url": "https://api.github.com/users/ohadravid/events{/privacy}", "received_events_url": "https://api.github.com/users/ohadravid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-31T15:50:57Z", "updated_at": "2019-06-02T12:14:30Z", "closed_at": "2019-06-02T12:14:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I ran into a coherence problem where I think that the compiler is too strict, even though the code should be accepted according to the coherence rules (as far as I can tell).\r\n\r\nFor the code below, the compiler will report\r\n\r\n     error[E0210]: type parameter `<MyString as somelib::ConvertTo>::Output` must be used as the type parameter for some local type ...`,\r\n\r\nbut passing `O` explicitly (`for ItemOrConverted<MyString, String>`)  works.\r\n\r\nThe code:\r\n\r\n    /// In some other crate.\r\n    trait ConvertTo {\r\n        type Output;\r\n    }\r\n    \r\n    \r\n    enum ItemOrConverted<T: ConvertTo, O = <T as ConvertTo>::Output> {\r\n        Item(T),\r\n        Converted(O),\r\n    }\r\n    \r\n    /// In our crate.\r\n    struct MyString { }\r\n    \r\n    impl ConvertTo for MyString {\r\n        type Output = String;\r\n    }\r\n    \r\n    impl PartialEq<MyString> for ItemOrConverted<MyString> {\r\n        fn eq(&self, other: &MyString) -> bool {\r\n            unimplemented!();\r\n        }\r\n    }\r\n\r\nI have a trait with an associated type (`ConvertTo::Output`,  in the example below), and an enum which is generic over `T: ConvertTo` and generic over `O` *with a default value* for `O` based on the associated type from `T`'s `ConvertTo`, all in one crate.\r\n\r\nIn another crate I have `MyString`, and I would like to implement `PartialEq<MyString>` for this enum over `MyString`, but without changing the default value for `O`. (Think `impl PartialEq<MyString> for Cow<MyString>`).\r\n\r\nIs this really allowed \"in theory\" by the coherence rules or am I missing something?\r\n\r\n(edit: Compiling with `#![feature(re_rebalance_coherence)]` works!) \r\n\r\n## Meta\r\n\r\nrustc 1.37.0-nightly (37d001e4d 2019-05-29)\r\nbinary: rustc\r\ncommit-hash: 37d001e4deb206ed954fde5d91690221e8306fc3\r\ncommit-date: 2019-05-29\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.37.0-nightly\r\nLLVM version: 8.0\r\n", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61400/timeline", "performed_via_github_app": null, "state_reason": "completed"}