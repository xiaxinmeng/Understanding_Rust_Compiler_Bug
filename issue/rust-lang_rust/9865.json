{"url": "https://api.github.com/repos/rust-lang/rust/issues/9865", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/9865/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/9865/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/9865/events", "html_url": "https://github.com/rust-lang/rust/issues/9865", "id": 21008474, "node_id": "MDU6SXNzdWUyMTAwODQ3NA==", "number": 9865, "title": "std::fmt needs documentation on how to implement the traits", "user": {"login": "chris-morgan", "id": 392868, "node_id": "MDQ6VXNlcjM5Mjg2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/392868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-morgan", "html_url": "https://github.com/chris-morgan", "followers_url": "https://api.github.com/users/chris-morgan/followers", "following_url": "https://api.github.com/users/chris-morgan/following{/other_user}", "gists_url": "https://api.github.com/users/chris-morgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-morgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-morgan/subscriptions", "organizations_url": "https://api.github.com/users/chris-morgan/orgs", "repos_url": "https://api.github.com/users/chris-morgan/repos", "events_url": "https://api.github.com/users/chris-morgan/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-morgan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-10-15T10:38:00Z", "updated_at": "2013-10-19T05:26:23Z", "closed_at": "2013-10-19T05:26:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "OK, so we have our fancy new formatting with its traits and all, but at present it's not obvious as (most commonly) a library developer how to implement its goodness for your own types.\n\nWe should have a new section in the `std::fmt` documentation on \"how to implement these traits\". I think the general advice should be to use `write!`. It could have an example like this:\n\n``` rust\nuse std::fmt;\n\nstruct Vector2D {\n    x: int,\n    y: int,\n}\n\nimpl fmt::Default for Vector2D {\n    fn fmt(obj: &Vector2D, f: &mut fmt::Formatter) {\n        write!(f.buf, \"({}, {})\", obj.x, obj.y)\n    }\n}\n```\n\n(I still hate the way it's a static method with an explicit first argument rather than a regular method with `&self`. But ah! there is no syntax to express the other at present.)\n\nThis is a very basic example; more will be needed for the adventurous, covering flags, padding and so forth, how `f.buf` is a `Writer` which means you're dealing a lot with bytes rather than strings, etc.\n\nThis is related to #9806 in that it will make the way toward removing `ToStr` plainer.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/9865/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/9865/timeline", "performed_via_github_app": null, "state_reason": "completed"}