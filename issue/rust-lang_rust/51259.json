{"url": "https://api.github.com/repos/rust-lang/rust/issues/51259", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51259/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51259/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51259/events", "html_url": "https://github.com/rust-lang/rust/issues/51259", "id": 328301936, "node_id": "MDU6SXNzdWUzMjgzMDE5MzY=", "number": 51259, "title": "assertion failed: locate_ctxt.hash.is_none() when running \"cargo test\"", "user": {"login": "ms705", "id": 192315, "node_id": "MDQ6VXNlcjE5MjMxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/192315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ms705", "html_url": "https://github.com/ms705", "followers_url": "https://api.github.com/users/ms705/followers", "following_url": "https://api.github.com/users/ms705/following{/other_user}", "gists_url": "https://api.github.com/users/ms705/gists{/gist_id}", "starred_url": "https://api.github.com/users/ms705/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ms705/subscriptions", "organizations_url": "https://api.github.com/users/ms705/orgs", "repos_url": "https://api.github.com/users/ms705/repos", "events_url": "https://api.github.com/users/ms705/events{/privacy}", "received_events_url": "https://api.github.com/users/ms705/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 630810559, "node_id": "MDU6TGFiZWw2MzA4MTA1NTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-libtest", "name": "A-libtest", "color": "f7e101", "default": false, "description": "Area: #[test] related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-31T21:22:37Z", "updated_at": "2018-07-07T21:19:20Z", "closed_at": "2018-07-07T21:19:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the latest nightly, running `cargo test` on the HEAD commit of [distributary-mysql](https://github.com/mit-pdos/distributary-mysql) fails with a compiler crash, apparently while trying to resolve a crate. `cargo build` works without issue. N.B.: `Cargo.toml` uses `rename-dependency`.\r\n\r\nCommand to reproduce:\r\n```\r\n$ git clone https://github.com/mit-pdos/distributary-mysql\r\n$ cd distributary-mysql\r\n$ cargo test\r\n```\r\n\r\n_I expected to see this happen:_ The code should compile, possibly with some errors.\r\n\r\n_Instead, this happened:_ The compiler crashes with error\r\n```\r\nthread 'main' panicked at 'assertion failed: locate_ctxt.hash.is_none()', librustc_metadata/creader.rs:347:21\r\n```\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.28.0-nightly (5d0631a64 2018-05-30)\r\nbinary: rustc\r\ncommit-hash: 5d0631a6438cf30cac236b7176371663e35c8d07\r\ncommit-date: 2018-05-30\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.28.0-nightly\r\nLLVM version: 6.0\r\n```\r\n\r\nBacktrace:\r\n```\r\nthread 'main' panicked at 'assertion failed: locate_ctxt.hash.is_none()', librustc_metadata/creader.rs:347:21\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:467\r\n   6: std::panicking::begin_panic\r\n   7: rustc_metadata::cstore::CStore::iter_crate_data\r\n   8: rustc_metadata::creader::CrateLoader::load\r\n   9: rustc_metadata::creader::CrateLoader::resolve_crate\r\n  10: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &'a mut F>::call_once\r\n  11: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\n  12: rustc_metadata::creader::CrateLoader::resolve_crate\r\n  13: <rustc_metadata::creader::CrateLoader<'a> as rustc::middle::cstore::CrateLoader>::process_extern_crate\r\n  14: rustc_resolve::build_reduced_graph::<impl rustc_resolve::Resolver<'a>>::build_reduced_graph_for_item\r\n  15: <rustc_resolve::build_reduced_graph::BuildReducedGraphVisitor<'a, 'b> as syntax::visit::Visitor<'a>>::visit_item\r\n  16: syntax::visit::walk_item\r\n  17: <rustc_resolve::build_reduced_graph::BuildReducedGraphVisitor<'a, 'b> as syntax::visit::Visitor<'a>>::visit_item\r\n  18: syntax::ext::expand::Expansion::visit_with\r\n  19: rustc_resolve::macros::<impl syntax::ext::base::Resolver for rustc_resolve::Resolver<'a>>::visit_expansion\r\n  20: syntax::ext::expand::MacroExpander::collect_invocations\r\n  21: syntax::ext::expand::MacroExpander::expand\r\n  22: syntax::ext::expand::MacroExpander::expand_crate\r\n  23: rustc_driver::driver::phase_2_configure_and_expand_inner::{{closure}}\r\n  24: rustc::util::common::time\r\n  25: rustc_driver::driver::phase_2_configure_and_expand\r\n  26: rustc_driver::driver::compile_input\r\n  27: rustc_driver::run_compiler_with_pool\r\n  28: syntax::with_globals\r\n  29: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  30: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:105\r\n  31: rustc_driver::run\r\n  32: rustc_driver::main\r\n  33: std::rt::lang_start::{{closure}}\r\n  34: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  35: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:105\r\n  36: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:374\r\n             at libstd/rt.rs:58\r\n  37: main\r\n  38: __libc_start_main\r\n  39: <unknown>\r\nquery stack during panic:\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n```\r\n\r\n## Possibly useful observations\r\n\r\n* This only happens with `335c2ae` present in the tree; prior commits do not crash the compiler (but fail to compile with appropriate error messages).\r\n* `335c2ae` [introduced a renamed crate dependency](https://github.com/mit-pdos/distributary-mysql/commit/335c2ae63f10b1b4d32aaba1b30c7a3db3232a67#diff-80398c5faae3c069e4e6aa2ed11b28c0R15) (`api` in `distributary` is used as `distributary` via `package = \"api\"`).\r\n* This happens with the latest nightly as well as older ones (e.g., 2018-05-26).\r\n* This **only** happens on `cargo test`; normal builds work fine.", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51259/timeline", "performed_via_github_app": null, "state_reason": "completed"}