{"url": "https://api.github.com/repos/rust-lang/rust/issues/26120", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/26120/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/26120/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/26120/events", "html_url": "https://github.com/rust-lang/rust/issues/26120", "id": 86481574, "node_id": "MDU6SXNzdWU4NjQ4MTU3NA==", "number": 26120, "title": "TRPL: (assignment == empty tuple), please elaborate", "user": {"login": "mcast", "id": 36801, "node_id": "MDQ6VXNlcjM2ODAx", "avatar_url": "https://avatars.githubusercontent.com/u/36801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcast", "html_url": "https://github.com/mcast", "followers_url": "https://api.github.com/users/mcast/followers", "following_url": "https://api.github.com/users/mcast/following{/other_user}", "gists_url": "https://api.github.com/users/mcast/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcast/subscriptions", "organizations_url": "https://api.github.com/users/mcast/orgs", "repos_url": "https://api.github.com/users/mcast/repos", "events_url": "https://api.github.com/users/mcast/events{/privacy}", "received_events_url": "https://api.github.com/users/mcast/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-06-09T07:00:02Z", "updated_at": "2015-06-11T08:35:06Z", "closed_at": "2015-06-11T08:35:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nI really like TRPL and have found it answers most of my questions in the footnotes.\nLooking at https://github.com/rust-lang/rust/blame/stable/src/doc/trpl/functions.md#L144-L153\n\n> Note that assigning to an already-bound variable (e.g. y = 5) is still an expression,\n> although its value is not particularly useful. Unlike other languages where an assignment\n> evaluates to the assigned value (e.g. 5 in the previous example), in Rust the value of an\n> assignment is an empty tuple ():\n> \n> ``` rust\n> let mut y = 5;\n> \u00a0\n> let x = (y = 6);  // x has the value `()`, not `6`\n> ```\n\nI guessed this difference would be to discourage \"clever\" coding..?  It would be nice to have an explanatory link to read.\n\nThanks,\n\nMatthew\n\n---\n\nps. research done...  I could find only https://internals.rust-lang.org/t/allow-loops-to-return-values-other-than/567 on loop return values.\n", "closed_by": {"login": "mcast", "id": 36801, "node_id": "MDQ6VXNlcjM2ODAx", "avatar_url": "https://avatars.githubusercontent.com/u/36801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcast", "html_url": "https://github.com/mcast", "followers_url": "https://api.github.com/users/mcast/followers", "following_url": "https://api.github.com/users/mcast/following{/other_user}", "gists_url": "https://api.github.com/users/mcast/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcast/subscriptions", "organizations_url": "https://api.github.com/users/mcast/orgs", "repos_url": "https://api.github.com/users/mcast/repos", "events_url": "https://api.github.com/users/mcast/events{/privacy}", "received_events_url": "https://api.github.com/users/mcast/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/26120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/26120/timeline", "performed_via_github_app": null, "state_reason": "completed"}