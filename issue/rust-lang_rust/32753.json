{"url": "https://api.github.com/repos/rust-lang/rust/issues/32753", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/32753/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/32753/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/32753/events", "html_url": "https://github.com/rust-lang/rust/issues/32753", "id": 146117391, "node_id": "MDU6SXNzdWUxNDYxMTczOTE=", "number": 32753, "title": "Some data is not hashed by the SVH that ought to be", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}], "state": "closed", "locked": false, "assignee": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/30", "html_url": "https://github.com/rust-lang/rust/milestone/30", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/30/labels", "id": 1900003, "node_id": "MDk6TWlsZXN0b25lMTkwMDAwMw==", "number": 30, "title": "Incremental compilation beta", "description": "Reach a point where we offer people incremental compilation on stable and encourage them to use it. The idea is to have some minimal set of performance goals and good correctness testing.", "creator": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 27, "state": "closed", "created_at": "2016-07-23T09:15:43Z", "updated_at": "2017-03-06T17:46:30Z", "due_on": null, "closed_at": "2017-03-06T17:46:30Z"}, "comments": 10, "created_at": "2016-04-05T22:02:56Z", "updated_at": "2016-09-06T23:45:47Z", "closed_at": "2016-09-06T23:45:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**New summary:**\n\nI think we've all agreed by now that we will focus on the ICH (incremental compilation hash) and revisit the question of a SVH (stable version hash, used to detect ABI-incompatible changes) at some future date. The \"original summary\" (below) goes into some of the discussion.\n\nI've thus repurposed this issue to target addressing the shortcomings of the existing hash for the purposes of incremental compilation. The following checklist is derived from [@michaelwoerister's comment](https://github.com/rust-lang/rust/issues/32753#issuecomment-233073399):\n- [x] incorporate results of name resolution pass, since name resolution is not tracked\n- [ ] incorporate spans, when needed (#33888)\n- [x] ignore nested items, since the use of items is tracked independently\n  - note that `visit_stmt()` and `visit_decl()` by themselves should not change the hash, since they could just represent a nested item (which we either want to ignore completely or handle in a position independent way).\n- [ ] the `CaptureClause` of closures should not be ignored\n- [ ] `walk_generics()` in `visit_variant()` and `visit_variant_data()` are redundant; this is already handled by `visit_item()`\n- [ ] explicitly hashing the label names in `ExprLoop`, `ExprBreak`, and `ExprAgain` is redundant, `visit_name()` is called for those anyway (as already done for `ExprWhile`)\n\nThere are also optional refinements:\n- [ ] do not hash the actual names of local variables etc, but just map them to unique identifiers or something like that; seems challenging to get something that is both deterministic, however, and also independent from the name itself.\n\n---\n\n**Original summary:**\n\nIn https://github.com/rust-lang/rust/pull/32016, I (ab)used the SVH to serve as a hash for the purposes of incremental compilation. This is simply wrong, because the SVH intentionally omits some details that do not affect the ABI, but which very much affect whether code needs to be recompiled (e.g., the value of a constant). This needs to be fixed, but in one of two ways:\n- Create an alternative incremental compilation hash (ICH), keeping the existing consumers of the SVH.\n- Convert the SVH (in place) into the ICH, and make the existing consumers use that.\n\nAt this point, there are really very few users of the SVH:\n- Each crate stores the SVH in its metadata, which the compiler then uses to detect transitive mismatches, where you compile crate B with some version of crate A, but you are now compiling C (which uses B) with a distinct version of crate A in scope.\n- Debuginfo uses it for some reason or other.\n- There is no third use. (I think)\n\nThe second use is unnecessary. The first use is interesting. It's unclear how flexible this check is. But if we used the _ICH_ for this purpose, it would basically be equivalent to the SVH today (the SVH today _is_ looser, as I wrote in the beginning, but _effectively_ any change will cause the SVH to change, with very few exceptions). \n\nMoreover, I claim that even if, someday, we wanted to modify the check to be true ABI compatibility, we probably wouldn't want a single SVH hash. We'd probably want each function hash to include information about the way the argument types are represented, so that we can detect mismatches on a fine-grained level, rather than just \"some fn, which you may not even call, changed\". But I'm not sure.\n\nOne problem with using the ICH everywhere, though, is that we must be careful about endianness. We'd prefer if cross-compiling did not affect the ICH.\n\nI guess I've wasted more time writing this paragraph than it really merits. End of the day, the choice is:\n- Keep the SVH around, weird as it is.\n- Kill the SVH and just ICH, which should be stricter.\n\ncc @michaelwoerister \n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/32753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/32753/timeline", "performed_via_github_app": null, "state_reason": "completed"}