{"url": "https://api.github.com/repos/rust-lang/rust/issues/104130", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104130/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104130/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104130/events", "html_url": "https://github.com/rust-lang/rust/issues/104130", "id": 1439166697, "node_id": "I_kwDOAAsO6M5Vx_Dp", "number": 104130, "title": "Allow users to override or filter list of exported symbols passed to the WASM linker", "user": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 474645165, "node_id": "MDU6TGFiZWw0NzQ2NDUxNjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-wasm", "name": "O-wasm", "color": "6e6ec0", "default": false, "description": "Target: WASM (WebAssembly), http://webassembly.org/"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2022-11-07T23:40:20Z", "updated_at": "2023-01-10T07:32:04Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, the way export visibility is handled in WASM is that rustc manually passes a list of all exported functions to the WASM linker:\r\n\r\nhttps://github.com/rust-lang/rust/blob/d69c33ad4c65e42a7a2d018a5c2ee1c7dbd0fc15/compiler/rustc_codegen_ssa/src/back/linker.rs#L1312-L1314\r\n\r\nIn almost every mode of compilation for Rust it doesn't matter too much if the exports list covers more than is needed, because there's a linker at the very end dealing with this. Rlibs and staticlibs may end up containing extra symbols, but the end binary will have dead code removed by the final linker. Dynamic libraries end up containing extra symbols which is a disk size issue (not a huge deal), but the dynamic linker's capable of only paging in the necessary bits.\r\n\r\nThe landscape is very different for WASM, however. In WASM, the final binary is a .wasm file that gets sent over the network, and its size matters. It's impractical to compile large libraries to a single .wasm file and recommend everyone use it since most users will not be using 99% of that wasm file.\r\n\r\nThere are tools for doing dead code elimination in JS, usually going by the name \"tree shaking\". Furthermore it's often practical for a WASM user to just list out the symbols they need.\r\n\r\nWith all of this, it would be useful to be able to customize which symbols get exported as a part of the linker process, rather than updating the code (as different library clients will need different things and it might not always be practical to pepper the library with a hundred client specific cfgs, nor is it an appropriate separation of concerns)\r\n\r\nIt would be nice if rust had a pair of codegen flags that would:\r\n\r\n - Allow explicitly allowlisting/listing symbols that get passed down to `rust-lld --export`\r\n - Allow explicitly denylisting symbols that get passed down to `rust-lld --export`, to \"filter out\" features\r\n\r\ncc @sffc", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104130/timeline", "performed_via_github_app": null, "state_reason": null}