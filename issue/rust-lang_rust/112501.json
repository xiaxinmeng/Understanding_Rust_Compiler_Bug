{"url": "https://api.github.com/repos/rust-lang/rust/issues/112501", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112501/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112501/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112501/events", "html_url": "https://github.com/rust-lang/rust/issues/112501", "id": 1751066023, "node_id": "I_kwDOAAsO6M5oXyWn", "number": 112501, "title": "Cross-compilation from LInux to x86_64-apple-darwin fails due to bad \"cc\" command line params", "user": {"login": "John-Nagle", "id": 942608, "node_id": "MDQ6VXNlcjk0MjYwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/942608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/John-Nagle", "html_url": "https://github.com/John-Nagle", "followers_url": "https://api.github.com/users/John-Nagle/followers", "following_url": "https://api.github.com/users/John-Nagle/following{/other_user}", "gists_url": "https://api.github.com/users/John-Nagle/gists{/gist_id}", "starred_url": "https://api.github.com/users/John-Nagle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/John-Nagle/subscriptions", "organizations_url": "https://api.github.com/users/John-Nagle/orgs", "repos_url": "https://api.github.com/users/John-Nagle/repos", "events_url": "https://api.github.com/users/John-Nagle/events{/privacy}", "received_events_url": "https://api.github.com/users/John-Nagle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123110, "node_id": "MDU6TGFiZWwxMjMxMTA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-linux", "name": "O-linux", "color": "6e6ec0", "default": false, "description": "Operating system: Linux"}, {"id": 123111, "node_id": "MDU6TGFiZWwxMjMxMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-macos", "name": "O-macos", "color": "6e6ec0", "default": false, "description": "Operating system: macOS"}, {"id": 167285428, "node_id": "MDU6TGFiZWwxNjcyODU0Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-cross", "name": "A-cross", "color": "f7e101", "default": false, "description": "Area: Cross compilation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-06-10T18:16:54Z", "updated_at": "2023-06-10T19:08:00Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Rust compilation on Ubuntu 22.04.2 LTS with target **x86_64-apple-darwin** fails with a build error:\r\n\r\n`cc: error: unrecognized command-line option '-arch' `\r\ncargo generated a cc command that can't work.\r\n\r\ncc is `(Ubuntu 11.3.0-1ubuntu1-22.04.1) 11.3.0`, installed with Ubuntu 22.04.2 LTS.\r\n\r\nReproduce by:\r\n```\r\nrustup target add x86_64-apple-darwin\r\ncargo new hello_world\r\ncd hello_world\r\ncargo build \r\n```\r\nExpected a successful cross-compile.\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.69.0 (84c898d65 2023-04-16)\r\nbinary: rustc\r\ncommit-hash: 84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc\r\ncommit-date: 2023-04-16\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.69.0\r\nLLVM version: 15.0.7\r\n\r\n```\r\n## Discussion\r\nIt's clear why this doesn't work. Cargo/rustc is invoking the platform's linker in a cross-compile, and the default linker is not capable of that cross-platform action. So this is a tool dependency problem. \"rustup\" installed support for that target with no errors, and if dependency checks needed to be made, they were not made at that time.\r\n\r\nNote that the hard work is done. The compile is succesful. It's only the linking that does not work.\r\n\r\nIt can be argued that this particular cross-compilation pair is not supported. However, both the compiling platform and the target platform are [Rust Tier 1 supported targets. ](https://doc.rust-lang.org/nightly/rustc/platform-support.html) \"Tier 1 targets can be thought of as 'guaranteed to work'.\" There are no footnotes to the target table indicating that this source->target combination does not work.\r\n\r\n[Policy on target support](https://doc.rust-lang.org/nightly/rustc/target-tier-policy.html) says that \"Tier 2 targets should, if at all possible, support cross-compiling. Tier 2 targets should not require using the target as the host for builds, even if the target supports host tools.\" That's for Tier 2. This is a Tier 1 target. For Tier 1 with Host Tools, the policy notes \"Providing host tools does not exempt a target from requirements to support cross-compilation if at all possible.\"\r\n\r\nSo, if this cross-compile is technically possible, it is a bug that it does not work.\r\n\r\nIt is technically possible, since at least two unsupported workarounds exist.\r\n### Workarounds\r\nThere are at least two unsupported workarounds for this, using different tool chains.\r\n\r\n1. [Osxcross](https://github.com/tpoechtrager/osxcross) This is a set of scripts that collects tools capable of this build. This approach may require the use of proprietary Apple, Inc. libraries, which is inconsistent with Rust policy.\r\n2. [Zig](https://actually.fyi/posts/zig-makes-rust-cross-compilation-just-work/) Using components of the Zig toolchain appears to work. This approach does not seem to require any proprietary Apple, Inc. code.\r\n\r\n### Industry trends\r\nCross-platform support is becoming more widespread. Microsoft recently announced that their Windows OS is now fully supported on some Apple hardware. Apple is now offering a [game porting toolkit](https://liliputing.com/apples-game-porting-toolkit-lets-windows-games-run-on-macos-but-its-not-meant-for-end-users-yet/) for converting Windows games to Apple targets. The \"walled garden\" model seems to be weakening, at least for desktops. Zig, a language which competes in Rust's space, already supports this cross-compile.\r\n\r\nSo this cross-compile should be fully supported. Thank you.\r\n\r\n\r\n\r\n\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112501/timeline", "performed_via_github_app": null, "state_reason": null}