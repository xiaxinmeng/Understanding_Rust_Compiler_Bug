{"url": "https://api.github.com/repos/rust-lang/rust/issues/56297", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56297/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56297/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56297/events", "html_url": "https://github.com/rust-lang/rust/issues/56297", "id": 385008855, "node_id": "MDU6SXNzdWUzODUwMDg4NTU=", "number": 56297, "title": "Useless copies of alignment padding", "user": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-27T22:10:56Z", "updated_at": "2023-01-25T23:00:57Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See the following extreme test-case:\r\n```rust\r\n#[repr(align(1024))]\r\npub struct Foo(usize);\r\n\r\npub fn foo() -> Box<Foo> {\r\n    Box::new(Foo(42))\r\n}\r\n```\r\n\r\nThis is what godbolt says rust stable does with it with -O:\r\n```asm\r\n        push    rbx\r\n        sub     rsp, 1024\r\n        mov     edi, 1024\r\n        mov     esi, 1024\r\n        call    __rust_alloc@PLT\r\n        test    rax, rax\r\n        je      .LBB0_1\r\n        mov     rbx, rax\r\n        mov     qword ptr [rax], 42\r\n        mov     rdi, rax\r\n        add     rdi, 8\r\n        lea     rsi, [rsp + 8]\r\n        mov     edx, 1016\r\n        call    memcpy@PLT\r\n        mov     rax, rbx\r\n        add     rsp, 1024\r\n        pop     rbx\r\n        ret\r\n.LBB0_1:\r\n        mov     edi, 1024\r\n        mov     esi, 1024\r\n        call    alloc::alloc::handle_alloc_error@PLT\r\n```\r\n\r\nThat is, it allocates 1024 bytes (expected), writes `42` directly at the allocated location, and then proceeds to copy 1016 (uninitialized) bytes from the stack.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56297/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 1, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56297/timeline", "performed_via_github_app": null, "state_reason": null}