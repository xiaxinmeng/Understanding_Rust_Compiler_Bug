{"url": "https://api.github.com/repos/rust-lang/rust/issues/47649", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47649/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47649/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47649/events", "html_url": "https://github.com/rust-lang/rust/issues/47649", "id": 290332549, "node_id": "MDU6SXNzdWUyOTAzMzI1NDk=", "number": 47649, "title": "The \"method references Self\" object-safety rule is overly restrictive", "user": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-22T02:21:06Z", "updated_at": "2020-04-20T22:46:00Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is there any reason why the following trait method can't be object safe?\r\n\r\n```rust\r\ntrait Trait {\r\n    fn take_and_return_box(self: Box<Self>) -> Box<Self>;\r\n}\r\n```\r\nIntuitively, it would return `Box<T>` when called on a `Box<T>` where `T: Trait`, and `Box<Trait>` when called on a `Box<Trait>`. The compiler would do an unsize coercion on the `Box<T>` returned by the vtable method, combining it with the vtable of the `Box<Trait>` that was passed in.\r\n\r\nIf I'm not mistaken, the object safety rule could be relaxed to allow methods that reference the `Self` type in the return value, as long as it's a type that meets certain `CoerceUnsized` requirements:\r\n\r\n- Let `ReturnType<Self>` be the return type of the method, e.g. `Box<Self>`\r\n- For a given type `T`, let `ReturnType<T>` be `ReturnType<Self>` with every occurrence of `Self` replaced with `T`\r\n- The trait method is object safe if the following conditions are met:\r\n    - `ReturnType<Trait>: Sized`\r\n    - for every type `T: Unsize<Trait>`, `ReturnType<T>: CoerceUnsized<Trait>`.\r\n\r\nNote: this is very similar to what I think the object-safety rules for [arbitrary_self_types (#44874)](https://github.com/rust-lang/rust/issues/44874) will look like", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47649/reactions", "total_count": 10, "+1": 10, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47649/timeline", "performed_via_github_app": null, "state_reason": null}