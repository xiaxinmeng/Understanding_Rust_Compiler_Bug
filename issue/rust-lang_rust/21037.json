{"url": "https://api.github.com/repos/rust-lang/rust/issues/21037", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/21037/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/21037/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/21037/events", "html_url": "https://github.com/rust-lang/rust/issues/21037", "id": 54101645, "node_id": "MDU6SXNzdWU1NDEwMTY0NQ==", "number": 21037, "title": "Attempting to access non-existent field on type causes ICE", "user": {"login": "aidanhs", "id": 1050652, "node_id": "MDQ6VXNlcjEwNTA2NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1050652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidanhs", "html_url": "https://github.com/aidanhs", "followers_url": "https://api.github.com/users/aidanhs/followers", "following_url": "https://api.github.com/users/aidanhs/following{/other_user}", "gists_url": "https://api.github.com/users/aidanhs/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidanhs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidanhs/subscriptions", "organizations_url": "https://api.github.com/users/aidanhs/orgs", "repos_url": "https://api.github.com/users/aidanhs/repos", "events_url": "https://api.github.com/users/aidanhs/events{/privacy}", "received_events_url": "https://api.github.com/users/aidanhs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-01-12T20:20:44Z", "updated_at": "2015-04-22T01:24:33Z", "closed_at": "2015-04-22T01:24:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\n$ RUST_BACKTRACE=1 cargo build                                                                                                                                                                                                 \n   Compiling tclscan v0.0.1 (file:///home/aidanhs/rust/tclscan)\n/home/aidanhs/rust/tclscan/src/main.rs:23:22: 23:34 error: attempted access of field `ArgvMap` on type `Args`, but no field with that name was found\n/home/aidanhs/rust/tclscan/src/main.rs:23     let take_stdin = args.ArgvMap[\"-\"];\n                                                                ^~~~~~~~~~~~\nerror: internal compiler error: no type for node 250: expr \"-\" (id=250) in fcx 0x7fbb7afebc68\nnote: the compiler unexpectedly panicked. this is a bug.\nnote: we would appreciate a bug report: http://doc.rust-lang.org/complement-bugreport.html\nnote: run with `RUST_BACKTRACE=1` for a backtrace\nthread 'rustc' panicked at 'Box<Any>', /home/aidanhs/rust/rust/src/libsyntax/diagnostic.rs:182\n\nstack backtrace:\n   1:     0x7fbb82a8d6b0 - sys::backtrace::write::h45e4a5c1a13bb3468Rt\n   2:     0x7fbb82aaf150 - failure::on_fail::h49ea64be233d5ff7k8z\n   3:     0x7fbb82a1dd00 - rt::unwind::begin_unwind_inner::h269b0cb77adc909bcNz\n   4:     0x7fbb7daef910 - rt::unwind::begin_unwind::h9484920305264525146\n   5:     0x7fbb7daf01b0 - diagnostic::Handler::bug::haa1a07a4c33aa66btWF\n   6:     0x7fbb80d8e610 - session::Session::bug::hded4db1f83514fa5ETq\n   7:     0x7fbb821a7140 - check::FnCtxt<'a, 'tcx>::node_ty::hc014d4b6376982aaRcm\n   8:     0x7fbb821d6620 - middle::mem_categorization::MemCategorizationContext<'t, TYPER>::cat_expr_unadjusted::h11968388842244901477\n   9:     0x7fbb821d74e0 - middle::mem_categorization::MemCategorizationContext<'t, TYPER>::cat_expr::h12238244667137168951\n  10:     0x7fbb822196e0 - middle::expr_use_visitor::ExprUseVisitor<'d, 't, 'tcx, TYPER>::consume_expr::h4490449580609183048\n  11:     0x7fbb82216e30 - middle::expr_use_visitor::ExprUseVisitor<'d, 't, 'tcx, TYPER>::walk_expr::h4171668758978992957\n  12:     0x7fbb82216940 - middle::expr_use_visitor::ExprUseVisitor<'d, 't, 'tcx, TYPER>::walk_block::h12980838698167173709\n  13:     0x7fbb82210150 - check::upvar::AdjustBorrowKind<'a, 'tcx>::analyze_fn::hff9b7b8bc9cbab54vji\n  14:     0x7fbb8223b270 - check::check_bare_fn::h6932e2ad6c2c068013j\n  15:     0x7fbb82233510 - check::check_item::h0a5f7f6fd4eb2caeOmk\n  16:     0x7fbb822ffdb0 - check_crate::unboxed_closure.30794\n  17:     0x7fbb822fa970 - check_crate::hdd431d95783baf8avay\n  18:     0x7fbb82fe3770 - driver::phase_3_run_analysis_passes::h82e70f1cc5c26fdfgwa\n  19:     0x7fbb82fcbd90 - driver::compile_input::h743c002cd7915502xba\n  20:     0x7fbb830963b0 - monitor::unboxed_closure.22508\n  21:     0x7fbb83096290 - thunk::F.Invoke<A, R>::invoke::h16747943875488918271\n  22:     0x7fbb830951f0 - rt::unwind::try::try_fn::h18356863736036389421\n  23:     0x7fbb82b14e70 - rust_try_inner\n  24:     0x7fbb82b14e60 - rust_try\n  25:     0x7fbb830954a0 - thunk::F.Invoke<A, R>::invoke::h244180221950939313\n  26:     0x7fbb82a9d0a0 - sys::thread::thread_start::h0e2004bfb6807920VJw\n  27:     0x7fbb7d30f0c0 - start_thread\n  28:     0x7fbb826c0ec9 - __clone\n  29:                0x0 - <unknown>\n\nCould not compile `tclscan`.\n\nTo learn more, run the command again with --verbose.\n```\n\n``` rust\nextern crate \"rustc-serialize\" as rustc_serialize;\nextern crate docopt;\nextern crate tclscan;\nuse std::os;\nuse docopt::Docopt;\nuse tclscan::rstcl;\n\nstatic USAGE: &'static str = \"\nUsage: tclscan check [ <path> | - ]\n       tclscan parsestr -\n\";\n\n#[derive(RustcDecodable, Show)]\nstruct Args {\n    cmd_check: bool,\n    cmd_parsestr: bool,\n    arg_path: String,\n}\n\npub fn main() {\n    let args = os::args();\n    let args: Args = Docopt::new(USAGE).and_then(|d| d.decode()).unwrap_or_else(|e| e.exit());\n    let take_stdin = args.ArgvMap[\"-\"];\n    match (args.cmd_check, args.cmd_parsestr, take_stdin) {\n        (true, false, false) => tclscan::scan_file(args.arg_path.as_slice()),\n        (false, true, false) => tclscan::scan_script(args.arg_path.as_slice()),\n        _ => panic!(\"Internal error, cannot handle args\"),\n    }\n}\n```\n", "closed_by": {"login": "aidanhs", "id": 1050652, "node_id": "MDQ6VXNlcjEwNTA2NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1050652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidanhs", "html_url": "https://github.com/aidanhs", "followers_url": "https://api.github.com/users/aidanhs/followers", "following_url": "https://api.github.com/users/aidanhs/following{/other_user}", "gists_url": "https://api.github.com/users/aidanhs/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidanhs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidanhs/subscriptions", "organizations_url": "https://api.github.com/users/aidanhs/orgs", "repos_url": "https://api.github.com/users/aidanhs/repos", "events_url": "https://api.github.com/users/aidanhs/events{/privacy}", "received_events_url": "https://api.github.com/users/aidanhs/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/21037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/21037/timeline", "performed_via_github_app": null, "state_reason": "completed"}