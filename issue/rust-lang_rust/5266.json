{"url": "https://api.github.com/repos/rust-lang/rust/issues/5266", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/5266/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/5266/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/5266/events", "html_url": "https://github.com/rust-lang/rust/issues/5266", "id": 11766603, "node_id": "MDU6SXNzdWUxMTc2NjYwMw==", "number": 5266, "title": "RFC: turn `true` and `false` into enums", "user": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2013-03-07T16:18:51Z", "updated_at": "2013-03-12T17:03:27Z", "closed_at": "2013-03-12T17:03:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\n< bstrie> pcwalton: you wouldn't need to count true and false if they were done\n          as enums, is there a reason they aren't?\n<@pcwalton> bstrie: because enums do not have a defined memory layout but\n            booleans do\n<@pcwalton> anyway, I would probably be in favor of getting rid of \"true\" and\n            \"false\" and doing what Go does\n<@pcwalton> since it's somewhat inconsistent that \"bool\" is not a keyword in\n            Rust but \"true\" and \"false\" are\n<@nmatsakis> ...regarding bool, remember we have check exhaustiveness.\n<@nmatsakis> an enum would work better\n<@pcwalton> nmatsakis: ah, yes. well, enums don't work because bools have size\n            in rust and we don't specify enum layout\n<@pcwalton> at least, I'm proposing that we don't\n<@pcwalton> in order to leave room for data layout optimizations (e.g.\n            Option<~T> becoming a nullable pointer, Result<(),~T> becoming a\n            nullable pointer, etc)\n<@nmatsakis> pcwalton: I think we should permit the layout of enums to be\n             specified with annotations.\n<@nmatsakis> so bool could be labeled.\n<@nmatsakis> we're defining it, anyhow.\n<@pcwalton> hmm\n< strcat> pcwalton: bool could just rely on the implementation details, since\n          it's part of the implementation\n<@pcwalton> that might work yeah\n< strcat> just make the discriminant only as big as needed and it'll be 1 byte\n< strcat> pcwalton: or you could say the layout is implementation defined if it\n          contains pointers/arrays/strings\n<@pcwalton> hmm, yes, that's possible\n```\n", "closed_by": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/5266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/5266/timeline", "performed_via_github_app": null, "state_reason": "completed"}