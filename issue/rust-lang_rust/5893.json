{"url": "https://api.github.com/repos/rust-lang/rust/issues/5893", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/5893/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/5893/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/5893/events", "html_url": "https://github.com/rust-lang/rust/issues/5893", "id": 13221213, "node_id": "MDU6SXNzdWUxMzIyMTIxMw==", "number": 5893, "title": "RFC: Partial application sugar", "user": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2013-04-15T21:41:05Z", "updated_at": "2021-06-19T13:46:28Z", "closed_at": "2013-04-15T22:03:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "At the moment, if you want to partially apply a function the only way is to write a closure:\n\n```\nlet part = |x, z| foo(x, 42, z);\n```\n\nThat isn't to bad, but still more verbose than necessary, so I propose a special sugar for this usage:\n\n```\nlet part = foo(_, 42, _);\n```\n\nThe rules are simple: \n- For the first `_` in an expression, transform the whole expression into a closure by putting an `|...|` at the front and replacing the `_` with the first argument in there.\n- For each following `_` in a expression, append an argument to the argument list, and replace the `_` with that, too.\n\nThis would also allow things like `v.map(_ + 5).filter(3 < _)` to work, which read really nice.\n\nThings would get a bit hairy if you involve `if` or `match`, but each arm would just need the rule to have the same number of `_`s. And it would be unidiomatic to use it for bigger code structures anyway.\n", "closed_by": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/5893/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/5893/timeline", "performed_via_github_app": null, "state_reason": "completed"}