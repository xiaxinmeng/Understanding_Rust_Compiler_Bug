{"url": "https://api.github.com/repos/rust-lang/rust/issues/69472", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69472/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69472/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69472/events", "html_url": "https://github.com/rust-lang/rust/issues/69472", "id": 570944964, "node_id": "MDU6SXNzdWU1NzA5NDQ5NjQ=", "number": 69472, "title": "Inferred lifetimes in static trait method resolve to 'static, even though a local lifetime would suffice", "user": {"login": "Byron", "id": 63622, "node_id": "MDQ6VXNlcjYzNjIy", "avatar_url": "https://avatars.githubusercontent.com/u/63622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Byron", "html_url": "https://github.com/Byron", "followers_url": "https://api.github.com/users/Byron/followers", "following_url": "https://api.github.com/users/Byron/following{/other_user}", "gists_url": "https://api.github.com/users/Byron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Byron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Byron/subscriptions", "organizations_url": "https://api.github.com/users/Byron/orgs", "repos_url": "https://api.github.com/users/Byron/repos", "events_url": "https://api.github.com/users/Byron/events{/privacy}", "received_events_url": "https://api.github.com/users/Byron/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-26T00:13:01Z", "updated_at": "2020-02-26T14:27:43Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "With a static function `sf` on a trait implemented on struct `S`, then calling `S::sf(&value)` with value being `(&str, \u2026)`, the borrow checker will report that the string within the tuple doesn't live long enough. It behaves like it expects `&str` to be static, and indeed works only with &'static strings. However, if `S::sf` is made into a standalone function `sf`, it works as expected with non-static strings.\r\n\r\nI tried to run `cargo check` on [this code](https://github.com/crates-io/criner/blob/2c6314397b347d4b3ddd4dcf6e3f0278bcaa447b/criner/src/engine/report/waste.rs#L50-L57), which caused these error messages:\r\n\r\n<img width=\"794\" alt=\"Screenshot 2020-02-26 at 08 02 37\" src=\"https://user-images.githubusercontent.com/63622/75298787-6907ff00-586e-11ea-8363-83730d55b9e2.png\">\r\n\r\nInstead I expected the check to pass.\r\n\r\nWhen commenting in [this line](https://github.com/crates-io/criner/blob/2c6314397b347d4b3ddd4dcf6e3f0278bcaa447b/criner/src/engine/report/waste.rs#L59) and commenting out [this line](https://github.com/crates-io/criner/blob/2c6314397b347d4b3ddd4dcf6e3f0278bcaa447b/criner/src/engine/report/waste.rs#L57) `sf` is used instead, and `cargo check` passes as expected.\r\n\r\n### How to reproduce\r\n\r\nThe following snippet takes 1min 10s to execute on a 12core laptop.\r\n\r\n```sh\r\ngit clone https://github.com/crates-io/criner && \\\r\ncd criner && \\\r\ngit checkout 2c6314397b347d4b3ddd4dcf6e3f0278bcaa447b && \\\r\ncargo check\r\n```\r\n\r\n### Observations\r\n\r\nThe error message provided by the borrow checker is sparse compared to how helpful it usually is. Also I do suspect it is related to interactions of using references in static trait functions.\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.41.0 (5e1a79984 2020-01-27)\r\nbinary: rustc\r\ncommit-hash: 5e1a799842ba6ed4a57e91f7ab9435947482f7d8\r\ncommit-date: 2020-01-27\r\nhost: x86_64-apple-darwin\r\nrelease: 1.41.0\r\nLLVM version: 9.0\r\n```\r\n\r\nAlso tested on nightly - the issue persists:\r\n`rustc +nightly --version --verbose`\r\n```\r\nrustc 1.43.0-nightly (834bc5650 2020-02-24)\r\nbinary: rustc\r\ncommit-hash: 834bc5650acf7019a53b409db68986857822812c\r\ncommit-date: 2020-02-24\r\nhost: x86_64-apple-darwin\r\nrelease: 1.43.0-nightly\r\nLLVM version: 9.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69472/timeline", "performed_via_github_app": null, "state_reason": null}