{"url": "https://api.github.com/repos/rust-lang/rust/issues/9082", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/9082/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/9082/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/9082/events", "html_url": "https://github.com/rust-lang/rust/issues/9082", "id": 19209279, "node_id": "MDU6SXNzdWUxOTIwOTI3OQ==", "number": 9082, "title": "Iterator composition: Poor error message when Clone trait bound is missing", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2013-09-09T17:07:46Z", "updated_at": "2022-12-14T02:03:51Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I am not sure if we can do anything about this, but I thought I should at least note the problem: In the code below, there is a iterator composition (`iter().map(..).collect()`) that is going wrong because of a missing `Clone` trait bound.\n\nThe fact that the code cannot be compiled is fine.  My question is, can we make the error message better?  Invocations of methods other than `clone` yield coherent error messages from rustc; why is `clone` different in this case?  (is this an artifact of some `impl<Bounds...> Clone for X` floating around, for appropriate substitutions for Bounds and X?)\n\nTest case:\n\n``` rust\n#[allow(unused_imports)];\n\nuse std::hashmap::HashSetIterator;\nuse std::hashmap::HashSet;\n\n#[cfg(and(not(illustrate_poor_error_msg),not(illustrate_fine_error_msg)))]\nfn iter_to_vec<'a, 'b, X:Clone>(i: HashSetIterator<'b, X>) -> ~[X] {\n    //                  ^~~~~~\n    //                  missing clone is the only difference\n    let i = i.map(|x| x.clone());\n    //                  ^~~~~~\n    //                  Here is the call to clone\n    let mut i = i;\n    i.collect()\n}\n\n#[cfg(illustrate_poor_error_msg)]\nfn iter_to_vec<'a, 'b, X      >(i: HashSetIterator<'b, X>) -> ~[X] {\n    //                  ^~~~~~\n    //                  missing clone is the only difference\n    let i = i.map(|x| x.clone());\n    //                  ^~~~~~\n    //                  Here is the call to clone\n    let mut i = i;\n    i.collect()\n}\n\n#[cfg(illustrate_fine_error_msg)]\nfn iter_to_vec<'a, 'b, X      >(i: HashSetIterator<'b, X>) -> ~[X] {\n    //                  ^~~~~~\n    //                  missing clone is the only difference\n    let i = i.map(|x| x.enolc());\n    //                  ^~~~~~\n    //                  Here is a call to something other than clone\n    let mut i = i;\n    i.collect()\n}\n\n#[cfg(illustrate_original_poor_error_msg)]\nfn set_to_vec<X:Eq+Hash      >(s:&HashSet<X>) -> ~[X] {\n    //                 ^~~~~~\n    //                 missing clone is the only difference\n    let i = s.iter();\n    let mut i = i.map(|x| x.clone());\n    i.collect()\n}\n\n#[cfg(not(illustrate_orignal_poor_error_msg))]\nfn set_to_vec<X:Eq+Hash+Clone>(s:&HashSet<X>) -> ~[X] {\n    //                 ^~~~~~\n    //                 (the aforementioned clone)\n    let i = s.iter();\n    let mut i = i.map(|x| x.clone());\n    i.collect()\n}\n\nfn main() {\n    let mut s = HashSet::new();\n    s.insert(1);\n    s.insert(100);\n    s.insert(10211201);\n    println(fmt!(\"%?\", set_to_vec(&s)));\n}\n\n```\n\nTranscript:\n\n```\n% RUST_LOG=rustc=1 rustc --version\n/Users/pnkfelix/opt/rust-dbg/bin/rustc 0.8-pre (fd49f6d 2013-09-09 02:36:06 -0700)\nhost: x86_64-apple-darwin\n% RUST_LOG=rustc=1 rustc --cfg illustrate_poor_error_msg  /tmp/baz3.rs\n/tmp/baz3.rs:25:4: 26:1 error: expected std::iter::FromIterator<&X>, but found std::iter::FromIterator<X> (expected &-ptr but found type parameter)\n/tmp/baz3.rs:25     i.collect()\n/tmp/baz3.rs:26 }\n/tmp/baz3.rs:25:4: 26:1 error: expected std::iter::FromIterator<&X>, but found std::iter::FromIterator<X> (expected &-ptr but found type parameter)\n/tmp/baz3.rs:25     i.collect()\n/tmp/baz3.rs:26 }\nerror: aborting due to 2 previous errors\ntask <unnamed> failed at 'explicit failure', /Users/pnkfelix/Dev/Mozilla/rust.git/src/libsyntax/diagnostic.rs:95\ntask <unnamed> failed at 'explicit failure', /Users/pnkfelix/Dev/Mozilla/rust.git/src/librustc/rustc.rs:376\n% RUST_LOG=rustc=1 rustc --cfg illustrate_fine_error_msg  /tmp/baz3.rs\n/tmp/baz3.rs:32:22: 32:32 error: type `&X` does not implement any method in scope named `enolc`\n/tmp/baz3.rs:32     let i = i.map(|x| x.enolc());\n                                      ^~~~~~~~~~\nerror: aborting due to previous error\ntask <unnamed> failed at 'explicit failure', /Users/pnkfelix/Dev/Mozilla/rust.git/src/libsyntax/diagnostic.rs:95\ntask <unnamed> failed at 'explicit failure', /Users/pnkfelix/Dev/Mozilla/rust.git/src/librustc/rustc.rs:376\n% \n```\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/9082/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/9082/timeline", "performed_via_github_app": null, "state_reason": null}