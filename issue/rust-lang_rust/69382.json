{"url": "https://api.github.com/repos/rust-lang/rust/issues/69382", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69382/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69382/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69382/events", "html_url": "https://github.com/rust-lang/rust/issues/69382", "id": 569392141, "node_id": "MDU6SXNzdWU1NjkzOTIxNDE=", "number": 69382, "title": "instance_def_size_estimate is not that good at estimating", "user": {"login": "andjo403", "id": 844398, "node_id": "MDQ6VXNlcjg0NDM5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/844398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andjo403", "html_url": "https://github.com/andjo403", "followers_url": "https://api.github.com/users/andjo403/followers", "following_url": "https://api.github.com/users/andjo403/following{/other_user}", "gists_url": "https://api.github.com/users/andjo403/gists{/gist_id}", "starred_url": "https://api.github.com/users/andjo403/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andjo403/subscriptions", "organizations_url": "https://api.github.com/users/andjo403/orgs", "repos_url": "https://api.github.com/users/andjo403/repos", "events_url": "https://api.github.com/users/andjo403/events{/privacy}", "received_events_url": "https://api.github.com/users/andjo403/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-22T20:55:51Z", "updated_at": "2021-02-24T22:42:41Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "when trying to see what the problem was with https://github.com/rust-lang/rust/issues/66617 \r\nI noticed that the llvm-ir did not match the estimate e.g. core::ptr::drop_in_place\r\nactual number of llvm-ir lines 17170 and the estimated size 24 so 715x larger then estimated.\r\nthis results in that when the CGUs shall be merged the CGU that contains these functions is merged multipel times and result in one CGU that is mush larger then the other and due to this the compile time is longer then needed.\r\n\r\nhave seen that  especially core::ptr::drop_in_place have many x to smal estimates in real crates also.\r\n\r\nI used a debug build of rustc to be able to trace and used the example from https://github.com/rust-lang/rust/issues/66617\r\n`RUSTC_LOG=rustc_mir::monomorphize::partitioning=debug rustc +stage2  --emit=llvm-ir -Cno-prepopulate-passes main.rs` to get llvm-ir and see the estimates.\r\n\r\nI expected the estimate to be nere the actual number of llvm-ir lines for the functions.\r\n\r\none strange thing is that there is a lot of estimates that is 0 and that is not that common to have so feels like faults.\r\nalso some estimates is larger then the lines of llvm-ir e.g. `actual:    5370 Estimated:   9129  diff:  -3759 alloc::alloc::box_free`\r\n\r\nthe rustc version is built from 03d2f5cd6c634b1fdcd26b036009aa4dce37fdfc\r\n\r\n<details><summary>Some more not that good estimates</summary>\r\n<p>\r\n\r\n```\r\nactual:    1074 Estimated:   1432  diff:   -358 core::ptr::unique::Unique<T>::cast\r\nactual:      46 Estimated:     34  diff:     12 core::ptr::slice_from_raw_parts_mut\r\nactual:      14 Estimated:     10  diff:      4 core::alloc::Layout::from_size_align_unchecked\r\nactual:      68 Estimated:     48  diff:     20 <alloc::vec::Vec<T> as core::ops::index::IndexMut<I>>::index_mut\r\nactual:      20 Estimated:     13  diff:      7 core::num::<impl usize>::saturating_mul\r\nactual:      22 Estimated:     34  diff:    -12 <alloc::vec::Vec<T> as core::ops::deref::DerefMut>::deref_mut\r\nactual:       5 Estimated:      8  diff:     -3 <alloc::alloc::Global as core::alloc::AllocRef>::dealloc\r\nactual:       5 Estimated:      3  diff:      2 core::alloc::Layout::align\r\nactual:       6 Estimated:     10  diff:     -4 <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop\r\nactual:      10 Estimated:      6  diff:      4 alloc::raw_vec::RawVec<T,A>::ptr\r\nactual:    5370 Estimated:   9129  diff:  -3759 alloc::alloc::box_free\r\nactual:      14 Estimated:     24  diff:    -10 core::slice::<impl core::ops::index::IndexMut<I> for [T]>::index_mut\r\nactual:      18 Estimated:     32  diff:    -14 alloc::vec::Vec<T>::as_mut_ptr\r\nactual:      18 Estimated:     10  diff:      8 main2::main\r\nactual:      10 Estimated:     18  diff:     -8 core::ptr::mut_ptr::<impl *mut T>::is_null\r\nactual:      10 Estimated:     18  diff:     -8 core::ptr::const_ptr::<impl *const T>::is_null\r\nactual:     362 Estimated:    728  diff:   -366 core::ptr::unique::Unique<T>::as_ptr\r\nactual:       6 Estimated:     13  diff:     -7 core::ptr::unique::Unique<T>::new_unchecked\r\nactual:     716 Estimated:   1611  diff:   -895 core::ptr::unique::Unique<T>::as_ref\r\nactual:      44 Estimated:    100  diff:    -56 core::slice::from_raw_parts_mut\r\nactual:      13 Estimated:     30  diff:    -17 core::ptr::non_null::NonNull<T>::new_unchecked\r\nactual:      13 Estimated:     32  diff:    -19 <alloc::vec::Vec<T> as core::ops::drop::Drop>::drop\r\nactual:       7 Estimated:     18  diff:    -11 std::rt::lang_start\r\nactual:       4 Estimated:     12  diff:     -8 core::ptr::non_null::NonNull<T>::as_ptr\r\nactual:       5 Estimated:      1  diff:      4 core::ops::function::FnOnce::call_once{{vtable.shim}}\r\nactual:      10 Estimated:      0  diff:     10 core::mem::size_of\r\nactual:      10 Estimated:      0  diff:     10 core::mem::align_of\r\nactual:      23 Estimated:      1  diff:     22 core::ops::function::FnOnce::call_once\r\nactual:   17170 Estimated:     24  diff:  17146 core::ptr::drop_in_place\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n@rustbot modify labels to +I-compiletime\r\n\r\ncc @michaelwoerister ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69382/timeline", "performed_via_github_app": null, "state_reason": null}