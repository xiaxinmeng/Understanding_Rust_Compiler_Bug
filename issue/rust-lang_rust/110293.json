{"url": "https://api.github.com/repos/rust-lang/rust/issues/110293", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110293/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110293/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110293/events", "html_url": "https://github.com/rust-lang/rust/issues/110293", "id": 1666929395, "node_id": "I_kwDOAAsO6M5jW1Lz", "number": 110293, "title": "Unexpected Interpretation of Binary Operation starting with Unsafe", "user": {"login": "power-unsealed", "id": 96887858, "node_id": "U_kgDOBcZkMg", "avatar_url": "https://avatars.githubusercontent.com/u/96887858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/power-unsealed", "html_url": "https://github.com/power-unsealed", "followers_url": "https://api.github.com/users/power-unsealed/followers", "following_url": "https://api.github.com/users/power-unsealed/following{/other_user}", "gists_url": "https://api.github.com/users/power-unsealed/gists{/gist_id}", "starred_url": "https://api.github.com/users/power-unsealed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/power-unsealed/subscriptions", "organizations_url": "https://api.github.com/users/power-unsealed/orgs", "repos_url": "https://api.github.com/users/power-unsealed/repos", "events_url": "https://api.github.com/users/power-unsealed/events{/privacy}", "received_events_url": "https://api.github.com/users/power-unsealed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-04-13T18:27:21Z", "updated_at": "2023-04-14T07:19:19Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I just stumbled across a compiler error that does not really make sense to me. For some reason, the compiler does not accept an unsafe block expression followed by a binary operator under certain circumstances.\r\n\r\nFor some unsafe function `unsafe fn test() -> i32`, the following does not compile:\r\n```rust\r\nunsafe { test() } != 0;\r\n```\r\n<details>\r\n<summary>Error message</summary>\r\n\r\n```\r\nerror: expected expression, found `!=`\r\n  --> src/main.rs:14:23\r\n   |\r\n14 |     unsafe { test() } != 0;\r\n   |                       ^^ expected expression\r\n\r\nerror[[E0308]](https://doc.rust-lang.org/stable/error_codes/E0308.html): mismatched types\r\n  --> src/main.rs:14:14\r\n   |\r\n14 |     unsafe { test() } != 0;\r\n   |              ^^^^^^- help: consider using a semicolon here: `;`\r\n   |              |\r\n   |              expected `()`, found `i32`\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\n```\r\n</details>\r\n\r\n\r\n```rust\r\nlet _ = if true {\r\n    unsafe { test() } != 0\r\n} else {\r\n    false\r\n};\r\n```\r\n<details>\r\n<summary>Error message</summary>\r\n\r\n```\r\nerror: expected expression, found `!=`\r\n  --> src/main.rs:18:27\r\n   |\r\n18 |         unsafe { test() } != 0\r\n   |                           ^^ expected expression\r\n\r\nerror[[E0308]](https://doc.rust-lang.org/stable/error_codes/E0308.html): mismatched types\r\n  --> src/main.rs:18:18\r\n   |\r\n17 |       let _ = if true {\r\n   |  _____________-\r\n18 | |         unsafe { test() } != 0\r\n   | |                  ^^^^^^ expected `()`, found `i32`\r\n19 | |     } else {\r\n20 | |         false\r\n21 | |     };\r\n   | |_____- expected this to be `()`\r\n   |\r\nhelp: consider using a semicolon here\r\n   |\r\n18 |         unsafe { test(); } != 0\r\n   |                        +\r\nhelp: consider using a semicolon here\r\n   |\r\n21 |     };;\r\n   |      +\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: could not compile `playground` due to 2 previous errors\r\n```\r\n</details>\r\n\r\nHowever, the following _does_ compile:\r\n```rust\r\nlet _ = unsafe { test() } != 0;\r\n```\r\n\r\n```rust\r\n0 != unsafe { test() };\r\n```\r\n\r\n```rust\r\nif unsafe { test() } != 0 {\r\n    unreachable!();\r\n}\r\n```\r\n\r\nThe playground example can be found [here](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=ced8273db03cbb25d4bbd10a52908ffa).\r\n\r\nI would have these examples expected to just work, since the unsafe block is just an expression.\r\n\r\n### Meta\r\n\r\nThis behaviour seems to be the same on stable `1.68.2`, beta `1.69.0-beta.7`, and nightly `1.70.0-nightly`.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110293/timeline", "performed_via_github_app": null, "state_reason": null}