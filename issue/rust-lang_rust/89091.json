{"url": "https://api.github.com/repos/rust-lang/rust/issues/89091", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89091/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89091/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89091/events", "html_url": "https://github.com/rust-lang/rust/issues/89091", "id": 1000265660, "node_id": "I_kwDOAAsO6M47nte8", "number": 89091, "title": "Running `x.py build` (after selecting 'c' to modify LLVM/codegen in setup) requires installing ninja, and it is not obvious how to do that", "user": {"login": "daira", "id": 643204, "node_id": "MDQ6VXNlcjY0MzIwNA==", "avatar_url": "https://avatars.githubusercontent.com/u/643204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daira", "html_url": "https://github.com/daira", "followers_url": "https://api.github.com/users/daira/followers", "following_url": "https://api.github.com/users/daira/following{/other_user}", "gists_url": "https://api.github.com/users/daira/gists{/gist_id}", "starred_url": "https://api.github.com/users/daira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daira/subscriptions", "organizations_url": "https://api.github.com/users/daira/orgs", "repos_url": "https://api.github.com/users/daira/repos", "events_url": "https://api.github.com/users/daira/events{/privacy}", "received_events_url": "https://api.github.com/users/daira/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}, {"id": 2345380158, "node_id": "MDU6TGFiZWwyMzQ1MzgwMTU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-contributor-roadblock", "name": "A-contributor-roadblock", "color": "f7e101", "default": false, "description": "Area: Makes things more difficult for new contributors to rust itself"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2021-09-19T09:50:11Z", "updated_at": "2021-09-22T00:37:47Z", "closed_at": "2021-09-22T00:37:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to build the compiler for the first time, following the instructions at https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html\r\n\r\n```\r\ndaira@katava:~$ git clone https://github.com/rust-lang/rust.git\r\nCloning into 'rust'...\r\n[...]\r\ndaira@katava:~$ cd rust\r\ndaira@katava:~/rust$ ls\r\nCargo.lock          config.toml.example  library         RELEASES.md     x.py\r\nCargo.toml          configure            LICENSE-APACHE  rustfmt.toml\r\nCODE_OF_CONDUCT.md  CONTRIBUTING.md      LICENSE-MIT     src\r\ncompiler            COPYRIGHT            README.md       triagebot.toml\r\ndaira@katava:~/rust$ ./x.py setup\r\nUpdating only changed submodules\r\nUpdating submodule src/tools/rust-installer [...]\r\nUpdating submodule src/tools/cargo [...]\r\nUpdating submodule src/tools/rls [...]\r\nUpdating submodule src/tools/miri [...]\r\nUpdating submodule library/backtrace [...]\r\nUpdating submodule library/stdarch [...]\r\nSubmodules updated in 20.69 seconds\r\ndownloading https://static.rust-lang.org/dist/2021-09-08/rust-std-beta-x86_64-unknown-linux-gnu.tar.xz\r\n######################################################################### 100.0%\r\nextracting /home/daira/rust/build/cache/2021-09-08/rust-std-beta-x86_64-unknown-linux-gnu.tar.xz\r\ndownloading https://static.rust-lang.org/dist/2021-09-08/rustc-beta-x86_64-unknown-linux-gnu.tar.xz\r\n######################################################################### 100.0%\r\nextracting /home/daira/rust/build/cache/2021-09-08/rustc-beta-x86_64-unknown-linux-gnu.tar.xz\r\ndownloading https://static.rust-lang.org/dist/2021-09-08/cargo-beta-x86_64-unknown-linux-gnu.tar.xz\r\n######################################################################### 100.0%\r\nextracting /home/daira/rust/build/cache/2021-09-08/cargo-beta-x86_64-unknown-linux-gnu.tar.xz\r\ndownloading https://static.rust-lang.org/dist/2021-09-08/rustfmt-nightly-x86_64-unknown-linux-gnu.tar.xz\r\n######################################################################### 100.0%\r\nextracting /home/daira/rust/build/cache/2021-09-08/rustfmt-nightly-x86_64-unknown-linux-gnu.tar.xz\r\n  Downloaded toml v0.5.7\r\n  Downloaded opener v0.5.0\r\n  Downloaded merge_derive v0.1.0\r\n  Downloaded ignore v0.4.17\r\n  Downloaded globset v0.4.5\r\n  Downloaded autocfg v1.0.0\r\n  Downloaded cmake v0.1.44\r\n  Downloaded merge v0.1.0\r\n  Downloaded 8 crates (189.4 KB) in 0.40s\r\n   Compiling proc-macro2 v1.0.24\r\n   Compiling unicode-xid v0.2.2\r\n   Compiling syn v1.0.65\r\n   Compiling version_check v0.9.3\r\n   Compiling memchr v2.4.1\r\n   Compiling autocfg v1.0.0\r\n   Compiling lazy_static v1.4.0\r\n   Compiling libc v0.2.99\r\n   Compiling serde_derive v1.0.125\r\n   Compiling cfg-if v1.0.0\r\n   Compiling log v0.4.14\r\n   Compiling serde v1.0.125\r\n   Compiling regex-automata v0.1.10\r\n   Compiling ryu v1.0.5\r\n   Compiling regex-syntax v0.6.25\r\n   Compiling same-file v1.0.6\r\n   Compiling serde_json v1.0.59\r\n   Compiling fnv v1.0.7\r\n   Compiling unicode-width v0.1.8\r\n   Compiling itoa v0.4.6\r\n   Compiling cc v1.0.69\r\n   Compiling bootstrap v0.0.0 (/home/daira/rust/src/bootstrap)\r\n   Compiling once_cell v1.7.2\r\n   Compiling build_helper v0.1.0 (/home/daira/rust/src/build_helper)\r\n   Compiling thread_local v1.0.1\r\n   Compiling walkdir v2.3.1\r\n   Compiling getopts v0.2.21\r\n   Compiling proc-macro-error-attr v1.0.4\r\n   Compiling proc-macro-error v1.0.4\r\n   Compiling num-traits v0.2.12\r\n   Compiling crossbeam-utils v0.8.3\r\n   Compiling cmake v0.1.44\r\n   Compiling aho-corasick v0.7.18\r\n   Compiling bstr v0.2.13\r\n   Compiling quote v1.0.7\r\n   Compiling time v0.1.43\r\n   Compiling num_cpus v1.13.0\r\n   Compiling filetime v0.2.14\r\n   Compiling opener v0.5.0\r\n   Compiling regex v1.5.4\r\n   Compiling globset v0.4.5\r\n   Compiling ignore v0.4.17\r\n   Compiling merge_derive v0.1.0\r\n   Compiling merge v0.1.0\r\n   Compiling toml v0.5.7\r\n    Finished dev [unoptimized + debuginfo] target(s) in 28.54s\r\nWelcome to the Rust project! What do you want to do with x.py?\r\na) library: Contribute to the standard library\r\nb) compiler: Contribute to the compiler itself\r\nc) codegen: Contribute to the compiler, and also modify LLVM or codegen\r\nd) tools: Contribute to tools which depend on the compiler, but do not modify it directly (e.g. rustdoc, clippy, miri)\r\ne) user: Install Rust from source\r\nPlease choose one (a/b/c/d/e): c\r\n`x.py` will now use the configuration at /home/daira/rust/src/bootstrap/defaults/config.codegen.toml\r\n\r\nRust's CI will automatically fail if it doesn't pass `tidy`, the internal tool for ensuring code quality.\r\nIf you'd like, x.py can install a git hook for you that will automatically run `tidy --bless` on each commit\r\nto ensure your code is up to par. If you decide later that this behavior is undesirable,\r\nsimply delete the `pre-commit` file from .git/hooks.\r\nWould you like to install the git hook?: [y/N] y\r\nLinked `src/etc/pre-commit.sh` to `.git/hooks/pre-commit`\r\n\r\nTo get started, try one of the following commands:\r\n- `x.py check`\r\n- `x.py build`\r\n- `x.py test`\r\nFor more suggestions, see https://rustc-dev-guide.rust-lang.org/building/suggested.html\r\nBuild completed successfully in 0:01:50\r\ndaira@katava:~/rust$ ./x.py build\r\nUpdating only changed submodules\r\nSubmodules updated in 0.01 seconds\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.12s\r\n\r\nCouldn't find required command: ninja\r\nYou should install ninja, or set `ninja=false` in config.toml in the `[llvm]` section.\r\n\r\nBuild completed unsuccessfully in 0:00:00\r\ndaira@katava:~/rust$ sudo apt-get install ninja\r\n[sudo] password for daira: \r\nReading package lists... Done\r\nBuilding dependency tree       \r\nReading state information... Done\r\nPackage ninja is not available, but is referred to by another package.\r\nThis may mean that the package is missing, has been obsoleted, or\r\nis only available from another source\r\n\r\nE: Package 'ninja' has no installation candidate\r\ndaira@katava:~/rust$ cargo install ninja\r\n    Updating crates.io index\r\n  Downloaded ninja v0.0.1\r\n  Downloaded 1 crate (1.7 KB) in 0.85s\r\n  Installing ninja v0.0.1\r\n   Compiling ninja v0.0.1\r\n    Finished release [optimized] target(s) in 3.16s\r\n  Installing /home/daira/.cargo/bin/ninja\r\n   Installed package `ninja v0.0.1` (executable `ninja`)\r\ndaira@katava:~/rust$ ninja\r\nthread 'main' panicked at 'Failed to open build.ninja: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }', /home/daira/.cargo/registry/src/github.com-1ecc6299db9ec823/ninja-0.0.1/src/bin/ninja.rs:9:46\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\ndaira@katava:~/rust$ ./x.py build\r\nUpdating only changed submodules\r\nSubmodules updated in 0.01 seconds\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.41s\r\nUpdating submodule src/llvm-project\r\nSubmodule 'src/llvm-project' (https://github.com/rust-lang/llvm-project.git) registered for path 'src/llvm-project'\r\nCloning into '/home/daira/rust/src/llvm-project'...\r\n[...]\r\n    Finished release [optimized] target(s) in 32.37s\r\nCopying stage0 std from stage0 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)\r\nBuilding LLVM for x86_64-unknown-linux-gnu\r\nrunning: \"cmake\" \"/home/daira/rust/src/llvm-project/llvm\" \"-G\" \"Ninja\" \"-DLLVM_ENABLE_ASSERTIONS=ON\" \"-DLLVM_ENABLE_PLUGINS=OFF\" \"-DLLVM_TARGETS_TO_BUILD=AArch64;ARM;BPF;Hexagon;MSP430;Mips;NVPTX;PowerPC;RISCV;Sparc;SystemZ;WebAssembly;X86\" \"-DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD=AVR\" \"-DLLVM_INCLUDE_EXAMPLES=OFF\" \"-DLLVM_INCLUDE_DOCS=OFF\" \"-DLLVM_INCLUDE_BENCHMARKS=OFF\" \"-DLLVM_INCLUDE_TESTS=OFF\" \"-DLLVM_ENABLE_TERMINFO=OFF\" \"-DLLVM_ENABLE_LIBEDIT=OFF\" \"-DLLVM_ENABLE_BINDINGS=OFF\" \"-DLLVM_ENABLE_Z3_SOLVER=OFF\" \"-DLLVM_PARALLEL_COMPILE_JOBS=12\" \"-DLLVM_TARGET_ARCH=x86_64\" \"-DLLVM_DEFAULT_TARGET_TRIPLE=x86_64-unknown-linux-gnu\" \"-DLLVM_INSTALL_UTILS=ON\" \"-DLLVM_ENABLE_ZLIB=ON\" \"-DLLVM_ENABLE_LIBXML2=OFF\" \"-DLLVM_VERSION_SUFFIX=-rust-dev\" \"-DCMAKE_INSTALL_MESSAGE=LAZY\" \"-DCMAKE_C_COMPILER=cc\" \"-DCMAKE_CXX_COMPILER=c++\" \"-DCMAKE_ASM_COMPILER=cc\" \"-DCMAKE_C_FLAGS=-ffunction-sections -fdata-sections -fPIC -m64\" \"-DCMAKE_CXX_FLAGS=-ffunction-sections -fdata-sections -fPIC -m64\" \"-DCMAKE_INSTALL_PREFIX=/home/daira/rust/build/x86_64-unknown-linux-gnu/llvm\" \"-DCMAKE_ASM_FLAGS= -ffunction-sections -fdata-sections -fPIC -m64\" \"-DCMAKE_BUILD_TYPE=Release\"\r\nCMake Error at CMakeLists.txt:44 (project):\r\n  Running\r\n\r\n   '/home/daira/.cargo/bin/ninja' '--version'\r\n\r\n  failed with:\r\n\r\n   thread 'main' panicked at 'Failed to open build.ninja: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }', /home/daira/.cargo/registry/src/github.com-1ecc6299db9ec823/ninja-0.0.1/src/bin/ninja.rs:9:46\r\n\r\n  note: run with `RUST_BACKTRACE=1` environment variable to display a\r\n  backtrace\r\n\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/home/daira/rust/build/x86_64-unknown-linux-gnu/llvm/build/CMakeFiles/CMakeOutput.log\".\r\nthread 'main' panicked at '\r\ncommand did not execute successfully, got: exit status: 1\r\n\r\nbuild script failed, must exit now', /home/daira/.cargo/registry/src/github.com-1ecc6299db9ec823/cmake-0.1.44/src/lib.rs:885:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\tfinished in 0.102 seconds\r\nBuild completed unsuccessfully in 0:07:15\r\n```\r\n\r\n## Possible solutions\r\n\r\nOne of:\r\n* documentation at https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html explaining how to install `ninja`, or\r\n* documentation at https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html saying to set `ninja=false` in the `[llvm]` section of `config.toml`, or\r\n* `ninja` to be installed automatically by `./x.py setup`, or\r\n* `ninja=false` to be set automatically by default by `./x.py setup`;\r\n\r\nand\r\n\r\n* a solution for the `Failed to open build.ninja` error.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89091/timeline", "performed_via_github_app": null, "state_reason": "completed"}