{"url": "https://api.github.com/repos/rust-lang/rust/issues/81270", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81270/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81270/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81270/events", "html_url": "https://github.com/rust-lang/rust/issues/81270", "id": 792006831, "node_id": "MDU6SXNzdWU3OTIwMDY4MzE=", "number": 81270, "title": "ICE with `#![feature(allocator_api)]`", "user": {"login": "jfrimmel", "id": 31166235, "node_id": "MDQ6VXNlcjMxMTY2MjM1", "avatar_url": "https://avatars.githubusercontent.com/u/31166235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfrimmel", "html_url": "https://github.com/jfrimmel", "followers_url": "https://api.github.com/users/jfrimmel/followers", "following_url": "https://api.github.com/users/jfrimmel/following{/other_user}", "gists_url": "https://api.github.com/users/jfrimmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfrimmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfrimmel/subscriptions", "organizations_url": "https://api.github.com/users/jfrimmel/orgs", "repos_url": "https://api.github.com/users/jfrimmel/repos", "events_url": "https://api.github.com/users/jfrimmel/events{/privacy}", "received_events_url": "https://api.github.com/users/jfrimmel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 129836139, "node_id": "MDU6TGFiZWwxMjk4MzYxMzk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-allocators", "name": "A-allocators", "color": "f7e101", "default": false, "description": "Area: Custom and system allocators"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2021-01-22T13:31:09Z", "updated_at": "2022-02-28T23:38:06Z", "closed_at": "2022-02-28T23:38:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\nI've tested the `allocator_api` feature and encountered an ICE:\r\n\r\n### Code\r\nIf tried this code ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=0d054d0c18a867259b756c73fd34e972)):\r\n```Rust\r\n#![feature(allocator_api)]\r\nuse std::alloc::{self, Allocator, Global, AllocError};\r\nuse std::ptr;\r\n\r\nstruct InlineAlloc<A: Allocator = Global> {\r\n    upstream: A,\r\n    buffer: [u8; 32],\r\n}\r\nimpl InlineAlloc<Global> {\r\n    pub fn new() -> Self {\r\n        Self {\r\n            upstream: Global,\r\n            buffer: [0; 32],\r\n        }\r\n    }\r\n}\r\nunsafe impl<A: Allocator> Allocator for InlineAlloc<A> {\r\n    fn allocate(&self, _: alloc::Layout) -> Result<ptr::NonNull<[u8]>, AllocError> {\r\n        todo!();\r\n    }\r\n    \r\n    unsafe fn deallocate(&self, _: ptr::NonNull<u8>, _: alloc::Layout) {\r\n        todo!();\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let x = Box::new_in(0, InlineAlloc::new());\r\n}\r\n```\r\n\r\n### Meta\r\nI've used the \"current\" playground nighty compiler, but I can reproduce locally.\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.51.0-nightly (a4cbb44ae 2021-01-20)\r\nbinary: rustc\r\ncommit-hash: a4cbb44ae2c80545db957763b502dc7f6ea22085\r\ncommit-date: 2021-01-20\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.51.0-nightly\r\nLLVM version: 11.0.1\r\n```\r\nand also on\r\n```\r\nrustc 1.51.0-nightly (202720bf4 2021-01-21)\r\nbinary: rustc\r\ncommit-hash: 202720bf483088dbdb343f78c0aa77067fdd8156\r\ncommit-date: 2021-01-21\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.51.0-nightly\r\nLLVM version: 11.0.1\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: /rustc/202720bf483088dbdb343f78c0aa77067fdd8156/compiler/rustc_codegen_ssa/src/mir/operand.rs:133:38: Deref of by-Ref operand OperandRef(Ref((%\"std::boxed::Box<std::mem::MaybeUninit<i32>, InlineAlloc>\"*:  %10 = alloca %\"std::boxed::Box<std::mem::MaybeUninit<i32>, InlineAlloc>\", align 8), None, Align { pow2: 3 }) @ TyAndLayout { ty: std::boxed::Box<std::mem::MaybeUninit<i32>, InlineAlloc>, layout: Layout { fields: Arbitrary { offsets: [Size { raw: 0 }, Size { raw: 8 }], memory_index: [0, 1] }, variants: Single { index: 0 }, abi: Aggregate { sized: true }, largest_niche: Some(Niche { offset: Size { raw: 0 }, scalar: Scalar { value: Pointer, valid_range: 1..=18446744073709551615 } }), align: AbiAndPrefAlign { abi: Align { pow2: 3 }, pref: Align { pow2: 3 } }, size: Size { raw: 40 } } })\r\n\r\nthread 'rustc' panicked at 'Box<Any>', compiler/rustc_errors/src/lib.rs:958:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.51.0-nightly (202720bf4 2021-01-21) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: aborting due to previous error; 3 warnings emitted\r\n\r\nerror: could not compile `test2`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nStandard Error\r\n\r\n   Compiling playground v0.0.1 (/playground)\r\nwarning: unused variable: `x`\r\n  --> src/main.rs:28:9\r\n   |\r\n28 |     let x = Box::new_in(0, InlineAlloc::new());\r\n   |         ^ help: if this is intentional, prefix it with an underscore: `_x`\r\n   |\r\n   = note: `#[warn(unused_variables)]` on by default\r\n\r\nwarning: field is never read: `upstream`\r\n --> src/main.rs:6:5\r\n  |\r\n6 |     upstream: A,\r\n  |     ^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(dead_code)]` on by default\r\n\r\nwarning: field is never read: `buffer`\r\n --> src/main.rs:7:5\r\n  |\r\n7 |     buffer: [u8; 32],\r\n  |     ^^^^^^^^^^^^^^^^\r\n\r\nerror: internal compiler error: /rustc/202720bf483088dbdb343f78c0aa77067fdd8156/compiler/rustc_codegen_ssa/src/mir/operand.rs:133:38: Deref of by-Ref operand OperandRef(Ref((%\"std::boxed::Box<std::mem::MaybeUninit<i32>, InlineAlloc>\"*:  %10 = alloca %\"std::boxed::Box<std::mem::MaybeUninit<i32>, InlineAlloc>\", align 8), None, Align { pow2: 3 }) @ TyAndLayout { ty: std::boxed::Box<std::mem::MaybeUninit<i32>, InlineAlloc>, layout: Layout { fields: Arbitrary { offsets: [Size { raw: 0 }, Size { raw: 8 }], memory_index: [0, 1] }, variants: Single { index: 0 }, abi: Aggregate { sized: true }, largest_niche: Some(Niche { offset: Size { raw: 0 }, scalar: Scalar { value: Pointer, valid_range: 1..=18446744073709551615 } }), align: AbiAndPrefAlign { abi: Align { pow2: 3 }, pref: Align { pow2: 3 } }, size: Size { raw: 40 } } })\r\n\r\nthread 'rustc' panicked at 'Box<Any>', compiler/rustc_errors/src/lib.rs:958:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: rustc_errors::HandlerInner::bug\r\n   2: rustc_errors::Handler::bug\r\n   3: rustc_middle::ty::context::tls::with_opt\r\n   4: rustc_middle::util::bug::opt_span_bug_fmt\r\n   5: rustc_middle::util::bug::bug_fmt\r\n   6: rustc_codegen_ssa::mir::operand::OperandRef<V>::deref\r\n   7: rustc_codegen_ssa::mir::place::<impl rustc_codegen_ssa::mir::FunctionCx<Bx>>::codegen_place\r\n   8: rustc_codegen_ssa::mir::rvalue::<impl rustc_codegen_ssa::mir::FunctionCx<Bx>>::codegen_rvalue_operand\r\n   9: rustc_codegen_ssa::mir::codegen_mir\r\n  10: rustc_codegen_ssa::base::codegen_instance\r\n  11: <rustc_middle::mir::mono::MonoItem as rustc_codegen_ssa::mono_item::MonoItemExt>::define\r\n  12: rustc_codegen_llvm::base::compile_codegen_unit::module_codegen\r\n  13: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  14: rustc_codegen_llvm::base::compile_codegen_unit\r\n  15: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  16: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  17: rustc_interface::passes::QueryContext::enter\r\n  18: rustc_interface::queries::Queries::ongoing_codegen\r\n  19: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  20: rustc_span::with_source_map\r\n  21: rustc_interface::interface::create_compiler_and_run\r\n  22: rustc_span::with_session_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.51.0-nightly (202720bf4 2021-01-21) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: aborting due to previous error; 3 warnings emitted\r\n\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"DrMeepster\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81270/timeline", "performed_via_github_app": null, "state_reason": "completed"}