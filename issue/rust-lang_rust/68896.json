{"url": "https://api.github.com/repos/rust-lang/rust/issues/68896", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68896/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68896/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68896/events", "html_url": "https://github.com/rust-lang/rust/issues/68896", "id": 561114417, "node_id": "MDU6SXNzdWU1NjExMTQ0MTc=", "number": 68896, "title": "proc_macro::LexError doesn't implement std::error::Error", "user": {"login": "kinseytamsin", "id": 20917600, "node_id": "MDQ6VXNlcjIwOTE3NjAw", "avatar_url": "https://avatars.githubusercontent.com/u/20917600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kinseytamsin", "html_url": "https://github.com/kinseytamsin", "followers_url": "https://api.github.com/users/kinseytamsin/followers", "following_url": "https://api.github.com/users/kinseytamsin/following{/other_user}", "gists_url": "https://api.github.com/users/kinseytamsin/gists{/gist_id}", "starred_url": "https://api.github.com/users/kinseytamsin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kinseytamsin/subscriptions", "organizations_url": "https://api.github.com/users/kinseytamsin/orgs", "repos_url": "https://api.github.com/users/kinseytamsin/repos", "events_url": "https://api.github.com/users/kinseytamsin/events{/privacy}", "received_events_url": "https://api.github.com/users/kinseytamsin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-06T16:10:21Z", "updated_at": "2020-03-12T19:36:46Z", "closed_at": "2020-03-12T19:36:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`LexError`, the error type used by `proc_macro::TokenStream`'s `FromStr` implementation, doesn't implement `std::error::Error`. This makes it very un-ergonomic to work with when trying to use the `?` operator to propagate errors in a function that returns a non-specific error type like `Box<dyn std::error::Error>` or the `Error` type provided by the [`anyhow` crate](https://crates.io/crates/anyhow).\r\n\r\nI wrote the following code to demonstrate what I mean:\r\n\r\n```rust\r\nextern crate proc_macro;\r\n\r\nuse std::error::Error;\r\nuse proc_macro::TokenStream;\r\n\r\nfn returns_result_with_nonspecific_error() -> Result<TokenStream, Box<dyn Error>> {\r\n    Ok(r#\"println!(\"hello, world\");\"#.parse()?)\r\n}\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=4c5735f3e4290a889f1adb872eea98fe))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0277]: the trait bound `proc_macro::LexError: std::error::Error` is not satisfied\r\n --> src/lib.rs:7:46\r\n  |\r\n7 |     Ok(r#\"println!(\"hello, world\");\"#.parse()?)\r\n  |                                              ^ the trait `std::error::Error` is not implemented for `proc_macro::LexError`\r\n  |\r\n  = note: required because of the requirements on the impl of `std::convert::From<proc_macro::LexError>` for `std::boxed::Box<dyn std::error::Error>`\r\n  = note: required by `std::convert::From::from`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\n\r\nSo while this does feel like an easy PR (and if it is, I plan to submit it!), I just wanted to make sure beforehand that there isn't some good reason that this is the case. I've never really worked with procedural macros at all (I noticed this issue through the [`proc-macro2` crate](https://crates.io/crates/proc-macro2)) so I'm not sure if there's something special going on here that I'm not aware of. Thanks in advance for the help :)", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68896/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68896/timeline", "performed_via_github_app": null, "state_reason": "completed"}