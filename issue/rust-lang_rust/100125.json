{"url": "https://api.github.com/repos/rust-lang/rust/issues/100125", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/100125/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/100125/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/100125/events", "html_url": "https://github.com/rust-lang/rust/issues/100125", "id": 1327868138, "node_id": "I_kwDOAAsO6M5PJajq", "number": 100125, "title": "Regression in code coverage (`-Zprofile`) at some point after `nightly-2021-11-11`", "user": {"login": "fadeevab", "id": 5967447, "node_id": "MDQ6VXNlcjU5Njc0NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5967447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fadeevab", "html_url": "https://github.com/fadeevab", "followers_url": "https://api.github.com/users/fadeevab/followers", "following_url": "https://api.github.com/users/fadeevab/following{/other_user}", "gists_url": "https://api.github.com/users/fadeevab/gists{/gist_id}", "starred_url": "https://api.github.com/users/fadeevab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fadeevab/subscriptions", "organizations_url": "https://api.github.com/users/fadeevab/orgs", "repos_url": "https://api.github.com/users/fadeevab/repos", "events_url": "https://api.github.com/users/fadeevab/events{/privacy}", "received_events_url": "https://api.github.com/users/fadeevab/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}, {"id": 2413861294, "node_id": "MDU6TGFiZWwyNDEzODYxMjk0", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-untriaged", "name": "regression-untriaged", "color": "e4008a", "default": false, "description": "Untriaged performance or correctness regression."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2022-08-03T22:55:57Z", "updated_at": "2023-03-22T11:33:54Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a regression report! \ud83d\udc1b A regression is something that changed between versions of Rust but was not supposed to.\r\n\r\nPlease provide a short summary of the regression, along with any information you feel is relevant to replicate it.\r\n-->\r\n\r\n### TL;DR:\r\nOlder nightly toolchain gives [an expected code coverage](https://coveralls.io/builds/51400491): `rustup default nightly-2021-11-11`\r\n\r\n**UPDATE:** Regression is reproduced below https://github.com/rust-lang/rust/issues/100125#issuecomment-1209535289\r\n\r\n### Prerequisites\r\n\r\nI have [a GitHub workflow](https://github.com/fadeevab/cocoon/blob/main/.github/workflows/rust.yaml) which generates a code coverage report with _nightly_ toolchain +`grcov`, then sending it to https://coveralls.io.\r\n\r\n```bash\r\nexport CARGO_INCREMENTAL=0\r\nexport RUSTFLAGS=\"-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort\"\r\nexport RUSTDOCFLAGS=\"-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort\"\r\n\r\nrustup default nightly\r\ncargo test --all-features\r\ncurl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-x86_64-unknown-linux-gnu.tar.bz2 | tar jxf -\r\n\r\nmkdir coverage\r\n./grcov ./target/debug/ -s . -t lcov --llvm --branch --ignore-not-existing --ignore \"/*\" \\\r\n                --excl-line '#\\[|=> panic!|unreachable!|Io\\(std::io::Error\\)' \\\r\n                --excl-br-line '#\\[|=> panic!|unreachable!|assert_..!' -o ./coverage/lcov.info\r\n```\r\n\r\nI expected to see 100% code coverage on a simple file, e.g. see older coverage result: https://coveralls.io/builds/43003664/source?filename=src%2Ferror.rs - `error.rs` has 100% code coverage.\r\n\r\nInstead, [this happened](https://coveralls.io/builds/51398291):\r\n1. https://coveralls.io/builds/51398291/source?filename=src%2Ferror.rs - **9% coverage.**\r\n2. https://coveralls.io/builds/51398291/source?filename=src%2Flib.rs - **coverage goes over comment lines**\r\n\r\n### Version it worked on\r\n\r\nAt least _nightly-2021-11-11_ toolchain works:\r\n\r\n```bash\r\nrustup default nightly-2021-11-11\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/5967447/182724809-b98293f8-eec5-464c-85d3-07e614f9938a.png)\r\n\r\n<!--\r\nProvide the most recent version this worked on, for example:\r\n\r\nIt most recently worked on: Rust 1.47\r\n-->\r\n\r\nHowever, I have not narrowed down the most recent version this worked on.\r\n\r\n### Version with regression\r\n\r\n<!--\r\nProvide the version you are using that has the regression.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.64.0-nightly (0f4bcadb4 2022-07-30)\r\nbinary: rustc\r\ncommit-hash: 0f4bcadb46006bc484dad85616b484f93879ca4e\r\ncommit-date: 2022-07-30\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.64.0-nightly\r\nLLVM version: 14.0.6\r\n```\r\n\r\n<!--\r\nIf you know when this regression occurred, please add a line like below, replacing `{channel}` with one of stable, beta, or nightly.\r\n\r\n@rustbot modify labels: +regression-from-stable-to-nightly-2021-11-11 -regression-untriaged\r\n-->\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/100125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/100125/timeline", "performed_via_github_app": null, "state_reason": null}