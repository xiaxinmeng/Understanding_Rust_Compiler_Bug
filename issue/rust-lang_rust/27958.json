{"url": "https://api.github.com/repos/rust-lang/rust/issues/27958", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/27958/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/27958/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/27958/events", "html_url": "https://github.com/rust-lang/rust/issues/27958", "id": 102600815, "node_id": "MDU6SXNzdWUxMDI2MDA4MTU=", "number": 27958, "title": "Any trait documentation mentions non-existing methods", "user": {"login": "roosmaa", "id": 65596, "node_id": "MDQ6VXNlcjY1NTk2", "avatar_url": "https://avatars.githubusercontent.com/u/65596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roosmaa", "html_url": "https://github.com/roosmaa", "followers_url": "https://api.github.com/users/roosmaa/followers", "following_url": "https://api.github.com/users/roosmaa/following{/other_user}", "gists_url": "https://api.github.com/users/roosmaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/roosmaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roosmaa/subscriptions", "organizations_url": "https://api.github.com/users/roosmaa/orgs", "repos_url": "https://api.github.com/users/roosmaa/repos", "events_url": "https://api.github.com/users/roosmaa/events{/privacy}", "received_events_url": "https://api.github.com/users/roosmaa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-08-23T08:55:57Z", "updated_at": "2015-08-26T23:03:30Z", "closed_at": "2015-08-26T23:03:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the paragraph about the [any module](https://doc.rust-lang.org/stable/std/any/index.html):\n\n> Any itself can be used to get a TypeId, and has more features when used as a trait object. As &Any (a borrowed trait object), it has the is and **as_ref** methods, to test if the contained value is of a given type, and to get a reference to the inner value as a type. As &mut Any, there is also the **as_mut** method, for getting a mutable reference to the inner value.\n\nShouldn't the as_ref/as_mut methods mentioned be infact downcast_ref/downcast_mut methods? Can't find any as_ref/as_mut method implementations for the Any trait anywhere.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/27958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/27958/timeline", "performed_via_github_app": null, "state_reason": "completed"}