{"url": "https://api.github.com/repos/rust-lang/rust/issues/103563", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103563/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103563/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103563/events", "html_url": "https://github.com/rust-lang/rust/issues/103563", "id": 1423551530, "node_id": "I_kwDOAAsO6M5U2awq", "number": 103563, "title": "Unexpected trait bound not satisfied in GAT & HRTB", "user": {"login": "Millione", "id": 38575932, "node_id": "MDQ6VXNlcjM4NTc1OTMy", "avatar_url": "https://avatars.githubusercontent.com/u/38575932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Millione", "html_url": "https://github.com/Millione", "followers_url": "https://api.github.com/users/Millione/followers", "following_url": "https://api.github.com/users/Millione/following{/other_user}", "gists_url": "https://api.github.com/users/Millione/gists{/gist_id}", "starred_url": "https://api.github.com/users/Millione/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Millione/subscriptions", "organizations_url": "https://api.github.com/users/Millione/orgs", "repos_url": "https://api.github.com/users/Millione/repos", "events_url": "https://api.github.com/users/Millione/events{/privacy}", "received_events_url": "https://api.github.com/users/Millione/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}], "state": "closed", "locked": false, "assignee": {"login": "LYF1999", "id": 17444266, "node_id": "MDQ6VXNlcjE3NDQ0MjY2", "avatar_url": "https://avatars.githubusercontent.com/u/17444266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LYF1999", "html_url": "https://github.com/LYF1999", "followers_url": "https://api.github.com/users/LYF1999/followers", "following_url": "https://api.github.com/users/LYF1999/following{/other_user}", "gists_url": "https://api.github.com/users/LYF1999/gists{/gist_id}", "starred_url": "https://api.github.com/users/LYF1999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LYF1999/subscriptions", "organizations_url": "https://api.github.com/users/LYF1999/orgs", "repos_url": "https://api.github.com/users/LYF1999/repos", "events_url": "https://api.github.com/users/LYF1999/events{/privacy}", "received_events_url": "https://api.github.com/users/LYF1999/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "LYF1999", "id": 17444266, "node_id": "MDQ6VXNlcjE3NDQ0MjY2", "avatar_url": "https://avatars.githubusercontent.com/u/17444266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LYF1999", "html_url": "https://github.com/LYF1999", "followers_url": "https://api.github.com/users/LYF1999/followers", "following_url": "https://api.github.com/users/LYF1999/following{/other_user}", "gists_url": "https://api.github.com/users/LYF1999/gists{/gist_id}", "starred_url": "https://api.github.com/users/LYF1999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LYF1999/subscriptions", "organizations_url": "https://api.github.com/users/LYF1999/orgs", "repos_url": "https://api.github.com/users/LYF1999/repos", "events_url": "https://api.github.com/users/LYF1999/events{/privacy}", "received_events_url": "https://api.github.com/users/LYF1999/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2022-10-26T07:18:08Z", "updated_at": "2023-02-14T13:08:19Z", "closed_at": "2023-02-14T13:08:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\nalong with any information you feel relevant to replicating the bug.\n-->\n\nI tried this code:\n\n```rust\nfn main() {\n    let mut log_service = LogService { inner: Inner };\n    log_service.call(());\n}\n\npub trait Service<Request> {\n    type Response;\n\n    fn call(&mut self, req: Request) -> Self::Response;\n}\n\npub struct LogService<S> {\n    inner: S,\n}\n\nimpl<T, U, S> Service<T> for LogService<S>\nwhere\n    S: Service<T, Response = U>,\n    U: Extension + 'static,\n    for<'a> U::Item<'a>: std::fmt::Debug,\n{\n    type Response = S::Response;\n\n    fn call(&mut self, req: T) -> Self::Response {\n        self.inner.call(req)\n    }\n}\n\npub struct Inner;\n\nimpl Service<()> for Inner {\n    type Response = Resp;\n\n    fn call(&mut self, req: ()) -> Self::Response {\n        Resp::A(req)\n    }\n}\n\npub trait Extension {\n    type Item<'a>;\n\n    fn touch<F>(self, f: F) -> Self\n    where\n        for<'a> F: Fn(Self::Item<'a>);\n}\n\npub enum Resp {\n    A(()),\n}\n\nimpl Extension for Resp {\n    type Item<'a> = RespItem<'a>;\n    fn touch<F>(self, _f: F) -> Self\n    where\n        for<'a> F: Fn(Self::Item<'a>),\n    {\n        match self {\n            Self::A(a) => Self::A(a),\n        }\n    }\n}\n\npub enum RespItem<'a> {\n    A(&'a ()),\n}\n\nimpl<'a> std::fmt::Debug for RespItem<'a> {\n    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n        match self {\n            Self::A(arg0) => f.debug_tuple(\"A\").field(arg0).finish(),\n        }\n    }\n}\n\n```\n\n### Meta\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\n\n`rustc --version --verbose`:\n```\nrustc 1.66.0-nightly (bed4ad65b 2022-10-25)\nbinary: rustc\ncommit-hash: bed4ad65bf7a1cef39e3d66b3670189581b3b073\ncommit-date: 2022-10-25\nhost: x86_64-unknown-linux-gnu\nrelease: 1.66.0-nightly\nLLVM version: 15.0.2\n```\n\n<!--\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\n-->\n<details><summary>Backtrace</summary>\n<p>\n\n```\nerror[E0599]: the method `call` exists for struct `LogService<Inner>`, but its trait bounds were not satisfied\n  --> src/main.rs:3:17\n   |\n3  |     log_service.call(());\n   |                 ^^^^ method cannot be called on `LogService<Inner>` due to unsatisfied trait bounds\n...\n12 | pub struct LogService<S> {\n   | ------------------------\n   | |\n   | method `call` not found for this struct\n   | doesn't satisfy `LogService<Inner>: Service<_>`\n   |\nnote: trait bound `<_ as Extension>::Item<'a>: Debug` was not satisfied\n  --> src/main.rs:20:26\n   |\n16 | impl<T, U, S> Service<T> for LogService<S>\n   |               ----------     -------------\n...\n20 |     for<'a> U::Item<'a>: std::fmt::Debug,\n   |                          ^^^^^^^^^^^^^^^ unsatisfied trait bound introduced here\n\nFor more information about this error, try `rustc --explain E0599`.\n```\n\n</p>\n</details>\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"LYF1999\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103563/timeline", "performed_via_github_app": null, "state_reason": "completed"}