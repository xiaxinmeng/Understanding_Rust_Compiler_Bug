{"url": "https://api.github.com/repos/rust-lang/rust/issues/105277", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105277/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105277/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105277/events", "html_url": "https://github.com/rust-lang/rust/issues/105277", "id": 1475315058, "node_id": "I_kwDOAAsO6M5X74Vy", "number": 105277, "title": "incompatible types when using re-exports of the same crate from different crates (different paths)", "user": {"login": "dustbort", "id": 620141, "node_id": "MDQ6VXNlcjYyMDE0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/620141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dustbort", "html_url": "https://github.com/dustbort", "followers_url": "https://api.github.com/users/dustbort/followers", "following_url": "https://api.github.com/users/dustbort/following{/other_user}", "gists_url": "https://api.github.com/users/dustbort/gists{/gist_id}", "starred_url": "https://api.github.com/users/dustbort/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dustbort/subscriptions", "organizations_url": "https://api.github.com/users/dustbort/orgs", "repos_url": "https://api.github.com/users/dustbort/repos", "events_url": "https://api.github.com/users/dustbort/events{/privacy}", "received_events_url": "https://api.github.com/users/dustbort/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-12-04T23:52:03Z", "updated_at": "2022-12-05T20:50:14Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\nlet item = sickle_builder::types::time::Date::from_calendar_date(\r\n    2020,\r\n    sickle_builder::types::time::Month::January,\r\n    1,\r\n)?;\r\nlet y: i32 = item.year();\r\nlet m: tiberius::time::time::Month = item.month();\r\nlet d: u8 = item.day();\r\nlet date: tiberius::time::Date = tiberius::time::time::Date::from_calendar_date(y, m, d)?;\r\n```\r\n\r\nI expected to see this happen: No error\r\n\r\nInstead, this happened: \r\n```\r\nerror[E0308]: `?` operator has incompatible types\r\n  --> sickle-query/src/mssql_queryable.rs:53:21\r\n   |\r\n53 |                     tiberius::time::time::Date::from_calendar_date(y, m, d)?\r\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `tiberius::time::Date`, found struct `sickle_builder::types::time::Date`\r\n   |\r\n   = note: `?` operator cannot convert from `sickle_builder::types::time::Date` to `tiberius::time::Date`\r\n```\r\n\r\n`sickle_query::types::time` and `tiberius::time` are re-exports of the `time` crate. For multiple reasons, these may be different versions with different features and _are not be assumed to be the same_. However, it seems that rustc is detecting that they are the same crate, and then \"forgets\" the path or assumes the wrong path on line 53. But though the path is explicitly given on both the left and right hand sides of the assignment, so there is no ambiguity.\r\n\r\nConfirmed this for nightly with `cargo +nightly build --workspace --all-targets --all-features`\r\n\r\nNote: This seems different than https://github.com/rust-lang/rust/issues/102882, because I am explicitly stating the paths of which re-export to use, and am not making assumptions that they are the same. rustc seems to arbitrarily pick/unify/dedup a different re-export than what is explicitly stated on one side of the assignment, then fails to do the same with the other side.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.65.0 (897e37553 2022-11-02)\r\nbinary: rustc\r\ncommit-hash: 897e37553bba8b42751c67658967889d11ecd120\r\ncommit-date: 2022-11-02\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.65.0\r\nLLVM version: 15.0.0\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\nNo backtrace; it doesn't build.\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105277/timeline", "performed_via_github_app": null, "state_reason": null}