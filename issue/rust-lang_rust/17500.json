{"url": "https://api.github.com/repos/rust-lang/rust/issues/17500", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/17500/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/17500/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/17500/events", "html_url": "https://github.com/rust-lang/rust/issues/17500", "id": 43719812, "node_id": "MDU6SXNzdWU0MzcxOTgxMg==", "number": 17500, "title": "Possible to mutably borrow elements inside a Vec inside a HashMap multiple times", "user": {"login": "tedsta", "id": 1218723, "node_id": "MDQ6VXNlcjEyMTg3MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1218723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tedsta", "html_url": "https://github.com/tedsta", "followers_url": "https://api.github.com/users/tedsta/followers", "following_url": "https://api.github.com/users/tedsta/following{/other_user}", "gists_url": "https://api.github.com/users/tedsta/gists{/gist_id}", "starred_url": "https://api.github.com/users/tedsta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tedsta/subscriptions", "organizations_url": "https://api.github.com/users/tedsta/orgs", "repos_url": "https://api.github.com/users/tedsta/repos", "events_url": "https://api.github.com/users/tedsta/events{/privacy}", "received_events_url": "https://api.github.com/users/tedsta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/20", "html_url": "https://github.com/rust-lang/rust/milestone/20", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/20/labels", "id": 452034, "node_id": "MDk6TWlsZXN0b25lNDUyMDM0", "number": 20, "title": "1.0", "description": "This will be the first major release of Rust, where we offer some guaranteed level of support and backwards compatibility.\r\n\r\nThe significant criteria for this release are:\r\n\r\n* Language backwards compatibility - All major features are in, and in their final form. Generally, the only new language features added after this milestone must be backwards compatible, or to fix soundness holes, though we do expect to have some leeway to make small incompatible fixes that have low impact on existing code bases.\r\n\r\n* Library stability - We have a system of measuring and ensuring the stability of API's, and a significant portion of the standard library is declared stable. Stable API's will not change. Large portions of the standard library need to be stable for 1.0, including primitive types, vectors, strings, option, numerics, collections, some I/O and concurrency.\r\n\r\n* User experience - The system is polished and the presentation is complete and professional. New users have a clear path to using and learning the system. This encompasses the web site, documentation, installation, and tooling.\r\n", "creator": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 376, "state": "closed", "created_at": "2013-10-10T18:48:33Z", "updated_at": "2016-08-28T23:13:24Z", "due_on": "2015-05-15T07:00:00Z", "closed_at": "2015-05-21T20:59:13Z"}, "comments": 8, "created_at": "2014-09-24T05:46:47Z", "updated_at": "2014-09-27T21:28:44Z", "closed_at": "2014-09-27T21:22:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Sorry, I'm not sure how to describe this very well in a sentence. I am able to mutably borrow the innermost values of a `HashMap<u32, Vec<int>>`, delete the values, then reference them after they were deleted. This code compiles, runs, and barfs out strange numbers.\n\n``` rust\nuse std::collections::HashMap;\n\nfn main() {\n    let mut my_stuff: HashMap<u32, Vec<int>> = HashMap::new();\n    my_stuff.insert(0, vec![1, 2, 3, 4]);\n\n    // Do bad things\n    let mut stuff = vec!();\n    for (_, vec) in my_stuff.mut_iter() {\n        for thing in vec.mut_iter() {\n            stuff.push(thing);\n        }\n    }\n\n    my_stuff.clear();\n\n    for thing in stuff.iter() {\n        println!(\"{}\", *thing);\n    }\n}\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/17500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/17500/timeline", "performed_via_github_app": null, "state_reason": "completed"}