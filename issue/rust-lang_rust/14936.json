{"url": "https://api.github.com/repos/rust-lang/rust/issues/14936", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/14936/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/14936/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/14936/events", "html_url": "https://github.com/rust-lang/rust/issues/14936", "id": 35811992, "node_id": "MDU6SXNzdWUzNTgxMTk5Mg==", "number": 14936, "title": "`asm!` evaluates read-write constraint (`\"+r\"`) expression twice", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 91598611, "node_id": "MDU6TGFiZWw5MTU5ODYxMQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inline-assembly", "name": "A-inline-assembly", "color": "f7e101", "default": false, "description": "Area: inline asm!(..)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-16T16:18:50Z", "updated_at": "2019-11-06T01:23:57Z", "closed_at": "2014-08-20T05:06:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When you use `\"=r\"(x)`, it evaluates `x` once.\n\nWhen you use `\"+r\"(x)`, it evaluates `x` twice.\n\nYou would not notice the multiple evaluation of `x` when it is just a variable reference.  But when it is another expression, you can observe it.\n\nI suspect this is just an oversight in the construction of the `asm!` macro (in that it should expand into a single occurrence of each of its operands, but it is probably expanding into two occurrences of the output operand expression when it is `+r`).\n\nHere is some demo code:\n\n``` rust\n#![feature(macro_rules)]\n#![feature(asm)]\n\ntype History = Vec<&'static str>;\n\nfn wrap<A>(x:A, where: &'static str, history: &mut History) -> A {\n    history.push(where);\n    x\n}\n\nmacro_rules! demo {\n    ( $output_constraint:tt ) => {\n        {\n            let mut x: int = 0;\n            let y: int = 1;\n\n            let mut history: History = vec!();\n            unsafe {\n                asm!(\"mov ($1), $0\"\n                     : $output_constraint (*wrap(&mut x, \"out\", &mut history))\n                     : \"r\"(&wrap(y, \"in\", &mut history)));\n            }\n            assert_eq!((x,y), (1,1));\n            assert_eq!(history.as_slice(), &[\"out\", \"in\"]);\n        }\n    }\n}\n\n#[cfg(target_arch = \"x86\")]\n#[cfg(target_arch = \"x86_64\")]\nfn main() {\n    fn out_write_only_expr_then_in_expr() {\n        demo!(\"=r\")\n    }\n\n    fn out_read_write_expr_then_in_expr() {\n        demo!(\"+r\")\n    }\n\n    out_write_only_expr_then_in_expr();\n    out_read_write_expr_then_in_expr();\n}\n\n#[cfg(not(target_arch = \"x86\"), not(target_arch = \"x86_64\"))]\npub fn main() {}\n```\n\nTranscript of run (note the assertion failure shows that the out case is evaluated multiple times):\n\n```\n% rustc --version\nrustc 0.11.0-pre (7ec7805 2014-06-16 08:16:49 +0000)\nhost: x86_64-apple-darwin\n% rustc asm-multiple-eval.rs && ./asm-multiple-eval\ntask '<main>' failed at 'assertion failed: `(left == right) && (right == left)` (left: `[out, in, out]`, right: `[out, in]`)', asm-multiple-eval.rs:37\n% \n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/14936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/14936/timeline", "performed_via_github_app": null, "state_reason": "completed"}