{"url": "https://api.github.com/repos/rust-lang/rust/issues/76535", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/76535/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/76535/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/76535/events", "html_url": "https://github.com/rust-lang/rust/issues/76535", "id": 697089357, "node_id": "MDU6SXNzdWU2OTcwODkzNTc=", "number": 76535, "title": "Compiler panics when creating a trait object for a trait which uses generic_associated_types", "user": {"login": "TopologicallySpeaking", "id": 64005627, "node_id": "MDQ6VXNlcjY0MDA1NjI3", "avatar_url": "https://avatars.githubusercontent.com/u/64005627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TopologicallySpeaking", "html_url": "https://github.com/TopologicallySpeaking", "followers_url": "https://api.github.com/users/TopologicallySpeaking/followers", "following_url": "https://api.github.com/users/TopologicallySpeaking/following{/other_user}", "gists_url": "https://api.github.com/users/TopologicallySpeaking/gists{/gist_id}", "starred_url": "https://api.github.com/users/TopologicallySpeaking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TopologicallySpeaking/subscriptions", "organizations_url": "https://api.github.com/users/TopologicallySpeaking/orgs", "repos_url": "https://api.github.com/users/TopologicallySpeaking/repos", "events_url": "https://api.github.com/users/TopologicallySpeaking/events{/privacy}", "received_events_url": "https://api.github.com/users/TopologicallySpeaking/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-09-09T19:22:53Z", "updated_at": "2021-02-05T14:52:57Z", "closed_at": "2021-02-05T14:52:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nI think the trait object isn't aware of the parameters in the associated type, so it ends up with a different number of parameters than it should.\r\n\r\n### Code\r\n\r\n`main.rs`:\r\n```Rust\r\n#![feature(generic_associated_types)]\r\n\r\npub trait SubTrait {}\r\n\r\npub trait SuperTrait {\r\n    type SubType<'a>: SubTrait;\r\n\r\n    fn get_sub<'a>(&'a mut self) -> Self::SubType<'a>;\r\n}\r\n\r\npub struct SubStruct<'a> {\r\n    sup: &'a mut SuperStruct,\r\n}\r\n\r\nimpl<'a> SubTrait for SubStruct<'a> {}\r\n\r\npub struct SuperStruct {\r\n    value: u8,\r\n}\r\n\r\nimpl SuperStruct {\r\n    pub fn new(value: u8) -> SuperStruct {\r\n        SuperStruct { value }\r\n    }\r\n}\r\n\r\nimpl SuperTrait for SuperStruct {\r\n    type SubType<'a> = SubStruct<'a>;\r\n\r\n    fn get_sub<'a>(&'a mut self) -> Self::SubType<'a> {\r\n        SubStruct { sup: self }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let sub: Box<dyn SuperTrait<SubType = SubStruct>> = Box::new(SuperStruct::new(0));\r\n}\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.47.0-nightly (8e21bd063 2020-08-14)\r\nbinary: rustc\r\ncommit-hash: 8e21bd0633b8d970646ee6eb706c9e8acfad19af\r\ncommit-date: 2020-08-14\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.47.0-nightly\r\nLLVM version: 10.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nwarning: the feature `generic_associated_types` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/main.rs:1:12\r\n  |\r\n1 | #![feature(generic_associated_types)]\r\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #44265 <https://github.com/rust-lang/rust/issues/44265> for more information\r\n\r\nwarning: unused variable: `sub`\r\n  --> src/main.rs:36:9\r\n   |\r\n36 |     let sub: Box<dyn SuperTrait<SubType = SubStruct>> = Box::new(SuperStruct::new(0));\r\n   |         ^^^ help: if this is intentional, prefix it with an underscore: `_sub`\r\n   |\r\n   = note: `#[warn(unused_variables)]` on by default\r\n\r\nwarning: field is never read: `sup`\r\n  --> src/main.rs:12:5\r\n   |\r\n12 |     sup: &'a mut SuperStruct,\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: `#[warn(dead_code)]` on by default\r\n\r\nwarning: field is never read: `value`\r\n  --> src/main.rs:18:5\r\n   |\r\n18 |     value: u8,\r\n   |     ^^^^^^^^^\r\n\r\nwarning: Error finalizing incremental compilation session directory `/home/alex/Documents/Development/ice_minimal/target/debug/incremental/ice_minimal-12sq6hsbdt9f2/s-fr1eb3vgke-1vvozop-working`: No such file or directory (os error 2)\r\n\r\nwarning: 5 warnings emitted\r\n\r\nerror: internal compiler error: impl item and trait item have different parameter counts\r\n  |\r\n  = note: delayed at /rustc/8e21bd0633b8d970646ee6eb706c9e8acfad19af/src/librustc_session/session.rs:441:27\r\n\r\nerror: internal compiler error: TyKind::Error constructed but no error reported\r\n  |\r\n  = note: delayed at /rustc/8e21bd0633b8d970646ee6eb706c9e8acfad19af/src/librustc_session/session.rs:441:27\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src/librustc_errors/lib.rs:366:17\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.47.0-nightly (8e21bd063 2020-08-14) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: could not compile `ice_minimal`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```warning: the feature `generic_associated_types` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> src/main.rs:1:12\r\n  |\r\n1 | #![feature(generic_associated_types)]\r\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #44265 <https://github.com/rust-lang/rust/issues/44265> for more information\r\n\r\nwarning: unused variable: `sub`\r\n  --> src/main.rs:36:9\r\n   |\r\n36 |     let sub: Box<dyn SuperTrait<SubType = SubStruct>> = Box::new(SuperStruct::new(0));\r\n   |         ^^^ help: if this is intentional, prefix it with an underscore: `_sub`\r\n   |\r\n   = note: `#[warn(unused_variables)]` on by default\r\n\r\nwarning: field is never read: `sup`\r\n  --> src/main.rs:12:5\r\n   |\r\n12 |     sup: &'a mut SuperStruct,\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: `#[warn(dead_code)]` on by default\r\n\r\nwarning: field is never read: `value`\r\n  --> src/main.rs:18:5\r\n   |\r\n18 |     value: u8,\r\n   |     ^^^^^^^^^\r\n\r\nwarning: Error finalizing incremental compilation session directory `/home/alex/Documents/Development/ice_minimal/target/debug/incremental/ice_minimal-12sq6hsbdt9f2/s-fr1ebr4tpj-1habbbz-working`: No such file or directory (os error 2)\r\n\r\nwarning: 5 warnings emitted\r\n\r\nerror: internal compiler error: impl item and trait item have different parameter counts\r\n  |\r\n  = note: delayed at /rustc/8e21bd0633b8d970646ee6eb706c9e8acfad19af/src/librustc_session/session.rs:441:27\r\n\r\nerror: internal compiler error: TyKind::Error constructed but no error reported\r\n  |\r\n  = note: delayed at /rustc/8e21bd0633b8d970646ee6eb706c9e8acfad19af/src/librustc_session/session.rs:441:27\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src/librustc_errors/lib.rs:366:17\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop\r\n   2: core::ptr::drop_in_place\r\n   3: <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop\r\n   4: core::ptr::drop_in_place\r\n   5: rustc_span::with_source_map\r\n   6: rustc_interface::interface::create_compiler_and_run\r\n   7: rustc_span::with_session_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.47.0-nightly (8e21bd063 2020-08-14) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: could not compile `ice_minimal`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/76535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/76535/timeline", "performed_via_github_app": null, "state_reason": "completed"}