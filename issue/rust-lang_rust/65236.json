{"url": "https://api.github.com/repos/rust-lang/rust/issues/65236", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65236/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65236/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65236/events", "html_url": "https://github.com/rust-lang/rust/issues/65236", "id": 504686568, "node_id": "MDU6SXNzdWU1MDQ2ODY1Njg=", "number": 65236, "title": "Occasional \"cannot move out\" error (E0505) when adding a match guard", "user": {"login": "bytefall", "id": 44868003, "node_id": "MDQ6VXNlcjQ0ODY4MDAz", "avatar_url": "https://avatars.githubusercontent.com/u/44868003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bytefall", "html_url": "https://github.com/bytefall", "followers_url": "https://api.github.com/users/bytefall/followers", "following_url": "https://api.github.com/users/bytefall/following{/other_user}", "gists_url": "https://api.github.com/users/bytefall/gists{/gist_id}", "starred_url": "https://api.github.com/users/bytefall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bytefall/subscriptions", "organizations_url": "https://api.github.com/users/bytefall/orgs", "repos_url": "https://api.github.com/users/bytefall/repos", "events_url": "https://api.github.com/users/bytefall/events{/privacy}", "received_events_url": "https://api.github.com/users/bytefall/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 1146616045, "node_id": "MDU6TGFiZWwxMTQ2NjE2MDQ1", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-polonius", "name": "NLL-polonius", "color": "f799ea", "default": false, "description": "Issues related for using Polonius in the borrow checker"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-09T14:23:35Z", "updated_at": "2019-10-10T15:38:25Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Given the following snippet:\r\n```rust\r\nstruct State {\r\n    val: u8,\r\n    xy: bool,\r\n}\r\n\r\nstruct Test {\r\n    vec: Vec<State>,\r\n}\r\n\r\nimpl Test {\r\n    fn new() -> Self {\r\n        Test { vec: Vec::new() }\r\n    }\r\n    \r\n    fn get_mut(&mut self, id: usize) -> Result<&mut u8, Option<&mut State>> {\r\n        match self.vec.get_mut(id) {\r\n            Some(State { ref mut val, ref xy }) /*if true*/ => Ok(val),\r\n            other => Err(other),\r\n        }\r\n    }\r\n}\r\n```\r\nThis compiles just fine. Now uncomment the _if true_ match guard and compile fails:\r\n```\r\nerror[E0505]: cannot move out of `_` because it is borrowed\r\n  --> src/lib.rs:18:13\r\n   |\r\n15 |     fn get_mut(&mut self, id: usize) -> Result<&mut u8, Option<&mut State>> {\r\n   |                - let's call the lifetime of this reference `'1`\r\n16 |         match self.vec.get_mut(id) {\r\n17 |             Some(State { ref mut val, ref xy }) if true => Ok(val),\r\n   |                          -----------                       ------- returning this value requires that borrow lasts for `'1`\r\n   |                          |\r\n   |                          borrow of value occurs here\r\n18 |             other => Err(other),\r\n   |             ^^^^^ move out of value occurs here\r\n```\r\nWhy does the insignificant match guard affect the borrowck?\r\n\r\nTested both on stable 1.38.0 and 1.40.0-nightly (032a53a06 2019-10-03).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65236/timeline", "performed_via_github_app": null, "state_reason": null}