{"url": "https://api.github.com/repos/rust-lang/rust/issues/46154", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46154/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46154/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46154/events", "html_url": "https://github.com/rust-lang/rust/issues/46154", "id": 275708423, "node_id": "MDU6SXNzdWUyNzU3MDg0MjM=", "number": 46154, "title": "Infer if type through indirection.", "user": {"login": "kevincox", "id": 494012, "node_id": "MDQ6VXNlcjQ5NDAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/494012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevincox", "html_url": "https://github.com/kevincox", "followers_url": "https://api.github.com/users/kevincox/followers", "following_url": "https://api.github.com/users/kevincox/following{/other_user}", "gists_url": "https://api.github.com/users/kevincox/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevincox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevincox/subscriptions", "organizations_url": "https://api.github.com/users/kevincox/orgs", "repos_url": "https://api.github.com/users/kevincox/repos", "events_url": "https://api.github.com/users/kevincox/events{/privacy}", "received_events_url": "https://api.github.com/users/kevincox/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-21T13:17:37Z", "updated_at": "2022-03-21T12:08:49Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It surprised me that the first example works, while the second doesn't.\r\n\r\nhttps://play.rust-lang.org/?gist=a1bee92067f87a67240b4ccd2bc9a6a4&version=stable\r\n\r\n```rust\r\ntrait Foo {}\r\n\r\nstruct A;\r\nimpl Foo for A {}\r\n\r\nstruct B;\r\nimpl Foo for B {}\r\n\r\npub fn test() {\r\n    let a = A;\r\n    let b = B;\r\n\r\n    // Works.\r\n    let x: &Foo = if true { &a } else { &b };\r\n\r\n    // Doesn't work.\r\n    let y = if true { &a } else { &b };\r\n    let z: &Foo = y;\r\n}\r\n```\r\n\r\n```\r\nerror[E0308]: if and else have incompatible types\r\n  --> src/main.rs:17:13\r\n   |\r\n17 |     let y = if true { &a } else { &b };\r\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `A`, found struct `B`\r\n   |\r\n   = note: expected type `&A`\r\n              found type `&B`\r\n```\r\n\r\nIt seems like adding this `let` shouldn't change anything but it seems the required type of the if statement isn't propagated unless it is directly used. The same behaviour can be found when using `func(if ...)` vs `let x = if ...; func(x)`\r\n\r\n(sorry if this is known, I couldn't find anything)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46154/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 2, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46154/timeline", "performed_via_github_app": null, "state_reason": null}