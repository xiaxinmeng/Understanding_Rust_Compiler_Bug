{"url": "https://api.github.com/repos/rust-lang/rust/issues/112744", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112744/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112744/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112744/events", "html_url": "https://github.com/rust-lang/rust/issues/112744", "id": 1761887981, "node_id": "I_kwDOAAsO6M5pBEbt", "number": 112744, "title": "Blocking behavior on Windows when allocating inside a loop on multiple threads", "user": {"login": "c-antin", "id": 38494182, "node_id": "MDQ6VXNlcjM4NDk0MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/38494182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c-antin", "html_url": "https://github.com/c-antin", "followers_url": "https://api.github.com/users/c-antin/followers", "following_url": "https://api.github.com/users/c-antin/following{/other_user}", "gists_url": "https://api.github.com/users/c-antin/gists{/gist_id}", "starred_url": "https://api.github.com/users/c-antin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c-antin/subscriptions", "organizations_url": "https://api.github.com/users/c-antin/orgs", "repos_url": "https://api.github.com/users/c-antin/repos", "events_url": "https://api.github.com/users/c-antin/events{/privacy}", "received_events_url": "https://api.github.com/users/c-antin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123109, "node_id": "MDU6TGFiZWwxMjMxMDk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows", "name": "O-windows", "color": "6e6ec0", "default": false, "description": "Operating system: Windows"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-06-17T15:04:26Z", "updated_at": "2023-06-19T11:04:02Z", "closed_at": "2023-06-19T11:04:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI've been porting a simple PHP benchmark of repeated str_replace/preg_replace to Rust (that I scaled up to have 1s runtime on my machine). First I thought it's a problem with the regex crate (more details can be found [here](https://github.com/rust-lang/regex/issues/1013)).\r\nBut it seems to be an issue on Windows if the allocator is shared between threads (vs processes).\r\n\r\n```rust\r\nuse std::time::Instant;\r\n\r\nuse regex::Regex;\r\n\r\nfn main() {\r\n    let mut args = std::env::args();\r\n    let _ = args.next();\r\n    let arg1 = args.next();\r\n    if arg1.is_none() {\r\n        panic!(\"arg1 missing!\");\r\n    }\r\n    let n = arg1.unwrap().parse().unwrap();\r\n    let ts = Instant::now();\r\n    let mut handles = Vec::with_capacity(n);\r\n    for _ in 0..n {\r\n        handles.push(std::thread::spawn(|| {\r\n            let mut subject = \"#\".to_string();\r\n            let search = Regex::new(&regex::escape(\"#\")).unwrap();\r\n            let replace = \"benchmark#\";\r\n\r\n            let ts = Instant::now();\r\n            for _ in 0..38000 {\r\n                subject = search.replace_all(&subject, replace).to_string();\r\n            }\r\n            println!(\"thread {}\", ts.elapsed().as_secs_f32());\r\n        }));\r\n    }\r\n\r\n    for handle in handles {\r\n        handle.join().unwrap();\r\n    }\r\n    println!(\"total {}\", ts.elapsed().as_secs_f32());\r\n}\r\n\r\n```\r\n\r\nI expected to see this happen: total runtime at most that of the slowest thread\r\n\r\nInstead, this happened: total runtime is as if all threads were run in sequence\r\n\r\nI've tested it on 3 distinct Windows machines (same result) and on a macOS machine (no sequential runtime).\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.70.0 (90c541806 2023-05-31)\r\nbinary: rustc\r\ncommit-hash: 90c541806f23a127002de5b4038be731ba1458ca\r\ncommit-date: 2023-05-31\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.70.0\r\nLLVM version: 16.0.2\r\n```\r\n", "closed_by": {"login": "c-antin", "id": 38494182, "node_id": "MDQ6VXNlcjM4NDk0MTgy", "avatar_url": "https://avatars.githubusercontent.com/u/38494182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c-antin", "html_url": "https://github.com/c-antin", "followers_url": "https://api.github.com/users/c-antin/followers", "following_url": "https://api.github.com/users/c-antin/following{/other_user}", "gists_url": "https://api.github.com/users/c-antin/gists{/gist_id}", "starred_url": "https://api.github.com/users/c-antin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c-antin/subscriptions", "organizations_url": "https://api.github.com/users/c-antin/orgs", "repos_url": "https://api.github.com/users/c-antin/repos", "events_url": "https://api.github.com/users/c-antin/events{/privacy}", "received_events_url": "https://api.github.com/users/c-antin/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112744/timeline", "performed_via_github_app": null, "state_reason": "completed"}