{"url": "https://api.github.com/repos/rust-lang/rust/issues/81643", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81643/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81643/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81643/events", "html_url": "https://github.com/rust-lang/rust/issues/81643", "id": 798720041, "node_id": "MDU6SXNzdWU3OTg3MjAwNDE=", "number": 81643, "title": "consider changing this to be a mutable reference: &mut mut", "user": {"login": "telmotrooper", "id": 9438853, "node_id": "MDQ6VXNlcjk0Mzg4NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/9438853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/telmotrooper", "html_url": "https://github.com/telmotrooper", "followers_url": "https://api.github.com/users/telmotrooper/followers", "following_url": "https://api.github.com/users/telmotrooper/following{/other_user}", "gists_url": "https://api.github.com/users/telmotrooper/gists{/gist_id}", "starred_url": "https://api.github.com/users/telmotrooper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/telmotrooper/subscriptions", "organizations_url": "https://api.github.com/users/telmotrooper/orgs", "repos_url": "https://api.github.com/users/telmotrooper/repos", "events_url": "https://api.github.com/users/telmotrooper/events{/privacy}", "received_events_url": "https://api.github.com/users/telmotrooper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-02-01T21:24:18Z", "updated_at": "2022-12-23T23:10:25Z", "closed_at": "2022-12-23T23:10:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to implement a Binary Search Tree I stumbled upon a situation on which the compiler recommends for me to:\r\n```\r\nconsider changing this to be a mutable reference: `&mut mut self.root`\r\n```\r\nI tried this code:\r\n\r\n```rust\r\nuse std::cmp::PartialOrd;\r\n\r\nstruct Node<T> {\r\n    value: T,\r\n    left_child: Option<Box<Node<T>>>,\r\n    right_child: Option<Box<Node<T>>>\r\n    // Box is used because Node<T> is a recursive type.\r\n}\r\n\r\nimpl<T> Node<T> {\r\n    fn new(value: T) -> Node<T> {\r\n        Node {\r\n            value,\r\n            left_child: None,\r\n            right_child: None\r\n        }\r\n    }\r\n}\r\n\r\nstruct BinarySearchTree<T> {\r\n    root: Option<Box<Node<T>>>\r\n}\r\n\r\nimpl<T> BinarySearchTree<T>\r\nwhere T: PartialOrd\r\n{\r\n    fn new() -> BinarySearchTree<T> {\r\n        BinarySearchTree {\r\n            root: None\r\n        }\r\n    }\r\n\r\n    fn insert(&mut self, value: T) {\r\n        let new_node: Node<T> = Node::new(value);\r\n\r\n        let mut current_node: &Option<Box<Node<T>>> = &mut self.root;\r\n\r\n        if current_node.is_none() {\r\n            self.root = Some(Box::new(new_node));\r\n            return\r\n        }\r\n\r\n        if new_node.value < current_node.as_ref().unwrap().value { // Less than\r\n            if current_node.as_ref().unwrap().left_child.is_some() {\r\n                current_node = &current_node.as_ref().unwrap().left_child;\r\n            } else {\r\n                current_node.as_mut().unwrap().left_child = Some(Box::new(new_node));\r\n            }\r\n        } else { // Greater than\r\n            if current_node.as_ref().unwrap().right_child.is_some() {\r\n                current_node = &current_node.as_ref().unwrap().right_child;\r\n            } else {\r\n                todo!()\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let mut bst: BinarySearchTree<i64> = BinarySearchTree::new();\r\n\r\n    bst.insert(256);\r\n    bst.insert(512);\r\n\r\n    println!(\"{:?}\", bst.root.unwrap().value);\r\n}\r\n\r\n```\r\n\r\nI expected to see this happen: A suggestion for a valid code change.\r\n\r\nInstead, this happened: A suggestion for something that is not considered valid code.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.49.0 (e1884a8e3 2020-12-29)\r\nbinary: rustc\r\ncommit-hash: e1884a8e3c3e813aada8254edfa120e85bf5ffca\r\ncommit-date: 2020-12-29\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.49.0\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nCompiling data_structures v0.1.0 (/home/telmo/Development/rust_fun/data_structures)\r\nwarning: value assigned to `current_node` is never read\r\n  --> src/main.rs:45:17\r\n   |\r\n45 |                 current_node = &current_node.as_ref().unwrap().left_child;\r\n   |                 ^^^^^^^^^^^^\r\n   |\r\n   = note: `#[warn(unused_assignments)]` on by default\r\n   = help: maybe it is overwritten before being read?\r\n\r\nwarning: value assigned to `current_node` is never read\r\n  --> src/main.rs:51:17\r\n   |\r\n51 |                 current_node = &current_node.as_ref().unwrap().right_child;\r\n   |                 ^^^^^^^^^^^^\r\n   |\r\n   = help: maybe it is overwritten before being read?\r\n\r\nerror[E0596]: cannot borrow `*current_node` as mutable, as it is behind a `&` reference\r\n  --> src/main.rs:47:17\r\n   |\r\n36 |         let mut current_node: &Option<Box<Node<T>>> = &mut self.root;\r\n   |                                                       -------------- help: consider changing this to be a mutable reference: `&mut mut self.root`\r\n...\r\n47 |                 current_node.as_mut().unwrap().left_child = Some(Box::new(new_node));\r\n   |                 ^^^^^^^^^^^^ `current_node` is a `&` reference, so the data it refers to cannot be borrowed as mutable\r\n\r\nerror: aborting due to previous error; 2 warnings emitted\r\n\r\nFor more information about this error, try `rustc --explain E0596`.\r\nerror: could not compile `data_structures`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":null}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81643/timeline", "performed_via_github_app": null, "state_reason": "completed"}