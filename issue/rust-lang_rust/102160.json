{"url": "https://api.github.com/repos/rust-lang/rust/issues/102160", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102160/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102160/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102160/events", "html_url": "https://github.com/rust-lang/rust/issues/102160", "id": 1383097337, "node_id": "I_kwDOAAsO6M5ScGP5", "number": 102160, "title": "Panic while compiling", "user": {"login": "sadmac7000", "id": 1865365, "node_id": "MDQ6VXNlcjE4NjUzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1865365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sadmac7000", "html_url": "https://github.com/sadmac7000", "followers_url": "https://api.github.com/users/sadmac7000/followers", "following_url": "https://api.github.com/users/sadmac7000/following{/other_user}", "gists_url": "https://api.github.com/users/sadmac7000/gists{/gist_id}", "starred_url": "https://api.github.com/users/sadmac7000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sadmac7000/subscriptions", "organizations_url": "https://api.github.com/users/sadmac7000/orgs", "repos_url": "https://api.github.com/users/sadmac7000/repos", "events_url": "https://api.github.com/users/sadmac7000/events{/privacy}", "received_events_url": "https://api.github.com/users/sadmac7000/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-09-22T22:45:12Z", "updated_at": "2022-12-20T10:58:01Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n\r\n// ---- Snip ---\r\n\r\n#[tracing::instrument(level = \"info\")]\r\nasync fn handle_controller_request(\r\n    node: Arc<Router>,\r\n    r: MeshControllerRequest,\r\n) -> Result<(), Error> {\r\n\r\n    // This line seems to be the issue. The enum in question is no longer a single-variant enum, so the code is incorrect, but\r\n    // of course should not crash the compiler.\r\n    let MeshControllerRequest::AttachSocketLink { socket, control_handle: _ } = r;\r\n\r\n\r\n    let (mut rx, mut tx) = fidl::AsyncSocket::from_socket(socket)?.split();\r\n    let config = Box::new(|| {\r\n        Some(fidl_fuchsia_overnet_protocol::LinkConfig::Socket(\r\n            fidl_fuchsia_overnet_protocol::Empty {},\r\n        ))\r\n    });\r\n    if let Err(e) = run_stream_link(node, None, &mut rx, &mut tx, Default::default(), config).await\r\n    {\r\n        tracing::warn!(\"Socket link failed: {:#?}\", e);\r\n    }\r\n    Ok(())\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.60.0 (7737e0b5c 2022-04-04)\r\nbinary: rustc\r\ncommit-hash: 7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c\r\ncommit-date: 2022-04-04\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.60.0\r\nLLVM version: 14.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.65.0-nightly (350cca3b6 2022-08-30) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -Z dep-info-omit-d-target -C link-args=-Wl,--Map=host_x64/exe.unstripped/hoist_lib_test.map -C linker=../../prebuilt/third_party/clang/linux-x64/bin/clang++ -C default-linker-libraries -C link-arg=--sysroot=../../prebuilt/third_party/sysroot/linux -C link-arg=--target=x86_64-unknown-linux-gnu -C link-arg=-stdlib=libc++ -C link-arg=-unwindlib=libunwind -C link-arg=-rtlib=compiler-rt -C link-arg=-fuse-ld=lld -C link-arg=-Wl,--build-id -Z remap-cwd-prefix=. -C opt-level=s -C debuginfo=2 -Z allow-features= -C linker=../../prebuilt/third_party/clang/linux-x64/bin/clang++ -C default-linker-libraries -C link-arg=--sysroot=../../prebuilt/third_party/sysroot/linux -C link-arg=--target=x86_64-unknown-linux-gnu -C link-arg=-stdlib=libc++ -C link-arg=-unwindlib=libunwind -C link-arg=-rtlib=compiler-rt -C link-arg=-fuse-ld=lld -C link-arg=-Wl,--build-id -C link-arg=-fPIE -C link-arg=-pie -C link-arg=-static-libstdc++ -C link-arg=-Wl,-rpath=$ORIGIN/ -C link-arg=-Bdynamic -C link-arg=host_x64/obj/sdk/lib/syslog/cpp/backend_host.logging_backend_host.cc.o -C link-arg=host_x64/obj/sdk/lib/syslog/cpp/backend_host.logging_backend_shared.cc.o -C link-arg=host_x64/obj/sdk/lib/syslog/cpp/cpp.log_settings.cc.o -C link-arg=host_x64/obj/sdk/lib/syslog/cpp/cpp.macros.cc.o -C link-arg=host_x64/obj/zircon/system/ulib/zx-panic-libc/libzx-panic-libc.a -C link-arg=host_x64/obj/third_party/rust_crates/compat/ring/libring-core.a -C link-arg=host_x64/obj/third_party/boringssl/libcrypto.a -C link-arg=host_x64/obj/third_party/boringssl/libssl.a -C link-arg=host_x64/obj/sdk/lib/fit-promise/libfit-promise.a -C link-arg=host_x64/obj/sdk/lib/fit/libfit.a -C link-arg=host_x64/obj/sdk/lib/stdcompat/libstdcompat.a\r\n\r\nquery stack during panic:\r\n#0 [mir_built] building MIR for `not_fuchsia::handle_controller_request::{closure#0}::{closure#0}`\r\n#1 [unsafety_check_result] unsafety-checking `not_fuchsia::handle_controller_request::{closure#0}::{closure#0}`\r\n#2 [unsafety_check_result] unsafety-checking `not_fuchsia::handle_controller_request::{closure#0}`\r\n#3 [unsafety_check_result] unsafety-checking `not_fuchsia::handle_controller_request`\r\n#4 [mir_const] processing MIR for `not_fuchsia::handle_controller_request`\r\n#5 [mir_promoted] processing `not_fuchsia::handle_controller_request`\r\n#6 [mir_borrowck] borrow-checking `not_fuchsia::handle_controller_request`\r\n#7 [type_of] computing type of `not_fuchsia::handle_controller_request::{opaque#0}`\r\n#8 [check_mod_item_types] checking item types in module `not_fuchsia`\r\n#9 [analysis] running analysis passes on this crate\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler/rustc_mir_build/src/build/matches/mod.rs:1853:25\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at rustlib/src/rust/library/std/src/panicking.rs:584:5\r\n   1: core::panicking::panic_fmt\r\n             at rustlib/src/rust/library/core/src/panicking.rs:142:14\r\n   2: core::panicking::panic\r\n             at rustlib/src/rust/library/core/src/panicking.rs:48:5\r\n   3: <rustc_mir_build::build::Builder>::bind_and_guard_matched_candidate\r\n   4: <rustc_mir_build::build::Builder>::bind_pattern\r\n   5: <rustc_mir_build::build::Builder>::place_into_pattern\r\n   6: <rustc_mir_build::build::Builder>::ast_block_stmts\r\n   7: <rustc_mir_build::build::Builder>::expr_into_dest\r\n   8: <rustc_mir_build::build::Builder>::in_scope::<<rustc_mir_build::build::Builder>::expr_into_dest::{closure#0}::{closure#0}, ()>\r\n   9: <rustc_mir_build::build::Builder>::expr_into_dest::{closure#0}\r\n  10: <rustc_mir_build::build::Builder>::expr_into_dest\r\n  11: <rustc_mir_build::build::Builder>::in_scope::<<rustc_mir_build::build::Builder>::expr_into_dest::{closure#0}::{closure#0}, ()>\r\n  12: <rustc_mir_build::build::Builder>::expr_into_dest::{closure#0}\r\n  13: <rustc_mir_build::build::Builder>::expr_into_dest\r\n  14: rustc_mir_build::build::construct_fn::<core::iter::adapters::chain::Chain<alloc::vec::into_iter::IntoIter<rustc_mir_build::build::ArgInfo>, core::iter::adapters::map::Map<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<rustc_hir::hir::Param>>, rustc_mir_build::build::mir_build::{closure#1}::{closure#1}>>>\r\n  15: <rustc_infer::infer::InferCtxtBuilder>::enter::<rustc_middle::mir::Body, rustc_mir_build::build::mir_build::{closure#1}>\r\n  16: rustc_mir_build::build::mir_built\r\n  17: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_middle::ty::WithOptConstParam<rustc_span::def_id::LocalDefId>, &rustc_data_structures::steal::Steal<rustc_middle::mir::Body>>>\r\n  18: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::mir_built, rustc_query_impl::plumbing::QueryCtxt>\r\n  19: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_built\r\n  20: rustc_mir_transform::check_unsafety::unsafety_check_result\r\n  21: <rustc_mir_transform::check_unsafety::provide::{closure#0} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId)>>::call_once\r\n  22: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, &rustc_middle::mir::query::UnsafetyCheckResult>>\r\n  23: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::unsafety_check_result, rustc_query_impl::plumbing::QueryCtxt>\r\n  24: <rustc_mir_transform::check_unsafety::UnsafetyChecker as rustc_middle::mir::visit::Visitor>::visit_rvalue\r\n  25: rustc_mir_transform::check_unsafety::unsafety_check_result\r\n  26: <rustc_mir_transform::check_unsafety::provide::{closure#0} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId)>>::call_once\r\n  27: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, &rustc_middle::mir::query::UnsafetyCheckResult>>\r\n  28: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::unsafety_check_result, rustc_query_impl::plumbing::QueryCtxt>\r\n  29: <rustc_mir_transform::check_unsafety::UnsafetyChecker as rustc_middle::mir::visit::Visitor>::visit_rvalue\r\n  30: rustc_mir_transform::check_unsafety::unsafety_check_result\r\n  31: <rustc_mir_transform::check_unsafety::provide::{closure#0} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId)>>::call_once\r\n  32: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, &rustc_middle::mir::query::UnsafetyCheckResult>>\r\n  33: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::unsafety_check_result, rustc_query_impl::plumbing::QueryCtxt>\r\n  34: rustc_mir_transform::mir_const\r\n  35: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_middle::ty::WithOptConstParam<rustc_span::def_id::LocalDefId>, &rustc_data_structures::steal::Steal<rustc_middle::mir::Body>>>\r\n  36: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::mir_const, rustc_query_impl::plumbing::QueryCtxt>\r\n  37: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::mir_const\r\n  38: rustc_mir_transform::mir_promoted\r\n  39: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::mir_promoted, rustc_query_impl::plumbing::QueryCtxt>\r\n  41: rustc_borrowck::mir_borrowck\r\n  42: <rustc_borrowck::provide::{closure#0} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId)>>::call_once\r\n  43: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, &rustc_middle::mir::query::BorrowCheckResult>>\r\n  44: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::mir_borrowck, rustc_query_impl::plumbing::QueryCtxt>\r\n  45: rustc_typeck::collect::type_of::find_opaque_ty_constraints_for_rpit\r\n  46: rustc_typeck::collect::type_of::type_of\r\n  47: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::DefId, rustc_middle::ty::Ty>>\r\n  48: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::type_of, rustc_query_impl::plumbing::QueryCtxt>\r\n  49: rustc_typeck::check::check::check_opaque\r\n  50: rustc_typeck::check::check::check_item_type\r\n  51: rustc_typeck::check::check::check_mod_item_types\r\n  52: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, ()>>\r\n  53: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::check_mod_item_types, rustc_query_impl::plumbing::QueryCtxt>\r\n  54: <rustc_middle::hir::map::Map>::for_each_module::<rustc_typeck::check_crate::{closure#6}::{closure#0}>\r\n  55: <rustc_session::session::Session>::time::<(), rustc_typeck::check_crate::{closure#6}>\r\n  56: rustc_typeck::check_crate\r\n  57: rustc_interface::passes::analysis\r\n  58: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorGuaranteed>>>\r\n  59: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  60: <rustc_interface::passes::QueryContext>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}::{closure#3}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n  61: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorGuaranteed>>\r\n  62: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  63: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>\r\n  64: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102160/timeline", "performed_via_github_app": null, "state_reason": null}