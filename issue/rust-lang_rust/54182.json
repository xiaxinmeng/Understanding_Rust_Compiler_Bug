{"url": "https://api.github.com/repos/rust-lang/rust/issues/54182", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/54182/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/54182/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/54182/events", "html_url": "https://github.com/rust-lang/rust/issues/54182", "id": 359892174, "node_id": "MDU6SXNzdWUzNTk4OTIxNzQ=", "number": 54182, "title": "Omitting return type of trait method to use () doesn't work with associated_type_defaults when default is ()", "user": {"login": "Boscop", "id": 535593, "node_id": "MDQ6VXNlcjUzNTU5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/535593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Boscop", "html_url": "https://github.com/Boscop", "followers_url": "https://api.github.com/users/Boscop/followers", "following_url": "https://api.github.com/users/Boscop/following{/other_user}", "gists_url": "https://api.github.com/users/Boscop/gists{/gist_id}", "starred_url": "https://api.github.com/users/Boscop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Boscop/subscriptions", "organizations_url": "https://api.github.com/users/Boscop/orgs", "repos_url": "https://api.github.com/users/Boscop/repos", "events_url": "https://api.github.com/users/Boscop/events{/privacy}", "received_events_url": "https://api.github.com/users/Boscop/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1525709585, "node_id": "MDU6TGFiZWwxNTI1NzA5NTg1", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-associated_type_defaults", "name": "F-associated_type_defaults", "color": "f9c0cc", "default": false, "description": "`#![feature(associated_type_defaults)]`"}], "state": "closed", "locked": false, "assignee": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-09-13T13:18:46Z", "updated_at": "2020-02-26T12:48:50Z", "closed_at": "2020-02-26T12:48:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Omitting the return type of a trait method to use `()` doesn't work with `associated_type_defaults` when the default is `()` (`type R = ();`):\r\n\r\nhttps://play.rust-lang.org/?gist=2b56fc463679d93f1c24a8af3495c776&version=nightly&mode=debug&edition=2015\r\n\r\n```\r\nerror[E0053]: method `overload` has an incompatible type for trait\r\n  --> src/main.rs:36:39\r\n   |\r\n30 |         fn overload(self) -> Self::R;\r\n   |                              ------- type in trait\r\n...\r\n36 |         fn overload(self) /*-> Self::R*/ {\r\n   |                                          ^ expected associated type, found ()\r\n   |\r\n   = note: expected type `fn((i32, bool)) -> <(i32, bool) as overload::Overload>::R`\r\n              found type `fn((i32, bool))`\r\n\r\nerror[E0053]: method `overload` has an incompatible type for trait\r\n  --> src/main.rs:53:39\r\n   |\r\n30 |         fn overload(self) -> Self::R;\r\n   |                              ------- type in trait\r\n...\r\n53 |         fn overload(self) /*-> Self::R*/ {\r\n   |                                          ^ expected associated type, found ()\r\n   |\r\n   = note: expected type `fn((i32, bool, f32)) -> <(i32, bool, f32) as overload::Overload>::R`\r\n              found type `fn((i32, bool, f32))`\r\n```\r\n\r\nEven when I uncomment both occurrences of `/*-> Self::R*/`, it doesn't work:\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:36:35\r\n   |\r\n36 |           fn overload(self) -> Self::R {\r\n   |  ______________________________________^\r\n37 | |             let (a, b) = self; // destructure args\r\n38 | |             println!(\"i32 and bool {:?}\", (a, b));\r\n39 | |         }\r\n   | |_________^ expected associated type, found ()\r\n   |\r\n   = note: expected type `<(i32, bool) as overload::Overload>::R`\r\n              found type `()`\r\n\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:53:35\r\n   |\r\n53 |           fn overload(self) -> Self::R {\r\n   |  ______________________________________^\r\n54 | |             let (a, b, c) = self; // destructure args\r\n55 | |             println!(\"i32 and bool and f32 {:?}\", (a, b, c));\r\n56 | |         }\r\n   | |_________^ expected associated type, found ()\r\n   |\r\n   = note: expected type `<(i32, bool, f32) as overload::Overload>::R`\r\n              found type `()`\r\n```\r\n\r\nI also have to uncomment both occurrences of `// type R = ();` to get it to compile.\r\nWhich defeats the purpose of using `associated_type_defaults` here :/\r\n\r\nI think this **should** work as intended though.\r\n\r\n---\r\n\r\nAnd when the default type is not `()` (e.g. `type R = i32;`), it should still work to only write `fn overload(self) -> Self::R {` **without** overriding `type R` in this `impl` (if one wants to use the default `R` here).", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/54182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/54182/timeline", "performed_via_github_app": null, "state_reason": "completed"}