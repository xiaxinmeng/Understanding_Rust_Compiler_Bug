{"url": "https://api.github.com/repos/rust-lang/rust/issues/34283", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/34283/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/34283/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/34283/events", "html_url": "https://github.com/rust-lang/rust/issues/34283", "id": 160347189, "node_id": "MDU6SXNzdWUxNjAzNDcxODk=", "number": 34283, "title": "Match expressions use O(n) stack space with n branches", "user": {"login": "evanw", "id": 406394, "node_id": "MDQ6VXNlcjQwNjM5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/406394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evanw", "html_url": "https://github.com/evanw", "followers_url": "https://api.github.com/users/evanw/followers", "following_url": "https://api.github.com/users/evanw/following{/other_user}", "gists_url": "https://api.github.com/users/evanw/gists{/gist_id}", "starred_url": "https://api.github.com/users/evanw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evanw/subscriptions", "organizations_url": "https://api.github.com/users/evanw/orgs", "repos_url": "https://api.github.com/users/evanw/repos", "events_url": "https://api.github.com/users/evanw/events{/privacy}", "received_events_url": "https://api.github.com/users/evanw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1049491442, "node_id": "MDU6TGFiZWwxMDQ5NDkxNDQy", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-heavy", "name": "I-heavy", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to binary size of generated code."}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}, {"id": 1976249039, "node_id": "MDU6TGFiZWwxOTc2MjQ5MDM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-patterns", "name": "A-patterns", "color": "f7e101", "default": false, "description": "Relating to patterns and pattern matching"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-06-15T06:25:51Z", "updated_at": "2021-05-17T09:36:11Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I ran into this problem while working on a parser (https://github.com/evanw/esbuild/tree/rust). Here's a reduced test case: https://gist.github.com/evanw/06e074a1d6d5c21e8d32e2c26de07714. It contains two recursive functions, `small` and `large`, that each contain a match expression. Every call prints out the amount of stack space used.\r\n\r\nIn debug:\r\n\r\n```\r\nsmall:\r\nstack space: 0.3kb\r\nstack space: 0.7kb\r\nstack space: 1.0kb\r\nstack space: 1.4kb\r\nstack space: 1.7kb\r\nstack space: 2.1kb\r\nstack space: 2.4kb\r\nstack space: 2.8kb\r\nstack space: 3.1kb\r\nstack space: 3.4kb\r\nstack space: 3.8kb\r\nlarge:\r\nstack space: 0.6kb\r\nstack space: 1.3kb\r\nstack space: 1.9kb\r\nstack space: 2.6kb\r\nstack space: 3.2kb\r\nstack space: 3.8kb\r\nstack space: 4.5kb\r\nstack space: 5.1kb\r\nstack space: 5.8kb\r\nstack space: 6.4kb\r\nstack space: 7.0kb\r\n```\r\n\r\nIn release:\r\n\r\n```\r\nsmall:\r\nstack space: 0.0kb\r\nstack space: 0.1kb\r\nstack space: 0.2kb\r\nstack space: 0.4kb\r\nstack space: 0.5kb\r\nstack space: 0.6kb\r\nstack space: 0.7kb\r\nstack space: 0.8kb\r\nstack space: 0.9kb\r\nstack space: 1.0kb\r\nstack space: 1.1kb\r\nlarge:\r\nstack space: 0.0kb\r\nstack space: 0.1kb\r\nstack space: 0.2kb\r\nstack space: 0.4kb\r\nstack space: 0.5kb\r\nstack space: 0.6kb\r\nstack space: 0.7kb\r\nstack space: 0.8kb\r\nstack space: 0.9kb\r\nstack space: 1.0kb\r\nstack space: 1.1kb\r\n```\r\n\r\nI would expect the amount of stack space used by a match expression to be proportional to the stack space of the largest branch, not to the total stack space of all branches. The problem isn't too bad here but it causes my actual parser to use huge amounts of stack space and to crash with a stack overflow when parsing virtually all normal-sized inputs.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/34283/reactions", "total_count": 28, "+1": 24, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 4}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/34283/timeline", "performed_via_github_app": null, "state_reason": null}