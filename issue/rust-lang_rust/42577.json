{"url": "https://api.github.com/repos/rust-lang/rust/issues/42577", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42577/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42577/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42577/events", "html_url": "https://github.com/rust-lang/rust/issues/42577", "id": 234973693, "node_id": "MDU6SXNzdWUyMzQ5NzM2OTM=", "number": 42577, "title": "Compiling code with dereferenced references causes panic", "user": {"login": "TheSchemm", "id": 119007, "node_id": "MDQ6VXNlcjExOTAwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/119007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheSchemm", "html_url": "https://github.com/TheSchemm", "followers_url": "https://api.github.com/users/TheSchemm/followers", "following_url": "https://api.github.com/users/TheSchemm/following{/other_user}", "gists_url": "https://api.github.com/users/TheSchemm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheSchemm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheSchemm/subscriptions", "organizations_url": "https://api.github.com/users/TheSchemm/orgs", "repos_url": "https://api.github.com/users/TheSchemm/repos", "events_url": "https://api.github.com/users/TheSchemm/events{/privacy}", "received_events_url": "https://api.github.com/users/TheSchemm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-10T02:20:24Z", "updated_at": "2018-09-24T18:37:20Z", "closed_at": "2018-09-24T18:37:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n\r\nCode (Redox OS ihdad code I have been working on):\r\n`\r\n\t\t\r\n\r\n\r\n\t\t// Pin enable\r\n\t\t// self.send_command(Self::node_command(0x00, 0xC, 0x707, 0x40));\r\n\t\t// let mut response: u32 = (self.read_response() & 0xFFFFFFFF) as u32;\r\n\r\n\t\tself.cmd.cmd12(0x00, 0xC, 0x707, 0x40);\r\n\t\t\r\n\r\n\t\t// EAPD enable\r\n\t\t// self.send_command(Self::node_command(0x00, 0xC, 0x70C, 2));\r\n\t\t// response = (self.read_response() & 0xFFFFFFFF) as u32;\r\n\r\n\r\n\t\tself.cmd.cmd12(0x00, 0xC, 0x70C, 2);\r\n\r\n\t\tself.set_stream_channel(0x3, 1, 0);\r\n\r\n\t\t// self.create_sound_buffers();\r\n\t\tself.update_sound_buffers();\r\n\r\n\r\n\t\tprint!(\"Supported Formats: {:08X}\\n\", self.get_supported_formats(0x1));\r\n\t\tprint!(\"Capabilities: {:08X}\\n\", self.get_capabilities(0x3));\r\n\r\n\t\tlet output = self.get_output_stream_descriptor(0).unwrap();\r\n\t\t\r\n\t\toutput.set_address(self.buff_desc_phys);\r\n\r\n\t\toutput.set_pcm_format(&super::SR_44_1, BitsPerSample::Bits16, 2);\r\n\t\toutput.set_cyclic_buffer_length(0x8000); // number of samples\r\n\t\toutput.set_stream_number(1);\r\n\t\toutput.set_last_valid_index(1);\r\n\t\toutput.set_interrupt_on_completion(true);\r\n\r\n\r\n\t\tself.set_power_state(0x3, 0); // Power state 0 is fully on\r\n\t\tself.set_converter_format(0x3, &super::SR_44_1, BitsPerSample::Bits16, 2);\r\n\t\t\r\n\r\n\t\r\n\t\t// self.send_command(Self::node_command(0x00, 0x3, 0xA00, 0));\r\n\t\t// response = (self.read_response() & 0xFFFFFFFF) as u32;\r\n\t\t\r\n\t\tself.cmd.cmd12(0x00, 0x3, 0xA00, 0);\r\n\r\n\t\t// Unmute and set gain for pin complex and DAC\r\n\t\tself.set_amplifier_gain_mute(0x3, true, true, true, true, 0, false, 0x7f);\r\n\t\tself.set_amplifier_gain_mute(0xC, true, true, true, true, 0, false, 0x7f);\r\n\r\n\r\n\t\t`\r\n\r\n\r\nBacktrace:\r\n`thread 'rustc' panicked at 'failed to emit error: Resource temporarily unavailable (os error 11)', /checkout/src/librustc_errors/emitter.rs:1141\r\nstack backtrace:\r\n   0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace\r\n             at /checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:60\r\n             at /checkout/src/libstd/panicking.rs:355\r\n   3: std::panicking::default_hook\r\n             at /checkout/src/libstd/panicking.rs:365\r\n   4: std::panicking::rust_panic_with_hook\r\n             at /checkout/src/libstd/panicking.rs:549\r\n   5: std::panicking::begin_panic\r\n             at /checkout/src/libstd/panicking.rs:511\r\n   6: std::panicking::begin_panic_fmt\r\n             at /checkout/src/libstd/panicking.rs:495\r\n   7: <rustc_errors::emitter::EmitterWriter as rustc_errors::emitter::Emitter>::emit\r\n   8: rustc_errors::diagnostic_builder::DiagnosticBuilder::emit\r\n   9: <rustc::lint::context::LateContext<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_id\r\n  10: rustc::hir::intravisit::walk_struct_field\r\n  11: rustc::lint::context::LintContext::with_lint_attrs\r\n  12: <rustc::lint::context::LateContext<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_variant_data\r\n  13: rustc::hir::intravisit::walk_item\r\n  14: rustc::lint::context::LintContext::with_lint_attrs\r\n  15: <rustc::lint::context::LateContext<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_mod\r\n  16: rustc::hir::intravisit::walk_item\r\n  17: rustc::lint::context::LintContext::with_lint_attrs\r\n  18: <rustc::lint::context::LateContext<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_mod\r\n  19: rustc::hir::intravisit::walk_item\r\n  20: rustc::lint::context::LintContext::with_lint_attrs\r\n  21: <rustc::lint::context::LateContext<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_mod\r\n  22: rustc::lint::context::check_crate\r\n  23: rustc_driver::driver::phase_3_run_analysis_passes::{{closure}}\r\n  24: rustc_driver::driver::phase_3_run_analysis_passes\r\n  25: rustc_driver::driver::compile_input\r\n  26: rustc_driver::run_compiler\r\n  27: std::panicking::try::do_call\r\n  28: __rust_maybe_catch_panic\r\n             at /checkout/src/libpanic_unwind/lib.rs:98\r\n  29: <F as alloc::boxed::FnBox<A>>::call_box\r\n  30: std::sys::imp::thread::Thread::new::thread_start\r\n             at /checkout/src/liballoc/boxed.rs:658\r\n             at /checkout/src/libstd/sys_common/thread.rs:21\r\n             at /checkout/src/libstd/sys/unix/thread.rs:84\r\n  31: start_thread\r\n  32: __clone\r\n`\r\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42577/timeline", "performed_via_github_app": null, "state_reason": "completed"}