{"url": "https://api.github.com/repos/rust-lang/rust/issues/96219", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96219/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96219/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96219/events", "html_url": "https://github.com/rust-lang/rust/issues/96219", "id": 1208664734, "node_id": "I_kwDOAAsO6M5ICsKe", "number": 96219, "title": "ICE: attempted to read from stolen value: rustc_middle::mir::Body", "user": {"login": "sashinexists", "id": 30230215, "node_id": "MDQ6VXNlcjMwMjMwMjE1", "avatar_url": "https://avatars.githubusercontent.com/u/30230215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sashinexists", "html_url": "https://github.com/sashinexists", "followers_url": "https://api.github.com/users/sashinexists/followers", "following_url": "https://api.github.com/users/sashinexists/following{/other_user}", "gists_url": "https://api.github.com/users/sashinexists/gists{/gist_id}", "starred_url": "https://api.github.com/users/sashinexists/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sashinexists/subscriptions", "organizations_url": "https://api.github.com/users/sashinexists/orgs", "repos_url": "https://api.github.com/users/sashinexists/repos", "events_url": "https://api.github.com/users/sashinexists/events{/privacy}", "received_events_url": "https://api.github.com/users/sashinexists/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-04-19T17:44:17Z", "updated_at": "2022-04-27T21:12:40Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\nThis look a little complicated for me right now. I hope this much helps, please disregard it if it's not useful.\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nIt is for this project, to run it locally you need twitter API credentials in an .env file\r\nhttps://github.com/sashinexists/better-twitter-archiver\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\n<version>\r\n```\r\n\r\n### Error output\r\n\r\n```\r\ncargo check\r\n    Checking better-twitter-archiver v0.1.0 (/var/home/sashin/\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8/projects/better-twitter-archiver)\r\nthread 'rustc' panicked at 'attempted to read from stolen value: rustc_middle::mir::Body', compiler/rustc_mir_transform/src/check_unsafety.rs:435:36\r\nstack backtrace:\r\n   0:     0x7f3cd116c86d - std::backtrace_rs::backtrace::libunwind::trace::hee598835bc88d35b\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7f3cd116c86d - std::backtrace_rs::backtrace::trace_unsynchronized::h9cdc730ba5cf5d72\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f3cd116c86d - std::sys_common::backtrace::_print_fmt::h75aeaf7ed30e43fa\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/std/src/sys_common/backtrace.rs:66:5\r\n   3:     0x7f3cd116c86d - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h606862f787600875\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/std/src/sys_common/backtrace.rs:45:22\r\n   4:     0x7f3cd11cc4ec - core::fmt::write::he803f0f418caf762\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/fmt/mod.rs:1190:17\r\n   5:     0x7f3cd115ca98 - std::io::Write::write_fmt::h70bc45872f37e7bb\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/std/src/io/mod.rs:1657:15\r\n   6:     0x7f3cd1170847 - std::sys_common::backtrace::_print::h64d038cf8ac3e13e\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/std/src/sys_common/backtrace.rs:48:5\r\n   7:     0x7f3cd1170847 - std::sys_common::backtrace::print::h359300b4a7fccf65\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/std/src/sys_common/backtrace.rs:35:9\r\n   8:     0x7f3cd1170847 - std::panicking::default_hook::{{closure}}::hf51be35e2f510149\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/std/src/panicking.rs:295:22\r\n   9:     0x7f3cd1170510 - std::panicking::default_hook::h03ca0f22e1d2d25e\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/std/src/panicking.rs:314:9\r\n  10:     0x7f3cd18fc2c1 - rustc_driver[6eeb127b85fe99ac]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n  11:     0x7f3cb6475393 - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::h1d9293c579db6a4c\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/alloc/src/boxed.rs:1867:9\r\n  12:     0x7f3cb6475b0c - proc_macro::bridge::client::<impl proc_macro::bridge::Bridge>::enter::{{closure}}::{{closure}}::h146869cb2435e715\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/proc_macro/src/bridge/client.rs:319:21\r\n  13:     0x7f3cb64696c0 - std::panicking::update_hook::{{closure}}::h3214b229fa989889\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/std/src/panicking.rs:258:41\r\n  14:     0x7f3cd1171124 - std::panicking::rust_panic_with_hook::h3b7380e99b825b63\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/std/src/panicking.rs:702:17\r\n  15:     0x7f3cd1170dd7 - std::panicking::begin_panic_handler::{{closure}}::h8e849d0710154ce0\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/std/src/panicking.rs:588:13\r\n  16:     0x7f3cd116cd34 - std::sys_common::backtrace::__rust_end_short_backtrace::hedcdaddbd4c46cc5\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/std/src/sys_common/backtrace.rs:138:18\r\n  17:     0x7f3cd1170ae9 - rust_begin_unwind\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/std/src/panicking.rs:584:5\r\n  18:     0x7f3cd1139863 - core::panicking::panic_fmt::he1bbc7336d49a357\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/panicking.rs:143:14\r\n  19:     0x7f3cd2c4a9b3 - rustc_mir_transform[9e737481de61c19e]::check_unsafety::unsafety_check_result\r\n  20:     0x7f3cd2c478b7 - <rustc_mir_transform[9e737481de61c19e]::check_unsafety::provide::{closure#0} as core[2734bb1f7d9ec6a5]::ops::function::FnOnce<(rustc_middle[c145adf1c4567bf]::ty::context::TyCtxt, rustc_span[4b4bb4534443c42f]::def_id::LocalDefId)>>::call_once\r\n  21:     0x7f3cd232960b - <rustc_middle[c145adf1c4567bf]::dep_graph::dep_node::DepKind as rustc_query_system[cf3d2502706fe991]::dep_graph::DepKind>::with_deps::<rustc_query_system[cf3d2502706fe991]::query::plumbing::try_load_from_disk_and_cache_in_memory<rustc_query_impl[8218de0923c6cd45]::plumbing::QueryCtxt, rustc_span[4b4bb4534443c42f]::def_id::LocalDefId, &rustc_middle[c145adf1c4567bf]::mir::query::UnsafetyCheckResult>::{closure#1}, &rustc_middle[c145adf1c4567bf]::mir::query::UnsafetyCheckResult>\r\n  22:     0x7f3cd3c2aa42 - rustc_query_system[cf3d2502706fe991]::query::plumbing::try_load_from_disk_and_cache_in_memory::<rustc_query_impl[8218de0923c6cd45]::plumbing::QueryCtxt, rustc_span[4b4bb4534443c42f]::def_id::LocalDefId, &rustc_middle[c145adf1c4567bf]::mir::query::UnsafetyCheckResult>\r\n  23:     0x7f3cd31b6a71 - rustc_query_system[cf3d2502706fe991]::query::plumbing::try_execute_query::<rustc_query_impl[8218de0923c6cd45]::plumbing::QueryCtxt, rustc_query_system[cf3d2502706fe991]::query::caches::DefaultCache<rustc_span[4b4bb4534443c42f]::def_id::LocalDefId, &rustc_middle[c145adf1c4567bf]::mir::query::UnsafetyCheckResult>>\r\n  24:     0x7f3cd32131d1 - <rustc_query_impl[8218de0923c6cd45]::Queries as rustc_middle[c145adf1c4567bf]::ty::query::QueryEngine>::unsafety_check_result\r\n  25:     0x7f3cd2c526b7 - rustc_mir_transform[9e737481de61c19e]::check_unsafety::check_unsafety\r\n  26:     0x7f3cd2b368c0 - <rustc_session[95a8f1c94d15e5dc]::session::Session>::time::<(), rustc_interface[afc566840a941718]::passes::analysis::{closure#3}>\r\n  27:     0x7f3cd377ef2c - rustc_interface[afc566840a941718]::passes::analysis\r\n  28:     0x7f3cd3cd6b62 - <rustc_query_system[cf3d2502706fe991]::dep_graph::graph::DepGraph<rustc_middle[c145adf1c4567bf]::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle[c145adf1c4567bf]::ty::context::TyCtxt, (), core[2734bb1f7d9ec6a5]::result::Result<(), rustc_errors[bd800fb2a5e0b9f5]::ErrorReported>>\r\n  29:     0x7f3cd3d29303 - rustc_data_structures[762b64c8eff0c924]::stack::ensure_sufficient_stack::<(core[2734bb1f7d9ec6a5]::result::Result<(), rustc_errors[bd800fb2a5e0b9f5]::ErrorReported>, rustc_query_system[cf3d2502706fe991]::dep_graph::graph::DepNodeIndex), rustc_query_system[cf3d2502706fe991]::query::plumbing::execute_job<rustc_query_impl[8218de0923c6cd45]::plumbing::QueryCtxt, (), core[2734bb1f7d9ec6a5]::result::Result<(), rustc_errors[bd800fb2a5e0b9f5]::ErrorReported>>::{closure#3}>\r\n  30:     0x7f3cd3c18bae - rustc_query_system[cf3d2502706fe991]::query::plumbing::try_execute_query::<rustc_query_impl[8218de0923c6cd45]::plumbing::QueryCtxt, rustc_query_system[cf3d2502706fe991]::query::caches::DefaultCache<(), core[2734bb1f7d9ec6a5]::result::Result<(), rustc_errors[bd800fb2a5e0b9f5]::ErrorReported>>>\r\n  31:     0x7f3cd3c57c05 - rustc_query_system[cf3d2502706fe991]::query::plumbing::get_query::<rustc_query_impl[8218de0923c6cd45]::queries::analysis, rustc_query_impl[8218de0923c6cd45]::plumbing::QueryCtxt>\r\n  32:     0x7f3cd375d608 - <rustc_interface[afc566840a941718]::passes::QueryContext>::enter::<rustc_driver[6eeb127b85fe99ac]::run_compiler::{closure#1}::{closure#2}::{closure#3}, core[2734bb1f7d9ec6a5]::result::Result<(), rustc_errors[bd800fb2a5e0b9f5]::ErrorReported>>\r\n  33:     0x7f3cd374bac5 - rustc_interface[afc566840a941718]::interface::create_compiler_and_run::<core[2734bb1f7d9ec6a5]::result::Result<(), rustc_errors[bd800fb2a5e0b9f5]::ErrorReported>, rustc_driver[6eeb127b85fe99ac]::run_compiler::{closure#1}>\r\n  34:     0x7f3cd3731134 - std[cd3cf6af28dff6de]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[afc566840a941718]::util::run_in_thread_pool_with_globals<rustc_interface[afc566840a941718]::interface::run_compiler<core[2734bb1f7d9ec6a5]::result::Result<(), rustc_errors[bd800fb2a5e0b9f5]::ErrorReported>, rustc_driver[6eeb127b85fe99ac]::run_compiler::{closure#1}>::{closure#0}, core[2734bb1f7d9ec6a5]::result::Result<(), rustc_errors[bd800fb2a5e0b9f5]::ErrorReported>>::{closure#0}, core[2734bb1f7d9ec6a5]::result::Result<(), rustc_errors[bd800fb2a5e0b9f5]::ErrorReported>>\r\n  35:     0x7f3cd37643e9 - <<std[cd3cf6af28dff6de]::thread::Builder>::spawn_unchecked_<rustc_interface[afc566840a941718]::util::run_in_thread_pool_with_globals<rustc_interface[afc566840a941718]::interface::run_compiler<core[2734bb1f7d9ec6a5]::result::Result<(), rustc_errors[bd800fb2a5e0b9f5]::ErrorReported>, rustc_driver[6eeb127b85fe99ac]::run_compiler::{closure#1}>::{closure#0}, core[2734bb1f7d9ec6a5]::result::Result<(), rustc_errors[bd800fb2a5e0b9f5]::ErrorReported>>::{closure#0}, core[2734bb1f7d9ec6a5]::result::Result<(), rustc_errors[bd800fb2a5e0b9f5]::ErrorReported>>::{closure#1} as core[2734bb1f7d9ec6a5]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  36:     0x7f3cd117cd03 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hf70ac038171e3e1a\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/alloc/src/boxed.rs:1853:9\r\n  37:     0x7f3cd117cd03 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::he6690128792365ad\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/alloc/src/boxed.rs:1853:9\r\n  38:     0x7f3cd117cd03 - std::sys::unix::thread::Thread::new::thread_start::ha07928d93d5a5ec9\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/std/src/sys/unix/thread.rs:108:17\r\n  39:     0x7f3cd0f40b1a - start_thread\r\n  40:     0x7f3cd0fc5650 - __clone3\r\n  41:                0x0 - <unknown>\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.60.0 (7737e0b5c 2022-04-04) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [unsafety_check_result] unsafety-checking `app::api::get_tweets_from_user`\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: could not compile `better-twitter-archiver`\r\n\u276f cargo check\r\n    Checking better-twitter-archiver v0.1.0 (/var/home/sashin/\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8/projects/better-twitter-archiver)\r\nthread 'rustc' panicked at 'attempted to read from stolen value: rustc_middle::mir::Body', compiler/rustc_mir_transform/src/check_unsafety.rs:435:36\r\nstack backtrace:\r\n   0:     0x7faddfde186d - std::backtrace_rs::backtrace::libunwind::trace::hee598835bc88d35b\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7faddfde186d - std::backtrace_rs::backtrace::trace_unsynchronized::h9cdc730ba5cf5d72\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7faddfde186d - std::sys_common::backtrace::_print_fmt::h75aeaf7ed30e43fa\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/std/src/sys_common/backtrace.rs:66:5\r\n   3:     0x7faddfde186d - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h606862f787600875\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/std/src/sys_common/backtrace.rs:45:22\r\n   4:     0x7faddfe414ec - core::fmt::write::he803f0f418caf762\r\n                               at /rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/fmt/mod.rs:1190:17\r\n   5:     0x7faddfdd1a98 - std::io::Write::write_fmt::h70bc45872f37e7bb\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n\u276f RUST_BACKTRACE=1 cargo build\r\n   Compiling better-twitter-archiver v0.1.0 (/var/home/sashin/\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8/projects/better-twitter-archiver)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 4.32s\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96219/timeline", "performed_via_github_app": null, "state_reason": null}