{"url": "https://api.github.com/repos/rust-lang/rust/issues/73900", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73900/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73900/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73900/events", "html_url": "https://github.com/rust-lang/rust/issues/73900", "id": 648441580, "node_id": "MDU6SXNzdWU2NDg0NDE1ODA=", "number": 73900, "title": "Comprison of `TypeId`s in const context", "user": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 268744493, "node_id": "MDU6TGFiZWwyNjg3NDQ0OTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-fn", "name": "A-const-fn", "color": "f7e101", "default": false, "description": "Area: const fn foo(..) {..}. Pure functions which can be applied at compile time."}, {"id": 762300676, "node_id": "MDU6TGFiZWw3NjIzMDA2NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-blocked", "name": "S-blocked", "color": "d3dddd", "default": false, "description": "Status: marked as blocked \u274c on something else such as an RFC or other implementation work."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-06-30T19:36:13Z", "updated_at": "2022-10-19T04:41:49Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Is there any way to compare 2 `TypeId`s in `const` context? (It's possible to _create_ them in `const` context, and it's even [soon to be stabilized](https://github.com/rust-lang/rust/pull/72488))\r\n\r\nWhat I want is a static check for type (un)equality without `auto trait`s: \r\n```rust\r\n// will fail with index out of bounds if T == U\r\nconst _: () = [()][(TypeId::of::<T>() == TypeId::of::<U>()) as usize];\r\n```\r\n(this exact code currently fails to compile with \"calls in constants are limited to constant functions, tuple structs and tuple variants\" error, because `==` isn't `const`)\r\n\r\nMaybe it's a good idea to add API like the following to TypeId?\r\n\r\n```rust\r\nimpl TypeId {\r\n    const fn eq(&self, rhs: &Self) -> bool {\r\n        self.t == rhs.t\r\n    }\r\n}\r\n```\r\n\r\nI could work on this, though I haven't seen similar apps in std, so I wanted to ask about it before doing anything.", "closed_by": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73900/timeline", "performed_via_github_app": null, "state_reason": null}