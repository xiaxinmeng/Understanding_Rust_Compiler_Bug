{"url": "https://api.github.com/repos/rust-lang/rust/issues/3736", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/3736/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/3736/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/3736/events", "html_url": "https://github.com/rust-lang/rust/issues/3736", "id": 7533538, "node_id": "MDU6SXNzdWU3NTMzNTM4", "number": 3736, "title": "Support richer tuple unpacking", "user": {"login": "tav", "id": 30302, "node_id": "MDQ6VXNlcjMwMzAy", "avatar_url": "https://avatars.githubusercontent.com/u/30302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tav", "html_url": "https://github.com/tav", "followers_url": "https://api.github.com/users/tav/followers", "following_url": "https://api.github.com/users/tav/following{/other_user}", "gists_url": "https://api.github.com/users/tav/gists{/gist_id}", "starred_url": "https://api.github.com/users/tav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tav/subscriptions", "organizations_url": "https://api.github.com/users/tav/orgs", "repos_url": "https://api.github.com/users/tav/repos", "events_url": "https://api.github.com/users/tav/events{/privacy}", "received_events_url": "https://api.github.com/users/tav/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-10-12T03:56:23Z", "updated_at": "2012-10-12T12:35:58Z", "closed_at": "2012-10-12T12:35:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not sure if it's less efficient to do:\n\n``` rust\nlet mut (a, b, c, d) = (self.x[0], self.x[1], self.x[2], self.x[3]);\n```\n\nThan:\n\n``` rust\nlet mut a = self.x[0];\nlet mut b = self.x[1];\nlet mut c = self.x[2];\nlet mut d = self.x[3];\n```\n\nBut I find the former a lot easier to type in some cases. It'd be nice to know if destructuring of this kind is a valid use of tuple unpacking in Rust.\n\nIt'd also be nice if the following was legal:\n\n``` rust\nlet (self.x[0], self.x[1], self.x[2], self.x[3]) = (a, b, c, d);\n```\n\nRight now the above dies with the following error:\n\n```\nexpected `,` but found `.`\n```\n", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/3736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/3736/timeline", "performed_via_github_app": null, "state_reason": "completed"}