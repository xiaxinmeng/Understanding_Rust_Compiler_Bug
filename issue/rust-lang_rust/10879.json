{"url": "https://api.github.com/repos/rust-lang/rust/issues/10879", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/10879/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/10879/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/10879/events", "html_url": "https://github.com/rust-lang/rust/issues/10879", "id": 23949605, "node_id": "MDU6SXNzdWUyMzk0OTYwNQ==", "number": 10879, "title": "RFC: Generalize Freeze, etc. into custom-defined does-not-contain traits", "user": {"login": "glaebhoerl", "id": 1216629, "node_id": "MDQ6VXNlcjEyMTY2Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1216629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glaebhoerl", "html_url": "https://github.com/glaebhoerl", "followers_url": "https://api.github.com/users/glaebhoerl/followers", "following_url": "https://api.github.com/users/glaebhoerl/following{/other_user}", "gists_url": "https://api.github.com/users/glaebhoerl/gists{/gist_id}", "starred_url": "https://api.github.com/users/glaebhoerl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glaebhoerl/subscriptions", "organizations_url": "https://api.github.com/users/glaebhoerl/orgs", "repos_url": "https://api.github.com/users/glaebhoerl/repos", "events_url": "https://api.github.com/users/glaebhoerl/events{/privacy}", "received_events_url": "https://api.github.com/users/glaebhoerl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-12-09T09:44:41Z", "updated_at": "2014-03-13T15:59:34Z", "closed_at": "2014-03-13T15:59:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Rust currently has a few built-in traits which all basically mean \"does not contain Foo\". `Freeze`: no `&mut`, `Cell`, or `RefCell`. `Send`: no managed or borrowed pointers. `'static`: no non-`'static` borrowed pointers. Combined with the proposal to use marker types in #10834, perhaps this could be generalized to user-defined does-not-contain traits, with compiler support.\n\nThis would be useful for, for example, preventing cycles in `Rc`, in the spirit of #10837 but at a semantic rather than syntactic level. You could write something like:\n\n```\npub struct ReferenceCounted;\n\n#[does_not_contain(ReferenceCounted)]\npub trait NoRc { }; // an imaginary syntax, others possible\n\npub struct Rc<T> {\n    priv val: *mut RcBox<T>,\n    priv marker: ReferenceCounted\n}\n\nimpl<T: NoRc> Rc<T> {\n    pub fn new(val: T) -> Rc<T> { ... }\n}\n```\n\nThis would solve the problem of existentially quantified types the same way as the built-in traits: any existentially quantified type could only be passed to this `new()` if it explicitly had a `NoRc` bound (e.g. `~ToStr:NoRc`). This might still be too high a burden, so there would probably be other constructors as well, as now, including a `Freeze`-based and an unconstrained one, but this is still finer-grained, at least, than the current situation.\n\nThis might also help with #10869, and with another crazy idea I've been thinking about that I'm not ready to post yet.\n", "closed_by": {"login": "glaebhoerl", "id": 1216629, "node_id": "MDQ6VXNlcjEyMTY2Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1216629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glaebhoerl", "html_url": "https://github.com/glaebhoerl", "followers_url": "https://api.github.com/users/glaebhoerl/followers", "following_url": "https://api.github.com/users/glaebhoerl/following{/other_user}", "gists_url": "https://api.github.com/users/glaebhoerl/gists{/gist_id}", "starred_url": "https://api.github.com/users/glaebhoerl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glaebhoerl/subscriptions", "organizations_url": "https://api.github.com/users/glaebhoerl/orgs", "repos_url": "https://api.github.com/users/glaebhoerl/repos", "events_url": "https://api.github.com/users/glaebhoerl/events{/privacy}", "received_events_url": "https://api.github.com/users/glaebhoerl/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/10879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/10879/timeline", "performed_via_github_app": null, "state_reason": "completed"}