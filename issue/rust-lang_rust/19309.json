{"url": "https://api.github.com/repos/rust-lang/rust/issues/19309", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/19309/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/19309/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/19309/events", "html_url": "https://github.com/rust-lang/rust/issues/19309", "id": 50049584, "node_id": "MDU6SXNzdWU1MDA0OTU4NA==", "number": 19309, "title": "Syntax Extension and Traits", "user": {"login": "3Hren", "id": 969900, "node_id": "MDQ6VXNlcjk2OTkwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/969900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/3Hren", "html_url": "https://github.com/3Hren", "followers_url": "https://api.github.com/users/3Hren/followers", "following_url": "https://api.github.com/users/3Hren/following{/other_user}", "gists_url": "https://api.github.com/users/3Hren/gists{/gist_id}", "starred_url": "https://api.github.com/users/3Hren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/3Hren/subscriptions", "organizations_url": "https://api.github.com/users/3Hren/orgs", "repos_url": "https://api.github.com/users/3Hren/repos", "events_url": "https://api.github.com/users/3Hren/events{/privacy}", "received_events_url": "https://api.github.com/users/3Hren/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-25T16:24:32Z", "updated_at": "2014-11-25T18:56:44Z", "closed_at": "2014-11-25T18:56:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi guys! I've got stuck, when tried to implement traits programmically using syntax extensions. I've asked in IRC, but noone answered.\n\nI wrote minimal example here. Hope someone could help (or point to the right direction).\n\n``` rust\n// Just some methods collection I want to implement programmically.\ntrait TraitToHack {\n    fn implement_me(&self) -> int; // Say, I'd like to implement this method programmically to return 42.\n}\n\n// I create dummy struct and wrap it with special attribute.\n#[AttributeToHack(TraitToHack)]\nstruct StructToHack;\n\n// I register syntax extension based on Decorator. Its signature is something like this:\n// fn expand(cx: &mut ext::base::ExtCtxt, span: codemap::Span, mitem: &ast::MetaItem, item: &ast::Item, push: |P<ast::Item>|) { .. }\n// This is where I got stuck :(\n// The questions are: how can I get method names and how to implement them using syntax extension?\nfn main() {\n    let hack = StructToHack;\n    hack.implement_me(); // Must return 42.\n}\n```\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/19309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/19309/timeline", "performed_via_github_app": null, "state_reason": "completed"}