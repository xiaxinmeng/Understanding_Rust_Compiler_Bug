{"url": "https://api.github.com/repos/rust-lang/rust/issues/88760", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88760/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88760/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88760/events", "html_url": "https://github.com/rust-lang/rust/issues/88760", "id": 991501789, "node_id": "MDU6SXNzdWU5OTE1MDE3ODk=", "number": 88760, "title": "Incremental ICE in unsafety_check_result after a crash", "user": {"login": "tux3", "id": 5155966, "node_id": "MDQ6VXNlcjUxNTU5NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5155966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tux3", "html_url": "https://github.com/tux3", "followers_url": "https://api.github.com/users/tux3/followers", "following_url": "https://api.github.com/users/tux3/following{/other_user}", "gists_url": "https://api.github.com/users/tux3/gists{/gist_id}", "starred_url": "https://api.github.com/users/tux3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tux3/subscriptions", "organizations_url": "https://api.github.com/users/tux3/orgs", "repos_url": "https://api.github.com/users/tux3/repos", "events_url": "https://api.github.com/users/tux3/events{/privacy}", "received_events_url": "https://api.github.com/users/tux3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-09-08T20:27:31Z", "updated_at": "2022-07-18T00:09:11Z", "closed_at": "2022-07-18T00:09:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nI was running a fresh `cargo build` (full build) when my computer froze (I have one of the bad 1st gen Zen chips, I still get crashes a few times a year).  \r\nAfter a restart, I get a rustc ICE every time I call `cargo build`.\r\n\r\n### Code\r\n\r\nThe source code by itself does not repro the ICE, so I don't have any code to show.  My `target/debug` folder is 1.3GiB.\r\n(I'd be happy to upload the target folder, though I'm not sure if that still counts as a \"MVCE\"!)\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.57.0-nightly (1698e3cac 2021-09-06)\r\nbinary: rustc\r\ncommit-hash: 1698e3cac54aa8691d4e9e207567672af8231cb6\r\ncommit-date: 2021-09-06\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.57.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\nIf this matters, the filesystem is `/dev/nvme0n1p7 on / type ext4 (rw,relatime,lazytime)`.\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'attempted to read from stolen value', /rustc/1698e3cac54aa8691d4e9e207567672af8231cb6/compiler/rustc_data_structures/src/steal.rs:37:21\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0-nightly (1698e3cac 2021-09-06) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C prefer-dynamic -C embed-bitcode=no -C debuginfo=2 -C linker=clang -C incremental -C link-arg=-fuse-ld=/usr/local/bin/mold --crate-type proc-macro\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [unsafety_check_result] unsafety-checking `check_attr_args`\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'attempted to read from stolen value', /rustc/1698e3cac54aa8691d4e9e207567672af8231cb6/compiler/rustc_data_structures/src/steal.rs:37:21\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: rustc_mir::transform::check_unsafety::unsafety_check_result\r\n   2: core::ops::function::FnOnce::call_once\r\n   3: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n   4: rustc_query_system::query::plumbing::load_from_disk_and_cache_in_memory\r\n   5: rustc_data_structures::stack::ensure_sufficient_stack\r\n   6: rustc_query_system::query::plumbing::get_query_impl\r\n   7: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::unsafety_check_result\r\n   8: rustc_mir::transform::check_unsafety::check_unsafety\r\n   9: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  10: rustc_interface::passes::analysis\r\n  11: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  12: rustc_data_structures::stack::ensure_sufficient_stack\r\n  13: rustc_query_system::query::plumbing::force_query_with_job\r\n  14: rustc_query_system::query::plumbing::get_query_impl\r\n  15: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  16: rustc_interface::passes::QueryContext::enter\r\n  17: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  18: rustc_span::with_source_map\r\n  19: scoped_tls::ScopedKey<T>::set\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nI suspect this will not be a very common bug to hit, so I completely understand if crash proofing incremental data is *way* out of scope for rustc =)  \r\nThank you!", "closed_by": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88760/timeline", "performed_via_github_app": null, "state_reason": "completed"}