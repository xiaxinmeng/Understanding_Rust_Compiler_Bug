{"url": "https://api.github.com/repos/rust-lang/rust/issues/79868", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79868/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79868/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79868/events", "html_url": "https://github.com/rust-lang/rust/issues/79868", "id": 760711929, "node_id": "MDU6SXNzdWU3NjA3MTE5Mjk=", "number": 79868, "title": "Stdlib docs: Add note about getting TypeId of Box<dyn Any> ?", "user": {"login": "sharnoff", "id": 29154784, "node_id": "MDQ6VXNlcjI5MTU0Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/29154784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sharnoff", "html_url": "https://github.com/sharnoff", "followers_url": "https://api.github.com/users/sharnoff/followers", "following_url": "https://api.github.com/users/sharnoff/following{/other_user}", "gists_url": "https://api.github.com/users/sharnoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/sharnoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sharnoff/subscriptions", "organizations_url": "https://api.github.com/users/sharnoff/orgs", "repos_url": "https://api.github.com/users/sharnoff/repos", "events_url": "https://api.github.com/users/sharnoff/events{/privacy}", "received_events_url": "https://api.github.com/users/sharnoff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 125141240, "node_id": "MDU6TGFiZWwxMjUxNDEyNDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-dst", "name": "A-dst", "color": "f7e101", "default": false, "description": "Area: Dynamically Sized Types"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "closed", "locked": false, "assignee": {"login": "sharnoff", "id": 29154784, "node_id": "MDQ6VXNlcjI5MTU0Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/29154784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sharnoff", "html_url": "https://github.com/sharnoff", "followers_url": "https://api.github.com/users/sharnoff/followers", "following_url": "https://api.github.com/users/sharnoff/following{/other_user}", "gists_url": "https://api.github.com/users/sharnoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/sharnoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sharnoff/subscriptions", "organizations_url": "https://api.github.com/users/sharnoff/orgs", "repos_url": "https://api.github.com/users/sharnoff/repos", "events_url": "https://api.github.com/users/sharnoff/events{/privacy}", "received_events_url": "https://api.github.com/users/sharnoff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sharnoff", "id": 29154784, "node_id": "MDQ6VXNlcjI5MTU0Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/29154784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sharnoff", "html_url": "https://github.com/sharnoff", "followers_url": "https://api.github.com/users/sharnoff/followers", "following_url": "https://api.github.com/users/sharnoff/following{/other_user}", "gists_url": "https://api.github.com/users/sharnoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/sharnoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sharnoff/subscriptions", "organizations_url": "https://api.github.com/users/sharnoff/orgs", "repos_url": "https://api.github.com/users/sharnoff/repos", "events_url": "https://api.github.com/users/sharnoff/events{/privacy}", "received_events_url": "https://api.github.com/users/sharnoff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-12-09T22:13:20Z", "updated_at": "2021-01-02T06:58:56Z", "closed_at": "2021-01-02T06:58:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello! There's an issue that I've run into a couple times using `std::any::Any`, and I figured it would be nice to have a small section in the documentation for the module about this particular behavior.\r\n\r\nEssentially, when we have a value of type `Box<dyn Any>`, and we'd like to check the type id of the underlying value (i.e. not the type id of `Box<dyn Any>`), we can't just use `value.type_id()`. The nicest solution I've found is to use `(&*value).type_id()`, so that we're correctly calling the method on a value of type `&dyn Any`.\r\n\r\nIn theory, this applies to all other smart pointers as well; the work I'm doing just happens to only have boxes. The distinction here becomes painful with assertions: it's very easy to write `assert_eq!(boxed.type_id(), expected_type_id)` and get panics, without immediately realizing that the problem is the assertion itself.\r\n\r\nI think it'd be nice to mention this particular quirk in the module documentation for `std::any`. I'm not sure what the general opinion on that would be, though - I wanted to get some feedback before submitting a PR for it.\r\n\r\n### Example:\r\n\r\n```rust\r\nuse std::any::{Any, TypeId};\r\n\r\nlet boxed: Box<dyn Any> = Box::new(0_i32);\r\n\r\nlet boxed_id = boxed.type_id();\r\nlet actual_id = (&*boxed).type_id();\r\n\r\n// Both of these assertions pass\r\nassert_eq!(actual_id, TypeId::of::<i32>());\r\nassert_eq!(boxed_id, TypeId::of::<Box<dyn Any>>());\r\n```\r\n\r\n[playground link](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=c6bb469663f75cbad5304e58d6aa6b78)", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79868/timeline", "performed_via_github_app": null, "state_reason": "completed"}