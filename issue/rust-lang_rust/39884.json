{"url": "https://api.github.com/repos/rust-lang/rust/issues/39884", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39884/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39884/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39884/events", "html_url": "https://github.com/rust-lang/rust/issues/39884", "id": 208132182, "node_id": "MDU6SXNzdWUyMDgxMzIxODI=", "number": 39884, "title": "Provide an easy way to use LLVM's Polly", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-02-16T14:12:17Z", "updated_at": "2023-04-05T17:38:48Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[To use polly with clang](http://polly.llvm.org/example_load_Polly_into_clang.html) I just need to compile polly together with llvm and clang (just check it out and put it in the correct directory before compiling), load it as a clang plugin, and then enable `-mllvm polly`. \r\n\r\nIt would be nice if:\r\n\r\n- [ ] rustc always came with an LLVM compiled with polly\r\n- [ ] it had an easy option to enable it from rustc that:\r\n    - [ ] loads polly's `/lib/LLVMPolly.so` as a plugin\r\n    - [ ] enables it in llvm's opt: `-mllvm polly`.\r\n- [ ] had an easy way to pass polly options without having to do the  `-mllvm -polly-option_name=value` dance over and over again.\r\n\r\nThis would allow to start experimenting with polly, to e.g. make sure that it gets proper aliasing information for Rust.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39884/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39884/timeline", "performed_via_github_app": null, "state_reason": null}