{"url": "https://api.github.com/repos/rust-lang/rust/issues/15510", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/15510/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/15510/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/15510/events", "html_url": "https://github.com/rust-lang/rust/issues/15510", "id": 37307071, "node_id": "MDU6SXNzdWUzNzMwNzA3MQ==", "number": 15510, "title": "Rust should optimize away enum variants containing a Void type", "user": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-07-07T20:29:31Z", "updated_at": "2016-11-29T21:48:58Z", "closed_at": "2016-11-29T21:48:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "One of the downsides of writing generic functions that may error with a `Result<T, E>` is that sometimes an implementation is guaranteed to never error. For example, the current implementation of `MemWriter` always returns a `Ok(())`, but users of `MemWriter` still have to pay for unwrapping the always-ok result.\n\nOne possibility for optimizing this unwrapping today would be to parameterize `Writer` with an error type, and let `MemWriter` use a `Void` type as it's error. Theoretically, rust should be able to tell that since it is impossible to construct a `Void` type, all branches that touch that `Void` type can be optimized away. For example, this code:\n\n``` rust\nenum Void { }\n\ntrait Writer<E> {\n    fn write(&mut self, buf: &[u8]) -> Result<(), E>;\n}\n\nstruct MemWriter { ... }\n\nimpl Writer<Void> for MemWriter {\n    fn write(&mut self, buf: &[u8]) -> Result<(), Void> {\n        self.buf.push_all(buf);\n        Ok(())\n    }\n}\n```\n\nCould be compiled down to the equivalent of:\n\n``` rust\nimpl Writer for MemWriter {\n    fn write(&mut self, buf: &[u8]) -> () {\n        self.buf.push_all(buf);\n        ()\n    }\n}\n```\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/15510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/15510/timeline", "performed_via_github_app": null, "state_reason": "completed"}