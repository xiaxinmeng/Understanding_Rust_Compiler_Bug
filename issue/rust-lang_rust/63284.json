{"url": "https://api.github.com/repos/rust-lang/rust/issues/63284", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63284/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63284/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63284/events", "html_url": "https://github.com/rust-lang/rust/issues/63284", "id": 476836586, "node_id": "MDU6SXNzdWU0NzY4MzY1ODY=", "number": 63284, "title": "update rustdoc's syntax checker to work with error-recovering lexer", "user": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-08-05T12:39:28Z", "updated_at": "2021-04-07T04:35:04Z", "closed_at": "2021-04-07T04:35:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Rustdoc processes code inside of  `` ``` `` blocks in two ways:\r\n\r\n* _First_, the code is [checked](https://github.com/rust-lang/rust/blob/4be067558962c004b638e4c6f162d50f7c0c98b6/src/librustdoc/passes/check_code_block_syntax.rs#L28-L99) for lexer errors\r\n\r\n* _Second_, lexer-based syntax highlighting [is done](https://github.com/rust-lang/rust/blob/4be067558962c004b638e4c6f162d50f7c0c98b6/src/librustdoc/html/highlight.rs#L41-L51)\r\n\r\nThe checking for lexer errors works by intercepting fatal errors from the lexer. However, since this was originally implemented, the lexer moved from fatal erroring to error-recovery (#63017 in particular tries to remove the last bit of fatal erroring). That means that the current approach intercepts only a fraction of lexer errors, while most of the errors are reported twice (once duing the check, once during highlighing). Here's an example:\r\n\r\n````\r\n14:30:41|~/tmp\r\n\u03bb cat main.rs \r\n/// ```\r\n/// '...'\r\n/// ```\r\npub fn foo() {}\r\n\r\n14:31:11|~/tmp\r\n\u03bb rustdoc main.rs\r\nerror: character literal may only contain one codepoint\r\n --> <doctest>:1:1\r\n  |\r\n1 | '...'\r\n  | ^^^^^\r\nhelp: if you meant to write a `str` literal, use double quotes\r\n  |\r\n1 | \"...\"\r\n  |\r\n\r\nerror: character literal may only contain one codepoint\r\n --> <rustdoc-highlighting>:1:1\r\n  |\r\n1 | '...'\r\n  | ^^^^^\r\nhelp: if you meant to write a `str` literal, use double quotes\r\n  |\r\n1 | \"...\"\r\n````\r\n\r\nI think that, to fix this, we should configure the parsing session with a custom `Emitter`. For code-checking pass, the emmitter should downgrade all diagnostics to warnings and set a flag if there were any diagnostics. For syntax-highlighting pass, we should use a \"`/dev/null`\" emitter which just doesn't emit anything. \r\n\r\ncc @euclio, @GuillaumeGomez \r\n", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63284/timeline", "performed_via_github_app": null, "state_reason": "completed"}