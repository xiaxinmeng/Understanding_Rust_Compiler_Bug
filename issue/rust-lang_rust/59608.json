{"url": "https://api.github.com/repos/rust-lang/rust/issues/59608", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/59608/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/59608/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/59608/events", "html_url": "https://github.com/rust-lang/rust/issues/59608", "id": 427808280, "node_id": "MDU6SXNzdWU0Mjc4MDgyODA=", "number": 59608, "title": "Types from current crate and dependencies are indistinguishable in error messages", "user": {"login": "Riateche", "id": 1740713, "node_id": "MDQ6VXNlcjE3NDA3MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1740713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Riateche", "html_url": "https://github.com/Riateche", "followers_url": "https://api.github.com/users/Riateche/followers", "following_url": "https://api.github.com/users/Riateche/following{/other_user}", "gists_url": "https://api.github.com/users/Riateche/gists{/gist_id}", "starred_url": "https://api.github.com/users/Riateche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Riateche/subscriptions", "organizations_url": "https://api.github.com/users/Riateche/orgs", "repos_url": "https://api.github.com/users/Riateche/repos", "events_url": "https://api.github.com/users/Riateche/events{/privacy}", "received_events_url": "https://api.github.com/users/Riateche/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-01T16:46:20Z", "updated_at": "2023-01-05T22:16:36Z", "closed_at": "2023-01-05T22:16:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example:\r\n```\r\nmod log {\r\n    pub struct SetLoggerError;\r\n}\r\n\r\nfn func(_arg: ::log::SetLoggerError) {}\r\n\r\nfn main() {\r\n    let value = crate::log::SetLoggerError;\r\n    func(value);\r\n}\r\n```\r\nCompiler output (when `log` is added as a dependency):\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:9:10\r\n  |\r\n9 |     func(value);\r\n  |          ^^^^^ expected struct `log::SetLoggerError`, found a different struct `log::SetLoggerError`\r\n  |\r\n  = note: expected type `log::SetLoggerError` (struct `log::SetLoggerError`)\r\n             found type `log::SetLoggerError` (struct `log::SetLoggerError`)\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n[playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=c10b19ea54107550df8d909b53fe59c9)\r\n\r\nAs you can see, it's completely impossible to understand which types the error message is referring to. In real-world scenarios the mismatched type can be a part of a more complex type, so it's very hard to figure out what's going on.\r\n\r\nThe correct behavior here is probably to always use `::log::SetLoggerError` and `crate:log::SetLoggerError` in error messages. Even if there is no direct clash, having `crate:` in types would make errors more readable.\r\n", "closed_by": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/59608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/59608/timeline", "performed_via_github_app": null, "state_reason": "completed"}