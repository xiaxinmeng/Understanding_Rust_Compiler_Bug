{"url": "https://api.github.com/repos/rust-lang/rust/issues/85094", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85094/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85094/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85094/events", "html_url": "https://github.com/rust-lang/rust/issues/85094", "id": 881406942, "node_id": "MDU6SXNzdWU4ODE0MDY5NDI=", "number": 85094, "title": "Compiler generating extra memcpy, inconsistently depending on used types", "user": {"login": "adrian17", "id": 4729533, "node_id": "MDQ6VXNlcjQ3Mjk1MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/4729533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrian17", "html_url": "https://github.com/adrian17", "followers_url": "https://api.github.com/users/adrian17/followers", "following_url": "https://api.github.com/users/adrian17/following{/other_user}", "gists_url": "https://api.github.com/users/adrian17/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrian17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrian17/subscriptions", "organizations_url": "https://api.github.com/users/adrian17/orgs", "repos_url": "https://api.github.com/users/adrian17/repos", "events_url": "https://api.github.com/users/adrian17/events{/privacy}", "received_events_url": "https://api.github.com/users/adrian17/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-05-08T22:36:52Z", "updated_at": "2023-04-05T17:35:28Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I'll preface with saying that the compiler was generating _much_ worse code before 1.52, with up to 4 `memcpy` calls where there should have been one. So the LLVM 12 upgrade was great :)\r\n\r\nHere's the sample:\r\nhttps://godbolt.org/z/TdPdWqq6q\r\n\r\nAs you can see, both `allocate_naive` and `allocate_ptr_write` generate two `memcpy` calls (and significant stack usage). Manual unsafe optimization with `allocate_separate_write` generates a single `memcpy`. The same can be observed on x86_64: https://godbolt.org/z/6Mq9vKP3s\r\n\r\nIf I replace `pub type Payload = RefCell<[u8; 1000]>;` with just `[u8; 1000]`, all three functions seem to generate good code with a single `memcpy` call: https://godbolt.org/z/8K7s8vbPa\r\n\r\nHere's the weirdest part: with the original `Payload`, if I manually inline the `MyStruct` type parameter and turn `MyStruct` into a simple non-generic struct, it still generates bad code on wasm, but on x86_64 correctly optimized all functions into a single `memcpy`: https://godbolt.org/z/jsdrbGExW\r\n\r\nWhy does a seemingly-equivalent generic struct appears to generate worse code than a non-generic one?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85094/timeline", "performed_via_github_app": null, "state_reason": null}