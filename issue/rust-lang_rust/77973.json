{"url": "https://api.github.com/repos/rust-lang/rust/issues/77973", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77973/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77973/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77973/events", "html_url": "https://github.com/rust-lang/rust/issues/77973", "id": 722357779, "node_id": "MDU6SXNzdWU3MjIzNTc3Nzk=", "number": 77973, "title": "proc-macro receives warnings only when used within `macro_rules!` macros", "user": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-10-15T13:52:41Z", "updated_at": "2020-10-15T14:12:34Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "A proc-macro that generates code with the partial same span as the input, receive warnings in the generated code only when used within `macro_rules!` macros. (does not receive warnings if used outside `macro_rules!` macros.)\r\n\r\n*This originally reported in https://github.com/taiki-e/pin-project/pull/298* ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=fb33b572fc967f70710edb5026083266)).\r\n\r\n### Repro:\r\n\r\n`Cargo.toml`:\r\n\r\n```toml\r\n[package]\r\nname = \"repro\"\r\nversion = \"0.0.0\"\r\nauthors = [\"Taiki Endo <te316e89@gmail.com>\"]\r\nedition = \"2018\"\r\npublish = false\r\n\r\n[lib]\r\nproc-macro = true\r\n\r\n[dependencies]\r\nproc-macro2 = \"1\"\r\nquote = \"1\"\r\nsyn = { version = \"1\", features = [\"full\"] }\r\n```\r\n\r\n`src/lib.rs`:\r\n\r\n```rust\r\nextern crate proc_macro;\r\n\r\nuse proc_macro::TokenStream;\r\nuse proc_macro2::{Ident, Span};\r\nuse quote::quote;\r\n\r\n#[proc_macro_attribute]\r\npub fn repro(_arg: TokenStream, input: TokenStream) -> TokenStream {\r\n    let item: syn::ItemStruct = syn::parse_macro_input!(input);\r\n\r\n    let name = format!(\"{}2\", &item.ident);\r\n    let name = Ident::new(&name, Span::call_site());\r\n    let vis = &item.vis;\r\n\r\n    TokenStream::from(quote! {\r\n        #item\r\n        // can be avoid by adding `#[allow(missing_debug_implementations)]`\r\n        // or change `vis` to call-site span\r\n        #vis struct #name {\r\n            _f: ()\r\n        }\r\n    })\r\n}\r\n```\r\n\r\n`tests/test.rs`:\r\n\r\n```rust\r\n#![warn(missing_debug_implementations)]\r\n\r\n#[repro::repro] // <- no warning\r\n#[derive(Debug)]\r\npub struct A {\r\n    _f: (),\r\n}\r\n\r\nmacro_rules! mac {\r\n    () => {\r\n        #[repro::repro] //~WARN type does not implement `Debug`\r\n        #[derive(Debug)]\r\n        pub struct B {\r\n            _f: (),\r\n        }\r\n    };\r\n}\r\n\r\nmac!();\r\n```\r\n\r\nThis example uses `missing_debug_implementations`, but the same problem occurred with `unreachable_pub`, `variant_size_differences`, `clippy::missing_const_for_fn` etc., so it doesn't seem to be specific to some lint.\r\n\r\n### Meta\r\n\r\nIt can be reproduced at least in 1.31, stable (1.47), beta (1.48), nightly-2020-10-15.\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.49.0-nightly (e160e5cb8 2020-10-14)\r\nbinary: rustc\r\ncommit-hash: e160e5cb80652bc2afe74cb3affbe35b74243ea9\r\ncommit-date: 2020-10-14\r\nhost: x86_64-apple-darwin\r\nrelease: 1.49.0-nightly\r\nLLVM version: 11.0\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77973/timeline", "performed_via_github_app": null, "state_reason": null}