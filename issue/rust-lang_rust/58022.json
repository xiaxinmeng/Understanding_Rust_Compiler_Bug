{"url": "https://api.github.com/repos/rust-lang/rust/issues/58022", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58022/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58022/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58022/events", "html_url": "https://github.com/rust-lang/rust/issues/58022", "id": 405181310, "node_id": "MDU6SXNzdWU0MDUxODEzMTA=", "number": 58022, "title": "Internal compiler error: Encountered ambiguity during codegen", "user": {"login": "brycx", "id": 34031846, "node_id": "MDQ6VXNlcjM0MDMxODQ2", "avatar_url": "https://avatars.githubusercontent.com/u/34031846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brycx", "html_url": "https://github.com/brycx", "followers_url": "https://api.github.com/users/brycx/followers", "following_url": "https://api.github.com/users/brycx/following{/other_user}", "gists_url": "https://api.github.com/users/brycx/gists{/gist_id}", "starred_url": "https://api.github.com/users/brycx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brycx/subscriptions", "organizations_url": "https://api.github.com/users/brycx/orgs", "repos_url": "https://api.github.com/users/brycx/repos", "events_url": "https://api.github.com/users/brycx/events{/privacy}", "received_events_url": "https://api.github.com/users/brycx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-31T10:36:34Z", "updated_at": "2019-10-01T11:50:45Z", "closed_at": "2019-10-01T11:50:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not exactly sure what's happening here, but It seems as though calling a trait as a function, with `Box<Any>` leads to a codegen bug.\r\n\r\n__I tried this code ([playground link](https://play.integer32.com/?version=stable&mode=debug&edition=2018&gist=a7184ea2614bf9209c486de2e90ca5cb))__:\r\n```\r\npub trait Foo: Sized {\r\n    const SIZE: usize;\r\n    \r\n    fn new(slice: &[u8; Foo::SIZE]) -> Self;\r\n}\r\n\r\npub struct Bar<T: ?Sized>(T);\r\n\r\nimpl Bar<[u8]> {\r\n    const SIZE: usize = 32;\r\n\r\n    fn new(slice: &[u8; Self::SIZE]) -> Self {\r\n        Foo(Box::new(*slice))\r\n    }\r\n}\r\n\r\nfn main() {\r\n    println!(\"Hello, world!\");\r\n}\r\n```\r\n__I expected to see this happen__:\r\nThat the compiler throws `error[E0423]: expected function, found trait Foo`, which it does, but without an internal compiler error.\r\n\r\n__Instead, this happened__:\r\n```\r\nerror: internal compiler error: src/librustc/traits/codegen/mod.rs:63: Encountered ambiguity selecting `Binder(<[type error] as Foo>)` during codegen, presuming due to overflow\r\n\r\nthread 'main' panicked at 'Box<Any>', src/librustc_errors/lib.rs:600:9\r\n```\r\n\r\n## Meta\r\n\r\n`note: rustc 1.32.0 (9fda7c223 2019-01-16) running on x86_64-unknown-linux-gnu`\r\n\r\n`note: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type bin`\r\n\r\nBacktrace:\r\n```\r\nthread 'main' panicked at 'Box<Any>', src/librustc_errors/lib.rs:600:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n             at src/libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:495\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::util::bug::opt_span_bug_fmt\r\n  13: rustc::util::bug::bug_fmt\r\n  14: rustc::ty::context::tls::with_related_context\r\n  15: rustc::infer::InferCtxtBuilder::enter\r\n  16: rustc::traits::codegen::codegen_fulfill_obligation\r\n  17: rustc::ty::query::__query_compute::codegen_fulfill_obligation\r\n  18: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::codegen_fulfill_obligation<'tcx>>::compute\r\n  19: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  20: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  21: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  22: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  23: rustc::ty::instance::Instance::resolve\r\n  24: <rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::resolve\r\n  25: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::const_value_to_op\r\n  26: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::eval_operand\r\n  27: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::run\r\n  28: rustc_mir::const_eval::eval_body_using_ecx\r\n  29: rustc_mir::const_eval::const_eval_raw_provider\r\n  30: rustc::ty::query::__query_compute::const_eval_raw\r\n  31: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::const_eval_raw<'tcx>>::compute\r\n  32: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  33: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  34: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  35: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  36: rustc::ty::query::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::const_eval_raw\r\n  37: rustc_mir::const_eval::const_eval_provider\r\n  38: rustc::ty::query::__query_compute::const_eval\r\n  39: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::const_eval<'tcx>>::compute\r\n  40: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  41: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  42: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  43: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  44: <rustc::traits::project::AssociatedTypeNormalizer<'a, 'b, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_const\r\n  45: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable<'tcx> for &'tcx rustc::ty::TyS<'tcx>>::super_fold_with\r\n  46: <rustc::traits::project::AssociatedTypeNormalizer<'a, 'b, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  47: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable<'tcx> for &'tcx rustc::ty::TyS<'tcx>>::super_fold_with\r\n  48: <rustc::traits::project::AssociatedTypeNormalizer<'a, 'b, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  49: <smallvec::SmallVec<A> as core::iter::traits::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  50: rustc::ty::fold::TypeFoldable::fold_with\r\n  51: rustc::traits::project::normalize\r\n  52: rustc::infer::InferCtxt::partially_normalize_associated_types_in\r\n  53: rustc::ty::context::tls::with_related_context\r\n  54: rustc::infer::InferCtxtBuilder::enter\r\n  55: rustc_typeck::check::wfcheck::check_associated_item\r\n  56: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::check_trait_item_well_formed<'tcx>>::compute\r\n  57: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  58: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  59: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  60: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  61: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::ensure_query\r\n  62: rustc::session::Session::track_errors\r\n  63: rustc::util::common::time\r\n  64: rustc_typeck::check_crate\r\n  65: rustc::ty::context::tls::enter_context\r\n  66: <std::thread::local::LocalKey<T>>::with\r\n  67: rustc::ty::context::TyCtxt::create_and_enter\r\n  68: rustc_driver::driver::compile_input\r\n  69: rustc_driver::run_compiler_with_pool\r\n  70: <scoped_tls::ScopedKey<T>>::set\r\n  71: rustc_driver::run_compiler\r\n  72: rustc_driver::monitor::{{closure}}\r\n  73: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  74: rustc_driver::run\r\n  75: rustc_driver::main\r\n  76: std::rt::lang_start::{{closure}}\r\n  77: std::panicking::try::do_call\r\n             at src/libstd/rt.rs:59\r\n             at src/libstd/panicking.rs:310\r\n  78: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  79: std::rt::lang_start_internal\r\n             at src/libstd/panicking.rs:289\r\n             at src/libstd/panic.rs:398\r\n             at src/libstd/rt.rs:58\r\n  80: main\r\n  81: __libc_start_main\r\n  82: <unknown>\r\nquery stack during panic:\r\n#0 [codegen_fulfill_obligation] checking if `Foo` fulfills its obligations\r\n#1 [const_eval_raw] const-evaluating `Foo::new::{{constant}}`\r\n#2 [const_eval] const-evaluating + checking `Foo::new::{{constant}}`\r\n#3 [check_trait_item_well_formed] processing `Foo::new`\r\nend of query stack\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58022/timeline", "performed_via_github_app": null, "state_reason": "completed"}