{"url": "https://api.github.com/repos/rust-lang/rust/issues/44309", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44309/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44309/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44309/events", "html_url": "https://github.com/rust-lang/rust/issues/44309", "id": 254972336, "node_id": "MDU6SXNzdWUyNTQ5NzIzMzY=", "number": 44309, "title": "[1.22.0-nightly, 2017-09-01] ICE during regular compilation", "user": {"login": "jjpe", "id": 1242003, "node_id": "MDQ6VXNlcjEyNDIwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/1242003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjpe", "html_url": "https://github.com/jjpe", "followers_url": "https://api.github.com/users/jjpe/followers", "following_url": "https://api.github.com/users/jjpe/following{/other_user}", "gists_url": "https://api.github.com/users/jjpe/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjpe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjpe/subscriptions", "organizations_url": "https://api.github.com/users/jjpe/orgs", "repos_url": "https://api.github.com/users/jjpe/repos", "events_url": "https://api.github.com/users/jjpe/events{/privacy}", "received_events_url": "https://api.github.com/users/jjpe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-04T08:39:51Z", "updated_at": "2017-09-04T13:31:49Z", "closed_at": "2017-09-04T13:31:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm pretty sure this bug is somehow related to the `impl trait` feature as I was implementing a fn that returns an `impl std::iter::Iterator<Item=&Node>` for some struct `Node`. It also *seems* related to lifetime elision rules, as that is the differentiating factor.\r\n\r\nInterestingly, this compiles:\r\n````rust\r\n    /// Return a left-to-right iterator over this `Node`'s children\r\n    pub fn child_iter_left<'l>(&'l self) -> impl std::iter::Iterator<Item = &'l Node> {\r\n        self.children_ref().iter()\r\n    }\r\n````\r\n\r\nWhile this does not:\r\n````rust\r\n    /// Return a left-to-right iterator over this `Node`'s children\r\n    pub fn child_iter_left(&self) -> impl std::iter::Iterator<Item = &Node> {\r\n        self.children_ref().iter()\r\n    }\r\n````\r\n\r\nIn fact, when I compile using the latter form, I get an ICE:\r\n\r\n````\r\n\r\nerror: internal compiler error: src/librustc_typeck/check/mod.rs:633: escaping regions in predicate Obligation(predicate=Binder(ProjectionPredicate(ProjectionTy { substs: Slice([_]), item_def_id: DefId { krate: CrateNum(2), node: DefIndex(1599) => core/3881d98::iter[0]::iterator[0]::Iterator[0]::Item[0] } }, &Node)),depth=0)\r\n   --> src/lib.rs:432:38\r\n    |\r\n432 |     pub fn child_iter_left(&self) -> impl Iterator<Item = &Node> {\r\n    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.22.0-nightly (f861b6ee4 2017-09-01) running on x86_64-apple-darwin\r\n\r\nnote: run with `RUST_BACKTRACE=1` for a backtrace\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:439:8\r\nstack backtrace:\r\n   0:        0x11096f113 - std::sys::imp::backtrace::tracing::imp::unwind_backtrace::hf3df301931ac253f\r\n   1:        0x11097c25a - std::panicking::default_hook::{{closure}}::hee0e66cc82965672\r\n   2:        0x11097bd58 - std::panicking::default_hook::h5054e86e839146af\r\n   3:        0x11097e522 - std::panicking::rust_panic_with_hook::h1dee2d7c82b5ceee\r\n   4:        0x10b4b244b - std::panicking::begin_panic::h09e56ab400815d26\r\n   5:        0x10b4ae653 - rustc_errors::Handler::span_bug::ha2663d448d325043\r\n   6:        0x10b4e0b46 - rustc::session::opt_span_bug_fmt::{{closure}}::h4f7a07cb5e9cd375\r\n   7:        0x10b4e09d9 - rustc::session::span_bug_fmt::h319de7e2e251bfa5\r\n   8:        0x10b555467 - rustc_typeck::check::Inherited::register_predicate::hcc33038078365417\r\n   9:        0x10b4af7ca - <rustc::ty::fold::BottomUpFolder<'a, 'gcx, 'tcx, F> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty::habae7658bbd2b5ea\r\n  10:        0x10b55eea4 - rustc_typeck::check::check_fn::hef972f534bc9c8cb\r\n  11:        0x10b557a13 - rustc_typeck::check::typeck_tables_of::{{closure}}::h7d04f6d697a6871b\r\n  12:        0x10b557377 - rustc_typeck::check::typeck_tables_of::h1bedb534ea6db1ea\r\n  13:        0x10f38d06f - rustc::dep_graph::graph::DepGraph::with_task::h95c1546b77181f18\r\n  14:        0x10f5da7cb - rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::try_get::h676a3a86d08f1aaf\r\n  15:        0x10f63c72f - rustc::ty::maps::TyCtxtAt::typeck_tables_of::hcd86d7eb90e362d3\r\n  16:        0x10f63926e - rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_tables_of::hb5b76b6f2aef9693\r\n  17:        0x10b55647d - rustc_typeck::check::typeck_item_bodies::h1a9685f9dc12cdaa\r\n  18:        0x10f38f7c3 - rustc::dep_graph::graph::DepGraph::with_task::hfde30d2142cdd51d\r\n  19:        0x10f5d84f7 - rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_item_bodies<'tcx>>::try_get::h76f719d0a195f620\r\n  20:        0x10f63c5dd - rustc::ty::maps::TyCtxtAt::typeck_item_bodies::hb8b8738afcc26d5c\r\n  21:        0x10f63922e - rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_item_bodies::hcd397e46878fb05a\r\n  22:        0x10b5b57ea - rustc_typeck::check_crate::hfd9e5ae323fc4748\r\n  23:        0x10ae1ec2c - rustc::ty::context::TyCtxt::create_and_enter::h2e0d847fa32e4bd0\r\n  24:        0x10ae92424 - rustc_driver::driver::compile_input::ha84eacbdb0971b90\r\n  25:        0x10aeab411 - rustc_driver::run_compiler::h114a92f75300796f\r\n  26:        0x10addb273 - std::sys_common::backtrace::__rust_begin_short_backtrace::hc3473cc726902e01\r\n  27:        0x1109b0ccc - __rust_maybe_catch_panic\r\n  28:        0x10ae11fef - <F as alloc::boxed::FnBox<A>>::call_box::hd9a152e6940302a2\r\n  29:        0x11097b1bb - std::sys::imp::thread::Thread::new::thread_start::h569ec0b87c0a0af3\r\n  30:     0x7fff8efbd059 - _pthread_body\r\n  31:     0x7fff8efbcfd6 - _pthread_start\r\n\r\nerror: Could not compile `sbr-xquery-parser-api`.\r\n````", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44309/timeline", "performed_via_github_app": null, "state_reason": "completed"}