{"url": "https://api.github.com/repos/rust-lang/rust/issues/85641", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85641/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85641/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85641/events", "html_url": "https://github.com/rust-lang/rust/issues/85641", "id": 899855037, "node_id": "MDU6SXNzdWU4OTk4NTUwMzc=", "number": 85641, "title": "Rust does not follow System V Amd64 ABI calling convention for small enum values, resulting in incorrect debugger output", "user": {"login": "khuey", "id": 325892, "node_id": "MDQ6VXNlcjMyNTg5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/325892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khuey", "html_url": "https://github.com/khuey", "followers_url": "https://api.github.com/users/khuey/followers", "following_url": "https://api.github.com/users/khuey/following{/other_user}", "gists_url": "https://api.github.com/users/khuey/gists{/gist_id}", "starred_url": "https://api.github.com/users/khuey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khuey/subscriptions", "organizations_url": "https://api.github.com/users/khuey/orgs", "repos_url": "https://api.github.com/users/khuey/repos", "events_url": "https://api.github.com/users/khuey/events{/privacy}", "received_events_url": "https://api.github.com/users/khuey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2021-05-24T17:21:32Z", "updated_at": "2023-02-24T02:23:38Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the following\r\n\r\n```rust\r\nfn return_result_ok() -> Result<u32, u32> {\r\n    Ok(7)\r\n}\r\n\r\nfn return_result_err() -> Result<u32, u32> {\r\n    Err(7)\r\n}\r\n\r\nfn main() {\r\n    let r = return_result_ok();\r\n    println!(\"{:?}\", r);\r\n    let r = return_result_err();\r\n    println!(\"{:?}\", r);\r\n}\r\n```\r\n\r\nrustc generates the following assembly (debug build)\r\n\r\n```asm\r\nplayground::return_result_ok:\r\n\tpushq\t%rax\r\n\tmovl\t$7, 4(%rsp)\r\n\tmovl\t$0, (%rsp)\r\n\tmovl\t(%rsp), %eax\r\n\tmovl\t4(%rsp), %edx\r\n\tpopq\t%rcx\r\n\tretq\r\n\r\nplayground::return_result_err:\r\n\tpushq\t%rax\r\n\tmovl\t$7, 4(%rsp)\r\n\tmovl\t$1, (%rsp)\r\n\tmovl\t(%rsp), %eax\r\n\tmovl\t4(%rsp), %edx\r\n\tpopq\t%rcx\r\n\tretq\r\n```\r\n\r\nThe standard calling convention would pass both the discriminant and the value in a single register (or, alternatively, for non-POD types in C++, a reference to it would be passed. Regardless, there's no situation in the calling convention that would split a single 8 byte value across rax and rdx like this).\r\n\r\nAlthough there's no hard requirement to follow the ABI calling convention for functions internal to the program, doing this confuses debuggers. If you compile this code and use gdb to step out of `return_result_ok` or `return_result_err` with the `finish` command gdb will correctly identify the `Ok`/`Err` variant (because the discriminant is in the lower 4 bytes of `%rax` where gdb expects to find it) but it will report the `u32` value as `0` (because the value is in `%edx` where the calling convention does not put it and gdb does not expect to find it).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85641/timeline", "performed_via_github_app": null, "state_reason": null}