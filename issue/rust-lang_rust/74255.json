{"url": "https://api.github.com/repos/rust-lang/rust/issues/74255", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74255/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74255/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74255/events", "html_url": "https://github.com/rust-lang/rust/issues/74255", "id": 655267978, "node_id": "MDU6SXNzdWU2NTUyNjc5Nzg=", "number": 74255, "title": "ICE when running an associated function with a const generic parameter", "user": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-11T19:45:35Z", "updated_at": "2020-07-16T22:23:16Z", "closed_at": "2020-07-16T22:23:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(const_generics)]\r\n#![allow(dead_code, incomplete_features)]\r\n\r\n#[derive(PartialEq, Eq)]\r\nenum IceEnum {\r\n    Variant\r\n}\r\n\r\nstruct IceStruct;\r\n\r\nimpl IceStruct {\r\n\tfn ice_struct_fn<const I: IceEnum>() {}\r\n}\r\n\r\nfn ice_fn() {\r\n\tIceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.46.0-nightly (daecab3a7 2020-07-10)\r\nbinary: rustc\r\ncommit-hash: daecab3a784f28082df90cebb204998051f3557d\r\ncommit-date: 2020-07-10\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.46.0-nightly\r\nLLVM version: 10.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: unexpected const parent path Expr(Expr { hir_id: HirId { owner: DefId(0:8 ~ icetest[e2da]::ice_fn[0]), local_id: 10 }, kind: Path(TypeRelative(Ty { hir_id: HirId { owner: DefId(0:8 ~ icetest[e2da]::ice_fn[0]), local_id: 2 }, kind: Path(Resolved(None, Path { span: src\\lib.rs:16:2: 16:48 (#0), res: \r\nDef(Struct, DefId(0:3 ~ icetest[e2da]::IceStruct[0])), segments: [PathSegment { ident: IceStruct#0, hir_id: Some(HirId { owner: DefId(0:8 ~ icetest[e2da]::ice_fn[0]), local_id: 1 }), res: Some(Err), args: None, infer_args: true }] })), span: src\\lib.rs:16:2: 16:48 (#0) }, PathSegment { ident: ice_struct_fn#0, hir_id: Some(HirId \r\n{ owner: DefId(0:8 ~ icetest[e2da]::ice_fn[0]), local_id: 9 }), res: Some(Err), args: Some(GenericArgs { args: [Const(ConstArg { value: AnonConst { hir_id: HirId { owner: DefId(0:8 ~ icetest[e2da]::ice_fn[0]), local_id: 3 }, body: BodyId { hir_id: HirId { owner: DefId(0:8 ~ icetest[e2da]::ice_fn[0]), local_id: 8 } } }, span: src\\lib.rs:16:29: 16:47 (#0) })], bindings: [], parenthesized: false }), infer_args: false })), attrs: ThinVec(None), span: src\\lib.rs:16:2: 16:48 (#0) })\r\n  |\r\n  = note: delayed at /rustc/daecab3a784f28082df90cebb204998051f3557d\\src\\librustc_session\\session.rs:436:27\r\n\r\nerror: internal compiler error: TyKind::Error constructed but no error reported\r\n  |\r\n  = note: delayed at /rustc/daecab3a784f28082df90cebb204998051f3557d\\src\\librustc_session\\session.rs:436:27\r\n\r\nerror: internal compiler error: cat_expr Errd\r\n  --> src\\lib.rs:16:29\r\n   |\r\n16 |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n   |                                ^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at /rustc/daecab3a784f28082df90cebb204998051f3557d\\src\\librustc_session\\session.rs:436:27\r\n\r\nerror: internal compiler error: `ErrorReported` without an error\r\n  --> src\\lib.rs:16:29\r\n   |\r\n16 |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n   |                                ^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at /rustc/daecab3a784f28082df90cebb204998051f3557d\\src\\librustc_session\\session.rs:436:27\r\n\r\nerror: internal compiler error: cat_expr Errd\r\n  --> src\\lib.rs:15:13\r\n   |\r\n15 |   fn ice_fn() {\r\n   |  _____________^\r\n16 | |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n17 | | }\r\n   | |_^\r\n   |\r\n   = note: delayed at /rustc/daecab3a784f28082df90cebb204998051f3557d\\src\\librustc_session\\session.rs:436:27\r\n\r\nerror: internal compiler error: cat_expr Errd\r\n  --> src\\lib.rs:16:2\r\n   |\r\n16 |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at /rustc/daecab3a784f28082df90cebb204998051f3557d\\src\\librustc_session\\session.rs:436:27\r\n\r\nerror: internal compiler error: PromoteTemps: MIR had errors\r\n  --> src\\lib.rs:15:1\r\n   |\r\n15 | / fn ice_fn() {\r\n16 | |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n17 | | }\r\n   | |_^\r\n   |\r\n   = note: delayed at /rustc/daecab3a784f28082df90cebb204998051f3557d\\src\\librustc_session\\session.rs:436:27\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:8 ~ icetest[e2da]::ice_fn[0]) (\"return type\"): bad type [type error]\r\n  --> src\\lib.rs:15:1\r\n   |\r\n15 | / fn ice_fn() {\r\n16 | |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n17 | | }\r\n   | |_^\r\n   |\r\n   = note: delayed at src\\librustc_mir\\borrow_check\\type_check\\mod.rs:258:27\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:8 ~ icetest[e2da]::ice_fn[0]) (LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: [type error], user_ty: None, source_info: SourceInfo { span: src\\lib.rs:15:1: 17:2 (#0), scope: scope[0] } }): bad type [type error]\r\n  --> src\\lib.rs:15:1\r\n   |\r\n15 | / fn ice_fn() {\r\n16 | |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n17 | | }\r\n   | |_^\r\n   |\r\n   = note: delayed at src\\librustc_mir\\borrow_check\\type_check\\mod.rs:258:27\r\n\r\nerror: internal compiler error: mir_const_qualif: MIR had errors\r\n  --> src\\lib.rs:16:29\r\n   |\r\n16 |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n   |                                ^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at /rustc/daecab3a784f28082df90cebb204998051f3557d\\src\\librustc_session\\session.rs:436:27\r\n\r\nerror: internal compiler error: PromoteTemps: MIR had errors\r\n  --> src\\lib.rs:16:29\r\n   |\r\n16 |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n   |                                ^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at /rustc/daecab3a784f28082df90cebb204998051f3557d\\src\\librustc_session\\session.rs:436:27\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:9 ~ icetest[e2da]::ice_fn[0]::{{constant}}[0]) (\"return type\"): bad type [type error]\r\n  --> src\\lib.rs:16:29\r\n   |\r\n16 |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n   |                                ^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at src\\librustc_mir\\borrow_check\\type_check\\mod.rs:258:27\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:9 ~ icetest[e2da]::ice_fn[0]::{{constant}}[0]) (LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: [type error], user_ty: None, source_info: SourceInfo { span: src\\lib.rs:16:29: 16:47 (#0), scope: scope[0] } }): bad type [type error]     \r\n  --> src\\lib.rs:16:29\r\n   |\r\n16 |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n   |                                ^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at src\\librustc_mir\\borrow_check\\type_check\\mod.rs:258:27\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src\\librustc_errors\\lib.rs:367:17\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.46.0-nightly (daecab3a7 2020-07-10) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: could not compile `icetest`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: unexpected const parent path Expr(Expr { hir_id: HirId { owner: DefId(0:8 ~ icetest[e2da]::ice_fn[0]), local_id: 10 }, kind: Path(TypeRelative(Ty { hir_id: HirId { owner: DefId(0:8 ~ icetest[e2da]::ice_fn[0]), local_id: 2 }, kind: Path(Resolved(None, Path { span: src\\lib.rs:16:2: 16:48 (#0), res: \r\nDef(Struct, DefId(0:3 ~ icetest[e2da]::IceStruct[0])), segments: [PathSegment { ident: IceStruct#0, hir_id: Some(HirId { owner: DefId(0:8 ~ icetest[e2da]::ice_fn[0]), local_id: 1 }), res: Some(Err), args: None, infer_args: true }] })), span: src\\lib.rs:16:2: 16:48 (#0) }, PathSegment { ident: ice_struct_fn#0, hir_id: Some(HirId \r\n{ owner: DefId(0:8 ~ icetest[e2da]::ice_fn[0]), local_id: 9 }), res: Some(Err), args: Some(GenericArgs { args: [Const(ConstArg { value: AnonConst { hir_id: HirId { owner: DefId(0:8 ~ icetest[e2da]::ice_fn[0]), local_id: 3 }, body: BodyId { hir_id: HirId { owner: DefId(0:8 ~ icetest[e2da]::ice_fn[0]), local_id: 8 } } }, span: src\\lib.rs:16:29: 16:47 (#0) })], bindings: [], parenthesized: false }), infer_args: false })), attrs: ThinVec(None), span: src\\lib.rs:16:2: 16:48 (#0) })\r\n  |\r\n  = note: delayed at /rustc/daecab3a784f28082df90cebb204998051f3557d\\src\\librustc_session\\session.rs:436:27\r\n\r\nerror: internal compiler error: TyKind::Error constructed but no error reported\r\n  |\r\n  = note: delayed at /rustc/daecab3a784f28082df90cebb204998051f3557d\\src\\librustc_session\\session.rs:436:27\r\n\r\nerror: internal compiler error: cat_expr Errd\r\n  --> src\\lib.rs:16:29\r\n   |\r\n16 |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n   |                                ^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at /rustc/daecab3a784f28082df90cebb204998051f3557d\\src\\librustc_session\\session.rs:436:27\r\n\r\nerror: internal compiler error: `ErrorReported` without an error\r\n  --> src\\lib.rs:16:29\r\n   |\r\n16 |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n   |                                ^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at /rustc/daecab3a784f28082df90cebb204998051f3557d\\src\\librustc_session\\session.rs:436:27\r\n\r\nerror: internal compiler error: cat_expr Errd\r\n  --> src\\lib.rs:15:13\r\n   |\r\n15 |   fn ice_fn() {\r\n   |  _____________^\r\n16 | |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n17 | | }\r\n   | |_^\r\n   |\r\n   = note: delayed at /rustc/daecab3a784f28082df90cebb204998051f3557d\\src\\librustc_session\\session.rs:436:27\r\n\r\nerror: internal compiler error: cat_expr Errd\r\n  --> src\\lib.rs:16:2\r\n   |\r\n16 |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at /rustc/daecab3a784f28082df90cebb204998051f3557d\\src\\librustc_session\\session.rs:436:27\r\n\r\nerror: internal compiler error: PromoteTemps: MIR had errors\r\n  --> src\\lib.rs:15:1\r\n   |\r\n15 | / fn ice_fn() {\r\n16 | |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n17 | | }\r\n   | |_^\r\n   |\r\n   = note: delayed at /rustc/daecab3a784f28082df90cebb204998051f3557d\\src\\librustc_session\\session.rs:436:27\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:8 ~ icetest[e2da]::ice_fn[0]) (\"return type\"): bad type [type error]\r\n  --> src\\lib.rs:15:1\r\n   |\r\n15 | / fn ice_fn() {\r\n16 | |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n17 | | }\r\n   | |_^\r\n   |\r\n   = note: delayed at src\\librustc_mir\\borrow_check\\type_check\\mod.rs:258:27\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:8 ~ icetest[e2da]::ice_fn[0]) (LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: [type error], user_ty: None, source_info: SourceInfo { span: src\\lib.rs:15:1: 17:2 (#0), scope: scope[0] } }): bad type [type error]\r\n  --> src\\lib.rs:15:1\r\n   |\r\n15 | / fn ice_fn() {\r\n16 | |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n17 | | }\r\n   | |_^\r\n   |\r\n   = note: delayed at src\\librustc_mir\\borrow_check\\type_check\\mod.rs:258:27\r\n\r\nerror: internal compiler error: mir_const_qualif: MIR had errors\r\n  --> src\\lib.rs:16:29\r\n   |\r\n16 |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n   |                                ^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at /rustc/daecab3a784f28082df90cebb204998051f3557d\\src\\librustc_session\\session.rs:436:27\r\n\r\nerror: internal compiler error: PromoteTemps: MIR had errors\r\n  --> src\\lib.rs:16:29\r\n   |\r\n16 |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n   |                                ^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at /rustc/daecab3a784f28082df90cebb204998051f3557d\\src\\librustc_session\\session.rs:436:27\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:9 ~ icetest[e2da]::ice_fn[0]::{{constant}}[0]) (\"return type\"): bad type [type error]\r\n  --> src\\lib.rs:16:29\r\n   |\r\n16 |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n   |                                ^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at src\\librustc_mir\\borrow_check\\type_check\\mod.rs:258:27\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:9 ~ icetest[e2da]::ice_fn[0]::{{constant}}[0]) (LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: [type error], user_ty: None, source_info: SourceInfo { span: src\\lib.rs:16:29: 16:47 (#0), scope: scope[0] } }): bad type [type error]     \r\n  --> src\\lib.rs:16:29\r\n   |\r\n16 |     IceStruct::ice_struct_fn::<{IceEnum::Variant}>();\r\n   |                                ^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at src\\librustc_mir\\borrow_check\\type_check\\mod.rs:258:27\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', src\\librustc_errors\\lib.rs:367:17\r\nstack backtrace:\r\n   0: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n   1: core::fmt::write\r\n   2: <std::io::IoSliceMut as core::fmt::Debug>::fmt\r\n   3: std::panicking::take_hook\r\n   4: std::panicking::take_hook\r\n   5: rustc_driver::report_ice\r\n   6: std::panicking::rust_panic_with_hook\r\n   7: <rustc_errors::styled_buffer::StyledBuffer as core::fmt::Debug>::fmt\r\n   8: <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop\r\n   9: <rustc_driver::DEFAULT_HOOK as core::ops::deref::Deref>::deref\r\n  10: <rustc_driver::DEFAULT_HOOK as core::ops::deref::Deref>::deref\r\n  11: <rustc_span::def_id::CrateNum as rustc_middle::ty::query::keys::Key>::default_span\r\n  12: <rustc_expand::config::StripUnconfigured as rustc_ast::mut_visit::MutVisitor>::visit_mac\r\n  13: <env_logger::filter::inner::Filter as core::fmt::Display>::fmt\r\n  14: <rustc_driver::DEFAULT_HOOK as core::ops::deref::Deref>::deref\r\n  15: <rustc_driver::DEFAULT_HOOK as core::ops::deref::Deref>::deref\r\n  16: <rustc_span::def_id::CrateNum as rustc_middle::ty::query::keys::Key>::default_span\r\n  17: std::sys::windows::thread::Thread::new\r\n  18: BaseThreadInitThunk\r\n  19: RtlUserThreadStart\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.46.0-nightly (daecab3a7 2020-07-10) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: could not compile `icetest`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74255/timeline", "performed_via_github_app": null, "state_reason": "completed"}