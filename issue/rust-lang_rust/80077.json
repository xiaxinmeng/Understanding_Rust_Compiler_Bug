{"url": "https://api.github.com/repos/rust-lang/rust/issues/80077", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80077/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80077/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80077/events", "html_url": "https://github.com/rust-lang/rust/issues/80077", "id": 768730445, "node_id": "MDU6SXNzdWU3Njg3MzA0NDU=", "number": 80077, "title": "[ICE] in \\ty\\subst.rs with wrongly posioned use statement", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-12-16T11:09:01Z", "updated_at": "2020-12-20T08:38:54Z", "closed_at": "2020-12-20T08:38:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Recently I've reported a bug similar to this, and it was closed down as duplicate, so I am not sure if this is novel (this is wrong code because of that import inside the feature):\r\n\r\n```rust\r\n#![feature(\r\n    const_assume,\r\n    const_evaluatable_checked,\r\n    const_generics,\r\n    use std::intrinsics::assume;\r\n)]\r\n#![allow(incomplete_features)]\r\n\r\nconst fn foo(n: usize) -> usize { n }\r\n\r\npub struct Bar<const N: usize>(usize);\r\n\r\nimpl<const N: usize> Bar<N> where [(); foo(N)]: {\r\n    fn spam(i: usize) { }\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\nIt gave:\r\n\r\n```\r\nerror: expected identifier, found keyword `use`\r\n --> ...\\test.rs:5:5\r\n  |\r\n5 |     use std::intrinsics::assume;\r\n  |     ^^^ expected identifier, found keyword\r\n\r\nerror: expected one of `(`, `,`, `::`, or `=`, found `std`\r\n --> ...\\test.rs:5:9\r\n  |\r\n5 |     use std::intrinsics::assume;\r\n  |         ^^^ expected one of `(`, `,`, `::`, or `=`\r\n\r\nerror[E0658]: const generics are unstable\r\n  --> ...\\test.rs:11:22\r\n   |\r\n11 | pub struct Bar<const N: usize>(usize);\r\n   |                      ^\r\n   |\r\n   = note: see issue #74878 <https://github.com/rust-lang/rust/issues/74878> for more information\r\n   = help: add `#![feature(min_const_generics)]` to the crate attributes to enable\r\n\r\nerror[E0658]: const generics are unstable\r\n  --> ...\\test.rs:13:12\r\n   |\r\n13 | impl<const N: usize> Bar<N> where [(); foo(N)]: {\r\n   |            ^\r\n   |\r\n   = note: see issue #74878 <https://github.com/rust-lang/rust/issues/74878> for more information\r\n   = help: add `#![feature(min_const_generics)]` to the crate attributes to enable\r\n\r\nerror: internal compiler error: compiler\\rustc_middle\\src\\ty\\subst.rs:568:17: const parameter `N/#0` (Const { ty: usize, val: Param(N/#0) }/0) out of range when substituting substs=[]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/f76ecd0668fcdb289456cdc72a39ad15467cc454\\compiler\\rustc_errors\\src\\lib.rs:904:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: rustc_errors::HandlerInner::span_bug\r\n   2: rustc_errors::Handler::span_bug\r\n   3: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n   4: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n   5: rustc_middle::ty::context::tls::with_opt\r\n   6: rustc_middle::util::bug::opt_span_bug_fmt\r\n   7: rustc_middle::util::bug::span_bug_fmt\r\n   8: <rustc_middle::ty::subst::SubstFolder as rustc_middle::ty::fold::TypeFolder>::fold_const\r\n   9: rustc_middle::ty::normalize_erasing_regions::<impl rustc_middle::ty::context::TyCtxt>::subst_and_normalize_erasing_regions\r\n  10: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_operand\r\n  11: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold\r\n  12: <alloc::vec::Vec<T> as alloc::vec::SpecFromIter<T,I>>::from_iter\r\n  13: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::run\r\n  14: rustc_mir::const_eval::eval_queries::eval_to_allocation_raw_provider\r\n  15: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_allocation_raw>::compute\r\n  16: rustc_middle::ty::query::plumbing::<impl rustc_query_system::query::QueryContext for rustc_middle::ty::context::TyCtxt>::start_query::{{closure}}::{{closure}}::{{closure}}\r\n  17: rustc_query_system::query::plumbing::get_query_impl\r\n  18: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  19: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_const_value_raw>::compute\r\n  20: rustc_middle::ty::query::plumbing::<impl rustc_query_system::query::QueryContext for rustc_middle::ty::context::TyCtxt>::start_query::{{closure}}::{{closure}}::{{closure}}\r\n  21: rustc_query_system::query::plumbing::get_query_impl\r\n  22: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  23: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_const_value_raw>::compute\r\n  24: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  25: rustc_data_structures::stack::ensure_sufficient_stack\r\n  26: rustc_query_system::query::plumbing::get_query_impl\r\n  27: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_global_id\r\n  28: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_resolve\r\n  29: <rustc_trait_selection::traits::project::AssocTypeNormalizer as rustc_middle::ty::fold::TypeFolder>::fold_const\r\n  30: rustc_middle::ty::structural_impls::<impl rustc_middle::ty::fold::TypeFoldable for &rustc_middle::ty::TyS>::super_fold_with\r\n  31: <rustc_trait_selection::traits::project::AssocTypeNormalizer as rustc_middle::ty::fold::TypeFolder>::fold_ty\r\n  32: rustc_middle::ty::fold::TypeFoldable::fold_with\r\n  33: rustc_middle::ty::fold::TypeFoldable::fold_with\r\n  34: rustc_trait_selection::traits::project::AssocTypeNormalizer::fold\r\n  35: rustc_trait_selection::traits::project::normalize\r\n  36: rustc_trait_selection::traits::fully_normalize\r\n  37: rustc_infer::infer::InferCtxtBuilder::enter\r\n  38: rustc_trait_selection::traits::do_normalize_predicates\r\n  39: rustc_trait_selection::traits::normalize_param_env_or_error\r\n  40: rustc_ty_utils::ty::param_env\r\n  41: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::param_env>::compute\r\n  42: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  43: rustc_data_structures::stack::ensure_sufficient_stack\r\n  44: rustc_query_system::query::plumbing::get_query_impl\r\n  45: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  46: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::check_item_well_formed>::compute\r\n  47: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  48: rustc_data_structures::stack::ensure_sufficient_stack\r\n  49: rustc_query_system::query::plumbing::get_query_impl\r\n  50: rustc_query_system::query::plumbing::ensure_query_impl\r\n  51: rustc_data_structures::sync::par_for_each_in\r\n  52: rustc_hir::hir::Crate::par_visit_all_item_likes\r\n  53: rustc_session::session::Session::track_errors\r\n  54: rustc_typeck::check_crate\r\n  55: rustc_interface::passes::analysis\r\n  56: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  57: rustc_query_system::dep_graph::graph::DepGraph<K>::with_eval_always_task\r\n  58: rustc_data_structures::stack::ensure_sufficient_stack\r\n  59: rustc_query_system::query::plumbing::get_query_impl\r\n  60: rustc_interface::passes::QueryContext::enter\r\n  61: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  62: rustc_span::with_source_map\r\n  63: rustc_interface::interface::create_compiler_and_run\r\n  64: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (f76ecd066 2020-12-15) running on x86_64-pc-windows-gnu\r\n\r\nquery stack during panic:\r\n#0 [eval_to_allocation_raw] const-evaluating + checking `Bar::<N>::{constant#0}`\r\n#1 [eval_to_const_value_raw] simplifying constant for the type system `Bar::<N>::{constant#0}`\r\n#2 [eval_to_const_value_raw] simplifying constant for the type system `Bar::<N>::{constant#0}`\r\n#3 [param_env] computing normalized predicates of `Bar<N>`\r\n#4 [check_item_well_formed] checking that `Bar<N>` is well-formed\r\n#5 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to 5 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0658`.\r\n```", "closed_by": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80077/timeline", "performed_via_github_app": null, "state_reason": "completed"}