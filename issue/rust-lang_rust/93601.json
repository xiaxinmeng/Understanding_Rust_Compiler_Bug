{"url": "https://api.github.com/repos/rust-lang/rust/issues/93601", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93601/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93601/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93601/events", "html_url": "https://github.com/rust-lang/rust/issues/93601", "id": 1122390129, "node_id": "I_kwDOAAsO6M5C5lBx", "number": 93601, "title": "The help message when an invalid calling convention is specified is getting a little unwieldy", "user": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1659943986, "node_id": "MDU6TGFiZWwxNjU5OTQzOTg2", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-verbose", "name": "D-verbose", "color": "c9f7a3", "default": false, "description": "Too much output caused by a single piece of incorrect code"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-02-02T21:09:54Z", "updated_at": "2022-09-23T06:52:57Z", "closed_at": "2022-09-23T06:52:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "After #93561 misspelling a calling convention will output the following note:\n\n```\nLL | extern \"\u8def\u6feb\u72fc\u00e1\u0301\u0301\" fn foo() {}\n   |        ^^^^^^^^^ invalid ABI\n   |\n   = help: valid ABIs: Rust, C, C-unwind, cdecl, cdecl-unwind, stdcall, stdcall-unwind, fastcall, fastcall-unwind, vectorcall, vectorcall-unwind, thiscall, thiscall-unwind, aapcs, aapcs-unwind, win64, win64-unwind, sysv64, sysv64-unwind, ptx-kernel, msp430-interrupt, x86-interrupt, amdgpu-kernel, efiapi, avr-interrupt, avr-non-blocking-interrupt, C-cmse-nonsecure-call, wasm, system, system-unwind, rust-intrinsic, rust-call, platform-intrinsic, unadjusted\n```\n\nThis is getting pretty hard to read!\n\nThere are a couple of improvements we could make:\n\n1. Invoke Levenshtein magic and only suggest some calling conventions that are close, if any (covers mis-spellings);\n    * This could be a `MachineApplicable::MaybeIncorrect` rustfix!\n2. Suggest at most a couple of the most common ABIs (possibly a target-specific list?);\n3. Do not suggest CCs that cannot be used due to them being unstable and feature not being enabled; and finally\n4. Explain where to find a full list (may involve adding CLI surface to rustc).\n\nWith these suggestions in place the message could look like:\n\n```\nLL | extern \"wni64\" fn foo() {}\n   |        ^^^^^^^ invalid ABI\n   |\n   = help: did you mean `win64`?\n   = note: invoke `rustc --print=calling-conventions` for a full list of supported calling conventions\n```\n\nor\n\n```\nLL | extern \"\u8def\u6feb\u72fc\u00e1\u0301\u0301\" fn foo() {}\n   |        ^^^^^^^^^ invalid ABI\n   |\n   = help: commonly used calling conventions include: `C`, `system`, `sysv64`, `win64` and `wasm`\n   = note: invoke `rustc --print=calling-conventions` for a full list of supported calling conventions\n```\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":null}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93601/reactions", "total_count": 6, "+1": 6, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93601/timeline", "performed_via_github_app": null, "state_reason": "completed"}