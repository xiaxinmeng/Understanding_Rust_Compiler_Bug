{"url": "https://api.github.com/repos/rust-lang/rust/issues/84040", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84040/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84040/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84040/events", "html_url": "https://github.com/rust-lang/rust/issues/84040", "id": 854771909, "node_id": "MDU6SXNzdWU4NTQ3NzE5MDk=", "number": 84040, "title": "Refactor the linkage handling of libunwind", "user": {"login": "12101111", "id": 8438475, "node_id": "MDQ6VXNlcjg0Mzg0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/8438475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/12101111", "html_url": "https://github.com/12101111", "followers_url": "https://api.github.com/users/12101111/followers", "following_url": "https://api.github.com/users/12101111/following{/other_user}", "gists_url": "https://api.github.com/users/12101111/gists{/gist_id}", "starred_url": "https://api.github.com/users/12101111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/12101111/subscriptions", "organizations_url": "https://api.github.com/users/12101111/orgs", "repos_url": "https://api.github.com/users/12101111/repos", "events_url": "https://api.github.com/users/12101111/events{/privacy}", "received_events_url": "https://api.github.com/users/12101111/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36953, "node_id": "MDU6TGFiZWwzNjk1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-runtime", "name": "A-runtime", "color": "f7e101", "default": false, "description": "Area: std's runtime and \"pre-main\" init for handling backtraces, unwinds, stack overflows"}, {"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-04-09T18:49:04Z", "updated_at": "2023-03-21T17:56:26Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[`libunwind`](https://github.com/rust-lang/rust/tree/master/library/unwind) currently need a c/cpp library that provide `_Unwind_*` symbols to work. `libgcc_s.so/libgcc_eh.a` from gcc or `libunwind.so/libunwind.a` from llvm can provide those symbols.\r\n\r\nThe `libunwind` crate is built when compiler bootstrap, and there is a flag in `config.toml` that choose which implementation to use. User can't change the implementation after bootstrap ( unless build-std add a flag for this )\r\n\r\n```\r\n# Use LLVM libunwind as the implementation for Rust's unwinder.\r\n# Accepted values are 'in-tree' (formerly true), 'system' or 'no' (formerly false).\r\n#llvm-libunwind = 'no'\r\n```\r\n\r\n- `in-tree` will enable `llvm-libunwind` feature of `libunwind`\r\n- `system` will enable `system-llvm-libunwind` feature of `libunwind`\r\n- `no` won't enable any feature of `libunwind`\r\n\r\nIdeally, the behavior of this flags would be:\r\n\r\n- `in-tree` will compile the intree copy of llvm-libunwind, and link it into libunwind.rlib\r\n- `system` will link the `libunwind.so/libunwind.a` from users' system\r\n- `no` will link the `libgcc_s.so/libgcc_eh.a` from users' system\r\n\r\nBut the current situation is a mess:\r\n\r\n![image](https://user-images.githubusercontent.com/8438475/114220060-161fd700-999e-11eb-8b25-ad5acdda8c99.png)\r\n\r\nThe probems are:\r\n\r\n- if user set `target-feature=+crt-static` , glibc/uclibc will always link `libgcc_eh.a` by `libc` crate, see https://github.com/rust-lang/rust/pull/77386. But `libunwind.a` is still linked if `llvm-libunwind` feature is enabled: https://github.com/rust-lang/rust/blob/e43c2005f250b51e24d294da0b228e0a2dc4d9b2/library/unwind/src/libunwind.rs#L80-L84 This is introduced in https://github.com/rust-lang/rust/commit/8d2f80bab308b7abe62fc6d817f12f21e66bfa53.\r\n- musl target don't follow the `llvm-libunwind` feature and `system-llvm-libunwind` feature.\r\n- when cc=clang, and `llvm-libunwind` feature is enabled, clang don't accept `-std=c++11` and cause bootstrap failed, see https://github.com/rust-lang/rust/issues/69222\r\n- Because musl target don't follow the `system-llvm-libunwind` feature at all, my previous PR https://github.com/rust-lang/rust/pull/80818 break the unwinder if set `target-feature=+crt-static` and enable `system-llvm-libunwind` feature.\r\n- Other target such as fuchsia or BSDs will also break if `system-llvm-libunwind` feature is enabled.\r\n\r\nMy suggestion:\r\n\r\n- limit the `llvm-libunwind=system` option to linux only, as all other system only have one working unwind implementation. ( some changes to `build.rs` )\r\n- musl target should follow the `llvm-libunwind` feature and `system-llvm-libunwind` feature. ( some changes to `lib.rs` )\r\n- check whether https://github.com/rust-lang/rust/commit/8d2f80bab308b7abe62fc6d817f12f21e66bfa53 is unnecessary now\r\n- fix https://github.com/rust-lang/rust/issues/69222", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84040/timeline", "performed_via_github_app": null, "state_reason": null}