{"url": "https://api.github.com/repos/rust-lang/rust/issues/21482", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/21482/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/21482/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/21482/events", "html_url": "https://github.com/rust-lang/rust/issues/21482", "id": 55085729, "node_id": "MDU6SXNzdWU1NTA4NTcyOQ==", "number": 21482, "title": "Metadata is too big for its own good", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13242248, "node_id": "MDU6TGFiZWwxMzI0MjI0OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-metadata", "name": "A-metadata", "color": "f7e101", "default": false, "description": "Area: crate metadata"}, {"id": 37977651, "node_id": "MDU6TGFiZWwzNzk3NzY1MQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/metabug", "name": "metabug", "color": "5319e7", "default": false, "description": "Issues about issues themselves (\"bugs about bugs\")"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2015-01-21T22:17:39Z", "updated_at": "2017-06-13T21:59:06Z", "closed_at": "2017-06-13T21:59:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Couldn't find a previous issue on this, so I'd like to open a tracking issue for this. We've known this for a long time, but the metadata format for the compiler is _far_ too large and there are surely methods to shrink its size and impact. Today when I compile `librustc`, I get the following numbers:\n- `librustc.rlib` - 64MB\n  - `rustc.o` - 12MB\n  - `rust.metadata.bin` - 32MB\n  - `rustc.0.bytecode.deflate` - 21MB\n\nThis means that the metadata is **three times as large** as the code we're generating. Another statistic is that **36% of the binary data of the nightly** is metadata. \n\nThere are, however, a number of competing concerns around metadata:\n- Reading metadata needs to be _fast_. Rustc reads a lot of metadata for upstream crates, and it needs to quickly be able to read the minimum set of metadata for crates. This is currently achieved by storing metadata _uncompressed_ in rlibs to allow LLVM to mmap it directly into the address space and page it in for reading.\n- Metadata needs to be fairly free-form to allow encoding various types of data into it. Ideally it's also extensible into the future so at some point we can use newer compilers against older libraries (this currently not possible for other reasons).\n- All libraries need metadata available in them (currently). This means that if a library produces a dylib/rlib pair (the stdlib is one of the few that does this) then the metadata is duplicated among artifacts. It also means that metadata must be suitable to place inside of a dynamic library.\n\nThere are a few open issues on this already, but none of them are necessarily a silver bullet. Here's a smattering of wishlist ideas or various strategies.\n- Changing metadata formats may gain us a win. Currently we're using a \"variant\" of EBML. #9303\n- Move metadata to a separate crate for faster iteration, allowing external tools to inspect, or in general improving the overall quality of the code. #2213\n- Being able to actually inspect metadata would probably give a helpful hand into what can be eliminated. #2326\n\nMore will likely be added to this over time as it's a metabug.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/21482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/21482/timeline", "performed_via_github_app": null, "state_reason": "completed"}