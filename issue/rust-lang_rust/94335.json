{"url": "https://api.github.com/repos/rust-lang/rust/issues/94335", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94335/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94335/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94335/events", "html_url": "https://github.com/rust-lang/rust/issues/94335", "id": 1149783066, "node_id": "I_kwDOAAsO6M5EiEwa", "number": 94335, "title": "Fix for CVE-2022-21658 is unsafe on some file systems", "user": {"login": "jclulow", "id": 304070, "node_id": "MDQ6VXNlcjMwNDA3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/304070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jclulow", "html_url": "https://github.com/jclulow", "followers_url": "https://api.github.com/users/jclulow/followers", "following_url": "https://api.github.com/users/jclulow/following{/other_user}", "gists_url": "https://api.github.com/users/jclulow/gists{/gist_id}", "starred_url": "https://api.github.com/users/jclulow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jclulow/subscriptions", "organizations_url": "https://api.github.com/users/jclulow/orgs", "repos_url": "https://api.github.com/users/jclulow/repos", "events_url": "https://api.github.com/users/jclulow/events{/privacy}", "received_events_url": "https://api.github.com/users/jclulow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 632931028, "node_id": "MDU6TGFiZWw2MzI5MzEwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-solaris", "name": "O-solaris", "color": "6e6ec0", "default": false, "description": "Operating system: Solaris"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1966877457, "node_id": "MDU6TGFiZWwxOTY2ODc3NDU3", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-critical", "name": "P-critical", "color": "eb6420", "default": false, "description": "Critical priority"}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}, {"id": 2238437210, "node_id": "MDU6TGFiZWwyMjM4NDM3MjEw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-io", "name": "A-io", "color": "f7e101", "default": false, "description": "Area: std::io, std::fs, std::net and std::path"}, {"id": 2635899341, "node_id": "MDU6TGFiZWwyNjM1ODk5MzQx", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-unix", "name": "O-unix", "color": "6e6ec0", "default": false, "description": "Operating system: Unix-like"}], "state": "closed", "locked": false, "assignee": {"login": "hkratz", "id": 3736990, "node_id": "MDQ6VXNlcjM3MzY5OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3736990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkratz", "html_url": "https://github.com/hkratz", "followers_url": "https://api.github.com/users/hkratz/followers", "following_url": "https://api.github.com/users/hkratz/following{/other_user}", "gists_url": "https://api.github.com/users/hkratz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkratz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkratz/subscriptions", "organizations_url": "https://api.github.com/users/hkratz/orgs", "repos_url": "https://api.github.com/users/hkratz/repos", "events_url": "https://api.github.com/users/hkratz/events{/privacy}", "received_events_url": "https://api.github.com/users/hkratz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hkratz", "id": 3736990, "node_id": "MDQ6VXNlcjM3MzY5OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3736990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkratz", "html_url": "https://github.com/hkratz", "followers_url": "https://api.github.com/users/hkratz/followers", "following_url": "https://api.github.com/users/hkratz/following{/other_user}", "gists_url": "https://api.github.com/users/hkratz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkratz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkratz/subscriptions", "organizations_url": "https://api.github.com/users/hkratz/orgs", "repos_url": "https://api.github.com/users/hkratz/repos", "events_url": "https://api.github.com/users/hkratz/events{/privacy}", "received_events_url": "https://api.github.com/users/hkratz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2022-02-24T21:48:27Z", "updated_at": "2022-03-05T07:26:56Z", "closed_at": "2022-03-05T07:26:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The fix for CVE-2022-21658 (#93112, 54e22eb7dbb615bd44355028d3fd867aa93c0972) appears to have introduced a regression that can cause file system corruption on some UNIX systems.\r\n\r\nThe new code will attempt to use [unlinkat(2)](https://illumos.org/man/2/unlinkat) in any case where it does not know what type of file a directory entry represents.  Some systems do not provide that information along with the entry names returned while reading a directory, and even on systems which provide a type hint, that hint may be `DT_UNKNOWN`.  In cases where we do not know the type of the entry, the code tries first to unlink it as if it were something other than a directory:\r\n\r\nhttps://github.com/rust-lang/rust/blob/4b043faba34ccc053a4d0110634c323f6c03765e/library/std/src/sys/unix/fs.rs#L1700-L1712\r\n\r\nThe code assumes that `unlinkat()` on a directory will fail with `EPERM`, or on Linux with the non-standard `EISDIR`, but this is not always the case.  POSIX does suggests `EPERM` as a failure in some, but not all cases:\r\n\r\n> [EPERM]\r\n>    The file named by path is a directory, and either the calling process does not have appropriate privileges, or the implementation prohibits using unlink() on directories.\r\n\r\n(See [unlink](https://pubs.opengroup.org/onlinepubs/9699919799/functions/unlink.html) in _The Open Group Base Specifications Issue 7, 2018 edition_)\r\n\r\nImplementations are not _required_ to prohibit `unlink()` on directories, and indeed UFS file systems on present day illumos and presumably at least some Solaris systems allow `unlink()` of a directory if the user has sufficient privileges.  Other platforms may as well.\r\n\r\nUnfortunately unlinking a directory on UFS causes a sort of file system corruption that requires an unmount and a trip through `fsck` to correct.  Any code that uses `std::fs::remove_dir_all()` on UFS has since started causing that kind of corruption, which took a bit of work to track down.\r\n\r\nI think the fix is probably relatively simple, and has the benefit of not touching the code path where we believe we know what sort of entry we are removing:\r\n\r\n```rust\r\nNone => match cvt(unsafe { unlinkat(fd, child.name_cstr().as_ptr(), libc::AT_REMOVEDIR) }) {\r\n    // type unknown - try to rmdir\r\n    Err(err)\r\n        if err.raw_os_error() == Some(libc::EEXIST)\r\n            || err.raw_os_error() == Some(libc::ENOTEMPTY) =>\r\n    {\r\n        // this is a directory that contains files to remove\r\n        remove_dir_all_recursive(Some(fd), Path::new(&child.file_name()))?;\r\n    }\r\n    Err(err) if err.raw_os_error() == Some(libc::ENOTDIR) {\r\n        // this is some other type of entry that we can just unlink\r\n        cvt(unsafe { unlinkat(fd, child.name_cstr().as_ptr(), 0) })?;\r\n    }\r\n    result => {\r\n        result?;\r\n    }\r\n}\r\n```\r\n\r\nIn short, we should try to `rmdir()` first, rather than `unlink()` first, as that always fails in a safe way that we can detect.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"hkratz\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94335/timeline", "performed_via_github_app": null, "state_reason": "completed"}