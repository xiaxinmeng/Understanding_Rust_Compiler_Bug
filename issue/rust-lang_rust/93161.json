{"url": "https://api.github.com/repos/rust-lang/rust/issues/93161", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93161/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93161/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93161/events", "html_url": "https://github.com/rust-lang/rust/issues/93161", "id": 1110595154, "node_id": "I_kwDOAAsO6M5CMlZS", "number": 93161, "title": "ICE for generators involving Never type", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-01-21T15:28:56Z", "updated_at": "2022-04-20T21:06:05Z", "closed_at": "2022-04-20T21:06:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Building the following code ICEs with current master (not yet on nightly):\r\n```rust\r\n#![feature(never_type)]\r\n\r\nuse std::future::Future;\r\n\r\n// See if we can run a basic `async fn`\r\npub async fn foo(x: &u32, y: u32) -> u32 {\r\n    let y = &y;\r\n    let z = 9;\r\n    let z = &z;\r\n    let y = async { *y + *z }.await;\r\n    let a = 10;\r\n    let a = &a;\r\n    *x + y + *a\r\n}\r\n\r\nasync fn add(x: u32, y: u32) -> u32 {\r\n    let a = async { x + y };\r\n    a.await\r\n}\r\n\r\nasync fn build_aggregate(a: u32, b: u32, c: u32, d: u32) -> u32 {\r\n    let x = (add(a, b).await, add(c, d).await);\r\n    x.0 + x.1\r\n}\r\n\r\nenum Never {}\r\nfn never() -> Never {\r\n    panic!()\r\n}\r\n\r\nasync fn includes_never(crash: bool, x: u32) -> u32 {\r\n    let mut result = async { x * x }.await;\r\n    if !crash {\r\n        return result;\r\n    }\r\n    #[allow(unused)]\r\n    let bad = never();\r\n    result *= async { x + x }.await;\r\n    drop(bad);\r\n    result\r\n}\r\n\r\nasync fn partial_init(x: u32) -> u32 {\r\n    #[allow(unreachable_code)]\r\n    let _x: (String, !) = (String::new(), return async { x + x }.await);\r\n}\r\n\r\nasync fn read_exact(_from: &mut &[u8], _to: &mut [u8]) -> Option<()> {\r\n    Some(())\r\n}\r\n\r\nasync fn hello_world() {\r\n    let data = [0u8; 1];\r\n    let mut reader = &data[..];\r\n\r\n    let mut marker = [0u8; 1];\r\n    read_exact(&mut reader, &mut marker).await.unwrap();\r\n}\r\n\r\nfn run_fut<T>(fut: impl Future<Output = T>) -> T {\r\n    use std::sync::Arc;\r\n    use std::task::{Context, Poll, Wake, Waker};\r\n\r\n    struct MyWaker;\r\n    impl Wake for MyWaker {\r\n        fn wake(self: Arc<Self>) {\r\n            unimplemented!()\r\n        }\r\n    }\r\n\r\n    let waker = Waker::from(Arc::new(MyWaker));\r\n    let mut context = Context::from_waker(&waker);\r\n\r\n    let mut pinned = Box::pin(fut);\r\n    loop {\r\n        match pinned.as_mut().poll(&mut context) {\r\n            Poll::Pending => continue,\r\n            Poll::Ready(v) => return v,\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let x = 5;\r\n    assert_eq!(run_fut(foo(&x, 7)), 31);\r\n    assert_eq!(run_fut(build_aggregate(1, 2, 3, 4)), 10);\r\n    assert_eq!(run_fut(includes_never(false, 4)), 16);\r\n    assert_eq!(run_fut(partial_init(4)), 8);\r\n    run_fut(hello_world());\r\n}\r\n```\r\nOutput:\r\n```\r\nerror: internal compiler error: compiler/rustc_mir_transform/src/generator.rs:755:13: Broken MIR: generator contains type Never in MIR, but typeck only knows about {ResumeTy, bool, u32, impl Future<Output = [async output]>, (), impl Future<Output = [async output]>} and [bool, u32]\r\n  --> tests/run-pass/async-fn.rs:31:53\r\n   |\r\n31 |   async fn includes_never(crash: bool, x: u32) -> u32 {\r\n   |  _____________________________________________________^\r\n32 | |     let mut result = async { x * x }.await;\r\n33 | |     if !crash {\r\n34 | |         return result;\r\n...  |\r\n40 | |     result\r\n41 | | }\r\n   | |_^\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/84e918971d643c6a33067d5125214ab800ce5307/compiler/rustc_errors/src/lib.rs:1115:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.60.0-nightly (84e918971 2022-01-21) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [optimized_mir] optimizing MIR for `includes_never::{closure#0}`\r\n#1 [layout_of] computing layout of `[static generator@tests/run-pass/async-fn.rs:31:53: 41:2]`\r\nend of query stack\r\n\r\n```\r\n\r\nThis is a regression, the same code worked fine yesterday. Likely cause: https://github.com/rust-lang/rust/pull/91032\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"eholk\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93161/timeline", "performed_via_github_app": null, "state_reason": "completed"}