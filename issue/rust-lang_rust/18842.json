{"url": "https://api.github.com/repos/rust-lang/rust/issues/18842", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/18842/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/18842/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/18842/events", "html_url": "https://github.com/rust-lang/rust/issues/18842", "id": 48271318, "node_id": "MDU6SXNzdWU0ODI3MTMxOA==", "number": 18842, "title": "Add an optional string parameter to the `unreachable!()` macro to communicate which invariant was violated", "user": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-10T14:45:36Z", "updated_at": "2014-11-13T08:07:23Z", "closed_at": "2014-11-13T08:07:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In https://github.com/rust-lang/rust/pull/18287 we had the submitter change a `panic!()` to an `unreachable!()` as follows:\n\n```\n_ => panic!(\"Invalid SearchStack.\")\n_ => unreachable!()\n```\n\nWe felt that `unreachable!()` better communicated the intent of \"this code should never panic assuming that the implementation is correct\" (as opposed to `panic!()`, which communicates \"this code should never panic assuming that the user passes in the correct inputs\" (cf. indexing, division) and is generally to be avoided in the stdlib).\n\nHowever, I think it's a shame that by expressing the intent more clearly in the code we're simultaneously losing information regarding which invariant was violated in order to reach the unreachable code.\n\nNote that this isn't _really_ a huge deal, because we can just move the \"Invalid SearchStack\" bit over into a comment next to `unreachable!()`. It's also not _really_ a huge deal for the theoretical bug reporter who's filing an issue upon hitting this code, since `unreachable!()` still includes a filename and line number in its output.\n\nHowever, given the precedent of optional messages set by `panic!()`, I don't think it would be a stretch to imagine that `unreachable!()` could also have an optional message. Usage for the typical case would be the same:\n\n``` rust\nunreachable!();  // task '<main>' panicked at 'internal error: entered unreachable code', unreachable.rs:2\n```\n\n...but could optionally look like this:\n\n``` rust\nunreachable!(\"bamboozled the frobnob\");  // task '<main>' panicked at 'internal error: entered unreachable code: bamboozled the frobnob', unreachable.rs:2\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/18842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/18842/timeline", "performed_via_github_app": null, "state_reason": "completed"}