{"url": "https://api.github.com/repos/rust-lang/rust/issues/95513", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95513/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95513/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95513/events", "html_url": "https://github.com/rust-lang/rust/issues/95513", "id": 1188037074, "node_id": "I_kwDOAAsO6M5G0AHS", "number": 95513, "title": "`unused_crate_dependencies` false-positives in crates with muliple (lib/bin) targets", "user": {"login": "MarijnS95", "id": 2325264, "node_id": "MDQ6VXNlcjIzMjUyNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2325264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarijnS95", "html_url": "https://github.com/MarijnS95", "followers_url": "https://api.github.com/users/MarijnS95/followers", "following_url": "https://api.github.com/users/MarijnS95/following{/other_user}", "gists_url": "https://api.github.com/users/MarijnS95/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarijnS95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarijnS95/subscriptions", "organizations_url": "https://api.github.com/users/MarijnS95/orgs", "repos_url": "https://api.github.com/users/MarijnS95/repos", "events_url": "https://api.github.com/users/MarijnS95/events{/privacy}", "received_events_url": "https://api.github.com/users/MarijnS95/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-03-31T12:55:07Z", "updated_at": "2022-04-01T21:40:29Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\n## I tried this code:\r\n\r\nConsider a crate setup with the `clap` dependency, where `clap` is used only by the `lib` target:\r\n\r\n`Cargo.toml`:\r\n```toml\r\n[package]\r\nname = \"multiple_targets\"\r\n\r\n[dependencies]\r\nclap = { version = \"3\", features = [\"derive\"] }\r\n```\r\n\r\n`src/lib.rs`:\r\n```rust\r\nuse clap::Parser;\r\n\r\n#[derive(Parser)]\r\npub struct Args {}\r\n```\r\n\r\nThis is fine when checking with this lint enabled:\r\n\r\n```console\r\n$ RUSTFLAGS=-Wunused-crate-dependencies cargo c --all --all-targets\r\n```\r\n\r\nNow, consider adding multiple targets to this crate. For the sake of demonstration, we use a `test` and `bin` target that both utilize the library crate defined above:\r\n\r\n`src/main.rs`:\r\n```rust\r\nfn main() {\r\n    let _x = multiple_targets::Args {};\r\n}\r\n```\r\n\r\n`tests/test.rs`:\r\n```rust\r\n#[test]\r\nfn test() {\r\n    let _x = multiple_targets::Args {};\r\n}\r\n```\r\n\r\nWe run the same `check` command again:\r\n\r\n```console\r\n$ RUSTFLAGS=-Wunused-crate-dependencies cargo c --all --all-targets\r\n```\r\n\r\n## I expected to see this happen:\r\n\r\nNo `` external crate `clap` unused `` warnings show up.\r\n\r\n## Instead, this happened:\r\n\r\nEvery target seems to be checked _individually_ against the set of defined crate dependencies, instead of identifying dependencies that are not used by all targets combined (or at the very least lib+bins, as test-only dependencies should reside under `dev-dependencies`). As such, both the test and binary targets above are accused of not using `clap`:\r\n\r\n```rust\r\nwarning: external crate `clap` unused in `multiple_targets`: remove the dependency or add `use clap as _;`\r\n  |\r\n  = note: requested on the command line with `-W unused-crate-dependencies`\r\n  = help: remove unnecessary dependency `clap`\r\n\r\nwarning: external crate `clap` unused in `test`: remove the dependency or add `use clap as _;`\r\n  |\r\n  = note: requested on the command line with `-W unused-crate-dependencies`\r\n  = help: remove unnecessary dependency `clap`\r\n\r\nwarning: `multiple_targets` (bin \"multiple_targets\") generated 1 warning\r\nwarning: `multiple_targets` (bin \"multiple_targets\" test) generated 1 warning (1 duplicate)\r\nwarning: `multiple_targets` (test \"test\") generated 1 warning\r\n```\r\n\r\nFor the most part, especially larger library crates, this makes it impossible to write clean test binaries without having the top half filled with `use {dep_a as _, dep_b as _, ...};`.\r\n\r\nNote that our project currently comprises 92 crates in a single `git` repository, and we use [a single `.cargo/config.toml`](https://github.com/EmbarkStudios/rust-ecosystem/blob/main/lints.toml) in the workspace root to configure lints all at once. It is completely infeasible for us to duplicate these to every existing and up and coming crate, nor keep them in sync after the fact. As such, copy-pasting `#[warn(unused-crate-dependencies)]` across just the `lib.rs`/`main.rs` bits of our code base (where only a single target is used) is pretty much impossible.\r\n\r\n---\r\n\r\n_EDIT: I can understand this warning to show up for the binary (test) targets if they do not reference the library target, but it is particularly confusing when these binary targets at least transitively use the dependency through the library target._\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.61.0-nightly (c5cf08d37 2022-03-30)\r\nbinary: rustc\r\ncommit-hash: c5cf08d37b85f953b132951e868df5b924250fdc\r\ncommit-date: 2022-03-30\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.61.0-nightly\r\nLLVM version: 14.0.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95513/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95513/timeline", "performed_via_github_app": null, "state_reason": null}