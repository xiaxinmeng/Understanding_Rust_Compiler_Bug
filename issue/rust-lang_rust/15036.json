{"url": "https://api.github.com/repos/rust-lang/rust/issues/15036", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/15036/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/15036/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/15036/events", "html_url": "https://github.com/rust-lang/rust/issues/15036", "id": 36064286, "node_id": "MDU6SXNzdWUzNjA2NDI4Ng==", "number": 15036, "title": "Serialization errors can only be created from the `Encoder`/`Decoder` methods", "user": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-06-19T09:55:13Z", "updated_at": "2015-07-27T17:10:17Z", "closed_at": "2015-07-27T17:10:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There is no way for a custom generic `Decodable`/`Encodable` instance (compatible with `#[deriving]` other) to return a new error since it's completely generic, that is,\n\n``` rust\n#[deriving(Decodable)]\nstruct Foo {\n    x: Bar\n}\n\nstruct Bar { y: int }\n\n// E has to be that generic to work with the deriving above,\n// but this means this impl cannot manually create new errors\n// (e.g. if y is supposed to be an even number, there's no way\n// to emit \"error: found odd number\".)\nimpl<E, D: Decoder<E>> Decodable<D, E> for Bar { ... }\n```\n\nIt might be nice if there was a `E: Error` trait (or some such) that `deriving` used, which has some basic constructors.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/15036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/15036/timeline", "performed_via_github_app": null, "state_reason": "completed"}