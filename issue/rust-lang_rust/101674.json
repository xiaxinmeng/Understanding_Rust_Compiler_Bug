{"url": "https://api.github.com/repos/rust-lang/rust/issues/101674", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/101674/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/101674/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/101674/events", "html_url": "https://github.com/rust-lang/rust/issues/101674", "id": 1368845166, "node_id": "I_kwDOAAsO6M5Rlutu", "number": 101674, "title": "Feature request: function in core to ease `&str -> [c_char]` write in no_std", "user": {"login": "tgross35", "id": 13724985, "node_id": "MDQ6VXNlcjEzNzI0OTg1", "avatar_url": "https://avatars.githubusercontent.com/u/13724985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tgross35", "html_url": "https://github.com/tgross35", "followers_url": "https://api.github.com/users/tgross35/followers", "following_url": "https://api.github.com/users/tgross35/following{/other_user}", "gists_url": "https://api.github.com/users/tgross35/gists{/gist_id}", "starred_url": "https://api.github.com/users/tgross35/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tgross35/subscriptions", "organizations_url": "https://api.github.com/users/tgross35/orgs", "repos_url": "https://api.github.com/users/tgross35/repos", "events_url": "https://api.github.com/users/tgross35/events{/privacy}", "received_events_url": "https://api.github.com/users/tgross35/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-09-11T06:17:15Z", "updated_at": "2023-03-31T15:35:11Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Copying a string to a provided buffer is a common pattern in C, and hence in FFI. However, there is really no easy way to perform this action from a Rust `&str` to a FFI buffer `&[c_char]` without going through a `CString`.\r\n\r\nAnother problem is that `CStr` is moving to `core` (great!) but it is _not_ straightforward to construct a `CStr` from `&str`, since a buffer is needed. The FFI issue is present here as well, since `CString` is not available.\r\n\r\nOne of the major annoyances with this task is that `c_char` may map to `u8` or `i8`, but rust strings are always `[u8]`. I think this is a sound case for tranmute, but this is generally discouraged (rightfully so) so it seems like users often wind up using iterating implementations.\r\n\r\nTo help these issues, I propose a function along the lines of the following (panicking) implementation:\r\n\r\n```rs\r\nfn str_as_cstr_to_buf(s: &str, buf: &mut [c_char]) {\r\n    if s.contains('\\0') {\r\n        panic!(\"&str contains null terminator\");\r\n    }\r\n\r\n    // Safety: c_char is u8 or i8, which are both always valid\r\n    let char_buf: &[c_char] = unsafe { transmute(s.as_bytes()) };\r\n    buf[0..s.len()].copy_from_slice(char_buf);\r\n\r\n    buf[s.len()] = b'\\0' as c_char;\r\n}\r\n```\r\n\r\n[playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=96fca8d96c8e24069fedc36f91fd9dea)\r\n\r\nI do not know where the most applicable location for something like this would be, but a standalone function in `core::ffi` seems potentially suitable.\r\n\r\nThere are a few other uncomfortable things working with C strings in FFI, but I think this is one of the more common awkward use cases.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/101674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/101674/timeline", "performed_via_github_app": null, "state_reason": null}