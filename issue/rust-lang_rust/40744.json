{"url": "https://api.github.com/repos/rust-lang/rust/issues/40744", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40744/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40744/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40744/events", "html_url": "https://github.com/rust-lang/rust/issues/40744", "id": 216186241, "node_id": "MDU6SXNzdWUyMTYxODYyNDE=", "number": 40744, "title": "Consider changing the representation for `fn`-item types based on their ABI", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2017-03-22T19:45:32Z", "updated_at": "2020-06-15T17:51:12Z", "closed_at": "2020-06-15T17:51:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, the types for fn-items are always zero-sized. As described in https://github.com/rust-lang/rust/issues/19925, this was defined in RFC 401, but the implementation lagged quite a bit from 1.0, and as a result a number of crates had to be converted because they were relying on transmutes from fn-item types into fn pointers -- generally speaking, these pointers were used in FFI situations. We only recently ended the \"future incompatibility\" warning period and made this into a hard error.\r\n\r\nTowards the end of that FCP, @wycats floated the interesting idea that we could make the **representation** of an fn item dependent on its declared ABI. In particular, while the type of a standard Rust `fn foo()` would still be a zero-sized type, the type of a `extern \"C\" fn foo()` (or, presumably, any ABI intended for FFI, which basically means everything but `Rust`) would change from being zero-sized to being a function pointer:\r\n\r\n```rust\r\nfn foo() { } // sizeof::<typeof(foo)>() == 0\r\n\r\nextern \"C\" fn bar() { } // sizeof::<typeof(bar)>() == sizeof::<usize>()\r\n```\r\n\r\n**Note that the fn item would still have a unique type, it would just not be zero-sized.** Its value would be the same as an equivalent function pointer (in this case, `extern \"C\" fn()`). Because each fn item still has a unique type, it means that if you have a higher-order fn like `fn map<T: Fn()>()` and you invoke it with `map(bar)`, we will still monomorphize a version of `map` that statically dispatches to `bar`. This was the primary motivation for RFC 401.\r\n\r\nWe could indeed go further, and just say that the size of **any** the type for any fn-item has the same representation as a fn-pointer, even if it is not precisely the same type. (This was the case before we made the changes that led to #19925, in fact.) This would mean that it is always safe to transmute a fn item to its corresponding `fn()` type.\r\n\r\nStrictly speaking, changing anything here would be a breaking change from the current behavior, and we would want to test its impact. My hypothesis thought is that it would only make some crates work that are currently broken. It seems unlikely -- but not impossible -- that people are relying on the fact that fn types are currently zero-sized. \r\n\r\nNominating for @rust-lang/lang discussion. I'm not sure the best way to proceed with this idea and want to talk it over. My motivation here is both to \"unbreak\" a certain amount of crates and to potentially ease an ergonomic sore spot with FFI. I know that there is vociferous opposition from others, however, and @eddyb in particular [doesn't want to encourage the use of `transmute`](https://github.com/rust-lang/rust/issues/19925#issuecomment-280801963). [This comment from @wycats is also worth reading.](https://github.com/rust-lang/rust/issues/19925#issuecomment-280789809)", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40744/timeline", "performed_via_github_app": null, "state_reason": "completed"}