{"url": "https://api.github.com/repos/rust-lang/rust/issues/103148", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103148/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103148/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103148/events", "html_url": "https://github.com/rust-lang/rust/issues/103148", "id": 1411572611, "node_id": "I_kwDOAAsO6M5UIuOD", "number": 103148, "title": "When `.into` used and it doesn't exist  but `.try_into()` avaiable, suggest using `try_into()`", "user": {"login": "LeSnake04", "id": 47243761, "node_id": "MDQ6VXNlcjQ3MjQzNzYx", "avatar_url": "https://avatars.githubusercontent.com/u/47243761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSnake04", "html_url": "https://github.com/LeSnake04", "followers_url": "https://api.github.com/users/LeSnake04/followers", "following_url": "https://api.github.com/users/LeSnake04/following{/other_user}", "gists_url": "https://api.github.com/users/LeSnake04/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSnake04/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSnake04/subscriptions", "organizations_url": "https://api.github.com/users/LeSnake04/orgs", "repos_url": "https://api.github.com/users/LeSnake04/repos", "events_url": "https://api.github.com/users/LeSnake04/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSnake04/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2022-10-17T13:20:08Z", "updated_at": "2022-10-18T19:20:09Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\nalong with any information you feel relevant to replicating the bug.\n\nIf you cannot produce a minimal reproduction case (something that would work in\nisolation), please provide the steps or even link to a repository that causes\nthe problematic output to occur.\n-->\n\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=f625bf004abe28d4c42c3c256d8f2aa2\n\n```rust\nstruct Foo {\n    bar: u32,\n}\n\n#[derive(Debug, Clone)]\nstruct Error;\n\nimpl std::fmt::Display for Error {\n    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n        f.write_str(\"Number must be positive\")\n    }\n}\n\nimpl TryFrom<i32> for Foo {\n    type Error = Error;\n\n    fn try_from(value: i32) -> Result<Self, Self::Error> {\n        if value < 0 {\n            Err(Error)\n        } else {\n            Ok(Self { bar: value as u32 })\n        }\n    }\n}\n\nfn main() {\n    let foobar: Foo = 4.into();\n}\n```\n\nThe current output is:\n\n```\nerror[[E0277]](https://doc.rust-lang.org/stable/error-index.html#E0277): the trait bound `Foo: From<{integer}>` is not satisfied\n  --> src/main.rs:27:25\n   |\n27 |     let foobar: Foo = 4.into();\n   |                         ^^^^ the trait `From<{integer}>` is not implemented for `Foo`\n   |\n   = note: required because of the requirements on the impl of `Into<Foo>` for `{integer}`\n\nFor more information about this error, try `rustc --explain E0277`.\n```\n\n<!-- The following is not always necessary. -->\nIdeally the output should look like:\n\n```\nerror[[E0277]](https://doc.rust-lang.org/stable/error-index.html#E0277): the trait bound `Foo: From<{integer}>` is not satisfied\n  --> src/main.rs:27:25\n   |\n27 |     let foobar: Foo = 4.into();\n   |                         ^^^^ the trait `From<{integer}>` is not implemented for `Foo`\n   |\n   = note: required because of the requirements on the impl of `Into<Foo>` for `{integer}`\n   = note: `TryFrom<{integer}>` is implemented. Try using `4.try_into()` instead\n\nFor more information about this error, try `rustc --explain E0277`.\n```\n\n<!--\nIf the problem is not self-explanatory, please provide a rationale for the\nchange.\n-->\nWhen an users uses `.into()` and it doesnt work, they might do an complicated workaround while not realising the libray devs implemented `TryFrom<T>` instead. So it would be cool if the compiler could check if  the struct implements TryFrom instead and suggest try_into() (So it can be automatically fixed by lsp)\n\nIt should work the other way around (`.try_into()` used but `.into()` avaiable) and `Foo::from()`/`Foo::try_from()`\n<!--\nIf dramatically different output is caused by small changes, consider also\nadding them here.\n\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions. The output might also be\ndifferent depending on the Edition.\n-->\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":null}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103148/timeline", "performed_via_github_app": null, "state_reason": null}