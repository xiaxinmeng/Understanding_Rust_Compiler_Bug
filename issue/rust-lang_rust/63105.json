{"url": "https://api.github.com/repos/rust-lang/rust/issues/63105", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63105/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63105/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63105/events", "html_url": "https://github.com/rust-lang/rust/issues/63105", "id": 474071342, "node_id": "MDU6SXNzdWU0NzQwNzEzNDI=", "number": 63105, "title": "Add an option to avoid merging of calls to panic!()", "user": {"login": "jrmuizel", "id": 332653, "node_id": "MDQ6VXNlcjMzMjY1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/332653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrmuizel", "html_url": "https://github.com/jrmuizel", "followers_url": "https://api.github.com/users/jrmuizel/followers", "following_url": "https://api.github.com/users/jrmuizel/following{/other_user}", "gists_url": "https://api.github.com/users/jrmuizel/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrmuizel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrmuizel/subscriptions", "organizations_url": "https://api.github.com/users/jrmuizel/orgs", "repos_url": "https://api.github.com/users/jrmuizel/repos", "events_url": "https://api.github.com/users/jrmuizel/events{/privacy}", "received_events_url": "https://api.github.com/users/jrmuizel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-29T14:05:02Z", "updated_at": "2019-08-06T08:41:41Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given code like:\r\n```rust\r\npub fn f(v: Option<u32>, k: Option<u32>)  -> u32{\r\n    v.unwrap() + k.unwrap()\r\n}\r\n```\r\n\r\nRust generates\r\n```asm\r\nexample::f:\r\n        push    rax\r\n        test    edi, edi\r\n        je      .LBB0_3\r\n        test    edx, edx\r\n        je      .LBB0_3\r\n        mov     eax, ecx\r\n        add     eax, esi\r\n        pop     rcx\r\n        ret\r\n.LBB0_3:\r\n        lea     rdi, [rip + .L__unnamed_1]\r\n        call    qword ptr [rip + core::panicking::panic@GOTPCREL]\r\n        ud2\r\n```\r\nThe two calls to wrap are unified and it's not possible to tell which one failed at runtime.\r\n\r\nI requested a way to tell LLVM not to do this in https://bugs.llvm.org/show_bug.cgi?id=42783 and Reid pointed me at https://cs.chromium.org/chromium/src/base/immediate_crash.h?l=10&rcl=92d78c90964200453b80fe098b367e0838681d09 which is Chrome's attempt to achieve this.\r\n\r\nIt turns out that this approach is pretty easily adapted to Rust. Here's a quick rework of the code above showing it off:\r\n\r\n```rust\r\n#![feature(asm)]\r\n\r\npub enum FOption<T> {\r\n    Some(T),\r\n    None\r\n}\r\n\r\nimpl<T> FOption<T> {\r\n     pub fn unwrap(self) -> T {\r\n        match self {\r\n            FOption::Some(val) => val,\r\n            FOption::None => {\r\n                unsafe { asm!(\"\" : : : : \"volatile\") }\r\n                panic!(\"called `Option::unwrap()` on a `None` value\")\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\npub fn f(v: FOption<u32>, k: FOption<u32>)  -> u32{\r\n    v.unwrap() + k.unwrap()\r\n}\r\n```\r\n\r\nwhich generates:\r\n```asm\r\nexample::f:\r\n        push    rax\r\n        test    edi, edi\r\n        jne     .LBB7_3\r\n        test    edx, edx\r\n        jne     .LBB7_4\r\n        mov     eax, ecx\r\n        add     eax, esi\r\n        pop     rcx\r\n        ret\r\n.LBB7_3:\r\n        call    std::panicking::begin_panic\r\n        ud2\r\n.LBB7_4:\r\n        call    std::panicking::begin_panic\r\n        ud2\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63105/timeline", "performed_via_github_app": null, "state_reason": null}