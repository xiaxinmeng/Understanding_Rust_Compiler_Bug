{"url": "https://api.github.com/repos/rust-lang/rust/issues/42366", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42366/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42366/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42366/events", "html_url": "https://github.com/rust-lang/rust/issues/42366", "id": 233034002, "node_id": "MDU6SXNzdWUyMzMwMzQwMDI=", "number": 42366, "title": "Lint for `let _ =` with `Drop` types?", "user": {"login": "Ekleog", "id": 411447, "node_id": "MDQ6VXNlcjQxMTQ0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/411447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ekleog", "html_url": "https://github.com/Ekleog", "followers_url": "https://api.github.com/users/Ekleog/followers", "following_url": "https://api.github.com/users/Ekleog/following{/other_user}", "gists_url": "https://api.github.com/users/Ekleog/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ekleog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ekleog/subscriptions", "organizations_url": "https://api.github.com/users/Ekleog/orgs", "repos_url": "https://api.github.com/users/Ekleog/repos", "events_url": "https://api.github.com/users/Ekleog/events{/privacy}", "received_events_url": "https://api.github.com/users/Ekleog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-01T23:00:33Z", "updated_at": "2017-06-02T10:54:30Z", "closed_at": "2017-06-02T10:54:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI had an uncomfortable moment today, noticing my `let _ = mutex.lock()` didn't actually keep a lock on the mutex for the scope (it's just a `Mutex<()>`, given it's for some unsafe mmapped shared resource, design choice may be criticized but I think irrelevant to the issue). Changing it to `let _a = mutex.lock()` fixed it.\r\n\r\nI raised this up on #rust-unternals, and @nox and Mutabah helped me understand (I think) why this was a sensible design choice (that is, `_` not moving the value but leaving it where it was, in this case the temporary).\r\n\r\nNow, I think this is treacherous, and could lead to security issues when used unknowingly from `unsafe` code (or deadlocks or other things from normal code), as I did before knowing (thankfully discovered thanks to unit tests).\r\n\r\nSo I think maybe a warning lint could be added when assigning a `Drop` type to `_`, as this 1/ would maybe not be often legitimately done (I think?), and 2/ may have unexpected consequences on the drop order.\r\n\r\nWhat do you think about this?", "closed_by": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42366/timeline", "performed_via_github_app": null, "state_reason": "completed"}