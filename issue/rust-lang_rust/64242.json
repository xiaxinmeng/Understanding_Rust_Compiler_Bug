{"url": "https://api.github.com/repos/rust-lang/rust/issues/64242", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64242/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64242/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64242/events", "html_url": "https://github.com/rust-lang/rust/issues/64242", "id": 490501860, "node_id": "MDU6SXNzdWU0OTA1MDE4NjA=", "number": 64242, "title": "Ambiguity between type ascription and absolute paths", "user": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-09-06T20:08:16Z", "updated_at": "2019-09-07T08:14:58Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I am not sure, but I think the following program should be valid:\r\n\r\n```rust\r\ntype X = ();\r\n\r\nfn main() {\r\n    let ():::X = ();\r\n}\r\n```\r\n\r\nIt currently fails with\r\n\r\n```\r\nerror: expected identifier, found `:`\r\n --> /home/matklad/tmp/main.rs:4:13\r\n  |\r\n4 |     let ():::X = ();\r\n  |             ^ expected identifier\r\n```\r\n\r\nbecause we don't try to decompose `::` token. \r\n\r\nI am not sure what should be the behavior of \r\n\r\n```rust\r\ntype X = ();\r\n\r\nfn main() {\r\n    let Y:::X = ();\r\n}\r\n```\r\n\r\nbut I lean towards allowing it as well, looks like it requires only constant look-ahead to handle.\r\n\r\nAnyway, `rg ':::' --type rust` shows that we don't have a test here.\r\n\r\n@petrochenkov what are your thoughts on this?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64242/timeline", "performed_via_github_app": null, "state_reason": null}