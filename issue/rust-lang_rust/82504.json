{"url": "https://api.github.com/repos/rust-lang/rust/issues/82504", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82504/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82504/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82504/events", "html_url": "https://github.com/rust-lang/rust/issues/82504", "id": 815959826, "node_id": "MDU6SXNzdWU4MTU5NTk4MjY=", "number": 82504, "title": "ICE when path-exporting and using a `macro`-generated `macro_rules!` macro", "user": {"login": "danielhenrymantilla", "id": 9920355, "node_id": "MDQ6VXNlcjk5MjAzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9920355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielhenrymantilla", "html_url": "https://github.com/danielhenrymantilla", "followers_url": "https://api.github.com/users/danielhenrymantilla/followers", "following_url": "https://api.github.com/users/danielhenrymantilla/following{/other_user}", "gists_url": "https://api.github.com/users/danielhenrymantilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielhenrymantilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielhenrymantilla/subscriptions", "organizations_url": "https://api.github.com/users/danielhenrymantilla/orgs", "repos_url": "https://api.github.com/users/danielhenrymantilla/repos", "events_url": "https://api.github.com/users/danielhenrymantilla/events{/privacy}", "received_events_url": "https://api.github.com/users/danielhenrymantilla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1578491841, "node_id": "MDU6TGFiZWwxNTc4NDkxODQx", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-decl_macro", "name": "F-decl_macro", "color": "f9c0cc", "default": false, "description": "`#![feature(decl_macro)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-02-25T00:32:25Z", "updated_at": "2023-04-04T15:51:20Z", "closed_at": "2023-04-04T15:51:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nThe objective was to be able to feature some macro which would yield a `$self:ident` parameter with the def-site of a there-defined `macro` macro so as to mock the suggested `$self` parameter on macros. \r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(decl_macro, trace_macros)]\r\n\r\n// trace_macros!(true); /* to debug: the expansion works successfully */\r\n\r\nmodule::recurse! { 1 1 1 }\r\n\r\npub mod module {\r\n    pub(super) use private::recurse;\r\n\r\n    mod private {\r\n        macro __helper__ ([$dol:tt] $exported_name:ident) {\r\n            macro_rules! $exported_name {(\r\n                $dol(1 $dol($rest:tt)*)?\r\n            ) => (\r\n                $dol(\r\n                //  the idea is for this to have def-site hygiene here\r\n                //  vvvv\r\n                    self::$exported_name! { $dol($rest)* }\r\n                )?\r\n            )} pub(crate) use $exported_name;\r\n        }\r\n        __helper__! { [$] recurse }\r\n    }\r\n}\r\n\r\n```\r\n\r\n  - [Playground with this simpler example](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=b6d68b105f76362740727080bf5ca2cd)\r\n\r\n  - [Original code & Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=854495a6a977ba25c3ded08c73e9dc3c)\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.52.0-nightly (fe1bf8e05 2021-02-23)\r\nbinary: rustc\r\ncommit-hash: fe1bf8e05c39bdcc73fc09e246b7209444e389bc\r\ncommit-date: 2021-02-23\r\nhost: x86_64-apple-darwin\r\nrelease: 1.52.0-nightly\r\nLLVM version: 11.0.1\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: expansion entered force mode without producing any errors\r\n  --> src/lib.rs:29:1\r\n   |\r\n29 | outer::recurse! { 1 1 1 }\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at compiler/rustc_expand/src/expand.rs:447:34\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', compiler/rustc_errors/src/lib.rs:1012:13\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.52.0-nightly (fe1bf8e05 2021-02-23) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   \u2026\r\n   5:        0x1020a36a8 - rustc_driver::report_ice::hcdbc085c8141570d\r\n   \u2026\r\n  10:        0x1093532ab - std::panicking::begin_panic_fmt::hba7ec5d426758edb\r\n  11:        0x10600ee16 - rustc_errors::HandlerInner::flush_delayed::h161e3beabf00546a\r\n  12:        0x10600b10b - <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop::hde0ac14a81f422db\r\n  13:        0x1020ab07d - core::ptr::drop_in_place<rustc_session::parse::ParseSess>::h0cb46aa2558b566b\r\n  14:        0x1020afda8 - <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop::h5a4e1115e34fca86\r\n  15:        0x102110835 - core::ptr::drop_in_place<rustc_interface::interface::Compiler>::hbf9fc4b317f8829b\r\n  16:        0x10210cd08 - rustc_span::with_source_map::hdc8b53d5836d0f69\r\n  17:        0x1020ba394 - rustc_interface::interface::create_compiler_and_run::h2e5f4f156384205a\r\n  18:        0x1020b2db9 - scoped_tls::ScopedKey<T>::set::hb5d8ea6cc29ec656\r\n  19:        0x1020b4101 - std::sys_common::backtrace::__rust_begin_short_backtrace::h316820ab0a243dd5\r\n  20:        0x1020d85e9 - core::ops::function::FnOnce::call_once{{vtable.shim}}::h0dcd073e2532982e\r\n  21:        0x1092d897d - std::sys::unix::thread::Thread::new::thread_start::h4da435b3f287e7dd\r\n  22:     0x7fff20323950 - __pthread_start\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\ncc @Aaron1011 ", "closed_by": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82504/timeline", "performed_via_github_app": null, "state_reason": "completed"}