{"url": "https://api.github.com/repos/rust-lang/rust/issues/84156", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84156/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84156/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84156/events", "html_url": "https://github.com/rust-lang/rust/issues/84156", "id": 856862528, "node_id": "MDU6SXNzdWU4NTY4NjI1Mjg=", "number": 84156, "title": "Include explicit (de)referencing in E0283", "user": {"login": "eggyal", "id": 3089613, "node_id": "MDQ6VXNlcjMwODk2MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3089613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eggyal", "html_url": "https://github.com/eggyal", "followers_url": "https://api.github.com/users/eggyal/followers", "following_url": "https://api.github.com/users/eggyal/following{/other_user}", "gists_url": "https://api.github.com/users/eggyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/eggyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eggyal/subscriptions", "organizations_url": "https://api.github.com/users/eggyal/orgs", "repos_url": "https://api.github.com/users/eggyal/repos", "events_url": "https://api.github.com/users/eggyal/events{/privacy}", "received_events_url": "https://api.github.com/users/eggyal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 800802916, "node_id": "MDU6TGFiZWw4MDA4MDI5MTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-coercions", "name": "A-coercions", "color": "f7e101", "default": false, "description": "Area: implicit and explicit `expr as Type` coercions"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-04-13T11:20:32Z", "updated_at": "2021-04-13T11:21:11Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=7918725081536611d2f951eb6d0d0a91)):\r\n\r\n```rust\r\nuse std::borrow::Borrow;\r\n\r\nfn main() {\r\n    let v = vec![0];\r\n    v.borrow();\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0283]: type annotations needed\r\n --> src/main.rs:5:7\r\n  |\r\n5 |     v.borrow();\r\n  |     --^^^^^^--\r\n  |     | |\r\n  |     | cannot infer type for type parameter `Borrowed` declared on the trait `Borrow`\r\n  |     this method call resolves to `&Borrowed`\r\n  |     help: use the fully qualified path for the potential candidate: `<Vec<T> as Borrow<[T]>>::borrow(v)`\r\n  |\r\n  = note: cannot satisfy `Vec<i32>: Borrow<_>`\r\n```\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\nerror[E0283]: type annotations needed\r\n --> src/main.rs:5:7\r\n  |\r\n5 |     v.borrow();\r\n  |     --^^^^^^--\r\n  |     | |\r\n  |     | cannot infer type for type parameter `Borrowed` declared on the trait `Borrow`\r\n  |     this method call resolves to `&Borrowed`\r\n  |     help: use the fully qualified path for the potential candidate: `<Vec<T> as Borrow<[T]>>::borrow(&v)`\r\n  |\r\n  = note: cannot satisfy `Vec<i32>: Borrow<_>`\r\n```\r\n\r\nThe compiler already determined that the `v` needed to be deref coerced to `&Borrowed` but then suggested invoking `::borrow(v)` which obviously won't type check; it should suggest invoking `::borrow(&v)` instead (and likewise for the mutable case).  If dereferencing was required in the method resolution, then that should also be included in the suggestion: `::borrow(&**v)` etc.\r\n\r\n@rustbot label: A-coercions A-diagnostics A-inference -C-enhancement C-bug D-invalid-suggestion", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84156/timeline", "performed_via_github_app": null, "state_reason": null}