{"url": "https://api.github.com/repos/rust-lang/rust/issues/49118", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49118/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49118/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49118/events", "html_url": "https://github.com/rust-lang/rust/issues/49118", "id": 306180598, "node_id": "MDU6SXNzdWUzMDYxODA1OTg=", "number": 49118, "title": "Lifetimes: Shouldn't the compiler figure out and prolong lifetimes of temporary values where it makes sense?", "user": {"login": "axos88", "id": 1281218, "node_id": "MDQ6VXNlcjEyODEyMTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1281218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axos88", "html_url": "https://github.com/axos88", "followers_url": "https://api.github.com/users/axos88/followers", "following_url": "https://api.github.com/users/axos88/following{/other_user}", "gists_url": "https://api.github.com/users/axos88/gists{/gist_id}", "starred_url": "https://api.github.com/users/axos88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axos88/subscriptions", "organizations_url": "https://api.github.com/users/axos88/orgs", "repos_url": "https://api.github.com/users/axos88/repos", "events_url": "https://api.github.com/users/axos88/events{/privacy}", "received_events_url": "https://api.github.com/users/axos88/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 867483626, "node_id": "MDU6TGFiZWw4Njc0ODM2MjY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-fixed-by-NLL", "name": "NLL-fixed-by-NLL", "color": "f799ea", "default": false, "description": "Bugs fixed, but only when NLL is enabled."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-03-17T18:48:35Z", "updated_at": "2021-02-18T18:41:57Z", "closed_at": "2018-07-03T16:54:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reading the book currently, and could not really grasp why it's not possible to create a cons list without Box<>, so I tried it...\r\n\r\nThe results were... not satisfactory for me... Shouldn't the compiler be smart enough and prolong the lifetimes of the temporary values in case of \"error\"? Or is that a not-as-easy-as-it-sounds problem?\r\n\r\nI'm pretty sure there are other real-life scenarios where I wouldn't want to name all the intermediary values...\r\n\r\nBtw, shouldn't the first case fail to compile as well, since the lifetime of the shadowed variable is supposed to end when it gets shadowed, doesn't it?\r\n\r\n\r\n```\r\nenum List<'a, T: Copy + 'a> {\r\n    Nil,\r\n    Con(T, &'a List<'a, T>)\r\n}\r\n\r\nimpl<'a, T: Copy + 'a> List<'a, T> {\r\n    fn push(&'a self, value: T ) -> List<'a, T> {\r\n        List::Con(value, self)\r\n    }\r\n}\r\n\r\n\r\nfn main() {\r\n    let works = List::Nil;\r\n    let works = works.push(7);\r\n    let works = works.push(5);\r\n    let works = works.push(3);\r\n\r\n    // temporary value does not live long enough\r\n    let error = List::Nil\r\n        .push(7)\r\n        .push(5)\r\n        .push(3);\r\n}\r\n\r\n```\r\n\r\n```\r\nerror[E0597]: borrowed value does not live long enough\r\n  --> src/main.rs:19:17\r\n   |\r\n19 |       let error = List::Nil\r\n   |  _________________^\r\n20 | |         .push(7)\r\n21 | |         .push(5)\r\n   | |________________^ temporary value does not live long enough\r\n22 |           .push(3);\r\n   |                   - temporary value dropped here while still borrowed\r\n23 |   }\r\n   |   - temporary value needs to live until here\r\n   |\r\n   = note: consider using a `let` binding to increase its lifetime\r\n```\r\n", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49118/timeline", "performed_via_github_app": null, "state_reason": "completed"}