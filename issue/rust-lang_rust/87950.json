{"url": "https://api.github.com/repos/rust-lang/rust/issues/87950", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87950/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87950/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87950/events", "html_url": "https://github.com/rust-lang/rust/issues/87950", "id": 968349899, "node_id": "MDU6SXNzdWU5NjgzNDk4OTk=", "number": 87950, "title": "Optimization of iteration over enums", "user": {"login": "vandenheuvel", "id": 20440137, "node_id": "MDQ6VXNlcjIwNDQwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/20440137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vandenheuvel", "html_url": "https://github.com/vandenheuvel", "followers_url": "https://api.github.com/users/vandenheuvel/followers", "following_url": "https://api.github.com/users/vandenheuvel/following{/other_user}", "gists_url": "https://api.github.com/users/vandenheuvel/gists{/gist_id}", "starred_url": "https://api.github.com/users/vandenheuvel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vandenheuvel/subscriptions", "organizations_url": "https://api.github.com/users/vandenheuvel/orgs", "repos_url": "https://api.github.com/users/vandenheuvel/repos", "events_url": "https://api.github.com/users/vandenheuvel/events{/privacy}", "received_events_url": "https://api.github.com/users/vandenheuvel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 889209675, "node_id": "MDU6TGFiZWw4ODkyMDk2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-iterators", "name": "A-iterators", "color": "f7e101", "default": false, "description": "Area: Iterators"}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-08-12T08:32:23Z", "updated_at": "2023-01-06T22:00:59Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Almost all implementations of `Iterator::next` for enum types will at some point branch based on the variant of the current value. When that variant does not change during iteration, it is beneficial to optimize usages of `next` to avoid repeatedly branching.\r\n\r\nConsider [this example](https://rust.godbolt.org/z/rbsrb6ocr). The right snipped is equal to the left snipped except for the added fold implementation. Without that extra fold implementation, the resulting code is quite inefficient in comparison to the `goal` function.\r\n\r\nFor a human being, this situation is quite easy to reason about. Would it be possible to include an optimization for this situation?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87950/timeline", "performed_via_github_app": null, "state_reason": null}