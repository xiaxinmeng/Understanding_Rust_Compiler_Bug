{"url": "https://api.github.com/repos/rust-lang/rust/issues/14399", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/14399/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/14399/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/14399/events", "html_url": "https://github.com/rust-lang/rust/issues/14399", "id": 34227543, "node_id": "MDU6SXNzdWUzNDIyNzU0Mw==", "number": 14399, "title": "'could not find method while translating' while using macros", "user": {"login": "indefini", "id": 4736431, "node_id": "MDQ6VXNlcjQ3MzY0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/4736431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/indefini", "html_url": "https://github.com/indefini", "followers_url": "https://api.github.com/users/indefini/followers", "following_url": "https://api.github.com/users/indefini/following{/other_user}", "gists_url": "https://api.github.com/users/indefini/gists{/gist_id}", "starred_url": "https://api.github.com/users/indefini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/indefini/subscriptions", "organizations_url": "https://api.github.com/users/indefini/orgs", "repos_url": "https://api.github.com/users/indefini/repos", "events_url": "https://api.github.com/users/indefini/events{/privacy}", "received_events_url": "https://api.github.com/users/indefini/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-05-24T06:42:08Z", "updated_at": "2014-06-19T11:11:32Z", "closed_at": "2014-06-19T11:11:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Platform:\nArchlinux x86_64\nrustc 0.11.0-pre (4462687 2014-05-23 16:31:20 -0700)\nhost: x86_64-unknown-linux-gnu\n\nWhile using macros, I got this error:\n\nerror: internal compiler error: unexpected failure\nnote: the compiler hit an unexpected failure path. this is a bug.\ntask 'rustc' failed at 'could not find method while translating', /home/chris/pkg/rust-git/src/rust/src/libstd/option.rs:167\n\nHere is the code, let me know if you prefer a backtrace:\n\n``` rust\n#![feature(macro_rules)]\n\nmacro_rules! new_test(\n  ($member:ident, String) => (\n    self.$member.to_owned()\n    );\n  ($member:ident, Struct) => (\n    self.$member.clone()\n    );\n  ($member:ident, $yep:expr) => (\n    self.$member\n    )\n  )\n\nmacro_rules! new_test_set(\n  ($member:ident, String) => (\n    match value {\n      &String(ref s) => {\n        self.$member = s.to_owned()\n      }\n      _ => {\n        println!(\"cant set {:?} to {}, because it is a String\", value, name);\n      }\n    }\n    );\n  ($member:ident, Struct) => (\n    match value {\n      &Struct(ref s) => {\n        for p in s.fields().iter() {\n          self.$member.set_property(\n            p.as_slice(),\n            & s.get_property(p.as_slice()));\n        }\n      }\n      _ => {\n        println!(\"cant set {:?} to {}, because it is a Struct\", value, name);\n      }\n    }\n    );\n  ($member:ident, $yep:ident) => (\n    match value {\n      &$yep(f) => {\n        self.$member = f;\n      }\n      _ => {\n        println!(\"cant set {:?} to {}, because it is a {}\", value, name, stringify!($yep));\n      }\n    }\n    )\n  )\n\nmacro_rules! property_impl(\n  ($my_type:ty, [ $($member:ident,$mytype:ident)|+ ]) => (\n\n    impl Property for $my_type\n    {\n      fn fields(&self) -> Vec<StrBuf>\n        {\n          return vec!( \n          $(\n            stringify!($member).to_owned(),\n            )+\n          );\n        }\n\n        fn get_property(&self, name: &str) -> PropertyType\n        {\n          $(\n            if name == stringify!($member)\n            {\n              return $mytype(new_test!($member, $mytype))\n            }\n           )+\n          else {\n            Float(0.0)\n          }\n        }\n\n        fn set_property(&mut self, name: &str, value: &PropertyType)\n        {\n          $(\n            if name == stringify!($member)\n            {\n              new_test_set!($member, $mytype)\n              return;\n            }\n           )+\n        }\n    }\n  );\n)\n\n\n#[deriving(Clone)]\npub struct Vec3\n{\n  x : f64,\n  y : f64,\n  z : f64\n}\n\n#[deriving(Clone)]\npub struct Quat\n{\n  x : f64,\n  y : f64,\n  z : f64,\n  w : f64,\n  t : i32,\n  v : Box<Vec3>,\n  txt : StrBuf\n}\n\nproperty_impl!(Vec3, [x,Float|y,Float|z,Float])\n\n// Change this line to avoid the bug\n//property_impl!(Quat, [x,Float|y,Float|z,Float|t,Int|txt,String])\nproperty_impl!(Quat, [x,Float|y,Float|z,Float|t,Int|txt,String|v,Struct])\n\nenum PropertyType {\n  Int(i32),\n  Float(f64),\n  String(StrBuf),\n  Struct(Box<Property>),\n}\n\ntrait Property {\n  fn fields(&self) -> Vec<StrBuf>;\n  fn get_property(&self, name: &str) -> PropertyType;\n  fn set_property(&mut self, name: &str, value: &PropertyType);\n}\n\nfn main() {\n\n  let q = Quat{x:1.0, y:999.0, z:22.0, w:123.0,t:44,v:box Vec3{x:4.0,y:6.7,z:8.9}, txt:\"test\".to_owned()};\n  println!(\" quat {:?} \", q.get_property(\"z\"));\n\n}\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/14399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/14399/timeline", "performed_via_github_app": null, "state_reason": "completed"}