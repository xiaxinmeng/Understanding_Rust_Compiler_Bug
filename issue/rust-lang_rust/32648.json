{"url": "https://api.github.com/repos/rust-lang/rust/issues/32648", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/32648/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/32648/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/32648/events", "html_url": "https://github.com/rust-lang/rust/issues/32648", "id": 144911982, "node_id": "MDU6SXNzdWUxNDQ5MTE5ODI=", "number": 32648, "title": "Invocation of feature-gated macros inside `#[cfg]`-guarded code is not checked.", "user": {"login": "LeoTestard", "id": 907750, "node_id": "MDQ6VXNlcjkwNzc1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/907750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeoTestard", "html_url": "https://github.com/LeoTestard", "followers_url": "https://api.github.com/users/LeoTestard/followers", "following_url": "https://api.github.com/users/LeoTestard/following{/other_user}", "gists_url": "https://api.github.com/users/LeoTestard/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeoTestard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeoTestard/subscriptions", "organizations_url": "https://api.github.com/users/LeoTestard/orgs", "repos_url": "https://api.github.com/users/LeoTestard/repos", "events_url": "https://api.github.com/users/LeoTestard/events{/privacy}", "received_events_url": "https://api.github.com/users/LeoTestard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-03-31T14:05:32Z", "updated_at": "2016-04-28T04:52:48Z", "closed_at": "2016-04-28T04:52:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While reading libsyntax code, I came across this piece of code:\n\n``` rust\nimpl<'a, 'v> Visitor<'v> for MacroVisitor<'a> {\n    fn visit_mac(&mut self, mac: &ast::Mac) {\n        let path = &mac.node.path;\n        let name = path.segments.last().unwrap().identifier.name.as_str();\n\n        // Issue 22234: If you add a new case here, make sure to also\n        // add code to catch the macro during or after expansion.\n        //\n        // We still keep this MacroVisitor (rather than *solely*\n        // relying on catching cases during or after expansion) to\n        // catch uses of these macros within conditionally-compiled\n        // code, e.g. `#[cfg]`-guarded functions.\n\n        // [...]\n    }\n\n   // [...]\n}\n```\n\nThe comment clearly states that this visitor (MacroVisitor, called by the driver using `syntax::feature_gate::check_macros`) is there only to check use of such macros inside `#[cfg]`-guarded code.\n\nExcept that this is not the case:\n\n``` rust\n\ufeff\ufeff\ufeff\ufeff#[cfg(foo)]\nfn pwet() { asm!() }\n\nfn main() {}\n```\n\n\ufeff\ufeff\ufeff\ufeffThis compiles on both stable and nightly. The reason for that is that the call to `check_crate_macros` occur after the call to `strip_unconfigured_items`. If we still want to catch those invocations, it should be the opposite, although this may have other implications (a comment above the call to `strip_unconfigured_items` states that this must come before anything else because of `#[cfg_attr]`, I'm not sure if this is relevant for feature-gate checking).\nOtherwise, if we want to allow them, then this whole piece of code is useless and should be removed.\nI think a lot of crates use `#[cfg]` to differenciate between stable and nightly builds, especially crates using syntax extensions. For example, we might want to allow this:\n\n``` rust\n#![cfg_attr(nightly, feature(asm))]\n\n#[cfg(nightly)]      fn main() { unsafe { asm!(\"\") } }\n#[cfg(not(nightly))] fn main() {}\n```\n\n(I took `asm!()` as example here because it's one of the feature-gated macros but others might be more relevant I guess.)\n\n(cc @pnkfelix: This is the weird thing I told you about earlier.)\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/32648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/32648/timeline", "performed_via_github_app": null, "state_reason": "completed"}