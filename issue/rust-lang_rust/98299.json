{"url": "https://api.github.com/repos/rust-lang/rust/issues/98299", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98299/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98299/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98299/events", "html_url": "https://github.com/rust-lang/rust/issues/98299", "id": 1277089291, "node_id": "I_kwDOAAsO6M5MHtYL", "number": 98299, "title": "Mapping to black_box crashes compiler", "user": {"login": "SUPERCILEX", "id": 9490724, "node_id": "MDQ6VXNlcjk0OTA3MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/9490724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SUPERCILEX", "html_url": "https://github.com/SUPERCILEX", "followers_url": "https://api.github.com/users/SUPERCILEX/followers", "following_url": "https://api.github.com/users/SUPERCILEX/following{/other_user}", "gists_url": "https://api.github.com/users/SUPERCILEX/gists{/gist_id}", "starred_url": "https://api.github.com/users/SUPERCILEX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SUPERCILEX/subscriptions", "organizations_url": "https://api.github.com/users/SUPERCILEX/orgs", "repos_url": "https://api.github.com/users/SUPERCILEX/repos", "events_url": "https://api.github.com/users/SUPERCILEX/events{/privacy}", "received_events_url": "https://api.github.com/users/SUPERCILEX/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2022-06-20T15:24:28Z", "updated_at": "2022-06-21T16:24:54Z", "closed_at": "2022-06-21T16:24:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nhttps://godbolt.org/z/fhv5voE5E\r\n\r\n```Rust\r\n#![feature(core_intrinsics)]\r\n#![feature(untagged_unions)]\r\n#![feature(bench_black_box)]\r\n\r\nuse std::convert::{TryFrom, TryInto};\r\nuse std::error::Error;\r\nuse std::ffi::{CStr, CString};\r\nuse std::mem::{ManuallyDrop, MaybeUninit};\r\nuse std::ops::Deref;\r\nuse std::path::Path;\r\nuse std::slice;\r\nuse std::{io, mem, ptr};\r\nuse std::os::unix::ffi::OsStrExt;\r\nuse std::hint::black_box;\r\n\r\nfn test_usage(p: &Path) {\r\n    SmallCString::try_from(p).map(|cstr| black_box(cstr));\r\n}\r\n\r\n// Make sure to stay under 4096 so the compiler doesn't insert a probe frame:\r\n// https://docs.rs/compiler_builtins/latest/compiler_builtins/probestack/index.html\r\n#[cfg(not(target_os = \"espidf\"))]\r\nconst MAX_STACK_ALLOCATION: usize = 384;\r\n#[cfg(target_os = \"espidf\")]\r\nconst MAX_STACK_ALLOCATION: usize = 32;\r\n\r\nunion Data<const N: usize> {\r\n    stack: MaybeUninit<[u8; N]>,\r\n    heap: ManuallyDrop<CString>,\r\n}\r\n\r\n#[derive(Debug)]\r\npub struct UnexpectedNulError {}\r\n\r\nimpl<E: Error> From<E> for UnexpectedNulError {\r\n    fn from(_: E) -> Self {\r\n        UnexpectedNulError {}\r\n    }\r\n}\r\n\r\nimpl From<UnexpectedNulError> for io::Error {\r\n    fn from(_: UnexpectedNulError) -> Self {\r\n        todo!()\r\n    }\r\n}\r\n\r\n/// Fast, immutable CStr view allocated on the stack when possible with a fallback heap allocation.\r\npub struct SmallCString<const N: usize = MAX_STACK_ALLOCATION> {\r\n    len: usize,\r\n    data: Data<N>,\r\n}\r\n\r\nimpl<const N: usize> TryFrom<&Path> for SmallCString<N> {\r\n    type Error = UnexpectedNulError;\r\n\r\n    fn try_from(path: &Path) -> Result<Self, Self::Error> {\r\n        path.as_os_str().as_bytes().try_into()\r\n    }\r\n}\r\n\r\nimpl<const N: usize> TryFrom<&[u8]> for SmallCString<N> {\r\n    type Error = UnexpectedNulError;\r\n\r\n    fn try_from(bytes: &[u8]) -> Result<Self, Self::Error> {\r\n        if bytes.len() >= N {\r\n            return Self::alloc_cstring(bytes);\r\n        }\r\n\r\n        // Validate the bytes\r\n        if bytes.iter().any(|b|*b == 0) {\r\n            return Self::invalid_bytes_err();\r\n        }\r\n\r\n        let mut buf = MaybeUninit::uninit();\r\n        let buf_ptr = buf.as_mut_ptr() as *mut u8;\r\n\r\n        unsafe {\r\n            ptr::copy_nonoverlapping(bytes.as_ptr(), buf_ptr, bytes.len());\r\n            buf_ptr.add(bytes.len()).write(0);\r\n        }\r\n\r\n        Ok(SmallCString { data: Data { stack: buf }, len: bytes.len() + 1 })\r\n    }\r\n}\r\n\r\nimpl<const N: usize> SmallCString<N> {\r\n    #[cold]\r\n    #[inline(never)]\r\n    fn alloc_cstring(bytes: &[u8]) -> Result<SmallCString<N>, UnexpectedNulError> {\r\n        Ok(SmallCString {\r\n            data: Data { heap: ManuallyDrop::new(CString::new(bytes)?) },\r\n            len: bytes.len() + 1,\r\n        })\r\n    }\r\n\r\n    #[cold]\r\n    #[inline(never)]\r\n    fn invalid_bytes_err() -> Result<SmallCString<N>, UnexpectedNulError> {\r\n        Err(UnexpectedNulError {})\r\n    }\r\n}\r\n\r\nimpl Deref for SmallCString {\r\n    type Target = CStr;\r\n\r\n    fn deref(&self) -> &Self::Target {\r\n        self.as_ref()\r\n    }\r\n}\r\n\r\nimpl<const N: usize> AsRef<CStr> for SmallCString<N> {\r\n    fn as_ref(&self) -> &CStr {\r\n        unsafe {\r\n            if self.len <= N {\r\n                let path = slice::from_raw_parts(self.data.stack.as_ptr() as *const u8, self.len);\r\n                // SAFETY: the bytes were validated in ::new with memchr\r\n                CStr::from_bytes_with_nul_unchecked(mem::transmute(path))\r\n            } else {\r\n                self.data.heap.as_c_str()\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nimpl<const N: usize> Drop for SmallCString<N> {\r\n    fn drop(&mut self) {\r\n        unsafe {\r\n            if self.len > N {\r\n                ManuallyDrop::drop(&mut self.data.heap)\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: /rustc/21e9336fe81a1fce364349bb7a35a0347c369f34/compiler/rustc_infer/src/infer/nll_relate/mod.rs:665:17: unexpected inference var Const { ty: usize, kind: Infer(Var(_#0c)) }\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/21e9336fe81a1fce364349bb7a35a0347c369f34/compiler/rustc_errors/src/lib.rs:1391:9\r\nstack backtrace:\r\n   0:     0x7ffbeacfbfad - std::backtrace_rs::backtrace::libunwind::trace::h72e50fb92da0949e\r\n                               at /rustc/21e9336fe81a1fce364349bb7a35a0347c369f34/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7ffbeacfbfad - std::backtrace_rs::backtrace::trace_unsynchronized::hbae920ae073134bd\r\n                               at /rustc/21e9336fe81a1fce364349bb7a35a0347c369f34/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7ffbeacfbfad - std::sys_common::backtrace::_print_fmt::h75c75895c2dc7a02\r\n                               at /rustc/21e9336fe81a1fce364349bb7a35a0347c369f34/library/std/src/sys_common/backtrace.rs:66:5\r\n   3:     0x7ffbeacfbfad - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h22f51d8130e18285\r\n                               at /rustc/21e9336fe81a1fce364349bb7a35a0347c369f34/library/std/src/sys_common/backtrace.rs:45:22\r\n   4:     0x7ffbead57d7c - core::fmt::write::h34460b9cb19018a8\r\n                               at /rustc/21e9336fe81a1fce364349bb7a35a0347c369f34/library/core/src/fmt/mod.rs:1196:17\r\n   5:     0x7ffbeaced6d1 - std::io::Write::write_fmt::hdf3a96965a9806fb\r\n                               at /rustc/21e9336fe81a1fce364349bb7a35a0347c369f34/library/std/src/io/mod.rs:1654:15\r\n   6:     0x7ffbeacfec85 - std::sys_common::backtrace::_print::h1bcfb7d99cf40e04\r\n                               at /rustc/21e9336fe81a1fce364349bb7a35a0347c369f34/library/std/src/sys_common/backtrace.rs:48:5\r\n   7:     0x7ffbeacfec85 - std::sys_common::backtrace::print::h65fadbbd0f516d99\r\n                               at /rustc/21e9336fe81a1fce364349bb7a35a0347c369f34/library/std/src/sys_common/backtrace.rs:35:9\r\n   8:     0x7ffbeacfec85 - std::panicking::default_hook::{{closure}}::h20497521a47f65d6\r\n                               at /rustc/21e9336fe81a1fce364349bb7a35a0347c369f34/library/std/src/panicking.rs:295:22\r\n   9:     0x7ffbeacfe9a6 - std::panicking::default_hook::h9d02598e8fa9348e\r\n                               at /rustc/21e9336fe81a1fce364349bb7a35a0347c369f34/library/std/src/panicking.rs:314:9\r\n  10:     0x7ffbeb4d7d41 - rustc_driver[5d44a3b446ca22b6]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n  11:     0x7ffbeacff35a - std::panicking::rust_panic_with_hook::ha09262393f7932d5\r\n                               at /rustc/21e9336fe81a1fce364349bb7a35a0347c369f34/library/std/src/panicking.rs:702:17\r\n  12:     0x7ffbec5899f1 - std[3d85facbacbebd2b]::panicking::begin_panic::<rustc_errors[3cd36318e3613d20]::ExplicitBug>::{closure#0}\r\n  13:     0x7ffbec5894d6 - std[3d85facbacbebd2b]::sys_common::backtrace::__rust_end_short_backtrace::<std[3d85facbacbebd2b]::panicking::begin_panic<rustc_errors[3cd36318e3613d20]::ExplicitBug>::{closure#0}, !>\r\n  14:     0x7ffbec5005a6 - std[3d85facbacbebd2b]::panicking::begin_panic::<rustc_errors[3cd36318e3613d20]::ExplicitBug>\r\n  15:     0x7ffbec51b2f6 - std[3d85facbacbebd2b]::panic::panic_any::<rustc_errors[3cd36318e3613d20]::ExplicitBug>\r\n  16:     0x7ffbec51b205 - <rustc_errors[3cd36318e3613d20]::HandlerInner>::bug::<&alloc[4ac2d0ae555384fc]::string::String>\r\n  17:     0x7ffbec51af60 - <rustc_errors[3cd36318e3613d20]::Handler>::bug::<&alloc[4ac2d0ae555384fc]::string::String>\r\n  18:     0x7ffbec59866d - rustc_middle[4273fc7dbb432e13]::ty::context::tls::with_opt::<rustc_middle[4273fc7dbb432e13]::util::bug::opt_span_bug_fmt<rustc_span[77aaf738596ebdf0]::span_encoding::Span>::{closure#0}, ()>\r\n  19:     0x7ffbec5987a6 - rustc_middle[4273fc7dbb432e13]::util::bug::opt_span_bug_fmt::<rustc_span[77aaf738596ebdf0]::span_encoding::Span>\r\n  20:     0x7ffbec598723 - rustc_middle[4273fc7dbb432e13]::util::bug::bug_fmt\r\n  21:     0x7ffbeb869f1d - <rustc_infer[3a3407b7085d6b2d]::infer::nll_relate::TypeRelating<rustc_infer[3a3407b7085d6b2d]::infer::canonical::query_response::QueryTypeRelatingDelegate> as rustc_middle[4273fc7dbb432e13]::ty::relate::TypeRelation>::consts\r\n  22:     0x7ffbeb88d14c - <rustc_infer[3a3407b7085d6b2d]::infer::InferCtxt>::instantiate_nll_query_response_and_region_obligations::<alloc[4ac2d0ae555384fc]::vec::Vec<rustc_middle[4273fc7dbb432e13]::traits::query::OutlivesBound>>\r\n  23:     0x7ffbecac2bee - <rustc_infer[3a3407b7085d6b2d]::infer::outlives::env::OutlivesEnvironment as rustc_typeck[51fdd47d43b4ce75]::check::regionck::OutlivesEnvironmentExt>::add_implied_bounds\r\n  24:     0x7ffbecb77e91 - <rustc_typeck[51fdd47d43b4ce75]::check::regionck::RegionCtxt>::visit_fn_body\r\n  25:     0x7ffbecb7bbba - <rustc_typeck[51fdd47d43b4ce75]::check::regionck::RegionCtxt as rustc_hir[a7fd3971f7dac1b2]::intravisit::Visitor>::visit_expr\r\n  26:     0x7ffbecb7a7d9 - <rustc_typeck[51fdd47d43b4ce75]::check::regionck::RegionCtxt as rustc_hir[a7fd3971f7dac1b2]::intravisit::Visitor>::visit_expr\r\n  27:     0x7ffbecb7a4ae - <rustc_typeck[51fdd47d43b4ce75]::check::regionck::RegionCtxt as rustc_hir[a7fd3971f7dac1b2]::intravisit::Visitor>::visit_expr\r\n  28:     0x7ffbecb7823e - <rustc_typeck[51fdd47d43b4ce75]::check::regionck::RegionCtxt>::visit_fn_body\r\n  29:     0x7ffbecb3658f - <rustc_infer[3a3407b7085d6b2d]::infer::InferCtxtBuilder>::enter::<&rustc_middle[4273fc7dbb432e13]::ty::context::TypeckResults, <rustc_typeck[51fdd47d43b4ce75]::check::inherited::InheritedBuilder>::enter<rustc_typeck[51fdd47d43b4ce75]::check::typeck_with_fallback<rustc_typeck[51fdd47d43b4ce75]::check::typeck::{closure#0}>::{closure#1}, &rustc_middle[4273fc7dbb432e13]::ty::context::TypeckResults>::{closure#0}>\r\n  30:     0x7ffbecae09da - rustc_typeck[51fdd47d43b4ce75]::check::typeck\r\n  31:     0x7ffbed0854e4 - rustc_query_system[5d3fbf9a023977e0]::query::plumbing::try_execute_query::<rustc_query_impl[5a39a0883fba8866]::plumbing::QueryCtxt, rustc_query_system[5d3fbf9a023977e0]::query::caches::DefaultCache<rustc_span[77aaf738596ebdf0]::def_id::LocalDefId, &rustc_middle[4273fc7dbb432e13]::ty::context::TypeckResults>>\r\n  32:     0x7ffbed05ba6e - <rustc_query_impl[5a39a0883fba8866]::Queries as rustc_middle[4273fc7dbb432e13]::ty::query::QueryEngine>::typeck\r\n  33:     0x7ffbecae0b6f - rustc_typeck[51fdd47d43b4ce75]::check::typeck\r\n  34:     0x7ffbed0854e4 - rustc_query_system[5d3fbf9a023977e0]::query::plumbing::try_execute_query::<rustc_query_impl[5a39a0883fba8866]::plumbing::QueryCtxt, rustc_query_system[5d3fbf9a023977e0]::query::caches::DefaultCache<rustc_span[77aaf738596ebdf0]::def_id::LocalDefId, &rustc_middle[4273fc7dbb432e13]::ty::context::TypeckResults>>\r\n  35:     0x7ffbed05ba6e - <rustc_query_impl[5a39a0883fba8866]::Queries as rustc_middle[4273fc7dbb432e13]::ty::query::QueryEngine>::typeck\r\n  36:     0x7ffbecb905c8 - <rustc_middle[4273fc7dbb432e13]::hir::map::Map>::par_body_owners::<rustc_typeck[51fdd47d43b4ce75]::check::typeck_item_bodies::{closure#0}>\r\n  37:     0x7ffbed93794c - rustc_typeck[51fdd47d43b4ce75]::check::typeck_item_bodies\r\n  38:     0x7ffbedc2979c - rustc_query_system[5d3fbf9a023977e0]::query::plumbing::try_execute_query::<rustc_query_impl[5a39a0883fba8866]::plumbing::QueryCtxt, rustc_query_system[5d3fbf9a023977e0]::query::caches::DefaultCache<(), ()>>\r\n  39:     0x7ffbedc56271 - rustc_query_system[5d3fbf9a023977e0]::query::plumbing::get_query::<rustc_query_impl[5a39a0883fba8866]::queries::typeck_item_bodies, rustc_query_impl[5a39a0883fba8866]::plumbing::QueryCtxt>\r\n  40:     0x7ffbed972be3 - <rustc_session[eca3025ea6d0d057]::session::Session>::time::<(), rustc_typeck[51fdd47d43b4ce75]::check_crate::{closure#7}>\r\n  41:     0x7ffbed94ef43 - rustc_typeck[51fdd47d43b4ce75]::check_crate\r\n  42:     0x7ffbed6bfdc7 - rustc_interface[60df96b8be8199a0]::passes::analysis\r\n  43:     0x7ffbedc1eccf - rustc_query_system[5d3fbf9a023977e0]::query::plumbing::try_execute_query::<rustc_query_impl[5a39a0883fba8866]::plumbing::QueryCtxt, rustc_query_system[5d3fbf9a023977e0]::query::caches::DefaultCache<(), core[9a54cb3e01ba0ce9]::result::Result<(), rustc_errors[3cd36318e3613d20]::ErrorGuaranteed>>>\r\n  44:     0x7ffbedc687ce - rustc_query_system[5d3fbf9a023977e0]::query::plumbing::get_query::<rustc_query_impl[5a39a0883fba8866]::queries::analysis, rustc_query_impl[5a39a0883fba8866]::plumbing::QueryCtxt>\r\n  45:     0x7ffbed6a3a37 - <rustc_interface[60df96b8be8199a0]::passes::QueryContext>::enter::<rustc_driver[5d44a3b446ca22b6]::run_compiler::{closure#1}::{closure#2}::{closure#3}, core[9a54cb3e01ba0ce9]::result::Result<(), rustc_errors[3cd36318e3613d20]::ErrorGuaranteed>>\r\n  46:     0x7ffbed68dbff - <rustc_interface[60df96b8be8199a0]::interface::Compiler>::enter::<rustc_driver[5d44a3b446ca22b6]::run_compiler::{closure#1}::{closure#2}, core[9a54cb3e01ba0ce9]::result::Result<core[9a54cb3e01ba0ce9]::option::Option<rustc_interface[60df96b8be8199a0]::queries::Linker>, rustc_errors[3cd36318e3613d20]::ErrorGuaranteed>>\r\n  47:     0x7ffbed6871cf - rustc_span[77aaf738596ebdf0]::with_source_map::<core[9a54cb3e01ba0ce9]::result::Result<(), rustc_errors[3cd36318e3613d20]::ErrorGuaranteed>, rustc_interface[60df96b8be8199a0]::interface::create_compiler_and_run<core[9a54cb3e01ba0ce9]::result::Result<(), rustc_errors[3cd36318e3613d20]::ErrorGuaranteed>, rustc_driver[5d44a3b446ca22b6]::run_compiler::{closure#1}>::{closure#1}>\r\n  48:     0x7ffbed68ea92 - <scoped_tls[c0f8d1e57fdb1e9d]::ScopedKey<rustc_span[77aaf738596ebdf0]::SessionGlobals>>::set::<rustc_interface[60df96b8be8199a0]::interface::run_compiler<core[9a54cb3e01ba0ce9]::result::Result<(), rustc_errors[3cd36318e3613d20]::ErrorGuaranteed>, rustc_driver[5d44a3b446ca22b6]::run_compiler::{closure#1}>::{closure#0}, core[9a54cb3e01ba0ce9]::result::Result<(), rustc_errors[3cd36318e3613d20]::ErrorGuaranteed>>\r\n  49:     0x7ffbed6a40bf - std[3d85facbacbebd2b]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[60df96b8be8199a0]::util::run_in_thread_pool_with_globals<rustc_interface[60df96b8be8199a0]::interface::run_compiler<core[9a54cb3e01ba0ce9]::result::Result<(), rustc_errors[3cd36318e3613d20]::ErrorGuaranteed>, rustc_driver[5d44a3b446ca22b6]::run_compiler::{closure#1}>::{closure#0}, core[9a54cb3e01ba0ce9]::result::Result<(), rustc_errors[3cd36318e3613d20]::ErrorGuaranteed>>::{closure#0}, core[9a54cb3e01ba0ce9]::result::Result<(), rustc_errors[3cd36318e3613d20]::ErrorGuaranteed>>\r\n  50:     0x7ffbed6a4229 - <<std[3d85facbacbebd2b]::thread::Builder>::spawn_unchecked_<rustc_interface[60df96b8be8199a0]::util::run_in_thread_pool_with_globals<rustc_interface[60df96b8be8199a0]::interface::run_compiler<core[9a54cb3e01ba0ce9]::result::Result<(), rustc_errors[3cd36318e3613d20]::ErrorGuaranteed>, rustc_driver[5d44a3b446ca22b6]::run_compiler::{closure#1}>::{closure#0}, core[9a54cb3e01ba0ce9]::result::Result<(), rustc_errors[3cd36318e3613d20]::ErrorGuaranteed>>::{closure#0}, core[9a54cb3e01ba0ce9]::result::Result<(), rustc_errors[3cd36318e3613d20]::ErrorGuaranteed>>::{closure#1} as core[9a54cb3e01ba0ce9]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  51:     0x7ffbead09293 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hed131aa6d8ddd60e\r\n                               at /rustc/21e9336fe81a1fce364349bb7a35a0347c369f34/library/alloc/src/boxed.rs:1951:9\r\n  52:     0x7ffbead09293 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h5cfd39886a9bb055\r\n                               at /rustc/21e9336fe81a1fce364349bb7a35a0347c369f34/library/alloc/src/boxed.rs:1951:9\r\n  53:     0x7ffbead09293 - std::sys::unix::thread::Thread::new::thread_start::h3f6b40ab851a8ecd\r\n                               at /rustc/21e9336fe81a1fce364349bb7a35a0347c369f34/library/std/src/sys/unix/thread.rs:108:17\r\n  54:     0x7ffbeac33609 - start_thread\r\n  55:     0x7ffbeab56163 - clone\r\n  56:                0x0 - <unknown>\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.63.0-nightly (21e9336fe 2022-06-18) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=1 -C llvm-args=--x86-asm-syntax=intel --crate-type rlib -C opt-level=3\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `test_usage`\r\n#1 [typeck] type-checking `test_usage::{closure#0}`\r\n#2 [typeck_item_bodies] type-checking all item bodies\r\n#3 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nCompiler returned: 101\r\n```\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98299/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98299/timeline", "performed_via_github_app": null, "state_reason": "completed"}