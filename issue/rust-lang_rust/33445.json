{"url": "https://api.github.com/repos/rust-lang/rust/issues/33445", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/33445/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/33445/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/33445/events", "html_url": "https://github.com/rust-lang/rust/issues/33445", "id": 153345044, "node_id": "MDU6SXNzdWUxNTMzNDUwNDQ=", "number": 33445, "title": "Compiler panic when matching on a reference to an enum with an unsized variant IF the field isn't being used", "user": {"login": "SnirkImmington", "id": 1468114, "node_id": "MDQ6VXNlcjE0NjgxMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1468114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SnirkImmington", "html_url": "https://github.com/SnirkImmington", "followers_url": "https://api.github.com/users/SnirkImmington/followers", "following_url": "https://api.github.com/users/SnirkImmington/following{/other_user}", "gists_url": "https://api.github.com/users/SnirkImmington/gists{/gist_id}", "starred_url": "https://api.github.com/users/SnirkImmington/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SnirkImmington/subscriptions", "organizations_url": "https://api.github.com/users/SnirkImmington/orgs", "repos_url": "https://api.github.com/users/SnirkImmington/repos", "events_url": "https://api.github.com/users/SnirkImmington/events{/privacy}", "received_events_url": "https://api.github.com/users/SnirkImmington/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-05T22:59:48Z", "updated_at": "2016-06-17T19:04:44Z", "closed_at": "2016-06-17T19:04:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "The compiler panics when matching on a reference to an enum containing a variant which is unsized **IF** the variable isn't being named.\n### Code\n\nI tried this code on the playground and my local machine, on stable and nightly compilers:\n\n``` rust\npub enum UnsizedEnum {\n    Variant([i32]) // Variant holding an unsized type\n}\n\nimpl FnOnceWrapper {\n    fn foo(&self) { // Function taking an &UnsizedEnum\n        match self { // Some match on self (can use match *self as well)\n            &UnsizedEnum::Variant(_) => // Variable isn't used\n            println!(\"Shouldn't compile anyway?\")\n        }\n    }\n}\n```\n\n`error: internal compiler error: ../src/librustc_trans/type_of.rs:166: Unexpected tail in unsized_info_ty: registry::types::RegistryData for ty=registry::types::RegistryData`\nPlaypen link: http://is.gd/oY6R8Y\n### What should happen\n\nThe compiler should be emitting the same error as when the variable is named, I guess:\n\n```\n<anon>:8:34: 8:35 error: the trait bound `[i32]: std::marker::Sized` is not satisfied [E0277]\n<anon>:8             UnsizedEnum::Variant(v) => \n                                          ^\n<anon>:8:34: 8:35 help: see the detailed explanation for E0277\n<anon>:8:34: 8:35 note: `[i32]` does not have a constant size known at compile-time\n<anon>:8:34: 8:35 note: all local variables must have a statically known size\nerror: aborting due to previous error\nplaypen: application terminated with error code 101\n```\n\nSome examples may be compile-able if the unsized type is being ignored?\n### Reproduction\n\nThe bug should be reproducible on all three channels, using any unsized type in the enum variant (`Variant([i32])`, `Variant(FnOnce())`,  etc.).\n\nThe variable **must** be `_` (ignored) - a variable named `_v` will trigger the regular error.\n\nA function with an owned **self** - `fn foo(self) { match self { ... } }` - does **not** cause the bug (it issues a regular error).\n\nUsing different matching schemes, i.e. `match *self { Variant(ref _) => ... }`, also caused the bug.\n\nReplacing the enum variant with a sized type, such as `Variant([i32; 5])` causes the code to compile.\n### Backtrace\n\nIn addition to the ones available on the playground, here's the log of my machine compiling my code:\n\n```\nerror: internal compiler error: ../src/librustc_trans/type_of.rs:166: Unexpected tail in unsized_info_ty: BadEnum for ty=BadEnum\nnote: the compiler unexpectedly panicked. this is a bug.\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\nnote: run with `RUST_BACKTRACE=1` for a backtrace\nthread 'rustc' panicked at 'Box<Any>', ../src/libsyntax/errors/mod.rs:576\nstack backtrace:\n   1:     0x7f5225112610 - std::sys::backtrace::tracing::imp::write::h9fb600083204ae7f\n   2:     0x7f522511fd5b - std::panicking::default_hook::_$u7b$$u7b$closure$u7d$$u7d$::hca543c34f11229ac\n   3:     0x7f522511f8fc - std::panicking::default_hook::hc2c969e7453d080c\n   4:     0x7f52250e528f - std::sys_common::unwind::begin_unwind_inner::h30e12d15ce2b2e25\n   5:     0x7f52207211c7 - std::sys_common::unwind::begin_unwind::h24c4c0fa2cfe995a\n   6:     0x7f5220720ff5 - syntax::errors::Handler::bug::h4846e60601033e50\n   7:     0x7f52217d43f2 - rustc::session::opt_span_bug_fmt::_$u7b$$u7b$closure$u7d$$u7d$::hf0fb5697f8f25f40\n   8:     0x7f52217d4282 - rustc::session::opt_span_bug_fmt::hc581ba88c4e2ec53\n   9:     0x7f52217ec086 - rustc::session::bug_fmt::had96c08cb43bd8a1\n  10:     0x7f5223d42ba5 - rustc_trans::type_of::unsized_info_ty::hce316b0f61e418ac\n  11:     0x7f5223c1ed00 - rustc_trans::type_of::in_memory_type_of::h97b017bde8fe1e03\n  12:     0x7f5223c11d51 - rustc_trans::abi::FnType::unadjusted::_$u7b$$u7b$closure$u7d$$u7d$::h70131b4b2d0cfbee\n  13:     0x7f5223c0f6ab - rustc_trans::abi::FnType::unadjusted::hca5902507eb050fc\n  14:     0x7f5223c1e79e - rustc_trans::type_of::in_memory_type_of::h97b017bde8fe1e03\n  15:     0x7f5223c86533 - rustc_trans::callee::get_fn::h691a55e881985779\n  16:     0x7f5223c29d60 - rustc_trans::callee::Callee::def::ha169529fef0048b5\n  17:     0x7f5223c54552 - rustc_trans::base::trans_item::hdc785ae68a9e6500\n  18:     0x7f5223c6decb - _<base..TransItemsWithinModVisitor<'a, 'tcx> as rustc..hir..intravisit..Visitor<'v>>::visit_item::h22c1c36dec64effa\n  19:     0x7f5223c6bce7 - rustc::hir::intravisit::walk_item::he78478ac5852ebcf\n  20:     0x7f5223c5cabf - rustc_trans::base::trans_crate::h6ed1dbd6e572a8c2\n  21:     0x7f52256776ff - rustc_driver::driver::phase_4_translate_to_llvm::hd7579aae98641824\n  22:     0x7f5225675d8f - rustc_driver::driver::compile_input::_$u7b$$u7b$closure$u7d$$u7d$::he3c6b6ab9afe28dd\n  23:     0x7f5225672630 - rustc_driver::driver::phase_3_run_analysis_passes::_$u7b$$u7b$closure$u7d$$u7d$::h06c776ef4d1c70b6\n  24:     0x7f522566bf5e - rustc::ty::context::TyCtxt::create_and_enter::hb0e0e916c7274a64\n  25:     0x7f522563e90d - rustc_driver::driver::compile_input::h0629572e6f316b31\n  26:     0x7f522561f53c - rustc_driver::run_compiler::h8902aebf8b1849a8\n  27:     0x7f522561cc41 - std::sys_common::unwind::try::try_fn::h4c74456035d0fcc7\n  28:     0x7f522510fdeb - __rust_try\n  29:     0x7f522510fd7d - std::sys_common::unwind::inner_try::h47a4d9cd4a369dcd\n  30:     0x7f522561d48a - _<F as std..boxed..FnBox<A>>::call_box::h27f542a39f1d61ef\n  31:     0x7f522511def4 - std::sys::thread::Thread::new::thread_start::h6f266e069bf4ec2b\n  32:     0x7f521cea5423 - start_thread\n  33:     0x7f5224d7ccbc - clone\n  34:                0x0 - <unknown>\n\nerror: Could not compile `bug-report`.\n\nTo learn more, run the command again with --verbose.\n```\n### $ rustc --version --verbose\n\n```\nrustc 1.10.0-nightly (8da2bcac5 2016-04-28)\nbinary: rustc\ncommit-hash: 8da2bcac5db1e091b90cceb19d0496f0f7501c88\ncommit-date: 2016-04-28\nhost: x86_64-unknown-linux-gnu\nrelease: 1.10.0-nightly\n```\n\nSorry if this is a duplicate report, I saw a couple that looked similar but they had both been closed.\n(update: added rustc version with `--verbose`\n", "closed_by": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/33445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/33445/timeline", "performed_via_github_app": null, "state_reason": "completed"}