{"url": "https://api.github.com/repos/rust-lang/rust/issues/48496", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48496/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48496/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48496/events", "html_url": "https://github.com/rust-lang/rust/issues/48496", "id": 299914068, "node_id": "MDU6SXNzdWUyOTk5MTQwNjg=", "number": 48496, "title": "RefCell borrow in an expression fails to compile but compiles fine in a statement", "user": {"login": "ChuntaoLu", "id": 5065819, "node_id": "MDQ6VXNlcjUwNjU4MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/5065819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChuntaoLu", "html_url": "https://github.com/ChuntaoLu", "followers_url": "https://api.github.com/users/ChuntaoLu/followers", "following_url": "https://api.github.com/users/ChuntaoLu/following{/other_user}", "gists_url": "https://api.github.com/users/ChuntaoLu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChuntaoLu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChuntaoLu/subscriptions", "organizations_url": "https://api.github.com/users/ChuntaoLu/orgs", "repos_url": "https://api.github.com/users/ChuntaoLu/repos", "events_url": "https://api.github.com/users/ChuntaoLu/events{/privacy}", "received_events_url": "https://api.github.com/users/ChuntaoLu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-24T05:33:34Z", "updated_at": "2020-03-19T20:44:08Z", "closed_at": "2020-03-19T20:44:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "`RefCell` borrow in an expression causes compile error \"borrowed value does not live long enough\" [[E0597]](https://doc.rust-lang.org/error-index.html#E0597), but it compiles fine if the `RefCell` borrow is in a statement.\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::cell::RefCell;\r\nuse std::rc::Rc;\r\n\r\nstruct Foo {\r\n    name: String,\r\n}\r\n\r\nstruct Bar {\r\n    foo: Rc<RefCell<Foo>>,\r\n}\r\n\r\nimpl Bar {\r\n    fn new(s: &str) -> Bar {\r\n        Bar {\r\n            foo: Rc::new(RefCell::new(Foo {\r\n                name: s.to_string(),\r\n            })),\r\n        }\r\n    }\r\n    fn get_foo(&self) -> Rc<RefCell<Foo>> {\r\n        Rc::clone(&self.foo)\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let b1 = Bar::new(\"hello\");\r\n    let b2 = Bar::new(\"world\");\r\n    let v = vec![b1, b2];\r\n\r\n    let s = v.iter()\r\n        .map(|a| {\r\n            let f = a.get_foo();\r\n            // below does not work, but explicit return works\r\n            format!(\"{}\", f.borrow().name)\r\n            //return format!(\"{}\", f.borrow().name);\r\n        })\r\n        .collect::<Vec<String>>()\r\n        .join(\" \");\r\n\r\n    println!(\"{} \", s);\r\n}\r\n```\r\nHere is the error message when I tried with expression:\r\n```\r\nerror[E0597]: `f` does not live long enough\r\n  --> src/main.rs:34:27\r\n   |\r\n34 |             format!(\"{}\", f.borrow().name)\r\n   |                           ^ borrowed value does not live long enough\r\n35 |             //return format!(\"{}\", f.borrow().name);\r\n36 |         })\r\n   |         - `f` dropped here while still borrowed\r\n   |\r\n   = note: values in a scope are dropped in the opposite order they are created\r\n```\r\n[Link](https://play.rust-lang.org/?gist=b0c1a0bd464c8ec0b9472b1604c3f414&version=stable) to Rust playground.", "closed_by": {"login": "Dylan-DPC-zz", "id": 12371125, "node_id": "MDQ6VXNlcjEyMzcxMTI1", "avatar_url": "https://avatars.githubusercontent.com/u/12371125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC-zz", "html_url": "https://github.com/Dylan-DPC-zz", "followers_url": "https://api.github.com/users/Dylan-DPC-zz/followers", "following_url": "https://api.github.com/users/Dylan-DPC-zz/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC-zz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC-zz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC-zz/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC-zz/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC-zz/repos", "events_url": "https://api.github.com/users/Dylan-DPC-zz/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC-zz/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48496/timeline", "performed_via_github_app": null, "state_reason": "completed"}