{"url": "https://api.github.com/repos/rust-lang/rust/issues/99380", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99380/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99380/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99380/events", "html_url": "https://github.com/rust-lang/rust/issues/99380", "id": 1307125380, "node_id": "I_kwDOAAsO6M5N6SaE", "number": 99380, "title": "Confusing \"arbitrary expressions aren't allowed in patterns\" error", "user": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-07-17T15:13:52Z", "updated_at": "2022-07-17T15:13:54Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Take the following code:\r\n\r\n```rust\r\nmacro_rules! foo {\r\n    ($p:expr) => {\r\n        if let $p = Some(42) {\r\n            return;\r\n        }\r\n    };\r\n}\r\n\r\nfn main() {\r\n    foo!(Some(3));\r\n}\r\n```\r\n\r\nCurrently it fails with:\r\n\r\n```\r\nerror: arbitrary expressions aren't allowed in patterns\r\n  --> src/main.rs:10:10\r\n   |\r\n10 |     foo!(Some(3));\r\n   |          ^^^^^^^\r\n```\r\n\r\nIf you expanded the macro manually, `Some(3)` would be parsed as a pattern, but the `$p:expr` above changes it to be parsed as an expression. So what you *need* to do here is to change the `$p:expr` above to `$p:pat`. But this is very non-obvious.\r\n\r\nIdeally, the compiler would try to check if the input is a valid pattern, and if so, add a note like \"`Some(3)` is a valid pattern but the metavariable $p is specified to be an expression\", and maybe also point to the metavariable's matcher.\r\n\r\n@rustbot label A-macros", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99380/reactions", "total_count": 13, "+1": 13, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99380/timeline", "performed_via_github_app": null, "state_reason": null}