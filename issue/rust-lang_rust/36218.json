{"url": "https://api.github.com/repos/rust-lang/rust/issues/36218", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/36218/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/36218/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/36218/events", "html_url": "https://github.com/rust-lang/rust/issues/36218", "id": 174789649, "node_id": "MDU6SXNzdWUxNzQ3ODk2NDk=", "number": 36218, "title": "Error spans in macros 1.1", "user": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-09-02T15:43:30Z", "updated_at": "2016-09-12T02:06:40Z", "closed_at": "2016-09-12T02:06:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I understand that we can't know the spans correctly after passing through `rustc_macro_derive` but instead of pointing to the \"Serialize\" in these examples I think it would usually be less misleading to point to the \"struct A\" or maybe to the entire struct body. I don't want to field these support tickets in Serde's issue tracker:\n\n``` rust\ntrait T {\n    fn f();\n}\n\n#[derive(Serialize, Deserialize)]\nstruct A {\n    exciting: &T,\n}\n\n#[derive(Serialize, Deserialize)]\nstruct B<'a> {\n    exciting: &'a T,\n}\n```\n\n```\nerror[E0106]: missing lifetime specifier\n  --> src/main.rs:10:10\n   |\n10 | #[derive(Serialize, Deserialize)]\n   |          ^ expected lifetime parameter\n\nerror[E0038]: the trait `T` cannot be made into an object\n  --> src/main.rs:15:15\n   |\n15 | #[derive(Serialize, Deserialize)]\n   |          ^^^^^^^^^^ the trait `T` cannot be made into an object\n```\n\nSide note: those errors are inconsistent with each other, one points to just the letter \"S\", the other to \"Serialize,\".\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/36218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/36218/timeline", "performed_via_github_app": null, "state_reason": "completed"}