{"url": "https://api.github.com/repos/rust-lang/rust/issues/76360", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/76360/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/76360/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/76360/events", "html_url": "https://github.com/rust-lang/rust/issues/76360", "id": 694007145, "node_id": "MDU6SXNzdWU2OTQwMDcxNDU=", "number": 76360, "title": "Error reporting from attribute macros regressed in 1.46.0", "user": {"login": "ahl", "id": 677483, "node_id": "MDQ6VXNlcjY3NzQ4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/677483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahl", "html_url": "https://github.com/ahl", "followers_url": "https://api.github.com/users/ahl/followers", "following_url": "https://api.github.com/users/ahl/following{/other_user}", "gists_url": "https://api.github.com/users/ahl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahl/subscriptions", "organizations_url": "https://api.github.com/users/ahl/orgs", "repos_url": "https://api.github.com/users/ahl/repos", "events_url": "https://api.github.com/users/ahl/events{/privacy}", "received_events_url": "https://api.github.com/users/ahl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 693665463, "node_id": "MDU6TGFiZWw2OTM2NjU0NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-diagnostics", "name": "WG-diagnostics", "color": "c2e0c6", "default": false, "description": "Working group: diagnostics"}, {"id": 1791937891, "node_id": "MDU6TGFiZWwxNzkxOTM3ODkx", "url": "https://api.github.com/repos/rust-lang/rust/labels/ICEBreaker-Cleanup-Crew", "name": "ICEBreaker-Cleanup-Crew", "color": "74cc28", "default": false, "description": "Helping to \"clean up\" bugs with minimal examples and bisections"}, {"id": 2079070889, "node_id": "MDU6TGFiZWwyMDc5MDcwODg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-proc-macros", "name": "A-proc-macros", "color": "f7e101", "default": false, "description": "Area: Procedural macros"}], "state": "open", "locked": false, "assignee": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 19, "created_at": "2020-09-05T05:54:01Z", "updated_at": "2023-03-03T15:23:01Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We take particular care to make sure that compilation errors associated with the items to which our attribute macros are applied are comprehensible. To that end we have tests to check the output of a variety of expected illegal programs to make sure developers could reasonably be expected to understand and correct those errors. In 1.46.0 we noticed a change in that behavior. While there were some beneficial changes to the way errors qualify structs, traits, etc. there seems to be a regression where 1.46.0 shows less information than in 1.45.0\r\n\r\nI've put together a small repo that demonstrates the problem: https://github.com/ahl/span_regression\r\n\r\nThe first example is this macro:\r\n\r\n```rust\r\n#[proc_macro_attribute]\r\npub fn identity(\r\n    _attr: proc_macro::TokenStream,\r\n    item: proc_macro::TokenStream,\r\n) -> proc_macro::TokenStream {\r\n    item\r\n}\r\n```\r\n\r\nNow consider this test program:\r\n\r\n```rust\r\nstruct Thing {\r\n    x: i32,\r\n    y: i32,\r\n}\r\n\r\n#[identity]\r\nfn doit() -> Thing {\r\n    Thing {\r\n        \"howdy\".to_string(),\r\n    }\r\n}\r\n```\r\n\r\nUnder 1.45.0 one of the errors produced looks like this:\r\n```\r\nerror[E0063]: missing fields `x`, `y` in initializer of `Thing`\r\n  --> examples/test.rs:10:5\r\n   |\r\n10 |     Thing {\r\n   |     ^^^^^ missing `x`, `y`\r\n```\r\n\r\nUnder 1.46.0 that has changed to this:\r\n```\r\nerror[E0063]: missing fields `x`, `y` in initializer of `Thing`\r\n```\r\n\r\nNote that under 1.46.0 no code is underlined.\r\n\r\nNow consider a slightly more complicated macro:\r\n\r\n```rust\r\n#[proc_macro_attribute]\r\npub fn nested(\r\n    _attr: proc_macro::TokenStream,\r\n    item: proc_macro::TokenStream,\r\n) -> proc_macro::TokenStream {\r\n    let mut ret = proc_macro::TokenStream::new();\r\n    let pre = vec![\r\n        proc_macro::TokenTree::Ident(proc_macro::Ident::new(\"fn\", proc_macro::Span::call_site())),\r\n        proc_macro::TokenTree::Ident(proc_macro::Ident::new(\"foo\", proc_macro::Span::call_site())),\r\n        proc_macro::TokenTree::Group(proc_macro::Group::new(\r\n            proc_macro::Delimiter::Parenthesis,\r\n            proc_macro::TokenStream::new(),\r\n        )),\r\n        proc_macro::TokenTree::Group(proc_macro::Group::new(proc_macro::Delimiter::Brace, item)),\r\n    ];\r\n    ret.extend(pre);\r\n    ret\r\n}\r\n```\r\n(Note I had been using `quote!` but wanted to make sure that wasn't causing the problem)\r\n\r\nWith a similar example as above on 1.45.0:\r\n```\r\nerror: expected identifier, found `\"yo\"`\r\n  --> examples/test.rs:20:9\r\n   |\r\n19 |     Thing {\r\n   |     ----- while parsing this struct\r\n20 |         \"yo\".to_string(),\r\n   |         ^^^^ expected identifier\r\n```\r\n\r\nWith 1.46.0:\r\n```\r\nerror[E0308]: mismatched types\r\n  --> examples/test.rs:17:1\r\n   |\r\n17 | #[nested]\r\n   | ^^^^^^^^^\r\n   | |\r\n   | expected struct `Thing`, found `()`\r\n   | expected `Thing` because of return type\r\n```\r\n\r\nRather than pointing to the offending code, the rustc error now points (unhelpfully) to the macro itself.\r\n\r\nThe general improvements made to error reporting in 1.46.0 (simpler naming, reduced duplicate errors) is greatly appreciated. This was one small regression I saw amongst the otherwise monotonic improvements.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/76360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/76360/timeline", "performed_via_github_app": null, "state_reason": null}