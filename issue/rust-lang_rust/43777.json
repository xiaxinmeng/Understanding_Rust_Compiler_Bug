{"url": "https://api.github.com/repos/rust-lang/rust/issues/43777", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43777/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43777/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43777/events", "html_url": "https://github.com/rust-lang/rust/issues/43777", "id": 249183882, "node_id": "MDU6SXNzdWUyNDkxODM4ODI=", "number": 43777, "title": "Inherited trait bounds are not completely checked", "user": {"login": "behnam", "id": 37169, "node_id": "MDQ6VXNlcjM3MTY5", "avatar_url": "https://avatars.githubusercontent.com/u/37169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/behnam", "html_url": "https://github.com/behnam", "followers_url": "https://api.github.com/users/behnam/followers", "following_url": "https://api.github.com/users/behnam/following{/other_user}", "gists_url": "https://api.github.com/users/behnam/gists{/gist_id}", "starred_url": "https://api.github.com/users/behnam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/behnam/subscriptions", "organizations_url": "https://api.github.com/users/behnam/orgs", "repos_url": "https://api.github.com/users/behnam/repos", "events_url": "https://api.github.com/users/behnam/events{/privacy}", "received_events_url": "https://api.github.com/users/behnam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-09T22:46:13Z", "updated_at": "2017-08-24T20:29:14Z", "closed_at": "2017-08-24T20:29:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Original discussion: <https://users.rust-lang.org/t/unexpected-behaviors-of-trait-bounds/12286/10>\r\n\r\nLooks like it's related to this old issue: <https://github.com/rust-lang/rust/issues/29859>\r\n\r\nBasically, having `trait Complete` require `trait Partial`, and `trait Partial` require `trait PartialEq` (or any other trait), a type (`struct TypeB`) with `impl Complete` doesn't need to satisfy `impl PartialEq`, which only looks like a bug.\r\n\r\nInterestingly, whenever `<TypeB as Partial>` is seen, the check is performed and appropriate error is thrown.\r\n\r\nHere's a repro:\r\n\r\n```rust\r\npub trait Partial: PartialEq {\r\n    fn foo() -> Option<bool>;\r\n}\r\n\r\npub trait Complete: Partial {\r\n    fn foo() -> bool;\r\n}\r\n\r\nimpl<T> Partial for T\r\nwhere\r\n    T: Complete,\r\n{\r\n    fn foo() -> Option<bool> {\r\n        Some(<Self as Complete>::foo())\r\n    }\r\n}\r\n\r\n\r\n// ----\r\n\r\n#[derive(PartialEq)]\r\npub struct TypeA {}\r\n\r\nimpl Partial for TypeA {\r\n    fn foo() -> Option<bool> {\r\n        None\r\n    }\r\n}\r\n\r\n\r\n// ----\r\n\r\n// BUG: No compile warning about `PartialEq` not being implemented\r\n// #[derive(PartialEq)]\r\npub struct TypeB {}\r\n\r\nimpl Complete for TypeB {\r\n    fn foo() -> bool {\r\n        true\r\n    }\r\n}\r\n\r\n\r\n// ----\r\n\r\npub fn main() {\r\n    println!(\"{:?}\", TypeA::foo());\r\n\r\n    // This works, but shouldn't!\r\n    println!(\"{:?}\", <TypeB as Complete>::foo());\r\n\r\n    // This would trigger the issue, though.\r\n    //println!(\"{:?}\", <TypeB as Partial>::foo());\r\n    /* Result in:\r\n    error[E0277]: the trait bound `TypeB: std::cmp::PartialEq` is not satisfied\r\n      --> src/bin/cyclic_traits.rs:48:22\r\n       |\r\n    48 |     println!(\"{:?}\", <TypeB as Partial>::foo());\r\n       |                      ^^^^^^^^^^^^^^^^^^^^^^^ can't compare `TypeB` with `TypeB`\r\n       |\r\n       = help: the trait `std::cmp::PartialEq` is not implemented for `TypeB`\r\n       = note: required by `Partial::foo`\r\n    */\r\n}\r\n```", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43777/timeline", "performed_via_github_app": null, "state_reason": "completed"}