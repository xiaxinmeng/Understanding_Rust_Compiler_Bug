{"url": "https://api.github.com/repos/rust-lang/rust/issues/74087", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74087/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74087/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74087/events", "html_url": "https://github.com/rust-lang/rust/issues/74087", "id": 651298858, "node_id": "MDU6SXNzdWU2NTEyOTg4NTg=", "number": 74087, "title": "using inner tool attributes in crate root induces compiler error on intra-crate macro use", "user": {"login": "bcantrill", "id": 328614, "node_id": "MDQ6VXNlcjMyODYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/328614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bcantrill", "html_url": "https://github.com/bcantrill", "followers_url": "https://api.github.com/users/bcantrill/followers", "following_url": "https://api.github.com/users/bcantrill/following{/other_user}", "gists_url": "https://api.github.com/users/bcantrill/gists{/gist_id}", "starred_url": "https://api.github.com/users/bcantrill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bcantrill/subscriptions", "organizations_url": "https://api.github.com/users/bcantrill/orgs", "repos_url": "https://api.github.com/users/bcantrill/repos", "events_url": "https://api.github.com/users/bcantrill/events{/privacy}", "received_events_url": "https://api.github.com/users/bcantrill/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234948, "node_id": "MDU6TGFiZWwyMzQ5NDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-attributes", "name": "A-attributes", "color": "f7e101", "default": false, "description": "Area: #[attributes(..)]"}, {"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-06T07:00:13Z", "updated_at": "2021-06-03T16:54:13Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Take a crate that has the following `foo.rs`, that contains a macro, `foomacro()!`:\r\n\r\n```rust\r\n#[macro_export]\r\nmacro_rules! foomacro {\r\n    ($f:expr) => ({\r\n        println!(\"foomacro: {}\", $f);\r\n    });\r\n}\r\n```\r\n\r\nThis macro is used in `bar.rs`:\r\n\r\n```rust\r\nuse crate::foomacro;\r\n\r\npub fn bar() {\r\n    foomacro!(\"bar\");\r\n}\r\n```\r\n\r\nFinally, here is the root of the crate and `main.rs`:\r\n\r\n```rust\r\n#![feature(custom_inner_attributes)]\r\n\r\n// Setting any inner tool attribute here causes a compiler error on bar's use of\r\n// foomacro!():\r\n//\r\n//   error: macro-expanded `macro_export` macros from the current crate cannot\r\n//   be referred to by absolute paths\r\n//\r\n// To see this, uncomment either of the following lines:\r\n//\r\n// #![clippy::cyclomatic_complexity = \"100\"]\r\n// #![rustfmt::skip]\r\n\r\nmod foo;\r\nmod bar;\r\n\r\nfn main() {\r\n    foomacro!(\"foo\");\r\n    bar::bar();\r\n}\r\n```\r\n\r\nAs the comment there indicates, as written, this compiles and runs as expected:\r\n\r\n```\r\n$ cargo run\r\n   Compiling modmac v0.1.0 (/home/bmc/modmac)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.18s\r\n     Running `target/debug/modmac`\r\nfoomacro: foo\r\nfoomacro: bar\r\n```\r\n\r\nIf, however, either of the inner tool attributes is uncommented, the code fails on compiling `bar.rs`, complaining about its use of `foomacro()!`\r\n\r\n```\r\n$ cargo run\r\n   Compiling modmac v0.1.0 (/home/bmc/modmac)\r\nerror: macro-expanded `macro_export` macros from the current crate cannot be referred to by absolute paths\r\n --> src/bar.rs:2:5\r\n  |\r\n2 | use crate::foomacro;\r\n  |     ^^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[deny(macro_expanded_macro_exports_accessed_by_absolute_paths)]` on by default\r\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\r\n  = note: for more information, see issue #52234 <https://github.com/rust-lang/rust/issues/52234>\r\nnote: the macro is defined here\r\n --> src/foo.rs:2:1\r\n  |\r\n2 | / macro_rules! foomacro {\r\n3 | |     ($f:expr) => ({\r\n4 | |         println!(\"foomacro: {}\", $f);\r\n5 | |     });\r\n6 | | }\r\n  | |_^\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `modmac`.\r\n\r\n```\r\n\r\nThis behavior seems surprising, especially because tool attributes are generally thought to only be relevant to the specified tool:\r\n\r\n> When a tool is not in use, the tool's attributes are accepted without a warning. When the tool is in use, the tool is responsible for processing and interpretation of its attributes.\r\n\r\nThanks in advance for any consideration of this issue -- and apologies if this is an elaborate form of pilot error!\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74087/timeline", "performed_via_github_app": null, "state_reason": null}