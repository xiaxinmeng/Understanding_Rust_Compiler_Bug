{"url": "https://api.github.com/repos/rust-lang/rust/issues/61088", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61088/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61088/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61088/events", "html_url": "https://github.com/rust-lang/rust/issues/61088", "id": 447768876, "node_id": "MDU6SXNzdWU0NDc3Njg4NzY=", "number": 61088, "title": "-C inline-threshold is ignored by LLVM when optimizing for size, while llvm-args=-inline-threshold works", "user": {"login": "neivv", "id": 9514159, "node_id": "MDQ6VXNlcjk1MTQxNTk=", "avatar_url": "https://avatars.githubusercontent.com/u/9514159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neivv", "html_url": "https://github.com/neivv", "followers_url": "https://api.github.com/users/neivv/followers", "following_url": "https://api.github.com/users/neivv/following{/other_user}", "gists_url": "https://api.github.com/users/neivv/gists{/gist_id}", "starred_url": "https://api.github.com/users/neivv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neivv/subscriptions", "organizations_url": "https://api.github.com/users/neivv/orgs", "repos_url": "https://api.github.com/users/neivv/repos", "events_url": "https://api.github.com/users/neivv/events{/privacy}", "received_events_url": "https://api.github.com/users/neivv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-23T16:47:56Z", "updated_at": "2022-07-19T00:31:07Z", "closed_at": "2022-07-06T10:07:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "```rust\r\npub fn copy_u32(input: &[u8; 4], output: &mut [u8; 4])  {\r\n    let a = &input[..4];\r\n    let b = &mut output[..4];\r\n    for b in b.chunks_exact_mut(4) {\r\n        b.copy_from_slice(a);\r\n    }\r\n}\r\n```\r\nComplied with `-C opt-level=s -C inline-threshold=300` produces (same as just `-C opt-level=s`)\r\n```asm\r\nexample::copy_u32:\r\n        mov     rax, rsi\r\n        mov     rdx, rdi\r\n        mov     esi, 4\r\n        mov     ecx, 4\r\n        mov     rdi, rax\r\n        jmp     qword ptr [rip + core::slice::<impl [T]>::copy_from_slice@GOTPCREL]\r\n```\r\nComplied with `-C opt-level=s -C llvm-args=-inline-threshold=300` produces\r\n```asm\r\nexample::copy_u32:\r\n        mov     eax, dword ptr [rdi]\r\n        mov     dword ptr [rsi], eax\r\n        ret\r\n```\r\n([Godbolt link](https://godbolt.org/z/nm1weX))\r\n\r\n[The cause appears to be that LLVM keeps using a separate inlining threshold from the \"primary\" one given by rustc on functions with `optsize` attribute, but only when it didn't receive `-inline-threshold` itself.](https://github.com/llvm/llvm-project/blob/27b3b5d952c5981bb850832c86c797616ece8dd6/llvm/lib/Analysis/InlineCost.cpp#L2181-L2185)\r\n\r\nFixing this seems to either require converting the rustc-received argument to LLVM commandline one, or constructing a custom `llvm::InlineParams` structure instead of using one of LLVM-provided helper functions?", "closed_by": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61088/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61088/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}