{"url": "https://api.github.com/repos/rust-lang/rust/issues/52599", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52599/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52599/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52599/events", "html_url": "https://github.com/rust-lang/rust/issues/52599", "id": 343363732, "node_id": "MDU6SXNzdWUzNDMzNjM3MzI=", "number": 52599, "title": "rustc invalidly complains that I need to add #![feature(proc_macro)] even when its already there.", "user": {"login": "ethanhs", "id": 9504279, "node_id": "MDQ6VXNlcjk1MDQyNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/9504279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ethanhs", "html_url": "https://github.com/ethanhs", "followers_url": "https://api.github.com/users/ethanhs/followers", "following_url": "https://api.github.com/users/ethanhs/following{/other_user}", "gists_url": "https://api.github.com/users/ethanhs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ethanhs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ethanhs/subscriptions", "organizations_url": "https://api.github.com/users/ethanhs/orgs", "repos_url": "https://api.github.com/users/ethanhs/repos", "events_url": "https://api.github.com/users/ethanhs/events{/privacy}", "received_events_url": "https://api.github.com/users/ethanhs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-21T23:40:58Z", "updated_at": "2018-07-23T10:06:23Z", "closed_at": "2018-07-23T10:06:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Summary\r\nWhen I try to use a crate with proc macros, I cannot, even if I enable the feature and macro_use the crate.\r\n\r\n#### Code\r\nFrom https://github.com/termoshtt/accel#example (with an added `#[macro_use]` on line 4)\r\n```\r\n#![feature(proc_macro, custom_attribute)]\r\nextern crate accel;\r\n#[macro_use]\r\nextern crate accel_derive;\r\n\r\nuse accel_derive::kernel;\r\nuse accel::*;\r\n\r\n#[kernel]\r\n#[crate(\"accel-core\" = \"0.2.0\")]\r\n#[build_path(\".rust2ptx\")]\r\npub unsafe fn add(a: *const f64, b: *const f64, c: *mut f64, n: usize) {\r\n    let i = accel_core::index();\r\n    if (i as usize) < n {\r\n        *c.offset(i) = *a.offset(i) + *b.offset(i);\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let n = 32;\r\n    let mut a = UVec::new(n).unwrap();\r\n    let mut b = UVec::new(n).unwrap();\r\n    let mut c = UVec::new(n).unwrap();\r\n\r\n    for i in 0..n {\r\n        a[i] = i as f64;\r\n        b[i] = 2.0 * i as f64;\r\n    }\r\n    println!(\"a = {:?}\", a.as_slice());\r\n    println!(\"b = {:?}\", b.as_slice());\r\n\r\n    let grid = Grid::x(1);\r\n    let block = Block::x(n as u32);\r\n    add(grid, block, a.as_ptr(), b.as_ptr(), c.as_mut_ptr(), n);\r\n\r\n    device::sync().unwrap();\r\n    println!(\"c = {:?}\", c.as_slice());\r\n}\r\n```\r\n\r\n#### Expected results:\r\nIt compiles.\r\n\r\n#### Actual results:\r\nIt fails, with the following:\r\n\r\n```\r\nerror[E0432]: unresolved import `accel_derive::kernel`==============>  ] 32/33: cuda-test                \r\n --> src/main.rs:6:5\r\n  |\r\n6 | use accel_derive::kernel;\r\n  |     ^^^^^^^^^^^^^^^^^^^^ no `kernel` in the root\r\n\r\nerror[E0658]: attribute procedural macros are experimental (see issue #38356)\r\n --> src/main.rs:9:1\r\n  |\r\n3 | #[macro_use]\r\n  | ------------ procedural macro imported here\r\n...\r\n9 | #[kernel]\r\n  | ^^^^^^^^^\r\n  |\r\n  = help: add #![feature(proc_macro)] to the crate attributes to enable\r\n\r\nerror[E0433]: failed to resolve. Use of undeclared type or module `accel_core`\r\n  --> src/main.rs:13:13\r\n   |\r\n13 |     let i = accel_core::index();\r\n   |             ^^^^^^^^^^ Use of undeclared type or module `accel_core`\r\n\r\nerror: expected one of `)` or `,`, found `=`\r\n  --> src/main.rs:10:22\r\n   |\r\n10 | #[crate(\"accel-core\" = \"0.2.0\")]\r\n   |                      ^ expected one of `)` or `,` here\r\n\r\nerror: unexpected token: `\"0.2.0\"`\r\n  --> src/main.rs:10:24\r\n   |\r\n10 | #[crate(\"accel-core\" = \"0.2.0\")]\r\n   |                        ^^^^^^^ unexpected token after this\r\n\r\nerror: aborting due to 5 previous errors\r\n\r\nSome errors occurred: E0432, E0433, E0658.\r\nFor more information about an error, try `rustc --explain E0432`.\r\nerror: Could not compile `cuda-test`.\r\n```\r\n\r\nNote that I don't expect to get this working at this point, I wanted to report what to me (and someone on #rust who suggested I open this) a bug.\r\n\r\n#### rustc data:\r\n```\r\nrustc 1.29.0-nightly (12ed235ad 2018-07-18)\r\nbinary: rustc\r\ncommit-hash: 12ed235adc62e63b16bb4f715b143c37a5efa00d\r\ncommit-date: 2018-07-18\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.29.0-nightly\r\nLLVM version: 7.0\r\n```", "closed_by": {"login": "ethanhs", "id": 9504279, "node_id": "MDQ6VXNlcjk1MDQyNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/9504279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ethanhs", "html_url": "https://github.com/ethanhs", "followers_url": "https://api.github.com/users/ethanhs/followers", "following_url": "https://api.github.com/users/ethanhs/following{/other_user}", "gists_url": "https://api.github.com/users/ethanhs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ethanhs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ethanhs/subscriptions", "organizations_url": "https://api.github.com/users/ethanhs/orgs", "repos_url": "https://api.github.com/users/ethanhs/repos", "events_url": "https://api.github.com/users/ethanhs/events{/privacy}", "received_events_url": "https://api.github.com/users/ethanhs/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52599/timeline", "performed_via_github_app": null, "state_reason": "completed"}