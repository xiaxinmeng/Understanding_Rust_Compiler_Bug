{"url": "https://api.github.com/repos/rust-lang/rust/issues/91428", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91428/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91428/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91428/events", "html_url": "https://github.com/rust-lang/rust/issues/91428", "id": 1068754885, "node_id": "I_kwDOAAsO6M4_s-fF", "number": 91428, "title": "std::process::Command::spawn could benefit from [must_use]", "user": {"login": "nickdavies", "id": 118736, "node_id": "MDQ6VXNlcjExODczNg==", "avatar_url": "https://avatars.githubusercontent.com/u/118736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickdavies", "html_url": "https://github.com/nickdavies", "followers_url": "https://api.github.com/users/nickdavies/followers", "following_url": "https://api.github.com/users/nickdavies/following{/other_user}", "gists_url": "https://api.github.com/users/nickdavies/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickdavies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickdavies/subscriptions", "organizations_url": "https://api.github.com/users/nickdavies/orgs", "repos_url": "https://api.github.com/users/nickdavies/repos", "events_url": "https://api.github.com/users/nickdavies/events{/privacy}", "received_events_url": "https://api.github.com/users/nickdavies/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-12-01T18:44:31Z", "updated_at": "2022-01-05T22:59:53Z", "closed_at": "2022-01-05T22:59:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was writing some code that used `Command::new` for 3 commands that I wanted to run in a row and I accidentally copy/pasted code that used `spawn` instead of say `output` so my code silently kicked off all 3 commands at the same time and didn't wait for them to exit.\r\n\r\nI feel like most cases that you call `spawn` you probably should use the return value for that so having `must_use` on either `std::process::command::spawn` or on `std::process::Child` would be an easy way to make it harder to mess up here.\r\n\r\nGiven the following code: (https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=03f37b71d1c7c82b7f137b83d4800db5)\r\n\r\n```rust\r\n    Command::new(\"bash\")\r\n        .args(&[\"-c\", \"sleep 5; mkdir test\"])\r\n        .spawn()\r\n        .expect(\"failed to run mkdir test\");\r\n        \r\n    let result = Command::new(\"ls\")\r\n        .args(&[\"test\"])\r\n        .output()\r\n        .expect(\"failed to run ls test\");\r\n        \r\n    println!(\"{:?}\", result);\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 7.04s\r\n     Running `target/debug/playground`\r\n\r\nOutput { status: ExitStatus(ExitStatus(512)), stdout: \"\", stderr: \"ls: cannot access 'test': No such file or directory\\n\" }\r\n```\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\nwarning: unused return value of `child` that must be used\r\n  --> src/main.rs:11:5\r\n   |\r\n11 |     ...... <real code here> ...\r\n   |     ^^^^^^^^\r\n   |\r\n   = note: `#[warn(unused_must_use)]` on by default\r\n\r\n```\r\n\r\nI would be happy to make the PR to make this change myself however I am not sure if:\r\n 1) This change seems reasonable to others\r\n 2) If the attribute should be on the Child struct or just for this 1 function\r\n \r\n I also wasn't 100% sure what the right category for this was so feel free to move it around.", "closed_by": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91428/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91428/timeline", "performed_via_github_app": null, "state_reason": "completed"}