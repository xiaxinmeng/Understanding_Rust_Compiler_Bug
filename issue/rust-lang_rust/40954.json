{"url": "https://api.github.com/repos/rust-lang/rust/issues/40954", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40954/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40954/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40954/events", "html_url": "https://github.com/rust-lang/rust/issues/40954", "id": 218560409, "node_id": "MDU6SXNzdWUyMTg1NjA0MDk=", "number": 40954, "title": "Regression in botocore_parser-0.1.1, Rust 1.17", "user": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-31T16:59:15Z", "updated_at": "2017-04-04T17:41:21Z", "closed_at": "2017-04-04T17:40:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Unfortunately I cannot locate the git source for this crate, but here's what cargobomb says:\r\n\r\n```\r\nboom! testing botocore_parser-0.1.1 against nightly for nightly\r\nboom! running: cargo +nightly build --frozen\r\nboom! creating container for: cargo +nightly build --frozen\r\nboom! running `docker create -v /home/ec2-user/cargobomb/./work/local/test-source/nightly/nightly:/source:ro -v /home/ec2-user/cargobomb/./work/local/cargo-home:/cargo-home:ro -v /home/ec2-user/cargobomb/./work/local/rustup-home:/rustup-home:ro -v /home/ec2-user/cargobomb/./work/local/target-dirs/nightly/nightly:/target:rw -e USER_ID=500 -e CMD=cargo +nightly build --frozen cargobomb`\r\nblam! ebf0c9359fd13037b53446c0570a0c71dc99309b623a6f1ce227d11995403025\r\nboom! running `docker start -a ebf0c9359fd13037b53446c0570a0c71dc99309b623a6f1ce227d11995403025`\r\nkablam!    Compiling syntex_syntax v0.29.3\r\nkablam!    Compiling serde v0.6.15\r\nkablam!    Compiling Inflector v0.1.6\r\nkablam!    Compiling serde_json v0.6.1\r\nkablam!    Compiling aster v0.13.1\r\nkablam!    Compiling syntex v0.29.2\r\nkablam!    Compiling quasi v0.7.0\r\nkablam!    Compiling quasi_codegen v0.7.0\r\nkablam! error[E0271]: type mismatch resolving `for<'cx, 'r, 'r> <fn(&mut syntax::ext::base::ExtCtxt<'_>, syntax::codemap::Span, &[syntax::ast::TokenTree]) -> std::boxed::Box<syntax::ext::base::MacResult> {expand_quote_stmt::<'_>} as std::ops::FnOnce<(&'cx mut syntax::ext::base::ExtCtxt<'r>, syntax::codemap::Span, &'r [syntax::ast::TokenTree])>>::Output == std::boxed::Box<syntax::ext::base::MacResult + 'cx>`\r\nkablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi_codegen-0.7.0/src/lib.rs:728:9\r\nkablam!     |\r\nkablam! 728 |     reg.add_macro(\"quote_stmt\", expand_quote_stmt);\r\nkablam!     |         ^^^^^^^^^ expected bound lifetime parameter 'cx, found concrete lifetime\r\nkablam!     |\r\nkablam!     = note: concrete lifetime that was found is lifetime '_#61r\r\nkablam!     = note: required because of the requirements on the impl of `syntax::ext::base::TTMacroExpander` for `fn(&mut syntax::ext::base::ExtCtxt<'_>, syntax::codemap::Span, &[syntax::ast::TokenTree]) -> std::boxed::Box<syntax::ext::base::MacResult> {expand_quote_stmt::<'_>}`\r\nkablam! \r\nkablam! error[E0271]: type mismatch resolving `for<'cx, 'r, 'r> <fn(&mut syntax::ext::base::ExtCtxt<'_>, syntax::codemap::Span, &[syntax::ast::TokenTree]) -> std::boxed::Box<syntax::ext::base::MacResult> {expand_quote_item::<'_>} as std::ops::FnOnce<(&'cx mut syntax::ext::base::ExtCtxt<'r>, syntax::codemap::Span, &'r [syntax::ast::TokenTree])>>::Output == std::boxed::Box<syntax::ext::base::MacResult + 'cx>`\r\nkablam!    --> /cargo-home/registry/src/github.com-1ecc6299db9ec823/quasi_codegen-0.7.0/src/lib.rs:733:9\r\nkablam!     |\r\nkablam! 733 |     reg.add_macro(\"quote_item\", expand_quote_item);\r\nkablam!     |         ^^^^^^^^^ expected bound lifetime parameter 'cx, found concrete lifetime\r\nkablam!     |\r\nkablam!     = note: concrete lifetime that was found is lifetime '_#137r\r\nkablam!     = note: required because of the requirements on the impl of `syntax::ext::base::TTMacroExpander` for `fn(&mut syntax::ext::base::ExtCtxt<'_>, syntax::codemap::Span, &[syntax::ast::TokenTree]) -> std::boxed::Box<syntax::ext::base::MacResult> {expand_quote_item::<'_>}`\r\nkablam! \r\nkablam! error: aborting due to 2 previous errors\r\nkablam! \r\nkablam! error: Could not compile `quasi_codegen`.\r\nkablam! \r\nkablam! To learn more, run the command again with --verbose.\r\nboom! running `docker rm -f ebf0c9359fd13037b53446c0570a0c71dc99309b623a6f1ce227d11995403025`\r\nblam! ebf0c9359fd13037b53446c0570a0c71dc99309b623a6f1ce227d11995403025\r\n```\r\n\r\nI don't know whether this is on beta or not.\r\n\r\nMaybe one of the @rustoto authors can help repro.", "closed_by": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40954/timeline", "performed_via_github_app": null, "state_reason": "completed"}