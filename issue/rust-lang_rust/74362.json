{"url": "https://api.github.com/repos/rust-lang/rust/issues/74362", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74362/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74362/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74362/events", "html_url": "https://github.com/rust-lang/rust/issues/74362", "id": 657304335, "node_id": "MDU6SXNzdWU2NTczMDQzMzU=", "number": 74362, "title": "Mark TypeId::of as inline to avoid monomorphizing unnecessary code ", "user": {"login": "alecmocatta", "id": 1136246, "node_id": "MDQ6VXNlcjExMzYyNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1136246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alecmocatta", "html_url": "https://github.com/alecmocatta", "followers_url": "https://api.github.com/users/alecmocatta/followers", "following_url": "https://api.github.com/users/alecmocatta/following{/other_user}", "gists_url": "https://api.github.com/users/alecmocatta/gists{/gist_id}", "starred_url": "https://api.github.com/users/alecmocatta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alecmocatta/subscriptions", "organizations_url": "https://api.github.com/users/alecmocatta/orgs", "repos_url": "https://api.github.com/users/alecmocatta/repos", "events_url": "https://api.github.com/users/alecmocatta/events{/privacy}", "received_events_url": "https://api.github.com/users/alecmocatta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-15T12:16:30Z", "updated_at": "2021-12-24T23:12:11Z", "closed_at": "2021-12-24T23:12:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`TypeId` can be used to specialize code by comparing types explicitly (`TypeId::of::<u8>() == TypeId::of::<T>()`, [examples in the wild](https://grep.app/search?q=%3E%28%29%20%3D%3D%20TypeId%3A%3Aof&case=true&filter[lang][0]=Rust)) or implicitly (`<dyn Any>::downcast_mut`).\r\n\r\nIn release mode this works well; in debug mode though the unused impl is unnecessarily monomorphized and codegened, slowing compile time as well as run time.\r\n\r\nIt isn't a major issue as it only affects debug mode, but I wondered if it was worth marking `TypeId::of`, `<TypeId as PartialEq>::eq`, `<dyn Any>::is` and the various downcast methods as `inline(always)` to potentially reduce compile times and provide a nice debug mode runtime boost?\r\n\r\n```rust\r\nuse std::any::{Any, TypeId};\r\n\r\nstruct Container<T>(T);\r\n\r\nimpl<T: 'static> Container<T> {\r\n    fn foo(&mut self) {\r\n        if let Some(_) = <dyn Any>::downcast_mut::<Container<u8>>(self) {\r\n            // specialized impl\r\n            std::process::abort();\r\n        }\r\n        // general impl\r\n    }\r\n    fn bar(&mut self) {\r\n        if TypeId::of::<u8>() == TypeId::of::<T>() {\r\n            // specialized impl\r\n            std::process::abort();\r\n        }\r\n        // general impl\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let mut c = Container(String::new());\r\n    c.foo();\r\n    c.bar();\r\n}\r\n```\r\n\r\nSee e.g. `abort` is present in IR/assembly: [Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=d8eef12c17d11eeabf528557e9af6918)\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74362/reactions", "total_count": 2, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74362/timeline", "performed_via_github_app": null, "state_reason": "completed"}