{"url": "https://api.github.com/repos/rust-lang/rust/issues/66738", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66738/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66738/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66738/events", "html_url": "https://github.com/rust-lang/rust/issues/66738", "id": 528108632, "node_id": "MDU6SXNzdWU1MjgxMDg2MzI=", "number": 66738, "title": "Coercion from non-capturing closure to fn ptr fails when return type is `!`", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 800802916, "node_id": "MDU6TGFiZWw4MDA4MDI5MTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-coercions", "name": "A-coercions", "color": "f7e101", "default": false, "description": "Area: implicit and explicit `expr as Type` coercions"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-25T14:04:55Z", "updated_at": "2022-01-03T22:19:25Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Usually, non-capturing closures can be coerced to `fn` ptrs. But somehow that seems to fail when the return type is `!`:\r\n```rust\r\nfn magic<R, F: FnOnce() -> R>(f: F) -> F { f }\r\n\r\nfn main() {\r\n    let f1 = magic(|| {}) as fn() -> (); // works fine\r\n    let f2 = magic(|| loop {}) as fn() -> !; // errors\r\n}\r\n```\r\nThe error is\r\n```\r\nerror[E0605]: non-primitive cast: `[closure@src/main.rs:5:21: 5:31]` as `fn() -> !`\r\n --> src/main.rs:5:14\r\n  |\r\n5 |     let f2 = magic(|| loop {}) as fn() -> !;\r\n  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: an `as` expression can only be used to convert between primitive types. Consider using the `From` trait\r\n```\r\nThis fails even on nightly, where `!` should be stable as a type.\r\n\r\nCuriously, this works:\r\n```rust\r\nlet f2: fn() -> ! = || loop {};\r\n```\r\n\r\nCc @Centril ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66738/timeline", "performed_via_github_app": null, "state_reason": null}