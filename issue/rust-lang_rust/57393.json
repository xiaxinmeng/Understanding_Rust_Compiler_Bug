{"url": "https://api.github.com/repos/rust-lang/rust/issues/57393", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57393/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57393/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57393/events", "html_url": "https://github.com/rust-lang/rust/issues/57393", "id": 396313039, "node_id": "MDU6SXNzdWUzOTYzMTMwMzk=", "number": 57393, "title": "Suggest code to use enum type in return type when accidentally using variant instance", "user": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-07T00:46:55Z", "updated_at": "2020-06-11T17:35:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When encountering an enum variant instance in a return type, make a better effort to suggest appropriate code.\r\n\r\nRight now, if you accidentally write `Some(Span)` when you meant `Option<Span>`, we mention the existence of the enum, but we don't suggest code:\r\n\r\n```\r\nerror[E0573]: expected type, found variant `Some`\r\n    --> src/librustc_typeck/check/mod.rs:5198:10\r\n     |\r\n5198 |     ) -> Some(Span) {\r\n     |          ^^^^^^^^^^ not a type\r\n     |\r\n     = help: there is an enum variant `rustc::middle::cstore::LibSource::Some`, try using `rustc::middle::cstore::LibSource`?\r\n     = help: there is an enum variant `rustc::session::config::Passes::Some`, try using `rustc::session::config::Passes`?\r\n     = help: there is an enum variant `std::prelude::v1::Option::Some`, try using `std::prelude::v1::Option`?\r\n     = help: there is an enum variant `std::prelude::v1::Some`, try using `std::prelude::v1`?\r\n```\r\n\r\nIt'd be nice if we could suggest the appropriate code.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57393/timeline", "performed_via_github_app": null, "state_reason": null}