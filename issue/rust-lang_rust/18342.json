{"url": "https://api.github.com/repos/rust-lang/rust/issues/18342", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/18342/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/18342/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/18342/events", "html_url": "https://github.com/rust-lang/rust/issues/18342", "id": 46839391, "node_id": "MDU6SXNzdWU0NjgzOTM5MQ==", "number": 18342, "title": "Wrong x86 instruction generated for function call via raw pointer ", "user": {"login": "spersson", "id": 1425156, "node_id": "MDQ6VXNlcjE0MjUxNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1425156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spersson", "html_url": "https://github.com/spersson", "followers_url": "https://api.github.com/users/spersson/followers", "following_url": "https://api.github.com/users/spersson/following{/other_user}", "gists_url": "https://api.github.com/users/spersson/gists{/gist_id}", "starred_url": "https://api.github.com/users/spersson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spersson/subscriptions", "organizations_url": "https://api.github.com/users/spersson/orgs", "repos_url": "https://api.github.com/users/spersson/repos", "events_url": "https://api.github.com/users/spersson/events{/privacy}", "received_events_url": "https://api.github.com/users/spersson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-26T10:40:18Z", "updated_at": "2014-10-26T11:53:57Z", "closed_at": "2014-10-26T11:53:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "See example test case below, with two crates, one dynamically loading the other and trying to call it.\n\nThe wrong \"callq\" instruction is generated for x86-64, by rustc 0.12.0-dev, for the call site where the \"main\" crate calls a function from the \"app\" crate using the function pointer returned from DynamicLibrary.symbol().\n\napp.rs:\n\n```\n#![crate_type=\"dylib\"]\n\n#[no_mangle]\npub extern fn application_loop() {\n    println!(\"Hello from lib!\");\n}\n```\n\nmain.rs:\n\n```\n#![crate_type=\"bin\"]\n\nuse std::dynamic_lib::DynamicLibrary;\nuse std::path::Path;\n\nfn test1() {\n    println!(\"Hello from test1!\");\n}\n\nfn main() {\n// note that the following does not work, still need to run with $LD_LIBRARY_PATH \n// set to \".\" for the lib to be found\n    let l_local_dir_path = std::os::make_absolute(&Path::new(\".\"));\n    DynamicLibrary::prepend_search_path(&l_local_dir_path);\n\n    let l_library = match DynamicLibrary::open(Some(\"libapp.so\")) {\n        Err(msg) => fail!(\"Could not load the library: {}\", msg),\n        Ok(lib) => lib,\n    };\n\n    let l_app_loop: *mut extern fn() = unsafe {\n        match l_library.symbol(\"application_loop\") {\n            Err(error) => fail!(\"Could not load function application_loop: {}\", error),\n            Ok(sym) => sym\n        }\n    };\n\n     let f = test1;\n// this call site works\n    f();\n\n    unsafe {\n        println!(\"address is: {}\", l_app_loop);\n// this call site gets wrong addressing\n        (*l_app_loop)();\n    }\n}\n```\n\nThis gets generated:\n\n```\n0000000000008ffb <_ZN4main20hc17179379a8277f8UaaE+0x7bb>:\n    8ffb:       48 8b 85 90 fd ff ff    mov    -0x270(%rbp),%rax\n    9002:       ff 10                   callq  *(%rax)\n```\n\nThe correct instruction would be this:\n\n```\n0000000000008ffb <_ZN4main20hc17179379a8277f8UaaE+0x7bb>:\n    8ffb:       48 8b 85 90 fd ff ff    mov    -0x270(%rbp),%rax\n    9002:       ff d0                   callq  *%rax\n```\n\nIn other words, the address of the function to call ends up in register %rax, but instead of jumping to that address, the generated instruction will read the first 8 bytes of that function and interpret them as the address to jump to. Segfault.\n\nWould have liked to help by doing more than reporting but this really seems like a problem for gurus, not for me... at least within reasonable timeframe...:)\n", "closed_by": {"login": "spersson", "id": 1425156, "node_id": "MDQ6VXNlcjE0MjUxNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1425156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spersson", "html_url": "https://github.com/spersson", "followers_url": "https://api.github.com/users/spersson/followers", "following_url": "https://api.github.com/users/spersson/following{/other_user}", "gists_url": "https://api.github.com/users/spersson/gists{/gist_id}", "starred_url": "https://api.github.com/users/spersson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spersson/subscriptions", "organizations_url": "https://api.github.com/users/spersson/orgs", "repos_url": "https://api.github.com/users/spersson/repos", "events_url": "https://api.github.com/users/spersson/events{/privacy}", "received_events_url": "https://api.github.com/users/spersson/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/18342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/18342/timeline", "performed_via_github_app": null, "state_reason": "completed"}