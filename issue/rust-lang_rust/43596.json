{"url": "https://api.github.com/repos/rust-lang/rust/issues/43596", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43596/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43596/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43596/events", "html_url": "https://github.com/rust-lang/rust/issues/43596", "id": 247166771, "node_id": "MDU6SXNzdWUyNDcxNjY3NzE=", "number": 43596, "title": "Tracking issue for oom=panic (RFC 2116)", "user": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 89436934, "node_id": "MDU6TGFiZWw4OTQzNjkzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-RFC-approved", "name": "B-RFC-approved", "color": "d304cb", "default": false, "description": "Approved by a merged RFC but not yet implemented."}, {"id": 129836139, "node_id": "MDU6TGFiZWwxMjk4MzYxMzk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-allocators", "name": "A-allocators", "color": "f7e101", "default": false, "description": "Area: Custom and system allocators"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 2240305001, "node_id": "MDU6TGFiZWwyMjQwMzA1MDAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/Libs-Tracked", "name": "Libs-Tracked", "color": "d4c5f9", "default": false, "description": "Libs issues that are tracked on the team's project board."}, {"id": 3537209768, "node_id": "LA_kwDOAAsO6M7S1Ymo", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-ready-to-stabilize", "name": "S-tracking-ready-to-stabilize", "color": "4682b4", "default": false, "description": "This is ready to stabilize; it may need a stabilization report and a PR"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 54, "created_at": "2017-08-01T18:53:44Z", "updated_at": "2022-10-13T19:51:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Update:** This now the tracking issue for a mechanism to make OOM / memory allocation errors panic (and so by default unwind the thread) instead of aborting the process. This feature was accepted in RFC https://github.com/rust-lang/rfcs/pull/2116.\r\n\r\nIt was separated from https://github.com/rust-lang/rust/issues/48043, which tracks another feature of the same RFC, since the two features will likely be stabilized at different times.\r\n\r\n**Steps:**\r\n\r\n- [ ] Implement the RFC\r\n  - [ ] `std::alloc::set_allocation_error_hook` (tracked at https://github.com/rust-lang/rust/issues/51245) could potentially be this mechanism, but that hook is currently document as not allowed to unwind.\r\n- [ ] Adjust documentation ([see instructions on forge][doc-guide])\r\n- [ ] Stabilization PR ([see instructions on forge][stabilization-guide])\r\n\r\n[stabilization-guide]: https://forge.rust-lang.org/stabilization-guide.html\r\n[doc-guide]: https://forge.rust-lang.org/stabilization-guide.html#updating-documentation\r\n\r\n\r\nOriginal feature request:\r\n\r\n----\r\n\r\nSeveral users who are invested in the \"thread is a task\" model that Rust was originally designed around have expressed a desire to unwind in the case of OOM. Specifically each task has large and unpredictable memory usage, and tearing down the first task that encounters OOM is considered a reasonable strategy.\r\n\r\nAborting on OOM is considered unacceptable because it would be expensive to discard all the work that the other tasks have managed to do.\r\n\r\nWe already (accidentally?) specified that all allocators can panic on OOM, including the global one, with the introduction of generic allocators on collections. So in theory no one \"should\" be relying on the default `oom=abort` semantics. This knob would only affect the default global allocator. Presumably there would just be a function somewhere in the stdlib which is cfg'd to be a panic or abort based on this flag?\r\n\r\nThis is not a replacement for proper fallible allocation handling routines requested in #29802 because most of the potential users of **that** API build with `panic=abort`. Also the requesters of **this** API are unwilling to go through the effort to ensure all their dependents are using fallible allocations everywhere.\r\n\r\nI am dubious on this API but I'm filling an issue so that it's written down and everyone who wants it has a place to go and assert that it is in fact good and desirable.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43596/reactions", "total_count": 9, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 6, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43596/timeline", "performed_via_github_app": null, "state_reason": null}