{"url": "https://api.github.com/repos/rust-lang/rust/issues/61663", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61663/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61663/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61663/events", "html_url": "https://github.com/rust-lang/rust/issues/61663", "id": 453808501, "node_id": "MDU6SXNzdWU0NTM4MDg1MDE=", "number": 61663, "title": "Panic with `Layout mismatch when copying!` from macro", "user": {"login": "mickvangelderen", "id": 5444990, "node_id": "MDQ6VXNlcjU0NDQ5OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5444990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mickvangelderen", "html_url": "https://github.com/mickvangelderen", "followers_url": "https://api.github.com/users/mickvangelderen/followers", "following_url": "https://api.github.com/users/mickvangelderen/following{/other_user}", "gists_url": "https://api.github.com/users/mickvangelderen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mickvangelderen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mickvangelderen/subscriptions", "organizations_url": "https://api.github.com/users/mickvangelderen/orgs", "repos_url": "https://api.github.com/users/mickvangelderen/repos", "events_url": "https://api.github.com/users/mickvangelderen/events{/privacy}", "received_events_url": "https://api.github.com/users/mickvangelderen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252628, "node_id": "MDU6TGFiZWwyNjIyNTI2Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-beta", "name": "regression-from-stable-to-beta", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to beta."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}], "state": "closed", "locked": false, "assignee": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 16, "created_at": "2019-06-08T16:02:28Z", "updated_at": "2019-06-25T21:27:17Z", "closed_at": "2019-06-25T21:27:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code has the compiler (correctly) emit an error about how explicit enum tags with the default representation need to be of type `isize`. The compiler panics afterwards.\r\n\r\n```rust \r\nuse std::convert::TryFrom;\r\n\r\npub trait Symbol<T> {\r\n    const VALUE: T;\r\n}\r\n\r\npub struct FALSE;\r\n\r\nimpl Symbol<i32> for FALSE {\r\n    const VALUE: i32 = 0;\r\n}\r\n\r\npub struct TRUE;\r\n\r\nimpl Symbol<i32> for TRUE {\r\n    const VALUE: i32 = 1;\r\n}\r\n\r\nmacro_rules! impl_symbol_enum {\r\n    (\r\n        $Raw: ident,\r\n        $Enum: ident,\r\n        $Error: ident { $(\r\n            $Variant: ident = $Symbol: ident,\r\n        )* }\r\n    ) => {\r\n        #[derive(Debug)]\r\n        pub struct $Error($Raw);\r\n\r\n        #[derive(Debug, Copy, Clone, Eq, PartialEq)]\r\n        pub enum $Enum {\r\n            $(\r\n                $Variant = <$Symbol as Symbol<$Raw>>::VALUE,\r\n            )*\r\n        }\r\n\r\n        impl TryFrom<$Raw> for $Enum {\r\n            type Error = $Error;\r\n\r\n            fn try_from(value: $Raw) -> Result<Self, Self::Error> {\r\n                match value {\r\n                    $(\r\n                        valid if valid == <$Symbol as Symbol<$Raw>>::VALUE => Ok($Enum::$Variant),\r\n                    )*\r\n                    invalid => Err($Error(invalid)),\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nimpl_symbol_enum! {\r\n    i32,\r\n    InvalidLinkStatus,\r\n    LinkStatus {\r\n        Unlinked = FALSE,\r\n        Linked = TRUE,\r\n    }\r\n}\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> glw/src/glw.rs:35:28\r\n   |\r\n35 |                   $Variant = <$Symbol as Symbol<$Raw>>::VALUE,\r\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected isize, found i32\r\n...\r\n54 | / impl_symbol_enum! {\r\n55 | |     i32,\r\n56 | |     InvalidLinkStatus,\r\n57 | |     LinkStatus {\r\n...  |\r\n60 | |     }\r\n61 | | }\r\n   | |_- in this macro invocation\r\nhelp: you can convert an `i32` to `isize` and panic if the converted value wouldn't fit\r\n   |\r\n35 |                 $Variant = <$Symbol as Symbol<$Raw>>::VALUE.try_into().unwrap(),\r\n   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nthread 'rustc' panicked at 'Layout mismatch when copying!\r\nsrc: OpTy {\r\n    op: Indirect(\r\n        MemPlace {\r\n            ptr: AllocId(1).0x0,\r\n            align: Align {\r\n                pow2: 2,\r\n            },\r\n            meta: None,\r\n        },\r\n    ),\r\n    layout: TyLayout {\r\n        ty: i32,\r\n        details: LayoutDetails {\r\n            variants: Single {\r\n                index: 0,\r\n            },\r\n            fields: Union(\r\n                0,\r\n            ),\r\n            abi: Scalar(\r\n                Scalar {\r\n                    value: Int(\r\n                        I32,\r\n                        true,\r\n                    ),\r\n                    valid_range: 0..=4294967295,\r\n                },\r\n            ),\r\n            align: AbiAndPrefAlign {\r\n                abi: Align {\r\n                    pow2: 2,\r\n                },\r\n                pref: Align {\r\n                    pow2: 2,\r\n                },\r\n            },\r\n            size: Size {\r\n                raw: 4,\r\n            },\r\n        },\r\n    },\r\n}\r\ndest: PlaceTy {\r\n    place: Ptr(\r\n        MemPlace {\r\n            ptr: AllocId(0).0x0,\r\n            align: Align {\r\n                pow2: 3,\r\n            },\r\n            meta: None,\r\n        },\r\n    ),\r\n    layout: TyLayout {\r\n        ty: isize,\r\n        details: LayoutDetails {\r\n            variants: Single {\r\n                index: 0,\r\n            },\r\n            fields: Union(\r\n                0,\r\n            ),\r\n            abi: Scalar(\r\n                Scalar {\r\n                    value: Int(\r\n                        I64,\r\n                        true,\r\n                    ),\r\n                    valid_range: 0..=18446744073709551615,\r\n                },\r\n            ),\r\n            align: AbiAndPrefAlign {\r\n                abi: Align {\r\n                    pow2: 3,\r\n                },\r\n                pref: Align {\r\n                    pow2: 3,\r\n                },\r\n            },\r\n            size: Size {\r\n                raw: 8,\r\n            },\r\n        },\r\n    },\r\n}', src/librustc_mir/interpret/place.rs:826:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.37.0-nightly (d132f544f 2019-06-07) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n```\r\n\r\nI tried to reduce the code more but this code does *not* cause a panic:\r\n\r\n```rust\r\nmacro_rules! happy_compiler {\r\n    ($T: ident, $v: expr) => {\r\n        trait C<T> {\r\n            const V: T;\r\n        }\r\n\r\n        impl C<$T> for M {\r\n            const V: $T = $v;\r\n        }\r\n\r\n        enum E {\r\n            V = <M as C<$T>>::V,\r\n        }\r\n    };\r\n}\r\n\r\nhappy_compiler!(i32, 42);\r\n```\r\n\r\nI will happily move on after correcting my mistake but I thought I'd at least report this panic.\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.37.0-nightly (d132f544f 2019-06-07)\r\nbinary: rustc\r\ncommit-hash: d132f544f9d74e3cc047ef211e57eae60b78e5c5\r\ncommit-date: 2019-06-07\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.37.0-nightly\r\nLLVM version: 8.0\r\n```\r\n\r\nBacktrace:\r\n```\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.29/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.29/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:47\r\n   3: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:36\r\n   4: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   5: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:212\r\n   6: rustc::util::common::panic_hook\r\n   7: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:479\r\n   8: std::panicking::continue_panic_fmt\r\n             at src/libstd/panicking.rs:382\r\n   9: std::panicking::begin_panic_fmt\r\n             at src/libstd/panicking.rs:337\r\n  10: rustc_mir::interpret::place::<impl rustc_mir::interpret::eval_context::InterpretCx<M>>::copy_op_no_validate\r\n  11: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpretCx<M>>::run\r\n  12: rustc_mir::const_eval::eval_body_using_ecx\r\n  13: rustc_mir::const_eval::const_eval_raw_provider\r\n  14: rustc::ty::query::__query_compute::const_eval_raw\r\n  15: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval_raw>::compute\r\n  16: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  17: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  18: rustc_mir::const_eval::const_eval_provider\r\n  19: rustc::ty::query::__query_compute::const_eval\r\n  20: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval>::compute\r\n  21: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  22: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  23: <rustc_typeck::collect::CollectItemTypesVisitor as rustc::hir::intravisit::Visitor>::visit_item\r\n  24: rustc::hir::map::Map::visit_item_likes_in_module\r\n  25: rustc_typeck::collect::collect_mod_item_types\r\n  26: rustc::ty::query::__query_compute::collect_mod_item_types\r\n  27: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::collect_mod_item_types>::compute\r\n  28: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  29: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  30: rustc_typeck::check_crate::{{closure}}::{{closure}}\r\n  31: rustc::util::common::time\r\n  32: rustc_typeck::check_crate\r\n  33: rustc_interface::passes::analysis\r\n  34: rustc::ty::query::__query_compute::analysis\r\n  35: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  36: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  37: rustc::ty::context::tls::enter_global\r\n  38: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  39: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  40: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  41: std::thread::local::LocalKey<T>::with\r\n  42: scoped_tls::ScopedKey<T>::set\r\n  43: syntax::with_globals\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61663/timeline", "performed_via_github_app": null, "state_reason": "completed"}