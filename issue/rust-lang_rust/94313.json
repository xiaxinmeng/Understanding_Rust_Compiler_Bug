{"url": "https://api.github.com/repos/rust-lang/rust/issues/94313", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94313/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94313/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94313/events", "html_url": "https://github.com/rust-lang/rust/issues/94313", "id": 1148905785, "node_id": "I_kwDOAAsO6M5Eeuk5", "number": 94313, "title": "Zero-length arrays are non-`Copy`.", "user": {"login": "JohnScience", "id": 16991108, "node_id": "MDQ6VXNlcjE2OTkxMTA4", "avatar_url": "https://avatars.githubusercontent.com/u/16991108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnScience", "html_url": "https://github.com/JohnScience", "followers_url": "https://api.github.com/users/JohnScience/followers", "following_url": "https://api.github.com/users/JohnScience/following{/other_user}", "gists_url": "https://api.github.com/users/JohnScience/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnScience/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnScience/subscriptions", "organizations_url": "https://api.github.com/users/JohnScience/orgs", "repos_url": "https://api.github.com/users/JohnScience/repos", "events_url": "https://api.github.com/users/JohnScience/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnScience/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 347795552, "node_id": "MDU6TGFiZWwzNDc3OTU1NTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-specialization", "name": "A-specialization", "color": "f7e101", "default": false, "description": "Area: Trait impl specialization"}, {"id": 3425147156, "node_id": "LA_kwDOAAsO6M7MJ5kU", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-array", "name": "A-array", "color": "f7e101", "default": false, "description": "Area: [T; N]"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2022-02-24T06:18:54Z", "updated_at": "2023-04-05T17:40:29Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "According to the documentation of [`core::marker::Copy`][`Copy`],\r\n\r\n> Generally speaking, if your type can implement [`Copy`], it should. Keep in mind, though, that implementing [`Copy`] is part of the public API of your type. If the type might become non-[`Copy`] in the future, it could be prudent to omit the [`Copy`] implementation now, to avoid a breaking API change.\r\n\r\n[Zero-sized types](https://runrust.miraheze.org/wiki/Zero-sized_type) in general are a bit tricky in that regard because they (just like [`core::marker::PhantomData`](https://doc.rust-lang.org/core/marker/struct.PhantomData.html)) can be used to represent ownership over values of types that non-trivially implement [`core::ops::Drop`](https://doc.rust-lang.org/core/ops/trait.Drop.html).\r\n\r\nHowever, zero-length arrays perhaps should implement [`Copy`] because they can be bit-wise copied (assuming 0-bit/0-byte copy is permitted). It would allow implementing [`Copy`] on [overaligned][overalignment] types like the one below:\r\n\r\n![Screenshot 2022-02-23 202852](https://user-images.githubusercontent.com/16991108/155468288-7cd72a47-b2a2-4340-a81b-15887bf7ccd3.jpg)\r\n\r\n![Screenshot 2022-02-23 203825](https://user-images.githubusercontent.com/16991108/155468325-be34ed89-231d-45f9-ad66-44f771f26809.jpg)\r\n\r\nIs there anything that stops implementing [`Copy`] on zero-length arrays aside from [marker trait attribute](https://doc.rust-lang.org/beta/unstable-book/language-features/marker-trait-attr.html) dependency?\r\n\r\nP.S. I would love to have a generic type where the first generic parameter would be the type of the stored value and the second parameter would be a generic constant of type `usize` whose value would be used as a constraint for alignment, yet it is a story for discussion on Rust internals/another issue/RFC.\r\n\r\n# References\r\n\r\n* [\"What is overalignment of execution regions and input sections?\", Stack Overflow][overalignment]\r\n\r\n[overalignment]: https://stackoverflow.com/questions/8732441/what-is-overalignment-of-execution-regions-and-input-sections\r\n[`Copy`]: https://doc.rust-lang.org/core/marker/trait.Copy.html", "closed_by": {"login": "JohnScience", "id": 16991108, "node_id": "MDQ6VXNlcjE2OTkxMTA4", "avatar_url": "https://avatars.githubusercontent.com/u/16991108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnScience", "html_url": "https://github.com/JohnScience", "followers_url": "https://api.github.com/users/JohnScience/followers", "following_url": "https://api.github.com/users/JohnScience/following{/other_user}", "gists_url": "https://api.github.com/users/JohnScience/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnScience/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnScience/subscriptions", "organizations_url": "https://api.github.com/users/JohnScience/orgs", "repos_url": "https://api.github.com/users/JohnScience/repos", "events_url": "https://api.github.com/users/JohnScience/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnScience/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94313/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94313/timeline", "performed_via_github_app": null, "state_reason": null}