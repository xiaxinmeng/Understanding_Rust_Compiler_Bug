{"url": "https://api.github.com/repos/rust-lang/rust/issues/58264", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58264/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58264/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58264/events", "html_url": "https://github.com/rust-lang/rust/issues/58264", "id": 407663830, "node_id": "MDU6SXNzdWU0MDc2NjM4MzA=", "number": 58264, "title": "Type derivation failure on generic parameters: type annotations required", "user": {"login": "dhardy", "id": 134893, "node_id": "MDQ6VXNlcjEzNDg5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhardy", "html_url": "https://github.com/dhardy", "followers_url": "https://api.github.com/users/dhardy/followers", "following_url": "https://api.github.com/users/dhardy/following{/other_user}", "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions", "organizations_url": "https://api.github.com/users/dhardy/orgs", "repos_url": "https://api.github.com/users/dhardy/repos", "events_url": "https://api.github.com/users/dhardy/events{/privacy}", "received_events_url": "https://api.github.com/users/dhardy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-07T11:55:29Z", "updated_at": "2019-03-04T22:13:45Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following example fails with this error:\r\n```\r\nerror[E0284]: type annotations required: cannot resolve `<E as H>::R == NR`                                                            \r\n  --> examples/minreprod/src/main.rs:24:36                                                                                             \r\n   |                                                                                                                                   \r\n24 |             impl<E: H<R = NR>, ER> H for A<E>                                                                                     \r\n   |                                    ^                                                                                              \r\n   |                                                                                                                                   \r\n   = note: required because of the requirements on the impl of `H` for `main::make_a::A<E>`                                            \r\n```\r\n\r\nExample:\r\n\r\n```rust\r\npub struct NR;\r\n\r\npub trait H {\r\n    type R: From<NR>;\r\n}\r\n\r\nstruct X {}\r\nimpl H for X {\r\n    type R = NR;\r\n}\r\n\r\nfn main() {\r\n    fn make_a() -> impl H<R = NR> {\r\n        {\r\n            struct A<E: H<R = NR>> {\r\n                e: E,\r\n            }\r\n\r\n            impl<E: H<R = NR>, ER> H for A<E>\r\n            where\r\n                E: H<R = ER>,\r\n                ER: From<NR>,\r\n                NR: From<ER>,\r\n            {\r\n                type R = NR;\r\n            }\r\n            \r\n            A { e: X{} }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nIf you remove the `ER` parameter here, and all bounds on it, compilation succeeds. Likewise, if you remove the bound on `E`, compilation succeeds.\r\n\r\nObviously some of the parameters/bounds are redundant, but I'm generating code like this from a macro which doesn't know how to interpret extra bounds like `E: H<R = NR>` and must include the other bounds to handle other cases, while the compiler should (IMO) be able to figure this out.\r\n\r\nFor the curious, this is related to [`kas::macros::make_widget`](https://docs.rs/kas/0.0.2/kas/macros/index.html#the-make_widget-macro).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58264/timeline", "performed_via_github_app": null, "state_reason": null}