{"url": "https://api.github.com/repos/rust-lang/rust/issues/82079", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82079/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82079/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82079/events", "html_url": "https://github.com/rust-lang/rust/issues/82079", "id": 807849870, "node_id": "MDU6SXNzdWU4MDc4NDk4NzA=", "number": 82079, "title": "Something to do with the parameter to AddAssign", "user": {"login": "davidspies", "id": 25523854, "node_id": "MDQ6VXNlcjI1NTIzODU0", "avatar_url": "https://avatars.githubusercontent.com/u/25523854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidspies", "html_url": "https://github.com/davidspies", "followers_url": "https://api.github.com/users/davidspies/followers", "following_url": "https://api.github.com/users/davidspies/following{/other_user}", "gists_url": "https://api.github.com/users/davidspies/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidspies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidspies/subscriptions", "organizations_url": "https://api.github.com/users/davidspies/orgs", "repos_url": "https://api.github.com/users/davidspies/repos", "events_url": "https://api.github.com/users/davidspies/events{/privacy}", "received_events_url": "https://api.github.com/users/davidspies/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-02-13T23:25:51Z", "updated_at": "2021-12-01T16:36:11Z", "closed_at": "2021-12-01T16:36:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nNote that adding the (redundant) constraint `R2: AddAssign<R2>` at line 16 makes the error go away.\r\n\r\nInlining the call to `other.map` at line 23 results in the compile-time message \"cannot add-assign `R2` to `R2`\". Inlining the _second_ call to `map` at line 23 makes the error go away.\r\n\r\n### [Code](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=fdcae25fe68c342195241dc4a5352ce2)\r\n\r\n```Rust\r\nmod convenience_operators {\r\n    use crate::{Op, Relation};\r\n    use std::ops::AddAssign;\r\n    use std::ops::Mul;\r\n\r\n    impl<C: Op> Relation<C> {\r\n        pub fn map<F: Fn(C::D) -> D2 + 'static, D2: 'static>(\r\n            self,\r\n            f: F,\r\n        ) -> Relation<impl Op<D = D2, R = C::R>> {\r\n            self.map_dr(move |x, r| (f(x), r))\r\n        }\r\n    }\r\n\r\n    impl<K: 'static, V: 'static, C: Op<D = (K, V)>> Relation<C> {\r\n        pub fn semijoin<C2: Op<D = K, R = R2>, R2, R3: AddAssign<R3>>(\r\n            self,\r\n            other: Relation<C2>,\r\n        ) -> Relation<impl Op<D = C::D, R = R3>>\r\n        where\r\n            C::R: Mul<R2, Output = R3>,\r\n        {\r\n            self.join(other.map(|x| (x, ()))).map(|(k, x, ())| (k, x))\r\n        }\r\n    }\r\n}\r\n\r\nmod core {\r\n    mod operator {\r\n        mod join {\r\n            use super::Op;\r\n            use crate::core::Relation;\r\n            use std::ops::{AddAssign, Mul};\r\n            struct Join<LC, RC> {\r\n                _left: LC,\r\n                _right: RC,\r\n            }\r\n            impl<\r\n                    LC: Op<D = (K, LD), R = LR>,\r\n                    RC: Op<D = (K, RD), R = RR>,\r\n                    K: 'static,\r\n                    LD: 'static,\r\n                    LR: AddAssign<LR> + Mul<RR, Output = OR>,\r\n                    RD: 'static,\r\n                    RR: AddAssign<RR>,\r\n                    OR: AddAssign<OR>,\r\n                > Op for Join<LC, RC>\r\n            {\r\n                type D = (K, LD, RD);\r\n                type R = OR;\r\n            }\r\n            impl<K: 'static, D: 'static, C: Op<D = (K, D)>> Relation<C> {\r\n                pub fn join<C2: Op<D = (K, D2)>, D2: 'static, OR: AddAssign<OR>>(\r\n                    self,\r\n                    other: Relation<C2>,\r\n                ) -> Relation<impl Op<D = (K, D, D2), R = OR>>\r\n                where\r\n                    C::R: Mul<C2::R, Output = OR>,\r\n                {\r\n                    Relation {\r\n                        inner: Join {\r\n                            _left: self.inner,\r\n                            _right: other.inner,\r\n                        },\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        mod map {\r\n            use super::Op;\r\n            use crate::core::Relation;\r\n            use std::ops::AddAssign;\r\n            struct Map<C, MF> {\r\n                _inner: C,\r\n                _op: MF,\r\n            }\r\n            impl<\r\n                    D1,\r\n                    R1,\r\n                    D2: 'static,\r\n                    R2: AddAssign<R2>,\r\n                    C: Op<D = D1, R = R1>,\r\n                    MF: Fn(D1, R1) -> (D2, R2),\r\n                > Op for Map<C, MF>\r\n            {\r\n                type D = D2;\r\n                type R = R2;\r\n            }\r\n            impl<C: Op> Relation<C> {\r\n                pub fn map_dr<F: Fn(C::D, C::R) -> (D2, R2), D2: 'static, R2: AddAssign<R2>>(\r\n                    self,\r\n                    f: F,\r\n                ) -> Relation<impl Op<D = D2, R = R2>> {\r\n                    Relation {\r\n                        inner: Map {\r\n                            _inner: self.inner,\r\n                            _op: f,\r\n                        },\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        use std::ops::AddAssign;\r\n        pub trait Op {\r\n            type D: 'static;\r\n            type R: AddAssign<Self::R>;\r\n        }\r\n    }\r\n    pub use self::operator::Op;\r\n    #[derive(Clone)]\r\n    pub struct Relation<C> {\r\n        inner: C,\r\n    }\r\n}\r\n\r\nuse self::core::Op;\r\npub use self::core::Relation;\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.52.0-nightly (07194ffcd 2021-02-10)\r\nbinary: rustc\r\ncommit-hash: 07194ffcd25b0871ce560b9f702e52db27ac9f77\r\ncommit-date: 2021-02-10\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.52.0-nightly\r\nLLVM version: 11.0.1\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n   Compiling dc2 v0.1.0 (/home/david/projects/dc2)\r\nerror: internal compiler error: compiler/rustc_traits/src/normalize_erasing_regions.rs:43:32: could not fully normalize `core::Relation<impl core::operator::Op>`\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/07194ffcd25b0871ce560b9f702e52db27ac9f77/library/std/src/panic.rs:59:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.52.0-nightly (07194ffcd 2021-02-10) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [normalize_generic_arg_after_erasing_regions] normalizing `core::Relation<impl core::operator::Op>`\r\n#1 [optimized_mir] optimizing MIR for `convenience_operators::<impl core::Relation<C>>::semijoin`\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `dc2`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: std::panic::panic_any\r\n   2: rustc_errors::HandlerInner::bug\r\n   3: rustc_errors::Handler::bug\r\n   4: rustc_middle::ty::context::tls::with_opt\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: rustc_infer::infer::InferCtxtBuilder::enter\r\n   8: rustc_traits::normalize_erasing_regions::normalize_generic_arg_after_erasing_regions\r\n   9: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  10: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  11: rustc_data_structures::stack::ensure_sufficient_stack\r\n  12: rustc_query_system::query::plumbing::force_query_with_job\r\n  13: rustc_query_system::query::plumbing::get_query_impl\r\n  14: rustc_middle::ty::normalize_erasing_regions::<impl rustc_middle::ty::context::TyCtxt>::normalize_erasing_regions\r\n  15: <rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt> as rustc_target::abi::LayoutOf>::layout_of\r\n  16: <rustc_mir::transform::const_prop::ConstProp as rustc_mir::transform::MirPass>::run_pass\r\n  17: rustc_mir::transform::run_passes\r\n  18: rustc_mir::transform::optimized_mir\r\n  19: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::optimized_mir>::compute\r\n  20: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  21: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  22: rustc_data_structures::stack::ensure_sufficient_stack\r\n  23: rustc_query_system::query::plumbing::force_query_with_job\r\n  24: rustc_query_system::query::plumbing::get_query_impl\r\n  25: rustc_metadata::rmeta::encoder::EncodeContext::encode_crate_root\r\n  26: rustc_metadata::rmeta::encoder::encode_metadata_impl\r\n  27: rustc_data_structures::sync::join\r\n  28: rustc_metadata::rmeta::encoder::encode_metadata\r\n  29: rustc_metadata::rmeta::decoder::cstore_impl::<impl rustc_middle::middle::cstore::CrateStore for rustc_metadata::creader::CStore>::encode_metadata\r\n  30: rustc_middle::ty::context::TyCtxt::encode_metadata\r\n  31: rustc_interface::passes::QueryContext::enter\r\n  32: rustc_interface::queries::Queries::ongoing_codegen\r\n  33: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  34: rustc_span::with_source_map\r\n  35: rustc_interface::interface::create_compiler_and_run\r\n  36: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82079/timeline", "performed_via_github_app": null, "state_reason": "completed"}