{"url": "https://api.github.com/repos/rust-lang/rust/issues/24518", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/24518/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/24518/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/24518/events", "html_url": "https://github.com/rust-lang/rust/issues/24518", "id": 69063920, "node_id": "MDU6SXNzdWU2OTA2MzkyMA==", "number": 24518, "title": "Make libsyntax compile with minimal amount of feature flags", "user": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-04-17T05:09:27Z", "updated_at": "2017-05-12T23:41:06Z", "closed_at": "2017-05-12T23:41:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This a meta-bug that's tracking getting libsyntax to compile with the smallest possible feature flag set so that I can use it as the foundation for [syntex](https://github.com/erickt/rust-syntex). I've done a bunch of the work in #24487, but here are some more longer term dependencies that need some planning:\n\n Here's what needs to be done:\n\n`#[feature(core)]`:\n- [x] `Int::zero()` in ast\n- [x] `ToPrimitive` in codemap\n- [x] `usize::to_u32()` in codemap\n- [x] `ptr::read_and_drop()` in fold\n- [x] `slice::ref_slice()` in parser\n\n`#[feature(collections)]`:\n- [ ] `std::collections::BitSet`\n- [x] `String::escape_default`\n\n`#[feature(libc)]`:\n- [x] `libc::c_uint` in codemap.rs\n- [ ] `libc::isatty(libc::STDERR_FILENO)` in diagnostic.rs\n\n`#[feature(unicode)]`:\n- [x] `char.width()` in diagnostic.rs\n- [x] `char.is_xid_start()` in lexer\n- [x] `char.is_xid_continue()` in lexer\n\n`#[feature(path_ext)]`:\n- [x] `Path::exists()` - easily replaced with call to metadata\n\n`#[feature(str_char)]`:\n- [x] `str::char_at()` - replace with `s.chars().take()`\n- [x] `str::slice_shift_char()`\n\n`#[feature(rustc_private)]`:\n- [ ] `arena`\n- [ ] `fmt_macros`\n- [ ] `term` - can use https://github.com/rust-lang/term\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/24518/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/24518/timeline", "performed_via_github_app": null, "state_reason": "completed"}