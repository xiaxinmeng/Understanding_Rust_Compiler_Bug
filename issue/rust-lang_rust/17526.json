{"url": "https://api.github.com/repos/rust-lang/rust/issues/17526", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/17526/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/17526/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/17526/events", "html_url": "https://github.com/rust-lang/rust/issues/17526", "id": 43832719, "node_id": "MDU6SXNzdWU0MzgzMjcxOQ==", "number": 17526, "title": "Confusing error mentions lifetimes while problem is mutability?", "user": {"login": "wizeman", "id": 168610, "node_id": "MDQ6VXNlcjE2ODYxMA==", "avatar_url": "https://avatars.githubusercontent.com/u/168610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wizeman", "html_url": "https://github.com/wizeman", "followers_url": "https://api.github.com/users/wizeman/followers", "following_url": "https://api.github.com/users/wizeman/following{/other_user}", "gists_url": "https://api.github.com/users/wizeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/wizeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wizeman/subscriptions", "organizations_url": "https://api.github.com/users/wizeman/orgs", "repos_url": "https://api.github.com/users/wizeman/repos", "events_url": "https://api.github.com/users/wizeman/events{/privacy}", "received_events_url": "https://api.github.com/users/wizeman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-09-25T01:07:49Z", "updated_at": "2015-10-27T14:07:12Z", "closed_at": "2015-10-27T14:07:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If I try to compile the following (useless) code:\n\n``` rust\npub struct ObjRef<'a> {\n    r: &'a int\n}\n\nimpl<'a> ObjRef<'a> {\n    pub fn get_obj(&'a mut self) -> &'a int {\n        self.r\n    }\n}\n\npub struct ObjIter<'a> {\n    x: &'a int\n}\n\nimpl<'a> Iterator<ObjRef<'a>> for ObjIter<'a> {\n    fn next(&mut self) -> Option<ObjRef<'a>> {\n        Some(ObjRef { r: self.x })\n    }\n}\n\nfn test(iter: &mut ObjIter) {\n    for obj_ref in iter {\n        let obj = obj_ref.get_obj();\n    }\n}\n\nfn main() {\n}\n```\n\n... the compiler gives me this error message:\n\n``` rust\nmain.rs:23:19: 23:26 error: `obj_ref` does not live long enough\nmain.rs:23         let obj = obj_ref.get_obj();\n                             ^~~~~~~\nmain.rs:21:29: 25:2 note: reference must be valid for the anonymous lifetime #2 defined on the block at 21:28...\nmain.rs:21 fn test(iter: &mut ObjIter) {\nmain.rs:22     for obj_ref in iter {\nmain.rs:23         let obj = obj_ref.get_obj();\nmain.rs:24     }\nmain.rs:25 }\nmain.rs:22:25: 24:6 note: ...but borrowed value is only valid for the block at 22:24\nmain.rs:22     for obj_ref in iter {\nmain.rs:23         let obj = obj_ref.get_obj();\nmain.rs:24     }\nerror: aborting due to previous error\n```\n\nHowever, if I remove the \"mut\" keyword from the following line, the code compiles fine:\n\n``` rust\n    pub fn get_obj(&'a mut self) -> &'a int {\n```\n\nIt took me a long time to figure this out, because my code was more complex and I thought the problem was related to how lifetimes were defined in my structures or functions, since at no point the compiler indicated that the problem could be related to mutability.\n\nNote that if I compile this _very_ similar code instead:\n\n``` rust\npub struct ObjRef<'a> {\n    r: int\n}\n\nimpl<'a> ObjRef<'a> {\n    pub fn get_obj(&'a mut self) -> &'a int {\n        &self.r\n    }\n}\n\npub struct ObjIter<'a> {\n    x: &'a int\n}\n\nimpl<'a> Iterator<ObjRef<'a>> for ObjIter<'a> {\n    fn next(&mut self) -> Option<ObjRef<'a>> {\n        Some(ObjRef { r: *self.x })\n    }\n}\n\nfn test(iter: &mut ObjIter) {\n    for obj_ref in iter {\n        let obj = obj_ref.get_obj();\n    }\n}\n\nfn main() {\n}\n```\n\n... I get a much more useful error message:\n\n``` rust\nmain.rs:23:19: 23:26 error: cannot borrow immutable local variable `obj_ref` as mutable\nmain.rs:23         let obj = obj_ref.get_obj();\n                             ^~~~~~~\nerror: aborting due to previous error\n```\n\nThe only apparent main difference between the two pieces of code is that the \"r\" field of ObjRef is a borrowed pointer to an \"int\" in the first example, while it's simply an \"int\" in the second example.\n\nIt's also unintuitive to me (as a user) how changing implementation details of a struct and a function, i.e., changing the struct field from a borrowed int to an int, can lead to a different compiler error in an external user of the function considering that the function signature did not change.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/17526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/17526/timeline", "performed_via_github_app": null, "state_reason": "completed"}