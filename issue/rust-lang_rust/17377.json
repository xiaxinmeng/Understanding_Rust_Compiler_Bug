{"url": "https://api.github.com/repos/rust-lang/rust/issues/17377", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/17377/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/17377/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/17377/events", "html_url": "https://github.com/rust-lang/rust/issues/17377", "id": 43173578, "node_id": "MDU6SXNzdWU0MzE3MzU3OA==", "number": 17377, "title": "Add pop method to json Decoder", "user": {"login": "yaitskov", "id": 1292734, "node_id": "MDQ6VXNlcjEyOTI3MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1292734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaitskov", "html_url": "https://github.com/yaitskov", "followers_url": "https://api.github.com/users/yaitskov/followers", "following_url": "https://api.github.com/users/yaitskov/following{/other_user}", "gists_url": "https://api.github.com/users/yaitskov/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaitskov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaitskov/subscriptions", "organizations_url": "https://api.github.com/users/yaitskov/orgs", "repos_url": "https://api.github.com/users/yaitskov/repos", "events_url": "https://api.github.com/users/yaitskov/events{/privacy}", "received_events_url": "https://api.github.com/users/yaitskov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-09-18T20:14:27Z", "updated_at": "2015-01-29T04:04:26Z", "closed_at": "2015-01-29T04:03:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Now it's impossible to implement Decodable for a map with different value types\nbecause read_\\* methods lose the stack head anyway. \nDecodable doesn't have a method returning the stack head as-is without any type casting.\n\nLet's look a case where Json dictionary has values with int and  String types.\n\n```\nextern crate serialize;\nuse serialize::{Decodable, Decoder};\nuse serialize::json::{Json, Boolean, String, Null, I64, U64, F64};\nuse serialize::json;\n\n#[deriving(Show)]\nstruct Primitive(Json);\n\nimpl<S: Decoder<E>, E> Decodable<S, E> for Primitive {\n    fn decode(decoder: &mut S) -> Result<Primitive, E> {\n        match decoder.pop() {      \n            n @ I64(_)    => Primitive(n),\n            n @ U64(_)    => Primitive(n),\n            n @ F64(_)    => Primitive(n),\n            s @ String(_) => Primitive(s),\n            bad           => fail!(\"bad {}\", bad)\n       }\n    }\n}\n```\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/17377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/17377/timeline", "performed_via_github_app": null, "state_reason": "completed"}