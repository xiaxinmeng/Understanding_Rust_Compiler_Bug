{"url": "https://api.github.com/repos/rust-lang/rust/issues/79856", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79856/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79856/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79856/events", "html_url": "https://github.com/rust-lang/rust/issues/79856", "id": 760405067, "node_id": "MDU6SXNzdWU3NjA0MDUwNjc=", "number": 79856, "title": "Crash in decoder.rs: 'called `Option::unwrap()` on a `None` value', compiler\\rustc_metadata\\src\\rmeta\\decoder.rs:1565:75", "user": {"login": "Nanduhirion", "id": 5813650, "node_id": "MDQ6VXNlcjU4MTM2NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5813650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nanduhirion", "html_url": "https://github.com/Nanduhirion", "followers_url": "https://api.github.com/users/Nanduhirion/followers", "following_url": "https://api.github.com/users/Nanduhirion/following{/other_user}", "gists_url": "https://api.github.com/users/Nanduhirion/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nanduhirion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nanduhirion/subscriptions", "organizations_url": "https://api.github.com/users/Nanduhirion/orgs", "repos_url": "https://api.github.com/users/Nanduhirion/repos", "events_url": "https://api.github.com/users/Nanduhirion/events{/privacy}", "received_events_url": "https://api.github.com/users/Nanduhirion/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-12-09T15:01:40Z", "updated_at": "2020-12-09T21:49:20Z", "closed_at": "2020-12-09T21:49:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nI suppose it has something to do with \"clone_into\" since this was the last line I added. Before that compiling was successful.\r\n\r\n```Rust\r\n         let w: u32 = (b.width - b.x).ceil() as u32;\r\n            let h: u32 = (b.height - b.y).ceil() as u32;\r\n            let mut pixels = vec![127 as u8; (w * h * 4) as usize];\r\n            let fractal: Fractal = calculation::Fractal::new(\r\n                0.0,\r\n                0.0,\r\n                3.0,\r\n                512,\r\n                4.0,\r\n                w as i32,\r\n                h as i32,\r\n                calculation::Fractal::c_modulo,\r\n                4,\r\n                w as i32 *4,\r\n            );\r\n            let p: Arc<Mutex<FractalParams>> = Arc::clone(&fractal.params);\r\n            let p2: MutexGuard<FractalParams> = p.lock().unwrap();\r\n            p2.calculate_fractal();\r\n            let p3 = p2.pixels.lock().unwrap();\r\n            p3.clone_into(&mut pixels);\r\n            let image_handle: Handle = image::Handle::from_pixels(w, h, pixels);\r\n\r\n            (\r\n                Primitive::Image { handle: image_handle, bounds: b },\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0-nightly (e792288df 2020-12-05)\r\nbinary: rustc\r\ncommit-hash: e792288df31636ca28108516c63a00ce4267063a\r\ncommit-date: 2020-12-05\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.50.0-nightly\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler\\rustc_metadata\\src\\rmeta\\decoder.rs:1565:75\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (e792288df 2020-12-05) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental -C target-feature=+adx,+aes,+amx-bf16,+amx-int8,+amx-tile,+avx,+avx2,+avx512bf16,+avx512bitalg,+avx512bw,+avx512cd,+avx512dq,+avx512er,+avx512f,+avx512ifma,+avx512pf,+avx512vbmi,+avx512vbmi2,+avx512vl,+avx512vnni,+avx512vp2intersect,+avx512vpopcntdq,-bmi,-bmi2,+branchfusion,+clflushopt,+clwb,+cmov,+cx16,+cx8,+enqcmd,+ermsb,+f16c,+fast-11bytenop,+fast-15bytenop,+fast-7bytenop,-fast-bextr,+fast-gather,+fast-hops,+fast-lzcnt,+fast-scalar-fsqrt,+fast-scalar-shift-masks,+fast-shld-rotate,+fast-variable-shuffle,+fast-vector-fsqrt,+fast-vector-shift-masks,+fma,+fma4,+fsgsbase,+fxsr,+gfni,+idivl-to-divb,+idivq-to-divl,+lwp,+lzcnt,+macrofusion,+merge-to-threeway-branch,+mmx,+movbe,+movdir64b,+movdiri,+mwaitx,+nopl,+pad-short-functions,+pclmul,+pconfig,+popcnt,+prefer-256-bit,+prefer-mask-registers,+prfchw,+ptwrite,+rdpid,+rdrnd,+rdseed,+rtm,+sahf,+serialize,+sha,+shstk,+sse,+sse-unaligned-mem,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,-tbm,+tsxldtrk,+use-aa,+use-glm-div-sqrt-costs,+vaes,+vpclmulqdq,+vzeroupper,+waitpkg,+wbnoinvd,+xop,+xsave,+xsavec,+xsaveopt,+xsaves --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [codegen_fn_attrs] computing codegen attributes of `futures_task::future_obj::if_alloc::<impl iced_native::futures::future::UnsafeFutureObj<'a, T> for std::boxed::Box<F>>::into_raw`\r\n#1 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler\\rustc_metadata\\src\\rmeta\\decoder.rs:1565:75\r\nstack backtrace:\r\n   0:     0x7ffcaebbb865 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h106ca6f8fb6a294d\r\n   1:     0x7ffcaebe727b - core::fmt::write::h6390b994d95aebdb\r\n   2:     0x7ffcaebacefd - <std::io::IoSlice as core::fmt::Debug>::fmt::hd713332ae62141f3\r\n   3:     0x7ffcaebbfbdd - std::panicking::take_hook::h78f8a454f3a4df82\r\n   4:     0x7ffcaebbf66a - std::panicking::take_hook::h78f8a454f3a4df82\r\n   5:     0x7ffc9fc61127 - rustc_driver::report_ice::h4bc3647b6f621de8\r\n   6:     0x7ffcaebc0730 - std::panicking::rust_panic_with_hook::h931fd6f26be82856\r\n   7:     0x7ffcaebc01d3 - rust_begin_unwind\r\n   8:     0x7ffcaebbc20f - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h106ca6f8fb6a294d\r\n   9:     0x7ffcaebc0159 - rust_begin_unwind\r\n  10:     0x7ffcaebe32f0 - core::panicking::panic_fmt::h45da916c710b88f7\r\n  11:     0x7ffcaebe323c - core::panicking::panic::h3a7a516f2be28c18\r\n  12:     0x7ffca3404ba6 - rustc_metadata::dynamic_lib::DynamicLibrary::open::h6e15f450696ffdaf\r\n  13:     0x7ffca359eb5d - rustc_metadata::rmeta::decoder::cstore_impl::<impl rustc_middle::middle::cstore::CrateStore for rustc_metadata::creader::CStore>::def_path_hash_to_def_id::hb8b08d53ae47c264\r\n  14:     0x7ffca40f1352 - rustc_middle::ty::query::on_disk_cache::OnDiskCache::compute_cnum_map::hbae92ac2867b06ae\r\n  15:     0x7ffca3f007b9 - rustc_middle::ty::query::force_from_dep_node::h841e1a791cab1f4a\r\n  16:     0x7ffca43d7425 - rustc_middle::ty::context::tls::TLV::__getit::h04ab82409bdf58e1\r\n  17:     0x7ffca43d721a - rustc_middle::ty::context::tls::TLV::__getit::h04ab82409bdf58e1\r\n  18:     0x7ffca4020281 - rustc_middle::ty::context::TyCtxt::_intern_place_elems::hf379b6ef10105517\r\n  19:     0x7ffca42afdd8 - rustc_middle::ty::context::tls::TLV::__getit::h04ab82409bdf58e1\r\n  20:     0x7ffca419c788 - rustc_middle::mir::mono::MonoItem::instantiation_mode::hc366da6f5e5e4fc5\r\n  21:     0x7ffca2be31e4 - <rustc_mir::dataflow::framework::graphviz::CfgEdge as core::fmt::Debug>::fmt::h2537cda26d18b021\r\n  22:     0x7ffca2da2dd8 - rustc_mir::monomorphize::collector::collect_crate_mono_items::h3b6010febd9be0ec\r\n  23:     0x7ffca2da24ff - rustc_mir::monomorphize::collector::collect_crate_mono_items::h3b6010febd9be0ec\r\n  24:     0x7ffca2da2600 - rustc_mir::monomorphize::collector::collect_crate_mono_items::h3b6010febd9be0ec\r\n  25:     0x7ffca2da2600 - rustc_mir::monomorphize::collector::collect_crate_mono_items::h3b6010febd9be0ec\r\n  26:     0x7ffca2da2600 - rustc_mir::monomorphize::collector::collect_crate_mono_items::h3b6010febd9be0ec\r\n  27:     0x7ffca2da2600 - rustc_mir::monomorphize::collector::collect_crate_mono_items::h3b6010febd9be0ec\r\n  28:     0x7ffca2da2600 - rustc_mir::monomorphize::collector::collect_crate_mono_items::h3b6010febd9be0ec\r\n  29:     0x7ffca2da2600 - rustc_mir::monomorphize::collector::collect_crate_mono_items::h3b6010febd9be0ec\r\n  30:     0x7ffca2da2600 - rustc_mir::monomorphize::collector::collect_crate_mono_items::h3b6010febd9be0ec\r\n  31:     0x7ffca2da2600 - rustc_mir::monomorphize::collector::collect_crate_mono_items::h3b6010febd9be0ec\r\n  32:     0x7ffca2da2600 - rustc_mir::monomorphize::collector::collect_crate_mono_items::h3b6010febd9be0ec\r\n  33:     0x7ffca2da2600 - rustc_mir::monomorphize::collector::collect_crate_mono_items::h3b6010febd9be0ec\r\n  34:     0x7ffca2da2600 - rustc_mir::monomorphize::collector::collect_crate_mono_items::h3b6010febd9be0ec\r\n  35:     0x7ffca2da2600 - rustc_mir::monomorphize::collector::collect_crate_mono_items::h3b6010febd9be0ec\r\n  36:     0x7ffca2da2600 - rustc_mir::monomorphize::collector::collect_crate_mono_items::h3b6010febd9be0ec\r\n  37:     0x7ffca2da2600 - rustc_mir::monomorphize::collector::collect_crate_mono_items::h3b6010febd9be0ec\r\n  38:     0x7ffca2da2600 - rustc_mir::monomorphize::collector::collect_crate_mono_items::h3b6010febd9be0ec\r\n  39:     0x7ffca2f997d3 - <rustc_mir::util::spanview::SpanViewable as core::fmt::Debug>::fmt::h754ae9e4acd7ca7f\r\n  40:     0x7ffca2da1551 - rustc_mir::monomorphize::collector::collect_crate_mono_items::h3b6010febd9be0ec\r\n  41:     0x7ffca2e53592 - rustc_mir::monomorphize::partitioning::partition::hf4e9b71f30996dc1\r\n  42:     0x7ffca005b6a7 - <rustc_codegen_llvm::back::lto::ThinLTOKeysMap as core::fmt::Debug>::fmt::hcd3349ee8b0cb4a5\r\n  43:     0x7ffc9ff4f3ce - <rustc_ast::ast::StructField as rustc_ast::attr::HasAttrs>::attrs::h9f7930f3acf2c906\r\n  44:     0x7ffc9ff9a637 - <rustc_ast::ast::FloatTy as rustc_codegen_llvm::debuginfo::metadata::MsvcBasicName>::msvc_basic_name::h3aa8bca1fb5698b6\r\n  45:     0x7ffc9ffd3dc1 - rustc_codegen_llvm::type_::<impl rustc_codegen_ssa::traits::type_::LayoutTypeMethods for rustc_codegen_llvm::context::CodegenCx>::reg_backend_type::h5c329ef30d26310a\r\n  46:     0x7ffca00f83e4 - <rustc_codegen_llvm::builder::Builder as rustc_codegen_ssa::traits::builder::BuilderMethods>::unchecked_umul::h41879df1ba38c684\r\n  47:     0x7ffca0072d24 - <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate::h409f60e0ae4aaf13\r\n  48:     0x7ffc9fe58ede - rustc_interface::interface::parse_cfgspecs::he4e421c50de55949\r\n  49:     0x7ffc9fe8d3da - rustc_interface::passes::BoxedResolver::to_resolver_outputs::hb096f93f8cf6df4c\r\n  50:     0x7ffc9fed5a46 - rustc_interface::queries::Queries::ongoing_codegen::ha9e2915cfb307d3a\r\n  51:     0x7ffc9fc08b74 - <rustc_codegen_ssa::back::linker::MsvcLinker as rustc_codegen_ssa::back::linker::Linker>::no_crt_objects::h47dd01e667a15f55\r\n  52:     0x7ffc9fc99aac - <rustc_driver::args::Error as core::fmt::Debug>::fmt::hb838ed2d57a61e3c\r\n  53:     0x7ffc9fc09bfc - <rustc_codegen_ssa::back::linker::MsvcLinker as rustc_codegen_ssa::back::linker::Linker>::no_crt_objects::h47dd01e667a15f55\r\n  54:     0x7ffc9fcb0f84 - <rustc_driver::args::Error as core::fmt::Debug>::fmt::hb838ed2d57a61e3c\r\n  55:     0x7ffc9fcb8270 - rustc_ast::util::parser::prec_let_scrutinee_needs_par::h0da38a96661182e5\r\n  56:     0x7ffc9fc12a3d - <rustc_codegen_ssa::back::linker::MsvcLinker as rustc_codegen_ssa::back::linker::Linker>::no_crt_objects::h47dd01e667a15f55\r\n  57:     0x7ffcaebcf4f7 - std::sys::windows::thread::Thread::new::h05d768f6146b61f1\r\n  58:     0x7ffd47f87034 - BaseThreadInitThunk\r\n  59:     0x7ffd49f3d0d1 - RtlUserThreadStart\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79856/timeline", "performed_via_github_app": null, "state_reason": "completed"}