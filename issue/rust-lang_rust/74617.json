{"url": "https://api.github.com/repos/rust-lang/rust/issues/74617", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74617/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74617/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74617/events", "html_url": "https://github.com/rust-lang/rust/issues/74617", "id": 663470295, "node_id": "MDU6SXNzdWU2NjM0NzAyOTU=", "number": 74617, "title": "Error message suggests using `&` and `mut` when matching on fields behind a `&mut`, rather than `&mut` or `ref mut`", "user": {"login": "L-F-Stack-Exchange", "id": 64724274, "node_id": "MDQ6VXNlcjY0NzI0Mjc0", "avatar_url": "https://avatars.githubusercontent.com/u/64724274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/L-F-Stack-Exchange", "html_url": "https://github.com/L-F-Stack-Exchange", "followers_url": "https://api.github.com/users/L-F-Stack-Exchange/followers", "following_url": "https://api.github.com/users/L-F-Stack-Exchange/following{/other_user}", "gists_url": "https://api.github.com/users/L-F-Stack-Exchange/gists{/gist_id}", "starred_url": "https://api.github.com/users/L-F-Stack-Exchange/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/L-F-Stack-Exchange/subscriptions", "organizations_url": "https://api.github.com/users/L-F-Stack-Exchange/orgs", "repos_url": "https://api.github.com/users/L-F-Stack-Exchange/repos", "events_url": "https://api.github.com/users/L-F-Stack-Exchange/events{/privacy}", "received_events_url": "https://api.github.com/users/L-F-Stack-Exchange/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-22T04:47:26Z", "updated_at": "2020-07-22T13:27:58Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "When compiling this code, which attempts to match a field behind a mutable reference against a moving pattern:\r\n\r\n```rust\r\nstruct S {\r\n    field: Option<String>,\r\n}\r\n\r\nfn f(arg: &mut S) {\r\n    match arg.field {\r\n        Some(s) => s.push('a'),\r\n        None => {}\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let mut s = S {\r\n        field: Some(\"a\".to_owned()),\r\n    };\r\n    f(&mut s);\r\n    println!(\"{:?}\", s.field);\r\n}\r\n```\r\n\r\nHere's the compiler message:\r\n\r\n```rust\r\nerror[E0507]: cannot move out of `arg.field.0` which is behind a mutable reference\r\n --> src/main.rs:6:11\r\n  |\r\n6 |     match arg.field {\r\n  |           ^^^^^^^^^ help: consider borrowing here: `&arg.field`\r\n7 |         Some(s) => s.push('a'),\r\n  |              -\r\n  |              |\r\n  |              data moved here\r\n  |              move occurs because `s` has type `std::string::String`, which does not implement the `Copy` trait\r\n\r\nerror[E0596]: cannot borrow `s` as mutable, as it is not declared as mutable\r\n --> src/main.rs:7:20\r\n  |\r\n7 |         Some(s) => s.push('a'),\r\n  |              -     ^ cannot borrow as mutable\r\n  |              |\r\n  |              help: consider changing this to be mutable: `mut s`\r\n\r\nerror: aborting due to 2 previous errors\r\n\r\nSome errors have detailed explanations: E0507, E0596.\r\nFor more information about an error, try `rustc --explain E0507`.\r\nerror: could not compile `playground`.\r\n```\r\n\r\n([Stable 1.45.0](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=c7740d44dfb8ff005578978dd8f61ec3)) ([Beta 1.46.0-beta.1](https://play.rust-lang.org/?version=beta&mode=debug&edition=2018&gist=05caf9c901ad9d056770967c01501acb)) ([Nightly 1.47.0-nightly](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=a7169a290b80cd1a0d3bd096e9fc0723))\r\n\r\nHowever, applying the suggestions results in:\r\n\r\n```rust\r\nfn f(arg: &mut S) {\r\n    match &arg.field {\r\n        Some(mut s) => s.push('a'),\r\n        None => {}\r\n    }\r\n}\r\n```\r\n\r\nwhich doesn't work either.\r\n\r\n(Related post on the Rust Programming Language Forum: [Having trouble using Struct Option var](https://users.rust-lang.org/t/having-trouble-using-struct-option-var/46198))", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74617/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74617/timeline", "performed_via_github_app": null, "state_reason": null}