{"url": "https://api.github.com/repos/rust-lang/rust/issues/82521", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82521/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82521/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82521/events", "html_url": "https://github.com/rust-lang/rust/issues/82521", "id": 816657765, "node_id": "MDU6SXNzdWU4MTY2NTc3NjU=", "number": 82521, "title": "-crt-static on musl links with libgcc_s", "user": {"login": "nitsky", "id": 492793, "node_id": "MDQ6VXNlcjQ5Mjc5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/492793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nitsky", "html_url": "https://github.com/nitsky", "followers_url": "https://api.github.com/users/nitsky/followers", "following_url": "https://api.github.com/users/nitsky/following{/other_user}", "gists_url": "https://api.github.com/users/nitsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/nitsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nitsky/subscriptions", "organizations_url": "https://api.github.com/users/nitsky/orgs", "repos_url": "https://api.github.com/users/nitsky/repos", "events_url": "https://api.github.com/users/nitsky/events{/privacy}", "received_events_url": "https://api.github.com/users/nitsky/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2021-02-25T17:48:06Z", "updated_at": "2022-09-26T09:39:42Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am building dynamic libraries that I call from scripting languages (elixir nif, nodejs native addon, etc) on Alpine Linux. I have been successful using the `x86_64-unknown-linux-musl` target with `-C target-feature=-crt-static` to enable building `cdylib`s. However, I find that any `cdylib` produced this way links dynamically not only to `musl` but also to `libgcc_s`:\r\n\r\n```\r\n$ ldd target/release/libhello.so\r\n/lib/ld-musl-x86_64.so.1 (0x7ffa2d2fb000)\r\nlibgcc_s.so.1 => /usr/lib/libgcc_s.so.1 (0x7ffa2d1cd000)\r\nlibc.musl-x86_64.so.1 => /lib/ld-musl-x86_64.so.1 (0x7ffa2d2fb000)\r\n```\r\n\r\nUnfortunately, the Alpine Linux docker image does not include the `libgcc` package by default, and the packages for most scripting languages do not depend on it, so users of my library will be required to explicitly install it, which is an inconvenience.\r\n\r\nBelow is the line in the `unwind` crate that dynamically links to `libgcc_s` on `musl` targets when `crt-static` is disabled:\r\nhttps://github.com/rust-lang/rust/blob/b36f77012dcbfbcf7d04e29fb9a10c8ead9b3ab1/library/unwind/src/lib.rs#L41\r\n\r\nIs there a path to compiling `cdylib`s for `musl` without dynamically linking to `libgcc_s`? Perhaps while unwinding across FFI boundaries remains undefined behavior, `-crt-static` on `musl` could statically link the unwind functionality like it does with `+crt-static`?\r\n\r\nRelated issues:\r\nhttps://github.com/rust-lang/rust/issues/29527\r\nhttps://github.com/rust-lang/rust/issues/55120\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0 (cb75ad5db 2021-02-10)\r\nbinary: rustc\r\ncommit-hash: cb75ad5db02783e8b0222fee363c5f63f7e2cf5b\r\ncommit-date: 2021-02-10\r\nhost: x86_64-unknown-linux-musl\r\nrelease: 1.50.0\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82521/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82521/timeline", "performed_via_github_app": null, "state_reason": null}