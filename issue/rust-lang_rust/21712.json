{"url": "https://api.github.com/repos/rust-lang/rust/issues/21712", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/21712/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/21712/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/21712/events", "html_url": "https://github.com/rust-lang/rust/issues/21712", "id": 55705823, "node_id": "MDU6SXNzdWU1NTcwNTgyMw==", "number": 21712, "title": "Complier panic: \"error: internal compiler error: this path should not cause illegal move\"", "user": {"login": "drewcrawford", "id": 183400, "node_id": "MDQ6VXNlcjE4MzQwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/183400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewcrawford", "html_url": "https://github.com/drewcrawford", "followers_url": "https://api.github.com/users/drewcrawford/followers", "following_url": "https://api.github.com/users/drewcrawford/following{/other_user}", "gists_url": "https://api.github.com/users/drewcrawford/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewcrawford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewcrawford/subscriptions", "organizations_url": "https://api.github.com/users/drewcrawford/orgs", "repos_url": "https://api.github.com/users/drewcrawford/repos", "events_url": "https://api.github.com/users/drewcrawford/events{/privacy}", "received_events_url": "https://api.github.com/users/drewcrawford/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-01-28T02:31:02Z", "updated_at": "2015-02-10T13:59:01Z", "closed_at": "2015-02-10T13:59:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I make no claims about whether or not the code below should compile.  But the compiler probably shouldn't panic.\n\n``` rust\nuse std::sync::mpsc::channel;\nuse std::io::timer::Timer;\nuse std::time::Duration;\nuse std::thread::Thread;\nuse std::sync::{Arc,Semaphore, SemaphoreGuard, TryLockResult};\n\n\npub struct SemaphoreTimeout {\n    #[experimental]\n    pub semaphore: Semaphore\n}\n\nimpl SemaphoreTimeout {\n    pub fn try_acquire(&self, duration: Duration) -> TryLockResult<SemaphoreGuard> {\n        let (tx,rx) = channel::<()>();\n        let mut timer = Timer::new().unwrap();\n        let timeout = timer.oneshot(duration);\n        let mut itemPtr : *mut Semaphore;\n        unsafe {\n            let itemPtr : *mut Semaphore = std::mem::transmute(self.semaphore);\n        }\n        let itemSendablePtr = std::ptr::Unique(itemPtr);\n\n        let mut guard : Option<SemaphoreGuard> = None;\n        let guardPtr : *mut Option<SemaphoreGuard> = &mut guard;\n        let sendablePtr = std::ptr::Unique(guardPtr);\n        Thread::spawn(move |:| {\n            unsafe {\n                let sema = *(itemSendablePtr.0);\n                *(sendablePtr.0) = Some(sema.access());\n            }\n            tx.send(()).unwrap();\n        });\n\n\n        loop {\n            select! {\n                val = rx.recv() => {\n                    return Ok(guard.unwrap());\n                },\n                _ = timeout.recv() => {\n                    return Err(std::sync::TryLockError::WouldBlock);\n                }\n            }\n        }\n\n    }\n}\n\n#[test]\nfn it_works() {\n    let total_time = std::time::duration::Duration::span(|| {\n            let sema = SemaphoreTimeout{ semaphore: Semaphore::new(0)};\n            sema.try_acquire(Duration::seconds(10));\n    }).num_seconds();\n    assert!(total_time > 9);\n\n}\n```\n\n```\n$ RUST_BACKTRACE=1 rustc --crate-type rlib src/lib.rs\nsrc/lib.rs:20:64: 20:68 error: cannot move out of borrowed content\nsrc/lib.rs:20             let itemPtr : *mut Semaphore = std::mem::transmute(self.semaphore);\n                                                                             ^~~~\nsrc/lib.rs:30:41: 30:45 error: `sema` does not live long enough\nsrc/lib.rs:30                 *(sendablePtr.0) = Some(sema.access());\n                                                      ^~~~\nnote: reference must be valid for the static lifetime...\nsrc/lib.rs:28:13: 31:14 note: ...but borrowed value is only valid for the block at 28:12\nsrc/lib.rs:28             unsafe {\nsrc/lib.rs:29                 let sema = *(itemSendablePtr.0);\nsrc/lib.rs:30                 *(sendablePtr.0) = Some(sema.access());\nsrc/lib.rs:31             }\nsrc/lib.rs:29:28: 29:49 error: internal compiler error: this path should not cause illegal move\nsrc/lib.rs:29                 let sema = *(itemSendablePtr.0);\n                                         ^~~~~~~~~~~~~~~~~~~~~\nnote: the compiler unexpectedly panicked. this is a bug.\nnote: we would appreciate a bug report: http://doc.rust-lang.org/complement-bugreport.html\nnote: run with `RUST_BACKTRACE=1` for a backtrace\nthread 'rustc' panicked at 'Box<Any>', /Users/drew/Code/rust/src/libsyntax/diagnostic.rs:130\n\nstack backtrace:\n   1:        0x111354dbc - sys::backtrace::write::h3b1687d123840745dbu\n   2:        0x111378cef - failure::on_fail::h4f27fcb787f34dcb8aB\n   3:        0x1112e2c0e - rt::unwind::begin_unwind_inner::h1d4bab16a9a9da184SA\n   4:        0x110a83f8f - rt::unwind::begin_unwind::h4217311381055978755\n   5:        0x110a83f24 - diagnostic::SpanHandler::span_bug::hd5501efc6390fb73vYE\n   6:        0x10e3f5995 - session::Session::span_bug::h4a1e9356937820aeTxo\n   7:        0x10e3720e4 - borrowck::build_borrowck_dataflow_data::hd89794399b269c02lPe\n   8:        0x10e36d9b8 - borrowck::borrowck_fn::hf2a6eb5420fa3465IMe\n   9:        0x10e36fee9 - visit::walk_expr::h2260093690797296160\n  10:        0x10e36f96b - visit::walk_expr::h2260093690797296160\n  11:        0x10e36e22d - borrowck::borrowck_fn::hf2a6eb5420fa3465IMe\n  12:        0x10e370c28 - visit::walk_method_helper::h8676194234672418769\n  13:        0x10e36eccc - borrowck::borrowck_item::h58249352ae407815GLe\n  14:        0x10e36ee9f - borrowck::check_crate::h88841bf41bd69ee3yGe\n  15:        0x10db0354a - driver::phase_3_run_analysis_passes::h875fa1a74376223cVFa\n  16:        0x10dae84e6 - driver::compile_input::h2c7c782afbb2d5e3Bba\n  17:        0x10dba7216 - run_compiler::h134233be72a5f033R8b\n  18:        0x10dba4563 - thunk::F.Invoke<A, R>::invoke::h11706971136093431084\n  19:        0x10dba33c8 - rt::unwind::try::try_fn::h10954395397093774028\n  20:        0x1113f0d09 - rust_try_inner\n  21:        0x1113f0cf6 - rust_try\n  22:        0x10dba3a06 - thunk::F.Invoke<A, R>::invoke::h15388688857395276920\n  23:        0x111364681 - sys::thread::thread_start::h75057efc72f2c7edr3w\n  24:     0x7fff8d1e62fc - _pthread_body\n  25:     0x7fff8d1e6279 - _pthread_body\n```\n\n```\n $ rustc --version\nrustc 1.0.0-dev (d15192317 2015-01-25 16:09:48 +0000)\n```\n", "closed_by": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/21712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/21712/timeline", "performed_via_github_app": null, "state_reason": "completed"}