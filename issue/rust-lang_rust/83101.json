{"url": "https://api.github.com/repos/rust-lang/rust/issues/83101", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83101/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83101/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83101/events", "html_url": "https://github.com/rust-lang/rust/issues/83101", "id": 831033270, "node_id": "MDU6SXNzdWU4MzEwMzMyNzA=", "number": 83101, "title": "Inline generators before state machine conversion in order to reduce branching", "user": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 679846574, "node_id": "MDU6TGFiZWw2Nzk4NDY1NzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-generators", "name": "A-generators", "color": "f7e101", "default": false, "description": "Area: Generators"}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-03-14T00:39:29Z", "updated_at": "2021-03-14T00:39:29Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As of 6c51ec96bb5b6679645be1651d4ff1d079412af6, which is the fix for #76181, generators no longer inline in MIR. This results in missing the following optimization opportunity:\r\n\r\n    pub async fn f() {\r\n        foo().await;\r\n        g().await;\r\n    }\r\n\r\n    async fn g() {\r\n        bar().await;\r\n        h().await;\r\n    }\r\n\r\n    async fn h() {\r\n        baz();\r\n    }\r\n\r\nshould become:\r\n\r\n    async fn f() {\r\n        foo().await;\r\n        bar().await;\r\n        baz().await;\r\n    }\r\n\r\nI checked a simple example and LLVM didn't seem to do the inlining, which doesn't surprise me as after the state machine transformation it's going to be quite hard to perform it.\r\n\r\nThis could be an important optimization because recreating the nested call stack when a generator is resumed can be O(n) in bad cases like this one. (This was brought up as a potential problem when comparing C++ coroutines with Rust generators.) ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83101/timeline", "performed_via_github_app": null, "state_reason": null}