{"url": "https://api.github.com/repos/rust-lang/rust/issues/91076", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91076/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91076/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91076/events", "html_url": "https://github.com/rust-lang/rust/issues/91076", "id": 1059088663, "node_id": "I_kwDOAAsO6M4_IGkX", "number": 91076, "title": "Speed up search by using prefix matching", "user": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 2432552396, "node_id": "MDU6TGFiZWwyNDMyNTUyMzk2", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-rustdoc-search", "name": "A-rustdoc-search", "color": "f7e101", "default": false, "description": "Area: Rustdoc's search feature"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-11-20T07:57:11Z", "updated_at": "2021-11-28T05:43:38Z", "closed_at": "2021-11-28T05:43:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Right now, rustdoc search is O(n) in the number of items in the crate, since it runs the matcher across all items:\r\n\r\nhttps://github.com/rust-lang/rust/blob/50f2c292007f9364908e4b8344886797f0144648/src/librustdoc/html/static/js/search.js#L740\r\n\r\nThat means it's fairly slow, even for the stdlib. For even larger crates, it's even slower. And the slowness is particularly noticeable because it's JavaScript doing compute the whole time, which can cause interactions with the page to freeze. As a result, we have a 500ms timeout on the user typing before we do any searches.\r\n\r\nOn simple way to make search faster is to use a [trie](https://en.wikipedia.org/wiki/Trie), so if someone types \"st\" we can quickly find all items that start with that. So for instance the structure in JS might look something like:\r\n\r\n```\r\nvar trie = {\r\n  \"a\": {\r\n    \"b\": {\r\n      \"ort\": [\"process::abort\", \"intrinsics::abort\"],\r\n    },\r\n    \"d\": {\r\n      \"d\": {\r\n        \"\": [\"ops::Add\"],\r\n        \"a\": {\r\n          ...\r\n        }\r\n      }\r\n    }\r\n}\r\n```\r\n\r\nThis could speed up most searches dramatically. It would also allow us to make search match on prefixes. For instance, [right now if I search \"add\"](https://doc.rust-lang.org/nightly/std/all.html?search=add), I get:\r\n\r\n```\r\nstd::ops::Add\r\nstd::ops::Add::add\r\npointer::add\r\nstd::time::Instant::add\r\nstd::time::SystemTime::add\r\nf32::add\r\nf64::add\r\ni8::add\r\ni16::add\r\ni32::add\r\ni64::add\r\ni128::add\r\nu8::add\r\nu16::add\r\nu32::add\r\nu64::add\r\nu128::add\r\nisize::add\r\nusize::add\r\nstd::borrow::Cow::add\r\nstd::num::Saturating::add\r\nstd::num::Wrapping::add\r\nstd::simd::Simd::add\r\n```\r\n\r\nBut I don't get `ops::AddAssign` or `ptr::addr_of`, even though the length of the search results is not maxed out. I think both of those should show up.\r\n\r\nThe speed improvements could allow us to lower the 500ms typing timeout, making search feel responsive; or we could keep it, and simply enjoy better performance for huge crates.\r\n\r\nNote: If we want to get the speed improvements of searching by trie, that means either (a) giving up levenshtein matching, or (b) doing levenshtein matching in a second phase, if the results from prefix matching weren't enough to fill the page.\r\n\r\n/cc @GuillaumeGomez ", "closed_by": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91076/timeline", "performed_via_github_app": null, "state_reason": "completed"}