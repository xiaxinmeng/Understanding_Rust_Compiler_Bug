{"url": "https://api.github.com/repos/rust-lang/rust/issues/69329", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69329/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69329/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69329/events", "html_url": "https://github.com/rust-lang/rust/issues/69329", "id": 568611095, "node_id": "MDU6SXNzdWU1Njg2MTEwOTU=", "number": 69329, "title": "Feature Request: NonZeroInt literal coersion", "user": {"login": "Lucretiel", "id": 1823405, "node_id": "MDQ6VXNlcjE4MjM0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1823405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lucretiel", "html_url": "https://github.com/Lucretiel", "followers_url": "https://api.github.com/users/Lucretiel/followers", "following_url": "https://api.github.com/users/Lucretiel/following{/other_user}", "gists_url": "https://api.github.com/users/Lucretiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lucretiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lucretiel/subscriptions", "organizations_url": "https://api.github.com/users/Lucretiel/orgs", "repos_url": "https://api.github.com/users/Lucretiel/repos", "events_url": "https://api.github.com/users/Lucretiel/events{/privacy}", "received_events_url": "https://api.github.com/users/Lucretiel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 800802916, "node_id": "MDU6TGFiZWw4MDA4MDI5MTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-coercions", "name": "A-coercions", "color": "f7e101", "default": false, "description": "Area: implicit and explicit `expr as Type` coercions"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-20T22:22:07Z", "updated_at": "2023-03-08T10:44:17Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It should be possible for an integer literal to initialize a `NonZeroInt` type, like `NonZeroUsize`. For instance, this should be legal:\r\n\r\n```rust\r\nstruct Settings {\r\n    // None means unlimited\r\n    max_args: Option<NonZeroUsize>\r\n}\r\n\r\nlet settings = Settings {\r\n    max_args: Some(2),\r\n}\r\n```\r\n\r\nThe compiler can easily check whether the literal is zero and fail if it is.\r\n\r\nWhile I know that the `NonZero` types are \"just\" regular structs, it seems as though they already have so many special compiler attributes attached to them to ensure that they work with Option correctly that it seems like it wouldn't be much of a stretch to have this one as well (though I'm happy to be corrected there).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69329/reactions", "total_count": 9, "+1": 9, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69329/timeline", "performed_via_github_app": null, "state_reason": null}