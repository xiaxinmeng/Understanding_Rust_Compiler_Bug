{"url": "https://api.github.com/repos/rust-lang/rust/issues/24066", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/24066/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/24066/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/24066/events", "html_url": "https://github.com/rust-lang/rust/issues/24066", "id": 66322347, "node_id": "MDU6SXNzdWU2NjMyMjM0Nw==", "number": 24066, "title": "Two impls: \"Expected (type parameter), got (struct that also has impl)\"", "user": {"login": "hanna-kruppe", "id": 2311707, "node_id": "MDQ6VXNlcjIzMTE3MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2311707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanna-kruppe", "html_url": "https://github.com/hanna-kruppe", "followers_url": "https://api.github.com/users/hanna-kruppe/followers", "following_url": "https://api.github.com/users/hanna-kruppe/following{/other_user}", "gists_url": "https://api.github.com/users/hanna-kruppe/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanna-kruppe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanna-kruppe/subscriptions", "organizations_url": "https://api.github.com/users/hanna-kruppe/orgs", "repos_url": "https://api.github.com/users/hanna-kruppe/repos", "events_url": "https://api.github.com/users/hanna-kruppe/events{/privacy}", "received_events_url": "https://api.github.com/users/hanna-kruppe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-04-04T13:52:05Z", "updated_at": "2022-11-18T03:06:41Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I stumbled upon this trying to write a function that generically takes a range (or something else with which `str` can be indexed), and slices a str with that range. I got that to work, this bug comes into play when the str is produced by slicing another string with a `RangeFrom` or another concrete type (in the same function).\n\nHere's a simpler (no lifetimes, no associated types) and self-contained example ([playpen](http://is.gd/f5auhw)):\n\n``` rust\ntrait Frobnicate<I> {\n    fn frob(&self, i: I) -> Self;\n}\n\nstruct Thing;\n\nstruct IA;\nstruct IB;\n\nimpl Frobnicate<IA> for Thing {\n    fn frob(&self, _i: IA) -> Thing { Thing }\n}\n\nimpl Frobnicate<IB> for Thing {\n    fn frob(&self, _i: IB) -> Thing { Thing }\n}\n\nfn delegate_frob<I>(t: Thing, i: I) -> Thing\n        where Thing : Frobnicate<I> {\n    let t2: Thing = t.frob(IA);\n    t2.frob(i)\n}\n\nfn main() {}\n```\n\nThis seems innocent enough. There's a `impl Frobnicate<IA> for Thing`, so the `.frob(IA)` call should work, and it's known to return `Thing` again, so via the `where` clause the `.frob(i)` call is good as well. However, I get this error message:\n\n```\n<anon>:20:28: 20:30 error: mismatched types:\n expected `I`,\n    found `IA`\n(expected type parameter,\n    found struct `IA`) [E0308]\n<anon>:20     let t2: Thing = t.frob(IA);\n                                     ^~\n```\n\nIt appears that the where clause makes the compiler forget that there are other impls.\nAdding a `Thing : Frobnicate<IA>` bound only makes the compiler (rightly) complain that that's not a bound at all, since it doesn't involve any type parameters.\nUFCS makes it compile, though:\n\n``` rust\n    let t2: Thing = <Thing as Frobnicate<IA>>::frob(&t, IA);\n```\n\nEdit: Besides playpen, I can also reproduce this locally:\n\n```\nrustc 1.0.0-beta (9854143cb 2015-04-02) (built 2015-04-02)\nbinary: rustc\ncommit-hash: 9854143cba679834bc4ef932858cd5303f015a0e\ncommit-date: 2015-04-02\nbuild-date: 2015-04-02\nhost: x86_64-pc-windows-gnu\nrelease: 1.0.0-beta\n```\n\nBut I already noticed it a couple of weeks ago, so it can't be a recent regression.\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/24066/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/24066/timeline", "performed_via_github_app": null, "state_reason": null}