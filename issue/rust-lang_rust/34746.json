{"url": "https://api.github.com/repos/rust-lang/rust/issues/34746", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/34746/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/34746/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/34746/events", "html_url": "https://github.com/rust-lang/rust/issues/34746", "id": 164701791, "node_id": "MDU6SXNzdWUxNjQ3MDE3OTE=", "number": 34746, "title": "Structs can be cloned in impls even when Clone is not derived/implemented", "user": {"login": "Luminarys", "id": 8228526, "node_id": "MDQ6VXNlcjgyMjg1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/8228526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Luminarys", "html_url": "https://github.com/Luminarys", "followers_url": "https://api.github.com/users/Luminarys/followers", "following_url": "https://api.github.com/users/Luminarys/following{/other_user}", "gists_url": "https://api.github.com/users/Luminarys/gists{/gist_id}", "starred_url": "https://api.github.com/users/Luminarys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Luminarys/subscriptions", "organizations_url": "https://api.github.com/users/Luminarys/orgs", "repos_url": "https://api.github.com/users/Luminarys/repos", "events_url": "https://api.github.com/users/Luminarys/events{/privacy}", "received_events_url": "https://api.github.com/users/Luminarys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-10T06:13:39Z", "updated_at": "2016-07-10T08:49:25Z", "closed_at": "2016-07-10T08:49:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using `self.clone()` or `self.to_owned()` in an impl function for a struct works even when the trait isn't derived or implemented and returns an improper type.\n\nExample:\n\n``` rust\nstruct S;\nimpl S {\n    fn foo(&self) -> &S {\n        self.clone()\n    }\n}\n```\n\nIn the example if a `#[derive(Clone)]` is added to the struct, the code fails to compile as the returned type is different from the one specified in the function.\n\nThis can be rather frustrating to deal with if you end up forgetting to derive/impl Clone for a struct and subsequently get error messages in an impl about an improper type or borrow checker issues because the bad `.clone()` or `.to_owned()` isn't shown as being unimplemented but rather as returning an `&ptr` rather than an owned copy.\n", "closed_by": {"login": "Luminarys", "id": 8228526, "node_id": "MDQ6VXNlcjgyMjg1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/8228526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Luminarys", "html_url": "https://github.com/Luminarys", "followers_url": "https://api.github.com/users/Luminarys/followers", "following_url": "https://api.github.com/users/Luminarys/following{/other_user}", "gists_url": "https://api.github.com/users/Luminarys/gists{/gist_id}", "starred_url": "https://api.github.com/users/Luminarys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Luminarys/subscriptions", "organizations_url": "https://api.github.com/users/Luminarys/orgs", "repos_url": "https://api.github.com/users/Luminarys/repos", "events_url": "https://api.github.com/users/Luminarys/events{/privacy}", "received_events_url": "https://api.github.com/users/Luminarys/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/34746/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 1, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/34746/timeline", "performed_via_github_app": null, "state_reason": "completed"}