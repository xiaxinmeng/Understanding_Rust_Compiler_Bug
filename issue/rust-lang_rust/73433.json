{"url": "https://api.github.com/repos/rust-lang/rust/issues/73433", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73433/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73433/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73433/events", "html_url": "https://github.com/rust-lang/rust/issues/73433", "id": 640320145, "node_id": "MDU6SXNzdWU2NDAzMjAxNDU=", "number": 73433, "title": "Not desugaring to HRTB for closure argument", "user": {"login": "alecmocatta", "id": 1136246, "node_id": "MDQ6VXNlcjExMzYyNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1136246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alecmocatta", "html_url": "https://github.com/alecmocatta", "followers_url": "https://api.github.com/users/alecmocatta/followers", "following_url": "https://api.github.com/users/alecmocatta/following{/other_user}", "gists_url": "https://api.github.com/users/alecmocatta/gists{/gist_id}", "starred_url": "https://api.github.com/users/alecmocatta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alecmocatta/subscriptions", "organizations_url": "https://api.github.com/users/alecmocatta/orgs", "repos_url": "https://api.github.com/users/alecmocatta/repos", "events_url": "https://api.github.com/users/alecmocatta/events{/privacy}", "received_events_url": "https://api.github.com/users/alecmocatta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-17T10:15:03Z", "updated_at": "2020-10-20T20:41:35Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "My understanding was that `FnMut(&T)` desugars to `for<'a> FnMut(&'a T)`. In this instance, it is seemingly not doing so. If you comment out line 44 then this compiles. Why is the `map` function triggering the incorrect (?) desugaring, and how can I fix it?\r\n\r\n```rust\r\ntrait Pipe<In> {\r\n    type Out;\r\n}\r\n\r\nstruct Identity;\r\nimpl<In> Pipe<In> for Identity {\r\n    type Out = In;\r\n}\r\n\r\nstruct Map<P, F> {\r\n    p: P,\r\n    f: F,\r\n}\r\nimpl<P, In, F, R> Pipe<In> for Map<P, F>\r\nwhere\r\n    P: Pipe<In>,\r\n    F: FnMut(P::Out) -> R,\r\n{\r\n    type Out = R;\r\n}\r\n\r\nfn map<P, In, F, R>(p: P, f: F) -> Map<P, F>\r\nwhere\r\n    P: Pipe<In>,\r\n    F: FnMut(P::Out) -> R,\r\n{\r\n    Map { p, f }\r\n}\r\n\r\nfn pipe<T, Sink>(_: Sink)\r\nwhere\r\n    Sink: for<'a> Pipe<&'a T>,\r\n    T: 'static,\r\n{\r\n}\r\n\r\nfn main() {\r\n    fn abc<'a>(_: &'a String) {}\r\n    pipe(Map {\r\n        p: Identity,\r\n        f: |_: &String| {},\r\n    });\r\n    pipe(map(Identity, abc));\r\n    pipe(map(Identity, |_: &String| {}));\r\n}\r\n\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=e96ca22d8ef90e5d72062cd4a4f95398))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:44:5\r\n   |\r\n44 |     pipe(map(Identity, |_: &String| {}));\r\n   |     ^^^^ one type is more general than the other\r\n   |\r\n   = note: expected type `std::ops::FnOnce<(&'a std::string::String,)>`\r\n              found type `std::ops::FnOnce<(&std::string::String,)>`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\n\r\n---\r\n\r\nPossibly related: https://github.com/rust-lang/rust/issues/70263", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73433/timeline", "performed_via_github_app": null, "state_reason": null}