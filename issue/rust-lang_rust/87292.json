{"url": "https://api.github.com/repos/rust-lang/rust/issues/87292", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87292/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87292/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87292/events", "html_url": "https://github.com/rust-lang/rust/issues/87292", "id": 947967376, "node_id": "MDU6SXNzdWU5NDc5NjczNzY=", "number": 87292, "title": "Missing trait implementation error follows one possible implmentation too greedily", "user": {"login": "KarelPeeters", "id": 7887115, "node_id": "MDQ6VXNlcjc4ODcxMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/7887115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KarelPeeters", "html_url": "https://github.com/KarelPeeters", "followers_url": "https://api.github.com/users/KarelPeeters/followers", "following_url": "https://api.github.com/users/KarelPeeters/following{/other_user}", "gists_url": "https://api.github.com/users/KarelPeeters/gists{/gist_id}", "starred_url": "https://api.github.com/users/KarelPeeters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KarelPeeters/subscriptions", "organizations_url": "https://api.github.com/users/KarelPeeters/orgs", "repos_url": "https://api.github.com/users/KarelPeeters/repos", "events_url": "https://api.github.com/users/KarelPeeters/events{/privacy}", "received_events_url": "https://api.github.com/users/KarelPeeters/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-07-19T19:41:15Z", "updated_at": "2021-07-19T19:41:15Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Given the following code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=94f9614f6312ae589082c677072bfcd5\r\n\r\n```rust\r\ntrait Producer<T> {\r\n    fn gen(&mut self) -> T;\r\n}\r\n\r\nstruct Cloner<T>(T);\r\n\r\nimpl <T: Clone> Producer<T> for Cloner<T> {\r\n    fn gen(&mut self) -> T {\r\n        self.0.clone()\r\n    }\r\n}\r\n\r\nimpl <T, F: FnMut() -> T> Producer<T> for F {\r\n    fn gen(&mut self) -> T {\r\n        self()\r\n    }\r\n}\r\n\r\nfn foo(mut producer: impl Producer<String>) {\r\n    println!(\"{}\", producer.gen());\r\n}\r\n\r\nfn main() {\r\n    // actual bug: 8 should have been \"8\".to_owned()\r\n    foo(Cloner(8));\r\n}\r\n```\r\n\r\nThe current output (on stable and nightly) is:\r\n\r\n```rust\r\nerror[E0277]: expected a `FnMut<()>` closure, found `Cloner<{integer}>`\r\n  --> src/main.rs:24:9\r\n   |\r\n19 | fn foo(mut producer: impl Producer<String>) {\r\n   |                           ---------------- required by this bound in `foo`\r\n...\r\n24 |     foo(Cloner(8));\r\n   |         ^^^^^^^^^ expected an `FnMut<()>` closure, found `Cloner<{integer}>`\r\n   |\r\n   = help: the trait `FnMut<()>` is not implemented for `Cloner<{integer}>`\r\n   = note: wrap the `Cloner<{integer}>` in a closure with no arguments: `|| { /* code */ }`\r\n   = note: required because of the requirements on the impl of `Producer<String>` for `Cloner<{integer}>`\r\n```\r\n\r\nWhile this is one possible cause for this issue, a \"simpler\" cause is that the value inside `Cloner` is not a `String` but an integer. The last line of the error message kind of hints at this, but the bulk of the error is completely unrelated.\r\n\r\nI occasionally run into this issue in my codebase, and I'm always confused for a few minutes until I get what's going on. It's a lot harder to figure out in a non-minimal example!\r\n\r\nI get the sense that the error message generator or the type solver picks the `FnMut` implementation too greedily for some reason and then spends effort explaining why it doesn't work.\r\n\r\nRemoving the `FnMut` implementation yields a better error message:\r\n\r\n```rust\r\nerror[E0277]: the trait bound `Cloner<{integer}>: Producer<String>` is not satisfied\r\n  --> src/main.rs:26:9\r\n   |\r\n21 | fn foo(mut producer: impl Producer<String>) {\r\n   |                           ---------------- required by this bound in `foo`\r\n...\r\n26 |     foo(Cloner(8));\r\n   |         ^^^^^^^^^ the trait `Producer<String>` is not implemented for `Cloner<{integer}>`\r\n   |\r\n   = help: the following implementations were found:\r\n             <Cloner<T> as Producer<T>>`\r\n```\r\n\r\nIdeally the output for the original code would be a combination of both or only the \"simpler\" case, even though that's hard to define.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87292/timeline", "performed_via_github_app": null, "state_reason": null}