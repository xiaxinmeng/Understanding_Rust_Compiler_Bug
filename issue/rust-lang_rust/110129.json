{"url": "https://api.github.com/repos/rust-lang/rust/issues/110129", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110129/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110129/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110129/events", "html_url": "https://github.com/rust-lang/rust/issues/110129", "id": 1660092387, "node_id": "I_kwDOAAsO6M5i8v_j", "number": 110129, "title": "Possible shortcut for format_exact_opt in Grisu3", "user": {"login": "mazong1123", "id": 4554154, "node_id": "MDQ6VXNlcjQ1NTQxNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4554154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mazong1123", "html_url": "https://github.com/mazong1123", "followers_url": "https://api.github.com/users/mazong1123/followers", "following_url": "https://api.github.com/users/mazong1123/following{/other_user}", "gists_url": "https://api.github.com/users/mazong1123/gists{/gist_id}", "starred_url": "https://api.github.com/users/mazong1123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mazong1123/subscriptions", "organizations_url": "https://api.github.com/users/mazong1123/orgs", "repos_url": "https://api.github.com/users/mazong1123/repos", "events_url": "https://api.github.com/users/mazong1123/events{/privacy}", "received_events_url": "https://api.github.com/users/mazong1123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}, {"id": 2139259423, "node_id": "MDU6TGFiZWwyMTM5MjU5NDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-floating-point", "name": "A-floating-point", "color": "f7e101", "default": false, "description": "Area: Floating point numbers and arithmetic"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-04-10T01:31:34Z", "updated_at": "2023-04-25T09:18:55Z", "closed_at": "2023-04-25T09:18:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the .NET implementation of Grisu3, there's a shortcut to jump out earlier when the fractionals or integrals cannot meet the determination of requested digits. This significantly improved the performance of converting floating number to string as it falls back even without starting trying the Grisu3 algorithm. This was originally added in [this PR](https://github.com/dotnet/coreclr/pull/14646#issuecomment-350942050), and shipped along with all later .NET versions so it's proved working.\r\n\r\nBelow is the code snippet from current [.NET repo](https://github.com/dotnet/runtime/blob/main/src/libraries/System.Private.CoreLib/src/System/Number.Grisu3.cs#L602-L615):\r\n\r\n\r\n\r\n```cpp\r\n                // We deviate from the original algorithm here and do some early checks to determine if we can satisfy requestedDigits.\r\n                // If we determine that we can't, we exit early and avoid most of the heavy lifting that the algorithm otherwise does.\r\n                //\r\n                // When fractionals is zero, we can easily determine if integrals can satisfy requested digits:\r\n                //      If requestedDigits >= 11, integrals is not able to exhaust the count by itself since 10^(11 -1) > uint.MaxValue >= integrals.\r\n                //      If integrals < 10^(requestedDigits - 1), integrals cannot exhaust the count.\r\n                //      Otherwise, integrals might be able to exhaust the count and we need to execute the rest of the code.\r\n                if ((fractionals == 0) && ((requestedDigits >= 11) || (integrals < SmallPowersOfTen[requestedDigits - 1])))\r\n                {\r\n                    Debug.Assert(buffer[0] == '\\0');\r\n                    length = 0;\r\n                    kappa = 0;\r\n                    return false;\r\n                }\r\n```\r\n\r\nI'm wondering do we consider apply the same shortcut just after `vint` and `vfrac` extracted at [line 489 of grisu.rs](https://github.com/rust-lang/rust/blob/bb93450ec4af83c20e9ba6c8e575aca55423001a/library/core/src/num/flt2dec/strategy/grisu.rs#L489)?", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110129/timeline", "performed_via_github_app": null, "state_reason": "completed"}