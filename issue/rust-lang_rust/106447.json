{"url": "https://api.github.com/repos/rust-lang/rust/issues/106447", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/106447/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/106447/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/106447/events", "html_url": "https://github.com/rust-lang/rust/issues/106447", "id": 1518747798, "node_id": "I_kwDOAAsO6M5ahkCW", "number": 106447, "title": "dyn Trait comparison should not include the vtable pointer", "user": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 923282386, "node_id": "MDU6TGFiZWw5MjMyODIzODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/finished-final-comment-period", "name": "finished-final-comment-period", "color": "f9e189", "default": false, "description": "The final comment period is finished for this PR / Issue."}, {"id": 943968375, "node_id": "MDU6TGFiZWw5NDM5NjgzNzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/disposition-close", "name": "disposition-close", "color": "dd0000", "default": false, "description": "This PR / issue is in PFCP or FCP with a disposition to close it."}, {"id": 3471276000, "node_id": "LA_kwDOAAsO6M7O53fg", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-lang-nominated", "name": "I-lang-nominated", "color": "e10c02", "default": false, "description": "Indicates that an issue has been nominated for discussion during a lang team meeting."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 25, "created_at": "2023-01-04T10:48:57Z", "updated_at": "2023-06-15T15:15:50Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This was previously raised in https://github.com/rust-lang/rust/issues/103763#issuecomment-1307528752. Currently, comparing a pair of `*const dyn Trait` raw pointers for equality will check that both the address and vtable are equal.\r\n\r\nThis is problematic because the vtable of a type is not guaranteed to be unique for each type: different types can share the same vtable and the same type can have its vtable instantiated multiple times.\r\n\r\nTo illustrate this issue, consider the following program which prints `true` in release mode and `false` in debug mode because LLVM is merging the two identical vtables ([playground](https://play.rust-lang.org/?version=stable&mode=release&edition=2021&gist=d8bdbc248e8da30f64a079f8c0022271)).\r\n\r\n```rust\r\nstruct A;\r\nstruct B;\r\n\r\ntrait T {}\r\nimpl T for A {}\r\nimpl T for B {}\r\n\r\nfn main() {\r\n\tlet ab = (A, B);\r\n    let a = &ab.0 as *const dyn T;\r\n    let b = &ab.1 as *const dyn T;\r\n    println!(\"{}\", a == b);\r\n    println!(\"{}\", a as *const u8 == b as *const u8);\r\n}\r\n```\r\n\r\nIt is also possible to achieve the reverse effect where two `dyn Trait` pointers to the same value (with the same base type) compare unequal because a separate vtable was instantiated with each pointer (e.g. due to codegen units or separate crates).\r\n\r\nIn conclusion, vtables are completely useless as a source of truth for pointer equality, so we should only consider the pointer address when comparing `dyn Trait` raw pointers. We currently document this as a footgun (#103567), but it would be better to eliminate this footgun entirely from the language.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/106447/reactions", "total_count": 7, "+1": 7, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/106447/timeline", "performed_via_github_app": null, "state_reason": null}