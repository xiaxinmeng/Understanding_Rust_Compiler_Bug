{"url": "https://api.github.com/repos/rust-lang/rust/issues/89181", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89181/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89181/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89181/events", "html_url": "https://github.com/rust-lang/rust/issues/89181", "id": 1004717596, "node_id": "I_kwDOAAsO6M474sYc", "number": 89181, "title": "Actual type given in compiler error, rather than generic paramater", "user": {"login": "TobiasDeBruijn", "id": 28569170, "node_id": "MDQ6VXNlcjI4NTY5MTcw", "avatar_url": "https://avatars.githubusercontent.com/u/28569170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiasDeBruijn", "html_url": "https://github.com/TobiasDeBruijn", "followers_url": "https://api.github.com/users/TobiasDeBruijn/followers", "following_url": "https://api.github.com/users/TobiasDeBruijn/following{/other_user}", "gists_url": "https://api.github.com/users/TobiasDeBruijn/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiasDeBruijn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiasDeBruijn/subscriptions", "organizations_url": "https://api.github.com/users/TobiasDeBruijn/orgs", "repos_url": "https://api.github.com/users/TobiasDeBruijn/repos", "events_url": "https://api.github.com/users/TobiasDeBruijn/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiasDeBruijn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-09-22T19:55:56Z", "updated_at": "2021-09-23T12:46:48Z", "closed_at": "2021-09-23T12:46:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n```rust\r\n    pub async fn new<'a, U: AsRef<str>, P: AsRef<str>>(email: U, password: P) -> Result<Self> {\r\n        Self::login(email, password).await // Note that using email.as_ref() results in the same error, and in the same 'wrongly' mentioned line \r\n    }\r\n\r\n    pub async fn login<U: AsRef<str>, P: AsRef<str>>(email: U, password: P) -> Result<Self> {\r\n        ...\r\n    }\r\n```\r\n\r\nI expected to see this happen: *explanation*\r\nEither Rust compiles the code, or reports an issue, where the lines reported are the lines I've given it\r\n\r\nInstead, this happened: *explanation*\r\nRust fails to compile (Probably correct), give's back a line of code with the generics substituted for their real types, in this case `&str`\r\n\r\nThe compiler emitted the following error:\r\n```\r\nerror[E0621]: explicit lifetime required in the type of `email_address`\r\n  --> src/tcc.rs:29:13\r\n   |\r\n25 |     fn new(email_address: &str, password: &str) -> Self {\r\n   |                           ---- help: add explicit lifetime `'a` to the type of `email_address`: `&'a str`\r\n...\r\n29 |             email_address,\r\n   |             ^^^^^^^^^^^^^ lifetime `'a` required\r\n\r\nerror[E0621]: explicit lifetime required in the type of `password`\r\n  --> src/tcc.rs:31:13\r\n   |\r\n25 |     fn new(email_address: &str, password: &str) -> Self {\r\n   |                                           ---- help: add explicit lifetime `'a` to the type of `password`: `&'a str`\r\n...\r\n31 |             password,\r\n   |             ^^^^^^^^ lifetime `'a` required\r\n```\r\nWhile the error is probably correct, the represented line is likely not. \r\n\r\nThe folk who've worked with Rust for a while know that the compiler generates a function for each type used, but new people may not know this, and might thus end up looking for a function with `&str`, which does not exist in their code.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\ncargo 1.56.0-nightly (e515c3277 2021-09-08)\r\ncargo 1.55.0 (32da73ab1 2021-08-23)\r\n```\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\nNone was given\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "TobiasDeBruijn", "id": 28569170, "node_id": "MDQ6VXNlcjI4NTY5MTcw", "avatar_url": "https://avatars.githubusercontent.com/u/28569170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiasDeBruijn", "html_url": "https://github.com/TobiasDeBruijn", "followers_url": "https://api.github.com/users/TobiasDeBruijn/followers", "following_url": "https://api.github.com/users/TobiasDeBruijn/following{/other_user}", "gists_url": "https://api.github.com/users/TobiasDeBruijn/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiasDeBruijn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiasDeBruijn/subscriptions", "organizations_url": "https://api.github.com/users/TobiasDeBruijn/orgs", "repos_url": "https://api.github.com/users/TobiasDeBruijn/repos", "events_url": "https://api.github.com/users/TobiasDeBruijn/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiasDeBruijn/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89181/timeline", "performed_via_github_app": null, "state_reason": "completed"}