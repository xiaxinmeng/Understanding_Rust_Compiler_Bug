{"url": "https://api.github.com/repos/rust-lang/rust/issues/50021", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50021/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50021/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50021/events", "html_url": "https://github.com/rust-lang/rust/issues/50021", "id": 314951070, "node_id": "MDU6SXNzdWUzMTQ5NTEwNzA=", "number": 50021, "title": "rustc: wasm_import_module confuses module names of identically-named functions", "user": {"login": "lostman", "id": 1270689, "node_id": "MDQ6VXNlcjEyNzA2ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/1270689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lostman", "html_url": "https://github.com/lostman", "followers_url": "https://api.github.com/users/lostman/followers", "following_url": "https://api.github.com/users/lostman/following{/other_user}", "gists_url": "https://api.github.com/users/lostman/gists{/gist_id}", "starred_url": "https://api.github.com/users/lostman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lostman/subscriptions", "organizations_url": "https://api.github.com/users/lostman/orgs", "repos_url": "https://api.github.com/users/lostman/repos", "events_url": "https://api.github.com/users/lostman/events{/privacy}", "received_events_url": "https://api.github.com/users/lostman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 474645165, "node_id": "MDU6TGFiZWw0NzQ2NDUxNjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-wasm", "name": "O-wasm", "color": "6e6ec0", "default": false, "description": "Target: WASM (WebAssembly), http://webassembly.org/"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-17T08:13:51Z", "updated_at": "2019-12-20T19:43:05Z", "closed_at": "2019-12-20T19:43:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code illustrates the issue:\r\n\r\n```rust\r\n#![allow(dead_code, unused_imports)]\r\n#![feature(lang_items, core_intrinsics)]\r\n#![feature(custom_attribute)] // <- required for wasm_import_module\r\n#![feature(wasm_import_module)]\r\n#![no_std]\r\nuse core::intrinsics;\r\n\r\n#[lang = \"panic_fmt\"]\r\n#[no_mangle]\r\npub extern fn rust_begin_panic(\r\n    _msg: core::fmt::Arguments,\r\n    _file: &'static str,\r\n    _line: u32,\r\n    _column: u32) -> ! {\r\n        unsafe { intrinsics::abort() }\r\n}\r\n\r\nmod m1 {\r\n    #[wasm_import_module = \"m1\"]\r\n    extern \"C\" {\r\n        pub fn f();\r\n    }\r\n    #[wasm_import_module = \"m1\"]\r\n    extern \"C\" {\r\n        pub fn g();\r\n    }\r\n}\r\n\r\nmod m2 {\r\n    #[wasm_import_module = \"m2\"]\r\n    extern \"C\" {\r\n        pub fn f(_: i32);\r\n    }\r\n}\r\n\r\n#[no_mangle]\r\npub unsafe fn run() {\r\n    m1::g();\r\n\r\n    // In generated code, expected:\r\n    // (import \"m2\" \"f\" (func $f (param i32)))\r\n    // but got:\r\n    // (import \"m1\" \"f\" (func $f (param i32)))\r\n    m2::f(0);\r\n}\r\n```\r\n\r\nTo compile:\r\n```\r\n\u276f rustc \\\r\n--crate-type=cdylib \\\r\n--target=wasm32-unknown-unknown \\\r\n-o result.wasm \\\r\nsrc/lib.rs\r\n```\r\nThen, using binaryen's `wasm-dis`:\r\n```\r\n\u276f wasm-dis foo.wasm | grep import\r\n(import \"m1\" \"g\" (func $g))\r\n(import \"m1\" \"f\" (func $f (param i32)))\r\n```\r\nThe type of `f` is correct since `m1::f()` takes no arguments, but the module name is not. Looks like `rustc` has the right function but with wrong module name.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50021/timeline", "performed_via_github_app": null, "state_reason": "completed"}