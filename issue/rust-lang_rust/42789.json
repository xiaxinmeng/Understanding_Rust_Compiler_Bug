{"url": "https://api.github.com/repos/rust-lang/rust/issues/42789", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42789/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42789/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42789/events", "html_url": "https://github.com/rust-lang/rust/issues/42789", "id": 237404757, "node_id": "MDU6SXNzdWUyMzc0MDQ3NTc=", "number": 42789, "title": "Iterators over slices of ZST behave strange", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-06-21T03:26:36Z", "updated_at": "2018-08-02T02:24:23Z", "closed_at": "2018-08-02T02:24:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following test passes for slices over non-ZST, but fails for ZST:\r\n```rust\r\nfn slice_test<T>(x: &[T]) {\r\n    let mut i = x.iter();\r\n    i.next();\r\n    let x1 = i.next().unwrap();\r\n    let x2 = &x[1];\r\n    let x3 = x.iter().nth(1).unwrap();\r\n    assert_eq!(x1 as *const _, x2 as *const _);\r\n    assert_eq!(x2 as *const _, x3 as *const _);\r\n}\r\n\r\nfn main() {\r\n    slice_test(&[1,2,3]);\r\n    slice_test(&[(),(),()]);\r\n}\r\n```\r\n[Playpen](https://play.rust-lang.org/?gist=26734e16c654e5eafe2dcb4848e29d62&version=nightly&backtrace=0)\r\n\r\nWhile pointers to ZSTs don't really matter as they will never be dereferenced, I think providing consistent addresses for *the same element* would still make sense.\r\nYet, `x2` turns out to be `0x55e742ee85dc`, no idea where that address is coming from. The LLVM IR contains some `undef`, but I am not sure if that always indicates a problem.\r\n\r\nGenerally, the iterator's treatment of ZST's seems a little fishy. Below <https://github.com/rust-lang/rust/blob/445077963c55297ef1e196a3525723090fe80b22/src/libcore/slice/mod.rs#L777>, the `get` methods defer to `.offset` to compute the address of an element of the slice. `offset` is only well-defined for in-bounds accesses, yet it is used here on a dangling pointer-to-ZST, with some non-0 offset.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42789/timeline", "performed_via_github_app": null, "state_reason": "completed"}