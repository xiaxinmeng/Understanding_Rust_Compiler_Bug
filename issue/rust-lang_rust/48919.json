{"url": "https://api.github.com/repos/rust-lang/rust/issues/48919", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48919/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48919/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48919/events", "html_url": "https://github.com/rust-lang/rust/issues/48919", "id": 304090307, "node_id": "MDU6SXNzdWUzMDQwOTAzMDc=", "number": 48919, "title": "Tracking issue for `unstable_name_collision` compatibility lint", "user": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630636017, "node_id": "MDU6TGFiZWw2MzA2MzYwMTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-future-compatibility", "name": "C-future-compatibility", "color": "f5f1fd", "default": false, "description": "Category: future compatibility lints"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-03-10T17:57:40Z", "updated_at": "2023-06-12T22:25:58Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This is the **summary issue** for the `unstable_name_collision` future-compatibility warning and other related errors. The goal of this page is describe why this change was made and how you can fix code that is affected by it. It also provides a place to ask questions or register a complaint if you feel the change should not be made. For more information on the policy around future-compatibility warnings, see our [breaking change policy guidelines][guidelines].\r\n\r\n[guidelines]: https://github.com/rust-lang/rfcs/blob/master/text/1122-language-semver.md\r\n\r\n### What is the warning for?\r\n\r\nRust's standard library is evolving, and will sometimes add new functions we found useful, e.g. `Ord::clamp` or `Iterator::flatten`. Unfortunately, there will often be popular third-party packages already implemented the same function with the same name. The compiler, when seeing the name `flatten`, cannot decide whether you want the one from the standard library or the third-party library, and gives up with the [multiple applicable items in scope](https://doc.rust-lang.org/error-index.html#E0034) error.\r\n\r\nAs an inference breakage canary, the compiler will emit a warning whenever it detected a name conflict with an unstable standard library function.\r\n\r\n```rust\r\nextern crate itertools;\r\nuse itertools::Itertools;\r\n\r\nfn main() {\r\n    println!(\r\n        \"{:?}\",\r\n        [[1, 2], [3, 4]].iter().flatten().collect::<Vec<_>>()\r\n        //~^ WARN a method with this name will be added to the standard library in the future\r\n    );\r\n}\r\n```\r\n\r\nTo stop this warning and the future hard error, you could use fully-qualified name to explicitly tell the compiler to use the third-party function:\r\n\r\n```rust\r\nextern crate itertools;\r\nuse itertools::Itertools;\r\n\r\nfn main() {\r\n    println!(\r\n        \"{:?}\",\r\n        Itertools::flatten([[1, 2], [3, 4]].iter()).collect::<Vec<_>>()\r\n//      ^~~~~~~~~~~~~~~~~~~.......................~\r\n//      explicitly use the `flatten` method from the `Itertools` trait.\r\n    );\r\n}\r\n```\r\n\r\n### When will this warning become a hard error?\r\n\r\nThis warning will be emitted for every unstable library feature having name conflicts. When a particular library feature is stabilized, this name conflict will cause a hard error.\r\n\r\nPlease follow the tracking issue for each library feature for their stabilization progress. Some current unstable method which is known to cause conflict in the wild are:\r\n\r\n- [ ] `Vec::try_reserve` \u2014 #48043\r\n- [ ] `Ord::clamp` \u2014 #44095", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48919/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48919/timeline", "performed_via_github_app": null, "state_reason": null}