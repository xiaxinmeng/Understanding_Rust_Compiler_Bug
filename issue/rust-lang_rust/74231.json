{"url": "https://api.github.com/repos/rust-lang/rust/issues/74231", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74231/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74231/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74231/events", "html_url": "https://github.com/rust-lang/rust/issues/74231", "id": 655113886, "node_id": "MDU6SXNzdWU2NTUxMTM4ODY=", "number": 74231, "title": "Array of tuples containing functions trip on type inference?", "user": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-11T02:08:31Z", "updated_at": "2021-06-05T19:40:58Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nConsider the following code:\r\n\r\n```rust\r\nfn foo(_s: &mut [u8]) {}\r\n\r\nfn bar(_s: &mut [u8]) {}\r\n\r\nfn main() {\r\n    let _works = [foo, bar];\r\n    //let _doesnt_work = [(foo,), (bar,)];\r\n    let _explicit_works: [(fn(&mut[u8]),);2] = [(foo,), (bar,)];\r\n}\r\n```\r\n\r\nI expected the second assignment to be equivalent to the third.\r\n\r\nInstead, compilation fails with:\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:7:34\r\n  |\r\n7 |     let _doesnt_work = [(foo,), (bar,)];\r\n  |                                  ^^^ expected fn item, found a different fn item\r\n  |\r\n  = note: expected fn item `for<'r> fn(&'r mut [u8]) {foo}`\r\n             found fn item `for<'r> fn(&'r mut [u8]) {bar}`\r\n```\r\n\r\nNightly has a better error message:\r\n```\r\n  = note: expected fn item `for<'r> fn(&'r mut [u8]) {foo}`\r\n             found fn item `for<'r> fn(&'r mut [u8]) {bar}`\r\n  = note: different `fn` items always have unique types, even if their signatures are the same\r\n  = help: change the expected type to be function pointer `for<'r> fn(&'r mut [u8])`\r\n  = help: if the expected type is due to type inference, cast the expected `fn` to a function pointer: `foo as for<'r> fn(&'r mut [u8])`\r\n```\r\n\r\nBut with that clarification, I'd actually expect the first assignement to fail with the same error, but it doesn't.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74231/timeline", "performed_via_github_app": null, "state_reason": null}