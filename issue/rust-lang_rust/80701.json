{"url": "https://api.github.com/repos/rust-lang/rust/issues/80701", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80701/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80701/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80701/events", "html_url": "https://github.com/rust-lang/rust/issues/80701", "id": 778307469, "node_id": "MDU6SXNzdWU3NzgzMDc0Njk=", "number": 80701, "title": "Mismatched lifetime on trait impl shows a misleading error", "user": {"login": "Earlz", "id": 371222, "node_id": "MDQ6VXNlcjM3MTIyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/371222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Earlz", "html_url": "https://github.com/Earlz", "followers_url": "https://api.github.com/users/Earlz/followers", "following_url": "https://api.github.com/users/Earlz/following{/other_user}", "gists_url": "https://api.github.com/users/Earlz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Earlz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Earlz/subscriptions", "organizations_url": "https://api.github.com/users/Earlz/orgs", "repos_url": "https://api.github.com/users/Earlz/repos", "events_url": "https://api.github.com/users/Earlz/events{/privacy}", "received_events_url": "https://api.github.com/users/Earlz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-01-04T19:23:35Z", "updated_at": "2023-04-18T07:07:53Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The rust compiler gives a very poor error message when there is a lifetime expectation mismatch on trait usage.\r\n\r\nI used this code: (playground link: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=581fa159f8ff99f2df447308fccd4bbc )\r\n\r\n```rust\r\nuse std::cell::*;\r\n\r\n#[derive(Default)]\r\nstruct Test {\r\n    pub foo: u32,\r\n}\r\n\r\ntrait FooSetter {\r\n    fn set_foo(&mut self, value: u32);\r\n}\r\n\r\nimpl FooSetter for Test {\r\n    fn set_foo(&mut self, value: u32) {\r\n        self.foo = value;\r\n    }\r\n}\r\n\r\ntrait BaseSetter{\r\n    fn set(&mut self, value: u32);\r\n}\r\nimpl BaseSetter for dyn FooSetter{\r\n    fn set(&mut self, value: u32){\r\n        self.set_foo(value);\r\n    }\r\n}\r\n\r\nstruct TestHolder<'a> {\r\n    pub holder: Option<RefCell<&'a mut dyn FooSetter>>,\r\n}\r\n\r\nimpl <'a>TestHolder<'a>{\r\n    pub fn test_foo(&self){\r\n       self.holder.as_ref().unwrap().borrow_mut().set(20); \r\n    }\r\n}\r\n\r\n\r\n\r\nfn main() {\r\n    let mut test = Test::default();\r\n    test.foo = 10;\r\n    {\r\n        let holder = TestHolder { holder: Some(RefCell::from(&mut test))};\r\n        \r\n        holder.test_foo();\r\n    }\r\n    test.foo = 30;\r\n}\r\n\r\n```\r\n\r\nI expected to see a useful error message, such as \"expected trait `BaseSetter<'a>`, found trait: `BaseSetter<'static>`\"\r\n\r\nInstead, I was greeted with this almost useless error message: \"expected trait `BaseSetter`, found trait `BaseSetter`\"\r\n\r\nThe same error occurs on stable and nightly compilers\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80701/timeline", "performed_via_github_app": null, "state_reason": null}