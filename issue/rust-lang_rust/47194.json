{"url": "https://api.github.com/repos/rust-lang/rust/issues/47194", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47194/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47194/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47194/events", "html_url": "https://github.com/rust-lang/rust/issues/47194", "id": 286091712, "node_id": "MDU6SXNzdWUyODYwOTE3MTI=", "number": 47194, "title": "`memory access out of bounds` error when allocating strings in WebAssembly", "user": {"login": "jsonnull", "id": 5249539, "node_id": "MDQ6VXNlcjUyNDk1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/5249539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsonnull", "html_url": "https://github.com/jsonnull", "followers_url": "https://api.github.com/users/jsonnull/followers", "following_url": "https://api.github.com/users/jsonnull/following{/other_user}", "gists_url": "https://api.github.com/users/jsonnull/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsonnull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsonnull/subscriptions", "organizations_url": "https://api.github.com/users/jsonnull/orgs", "repos_url": "https://api.github.com/users/jsonnull/repos", "events_url": "https://api.github.com/users/jsonnull/events{/privacy}", "received_events_url": "https://api.github.com/users/jsonnull/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-04T19:39:15Z", "updated_at": "2018-01-06T08:11:11Z", "closed_at": "2018-01-06T08:11:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm working with passing strings between Rust and JavaScript on the `wasm32-unknown-unknown` target, but I'm consistently getting `memory access out of bounds` panics in Rust. I'm not able to determine if Rust or my code is at fault.\r\n\r\n[Here's a simple demonstration of the problem.](https://github.com/jsonnull/wasm-rust-utils/blob/master/examples/basic)\r\n\r\nA short overview of what's going on in my failing example:\r\n\r\n* The module is built by `webpack` and the Rust build is invoked by [`rust-native-wasm-loader`](https://github.com/dflemstr/rust-native-wasm-loader).\r\n* In the browser console there are console logs showing the first Rust function is invoked from JavaScript, which requires an allocation for the input string pointer, and an allocation for the string output pointer\u2014there are JavaScript calls for the input alloc and both the input and output dealloc, if that matters.\r\n* There's a console log for the second Rust function invoked by the JavaScript side, and it's somewhere in here that the `memory access out of bounds` error occurs. Here's the full error message:\r\n```\r\nUncaught (in promise) RuntimeError: memory access out of bounds\r\n    at wasm-function[78]:192\r\n    at wasm-function[1]:79\r\n    at toUppercase (webpack:///./src/index.js?:30:42)\r\n    at eval (webpack:///./src/index.js?:34:41)\r\n    at <anonymous>\r\n```\r\n\r\n* This is in release mode. Change `release` to `false` in `webpack.config.js` for a debug build. This time there's no console logs and an error appears immediately:\r\n```\r\nUncaught (in promise) RuntimeError: function signature mismatch\r\n    at core::fmt::write::hea786a1481adb9e0 (wasm-function[392]:3395)\r\n    at core::fmt::Write::write_fmt::h3f7ec2411e6ba1c8 (wasm-function[164]:262)\r\n    at std::panicking::begin_panic_fmt::h3fe5ef599a9ea351 (wasm-function[245]:318)\r\n    at rust_begin_unwind (wasm-function[244]:86)\r\n    at core::panicking::panic_fmt::h1bceab3183b318fb (wasm-function[442]:588)\r\n    at core::panicking::panic::he74d65cc02d05038 (wasm-function[440]:207)\r\n    at <core::option::Option<T>>::unwrap::h286d6daff2767775 (wasm-function[52]:87)\r\n    at <alloc::raw_vec::RawVec<T, A>>::allocate_in::h7e6e3ac111344e5e (wasm-function[19]:372)\r\n    at <alloc::raw_vec::RawVec<T>>::with_capacity::h81415bd27391e5af (wasm-function[18]:60)\r\n    at <alloc::vec::Vec<T>>::with_capacity::hebebed3340b32776 (wasm-function[28]:54)\r\n    at alloc (wasm-function[73]:69)\r\n    at Prelude.createString (webpack:////wasm-rust-utils/packages/wasm-rust-utils/dist/wasm-rust-utils.js?:93:24)\r\n    at opposite (webpack:///./src/index.js?:19:25)\r\n    at eval (webpack:///./src/index.js?:25:42)\r\n    at <anonymous>\r\n```\r\n\r\nI'm totally lost as to how to proceed, on the surface it seems that an arbitrary amount of allocations in Rust cause the program to fail in release mode, and there's some other issue in debug mode.\r\n\r\nCould this be at all related to https://github.com/rust-lang/rust/issues/46367 ?", "closed_by": {"login": "jsonnull", "id": 5249539, "node_id": "MDQ6VXNlcjUyNDk1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/5249539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsonnull", "html_url": "https://github.com/jsonnull", "followers_url": "https://api.github.com/users/jsonnull/followers", "following_url": "https://api.github.com/users/jsonnull/following{/other_user}", "gists_url": "https://api.github.com/users/jsonnull/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsonnull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsonnull/subscriptions", "organizations_url": "https://api.github.com/users/jsonnull/orgs", "repos_url": "https://api.github.com/users/jsonnull/repos", "events_url": "https://api.github.com/users/jsonnull/events{/privacy}", "received_events_url": "https://api.github.com/users/jsonnull/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47194/timeline", "performed_via_github_app": null, "state_reason": "completed"}