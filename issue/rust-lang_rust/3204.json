{"url": "https://api.github.com/repos/rust-lang/rust/issues/3204", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/3204/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/3204/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/3204/events", "html_url": "https://github.com/rust-lang/rust/issues/3204", "id": 6252936, "node_id": "MDU6SXNzdWU2MjUyOTM2", "number": 3204, "title": "Add an API for 'named services'", "user": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-08-15T22:37:17Z", "updated_at": "2013-07-11T17:41:33Z", "closed_at": "2013-07-11T17:41:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We currently have two global tasks that are started on demand and run until the process ends. The memory profiler that digitalknight is working on will add another. Each of these must deal with an ugly unsafe API, and they each create their own scheduler, threads, native stacks, etc.\n\nIt would be nice to have a safe API for this that allows services to be named (possibly like the TLS does) and that lets all services share a single scheduler. Services would still need an option to create their own scheduler though, as uv does need its own.\n\nI imagine this would work by having just a single 'named service service' use the current unsafe API, and letting it in turn be responsible for managing the service lifecycle.\n\nIt would also be good to come up with a way to let services be stopped when not in use.\n", "closed_by": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/3204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/3204/timeline", "performed_via_github_app": null, "state_reason": "completed"}