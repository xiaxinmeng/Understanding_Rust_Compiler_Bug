{"url": "https://api.github.com/repos/rust-lang/rust/issues/22035", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/22035/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/22035/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/22035/events", "html_url": "https://github.com/rust-lang/rust/issues/22035", "id": 56891420, "node_id": "MDU6SXNzdWU1Njg5MTQyMA==", "number": 22035, "title": "Book: enum comment about match needs more detail", "user": {"login": "mdinger", "id": 4156987, "node_id": "MDQ6VXNlcjQxNTY5ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/4156987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdinger", "html_url": "https://github.com/mdinger", "followers_url": "https://api.github.com/users/mdinger/followers", "following_url": "https://api.github.com/users/mdinger/following{/other_user}", "gists_url": "https://api.github.com/users/mdinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdinger/subscriptions", "organizations_url": "https://api.github.com/users/mdinger/orgs", "repos_url": "https://api.github.com/users/mdinger/repos", "events_url": "https://api.github.com/users/mdinger/events{/privacy}", "received_events_url": "https://api.github.com/users/mdinger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-02-07T01:38:10Z", "updated_at": "2015-02-16T03:52:33Z", "closed_at": "2015-02-16T03:52:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In [`enum`](https://github.com/rust-lang/rust/blob/master/src/doc/trpl/compound-data-types.md#enums), it was just shown how `enum` doesn't have equality ops by default among other ops. This should state a (brief) reason why `match` is useful for many comparison cases (not just that it has pretty branching). I apparently forgot or erased it or something before pushing...\n\n> This may seem rather limiting, particularly equality being invalid; in many cases however, it's unnecessary. Rust provides the match keyword, which will be examined in more detail in the next section, which often allows better and easier branch control than a series of if/else statements would. However, for our game we need the comparisons to work so we will utilize the Ordering enum provided by the standard library which supports such comparisons. It has this form:\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/22035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/22035/timeline", "performed_via_github_app": null, "state_reason": "completed"}