{"url": "https://api.github.com/repos/rust-lang/rust/issues/91636", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91636/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91636/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91636/events", "html_url": "https://github.com/rust-lang/rust/issues/91636", "id": 1073670646, "node_id": "I_kwDOAAsO6M4__un2", "number": 91636, "title": "Compiler panics when comparing functions", "user": {"login": "CeleritasCelery", "id": 10623982, "node_id": "MDQ6VXNlcjEwNjIzOTgy", "avatar_url": "https://avatars.githubusercontent.com/u/10623982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CeleritasCelery", "html_url": "https://github.com/CeleritasCelery", "followers_url": "https://api.github.com/users/CeleritasCelery/followers", "following_url": "https://api.github.com/users/CeleritasCelery/following{/other_user}", "gists_url": "https://api.github.com/users/CeleritasCelery/gists{/gist_id}", "starred_url": "https://api.github.com/users/CeleritasCelery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CeleritasCelery/subscriptions", "organizations_url": "https://api.github.com/users/CeleritasCelery/orgs", "repos_url": "https://api.github.com/users/CeleritasCelery/repos", "events_url": "https://api.github.com/users/CeleritasCelery/events{/privacy}", "received_events_url": "https://api.github.com/users/CeleritasCelery/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2021-12-07T19:03:11Z", "updated_at": "2021-12-15T20:27:59Z", "closed_at": "2021-12-15T17:30:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\nEdit: see example in the first comment below for a reproduction without Miri. \r\n\r\nI have created a minimal reproduction based on some more verbose code that was causing Miri to panic. Note this code does not panic when compiled to native code with rustc (though that doesn't mean there is no undefined behavior here).\r\n\r\n### Code\r\n\r\n```Rust\r\ntype BuiltIn = for<'a> fn(&str);\r\n\r\nstruct Function {\r\n    inner: BuiltIn,\r\n}\r\n\r\nimpl Function {\r\n    fn new(subr: BuiltIn) -> Self {\r\n        Self { inner: subr }\r\n    }\r\n}\r\n\r\nfn dummy(_: &str) {}\r\n\r\nfn main() {\r\n    let func1 = Function::new(dummy);\r\n    let func2 = Function::new(dummy);\r\n    let inner: fn(&'static _) -> _ = func1.inner;\r\n    if inner == func2.inner {\r\n        println!(\"equal\");\r\n    } else {\r\n        println!(\"not equal\");\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.59.0-nightly (acbe4443c 2021-12-02)\r\nbinary: rustc\r\ncommit-hash: acbe4443cc4c9695c0b74a7b64b60333c990a400\r\ncommit-date: 2021-12-02\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.59.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'Unexpected types for BinOp: fn(&str) Eq for<'r> fn(&'r str)', /rustc/acbe4443cc4c9695c0b74a7b64b60333c990a400/compiler/rustc_const_eval/src/interpret/operator.rs:332:17\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/acbe4443cc4c9695c0b74a7b64b60333c990a400/library/std/src/panicking.rs:498:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/acbe4443cc4c9695c0b74a7b64b60333c990a400/library/core/src/panicking.rs:107:14\r\n   2: <rustc_const_eval::interpret::eval_context::InterpCx<miri::machine::Evaluator>>::overflowing_binary_op\r\n   3: <rustc_const_eval::interpret::eval_context::InterpCx<miri::machine::Evaluator>>::binop_ignore_overflow\r\n   4: <rustc_const_eval::interpret::eval_context::InterpCx<miri::machine::Evaluator>>::statement\r\n   5: miri::eval::eval_entry\r\n   6: <rustc_interface::passes::QueryContext>::enter::<<miri::MiriCompilerCalls as rustc_driver::Callbacks>::after_analysis::{closure#0}, ()>\r\n   7: <miri::MiriCompilerCalls as rustc_driver::Callbacks>::after_analysis\r\n   8: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorReported>>\r\n   9: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  10: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91636/timeline", "performed_via_github_app": null, "state_reason": "completed"}