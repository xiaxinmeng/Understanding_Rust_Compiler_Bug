{"url": "https://api.github.com/repos/rust-lang/rust/issues/56411", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56411/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56411/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56411/events", "html_url": "https://github.com/rust-lang/rust/issues/56411", "id": 386468934, "node_id": "MDU6SXNzdWUzODY0Njg5MzQ=", "number": 56411, "title": "ICE on beta in macro expansion: \"byte index out of bounds\" in resolve_imports", "user": {"login": "Shadlock0133", "id": 3766527, "node_id": "MDQ6VXNlcjM3NjY1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/3766527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shadlock0133", "html_url": "https://github.com/Shadlock0133", "followers_url": "https://api.github.com/users/Shadlock0133/followers", "following_url": "https://api.github.com/users/Shadlock0133/following{/other_user}", "gists_url": "https://api.github.com/users/Shadlock0133/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shadlock0133/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shadlock0133/subscriptions", "organizations_url": "https://api.github.com/users/Shadlock0133/orgs", "repos_url": "https://api.github.com/users/Shadlock0133/repos", "events_url": "https://api.github.com/users/Shadlock0133/events{/privacy}", "received_events_url": "https://api.github.com/users/Shadlock0133/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-01T15:39:42Z", "updated_at": "2019-01-26T20:59:00Z", "closed_at": "2019-01-26T20:59:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<details><summary>\r\nlib.rs:\r\n</summary><p>\r\n\r\n```rust\r\nmacro_rules! import {\r\n    ( $($name:ident),* ) => {\r\n        $(\r\n            mod $name;\r\n            pub use self::$name;\r\n        )*\r\n    }\r\n}\r\n\r\nimport!(day1);\r\n```\r\n</p></details>\r\nday1.rs is empty\r\n<details><summary>\r\nerror\r\n</summary><p>\r\n<pre><font color=\"#AB4642\"><b>\u279c  </b></font><font color=\"#86C1B9\"><b>ice</b></font> <font color=\"#7CAFC2\"><b>git:(</b></font><font color=\"#AB4642\"><b>master</b></font><font color=\"#7CAFC2\"><b>) </b></font><font color=\"#F7CA88\"><b>\u2717</b></font> RUST_BACKTRACE=1 cargo +beta build\r\n<font color=\"#A1B56C\"><b>   Compiling</b></font> ice v0.1.0 (/home/shadlock0133/projects/rust/ice)                                           \r\nthread &apos;main&apos; panicked at &apos;byte index 45 is out of bounds of `self::$name`&apos;, libcore/str/mod.rs:2094:9   \r\nstack backtrace:                                                                                         \r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace                                          \r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49                                            \r\n   1: std::sys_common::backtrace::print                                                                  \r\n             at libstd/sys_common/backtrace.rs:71                                                        \r\n             at libstd/sys_common/backtrace.rs:59                                                        \r\n   2: std::panicking::default_hook::{{closure}}                                                          \r\n             at libstd/panicking.rs:211                                                                  \r\n   3: std::panicking::default_hook                                                                       \r\n             at libstd/panicking.rs:227                                                                  \r\n   4: rustc::util::common::panic_hook                                                                    \r\n   5: std::panicking::rust_panic_with_hook                                                               \r\n             at libstd/panicking.rs:480                                                                  \r\n   6: std::panicking::continue_panic_fmt                                                                 \r\n             at libstd/panicking.rs:390                                                                  \r\n   7: rust_begin_unwind                                                                                  \r\n             at libstd/panicking.rs:325                                                                  \r\n   8: core::panicking::panic_fmt                                                                         \r\n             at libcore/panicking.rs:77                                                                  \r\n   9: core::str::slice_error_fail                                                                        \r\n             at libcore/str/mod.rs:0                                                                     \r\n  10: core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index::{{closure}}\r\n  11: rustc_resolve::Resolver::report_conflict                                                           \r\n  12: rustc_resolve::resolve_imports::ImportResolver::resolve_imports                                    \r\n  13: rustc_resolve::macros::&lt;impl syntax::ext::base::Resolver for rustc_resolve::Resolver&lt;&apos;a, &apos;crateloader&gt;&gt;::resolve_imports\r\n  14: syntax::ext::expand::MacroExpander::expand_fragment                                                \r\n  15: syntax::ext::expand::MacroExpander::expand_crate                                                   \r\n  16: rustc_driver::driver::phase_2_configure_and_expand_inner::{{closure}}                              \r\n  17: rustc::util::common::time                                                                          \r\n  18: rustc_driver::driver::phase_2_configure_and_expand                                                 \r\n  19: rustc_driver::driver::compile_input                                                                \r\n  20: rustc_driver::run_compiler_with_pool                                                               \r\n  21: rustc_driver::driver::spawn_thread_pool                                                            \r\n  22: rustc_driver::run_compiler                                                                         \r\n  23: &lt;scoped_tls::ScopedKey&lt;T&gt;&gt;::set                                                                    \r\n  24: &lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once                    \r\n  25: __rust_maybe_catch_panic                                                                           \r\n             at libpanic_unwind/lib.rs:102                                                               \r\n  26: rustc_driver::run                                                                                  \r\n  27: rustc_driver::main                                                                                 \r\n  28: std::rt::lang_start::{{closure}}                                                                   \r\n  29: std::panicking::try::do_call                                                                       \r\n             at libstd/rt.rs:59                                                                          \r\n             at libstd/panicking.rs:310                                                                  \r\n  30: __rust_maybe_catch_panic                                                                           \r\n             at libpanic_unwind/lib.rs:102                                                               \r\n  31: std::rt::lang_start_internal                                                                       \r\n             at libstd/panicking.rs:289                                                                  \r\n             at libstd/panic.rs:392                                                                      \r\n             at libstd/rt.rs:58                                                                          \r\n  32: main                                                                                               \r\n  33: __libc_start_main                                                                                  \r\n  34: &lt;unknown&gt;                                                                                          \r\nquery stack during panic:                                                                                \r\nend of query stack                                                                                       \r\n                                                                                                         \r\nerror: internal compiler error: unexpected panic                                                         \r\n                                                                                                         \r\nnote: the compiler unexpectedly panicked. this is a bug.                                                 \r\n                                                                                                         \r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n                                                                                                         \r\nnote: rustc 1.31.0-beta.19 (42053f9f0 2018-11-26) running on x86_64-unknown-linux-gnu                    \r\n                                                                                                         \r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib                                     \r\n                                                                                                         \r\nnote: some of the compiler flags provided by cargo are hidden                                            \r\n                                                                                                         \r\n<font color=\"#AB4642\"><b>error:</b></font> Could not compile `ice`.                                                                          \r\n\r\nTo learn more, run the command again with --verbose.\r\n</pre>\r\n</p></details>", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56411/timeline", "performed_via_github_app": null, "state_reason": "completed"}