{"url": "https://api.github.com/repos/rust-lang/rust/issues/75808", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75808/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75808/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75808/events", "html_url": "https://github.com/rust-lang/rust/issues/75808", "id": 684017279, "node_id": "MDU6SXNzdWU2ODQwMTcyNzk=", "number": 75808, "title": "Potential compiler memory leak in Nightly", "user": {"login": "sazzer", "id": 66072, "node_id": "MDQ6VXNlcjY2MDcy", "avatar_url": "https://avatars.githubusercontent.com/u/66072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sazzer", "html_url": "https://github.com/sazzer", "followers_url": "https://api.github.com/users/sazzer/followers", "following_url": "https://api.github.com/users/sazzer/following{/other_user}", "gists_url": "https://api.github.com/users/sazzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/sazzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sazzer/subscriptions", "organizations_url": "https://api.github.com/users/sazzer/orgs", "repos_url": "https://api.github.com/users/sazzer/repos", "events_url": "https://api.github.com/users/sazzer/events{/privacy}", "received_events_url": "https://api.github.com/users/sazzer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1168029555, "node_id": "MDU6TGFiZWwxMTY4MDI5NTU1", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-hang", "name": "I-hang", "color": "e10c02", "default": false, "description": "Issue: The compiler never terminates, due to infinite loops, deadlock, livelock, etc."}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}, {"id": 1791937891, "node_id": "MDU6TGFiZWwxNzkxOTM3ODkx", "url": "https://api.github.com/repos/rust-lang/rust/labels/ICEBreaker-Cleanup-Crew", "name": "ICEBreaker-Cleanup-Crew", "color": "74cc28", "default": false, "description": "Helping to \"clean up\" bugs with minimal examples and bisections"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-08-22T15:40:43Z", "updated_at": "2020-09-02T15:07:18Z", "closed_at": "2020-09-02T15:05:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "(Apologies if I've done this wrong. I've used the Bug template and not the ICE one because I'm not getting the \"Internal Compiler Error\" error message. I've also had a bit of a search and not seen anyone else reporting this at all, but I can't see anything unusual that I'm doing.)\r\n\r\nI have a project that recently stopped building, and it's taken me a while to work out why. I still don't know everything - sorry! - but what I do know is this:\r\n* I'm using Nightly. It does *not* affect Stable. Additionally, it does *not* affect Nightly from before 2020-08-13. The very first version that breaks is:\r\n```\r\n-> % rustc --version --verbose\r\nrustc 1.47.0-nightly (81dc88f88 2020-08-13)\r\nbinary: rustc\r\ncommit-hash: 81dc88f88f92ba8ad7465f9cba10c12d3a7b70f1\r\ncommit-date: 2020-08-13\r\nhost: x86_64-apple-darwin\r\nrelease: 1.47.0-nightly\r\nLLVM version: 10.0\r\n```\r\n* I'm getting this on macOS but it also affects Linux. I know because I first caught it on my Github Actions CI build.\r\n* When it happens, I can got to Activity Monitor and see the memory usage of rustc going up. I caught this one because the OS complained about running out of memory on one test when it reached 15GB of memory used by the compiler.\r\n* I'm using a Cargo Workspace to keep different components in my system isolated from each other. However, I can't see any reason why that would be the problem. The error I'm seeing happens deterministically in exactly one of the crates, and all of the others are fine.\r\n* I have one single line of code that I can comment out that will stop the problem happening. However, it's not anything special.\r\n\r\nThe error happens in the method:\r\n```\r\n#[get(\"/authentication/{provider}/complete\")]\r\n#[tracing::instrument(\r\n    fields(http_method = \"GET\", http_path = \"/authentication/:provider/complete\"),\r\n    skip(authentication_service, authorization_service)\r\n)]\r\npub async fn complete(\r\n    path: Path<(ProviderId,)>,\r\n    query: Query<HashMap<String, String>>,\r\n    authentication_service: Data<AuthenticationService>,\r\n    authorization_service: Data<AuthorizationService>,\r\n) -> HttpResponse {\r\n    let user = authentication_service\r\n        .complete_authentication(&path.0, &query.0)\r\n        .await;\r\n    todo!()\r\n}\r\n```\r\n\r\nIf I remove the `.await` call in there then the build completes. If I leave the `.await` in then it breaks.\r\n\r\nHowever, I've got other Actix endpoints that use async/await and they work perfectly well.\r\n\r\nCheers", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75808/timeline", "performed_via_github_app": null, "state_reason": "completed"}