{"url": "https://api.github.com/repos/rust-lang/rust/issues/75220", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75220/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75220/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75220/events", "html_url": "https://github.com/rust-lang/rust/issues/75220", "id": 674287175, "node_id": "MDU6SXNzdWU2NzQyODcxNzU=", "number": 75220, "title": "1.45.0 regression asm-related ICE in tests on non-x86", "user": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 120005, "node_id": "MDU6TGFiZWwxMjAwMDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-testsuite", "name": "A-testsuite", "color": "f7e101", "default": false, "description": "Area: The testsuite used to check the correctness of rustc"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2046313052, "node_id": "MDU6TGFiZWwyMDQ2MzEzMDUy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-asm", "name": "F-asm", "color": "f9c0cc", "default": false, "description": "`#![feature(asm)]` (not `llvm_asm`)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-06T12:48:09Z", "updated_at": "2020-08-07T08:36:15Z", "closed_at": "2020-08-07T08:36:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "e.g. [s390x](https://buildd.debian.org/status/fetch.php?pkg=rustc&arch=s390x&ver=1.45.0%2Bdfsg1-1&stamp=1596694002&raw=0) [mips64el](https://buildd.debian.org/status/fetch.php?pkg=rustc&arch=mips64el&ver=1.45.0%2Bdfsg1-1&stamp=1596677047&raw=0) [ppc64](https://buildd.debian.org/status/fetch.php?pkg=rustc&arch=ppc64&ver=1.45.0%2Bdfsg1-1&stamp=1596665731&raw=0)\r\n\r\n~~~~\r\ntest [ui] ui/feature-gates/feature-gate-asm.rs ... FAILED\r\ntest [ui] ui/feature-gates/feature-gate-asm2.rs ... FAILED\r\ntest [pretty] pretty/asm.rs ... FAILED\r\n~~~~\r\n\r\nCC @Amanieu \r\n\r\n~~~~\r\nfailures:\r\n\r\n---- [ui] ui/feature-gates/feature-gate-asm.rs stdout ----\r\n\r\n\r\nexecuting \"/<<PKGBUILDDIR>>/build/mips64el-unknown-linux-gnuabi64/stage2/bin/rustc\" \"/<<PKGBUILDDIR>>/src/test/ui/feature-gates/feature-gate-asm.rs\" \"-Zthreads=1\" \"--target=mips64el-unknown-linux-gnuabi64\" \"--error-format\" \"json\" \"-Zui-testing\" \"-Zdeduplicate-diagnostics=no\" \"--emit\" \"metadata\" \"-C\" \"prefer-dynamic\" \"--out-dir\" \"/<<PKGBUILDDIR>>/build/mips64el-unknown-linux-gnuabi64/test/ui/feature-gates/feature-gate-asm\" \"-A\" \"unused\" \"-Crpath\" \"-O\" \"-Cdebuginfo=0\" \"-Zunstable-options\" \"-Lnative=/<<PKGBUILDDIR>>/build/mips64el-unknown-linux-gnuabi64/native/rust-test-helpers\" \"-Clinker=mips64el-linux-gnuabi64-gcc\" \"-L\" \"/<<PKGBUILDDIR>>/build/mips64el-unknown-linux-gnuabi64/test/ui/feature-gates/feature-gate-asm/auxiliary\"\r\n------stdout------------------------------\r\n\r\n------stderr------------------------------\r\n{\"message\":\"use of unstable library feature 'asm': inline assembly is not stable enough for use and is subject to change\",\"code\":{\"code\":\"E0658\",\"explanation\":\"An unstable feature was used.\\n\\nErroneous code example:\\n\\n```compile_fail,E0658\\n#[repr(u128)] // error: use of unstable library feature 'repr128'\\nenum Foo {\\n    Bar(u64),\\n}\\n```\\n\\nIf you're using a stable or a beta version of rustc, you won't be able to use\\nany unstable features. In order to do so, please switch to a nightly version of\\nrustc (by using rustup).\\n\\nIf you're using a nightly version of rustc, just add the corresponding feature\\nto be able to use it:\\n\\n```\\n#![feature(repr128)]\\n\\n#[repr(u128)] // ok!\\nenum Foo {\\n    Bar(u64),\\n}\\n```\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/<<PKGBUILDDIR>>/src/test/ui/feature-gates/feature-gate-asm.rs\",\"byte_start\":55,\"byte_end\":58,\"line_start\":5,\"line_end\":5,\"column_start\":9,\"column_end\":12,\"is_primary\":true,\"text\":[{\"text\":\"        asm!(\\\"\\\");\",\"highlight_start\":9,\"highlight_end\":12}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"see issue #72016 <https://github.com/rust-lang/rust/issues/72016> for more information\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"add `#![feature(asm)]` to the crate attributes to enable\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null}],\"rendered\":\"error[E0658]: use of unstable library feature 'asm': inline assembly is not stable enough for use and is subject to change\\n  --> /<<PKGBUILDDIR>>/src/test/ui/feature-gates/feature-gate-asm.rs:5:9\\n   |\\nLL |         asm!(\\\"\\\");\\n   |         ^^^\\n   |\\n   = note: see issue #72016 <https://github.com/rust-lang/rust/issues/72016> for more information\\n   = help: add `#![feature(asm)]` to the crate attributes to enable\\n\\n\"}\r\n{\"message\":\"use of unstable library feature 'llvm_asm': prefer using the new asm! syntax instead\",\"code\":{\"code\":\"E0658\",\"explanation\":\"An unstable feature was used.\\n\\nErroneous code example:\\n\\n```compile_fail,E0658\\n#[repr(u128)] // error: use of unstable library feature 'repr128'\\nenum Foo {\\n    Bar(u64),\\n}\\n```\\n\\nIf you're using a stable or a beta version of rustc, you won't be able to use\\nany unstable features. In order to do so, please switch to a nightly version of\\nrustc (by using rustup).\\n\\nIf you're using a nightly version of rustc, just add the corresponding feature\\nto be able to use it:\\n\\n```\\n#![feature(repr128)]\\n\\n#[repr(u128)] // ok!\\nenum Foo {\\n    Bar(u64),\\n}\\n```\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/<<PKGBUILDDIR>>/src/test/ui/feature-gates/feature-gate-asm.rs\",\"byte_start\":129,\"byte_end\":137,\"line_start\":7,\"line_end\":7,\"column_start\":9,\"column_end\":17,\"is_primary\":true,\"text\":[{\"text\":\"        llvm_asm!(\\\"\\\");\",\"highlight_start\":9,\"highlight_end\":17}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"see issue #70173 <https://github.com/rust-lang/rust/issues/70173> for more information\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"add `#![feature(llvm_asm)]` to the crate attributes to enable\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null}],\"rendered\":\"error[E0658]: use of unstable library feature 'llvm_asm': prefer using the new asm! syntax instead\\n  --> /<<PKGBUILDDIR>>/src/test/ui/feature-gates/feature-gate-asm.rs:7:9\\n   |\\nLL |         llvm_asm!(\\\"\\\");\\n   |         ^^^^^^^^\\n   |\\n   = note: see issue #70173 <https://github.com/rust-lang/rust/issues/70173> for more information\\n   = help: add `#![feature(llvm_asm)]` to the crate attributes to enable\\n\\n\"}\r\n{\"message\":\"asm! is unsupported on this target\",\"code\":{\"code\":\"E0472\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"/<<PKGBUILDDIR>>/src/test/ui/feature-gates/feature-gate-asm.rs\",\"byte_start\":55,\"byte_end\":64,\"line_start\":5,\"line_end\":5,\"column_start\":9,\"column_end\":18,\"is_primary\":true,\"text\":[{\"text\":\"        asm!(\\\"\\\");\",\"highlight_start\":9,\"highlight_end\":18}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"error[E0472]: asm! is unsupported on this target\\n  --> /<<PKGBUILDDIR>>/src/test/ui/feature-gates/feature-gate-asm.rs:5:9\\n   |\\nLL |         asm!(\\\"\\\");\\n   |         ^^^^^^^^^\\n\\n\"}\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', src/librustc_ast_lowering/expr.rs:1073:24\r\nstack backtrace:\r\n   0: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n   1: core::fmt::write\r\n   2: std::io::Write::write_fmt\r\n   3: std::panicking::default_hook::{{closure}}\r\n   4: std::panicking::default_hook\r\n   5: core::ops::function::Fn::call\r\n   6: rustc_driver::report_ice\r\n   7: <rustc_driver::DEFAULT_HOOK as core::ops::deref::Deref>::deref::__static_ref_initialize::{{closure}}\r\n   8: std::panicking::rust_panic_with_hook\r\n   9: rust_begin_unwind\r\n  10: core::panicking::panic_fmt\r\n  11: core::panicking::panic\r\n  12: rustc_ast_lowering::expr::<impl rustc_ast_lowering::LoweringContext>::lower_expr_asm\r\n  13: rustc_data_structures::stack::ensure_sufficient_stack\r\n  14: rustc_ast_lowering::LoweringContext::lower_stmt\r\n  15: rustc_ast_lowering::LoweringContext::lower_block_noalloc\r\n  16: rustc_data_structures::stack::ensure_sufficient_stack\r\n  17: rustc_ast_lowering::LoweringContext::lower_block_noalloc\r\n  18: rustc_ast_lowering::LoweringContext::lower_block_expr\r\n  19: rustc_ast_lowering::item::<impl rustc_ast_lowering::LoweringContext>::lower_fn_body_block\r\n  20: rustc_ast_lowering::item::<impl rustc_ast_lowering::LoweringContext>::lower_maybe_async_body\r\n  21: rustc_ast_lowering::item::<impl rustc_ast_lowering::LoweringContext>::lower_item\r\n  22: rustc_ast_lowering::LoweringContext::with_hir_id_owner\r\n  23: <rustc_ast_lowering::item::ItemLowerer as rustc_ast::visit::Visitor>::visit_mod\r\n  24: rustc_ast::visit::walk_crate\r\n  25: rustc_ast_lowering::lower_crate\r\n  26: rustc_interface::passes::BoxedResolver::access::{{closure}}\r\n  27: rustc_interface::passes::configure_and_expand::{{closure}}\r\n  28: rustc_interface::queries::Queries::lower_to_hir\r\n  29: rustc_interface::queries::Queries::global_ctxt\r\n  30: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  31: rustc_ast::attr::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.45.0 running on mips64el-unknown-linux-gnuabi64\r\n\r\nnote: compiler flags: -Z threads=1 -Z ui-testing -Z deduplicate-diagnostics=no -Z unstable-options -C prefer-dynamic -C rpath -C debuginfo=0 -C linker=mips64el-linux-gnuabi64-gcc\r\n\r\nquery stack during panic:\r\nend of query stack\r\n{\"message\":\"aborting due to 3 previous errors\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"error: aborting due to 3 previous errors\\n\\n\"}\r\n{\"message\":\"For more information about this error, try `rustc --explain E0658`.\",\"code\":null,\"level\":\"failure-note\",\"spans\":[],\"children\":[],\"rendered\":\"For more information about this error, try `rustc --explain E0658`.\\n\"}\r\n\r\n------------------------------------------\r\n\r\nerror: Error: expected failure status (Some(1)) but received status Some(101).\r\nstatus: exit code: 101\r\ncommand: \"/<<PKGBUILDDIR>>/build/mips64el-unknown-linux-gnuabi64/stage2/bin/rustc\" \"/<<PKGBUILDDIR>>/src/test/ui/feature-gates/feature-gate-asm.rs\" \"-Zthreads=1\" \"--target=mips64el-unknown-linux-gnuabi64\" \"--error-format\" \"json\" \"-Zui-testing\" \"-Zdeduplicate-diagnostics=no\" \"--emit\" \"metadata\" \"-C\" \"prefer-dynamic\" \"--out-dir\" \"/<<PKGBUILDDIR>>/build/mips64el-unknown-linux-gnuabi64/test/ui/feature-gates/feature-gate-asm\" \"-A\" \"unused\" \"-Crpath\" \"-O\" \"-Cdebuginfo=0\" \"-Zunstable-options\" \"-Lnative=/<<PKGBUILDDIR>>/build/mips64el-unknown-linux-gnuabi64/native/rust-test-helpers\" \"-Clinker=mips64el-linux-gnuabi64-gcc\" \"-L\" \"/<<PKGBUILDDIR>>/build/mips64el-unknown-linux-gnuabi64/test/ui/feature-gates/feature-gate-asm/auxiliary\"\r\nstdout:\r\n------------------------------------------\r\n\r\n------------------------------------------\r\nstderr:\r\n------------------------------------------\r\nerror[E0658]: use of unstable library feature 'asm': inline assembly is not stable enough for use and is subject to change\r\n  --> /<<PKGBUILDDIR>>/src/test/ui/feature-gates/feature-gate-asm.rs:5:9\r\n   |\r\nLL |         asm!(\"\");\r\n   |         ^^^\r\n   |\r\n   = note: see issue #72016 <https://github.com/rust-lang/rust/issues/72016> for more information\r\n   = help: add `#![feature(asm)]` to the crate attributes to enable\r\n\r\nerror[E0658]: use of unstable library feature 'llvm_asm': prefer using the new asm! syntax instead\r\n  --> /<<PKGBUILDDIR>>/src/test/ui/feature-gates/feature-gate-asm.rs:7:9\r\n   |\r\nLL |         llvm_asm!(\"\");\r\n   |         ^^^^^^^^\r\n   |\r\n   = note: see issue #70173 <https://github.com/rust-lang/rust/issues/70173> for more information\r\n   = help: add `#![feature(llvm_asm)]` to the crate attributes to enable\r\n\r\nerror[E0472]: asm! is unsupported on this target\r\n  --> /<<PKGBUILDDIR>>/src/test/ui/feature-gates/feature-gate-asm.rs:5:9\r\n   |\r\nLL |         asm!(\"\");\r\n   |         ^^^^^^^^^\r\n\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', src/librustc_ast_lowering/expr.rs:1073:24\r\nstack backtrace:\r\n   0: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n   1: core::fmt::write\r\n   2: std::io::Write::write_fmt\r\n   3: std::panicking::default_hook::{{closure}}\r\n   4: std::panicking::default_hook\r\n   5: core::ops::function::Fn::call\r\n   6: rustc_driver::report_ice\r\n   7: <rustc_driver::DEFAULT_HOOK as core::ops::deref::Deref>::deref::__static_ref_initialize::{{closure}}\r\n   8: std::panicking::rust_panic_with_hook\r\n   9: rust_begin_unwind\r\n  10: core::panicking::panic_fmt\r\n  11: core::panicking::panic\r\n  12: rustc_ast_lowering::expr::<impl rustc_ast_lowering::LoweringContext>::lower_expr_asm\r\n  13: rustc_data_structures::stack::ensure_sufficient_stack\r\n  14: rustc_ast_lowering::LoweringContext::lower_stmt\r\n  15: rustc_ast_lowering::LoweringContext::lower_block_noalloc\r\n  16: rustc_data_structures::stack::ensure_sufficient_stack\r\n  17: rustc_ast_lowering::LoweringContext::lower_block_noalloc\r\n  18: rustc_ast_lowering::LoweringContext::lower_block_expr\r\n  19: rustc_ast_lowering::item::<impl rustc_ast_lowering::LoweringContext>::lower_fn_body_block\r\n  20: rustc_ast_lowering::item::<impl rustc_ast_lowering::LoweringContext>::lower_maybe_async_body\r\n  21: rustc_ast_lowering::item::<impl rustc_ast_lowering::LoweringContext>::lower_item\r\n  22: rustc_ast_lowering::LoweringContext::with_hir_id_owner\r\n  23: <rustc_ast_lowering::item::ItemLowerer as rustc_ast::visit::Visitor>::visit_mod\r\n  24: rustc_ast::visit::walk_crate\r\n  25: rustc_ast_lowering::lower_crate\r\n  26: rustc_interface::passes::BoxedResolver::access::{{closure}}\r\n  27: rustc_interface::passes::configure_and_expand::{{closure}}\r\n  28: rustc_interface::queries::Queries::lower_to_hir\r\n  29: rustc_interface::queries::Queries::global_ctxt\r\n  30: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  31: rustc_ast::attr::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.45.0 running on mips64el-unknown-linux-gnuabi64\r\n\r\nnote: compiler flags: -Z threads=1 -Z ui-testing -Z deduplicate-diagnostics=no -Z unstable-options -C prefer-dynamic -C rpath -C debuginfo=0 -C linker=mips64el-linux-gnuabi64-gcc\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: aborting due to 3 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0658`.\r\n\r\n------------------------------------------\r\n~~~~", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75220/timeline", "performed_via_github_app": null, "state_reason": "completed"}