{"url": "https://api.github.com/repos/rust-lang/rust/issues/50356", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50356/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50356/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50356/events", "html_url": "https://github.com/rust-lang/rust/issues/50356", "id": 319083368, "node_id": "MDU6SXNzdWUzMTkwODMzNjg=", "number": 50356, "title": "Compiler panic when using repr(packed) associated constant in a match arm", "user": {"login": "Dillonu", "id": 5122312, "node_id": "MDQ6VXNlcjUxMjIzMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5122312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dillonu", "html_url": "https://github.com/Dillonu", "followers_url": "https://api.github.com/users/Dillonu/followers", "following_url": "https://api.github.com/users/Dillonu/following{/other_user}", "gists_url": "https://api.github.com/users/Dillonu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dillonu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dillonu/subscriptions", "organizations_url": "https://api.github.com/users/Dillonu/orgs", "repos_url": "https://api.github.com/users/Dillonu/repos", "events_url": "https://api.github.com/users/Dillonu/events{/privacy}", "received_events_url": "https://api.github.com/users/Dillonu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-01T00:50:06Z", "updated_at": "2018-05-03T23:12:30Z", "closed_at": "2018-05-03T23:12:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I recently updated my nightly toolchain for rust, and compiled a project I was working on. Previously I was on the `nightly-2018-04-19-x86_64-pc-windows-msvc` version, and updated to the `nightly-2018-04-29-x86_64-pc-windows-msvc` version. I encountered a compiler error when dealing with `match` statements and Associated Constants, centered around alignment issues of the associated constant.\r\n\r\nAfter some testing, I managed to create a simple example with the code below:\r\n\r\n```rust\r\n#[derive(PartialEq, Eq)] // Needed for pattern matching\r\n#[repr(packed)] // Commenting out this line removes the error\r\npub struct Num(u64);\r\n\r\nimpl Num {\r\n    const ZERO: Self = Num(0); // Error points to this line as the alignment issue\r\n}\r\n\r\nfn decrement(a: Num) -> Num {\r\n    match a {\r\n        // Matching Num against Num::Zero with repr(packed) causes alignment error:\r\n        Num::ZERO => Num::ZERO, // Commenting out this line removes the error\r\n        a => Num(a.0 - 1)\r\n    }\r\n}\r\n\r\nfn main() {\r\n}\r\n```\r\n\r\n`cargo build`:\r\n\r\n```\r\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: ConstEvalErr { span: src\\main.rs:6:5: 6:31, kind: Miri(EvalError { kind: AlignmentCheckFailed { required: 8, has: 1 }, backtrace: None }, []) }', libcore\\result.rs:945:5\r\nstack backtrace:\r\n   0: <std::collections::hash::map::DefaultHasher as core::fmt::Debug>::fmt\r\n   1: <std::sys::windows::os_str::Buf as std::sys_common::IntoInner<std::sys_common::wtf8::Wtf8Buf>>::into_inner\r\n   2: std::panicking::take_hook\r\n   3: std::panicking::take_hook\r\n   4: rustc::ty::structural_impls::<impl rustc::ty::context::Lift<'tcx> for rustc::middle::const_val::ErrKind<'a>>::lift_to_tcx\r\n   5: std::panicking::rust_panic_with_hook\r\n   6: std::panicking::begin_panic_fmt\r\n   7: rust_begin_unwind\r\n   8: core::panicking::panic_fmt\r\n   9: <rustc_mir::transform::inline::CallSite<'tcx> as core::fmt::Debug>::fmt\r\n  10: rustc_mir::hair::pattern::PatternContext::lower_pattern\r\n  11: <unknown>\r\n  12: rustc_mir::hair::pattern::PatternContext::lower_pattern\r\n  13: rustc_mir::hair::pattern::PatternContext::lower_pattern\r\n  14: rustc_mir::hair::pattern::PatternContext::lower_pattern\r\n  15: <rustc_mir::transform::inline::CallSite<'tcx> as core::fmt::Debug>::fmt\r\n  16: <unknown>\r\n  17: <unknown>\r\n  18: <rustc_mir::hair::pattern::check_match::MatchVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_expr\r\n  19: <rustc_mir::hair::pattern::check_match::MatchVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_expr\r\n  20: <rustc_mir::monomorphize::collector::MonoItemCollectionMode as core::fmt::Debug>::fmt\r\n  21: rustc_mir::hair::pattern::check_match::check_crate\r\n  22: rustc::ty::context::tls::track_diagnostic\r\n  23: rustc::dep_graph::graph::DepGraph::assert_ignored\r\n  24: rustc::ty::context::tls::track_diagnostic\r\n  25: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_mark_green_and_read\r\n  26: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_mark_green_and_read\r\n  27: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::check_match\r\n  28: <rustc_mir::transform::inline::CallSite<'tcx> as core::fmt::Debug>::fmt\r\n  29: <rustc_mir::monomorphize::collector::MonoItemCollectionMode as core::fmt::Debug>::fmt\r\n  30: rustc_mir::hair::pattern::check_match::check_crate\r\n  31: <env_logger::filter::inner::Filter as core::fmt::Display>::fmt\r\n  32: <env_logger::filter::inner::Filter as core::fmt::Display>::fmt\r\n  33: <unknown>\r\n  34: rustc_driver::driver::compile_input\r\n  35: rustc_driver::run_compiler\r\n  36: rustc_driver::target_features::add_configuration\r\n  37: <unknown>\r\n  38: rustc_driver::target_features::add_configuration\r\n  39: _rust_maybe_catch_panic\r\n  40: rustc_driver::profile::trace::write_style\r\n  41: rustc_driver::main\r\n  42: <unknown>\r\n  43: std::panicking::update_panic_count\r\n  44: _rust_maybe_catch_panic\r\n  45: std::rt::lang_start_internal\r\n  46: <unknown>\r\n  47: <unknown>\r\n  48: BaseThreadInitThunk\r\n  49: RtlUserThreadStart\r\nquery stack during panic:\r\n#0 [check_match] processing `decrement`\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.27.0-nightly (79252ff4e 2018-04-29) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `error-example`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.27.0-nightly (79252ff4e 2018-04-29)\r\nbinary: rustc\r\ncommit-hash: 79252ff4e25d82f9fe856cb66f127b79cdace163\r\ncommit-date: 2018-04-29\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.27.0-nightly\r\nLLVM version: 6.0\r\n```\r\n\r\nI've also tested and encountered this error on the following versions:\r\n\r\n- nightly-2018-04-27-x86_64-pc-windows-msvc\r\n- nightly-2018-04-28-x86_64-pc-windows-msvc\r\n- nightly-2018-04-29-x86_64-pc-windows-msvc\r\n- nightly-2018-04-30-x86_64-pc-windows-msvc", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50356/timeline", "performed_via_github_app": null, "state_reason": "completed"}