{"url": "https://api.github.com/repos/rust-lang/rust/issues/97125", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/97125/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/97125/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/97125/events", "html_url": "https://github.com/rust-lang/rust/issues/97125", "id": 1239229765, "node_id": "I_kwDOAAsO6M5J3SVF", "number": 97125, "title": "rustdoc percent-encodes `~` in URLs, breaks links", "user": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-05-17T22:35:51Z", "updated_at": "2022-07-27T06:59:49Z", "closed_at": "2022-07-27T06:59:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# `~`\r\n\r\nWhen generating documentation with rustdoc, it appears to percent-encode `~` in link destinations. For an example, see [`moka 0.8.3`](https://docs.rs/moka/0.8.3/moka/index.html). At the bottom of the crate documentation is a link with the title \"hierarchical timer wheel\". The href in the HTML is `http://www.cs.columbia.edu/%7Enahum/w6998/papers/ton97-timing-wheels.pdf`, note the `%7E`, whereas [the source](https://docs.rs/moka/0.8.3/src/moka/lib.rs.html#159) is\r\n\r\n```rust\r\n//! [timer-wheel]: http://www.cs.columbia.edu/~nahum/w6998/papers/ton97-timing-wheels.pdf\r\n```\r\n\r\nRFC 1738 declared `~` to be an \"unsafe\" character, but that was obsoleted 17 years ago by [RFC 3986](https://www.rfc-editor.org/rfc/rfc3986) which explicitly lists `~` as an [unreserved character](https://www.rfc-editor.org/rfc/rfc3986#section-2.3) and says that unreserved characters should not be percent-encoded.\r\n\r\nThe fact that rustdoc encodes this is a problem because it actually breaks links. Case in point, the link from the motivating example here is broken by the percent-encoding. It shouldn't be, but not all servers percent-decode paths before interpreting them. If you click on http://www.cs.columbia.edu/%7Enahum/w6998/papers/ton97-timing-wheels.pdf you get a 404, but if you click on the originally-specified http://www.cs.columbia.edu/~nahum/w6998/papers/ton97-timing-wheels.pdf it works.\r\n\r\n### `^` and other characters\r\n\r\nI've also noticed that rustdoc percent-encodes `^`, which is annoying when trying to use a link like `https://docs.rs/parking_lot/^0.12/parking_lot/type.Mutex.html` as it ends up looking ugly. RFC 3986 disallows `^` inside URLs, but the [HTML5 spec extends the URL syntax](https://dev.w3.org/html5/spec-LC/urls.html#parsing-urls) to add `^` to the set of unreserved characters (along with other characters that RFC 3986 omitted). As such, rustdoc should target HTML5's notion of what constitutes a valid URL rather than RFC 3986's definition, as the URLs it produces will be parsed according to the HTML spec.\r\n\r\nMore generally, rustdoc should attempt to preserve the URL as it was written to the extent possible. This may in fact mean not adding any percent-encoding at all, as the URL is written directly in the markdown and [RFC 3986 \u00a72.4](https://www.rfc-editor.org/rfc/rfc3986#section-2.4) specifies that under normal circumstances, URL-encoding should only be done when producing a URL from its component parts. As rustdoc is not producing a URL from component parts it should probably just leave the URL alone.\r\n\r\n## Meta\r\nThis occurs both in rust 1.60.0 and in the unstable compiler used by docs.rs (currently `1.63.0-nightly (c52b9c10b 2022-05-16)`).\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/97125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/97125/timeline", "performed_via_github_app": null, "state_reason": "completed"}