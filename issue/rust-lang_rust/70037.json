{"url": "https://api.github.com/repos/rust-lang/rust/issues/70037", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70037/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70037/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70037/events", "html_url": "https://github.com/rust-lang/rust/issues/70037", "id": 582148060, "node_id": "MDU6SXNzdWU1ODIxNDgwNjA=", "number": 70037, "title": "Internal compiler error after a trait/struct rename.", "user": {"login": "JTKBowers", "id": 6480960, "node_id": "MDQ6VXNlcjY0ODA5NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/6480960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JTKBowers", "html_url": "https://github.com/JTKBowers", "followers_url": "https://api.github.com/users/JTKBowers/followers", "following_url": "https://api.github.com/users/JTKBowers/following{/other_user}", "gists_url": "https://api.github.com/users/JTKBowers/gists{/gist_id}", "starred_url": "https://api.github.com/users/JTKBowers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JTKBowers/subscriptions", "organizations_url": "https://api.github.com/users/JTKBowers/orgs", "repos_url": "https://api.github.com/users/JTKBowers/repos", "events_url": "https://api.github.com/users/JTKBowers/events{/privacy}", "received_events_url": "https://api.github.com/users/JTKBowers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-16T09:48:28Z", "updated_at": "2020-03-16T10:39:15Z", "closed_at": "2020-03-16T10:39:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Rustc segfaults after a trait/struct rename.\r\n\r\nI tried this code:\r\n## Reproducing\r\nThis bug only seems to occur when changing from one version of code to another. Both code snippets compile successfully with a clean build.\r\n\r\n1.  `cargo new rustc-repr`\r\n1. Add the following to `main.rs`:\r\n```rust\r\ntrait F {\r\n    fn id(&self) -> u32;\r\n}\r\n\r\nstruct ImplF {\r\n    id: u32\r\n}\r\n\r\nimpl F for ImplF {\r\n    fn id(&self) -> u32 {\r\n        self.id\r\n    }\r\n}\r\n\r\nfn main() {\r\n    println!(\"Hello, world!\");\r\n}\r\n```\r\n1. `cargo run`\r\n1. Change main.rs to contain:\r\n```rust\r\nstruct F {\r\n    id: u32\r\n}\r\n\r\nimpl F {\r\n    fn id(&self) -> u32 {\r\n        self.id\r\n    }\r\n}\r\n\r\nfn main() {\r\n    println!(\"Hello, world!\");\r\n}\r\n```\r\n1. `cargo run`\r\n\r\n\r\nI expected to see this happen: Code compiling successfully\r\n\r\nInstead, this happened: An internal compiler error occurs\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.42.0 (b8cedc004 2020-03-09)\r\nbinary: rustc\r\ncommit-hash: b8cedc00407a4c56a3bda1ed605c6fc166655447\r\ncommit-date: 2020-03-09\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.42.0\r\nLLVM version: 9.0\r\n```\r\n\r\nBacktrace:\r\n```\r\nerror: internal compiler error: src/librustc/dep_graph/graph.rs:687: DepNode Hir(rustc_repr[9782]::F[0]::id[0]) should have been pre-allocated but wasn't.\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:873:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:77\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1052\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1426\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:476\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_opt\r\n  18: rustc::util::bug::opt_span_bug_fmt\r\n  19: rustc::util::bug::bug_fmt\r\n  20: rustc::dep_graph::graph::DepGraph::try_mark_previous_green\r\n  21: rustc::dep_graph::graph::DepGraph::try_mark_green\r\n  22: rustc::dep_graph::graph::DepGraph::try_mark_green_and_read\r\n  23: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  24: <rustc_typeck::outlives::implicit_infer::InferVisitor as rustc_hir::itemlikevisit::ItemLikeVisitor>::visit_item\r\n  25: rustc_hir::hir::Crate::visit_all_item_likes\r\n  26: rustc_typeck::outlives::inferred_outlives_crate\r\n  27: rustc::ty::query::__query_compute::inferred_outlives_crate\r\n  28: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  29: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  30: rustc_typeck::outlives::inferred_outlives_of\r\n  31: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::inferred_outlives_of>::compute\r\n  32: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  33: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::force_query\r\n  34: rustc::ty::query::plumbing::force_from_dep_node\r\n  35: rustc::dep_graph::graph::DepGraph::try_mark_previous_green\r\n  36: rustc::dep_graph::graph::DepGraph::try_mark_previous_green\r\n  37: rustc::dep_graph::graph::DepGraph::try_mark_green\r\n  38: rustc::dep_graph::graph::DepGraph::try_mark_green_and_read\r\n  39: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  40: <rustc_typeck::collect::CollectItemTypesVisitor as rustc_hir::intravisit::Visitor>::visit_item\r\n  41: rustc::hir::map::Map::visit_item_likes_in_module\r\n  42: rustc_typeck::collect::collect_mod_item_types\r\n  43: rustc::ty::query::__query_compute::collect_mod_item_types\r\n  44: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::collect_mod_item_types>::compute\r\n  45: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  46: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  47: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::ensure_query\r\n  48: rustc_typeck::check_crate\r\n  49: rustc_interface::passes::analysis\r\n  50: rustc::ty::query::__query_compute::analysis\r\n  51: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  52: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  53: rustc::ty::context::tls::enter_global\r\n  54: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  55: scoped_tls::ScopedKey<T>::set\r\n  56: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.42.0 (b8cedc004 2020-03-09) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [type_of] processing `F::id`\r\n#1 [inferred_outlives_crate] computing the inferred outlives predicates for items in this crate\r\n#2 [inferred_outlives_of] processing `F`\r\n#3 [predicates_of] processing `F`\r\n#4 [collect_mod_item_types] collecting item types in top-level module\r\n#5 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `rustc-repr`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70037/timeline", "performed_via_github_app": null, "state_reason": "completed"}