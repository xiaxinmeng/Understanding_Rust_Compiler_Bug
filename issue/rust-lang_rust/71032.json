{"url": "https://api.github.com/repos/rust-lang/rust/issues/71032", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71032/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71032/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71032/events", "html_url": "https://github.com/rust-lang/rust/issues/71032", "id": 598297700, "node_id": "MDU6SXNzdWU1OTgyOTc3MDA=", "number": 71032, "title": "Improve compiler errors", "user": {"login": "manuels", "id": 31315, "node_id": "MDQ6VXNlcjMxMzE1", "avatar_url": "https://avatars.githubusercontent.com/u/31315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manuels", "html_url": "https://github.com/manuels", "followers_url": "https://api.github.com/users/manuels/followers", "following_url": "https://api.github.com/users/manuels/following{/other_user}", "gists_url": "https://api.github.com/users/manuels/gists{/gist_id}", "starred_url": "https://api.github.com/users/manuels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manuels/subscriptions", "organizations_url": "https://api.github.com/users/manuels/orgs", "repos_url": "https://api.github.com/users/manuels/repos", "events_url": "https://api.github.com/users/manuels/events{/privacy}", "received_events_url": "https://api.github.com/users/manuels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-11T16:06:30Z", "updated_at": "2020-04-11T16:49:38Z", "closed_at": "2020-04-11T16:49:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you use traits error messages can become very long and complicated to read.\r\n\r\nConsider this error message:\r\n\r\n```rust\r\nerror[E0599]: no method named `into_stream` found for type `futures_util::stream::stream::forward::Forward<impl futures_core::stream::TryStream, futures_util::sink::map_err::SinkMapErr<futures_util::sink::fanout::Fanout<futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>, futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>>, [closure@src/main.rs:218:47: 218:101]>>` in the current scope\r\n   --> src/main.rs:220:19\r\n    |\r\n220 |     let foo = foo.into_stream();\r\n    |                   ^^^^^^^^^^^ method not found in `futures_util::stream::stream::forward::Forward<impl futures_core::stream::TryStream, futures_util::sink::map_err::SinkMapErr<futures_util::sink::fanout::Fanout<futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>, futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>>, [closure@src/main.rs:218:47: 218:101]>>`\r\n    |\r\n    = note: the method `into_stream` exists but the following trait bounds were not satisfied:\r\n            `&futures_util::stream::stream::forward::Forward<impl futures_core::stream::TryStream, futures_util::sink::map_err::SinkMapErr<futures_util::sink::fanout::Fanout<futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>, futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>>, [closure@src/main.rs:218:47: 218:101]>> : futures_util::future::future::FutureExt`\r\n            `&futures_util::stream::stream::forward::Forward<impl futures_core::stream::TryStream, futures_util::sink::map_err::SinkMapErr<futures_util::sink::fanout::Fanout<futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>, futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>>, [closure@src/main.rs:218:47: 218:101]>> : futures_util::stream::try_stream::TryStreamExt`\r\n            `&mut futures_util::stream::stream::forward::Forward<impl futures_core::stream::TryStream, futures_util::sink::map_err::SinkMapErr<futures_util::sink::fanout::Fanout<futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>, futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>>, [closure@src/main.rs:218:47: 218:101]>> : futures_util::future::future::FutureExt`\r\n            `&mut futures_util::stream::stream::forward::Forward<impl futures_core::stream::TryStream, futures_util::sink::map_err::SinkMapErr<futures_util::sink::fanout::Fanout<futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>, futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>>, [closure@src/main.rs:218:47: 218:101]>> : futures_util::stream::try_stream::TryStreamExt`\r\n            `futures_util::stream::stream::forward::Forward<impl futures_core::stream::TryStream, futures_util::sink::map_err::SinkMapErr<futures_util::sink::fanout::Fanout<futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>, futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>>, [closure@src/main.rs:218:47: 218:101]>> : futures_util::future::future::FutureExt`\r\n            `futures_util::stream::stream::forward::Forward<impl futures_core::stream::TryStream, futures_util::sink::map_err::SinkMapErr<futures_util::sink::fanout::Fanout<futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>, futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>>, [closure@src/main.rs:218:47: 218:101]>> : futures_util::stream::try_stream::TryStreamExt`\r\n```\r\n\r\nEspecially people new to rust can be overwhelmed by all the information and a lot of information here is redundant because the type of `foo` is repeated over and over again. pas_mtts on reddit came up with the idea to replace the actual type of `foo` (`futures_util::stream::stream::forward::Forward<impl futures_core::stream::TryStream, futures_util::sink::map_err::SinkMapErr<futures_util::sink::fanout::Fanout<futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>, futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>>, [closure@src/main.rs:218:47: 218:101]>>\r\n`) with `typeof(foo)`, so the error message would look like this:\r\n\r\n```rust\r\nerror[E0599]: typeof(foo) = futures_util::stream::stream::forward::Forward<impl futures_core::stream::TryStream, futures_util::sink::map_err::SinkMapErr<futures_util::sink::fanout::Fanout<futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>, futures_channel::mpsc::UnboundedSender<(bytes::bytes::Bytes, std::net::SocketAddr)>>, [closure@src/main.rs:218:47: 218:101]>>\r\n\r\nno method named `into_stream` found for type `typeof(foo)` in the current scope\r\n   --> src/main.rs:220:19\r\n    |\r\n220 |     let foo = foo.into_stream();\r\n    |                   ^^^^^^^^^^^ method not found in `typeof(foo)`\r\n    |\r\n    = note: the method `into_stream` exists but the following trait bounds were not satisfied:\r\n            `&typeof(foo) : futures_util::future::future::FutureExt`\r\n            `&typeof(foo) : futures_util::stream::try_stream::TryStreamExt`\r\n            `&mut typeof(foo) : futures_util::future::future::FutureExt`\r\n            `&mut typeof(foo) : futures_util::stream::try_stream::TryStreamExt`\r\n            `typeof(foo) : futures_util::future::future::FutureExt`\r\n            `typeof(foo) : futures_util::stream::try_stream::TryStreamExt`\r\n```\r\n\r\nwhich is much nicer to read.\r\nIt would be great if rust would report errors like this and would make it much easier to read error messages in the console.\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.42.0 (b8cedc004 2020-03-09)\r\nbinary: rustc\r\ncommit-hash: b8cedc00407a4c56a3bda1ed605c6fc166655447\r\ncommit-date: 2020-03-09\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.42.0\r\nLLVM version: 9.0\r\n```\r\n\r\n", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71032/timeline", "performed_via_github_app": null, "state_reason": "completed"}