{"url": "https://api.github.com/repos/rust-lang/rust/issues/55724", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55724/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55724/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55724/events", "html_url": "https://github.com/rust-lang/rust/issues/55724", "id": 377956201, "node_id": "MDU6SXNzdWUzNzc5NTYyMDE=", "number": 55724, "title": "Tracking issue for alloc_layout_extra", "user": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 129836139, "node_id": "MDU6TGFiZWwxMjk4MzYxMzk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-allocators", "name": "A-allocators", "color": "f7e101", "default": false, "description": "Area: Custom and system allocators"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 2240305001, "node_id": "MDU6TGFiZWwyMjQwMzA1MDAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/Libs-Tracked", "name": "Libs-Tracked", "color": "d4c5f9", "default": false, "description": "Libs issues that are tracked on the team's project board."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 33, "created_at": "2018-11-06T17:32:42Z", "updated_at": "2023-01-25T18:07:13Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This issue tracks additional methods on `Layout` which allow layouts to be composed to build complex layouts.\r\n\r\n```rust\r\npub fn align_to(&self, align: usize) -> Result<Layout, LayoutErr>;\r\npub fn pad_to_align(&self) -> Result<Layout, LayoutErr>;\r\npub fn padding_needed_for(&self, align: usize) -> usize;\r\npub fn repeat(&self, n: usize) -> Result<(Layout, usize), LayoutErr>;\r\npub fn extend(&self, next: Layout) -> Result<(Layout, usize), LayoutErr>;\r\npub fn repeat_packed(&self, n: usize) -> Result<Layout, LayoutErr>;\r\npub fn extend_packed(&self, next: Layout) -> Result<Layout, LayoutErr>;\r\npub fn array<T>(n: usize) -> Result<Layout, LayoutErr>;\r\npub fn dangling(&self) -> NonNull<u8>;\r\n```\r\n\r\nThe main use case is to construct complex allocation layouts for use with the stable global allocator API. For example:\r\n- [`std::collections::HashMap`](https://github.com/rust-lang/rust/blob/master/src/libstd/collections/hash/table.rs#L657)\r\n- [`hashbrown`](https://github.com/Amanieu/hashbrown/blob/2f2af1d1e9bea9d7315b5a85d9cf5b5514f532fe/src/raw/mod.rs#L143)\r\n- Not exactly an example of use, but it would be very useful in [`crossbeam-skiplist`](https://github.com/crossbeam-rs/crossbeam-skiplist/blob/master/src/base.rs#L99)\r\n\r\nOne concern is that not many of these methods have been extensively used in practice. In the examples given above, only `extend`, `array` and `align_to` are used, and I expect that these will be the most used in practice. `padding_needed_for` is used in the implementation of `Rc::from_raw` and `Arc::from_raw`, but in theory could be superseded by the offset returned by `extend`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55724/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55724/timeline", "performed_via_github_app": null, "state_reason": null}