{"url": "https://api.github.com/repos/rust-lang/rust/issues/67117", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67117/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67117/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67117/events", "html_url": "https://github.com/rust-lang/rust/issues/67117", "id": 534361769, "node_id": "MDU6SXNzdWU1MzQzNjE3Njk=", "number": 67117, "title": "Print better auto-trait diagnostics when opaque return type is involved", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-07T06:21:06Z", "updated_at": "2020-01-10T05:52:27Z", "closed_at": "2020-01-10T05:52:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following code: [(playground)](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=705480eeff305d6e05fca4998fc1fab2)\r\n\r\n```rust\r\nfn is_send<T: Send>(_val: T) {}\r\nfn bar() -> impl Copy { 0 as *const () }\r\n\r\nfn main() {\r\n    is_send(bar());\r\n}\r\n```\r\n\r\ngives the following error message:\r\n\r\n```\r\nerror[E0277]: `*const ()` cannot be sent between threads safely\r\n --> src/main.rs:5:5\r\n  |\r\n1 | fn is_send<T: Send>(_val: T) {}\r\n  |    -------    ---- required by this bound in `is_send`\r\n...\r\n5 |     is_send(bar());\r\n  |     ^^^^^^^ `*const ()` cannot be sent between threads safely\r\n  |\r\n  = help: within `impl std::marker::Copy`, the trait `std::marker::Send` is not implemented for `*const ()`\r\n  = note: required because it appears within the type `impl std::marker::Copy`\r\n```\r\n\r\nThere are a couple of problems here:\r\n1. We refer to `impl std::marker::Copy` within mentioning where it's defined. Since auto traits 'leak through' `impl trait`, it would probably be a good idea to reference the function where it's defined to help disambiguate between multiple distinct `impl SomeTrait` types.\r\n2. We use the generic 'within' terminology, which doesn't really make that make much sense when referring to `impl trait` types. Since we're already exposing the underlying type in the error message, we might want to say something like:\r\n\r\n'note: the anonymous return type `impl Copy` of function `bar` (with underlying type `*const ()`) does not implement `std::marker::Send`.'", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67117/timeline", "performed_via_github_app": null, "state_reason": "completed"}