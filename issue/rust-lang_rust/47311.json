{"url": "https://api.github.com/repos/rust-lang/rust/issues/47311", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47311/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47311/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47311/events", "html_url": "https://github.com/rust-lang/rust/issues/47311", "id": 287318575, "node_id": "MDU6SXNzdWUyODczMTg1NzU=", "number": 47311, "title": "Allow proc macro to initialize a private field with a def_site value", "user": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 632573348, "node_id": "MDU6TGFiZWw2MzI1NzMzNDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros-2.0", "name": "A-macros-2.0", "color": "f7e101", "default": false, "description": "Area: declarative macros 2.0, https://github.com/rust-lang/rust/issues/39412"}], "state": "closed", "locked": false, "assignee": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-01-10T05:23:44Z", "updated_at": "2018-02-24T23:28:58Z", "closed_at": "2018-02-24T23:28:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In a struct initializer expression `S { k: v }` generated by a procedural macro where the field `k` is private, it seems *both* `k` and `v` need to be spanned with call_site in order for the generated code to compile. I believe only `k` should be required to be call_site, and `v` should be allowed to be def_site or anything else.\r\n\r\nThis currently blocks a correct implementation of derive(Deserialize).\r\n\r\n```rust\r\n#![feature(proc_macro)]\r\n\r\nextern crate mac;\r\n\r\nstruct S {\r\n    unit: (),\r\n}\r\n\r\nfn main() {\r\n    // Expands to `S { unit: () }`.\r\n    mac::init_field_unit!(S unit);\r\n}\r\n```\r\n\r\n```rust\r\n#![feature(proc_macro)]\r\n\r\nextern crate proc_macro;\r\nuse proc_macro::{TokenStream, TokenTree, TokenNode, Delimiter, Spacing, Span};\r\n\r\n#[proc_macro]\r\npub fn init_field_unit(input: TokenStream) -> TokenStream {\r\n    let mut iter = input.into_iter();\r\n    let struct_name = iter.next().unwrap();\r\n    let field_name = iter.next().unwrap();\r\n    assert!(iter.next().is_none());\r\n\r\n    // Expands to `$struct_name { $field_name: () }`.\r\n    vec![\r\n        struct_name,\r\n        TokenTree {\r\n            span: Span::call_site(),\r\n            kind: TokenNode::Group(Delimiter::Brace, vec![\r\n                field_name,\r\n                TokenTree {\r\n                    span: Span::call_site(),\r\n                    kind: TokenNode::Op(':', Spacing::Alone),\r\n                },\r\n                TokenTree {\r\n                    // Works if this is call_site, but in derive(Deserialize) I\r\n                    // need to be able to use def_site variables here.\r\n                    span: Span::def_site(),\r\n                    kind: TokenNode::Group(Delimiter::Parenthesis, TokenStream::empty()),\r\n                },\r\n            ].into_iter().collect()),\r\n        },\r\n    ].into_iter().collect()\r\n}\r\n```\r\n\r\n```\r\nerror[E0451]: field `unit` of struct `S` is private\r\n  --> src/main.rs:49:5\r\n   |\r\n49 |     mac::init_field_unit!(S unit);\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `unit` is private\r\n```\r\n\r\n@jseyfried ", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47311/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47311/timeline", "performed_via_github_app": null, "state_reason": "completed"}