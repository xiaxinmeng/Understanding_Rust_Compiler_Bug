{"url": "https://api.github.com/repos/rust-lang/rust/issues/27", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/27/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/27/events", "html_url": "https://github.com/rust-lang/rust/issues/27", "id": 228806, "node_id": "MDU6SXNzdWUyMjg4MDY=", "number": 27, "title": "proper CFI and dwarf engine to use it", "user": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2010-06-22T22:18:02Z", "updated_at": "2014-06-11T19:23:09Z", "closed_at": "2011-01-27T00:49:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently we're using a sort of 'shadow stack' approach wherein each frame\nself-identifies its metadata in a location easily found from ebp. This is not\noptimal, long term: to keep the metadata tractable, it means we're doing\nexpensive stuff like zeroing frames and slots all the time, and never reusing\nlexical scopes. Painful. We need to get to the point of emitting Dwarf CFI (or\nat worst, something similarly instruction-accurate) so we can determine\nliveness and layout of everything in a frame, given an (sp,pc) pair.\n\nOf course, the runtime also needs to learn how to reflect on this information\nwell enough to provide it to the unwinder. So this part is a long, slow\nprocess. Possibly this needs to be a tracking bug for several sub-bugs.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/27/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/27/timeline", "performed_via_github_app": null, "state_reason": "completed"}