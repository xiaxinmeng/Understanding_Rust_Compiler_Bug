{"url": "https://api.github.com/repos/rust-lang/rust/issues/51541", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51541/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51541/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51541/events", "html_url": "https://github.com/rust-lang/rust/issues/51541", "id": 332117781, "node_id": "MDU6SXNzdWUzMzIxMTc3ODE=", "number": 51541, "title": "Micro optimization idea: resue string buffer for FromIterator", "user": {"login": "Lucretiel", "id": 1823405, "node_id": "MDQ6VXNlcjE4MjM0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1823405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lucretiel", "html_url": "https://github.com/Lucretiel", "followers_url": "https://api.github.com/users/Lucretiel/followers", "following_url": "https://api.github.com/users/Lucretiel/following{/other_user}", "gists_url": "https://api.github.com/users/Lucretiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lucretiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lucretiel/subscriptions", "organizations_url": "https://api.github.com/users/Lucretiel/orgs", "repos_url": "https://api.github.com/users/Lucretiel/repos", "events_url": "https://api.github.com/users/Lucretiel/events{/privacy}", "received_events_url": "https://api.github.com/users/Lucretiel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-13T18:46:35Z", "updated_at": "2018-12-16T23:19:49Z", "closed_at": "2018-12-16T23:19:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/rust-lang/rust/blob/07c415c2154f29d6dce8da0154ef41c8a5497fbf/src/liballoc/string.rs#L1720-L1727\r\n\r\nBasically the idea is that, for `impl FromIterator<String> for String`, we reimplement it slightly so that newly returned string reuses and reallocates the buffer of the first string in the iterator. It would look something like this:\r\n\r\n```\r\nfn from_iter(iter: I) -> String {\r\n    match iter.next() {\r\n        None => String::new(),\r\n        Some(base) => { base.extend(iter); base }\r\n    }\r\n}\r\n```\r\n\r\nOf course, this might not be worth the added complexity\u2013 in particular, I'm not sure what the implications are for added branching\u2013 so I'm writing this issue to solicit any feedback before creating a PR.", "closed_by": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51541/timeline", "performed_via_github_app": null, "state_reason": "completed"}