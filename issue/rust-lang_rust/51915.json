{"url": "https://api.github.com/repos/rust-lang/rust/issues/51915", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51915/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51915/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51915/events", "html_url": "https://github.com/rust-lang/rust/issues/51915", "id": 337111534, "node_id": "MDU6SXNzdWUzMzcxMTE1MzQ=", "number": 51915, "title": "consider fixing common regression with expansion of 2-phase borrows", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 867465703, "node_id": "MDU6TGFiZWw4Njc0NjU3MDM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-complete", "name": "NLL-complete", "color": "f799ea", "default": false, "description": "Working towards the \"valid code works\" goal"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-06-29T19:27:36Z", "updated_at": "2018-12-19T16:24:26Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code works without NLL but not with NLL enabled: \r\n\r\nhttps://play.rust-lang.org/?gist=9b797f941b3aa419991e15fd5a2d07a0&version=nightly&mode=debug\r\n\r\n```rust\r\n//#![feature(nll)]\r\n\r\nstruct S {\r\n    a: &'static str,\r\n}\r\n\r\nfn f(_: &mut S, _: &str) {\r\n}\r\n\r\nfn main() {\r\n    let mut s = S {\r\n        a: \"a\",\r\n    };\r\n\r\n    f(&mut s, s.a);\r\n}\r\n```\r\n\r\nNLL is not *wrong* to reject this code. This is https://github.com/rust-lang/rust/issues/38899. However, it could plausibly be accepted if we expanded two-phase borrows *ever so slightly*... actually, I'm not sure about this *exact* source, or it least it wouldn't quite fit into what I had in mind.\r\n\r\nI had in mind an expansion for arguments of type `&mut`, basically, so that `foo(bar)`, if `bar` is an `&mut` that is being reborrowed, would reborrow using a 2-phase borrow.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51915/timeline", "performed_via_github_app": null, "state_reason": null}