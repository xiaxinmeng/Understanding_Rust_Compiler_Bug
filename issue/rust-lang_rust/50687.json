{"url": "https://api.github.com/repos/rust-lang/rust/issues/50687", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50687/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50687/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50687/events", "html_url": "https://github.com/rust-lang/rust/issues/50687", "id": 322519740, "node_id": "MDU6SXNzdWUzMjI1MTk3NDA=", "number": 50687, "title": "ICE when `tokio_reactor` is used and a `borrow()` call failed to resolve", "user": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-12T15:24:22Z", "updated_at": "2020-05-27T14:48:34Z", "closed_at": "2020-05-27T14:48:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(Non-minimized) Repro case:\r\n\r\n```rust\r\nextern crate tokio_reactor;\r\n\r\nuse std::borrow::Borrow;\r\n\r\nstruct S;\r\nstruct T;\r\n\r\nimpl Borrow<S> for T {\r\n    fn borrow(&self) -> &S {\r\n        &S\r\n    }\r\n}\r\n\r\nfn g(a: T) {\r\n    let _: () = <T as Borrow<_>>::borrow(&a);\r\n}\r\n```\r\n\r\nIt can correct fail with E0308 \"mismatched types\" if that `extern crate tokio_reactor;` line is removed.\r\n\r\n<details><summary>Crash log</summary>\r\n\r\n```\r\nerror: internal compiler error: librustc/traits/structural_impls.rs:180: impossible case reached\r\n\r\nthread 'main' panicked at 'Box<Any>', librustc_errors/lib.rs:554:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n   1: std::sys_common::backtrace::print\r\n   2: std::panicking::default_hook::{{closure}}\r\n   3: std::panicking::default_hook\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::session::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::session::opt_span_bug_fmt\r\n  13: rustc::session::bug_fmt\r\n  14: rustc::traits::structural_impls::<impl rustc::ty::context::Lift<'tcx> for rustc::traits::SelectionError<'a>>::lift_to_tcx\r\n  15: rustc::traits::select::SelectionContext::candidate_from_obligation\r\n  16: rustc::traits::select::SelectionContext::evaluate_stack\r\n  17: rustc::ty::context::tls::with_context\r\n  18: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  19: rustc::traits::select::SelectionContext::evaluate_predicate_recursively\r\n  20: rustc::traits::select::SelectionContext::evaluate_candidate\r\n  21: <&'a mut I as core::iter::iterator::Iterator>::next\r\n  22: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\n  23: rustc::traits::select::SelectionContext::candidate_from_obligation_no_cache\r\n  24: rustc::ty::context::tls::with_context\r\n  25: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  26: rustc::traits::select::SelectionContext::candidate_from_obligation\r\n  27: rustc::traits::select::SelectionContext::evaluate_stack\r\n  28: rustc::ty::context::tls::with_context\r\n  29: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  30: rustc::traits::select::SelectionContext::evaluate_predicate_recursively\r\n  31: rustc::traits::select::SelectionContext::evaluate_candidate\r\n  32: <&'a mut I as core::iter::iterator::Iterator>::next\r\n  33: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\n  34: rustc::traits::select::SelectionContext::candidate_from_obligation_no_cache\r\n  35: rustc::ty::context::tls::with_context\r\n  36: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  37: rustc::traits::select::SelectionContext::candidate_from_obligation\r\n  38: rustc::traits::select::SelectionContext::evaluate_stack\r\n  39: rustc::ty::context::tls::with_context\r\n  40: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  41: rustc::traits::select::SelectionContext::evaluate_predicate_recursively\r\n  42: rustc::traits::select::SelectionContext::evaluate_candidate\r\n  43: <&'a mut I as core::iter::iterator::Iterator>::next\r\n  44: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\n  45: rustc::traits::select::SelectionContext::candidate_from_obligation_no_cache\r\n  46: rustc::ty::context::tls::with_context\r\n  47: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  48: rustc::traits::select::SelectionContext::candidate_from_obligation\r\n  49: rustc::traits::select::SelectionContext::evaluate_stack\r\n  50: rustc::ty::context::tls::with_context\r\n  51: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  52: rustc::traits::select::SelectionContext::evaluate_predicate_recursively\r\n  53: rustc::traits::select::SelectionContext::evaluate_candidate\r\n  54: <&'a mut I as core::iter::iterator::Iterator>::next\r\n  55: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\n  56: rustc::traits::select::SelectionContext::candidate_from_obligation_no_cache\r\n  57: rustc::ty::context::tls::with_context\r\n  58: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  59: rustc::traits::select::SelectionContext::candidate_from_obligation\r\n  60: rustc::traits::select::SelectionContext::evaluate_stack\r\n  61: rustc::ty::context::tls::with_context\r\n  62: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  63: rustc::traits::select::SelectionContext::evaluate_predicate_recursively\r\n  64: rustc::traits::select::SelectionContext::evaluate_candidate\r\n  65: <&'a mut I as core::iter::iterator::Iterator>::next\r\n  66: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\n  67: rustc::traits::select::SelectionContext::candidate_from_obligation_no_cache\r\n  68: rustc::ty::context::tls::with_context\r\n  69: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  70: rustc::traits::select::SelectionContext::candidate_from_obligation\r\n  71: rustc::traits::select::SelectionContext::evaluate_stack\r\n  72: rustc::ty::context::tls::with_context\r\n  73: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  74: rustc::traits::select::SelectionContext::evaluate_predicate_recursively\r\n  75: rustc::traits::select::SelectionContext::evaluate_candidate\r\n  76: <&'a mut I as core::iter::iterator::Iterator>::next\r\n  77: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\n  78: rustc::traits::select::SelectionContext::candidate_from_obligation_no_cache\r\n  79: rustc::ty::context::tls::with_context\r\n  80: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  81: rustc::traits::select::SelectionContext::candidate_from_obligation\r\n  82: rustc::traits::select::SelectionContext::evaluate_stack\r\n  83: rustc::ty::context::tls::with_context\r\n  84: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  85: rustc::traits::select::SelectionContext::evaluate_predicate_recursively\r\n  86: rustc::traits::select::SelectionContext::evaluate_candidate\r\n  87: <&'a mut I as core::iter::iterator::Iterator>::next\r\n  88: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\n  89: rustc::traits::select::SelectionContext::candidate_from_obligation_no_cache\r\n  90: rustc::ty::context::tls::with_context\r\n  91: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  92: rustc::traits::select::SelectionContext::candidate_from_obligation\r\n  93: rustc::traits::select::SelectionContext::evaluate_stack\r\n  94: rustc::ty::context::tls::with_context\r\n  95: rustc::dep_graph::graph::DepGraph::with_anon_task\r\n  96: rustc::traits::select::SelectionContext::evaluate_predicate_recursively\r\n  97: rustc::traits::select::SelectionContext::evaluate_candidate\r\n  98: <&'a mut I as core::iter::iterator::Iterator>::next\r\n  99: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\nquery stack during panic:\r\n#0 [evaluate_obligation] evaluating trait selection obligation `&'_ _: std::io::Write`\r\n#1 [typeck_tables_of] processing `g`\r\n#2 [typeck_item_bodies] type-checking all item bodies\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.27.0-nightly (acd3871ba 2018-05-10) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n```\r\n\r\n</details>\r\n\r\nThe ICE is repro with 1.27-beta and nightly. \r\n\r\n<details><summary>On 1.26-stable, this will produce an infinite recursion instead.</summary>\r\n\r\n```\r\nerror[E0275]: overflow evaluating the requirement `_: std::marker::Sized`\r\n  --> src/main.rs:15:17\r\n   |\r\n15 |     let _: () = <T as Borrow<_>>::borrow(&a);\r\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = help: consider adding a `#![recursion_limit=\"32\"]` attribute to your crate\r\n   = note: required because of the requirements on the impl of `std::io::Write` for `&tokio_reactor::PollEvented<_>`\r\n   = note: required because of the requirements on the impl of `std::io::Write` for `&tokio_reactor::PollEvented<tokio_reactor::PollEvented<_>>`\r\n   = note: required because of the requirements on the impl of `std::io::Write` for `&tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<_>>>`\r\n   = note: required because of the requirements on the impl of `std::io::Write` for `&tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<_>>>>`\r\n   = note: required because of the requirements on the impl of `std::io::Write` for `&tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<_>>>>>`\r\n   = note: required because of the requirements on the impl of `std::io::Write` for `&tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<_>>>>>>`\r\n   = note: required because of the requirements on the impl of `std::io::Write` for `&tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<_>>>>>>>`\r\n   = note: required because of the requirements on the impl of `std::io::Write` for `&tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<_>>>>>>>>`\r\n   = note: required because of the requirements on the impl of `std::io::Write` for `&tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<_>>>>>>>>>`\r\n   = note: required because of the requirements on the impl of `std::io::Write` for `&tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<_>>>>>>>>>>`\r\n   = note: required because of the requirements on the impl of `std::io::Write` for `&tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<_>>>>>>>>>>>`\r\n   = note: required because of the requirements on the impl of `std::io::Write` for `&tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<_>>>>>>>>>>>>`\r\n   = note: required because of the requirements on the impl of `std::io::Write` for `&tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<_>>>>>>>>>>>>>`\r\n   = note: required because of the requirements on the impl of `std::io::Write` for `&tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<_>>>>>>>>>>>>>>`\r\n   = note: required because of the requirements on the impl of `std::io::Write` for `&tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<_>>>>>>>>>>>>>>>`\r\n   = note: required because of the requirements on the impl of `std::io::Write` for `&tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<tokio_reactor::PollEvented<_>>>>>>>>>>>>>>>>`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0275`.\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</details>\r\n\r\nMaybe the same as #50439.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50687/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50687/timeline", "performed_via_github_app": null, "state_reason": "completed"}