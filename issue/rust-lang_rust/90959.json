{"url": "https://api.github.com/repos/rust-lang/rust/issues/90959", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90959/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90959/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90959/events", "html_url": "https://github.com/rust-lang/rust/issues/90959", "id": 1055277938, "node_id": "I_kwDOAAsO6M4-5kNy", "number": 90959, "title": "Macos TLS not giving the struct requested alignment?", "user": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123111, "node_id": "MDU6TGFiZWwxMjMxMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-macos", "name": "O-macos", "color": "6e6ec0", "default": false, "description": "Operating system: macOS"}, {"id": 632886930, "node_id": "MDU6TGFiZWw2MzI4ODY5MzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-thread-locals", "name": "A-thread-locals", "color": "f7e101", "default": false, "description": "Area: Thread local storage (TLS)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-11-16T20:11:57Z", "updated_at": "2022-01-21T23:11:51Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I've only gotten bug reports from other users, and seen this as a failure in CI - only on macos. [(Original matrixmultiply bug report)](https://github.com/bluss/matrixmultiply/issues/55). Haven't tested on the actual platform myself.\r\n\r\nWe setup a buffer in a struct with 32-alignment, put it in thread local storage.\r\nAnd before doing the critical stuff, there's a debug assertion that ensures the pointer has the required 32-alignment;\r\nthis debug assertion fails about half the time on macos, apparently. (So the struct is probably 16-aligned in reality).\r\n\r\n\r\n```rust\r\nuse std::cell::UnsafeCell;\r\n\r\n// set up buffer for masked (redirected output of) kernel\r\nconst KERNEL_MAX_SIZE: usize = 8 * 8 * 4;\r\nconst KERNEL_MAX_ALIGN: usize = 32;\r\n\r\n#[repr(align(32))]\r\nstruct MaskBuffer {\r\n    buffer: [u8; KERNEL_MAX_SIZE],\r\n}\r\n\r\nthread_local! {\r\n    static MASK_BUF: UnsafeCell<MaskBuffer> =\r\n        UnsafeCell::new(MaskBuffer { buffer: [0; KERNEL_MAX_SIZE] });\r\n}\r\n```\r\n\r\n\r\nI expected the buffer to be 32-byte aligned after this.\r\n\r\nThe alignment is tested with the following code:\r\n\r\n```rust\r\nlet ptr_outer = MASK_BUF.with(|buf| buf as *const _);\r\nlet ptr = MASK_BUF.with(|buf| (*buf.get()).buffer.as_mut_ptr());\r\n\r\ndebug_assert_eq!(ptr_outer as usize % KERNEL_MAX_ALIGN, 0, \"thread local's alignment failed\");\r\ndebug_assert_eq!(ptr as usize % KERNEL_MAX_ALIGN, 0, \"thread local->buffer align\");\r\n```\r\n\r\n(Could it be debated here - can we expect `&MaskBuffer.buffer` to be 32-byte aligned, or just `&MaskBuffer` itself? Anyway, to be sure, the CI reproducer tests the alignment of `&MaskBuffer` itself, that's `ptr_outer` (well, `&UnsafeCell<MaskBuffer>`, but should be same thing?).\r\n\r\n\r\nThe problem is reproduced in matrixmultiply's CI here: https://github.com/bluss/matrixmultiply/pull/60 in [this macos build](https://github.com/bluss/matrixmultiply/runs/4200502196?check_suite_focus=true). The build log shows the alignment debug assertion tripping. This is not an active bug in that crate, it's been worked around.\r\n\r\nI'm not sure what's happening. All the alignments [look correct when I try to make a simple reproducer](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=c0ba2f4528951c3ce3cb59bb648b280c) and read the alignments in the emitted llvm-ir file (target `x86_64-apple-darwin`).\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90959/timeline", "performed_via_github_app": null, "state_reason": null}