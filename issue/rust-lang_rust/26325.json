{"url": "https://api.github.com/repos/rust-lang/rust/issues/26325", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/26325/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/26325/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/26325/events", "html_url": "https://github.com/rust-lang/rust/issues/26325", "id": 88541447, "node_id": "MDU6SXNzdWU4ODU0MTQ0Nw==", "number": 26325, "title": "Where clauses increase compilation time and memory use dramatically.", "user": {"login": "paholg", "id": 4908217, "node_id": "MDQ6VXNlcjQ5MDgyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4908217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paholg", "html_url": "https://github.com/paholg", "followers_url": "https://api.github.com/users/paholg/followers", "following_url": "https://api.github.com/users/paholg/following{/other_user}", "gists_url": "https://api.github.com/users/paholg/gists{/gist_id}", "starred_url": "https://api.github.com/users/paholg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paholg/subscriptions", "organizations_url": "https://api.github.com/users/paholg/orgs", "repos_url": "https://api.github.com/users/paholg/repos", "events_url": "https://api.github.com/users/paholg/events{/privacy}", "received_events_url": "https://api.github.com/users/paholg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-06-15T21:07:19Z", "updated_at": "2017-03-24T01:07:22Z", "closed_at": "2017-03-24T01:07:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "When implementing a trait with a member function (vs. one without), the compiler requires more information and takes much longer to compile.\n\nConsider the following two implementations of addition over Peano numbers as types:\n\nFirst, using `std::ops::Add`: http://is.gd/7tO1cK\n\nSecond, using a custom trait for addition, `AddPeano`, that has only an associated type and no member functions: http://is.gd/byhqSn\n\nThe key difference is here:\n\nUsing `AddPeano`,\n\n``` rust\nimpl<Lhs: Peano + AddPeano<Rhs>, Rhs: Peano> AddPeano<Rhs> for Succ<Lhs> {\n    type Output = Succ<<Lhs as AddPeano<Rhs>>::Output>;\n}\n```\n\nUsing `std::ops::Add`,\n\n``` rust\nimpl<Lhs: Peano + Add<Rhs>, Rhs: Peano> Add<Rhs> for Succ<Lhs> where <Lhs as Add<Rhs>>::Output: Peano {\n    type Output = Succ<<Lhs as Add<Rhs>>::Output>;\n    fn add(self, rhs: Rhs) -> Self::Output { unreachable!() }\n}\n```\n\nWithout the `where` clause, the compiler gives the error\n\n```\nerror: the trait `Peano` is not implemented for the type `<Lhs as core::ops::Add<Rhs>>::Output`\n```\n\nIn `main()` for both of those examples, the `Add` traits are used for successive doubling until the number `32` is reached. Using `AddPeano`, playpen finishes in moments, whereas using `Add` it triggers playpen's timeout and fails to compile.\n\nI have had similar results locally ... even using up 8 GB of ram in the case of the `std::ops` version while the version without a function would compile virtually instantly.\n", "closed_by": {"login": "paholg", "id": 4908217, "node_id": "MDQ6VXNlcjQ5MDgyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4908217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paholg", "html_url": "https://github.com/paholg", "followers_url": "https://api.github.com/users/paholg/followers", "following_url": "https://api.github.com/users/paholg/following{/other_user}", "gists_url": "https://api.github.com/users/paholg/gists{/gist_id}", "starred_url": "https://api.github.com/users/paholg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paholg/subscriptions", "organizations_url": "https://api.github.com/users/paholg/orgs", "repos_url": "https://api.github.com/users/paholg/repos", "events_url": "https://api.github.com/users/paholg/events{/privacy}", "received_events_url": "https://api.github.com/users/paholg/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/26325/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/26325/timeline", "performed_via_github_app": null, "state_reason": "completed"}