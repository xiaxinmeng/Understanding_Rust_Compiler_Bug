{"url": "https://api.github.com/repos/rust-lang/rust/issues/67554", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67554/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67554/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67554/events", "html_url": "https://github.com/rust-lang/rust/issues/67554", "id": 541678679, "node_id": "MDU6SXNzdWU1NDE2Nzg2Nzk=", "number": 67554, "title": "Double dereference in accessing element in slice in no_std", "user": {"login": "Stuart0l", "id": 30303108, "node_id": "MDQ6VXNlcjMwMzAzMTA4", "avatar_url": "https://avatars.githubusercontent.com/u/30303108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stuart0l", "html_url": "https://github.com/Stuart0l", "followers_url": "https://api.github.com/users/Stuart0l/followers", "following_url": "https://api.github.com/users/Stuart0l/following{/other_user}", "gists_url": "https://api.github.com/users/Stuart0l/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stuart0l/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stuart0l/subscriptions", "organizations_url": "https://api.github.com/users/Stuart0l/orgs", "repos_url": "https://api.github.com/users/Stuart0l/repos", "events_url": "https://api.github.com/users/Stuart0l/events{/privacy}", "received_events_url": "https://api.github.com/users/Stuart0l/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-23T10:02:25Z", "updated_at": "2019-12-23T10:33:12Z", "closed_at": "2019-12-23T10:33:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have tried this code in a no_std environment. I emulate this code on QEMU, for full code please check my [repo](https://github.com/Stuart0l/Small-OS-in-Rust/tree/dev) \r\n```rust\r\n#![no_std]\r\n#![no_main]\r\n\r\nuse core::panic::PanicInfo;\r\n\r\n#[no_mangle]\r\npub extern fn _start()\r\n{\r\n\tlet hello_b = b\"hello world!\";\r\n\tlet test = hello_b[3];\r\n\tassert_eq!(b'l', test);\r\n}\r\n\r\n#[panic_handler]\r\nfn panic(_info: &PanicInfo) -> ! {\r\n\tloop {}\r\n}\r\n```\r\nThe assertion should be true. However, it was not. Then I disassemble the code with objdump\r\nthis is the asm in .rodata section:\r\n```asm\r\n0000000000200190 <anon.27b77b85a5240b792f9899aeda930e78.0.llvm.882325101410209128-0x52>:\r\n  200190:\t68 65 6c 6c 6f       \t# 'h','e','l','l','o'\r\n  200195:\t20 77 6f             \t# ' ','w','o'\r\n  200198:\t72 6c                \t# 'r','l' \r\n  20019a:\t64 21 6c 61 73       \t# 'd','!','l',...\r\n```\r\nthis is the asm code in .text section:\r\n```asm\r\npub extern \"C\" fn _start()\r\n  2011a0:\t48 81 ec e8 00 00 00 \tsub    $0xe8,%rsp\r\n{\r\n\tlet hello_b = b\"hello world!\";\r\n  2011a7:\t48 8d 05 e2 ef ff ff \tlea    -0x101e(%rip),%rax       # 200190 <anon.27b77b85a5240b792f9899aeda930e78.0.llvm.5714236084045856230-0x52>\r\n  2011ae:\t48 89 44 24 30       \tmov    %rax,0x30(%rsp)\r\n\tlet test = hello_b[3];\r\n  2011b3:\t48 8b 44 24 30       \tmov    0x30(%rsp),%rax\t\t# %rax is the start address of hello_b\r\n  2011b8:\t8a 48 03             \tmov    0x3(%rax),%cl\t\t# load hello_b[3] into %cl\r\n  2011bb:\t88 4c 24 3f          \tmov    %cl,0x3f(%rsp)\t\t# store hello_b[3] in 0x3f(%rsp)\r\n\tassert_eq!(b'l', test);\r\n  2011bf:\t48 8d 05 d6 ef ff ff \tlea    -0x102a(%rip),%rax       # 20019c <anon.27b77b85a5240b792f9899aeda930e78.0.llvm.5714236084045856230-0x46>\r\n\t\t\t\t\t\t\t\t\t# %rax is the address of b'l'\r\n  2011c6:\t48 89 44 24 40       \tmov    %rax,0x40(%rsp)\t\t# store address of b'l' in 0x40(%rsp)\r\n  2011cb:\t48 8d 44 24 3f       \tlea    0x3f(%rsp),%rax\t\t# load hello_b[3] into %rax\r\n  2011d0:\t48 89 44 24 48       \tmov    %rax,0x48(%rsp)\t\t# store hello_b[3] in 0x48(%rsp)\r\n  2011d5:\t48 8b 44 24 40       \tmov    0x40(%rsp),%rax\t\t# load address of b'l'into %rax\r\n  2011da:\t48 89 44 24 50       \tmov    %rax,0x50(%rsp)\t\t# store address of b'l' in 0x50(%rsp)\r\n  2011df:\t48 8b 44 24 48       \tmov    0x48(%rsp),%rax\t\t# load hello_b[3] into %rax\r\n  2011e4:\t48 89 44 24 58       \tmov    %rax,0x58(%rsp)\t\t# store hello_b[3] in 0x58(%rsp)\r\n  2011e9:\t48 8b 44 24 50       \tmov    0x50(%rsp),%rax\t\t# load address of b'l'into %rax\r\n  2011ee:\t8a 08                \tmov    (%rax),%cl\t\t# load b'l' into %cl\r\n  2011f0:\t48 8b 44 24 58       \tmov    0x58(%rsp),%rax\t\t# load hello_b[3] into %rax\r\n  2011f5:\t3a 08                \tcmp    (%rax),%cl\t\t# load from address %rax, double dereference!!!\r\n  2011f7:\t0f 94 c1             \tsete   %cl\r\n  2011fa:\t80 f1 ff             \txor    $0xff,%cl\r\n  2011fd:\tf6 c1 01             \ttest   $0x1,%cl\r\n  201200:\t75 08                \tjne    20120a <_start+0x6a>\r\n}\r\n```\r\nI found there is a double dereference at 0x2011f5, which should be ```cmp %rax, %cl```.\r\nThe bin is compiled for this target using cargo xbuild:\r\n```json\r\n// target.json\r\n{\r\n\t\"llvm-target\": \"x86_64-unknown-linux-gnu\",\r\n\t\"data-layout\": \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\",\r\n\t\"arch\": \"x86_64\",\r\n\t\"target-endian\": \"little\",\r\n\t\"target-pointer-width\": \"64\",\r\n\t\"target-c-int-width\": \"32\",\r\n\t\"os\": \"none\",\r\n\t\"executables\": true,\r\n\t\"linker-flavor\": \"ld.lld\",\r\n\t\"linker\": \"rust-lld\",\r\n\t\"panic-strategy\": \"abort\",\r\n\t\"disable-redzone\": true,\r\n\t\"features\": \"-mmx,-sse,+soft-float\"\r\n}\r\n```\r\n##meta\r\nrustc 1.42.0-nightly (9b98af84c 2019-12-22)\r\nbinary: rustc\r\ncommit-hash: 9b98af84c4aa66392236fff59c86da2130d46d46\r\ncommit-date: 2019-12-22\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.42.0-nightly\r\nLLVM version: 9.0", "closed_by": {"login": "Stuart0l", "id": 30303108, "node_id": "MDQ6VXNlcjMwMzAzMTA4", "avatar_url": "https://avatars.githubusercontent.com/u/30303108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stuart0l", "html_url": "https://github.com/Stuart0l", "followers_url": "https://api.github.com/users/Stuart0l/followers", "following_url": "https://api.github.com/users/Stuart0l/following{/other_user}", "gists_url": "https://api.github.com/users/Stuart0l/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stuart0l/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stuart0l/subscriptions", "organizations_url": "https://api.github.com/users/Stuart0l/orgs", "repos_url": "https://api.github.com/users/Stuart0l/repos", "events_url": "https://api.github.com/users/Stuart0l/events{/privacy}", "received_events_url": "https://api.github.com/users/Stuart0l/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67554/timeline", "performed_via_github_app": null, "state_reason": "completed"}