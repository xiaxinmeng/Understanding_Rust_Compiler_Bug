{"url": "https://api.github.com/repos/rust-lang/rust/issues/94874", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94874/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94874/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94874/events", "html_url": "https://github.com/rust-lang/rust/issues/94874", "id": 1167142677, "node_id": "I_kwDOAAsO6M5FkS8V", "number": 94874, "title": "bootstrap: CARGO_TARGET_$TARGET_RUSTFLAGS is appended to RUSTFLAGS", "user": {"login": "jonhoo", "id": 176295, "node_id": "MDQ6VXNlcjE3NjI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/176295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonhoo", "html_url": "https://github.com/jonhoo", "followers_url": "https://api.github.com/users/jonhoo/followers", "following_url": "https://api.github.com/users/jonhoo/following{/other_user}", "gists_url": "https://api.github.com/users/jonhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonhoo/subscriptions", "organizations_url": "https://api.github.com/users/jonhoo/orgs", "repos_url": "https://api.github.com/users/jonhoo/repos", "events_url": "https://api.github.com/users/jonhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonhoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-03-12T01:56:55Z", "updated_at": "2023-04-27T03:47:34Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the bootstrap build, we respect `CARGO_TARGET_$TARGET_RUSTFLAGS` so that users can set target-specific rustflags if they wish. Unfortunately, the semantics of `CARGO_TARGET_$TARGET_RUSTFLAGS` in bootstrap do not match those of Cargo. In Cargo, `CARGO_TARGET_$TARGET_RUSTFLAGS` are equivalent to setting `target.$target.rustflags`, and it is _overridden_ by the `RUSTFLAGS` environment variable. Whereas what bootstrap currently does is concatenate them:\r\n\r\nhttps://github.com/rust-lang/rust/blob/2c6a29af35a81e20f8af4c32bf1b55c59b89eccd/src/bootstrap/builder.rs#L1802-L1807\r\n\r\nNow, bootstrap is in a slightly weird position where it _always_ sets `RUSTFLAGS`, so the \"usual\" rules don't really make sense. Instead, the intention is probably to allow users to set a \"general\" set of flags for `rustc` (through `RUSTFLAGS`) more akin to `build.rustflags` and then _override_ them for specific targets if desired. But unfortunately that doesn't match today's semantics either since the two environment variables are simply merged.\r\n\r\nThe big downside of having them always merge is that it makes it much more difficult to deal with targets that need _fewer_ flags than the \"general\" set. For example, I have to set `-Clink-arg=--gcc-toolchain=...` in `RUSTFLAGS`. But when trying to build for Android targets that particular GCC toolchain won't work. So, I need to \"reset\" rustflags to _not_ include the general set from `RUSTFLAGS` for those targets. But today, I have no way of doing that.\r\n\r\nNow, in theory, I could just _not_ set `RUSTFLAGS` and all would be well. But unfortunately that won't work _either_ because `RUSTFLAGS` is the only environment variable that can be set to pass flags to `rustc` for building `rustbuild` itself (see, for example, https://github.com/rust-lang/rust/issues/94234). And since in my environment `--gcc-toolchain=` is a _required_ argument to the linker, I'm stuck between a rock and a hard place \u2014\u00a0either I set `RUSTFLAGS` and my Android builds fail, or I don't set it and the `rustbuild` build fails.\r\n\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.59.0 (9d1b2106e 2022-02-23)\r\nbinary: rustc\r\ncommit-hash: 9d1b2106e23b1abd32fce1f17267604a5102f57a\r\ncommit-date: 2022-02-23\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.59.0\r\nLLVM version: 13.0.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94874/timeline", "performed_via_github_app": null, "state_reason": null}