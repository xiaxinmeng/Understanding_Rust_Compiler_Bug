{"url": "https://api.github.com/repos/rust-lang/rust/issues/3849", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/3849/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/3849/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/3849/events", "html_url": "https://github.com/rust-lang/rust/issues/3849", "id": 7817816, "node_id": "MDU6SXNzdWU3ODE3ODE2", "number": 3849, "title": "Allow borrowing a whole vec of pointers", "user": {"login": "jruderman", "id": 692547, "node_id": "MDQ6VXNlcjY5MjU0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/692547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jruderman", "html_url": "https://github.com/jruderman", "followers_url": "https://api.github.com/users/jruderman/followers", "following_url": "https://api.github.com/users/jruderman/following{/other_user}", "gists_url": "https://api.github.com/users/jruderman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jruderman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jruderman/subscriptions", "organizations_url": "https://api.github.com/users/jruderman/orgs", "repos_url": "https://api.github.com/users/jruderman/repos", "events_url": "https://api.github.com/users/jruderman/events{/privacy}", "received_events_url": "https://api.github.com/users/jruderman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234876, "node_id": "MDU6TGFiZWwyMzQ4NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-hard", "name": "E-hard", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Hard / a lot"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2012-10-24T04:32:43Z", "updated_at": "2013-01-16T13:36:38Z", "closed_at": "2013-01-10T21:39:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Most library functions can take `&` pointers, which is awesome.  But library functions that take a vec of pointers have to decide how those pointers will be allocated, limiting their flexibility.\n\nThe motivating example is `str::concat`.  It is a pure function that takes `&[~str]` and creates a new string with the concatenation of the input strings.  It seems to me that it would be safe for it to take `&[&str]` instead.  (The slice is constant, and the callee is pure, so the pointers should remain valid.)  But currently, that prevents a vec of `~str`s from being passed.\n\n(For the special case of strings, there's the slight complication that `sys::size_of::<&static/str>()` is larger than `sys::size_of::<~str>()`...)\n\n```\nuse str;\n\n/// Concatenate a vector of strings\npure fn my_concat(v: &[&str]) -> ~str {\n    let mut s: ~str = ~\"\";\n    for vec::each(v) |ss| {\n        unsafe { str::push_str(&mut s, *ss) };\n    }\n    move s\n}\n\npure fn my_sum(v: &[&int]) -> int {\n    let mut sum = 0;\n    for vec::each(v) |summand| {\n        sum += **summand;\n    }\n    sum\n}\n\nfn main()\n{\n    // These are allowed\n    assert my_concat([\"1\", \"A\"]) == ~\"1A\";\n    assert my_sum([&42, &13]) == 55;\n\n    // These are not allowed. Why not?\n    assert my_concat([~\"1\", ~\"A\"]) == ~\"1A\";\n    assert my_concat([@\"1\", @\"A\"]) == ~\"1A\";\n    assert my_sum([~42, ~13]) == 55;\n    assert my_sum([@42, @13]) == 55;\n}\n```\n\ngives me errors like\n\n```\n29:22: 29:33 error: mismatched types: expected `&/[&int]` but found `[~<VI4>]/2` (expected &-ptr but found ~-ptr)\n29         assert my_sum([~42, ~13]) == 55;\n                         ^~~~~~~~~~~\n```\n", "closed_by": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/3849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/3849/timeline", "performed_via_github_app": null, "state_reason": "completed"}