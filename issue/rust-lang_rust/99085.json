{"url": "https://api.github.com/repos/rust-lang/rust/issues/99085", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99085/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99085/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99085/events", "html_url": "https://github.com/rust-lang/rust/issues/99085", "id": 1299687204, "node_id": "I_kwDOAAsO6M5Nd6ck", "number": 99085, "title": "MIR contains StorageDead for locals that have never ben live", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-07-09T13:51:02Z", "updated_at": "2022-07-13T00:47:13Z", "closed_at": "2022-07-09T13:57:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If I change [this function](https://github.com/rust-lang/rust/blob/e685530b076f6cb0e1db35bd6964ba0603de8efd/compiler/rustc_const_eval/src/interpret/eval_context.rs#L887) to trigger an error when using StorageDead on a local that is already dead, that shows that we do generate MIR with redundant StorageDead. I am not sure if we should consider this a bug, but given that we consider redundant StorageLive a bug (due to some rather vague language on the LLVM side, that seems safer), I wonder if we should do the same for StorageDead?\r\n\r\nHere's an execution trace (from CTFE) of such a piece of MIR:\r\n```\r\n\u251c\u2500\u2510rustc_const_eval::interpret::eval_context::frame core::num::<impl i8>::checked_div\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step // executing bb0\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step StorageLive(_3)\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step StorageLive(_4)\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step StorageLive(_5)\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step StorageLive(_6)\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step _6 = _2\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step _5 = Eq(move _6, const 0_i8)\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step StorageDead(_6)\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step switchInt(move _5) -> [false: bb2, otherwise: bb1]\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step // executing bb2\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step StorageLive(_7)\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step StorageLive(_8)\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step StorageLive(_9)\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step _9 = _1\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step _8 = Eq(move _9, const core::num::<impl i8>::MIN)\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step StorageDead(_9)\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step switchInt(move _8) -> [false: bb4, otherwise: bb5]\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step // executing bb4\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step _7 = const false\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step goto -> bb6\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step // executing bb6\r\n\u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step StorageDead(_10)\r\n```\r\nAs you can see, `_10` was never marked as live, and yet it is marked as dead here.\r\n\r\nUnfortunately I do not know a good way to get the CTFE MIR of a standard library function. I tried copying its code to generate the MIR separately, but that [looks pretty different](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=d54d8408c04b2f06fe14ff2bcde2c01f) from the above trace.\r\n\r\nCc @tmandry @JakobDegen ", "closed_by": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99085/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}