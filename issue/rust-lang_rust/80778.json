{"url": "https://api.github.com/repos/rust-lang/rust/issues/80778", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80778/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80778/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80778/events", "html_url": "https://github.com/rust-lang/rust/issues/80778", "id": 781225797, "node_id": "MDU6SXNzdWU3ODEyMjU3OTc=", "number": 80778, "title": "Cell::swap assumes Cells never overlap", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2021-01-07T10:58:48Z", "updated_at": "2021-01-09T13:45:25Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "In https://github.com/rust-lang/rust/issues/80682#issuecomment-755437022, it was uncovered that `Cell::swap` is making some rather strong assumptions: two `Cell`s with different address must not overlap. Not only is this a scarily non-local safety invariant, it is also fundamentally incomaptible with some APIs that ought to be correct, as demonstrated by this snippet (thanks to @xfix and @SkiFire13 for help with working out the example):\r\n```rust\r\nuse std::cell::Cell;\r\nuse std::mem::transmute;\r\nuse std::convert::TryInto;\r\n\r\nfn as_cell_of_array<T, const N: usize>(c: &[Cell<T>; N]) -> &Cell<[T; N]> {\r\n    unsafe { transmute(c) }\r\n}\r\n\r\nfn main() {\r\n    let x = [Cell::new(vec![1]), Cell::new(vec![2]),Cell::new(vec![3])];\r\n    let x1: &Cell<[_; 2]> = as_cell_of_array(x[0..2].try_into().unwrap());\r\n    let x2: &Cell<[_; 2]> = as_cell_of_array(x[1..3].try_into().unwrap());\r\n    x1.swap(x2);\r\n}\r\n```\r\n[Run it in Miri](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=23bffa201f8d724d7fe8ceda043f1e3c) to see the issue: `ptr::swap` will duplicate parts of the memory range when there is overlap, which leads to double-drop (other parts of the memory range are just lost, leading to memory leaks, but that is not the main issue here).\r\n\r\nThis is not itself a soundness issue as it requires unsafe code to trigger UB. But this likely reflects an unintended consequence of `Cell::swap`.\r\n\r\n### `Cell::swap` history\r\n\r\n* This got stabilized in https://github.com/rust-lang/rust/commit/33a56659886a2afc3207de39000a9d74f3dddadc as part of https://github.com/rust-lang/rust/pull/40538. That commit references https://github.com/rust-lang/rust/issues/39264 and an RFC, but `swap` is not mentioned in either of them.\r\n* `swap` was added in https://github.com/rust-lang/rust/pull/39716.\r\n\r\n### Possible solutions\r\n\r\n* Accept that `as_cell_of_array` is unsound and document \"non-overlap\" as part of the `Cell` safety invariant. This seems very fragile.\r\n* Make `Cell::swap` not misbehave on overlap, either by panicking or by only swapping the non-overlapping parts.\r\n\r\nCc @rust-lang/lang ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80778/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 1, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80778/timeline", "performed_via_github_app": null, "state_reason": null}