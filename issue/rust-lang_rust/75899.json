{"url": "https://api.github.com/repos/rust-lang/rust/issues/75899", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75899/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75899/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75899/events", "html_url": "https://github.com/rust-lang/rust/issues/75899", "id": 685378672, "node_id": "MDU6SXNzdWU2ODUzNzg2NzI=", "number": 75899, "title": "Unsizing coercion does not normalize associated types in structs.", "user": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 125141240, "node_id": "MDU6TGFiZWwxMjUxNDEyNDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-dst", "name": "A-dst", "color": "f7e101", "default": false, "description": "Area: Dynamically Sized Types"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 800802916, "node_id": "MDU6TGFiZWw4MDA4MDI5MTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-coercions", "name": "A-coercions", "color": "f7e101", "default": false, "description": "Area: implicit and explicit `expr as Type` coercions"}], "state": "closed", "locked": false, "assignee": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2020-08-25T10:44:18Z", "updated_at": "2022-09-15T23:48:47Z", "closed_at": "2022-09-15T23:48:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Example code I'd expect to work ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=da6411306c5266f6010ff5172838a2d3)):\r\n```rust\r\n// NOTE: this is only needed for coerce_tuple, you can remove both for a stable version.\r\n#![feature(unsized_tuple_coercion)]\r\n\r\ntrait Trait {}\r\nimpl<T> Trait for T {}\r\n\r\ntrait Noop {\r\n    type Assoc: ?Sized;\r\n}\r\nimpl<T: ?Sized> Noop for T {\r\n    type Assoc = T;\r\n}\r\n\r\n// Both of these work:\r\nfn coerce<T: Trait>(x: &<T as Noop>::Assoc) -> &<dyn Trait as Noop>::Assoc { x }\r\nfn coerce_tuple<T: Trait>(x: &(String, <T as Noop>::Assoc)) -> &(String, <dyn Trait as Noop>::Assoc) { x }\r\n\r\n// But this doesn't:\r\nstruct NoopNewtype<T: ?Sized + Noop>(T::Assoc);\r\nfn coerce_newtype<T: Trait>(x: &NoopNewtype<T>) -> &NoopNewtype<dyn Trait> { x }\r\n```\r\n\r\n(in case the example above seems artificial, the [realistic one](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=b3ef269c501b3e6478275335f7922dba) I've reduced this from involves using an associated trait to add `Option` around sized types, but not `dyn Trait`, since `Option<dyn Trait>` wouldn't itself work)\r\n\r\n<hr/>\r\n\r\nI'd expect `coerce_newtype` to work because `<T as Noop>::Assoc: Unsize<<dyn Trait as Noop>::Assoc>` should hold, after normalization to `T: Unsize<dyn Trait>` (which holds here because `T: Trait`), but nothing performs that normalization before coercion gives up entirely.\r\n\r\nUnlike `CoerceUnsized` (where I've been wary of associated types in the past), there should be no weird interactions here, we should be able to largely treat the `struct` as a tuple (and we already ensure the type parameter being changed doesn't show up anywhere else in the `struct`, anyway).\r\n\r\n<hr/>\r\n\r\nThe `coerce` and `coerce_tuple` examples get to normalize *before* asking the trait system about any `CoerceUnsized` or `Unsized` obligations - I wonder if we could just normalize `trait_pred` here? https://github.com/rust-lang/rust/blob/3d6a3ed15823cce765d56952d954e1bd8166dfa7/src/librustc_typeck/check/coercion.rs#L603\r\n\r\nBut we would have to be careful, because we *are* in a speculative operation, so we would have to use `normalize_associated_types_in_as_infer_ok`, like this other piece of coercion logic: https://github.com/rust-lang/rust/blob/3d6a3ed15823cce765d56952d954e1bd8166dfa7/src/librustc_typeck/check/coercion.rs#L732-L733\r\n\r\ncc @mystor (author of the `object-provider` crate where this could be useful) @nikomatsakis \n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"WaffleLapkin\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75899/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75899/timeline", "performed_via_github_app": null, "state_reason": "completed"}