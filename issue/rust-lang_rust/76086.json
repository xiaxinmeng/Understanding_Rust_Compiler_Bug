{"url": "https://api.github.com/repos/rust-lang/rust/issues/76086", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/76086/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/76086/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/76086/events", "html_url": "https://github.com/rust-lang/rust/issues/76086", "id": 688612959, "node_id": "MDU6SXNzdWU2ODg2MTI5NTk=", "number": 76086, "title": "Misleading type error when generic parameter is sole mismatch.", "user": {"login": "iximeow", "id": 4615790, "node_id": "MDQ6VXNlcjQ2MTU3OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/4615790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iximeow", "html_url": "https://github.com/iximeow", "followers_url": "https://api.github.com/users/iximeow/followers", "following_url": "https://api.github.com/users/iximeow/following{/other_user}", "gists_url": "https://api.github.com/users/iximeow/gists{/gist_id}", "starred_url": "https://api.github.com/users/iximeow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iximeow/subscriptions", "organizations_url": "https://api.github.com/users/iximeow/orgs", "repos_url": "https://api.github.com/users/iximeow/repos", "events_url": "https://api.github.com/users/iximeow/events{/privacy}", "received_events_url": "https://api.github.com/users/iximeow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-29T22:17:26Z", "updated_at": "2020-08-29T22:49:32Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Some Rust ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=fd15e1f6a89ee0556aaea1fee0928cdf)):\r\n```rust\r\nstruct Generic<T> {\r\n    inner: T,\r\n}\r\n\r\nimpl<T> Generic<T> {\r\n    fn foo() -> Generic<()> {\r\n        Self { inner: () }\r\n    }\r\n}\r\n```\r\nyields an error about the mismatched type of `inner`:\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:7:23\r\n  |\r\n5 | impl<T> Generic<T> {\r\n  |      - this type parameter\r\n6 |     fn foo() -> Generic<()> {\r\n7 |         Self { inner: () }\r\n  |                       ^^ expected type parameter `T`, found `()`\r\n  |\r\n  = note: expected type parameter `T`\r\n                  found unit type `()`\r\n```\r\nbut I know it _should_ be `()` - the return type on `foo` also expects `T` to be `()`! The second error is somewhat more helpful:\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:7:9\r\n  |\r\n5 | impl<T> Generic<T> {\r\n  |      - this type parameter\r\n6 |     fn foo() -> Generic<()> {\r\n  |                 ----------- expected `Generic<()>` because of return type\r\n7 |         Self { inner: () }\r\n  |         ^^^^^^^^^^^^^^^^^^ expected `()`, found type parameter `T`\r\n  |\r\n  = note: expected struct `Generic<()>`\r\n             found struct `Generic<T>`\r\n```\r\n\r\nThe _actual_ issue I'd had writing this was `Self { inner: () }` instead of `Generic { inner: () }`. It would have been helpful if rustc could have concluded that the type I'd wanted matched the function's return type, and that the issue was `Self` being `Generic<T>` and causing the mismatch.\r\n\r\ncc @estebank who'd asked me to write up an issue with a reproduction.\r\n\r\nApologies for the mushy title, I couldn't think of something more precise - very open to rewording if someone's got a better one-liner.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/76086/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/76086/timeline", "performed_via_github_app": null, "state_reason": null}