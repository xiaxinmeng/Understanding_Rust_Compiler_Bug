{"url": "https://api.github.com/repos/rust-lang/rust/issues/56686", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56686/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56686/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56686/events", "html_url": "https://github.com/rust-lang/rust/issues/56686", "id": 389474510, "node_id": "MDU6SXNzdWUzODk0NzQ1MTA=", "number": 56686, "title": "Tracking issue for VecDeque::rotate_{left|right} (feature vecdeque_rotate)", "user": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 919710011, "node_id": "MDU6TGFiZWw5MTk3MTAwMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/disposition-merge", "name": "disposition-merge", "color": "008800", "default": false, "description": "This issue / PR is in PFCP or FCP with a disposition to merge it."}, {"id": 923282386, "node_id": "MDU6TGFiZWw5MjMyODIzODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/finished-final-comment-period", "name": "finished-final-comment-period", "color": "f9e189", "default": false, "description": "The final comment period is finished for this PR / Issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-12-10T20:32:26Z", "updated_at": "2019-05-19T04:49:54Z", "closed_at": "2019-05-19T04:49:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently if you want to rotate a VecDeque _n_ elements to the left or right, you'd have to write something like this:\r\n```Rust\r\nuse std::collections::VecDeque;\r\n\r\nfn main() {\r\n    let mut v = (0..10).collect::<VecDeque<_>>();\r\n    \r\n    println!(\"{:?}\", v); // [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n    \r\n    // rotate left by 2,\r\n    for _ in 0..2 {\r\n        if let Some(popped_front) = v.pop_front() {\r\n            v.push_back(popped_front);\r\n        }\r\n    }\r\n    \r\n    println!(\"{:?}\", v); // [2, 3, 4, 5, 6, 7, 8, 9, 0, 1]\r\n    \r\n    // rotate right by 4\r\n    for _ in 0..4 {\r\n        if let Some(popped_back) = v.pop_back() {\r\n            v.push_front(popped_back);\r\n        }\r\n    }\r\n    \r\n    println!(\"{:?}\", v); //[8, 9, 0, 1, 2, 3, 4, 5, 6, 7]\r\n    \r\n}\r\n```\r\n\r\nI wonder if it would be possible to add 2 functions:\r\n- rotate_left(mid: usize)\r\n- rotate_right(mid: usize)\r\n\r\nYou then only have to write:\r\n```Rust\r\nuse std::collections::VecDeque;\r\n\r\nfn main() {\r\n    let mut v = (0..10).collect::<VecDeque<_>>();\r\n    \r\n    println!(\"{:?}\", v); // [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n    \r\n    // rotate left by 2,\r\n    v.rotate_left(2)\r\n    println!(\"{:?}\", v); // [2, 3, 4, 5, 6, 7, 8, 9, 0, 1]\r\n    \r\n    // rotate right by 4\r\n    v.rotate_right(4);\r\n    \r\n    println!(\"{:?}\", v); //[8, 9, 0, 1, 2, 3, 4, 5, 6, 7]\r\n    \r\n}\r\n```\r\n\r\nThis would be equal to slice's `rotate_left` and `rotate_right`.\r\nIt could probably be implemented on a lower level than with pop's and pushes for a little more efficiency.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56686/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56686/timeline", "performed_via_github_app": null, "state_reason": "completed"}