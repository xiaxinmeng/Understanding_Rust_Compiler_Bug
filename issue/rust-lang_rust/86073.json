{"url": "https://api.github.com/repos/rust-lang/rust/issues/86073", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86073/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86073/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86073/events", "html_url": "https://github.com/rust-lang/rust/issues/86073", "id": 912937446, "node_id": "MDU6SXNzdWU5MTI5Mzc0NDY=", "number": 86073, "title": "Parser finds nonexistent tokens after unclosed delimiters", "user": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-06-06T20:13:57Z", "updated_at": "2021-06-07T20:56:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Whenever there is an unclosed delimiter in the input, the parser tries to recover by inserting the expected closing delimiter somewhere. However, this leads to spurious error messages if another error occurs after recovering, e.g.:\r\n```rust\r\n#[i=i::\r\n```\r\n```\r\nerror: this file contains an unclosed delimiter\r\n --> test1.rs:1:8\r\n  |\r\n1 | #[i=i::\r\n  |  -     ^\r\n  |  |\r\n  |  unclosed delimiter\r\n\r\nerror: expected identifier, found `]`\r\n --> test1.rs:1:8\r\n  |\r\n1 | #[i=i::\r\n  |        ^ expected identifier\r\n\r\nerror: aborting due to 2 previous errors\r\n```\r\nor:\r\n```rust\r\nimpl X { fn foo\r\n```\r\n```\r\nerror: this file contains an unclosed delimiter\r\n --> test2.rs:1:16\r\n  |\r\n1 | impl X { fn foo\r\n  |        -       ^\r\n  |        |\r\n  |        unclosed delimiter\r\n\r\nerror: expected one of `(` or `<`, found `}`\r\n --> test2.rs:1:16\r\n  |\r\n1 | impl X { fn foo\r\n  |        -       ^\r\n  |        |       |\r\n  |        |       expected one of `(` or `<`\r\n  |        |       the item list ends here\r\n  |        while parsing this item list starting here\r\n```\r\ni.e. the error messages say that certain tokens were found that clearly aren't present in the input. I can understand why this happens, but I think it is confusing, and that artificially inserted tokens should not appear in error messages like this.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86073/timeline", "performed_via_github_app": null, "state_reason": null}