{"url": "https://api.github.com/repos/rust-lang/rust/issues/83971", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83971/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83971/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83971/events", "html_url": "https://github.com/rust-lang/rust/issues/83971", "id": 852508750, "node_id": "MDU6SXNzdWU4NTI1MDg3NTA=", "number": 83971, "title": "ICE: Broken MIR: generator contains type (on build)", "user": {"login": "utherpally", "id": 43192714, "node_id": "MDQ6VXNlcjQzMTkyNzE0", "avatar_url": "https://avatars.githubusercontent.com/u/43192714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/utherpally", "html_url": "https://github.com/utherpally", "followers_url": "https://api.github.com/users/utherpally/followers", "following_url": "https://api.github.com/users/utherpally/following{/other_user}", "gists_url": "https://api.github.com/users/utherpally/gists{/gist_id}", "starred_url": "https://api.github.com/users/utherpally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/utherpally/subscriptions", "organizations_url": "https://api.github.com/users/utherpally/orgs", "repos_url": "https://api.github.com/users/utherpally/repos", "events_url": "https://api.github.com/users/utherpally/events{/privacy}", "received_events_url": "https://api.github.com/users/utherpally/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-04-07T15:07:29Z", "updated_at": "2021-04-09T20:15:49Z", "closed_at": "2021-04-09T20:15:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\nMinimal example\r\n### Code\r\n[Playground](https://play.rust-lang.org/?version=nightly&mode=release&edition=2018&gist=a4e9cadebe5bffb98e9f1c3333471a34)\r\n\r\n`cargo run`: ok.\r\n`cargo build`: failed.\r\n```sh\r\n// https://github.com/http-rs/tide/blob/v0.16.0/src/middleware.rs\r\nuse async_trait::async_trait;\r\nuse std::future::Future;\r\nuse std::pin::Pin;\r\n\r\npub type Result = std::io::Result<()>;\r\n\r\n#[async_trait]\r\npub trait Middleware<State>: Send + Sync + 'static {\r\n    /// Asynchronously handle the request, and return a response.\r\n    async fn handle(&self, req: Request<State>, next: Next<'_, State>) -> crate::Result;\r\n\r\n    /// Set the middleware's name. By default it uses the type signature.\r\n    fn name(&self) -> &str {\r\n        std::any::type_name::<Self>()\r\n    }\r\n}\r\n\r\npub struct Next<'a, State>(&'a str, State);\r\n\r\npub struct Request<State>(State);\r\n\r\n#[async_trait]\r\nimpl<State, F> Middleware<State> for F\r\nwhere\r\n    State: Clone + Send + Sync + 'static,\r\n    F: Send\r\n        + Sync\r\n        + 'static\r\n        + for<'a> Fn(\r\n            Request<State>,\r\n            Next<'a, State>,\r\n        ) -> Pin<Box<dyn Future<Output = crate::Result> + 'a + Send>>,\r\n{\r\n    async fn handle(&self, req: Request<State>, next: Next<'_, State>) -> crate::Result {\r\n        (self)(req, next).await\r\n    }\r\n}\r\n\r\nfn main() {\r\n\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.53.0-nightly (c051c5ddd 2021-04-06) running on x86_64-unknown-linux-gnu\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_mir/src/transform/generator.rs:751:13: Broken MIR: generator contains type Pin<Box<dyn Future<Output = std::result::Result<(), std::io::Error>> + Send>> in MIR, but typeck only knows about for<'r, 's, 't0> {ResumeTy, &'r F, Request<State>, Next<'s, State>, Pin<Box<(dyn Future<Output = std::result::Result<(), std::io::Error>> + Send + 't0)>>, ()}\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```   Compiling playground v0.0.1 (/playground)\r\nwarning: function is never used: `main`\r\n  --> src/lib.rs:39:4\r\n   |\r\n39 | fn main() {\r\n   |    ^^^^\r\n   |\r\n   = note: `#[warn(dead_code)]` on by default\r\n\r\nerror: internal compiler error: compiler/rustc_mir/src/transform/generator.rs:751:13: Broken MIR: generator contains type Pin<Box<dyn Future<Output = std::result::Result<(), std::io::Error>> + Send>> in MIR, but typeck only knows about for<'r, 's, 't0> {ResumeTy, &'r F, Request<State>, Next<'s, State>, Pin<Box<(dyn Future<Output = std::result::Result<(), std::io::Error>> + Send + 't0)>>, ()}\r\n  --> src/lib.rs:34:89\r\n   |\r\n34 |       async fn handle(&self, req: Request<State>, next: Next<'_, State>) -> crate::Result {\r\n   |  _________________________________________________________________________________________^\r\n35 | |         (self)(req, next).await\r\n36 | |     }\r\n   | |_____^\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/c051c5ddda79f45fad196ca3a4690251e377d043/library/std/src/panic.rs:59:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (c051c5ddd 2021-04-06) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [optimized_mir] optimizing MIR for `<impl at src/lib.rs:23:1: 37:2>::handle::{closure#0}`\r\n#1 [layout_raw] computing layout of `[static generator@src/lib.rs:34:89: 36:6 for<'r, 's, 't0> {std::future::ResumeTy, &'r F, Request<State>, Next<'s, State>, std::pin::Pin<std::boxed::Box<(dyn std::future::Future<Output = std::result::Result<(), std::io::Error>> + std::marker::Send + 't0)>>, ()}]`\r\nend of query stack\r\nerror: aborting due to previous error; 1 warning emitted\r\n\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83971/timeline", "performed_via_github_app": null, "state_reason": "completed"}