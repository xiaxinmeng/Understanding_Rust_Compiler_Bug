{"url": "https://api.github.com/repos/rust-lang/rust/issues/99922", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99922/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99922/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99922/events", "html_url": "https://github.com/rust-lang/rust/issues/99922", "id": 1322664382, "node_id": "I_kwDOAAsO6M5O1kG-", "number": 99922, "title": "Unsatisfied trait bound on fn item should suggest `as fn()` if it is satisfied for fn pointer", "user": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-07-29T20:47:31Z", "updated_at": "2022-07-29T20:47:31Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code: [[playground]](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=47c96512e5b66aac5fab70201ece0d87)\r\n\r\n```rust\r\ntrait Trait {}\r\nimpl Trait for fn() {}\r\nfn take(_: impl Trait) {}\r\n\r\nfn f() {}\r\nfn main() {\r\n    take(f);\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[[E0277]](https://doc.rust-lang.org/stable/error-index.html#E0277): the trait bound `fn() {f}: Trait` is not satisfied\r\n --> src/main.rs:7:10\r\n  |\r\n7 |     take(f);\r\n  |     ---- ^ the trait `Trait` is not implemented for `fn() {f}`\r\n  |     |\r\n  |     required by a bound introduced by this call\r\n  |\r\n  = help: the trait `Trait` is implemented for `fn()`\r\nnote: required by a bound in `take`\r\n --> src/main.rs:3:17\r\n  |\r\n3 | fn take(_: impl Trait) {}\r\n  |                 ^^^^^ required by this bound in `take`\r\n```\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\nerror[[E0277]](https://doc.rust-lang.org/stable/error-index.html#E0277): the trait bound `fn() {f}: Trait` is not satisfied\r\n --> src/main.rs:7:10\r\n  |\r\n7 |     take(f);\r\n  |     ---- ^ the trait `Trait` is not implemented for fn item `fn() {f}`\r\n  |     |\r\n  |     required by a bound introduced by this call\r\n  |\r\n  = help: the trait `Trait` is implemented for fn pointer `fn()`\r\nnote: required by a bound in `take`\r\n --> src/main.rs:3:17\r\n  |\r\n3 | fn take(_: impl Trait) {}\r\n  |                 ^^^^^ required by this bound in `take`\r\n  |\r\nhelp: Convert the fn item to a fn pointer with `as`\r\n  |\r\n7 |     take(f as fn());\r\n  |           ++++++++\r\n```\r\n\r\n<details><summary>A more involved diagnostic example:</summary>\r\n\r\n[[playground]](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=56c1021f84a0619534292ef1f3c19b65)\r\n\r\n```rust\r\ntrait Trait {}\r\nimpl<A: PartialEq> Trait for A {}\r\nfn take(_: impl Trait) {}\r\n\r\nfn f() {}\r\nfn main() {\r\n    take(f);\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[[E0277]](https://doc.rust-lang.org/nightly/error-index.html#E0277): can't compare `fn() {f}` with `fn() {f}`\r\n --> src/main.rs:7:10\r\n  |\r\n7 |     take(f);\r\n  |     ---- ^ no implementation for `fn() {f} == fn() {f}`\r\n  |     |\r\n  |     required by a bound introduced by this call\r\n  |\r\n  = help: the trait `PartialEq` is not implemented for `fn() {f}`\r\n  = help: the following other types implement trait `PartialEq<Rhs>`:\r\n            extern \"C\" fn() -> Ret\r\n            extern \"C\" fn(A, B) -> Ret\r\n            extern \"C\" fn(A, B, ...) -> Ret\r\n            extern \"C\" fn(A, B, C) -> Ret\r\n            extern \"C\" fn(A, B, C, ...) -> Ret\r\n            extern \"C\" fn(A, B, C, D) -> Ret\r\n            extern \"C\" fn(A, B, C, D, ...) -> Ret\r\n            extern \"C\" fn(A, B, C, D, E) -> Ret\r\n          and 68 others\r\nnote: required because of the requirements on the impl of `Trait` for `fn() {f}`\r\n --> src/main.rs:2:20\r\n  |\r\n2 | impl<A: PartialEq> Trait for A {}\r\n  |                    ^^^^^     ^\r\nnote: required by a bound in `take`\r\n --> src/main.rs:3:17\r\n  |\r\n3 | fn take(_: impl Trait) {}\r\n  |                 ^^^^^ required by this bound in `take`\r\n```\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\nerror[[E0277]](https://doc.rust-lang.org/nightly/error-index.html#E0277): can't compare `fn() {f}` with `fn() {f}`\r\n --> src/main.rs:7:10\r\n  |\r\n7 |     take(f);\r\n  |     ---- ^ no implementation for `fn() {f} == fn() {f}`\r\n  |     |\r\n  |     required by a bound introduced by this call\r\n  |\r\n  = help: the trait `PartialEq` is not implemented for fn item `fn() {f}`\r\n  = help: the trait `PartialEq` is implemented for fn pointer `fn()`\r\nnote: required because of the requirements on the impl of `Trait` for `fn() {f}`\r\n --> src/main.rs:2:20\r\n  |\r\n2 | impl<A: PartialEq> Trait for A {}\r\n  |                    ^^^^^     ^\r\nnote: required by a bound in `take`\r\n --> src/main.rs:3:17\r\n  |\r\n3 | fn take(_: impl Trait) {}\r\n  |                 ^^^^^ required by this bound in `take`\r\n  |\r\nhelp: Convert the fn item to a fn pointer with `as`\r\n  |\r\n7 |     take(f as fn());\r\n  |           ++++++++\r\n```\r\n\r\n(bonus side effect: hiding the giant list of explicit variadic fn pointer impls)\r\n\r\n</details>", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99922/timeline", "performed_via_github_app": null, "state_reason": null}