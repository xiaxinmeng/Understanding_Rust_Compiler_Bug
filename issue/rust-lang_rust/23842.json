{"url": "https://api.github.com/repos/rust-lang/rust/issues/23842", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/23842/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/23842/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/23842/events", "html_url": "https://github.com/rust-lang/rust/issues/23842", "id": 65096680, "node_id": "MDU6SXNzdWU2NTA5NjY4MA==", "number": 23842, "title": "vec.reserve() unintuitive behavior", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 178802147, "node_id": "MDU6TGFiZWwxNzg4MDIxNDc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-needs-decision", "name": "I-needs-decision", "color": "e11d21", "default": false, "description": "Issues in need of decision."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2015-03-29T21:10:07Z", "updated_at": "2015-07-18T03:42:05Z", "closed_at": "2015-07-18T03:42:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are three issues I see with vec.reserve()\n\n**Issue 1**: The results can be vastly different for minimally different input vectors.  For example this code:\n\n```\nfn main() {\n    let mut x = vec![0i8; 1023];\n    x.reserve(1);\n    let mut y = vec![0i8; 1024];\n    y.reserve(1);\n    println!(\"x capacity = {}, y capacity = {}\", x.capacity(), y.capacity());\n}\n```\n\nprints \"x capacity = 1024, y capacity = 2048\".  The inputs to such a function are very similar, so we should expect reserve() to behave similarly on them, but we see that reserve() assigns special significance to powers of 2 for no reason.\n\n**Suggested fix**: if we need to increase capacity past the current capacity, simply double the current capacity.  So above, our result would be: \"x capacity = 2046, y capacity = 2048\".\n\n---\n\n**Issue 2**: How exactly the vector decides to expand can have huge performance considerations. See for example https://github.com/rust-lang/rust/blob/master/src/libcollections/vec.rs#L536.  Also see for example the thread at https://github.com/rust-lang/rust/pull/23820#discussion_r27353683.  All the API guarantees is that the vector will accommodate at least the size requested. However, in both of these situations, it is critical for performance reasons that the algorithm generally give you more for you ask for, and in the pull request I referenced, if you don't have the doubling behavior, you go from O(n) to O(n^2).  It seems like such an important performance consideration should not be hidden in the implementation.\n\n**Recommendation**: Document in the API that, if reserve() needs to allocate memory less than double its current capacity, it will double its current capacity.\n\n---\n\n**Issue 3**: The difference between reserve() and reserve_exact() seem confusing, mostly due to the name of the former.  I'm sure there will be plenty of examples that crop up as well of people using reserve() where they meant to use reserve_exact(), or using reserve() and reasoning that it behaves like reserve_exact() (the pull request shows an example of this).\n\n**Recommendation**: Change the name of reserve() to something more specific, so that people don't get confused and use reserve() where they mean to use reserve_exact().  Something like reserve_round_up().\n\n---\n\nI'm currently testing a commit that fixes a few issues in vec.rs (involving expansion behavior near usize::MAX). I can start working on fixing issues 1 and 2 now, though it seems like a large-ish API change like issue 3 (and maybe 2) would require an RFC.  Let me know if there's enough interest to be worth submitting.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/23842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/23842/timeline", "performed_via_github_app": null, "state_reason": "completed"}