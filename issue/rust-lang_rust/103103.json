{"url": "https://api.github.com/repos/rust-lang/rust/issues/103103", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103103/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103103/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103103/events", "html_url": "https://github.com/rust-lang/rust/issues/103103", "id": 1410347579, "node_id": "I_kwDOAAsO6M5UEDI7", "number": 103103, "title": "Not using the byval attribute loses memcpy optimizations", "user": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2022-10-16T02:13:33Z", "updated_at": "2023-02-02T00:31:57Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider this code ([Godbolt link](https://godbolt.org/z/x75Mc58ne)):\r\n\r\n```rust\r\npub struct S([i32; 16]);\r\n\r\n#[inline(never)]\r\nfn g(x: S) {\r\n    println!(\"{}\", x.0[3]);\r\n}\r\n\r\n#[inline(never)]\r\nfn f(x: S) {\r\n    g(x)\r\n}\r\n\r\npub fn main() {\r\n    f(S([0; 16]))\r\n}\r\n```\r\n\r\nLLVM can't eliminate the memcpy between f and g, even though it should legally be able to do so. This is because memcpyopt can only forward to parameters marked byval. We don't use the byval attribute, and this seems to be by design. But we lose this optimization, which I've observed hurting codegen in several places even in hello world (`core::fmt::Write::write_fmt`, `core::panicking::assert_failed()`, `<core::fmt::Arguments as core::fmt::Display>::fmt`). I suspect losing this optimization hurts us all over the place.\r\n\r\nThere are two solutions I can see:\r\n\r\n(1) Use byval for indirect arguments in the Rust ABI.\r\n\r\n(2) Change LLVM to allow the optimization to happen for at least `nocapture noalias readonly` parameters. Since `nocapture` implies that the behavior of the callee doesn't depend on the address and `noalias readonly` implies that the memory is strongly immutable, this should work. We mark all indirect by-value arguments as `nocapture noalias` already.\r\n\r\nI'm working on a patch for (2), but I was wondering why we can't just do (1).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103103/reactions", "total_count": 3, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 3, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103103/timeline", "performed_via_github_app": null, "state_reason": null}