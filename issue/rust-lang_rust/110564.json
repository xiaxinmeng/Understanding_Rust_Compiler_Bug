{"url": "https://api.github.com/repos/rust-lang/rust/issues/110564", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110564/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110564/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110564/events", "html_url": "https://github.com/rust-lang/rust/issues/110564", "id": 1675716191, "node_id": "I_kwDOAAsO6M5j4WZf", "number": 110564, "title": "ICE: assertion failed: ptr::eq(context.tcx.gcx as *const _ as *const (), tcx.gcx as *const _ as *const ()), compiler/rustc_middle/src/ty/context/tls.rs", "user": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2023-04-19T22:14:01Z", "updated_at": "2023-04-21T21:37:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Code\r\nSomething in the standard library. We caught this in our integration pipeline.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\n1.71.0-nightly (9c51cf7e7 2023-04-19) running on x86_64-apple-darwin\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nBuilding stage2 library artifacts (x86_64-apple-darwin -> x86_64-unknown-linux-gnu)\r\n   Compiling cc v1.0.77\r\n   Compiling core v0.0.0 (/opt/s/w/ir/x/w/fuchsia-third_party-rust/library/core)\r\n   Compiling libc v0.2.140\r\n   Compiling memchr v2.5.0\r\n   Compiling std v0.0.0 (/opt/s/w/ir/x/w/fuchsia-third_party-rust/library/std)\r\n   Compiling compiler_builtins v0.1.91\r\n   Compiling unwind v0.0.0 (/opt/s/w/ir/x/w/fuchsia-third_party-rust/library/unwind)\r\n   Compiling profiler_builtins v0.0.0 (/opt/s/w/ir/x/w/fuchsia-third_party-rust/library/profiler_builtins)\r\nthread 'rustc' panicked at 'assertion failed: ptr::eq(context.tcx.gcx as *const _ as *const (),\\n    tcx.gcx as *const _ as *const ())', /opt/s/w/ir/x/w/fuchsia-third_party-rust/compiler/rustc_middle/src/ty/context/tls.rs:126:9\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at ./library/std/src/panicking.rs:578:5\r\n   1: core::panicking::panic_fmt\r\n             at ./library/core/src/panicking.rs:67:14\r\n   2: core::panicking::panic\r\n             at ./library/core/src/panicking.rs:117:5\r\n   3: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::region_scope_tree, rustc_query_impl::plumbing::QueryCtxt>\r\n   4: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::region_scope_tree\r\n   5: <rustc_hir_typeck::fn_ctxt::FnCtxt>::resolve_rvalue_scopes\r\n   6: rustc_hir_typeck::typeck\r\n   7: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::typeck, rustc_query_impl::plumbing::QueryCtxt>\r\n   8: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n   9: rustc_hir_typeck::typeck_item_bodies\r\n  10: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::typeck_item_bodies, rustc_query_impl::plumbing::QueryCtxt>\r\n  11: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck_item_bodies\r\n  12: rustc_hir_analysis::check_crate\r\n  13: rustc_interface::passes::analysis\r\n  14: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  15: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  16: <rustc_interface::queries::QueryResult<&rustc_middle::ty::context::GlobalCtxt>>::enter::<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}::{closure#2}::{closure#4}>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nerror: the compiler unexpectedly panicked. this is a bug.\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\nnote: rustc 1.71.0-nightly (9c51cf7e7 2023-04-19) running on x86_64-apple-darwin\r\nnote: compiler flags: --crate-type lib -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 -Z unstable-options -C linker=/opt/s/w/ir/x/w/cipd/bin/clang++ -C link-arg=--target=x86_64-unknown-linux-gnu -C link-arg=--sysroot=/opt/s/w/ir/x/w/cipd/linux -C link-arg=-fuse-ld=lld -C link-arg=-Wl,--undefined-version -C symbol-mangling-version=legacy -Z unstable-options -Z unstable-options -Z macro-backtrace -C link-args=-Wl,-z,origin -C link-args=-Wl,-rpath,$ORIGIN/../lib -C split-debuginfo=unpacked -C prefer-dynamic -Z inline-mir -C embed-bitcode=yes -Z crate-attr=doc(html_root_url=\"https://doc.rust-lang.org/nightly/\") -Z binary-dep-depinfo -Z force-unstable-if-unmarked\r\nnote: some of the compiler flags provided by cargo are hidden\r\nquery stack during panic:\r\n#0 [typeck] type-checking `num::flt2dec::to_shortest_exp_str`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: could not compile `core`\r\n```\r\n\r\nLink to full build output [here](https://logs.chromium.org/logs/fuchsia/buildbucket/cr-buildbucket/8783352442962811473/+/u/rust_install/stdout).\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at ./library/std/src/panicking.rs:578:5\r\n   1: core::panicking::panic_fmt\r\n             at ./library/core/src/panicking.rs:67:14\r\n   2: core::panicking::panic\r\n             at ./library/core/src/panicking.rs:117:5\r\n   3: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::region_scope_tree, rustc_query_impl::plumbing::QueryCtxt>\r\n   4: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::region_scope_tree\r\n   5: <rustc_hir_typeck::fn_ctxt::FnCtxt>::resolve_rvalue_scopes\r\n   6: rustc_hir_typeck::typeck\r\n   7: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::typeck, rustc_query_impl::plumbing::QueryCtxt>\r\n   8: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n   9: rustc_hir_typeck::typeck_item_bodies\r\n  10: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::typeck_item_bodies, rustc_query_impl::plumbing::QueryCtxt>\r\n  11: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck_item_bodies\r\n  12: rustc_hir_analysis::check_crate\r\n  13: rustc_interface::passes::analysis\r\n  14: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  15: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  16: <rustc_interface::queries::QueryResult<&rustc_middle::ty::context::GlobalCtxt>>::enter::<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}::{closure#2}::{closure#4}>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110564/timeline", "performed_via_github_app": null, "state_reason": null}