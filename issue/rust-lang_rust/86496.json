{"url": "https://api.github.com/repos/rust-lang/rust/issues/86496", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86496/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86496/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86496/events", "html_url": "https://github.com/rust-lang/rust/issues/86496", "id": 925674740, "node_id": "MDU6SXNzdWU5MjU2NzQ3NDA=", "number": 86496, "title": "Possible user error but complier error occurs when setting ptr width in custom target to 32bit instead of 64bit", "user": {"login": "stillbeingnick", "id": 17696301, "node_id": "MDQ6VXNlcjE3Njk2MzAx", "avatar_url": "https://avatars.githubusercontent.com/u/17696301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stillbeingnick", "html_url": "https://github.com/stillbeingnick", "followers_url": "https://api.github.com/users/stillbeingnick/followers", "following_url": "https://api.github.com/users/stillbeingnick/following{/other_user}", "gists_url": "https://api.github.com/users/stillbeingnick/gists{/gist_id}", "starred_url": "https://api.github.com/users/stillbeingnick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stillbeingnick/subscriptions", "organizations_url": "https://api.github.com/users/stillbeingnick/orgs", "repos_url": "https://api.github.com/users/stillbeingnick/repos", "events_url": "https://api.github.com/users/stillbeingnick/events{/privacy}", "received_events_url": "https://api.github.com/users/stillbeingnick/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-06-20T20:21:00Z", "updated_at": "2021-06-21T03:11:47Z", "closed_at": "2021-06-21T03:11:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Error info\r\n\r\nHello rust crew! \r\n\r\nThis could be my own fault but I was not able to find documentation on any other way to do this.\r\n\r\nWhat I am trying to do:\r\n    I am writing a pretty simple kernel that is loaded from 32bit protected mode on a virtual qemu x86_64 system. The kernel will load and execute just fine until I add a loop. I have tried both\r\n```Rust\r\nfor x in 0..10 {\r\n\r\n}\r\n```\r\nand I have also tried resorting to a \r\n```Rust\r\nlet mut i  = 0;\r\nwhile i < 10 {\r\n   i += 1\r\n}\r\n```\r\nAnytime I add a loop to any function the qemu system will get stuck in a boot loop.\r\n\r\nHowever \r\n```rust\r\nloop{}\r\n```\r\nworks just fine\r\n\r\nBefore adjusting the target I was able to narrow the issue down to a 64bit return address being set on the stack and since the system is running in 32bit mode I think the stack is being corrupted and omiting the high bits of the register.\r\n\r\nAfter stepping through each instruction with gdb I was able to confirm this by watching the stack morph.\r\n\r\nThis is what lead me to changing the custom target \"data-specification\" and adjusting the pointer size from 64bit to 32bit according to llvm docs.\r\n\r\nWhen I set the pointer size abi size and idx size to 32 I get an llvm error.\r\n\r\nI have not tried adding to the boot loader to change into long mode (which I suspect will fix everything).\r\n\r\nas a side note it also seems I cant set the target type or arch to i686 (for 32 bit) rustc tells me that doesnt exist.\r\n\r\nThis could absolutely be my fault in messing with too many things to shoehorn the rs to 32bit mode but It would be nice to see if this is the case.\r\n\r\nI am going to experiment to see if I can write my own loop functions that are 32bit compatible and revert the custom target back to 64bit ptr width\r\n\r\nThank you all!\r\n\r\n### Code\r\n\r\n```Rust\r\n  #![feature(lang_items, core_intrinsics, core_panic)]\r\n  #![feature(start)]\r\n  #![no_std]\r\n  use core::panic::PanicInfo;\r\n  use core::intrinsics::abort;\r\n\r\n  #[no_mangle]\r\n  pub extern fn main() {\r\n      //add char to piece of video mem\r\n      let x_char = 'X';\r\n      let col = 0x0f;\r\n      //grab the first char cell and color cell of video mem\r\n      let video_mem = 0xb8000usize;\r\n      let color_mem = 0xb8001usize;\r\n      //create mut ptr to it\r\n      let vid_1 = video_mem as *mut char;\r\n      let color_1 = color_mem as *mut i32;\r\n      //fn for test loop\r\n      test_loop();\r\n      //set x in vid mem\r\n      unsafe {\r\n          *vid_1 = x_char;\r\n          *color_1 = col;\r\n      }\r\n      //loop till the world ends\r\n      loop{}\r\n  }\r\n  //rlibc copy\r\n  #[no_mangle]\r\n  pub unsafe extern fn memcpy(dest: *mut u8, src: *const u8, n: usize) -> *mut u8{\r\n      let mut i = 0;\r\n      while i < n {\r\n          *dest.offset(i as isize) = *src.offset(i as isize);\r\n          i += 1;\r\n      }\r\n      dest\r\n  }\r\n  #[no_mangle]\r\n  pub unsafe extern fn memcmp(s1: *const u8, s2: *const u8, n: usize) -> i32{\r\n      let mut i = 0;\r\n      while i < n {\r\n          let a = *s1.offset(i as isize);\r\n          let b = *s2.offset(i as isize);\r\n          if a != b {\r\n              return a as i32 - b as i32;\r\n          }\r\n          i += 1;\r\n      }\r\n      0\r\n  }\r\n  #[no_mangle]\r\n  pub unsafe extern fn memset(s: *mut u8, c: i32, n: usize) -> *mut u8{\r\n      let mut i = 0;\r\n      while i < n {\r\n          *s.offset(i as isize) = c as u8;\r\n          i += 1;\r\n      }\r\n      s\r\n  }\r\n  fn test_loop(){\r\n     for x in 0..10{\r\n\r\n      }\r\n  }\r\n  #[panic_handler]\r\n  fn panic(_panic: &PanicInfo<'_>) -> ! {\r\n      loop{ abort() }\r\n  }\r\n```\r\n\r\n### Custom Target Spec\r\n```json\r\n{\r\n  \"llvm-target\": \"x86_64-unknown-none\",\r\n  \"data-layout\": \"e-m:e-i64:64-f80:128-n8:16:32-S128-p0:32:64:32\",\r\n  \"linker-flavor\": \"ld\",\r\n  \"target-endian\": \"little\",\r\n  \"target-pointer-width\": \"32\",\r\n  \"target-c-int-width\": \"32\",\r\n  \"arch\": \"x86_64\",\r\n  \"os\": \"none\",\r\n  \"disable-redzone\": true,\r\n  \"features\": \"-mmx,-sse,+soft-float\"\r\n}\r\n```\r\n### Custom Target Spec (this one compiles)\r\n```json\r\n{\r\n  \"llvm-target\": \"x86_64-unknown-none\",\r\n  \"data-layout\": \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\",\r\n  \"linker-flavor\": \"ld\",\r\n  \"target-endian\": \"little\",\r\n  \"target-pointer-width\": \"64\",\r\n  \"target-c-int-width\": \"32\",\r\n  \"arch\": \"x86_64\",\r\n  \"os\": \"none\",\r\n  \"disable-redzone\": true,\r\n  \"features\": \"-mmx,-sse,+soft-float\"\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.55.0-nightly (149f4836d 2021-06-17)\r\nbinary: rustc\r\ncommit-hash: 149f4836dd6d9e789a26dca16dc034588866894e\r\ncommit-date: 2021-06-17\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.55.0-nightly\r\nLLVM version: 12.0.1\r\n~/personal/development/os/kernel/rust\r\n```\r\n\r\n### Error output\r\n\r\n```\r\ncargo build -Z build-std --target kernel-os.json --verbose\r\n   Compiling core v0.0.0 (/home/user/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core)\r\n       Fresh cc v1.0.68\r\n     Running `rustc --crate-name core --edition=2018 /home/user/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C panic=abort -C embed-bitcode=no -C debuginfo=2 -C metadata=51b123216f6a4d0d -C extra-filename=-51b123216f6a4d0d --out-dir /home/user/personal/development/os/kernel/rust/target/kernel-os/debug/deps --target /home/user/personal/development/os/kernel/rust/kernel-os.json -Z force-unstable-if-unmarked -L dependency=/home/user/personal/development/os/kernel/rust/target/kernel-os/debug/deps -L dependency=/home/user/personal/development/os/kernel/rust/target/debug/deps --cap-lints allow`\r\n   Compiling rustc-std-workspace-core v1.99.0 (/home/user/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/rustc-std-workspace-core)\r\n     Running `rustc --crate-name rustc_std_workspace_core --edition=2018 /home/user/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/rustc-std-workspace-core/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C panic=abort -C embed-bitcode=no -C debuginfo=2 -C metadata=59540977353716dd -C extra-filename=-59540977353716dd --out-dir /home/user/personal/development/os/kernel/rust/target/kernel-os/debug/deps --target /home/user/personal/development/os/kernel/rust/kernel-os.json -Z force-unstable-if-unmarked -L dependency=/home/user/personal/development/os/kernel/rust/target/kernel-os/debug/deps -L dependency=/home/user/personal/development/os/kernel/rust/target/debug/deps --extern core=/home/user/personal/development/os/kernel/rust/target/kernel-os/debug/deps/libcore-51b123216f6a4d0d.rmeta --cap-lints allow`\r\nLLVM ERROR: Cannot select: 0x7fac71d99000: ch = brind 0x7fac71d99270:1, 0x7fac71d99068\r\n  0x7fac71d99068: i32 = add 0x7fac71d99270, 0x7fac71d99680\r\n    0x7fac71d99270: i32,ch = load<(load 4 from jump-table)> 0x7fac71d99750:1, 0x7fac71d990d0, undef:i32\r\n      0x7fac71d990d0: i32 = add 0x7fac71d99478, 0x7fac71d99680\r\n        0x7fac71d99478: i32 = shl 0x7fac71d99750, Constant:i8<2>\r\n          0x7fac71d99750: i32,ch = CopyFromReg 0x7fac71cb63e8, Register:i32 %2\r\n            0x7fac71d991a0: i32 = Register %2\r\n          0x7fac71d99618: i8 = Constant<2>\r\n        0x7fac71d99680: i32 = X86ISD::WrapperRIP TargetJumpTable:i32<0>\r\n          0x7fac71d99340: i32 = TargetJumpTable<0>\r\n      0x7fac71d99208: i32 = undef\r\n    0x7fac71d99680: i32 = X86ISD::WrapperRIP TargetJumpTable:i32<0>\r\n      0x7fac71d99340: i32 = TargetJumpTable<0>\r\nIn function: _ZN4core3num5error13ParseIntError13__description17he098af9a8c47c09fE\r\nerror: could not compile `core`\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --crate-name core --edition=2018 /home/user/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C panic=abort -C embed-bitcode=no -C debuginfo=2 -C metadata=51b123216f6a4d0d -C extra-filename=-51b123216f6a4d0d --out-dir /home/user/personal/development/os/kernel/rust/target/kernel-os/debug/deps --target /home/user/personal/development/os/kernel/rust/kernel-os.json -Z force-unstable-if-unmarked -L dependency=/home/user/personal/development/os/kernel/rust/target/kernel-os/debug/deps -L dependency=/home/user/personal/development/os/kernel/rust/target/debug/deps --cap-lints allow` (exit status: 101)\r\nwarning: build failed, waiting for other jobs to finish...\r\nerror: build failed\r\n~/personal/development/os/kernel/rust\r\n\u276f cargo build -Z build-std --target kernel-os.json --verbose\r\n   Compiling core v0.0.0 (/home/user/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core)\r\n       Fresh cc v1.0.68\r\n     Running `rustc --crate-name core --edition=2018 /home/user/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C panic=abort -C embed-bitcode=no -C debuginfo=2 -C metadata=51b123216f6a4d0d -C extra-filename=-51b123216f6a4d0d --out-dir /home/user/personal/development/os/kernel/rust/target/kernel-os/debug/deps --target /home/uset/personal/development/os/kernel/rust/kernel-os.json -Z force-unstable-if-unmarked -L dependency=/home/user/personal/development/os/kernel/rust/target/kernel-os/debug/deps -L dependency=/home/user/personal/development/os/kernel/rust/target/debug/deps --cap-lints allow`\r\nthread 'rustc' panicked at 'nonscalar layout for layout_scalar_valid_range type ptr::non_null::NonNull: Layout {\r\n    fields: Arbitrary {\r\n        offsets: [\r\n            Size {\r\n                raw: 0,\r\n            },\r\n        ],\r\n        memory_index: [\r\n            0,\r\n        ],\r\n    },\r\n    variants: Single {\r\n        index: 0,\r\n    },\r\n    abi: Aggregate {\r\n        sized: true,\r\n    },\r\n    largest_niche: None,\r\n    align: AbiAndPrefAlign {\r\n        abi: Align {\r\n            pow2: 3,\r\n        },\r\n        pref: Align {\r\n            pow2: 3,\r\n        },\r\n    },\r\n    size: Size {\r\n        raw: 8,\r\n    },\r\n}', compiler/rustc_middle/src/ty/layout.rs:960:30\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.55.0-nightly (149f4836d 2021-06-17) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z force-unstable-if-unmarked -C panic=abort -C embed-bitcode=no -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [layout_raw] computing layout of `ptr::non_null::NonNull<u8>`\r\n#1 [layout_raw] computing layout of `slice::iter::Iter<u8>`\r\nend of query stack\r\nerror: could not compile `core`\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --crate-name core --edition=2018 /home/user/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C panic=abort -C embed-bitcode=no -C debuginfo=2 -C metadata=51b123216f6a4d0d -C extra-filename=-51b123216f6a4d0d --out-dir /home/user/personal/development/os/kernel/rust/target/kernel-os/debug/deps --target /home/user/personal/development/os/kernel/rust/kernel-os.json -Z force-unstable-if-unmarked -L dependency=/home/user/personal/development/os/kernel/rust/target/kernel-os/debug/deps -L dependency=/home/user/personal/development/os/kernel/rust/target/debug/deps --cap-lints allow` (exit status: 101)\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/149f4836dd6d9e789a26dca16dc034588866894e/library/std/src/panicking.rs:515:5\r\n   1: std::panicking::begin_panic_fmt\r\n             at /rustc/149f4836dd6d9e789a26dca16dc034588866894e/library/std/src/panicking.rs:457:5\r\n   2: rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt>::layout_raw_uncached\r\n   3: rustc_middle::ty::layout::layout_raw\r\n   4: rustc_query_system::query::plumbing::get_query_impl\r\n   5: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::layout_raw\r\n   6: <rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt> as rustc_target::abi::LayoutOf>::layout_of\r\n   7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter\r\n   8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter\r\n   9: core::iter::adapters::process_results\r\n  10: rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt>::layout_raw_uncached\r\n  11: rustc_middle::ty::layout::layout_raw\r\n  12: rustc_query_system::query::plumbing::get_query_impl\r\n  13: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::layout_raw\r\n  14: <rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt> as rustc_target::abi::LayoutOf>::layout_of\r\n  15: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter\r\n  16: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter\r\n  17: core::iter::adapters::process_results\r\n  18: rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt>::layout_raw_uncached\r\n  19: rustc_middle::ty::layout::layout_raw\r\n  20: rustc_query_system::query::plumbing::get_query_impl\r\n  21: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::layout_raw\r\n  22: <rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt> as rustc_target::abi::LayoutOf>::layout_of\r\n  23: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter\r\n  24: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter\r\n  25: core::iter::adapters::process_results\r\n  26: rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt>::layout_raw_uncached\r\n  27: rustc_middle::ty::layout::layout_raw\r\n  28: rustc_query_system::query::plumbing::get_query_impl\r\n  29: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::layout_raw\r\n  30: <rustc_middle::ty::layout::LayoutCx<rustc_middle::ty::context::TyCtxt> as rustc_target::abi::LayoutOf>::layout_of\r\n  31: <rustc_mir::transform::const_prop::ConstProp as rustc_mir::transform::MirPass>::run_pass\r\n  32: rustc_mir::transform::run_passes\r\n  33: rustc_mir::transform::optimized_mir\r\n  34: rustc_query_system::query::plumbing::get_query_impl\r\n  35: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::optimized_mir\r\n  36: rustc_metadata::rmeta::encoder::EncodeContext::encode_crate_root\r\n  37: rustc_metadata::rmeta::encoder::encode_metadata_impl\r\n  38: rustc_data_structures::sync::join\r\n  39: rustc_metadata::rmeta::decoder::cstore_impl::<impl rustc_middle::middle::cstore::CrateStore for rustc_metadata::creader::CStore>::encode_metadata\r\n  40: rustc_middle::ty::context::TyCtxt::encode_metadata\r\n  41: rustc_interface::passes::QueryContext::enter\r\n  42: rustc_interface::queries::Queries::ongoing_codegen\r\n  43: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  44: rustc_span::with_source_map\r\n  45: rustc_interface::interface::create_compiler_and_run\r\n  46: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.55.0-nightly (149f4836d 2021-06-17) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z force-unstable-if-unmarked -C panic=abort -C embed-bitcode=no -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [layout_raw] computing layout of `ptr::non_null::NonNull<u8>`\r\n#1 [layout_raw] computing layout of `slice::iter::Iter<u8>`\r\n#2 [layout_raw] computing layout of `option::Option<slice::iter::Iter<u8>>`\r\n#3 [layout_raw] computing layout of `iter::adapters::chain::Chain<slice::iter::Iter<u8>, slice::iter::Iter<u8>>`\r\n#4 [optimized_mir] optimizing MIR for `num::dec2flt::algorithm::fast_path`\r\nend of query stack\r\nerror: could not compile `core`\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "stillbeingnick", "id": 17696301, "node_id": "MDQ6VXNlcjE3Njk2MzAx", "avatar_url": "https://avatars.githubusercontent.com/u/17696301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stillbeingnick", "html_url": "https://github.com/stillbeingnick", "followers_url": "https://api.github.com/users/stillbeingnick/followers", "following_url": "https://api.github.com/users/stillbeingnick/following{/other_user}", "gists_url": "https://api.github.com/users/stillbeingnick/gists{/gist_id}", "starred_url": "https://api.github.com/users/stillbeingnick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stillbeingnick/subscriptions", "organizations_url": "https://api.github.com/users/stillbeingnick/orgs", "repos_url": "https://api.github.com/users/stillbeingnick/repos", "events_url": "https://api.github.com/users/stillbeingnick/events{/privacy}", "received_events_url": "https://api.github.com/users/stillbeingnick/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86496/timeline", "performed_via_github_app": null, "state_reason": "completed"}