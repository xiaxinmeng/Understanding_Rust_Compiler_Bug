{"url": "https://api.github.com/repos/rust-lang/rust/issues/71427", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71427/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71427/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71427/events", "html_url": "https://github.com/rust-lang/rust/issues/71427", "id": 604775152, "node_id": "MDU6SXNzdWU2MDQ3NzUxNTI=", "number": 71427, "title": "Miri crashes on dyn method receiver calls with arbitrary-self type", "user": {"login": "puckipedia", "id": 488734, "node_id": "MDQ6VXNlcjQ4ODczNA==", "avatar_url": "https://avatars.githubusercontent.com/u/488734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puckipedia", "html_url": "https://github.com/puckipedia", "followers_url": "https://api.github.com/users/puckipedia/followers", "following_url": "https://api.github.com/users/puckipedia/following{/other_user}", "gists_url": "https://api.github.com/users/puckipedia/gists{/gist_id}", "starred_url": "https://api.github.com/users/puckipedia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puckipedia/subscriptions", "organizations_url": "https://api.github.com/users/puckipedia/orgs", "repos_url": "https://api.github.com/users/puckipedia/repos", "events_url": "https://api.github.com/users/puckipedia/events{/privacy}", "received_events_url": "https://api.github.com/users/puckipedia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 125141240, "node_id": "MDU6TGFiZWwxMjUxNDEyNDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-dst", "name": "A-dst", "color": "f7e101", "default": false, "description": "Area: Dynamically Sized Types"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1244499056, "node_id": "MDU6TGFiZWwxMjQ0NDk5MDU2", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-miri", "name": "A-miri", "color": "f7e101", "default": false, "description": "Area: The miri tool"}, {"id": 1472515079, "node_id": "MDU6TGFiZWwxNDcyNTE1MDc5", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-arbitrary_self_types", "name": "F-arbitrary_self_types", "color": "f9c0cc", "default": false, "description": "`#![feature(arbitrary_self_types)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-22T13:51:27Z", "updated_at": "2020-05-10T16:40:18Z", "closed_at": "2020-05-10T16:40:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\ntrait Foo {\r\n    fn bar(self: Pin<&mut Self>) -> bool;\r\n}\r\n\r\nimpl Foo for &'static str {\r\n    fn bar(self: Pin<&mut Self>) -> bool {\r\n        true\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let mut test: Pin<Box<dyn Foo>> = Box::pin(\"foo\");\r\n    test.as_mut().bar();\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.44.0-nightly (7f3df5772 2020-04-16)\r\nbinary: rustc\r\ncommit-hash: 7f3df5772439eee1c512ed2eb540beef1124d236\r\ncommit-date: 2020-04-16\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.44.0-nightly\r\nLLVM version: 9.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: src/librustc_mir/interpret/place.rs:231: vtable not supported on type std::pin::Pin<&mut dyn Foo>\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:904:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1069\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1504\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:218\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:515\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc_middle::ty::context::tls::with_opt\r\n  18: rustc_middle::util::bug::opt_span_bug_fmt\r\n  19: rustc_middle::util::bug::bug_fmt\r\n  20: rustc_mir::interpret::terminator::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_fn_call\r\n  21: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::terminator\r\n  22: miri::eval::eval_main\r\n  23: rustc_middle::ty::context::tls::enter_global\r\n  24: <miri::MiriCompilerCalls as rustc_driver::Callbacks>::after_analysis\r\n  25: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  26: scoped_tls::ScopedKey<T>::set\r\n  27: rustc_ast::attr::with_globals\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71427/timeline", "performed_via_github_app": null, "state_reason": "completed"}