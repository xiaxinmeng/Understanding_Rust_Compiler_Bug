{"url": "https://api.github.com/repos/rust-lang/rust/issues/79634", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79634/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79634/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79634/events", "html_url": "https://github.com/rust-lang/rust/issues/79634", "id": 755270817, "node_id": "MDU6SXNzdWU3NTUyNzA4MTc=", "number": 79634, "title": "when program cause std::io::Error, can take the current path?", "user": {"login": "baoyachi", "id": 10433001, "node_id": "MDQ6VXNlcjEwNDMzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/10433001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/baoyachi", "html_url": "https://github.com/baoyachi", "followers_url": "https://api.github.com/users/baoyachi/followers", "following_url": "https://api.github.com/users/baoyachi/following{/other_user}", "gists_url": "https://api.github.com/users/baoyachi/gists{/gist_id}", "starred_url": "https://api.github.com/users/baoyachi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/baoyachi/subscriptions", "organizations_url": "https://api.github.com/users/baoyachi/orgs", "repos_url": "https://api.github.com/users/baoyachi/repos", "events_url": "https://api.github.com/users/baoyachi/events{/privacy}", "received_events_url": "https://api.github.com/users/baoyachi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-12-02T13:23:37Z", "updated_at": "2020-12-02T14:20:30Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "below code is a example about program cause error \r\n```rust\r\nuse std::fs;\r\n\r\nfn main() -> std::io::Result<()> {\r\n    let conf = read_cargo_conf()?;\r\n    println!(\"conf:{}\", conf);\r\n\r\n    let lock = read_cargo_lock()?;\r\n    println!(\"lock:{}\", lock);\r\n\r\n    Ok(())\r\n}\r\n\r\nfn read_cargo_conf() -> std::io::Result<String> {\r\n    fs::read_to_string(\"./Cargo.conf\")\r\n}\r\n\r\nfn read_cargo_lock() -> std::io::Result<String> {\r\n    fs::read_to_string(\"./Cargo.lock\")\r\n}\r\n```\r\n\r\nwhen `Cargo.conf` or `Cargo.lock` not exist, the cause error message not very clear. Below output error message\r\n```bash\r\n~ cargo run\r\nError: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }\r\n~\r\n```\r\n\r\n`No such file or directory` not clear with `Cargo.conf` or `Cargo.lock`. Shouble be changed with like this:\r\n\r\n```bash\r\n~ cargo run\r\nError: Os { code: 2, kind: NotFound, message: \"No such file or directory with `/root/rust-demo/Cargo.conf`\" }\r\n~\r\n```\r\nIs there an additional full_path to be more clear. That I can know my program cause error line.\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79634/timeline", "performed_via_github_app": null, "state_reason": null}