{"url": "https://api.github.com/repos/rust-lang/rust/issues/79745", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79745/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79745/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79745/events", "html_url": "https://github.com/rust-lang/rust/issues/79745", "id": 757766283, "node_id": "MDU6SXNzdWU3NTc3NjYyODM=", "number": 79745, "title": "Cast into constant-value generic parameter type causes rust compiler to crash", "user": {"login": "skejeton", "id": 27076041, "node_id": "MDQ6VXNlcjI3MDc2MDQx", "avatar_url": "https://avatars.githubusercontent.com/u/27076041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skejeton", "html_url": "https://github.com/skejeton", "followers_url": "https://api.github.com/users/skejeton/followers", "following_url": "https://api.github.com/users/skejeton/following{/other_user}", "gists_url": "https://api.github.com/users/skejeton/gists{/gist_id}", "starred_url": "https://api.github.com/users/skejeton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skejeton/subscriptions", "organizations_url": "https://api.github.com/users/skejeton/orgs", "repos_url": "https://api.github.com/users/skejeton/repos", "events_url": "https://api.github.com/users/skejeton/events{/privacy}", "received_events_url": "https://api.github.com/users/skejeton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 2237029335, "node_id": "MDU6TGFiZWwyMjM3MDI5MzM1", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-min_const_generics", "name": "F-min_const_generics", "color": "f9c0cc", "default": false, "description": "Minimal const generics MVP"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-12-05T19:40:56Z", "updated_at": "2020-12-05T20:59:58Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nCode that makes compiler crash\r\n```Rust\r\ntele.get_buf() as &buffer::Buffer<VgaChar, 2000>\r\n```\r\n\r\npassed into\r\n\r\n```Rust\r\npub const T_WIDTH: usize = 80;\r\npub const T_HEIGHT: usize = 25;\r\npub const T_SIZE: usize = T_WIDTH*T_HEIGHT;\r\n\r\npub fn vga_text_swap(buf: &crate::buffer::Buffer<VgaChar, T_SIZE>)\r\n```\r\n\r\ndeclaration of Buffer\r\n```Rust\r\npub struct Buffer<T: Default + Copy, const S: usize>\r\n{\r\n    contains: [T; S]\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0-nightly (1c389ffef 2020-11-24)\r\nbinary: rustc\r\ncommit-hash: 1c389ffeff814726dec325f0f2b0c99107df2673\r\ncommit-date: 2020-11-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.50.0-nightly\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'index out of bounds: the len is 0 but the index is 3', /cargo/registry/src/github.com-1ecc6299db9ec823/ena-0.14.0/src/snapshot_vec.rs:199:10\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: rustc 1.50.0-nightly (1c389ffef 2020-11-24) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z unstable-options -C opt-level=2 -C panic=abort -C embed-bitcode=no -C debuginfo=2 -C debug-assertions=on -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [type_implements_trait] evaluating `type_implements_trait` `(DefId(1:1974 ~ core[a213]::convert::From), &buffer::Buffer<vga_text::VgaChar, 2000_usize>, [&buffer::Buffer<u8, {_: usize}>], ParamEnv { caller_bounds: [], reveal: UserFacing })`\r\n#1 [typeck] type-checking `prelude`\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n\r\nthread 'rustc' panicked at 'index out of bounds: the len is 0 but the index is 3', /cargo/registry/src/github.com-1ecc6299db9ec823/ena-0.14.0/src/snapshot_vec.rs:199:10\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/std/src/panicking.rs:493:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/core/src/panicking.rs:92:14\r\n   2: core::panicking::panic_bounds_check\r\n             at /rustc/1c389ffeff814726dec325f0f2b0c99107df2673/library/core/src/panicking.rs:69:5\r\n   3: ena::unify::UnificationTable<S>::probe_value\r\n   4: <rustc_infer::infer::canonical::canonicalizer::Canonicalizer as rustc_middle::ty::fold::TypeFolder>::fold_const\r\n   5: rustc_middle::ty::fold::TypeFoldable::fold_with\r\n   6: <rustc_infer::infer::canonical::canonicalizer::Canonicalizer as rustc_middle::ty::fold::TypeFolder>::fold_ty\r\n   7: <rustc_infer::infer::canonical::canonicalizer::Canonicalizer as rustc_middle::ty::fold::TypeFolder>::fold_ty\r\n   8: rustc_middle::ty::fold::TypeFoldable::fold_with\r\n   9: rustc_middle::ty::fold::TypeFoldable::fold_with\r\n  10: rustc_middle::ty::fold::TypeFoldable::fold_with\r\n  11: rustc_infer::infer::canonical::canonicalizer::Canonicalizer::canonicalize\r\n  12: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt>::evaluate_obligation\r\n  13: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt>::evaluate_obligation_no_overflow\r\n  14: rustc_infer::infer::InferCtxtBuilder::enter\r\n  15: rustc_trait_selection::traits::type_implements_trait\r\n  16: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::type_implements_trait>::compute\r\n  17: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  18: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  19: rustc_data_structures::stack::ensure_sufficient_stack\r\n  20: rustc_query_system::query::plumbing::get_query_impl\r\n  21: rustc_typeck::check::cast::CastCheck::check\r\n  22: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_casts\r\n  23: rustc_infer::infer::InferCtxtBuilder::enter\r\n  24: rustc_typeck::check::typeck\r\n  25: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck>::compute\r\n  26: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  27: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  28: rustc_data_structures::stack::ensure_sufficient_stack\r\n  29: rustc_query_system::query::plumbing::get_query_impl\r\n  30: rustc_query_system::query::plumbing::ensure_query_impl\r\n  31: rustc_typeck::check::typeck_item_bodies\r\n  32: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck_item_bodies>::compute\r\n  33: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  34: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  35: rustc_data_structures::stack::ensure_sufficient_stack\r\n  36: rustc_query_system::query::plumbing::get_query_impl\r\n  37: rustc_typeck::check_crate\r\n  38: rustc_interface::passes::analysis\r\n  39: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  40: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  41: rustc_query_system::dep_graph::graph::DepGraph<K>::with_eval_always_task\r\n  42: rustc_data_structures::stack::ensure_sufficient_stack\r\n  43: rustc_query_system::query::plumbing::get_query_impl\r\n  44: rustc_interface::passes::QueryContext::enter\r\n  45: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  46: rustc_span::with_source_map\r\n  47: scoped_tls::ScopedKey<T>::set\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79745/timeline", "performed_via_github_app": null, "state_reason": null}