{"url": "https://api.github.com/repos/rust-lang/rust/issues/34656", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/34656/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/34656/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/34656/events", "html_url": "https://github.com/rust-lang/rust/issues/34656", "id": 163769723, "node_id": "MDU6SXNzdWUxNjM3Njk3MjM=", "number": 34656, "title": "Get rid of (almost all) drop flags with NonZero", "user": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-07-05T04:26:55Z", "updated_at": "2020-02-27T14:07:56Z", "closed_at": "2020-02-27T14:07:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "C++'s version of drop flags is to have the programmer null something in the move constructor. This is similar to what we required with `unsafe_no_drop_flag`, except it is done in the move constructor instead of the destructor.\n\nIt occurs to me that we can use this to get rid of almost all the drop flags. Most drop flags are on nonzero-containing structs, except for things like `File`.\n\nWhenever we have a `Drop` type on the stack in a situation that needs a drop flag, and it _unconditionally_ contains a NonZero, instead of inserting the drop flag, just null out the nonzero and check for it in the drop glue.\n\nWhen I say unconditionally, I mean that there can't be an enum in between. So while the following types can be optimized this way:\n\n``` rust\nVec<T>, Option<Vec<T>>\nstruct Foo {\n  x: Vec<T>\n}\nimpl Drop for Foo {}\n\n// this is okay, because the drop flag is attached to the vec\n// not the Bar. So we can pretend it is Quux after it has moved\n// out because nobody will read it\nenum Bar {\n Baz(Vec<T>, u8, Box<T>, ...)\n Quux\n}\n// Bar is not explicitly Drop\n```\n\nThe following types cannot:\n\n``` rust\nstruct Foo {\n  x: Option<Vec<T>>\n}\nimpl Drop for Foo {}\n\nenum Bar {\n Baz(Vec<T>, u8, Box<T>, ...)\n Quux\n}\nimpl Drop for Bar {}\n```\n\nSo, the type that is `Drop` (not any non-explicit-`Drop` structs or enums around it) must always contain a `NonZero<T>`, notwithstanding any changes in discriminants.\n\nConceptually, this optimization is just replacing drop types with `Option<DropType>` and moves with `.take()`, at a post-borrowck stage.\n\ncc @Aatch @eddyb @nikomatsakis \n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/34656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/34656/timeline", "performed_via_github_app": null, "state_reason": "completed"}