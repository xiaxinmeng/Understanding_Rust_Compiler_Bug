{"url": "https://api.github.com/repos/rust-lang/rust/issues/76200", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/76200/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/76200/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/76200/events", "html_url": "https://github.com/rust-lang/rust/issues/76200", "id": 690178640, "node_id": "MDU6SXNzdWU2OTAxNzg2NDA=", "number": 76200, "title": "Tracking Issue for forbidding unchecked generic expressions in constants", "user": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630636017, "node_id": "MDU6TGFiZWw2MzA2MzYwMTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-future-compatibility", "name": "C-future-compatibility", "color": "f5f1fd", "default": false, "description": "Category: future compatibility lints"}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-09-01T14:13:01Z", "updated_at": "2023-05-01T13:50:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is the **summary issue** for the `CONST_EVALUATABLE_UNCHECKED` future-compatibility warning. The goal of this page is to describe why this change was made and how you can fix code that is affected by it. It also provides a place to ask questions\r\nor register a complaint if you feel the change should not be made. For more information on the policy around future-compatibility warnings, see our [breaking change policy guidelines](https://github.com/rust-lang/rfcs/blob/master/text/1122-language-semver.md).\r\n\r\n### What is the warning for?\r\n\r\nIn version 1.43 we accidentally allowed some uses of generic parameters in repeat expressions. This has a few problems which are outlined in the [following document](https://hackmd.io/aZYPCFBBTyOdKTrqqy4Q3g?view) for now.\r\n\r\n### When will this warning  become a hard error?\r\n\r\nMost probably after [const well-formedness bounds](https://hackmd.io/OZG_XiLFRs2Xmw5s39jRzA?view) get stabilized, which is currently not yet implemented. There might be a subset of cases here which we can allow without needing any changes, but these require further careful consideration.\r\n\r\n### How to fix this?\r\n\r\nAs we only allowed generic constants where the actual type did not matter, it should always be possible to replace the generic parameters with dummy types. For example `[0; std::mem::size_of::<*mut T>()]` can be changed to `[0; std::mem::size_of::<*mut ()>()]`.\r\n\r\n**Please report your case here so we may take it into consideration when deciding on how to proceed.**", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/76200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/76200/timeline", "performed_via_github_app": null, "state_reason": null}