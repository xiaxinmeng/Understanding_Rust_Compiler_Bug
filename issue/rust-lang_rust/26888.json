{"url": "https://api.github.com/repos/rust-lang/rust/issues/26888", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/26888/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/26888/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/26888/events", "html_url": "https://github.com/rust-lang/rust/issues/26888", "id": 93802178, "node_id": "MDU6SXNzdWU5MzgwMjE3OA==", "number": 26888, "title": "Document replacement behavior of map and set insertion methods", "user": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-07-08T14:26:28Z", "updated_at": "2015-10-23T05:01:41Z", "closed_at": "2015-10-23T05:01:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The behavior of the following methods is undocumented when the key/item being inserted is equivalent to one already in the collection:\n- [`BTreeMap::insert`](https://doc.rust-lang.org/nightly/std/collections/struct.BTreeMap.html#method.insert)\n- [`BTreeSet::insert`](https://doc.rust-lang.org/nightly/std/collections/struct.BTreeSet.html#method.insert)\n- [`HashMap::insert`](https://doc.rust-lang.org/nightly/std/collections/struct.HashMap.html#method.insert)\n- [`HashSet::insert`](https://doc.rust-lang.org/nightly/std/collections/struct.HashSet.html#method.insert)\n\nThe following program demonstrates that the maps and sets do not replace their keys/items in this scenario:\n\n``` rust\nuse std::cmp::Ordering;\nuse std::collections::{BTreeMap, BTreeSet, HashMap, HashSet};\nuse std::hash::{Hash, Hasher};\n\n#[derive(Debug)]\nstruct Foo {\n    a: u32,\n    b: &'static str,\n}\n\nimpl PartialEq for Foo {\n    fn eq(&self, other: &Self) -> bool { self.a == other.a }\n}\n\nimpl Eq for Foo {}\n\nimpl Hash for Foo {\n    fn hash<H: Hasher>(&self, h: &mut H) { self.a.hash(h); }\n}\n\nimpl PartialOrd for Foo {\n    fn partial_cmp(&self, other: &Self) -> Option<Ordering> { self.a.partial_cmp(&other.a) }\n}\n\nimpl Ord for Foo {\n    fn cmp(&self, other: &Self) -> Ordering { self.a.cmp(&other.a) }\n}\n\nfn main() {\n    println!(\"BTreeMap:\");\n    let mut map = BTreeMap::new();\n    map.insert(Foo { a: 1, b: \"baz\" }, ());\n    map.insert(Foo { a: 1, b: \"xyz\" }, ());\n    for foo in map.keys() { println!(\"{:?}\", foo); }\n\n    println!(\"HashMap:\");\n    let mut map = HashMap::new();\n    map.insert(Foo { a: 1, b: \"baz\" }, ());\n    map.insert(Foo { a: 1, b: \"xyz\" }, ());\n    for foo in map.keys() { println!(\"{:?}\", foo); }\n\n    println!(\"BTreeSet:\");\n    let mut set = BTreeSet::new();\n    set.insert(Foo { a: 1, b: \"baz\" });\n    set.insert(Foo { a: 1, b: \"xyz\" });\n    for foo in &set { println!(\"{:?}\", foo); }\n\n    println!(\"HashSet:\");\n    let mut set = HashSet::new();\n    set.insert(Foo { a: 1, b: \"baz\" });\n    set.insert(Foo { a: 1, b: \"xyz\" });\n    for foo in &set { println!(\"{:?}\", foo); }\n}\n```\n\nOutput:\n\n```\nBTreeMap:\nFoo { a: 1, b: \"baz\" }\nHashMap:\nFoo { a: 1, b: \"baz\" }\nBTreeSet:\nFoo { a: 1, b: \"baz\" }\nHashSet:\nFoo { a: 1, b: \"baz\" }\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/26888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/26888/timeline", "performed_via_github_app": null, "state_reason": "completed"}