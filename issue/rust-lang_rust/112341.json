{"url": "https://api.github.com/repos/rust-lang/rust/issues/112341", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112341/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112341/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112341/events", "html_url": "https://github.com/rust-lang/rust/issues/112341", "id": 1743358565, "node_id": "I_kwDOAAsO6M5n6Ypl", "number": 112341, "title": "Impls are not resolved correctly when using generic const expressions", "user": {"login": "wdanilo", "id": 1623053, "node_id": "MDQ6VXNlcjE2MjMwNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1623053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wdanilo", "html_url": "https://github.com/wdanilo", "followers_url": "https://api.github.com/users/wdanilo/followers", "following_url": "https://api.github.com/users/wdanilo/following{/other_user}", "gists_url": "https://api.github.com/users/wdanilo/gists{/gist_id}", "starred_url": "https://api.github.com/users/wdanilo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wdanilo/subscriptions", "organizations_url": "https://api.github.com/users/wdanilo/orgs", "repos_url": "https://api.github.com/users/wdanilo/repos", "events_url": "https://api.github.com/users/wdanilo/events{/privacy}", "received_events_url": "https://api.github.com/users/wdanilo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1967303144, "node_id": "MDU6TGFiZWwxOTY3MzAzMTQ0", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-negative_impls", "name": "F-negative_impls", "color": "f9c0cc", "default": false, "description": "#![feature(negative_impls)]"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}, {"id": 5226739262, "node_id": "LA_kwDOAAsO6M8AAAABN4m2Pg", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-incomplete-features", "name": "requires-incomplete-features", "color": "76dcde", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-06-06T08:29:16Z", "updated_at": "2023-06-06T08:53:48Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hi, consider the following code (live version [here](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=4c2df73816f9569e596f516117422151)), which basically implements heterogeneous lists: \r\n\r\n```rust\r\n#![feature(generic_const_exprs)]\r\n#![feature(auto_traits)]\r\n#![feature(negative_impls)]\r\n#![feature(trait_alias)]\r\n\r\n\r\n// =============\r\n// === HList ===\r\n// =============\r\n\r\npub struct Nil;\r\npub struct Cons<Head, Tail>(pub Head, pub Tail);\r\n\r\n\r\n// ===============\r\n// === NotZero ===\r\n// ===============\r\n\r\nstruct PhantomConstUsize<const N: usize>;\r\nauto trait NotZeroCheck {}\r\nimpl !NotZeroCheck for PhantomConstUsize<0> {}\r\ntrait NotZero<const N: usize> = where PhantomConstUsize<N>: NotZeroCheck;\r\n\r\n\r\n// ==================\r\n// === FieldIndex ===\r\n// ==================\r\n\r\npub trait FieldIndex<const I: usize> {\r\n    type Type;\r\n}\r\n\r\nimpl<H, T> FieldIndex<0> for Cons<H, T> {\r\n    type Type = H;\r\n}\r\n\r\nimpl<H, T, const N: usize> FieldIndex<N> for Cons<H, T>\r\nwhere\r\n    (): NotZero<N>,\r\n    T: FieldIndex<{ N - 1 }>,\r\n{\r\n    type Type = <T as FieldIndex<{ N - 1 }>>::Type;\r\n}\r\n\r\npub type FieldAt<const I: usize, T> = <T as FieldIndex<I>>::Type;\r\n\r\n\r\n// =============\r\n// === Tests ===\r\n// =============\r\n\r\ntype Test0 = FieldAt<0, Cons<usize, Cons<usize, Cons<usize, Nil>>>>;\r\ntype Test1 = FieldAt<1, Cons<usize, Cons<usize, Cons<usize, Nil>>>>;\r\ntype Test2 = FieldAt<2, Cons<usize, Cons<usize, Cons<usize, Nil>>>>;\r\n\r\nfn main() {\r\n    let t0: Test0 = 1; // WORKS OK\r\n    let t1: Test1 = 1; // WORKS OK\r\n    // let t2: Test2 = 1; // DOES NOT WORK\r\n}\r\n```\r\n\r\nAfter uncommenting the last line we got an error:\r\n\r\n```\r\nthe trait bound `Cons<usize, Cons<usize, Nil>>: FieldIndex<{ N - 1 }>` is not satisfied\r\n```\r\n\r\nWhich is incorrect. Please note, that Rust was able to resolve it for `N=0` and `N=1`, but not for `N=2`.\r\n\r\nAnother bug is that if we reverse the order of these lines:\r\n\r\n```\r\n    (): NotZero<N>,\r\n    T: FieldIndex<{ N - 1 }>,\r\n```\r\n\r\nThe code does not compile either.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112341/timeline", "performed_via_github_app": null, "state_reason": null}