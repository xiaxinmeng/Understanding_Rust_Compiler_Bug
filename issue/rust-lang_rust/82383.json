{"url": "https://api.github.com/repos/rust-lang/rust/issues/82383", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82383/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82383/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82383/events", "html_url": "https://github.com/rust-lang/rust/issues/82383", "id": 813058850, "node_id": "MDU6SXNzdWU4MTMwNTg4NTA=", "number": 82383, "title": "Document the definition of the word \"unwrap\" as used by Rust", "user": {"login": "trevyn", "id": 230691, "node_id": "MDQ6VXNlcjIzMDY5MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/230691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trevyn", "html_url": "https://github.com/trevyn", "followers_url": "https://api.github.com/users/trevyn/followers", "following_url": "https://api.github.com/users/trevyn/following{/other_user}", "gists_url": "https://api.github.com/users/trevyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/trevyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trevyn/subscriptions", "organizations_url": "https://api.github.com/users/trevyn/orgs", "repos_url": "https://api.github.com/users/trevyn/repos", "events_url": "https://api.github.com/users/trevyn/events{/privacy}", "received_events_url": "https://api.github.com/users/trevyn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-02-22T02:35:31Z", "updated_at": "2021-02-23T04:51:57Z", "closed_at": "2021-02-23T04:51:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": ">I was teaching a newbie some Rust, and doing the usual hand-waving about error handling using unwrap. They asked what 'unwrap' means. I said look it up in the docs. The docs read (paraphrased) \"unwrap unwraps\". I was embarrassed.\r\n\r\n[#68918 Don't use the word \"unwrap\" to describe \"unwrap\" methods](https://github.com/rust-lang/rust/pull/68918)\r\n\r\nThe English word \"unwrap\" is used in the name of numerous methods in `core` and `std`, but is not defined by the documentation and does not have a commonly accepted concrete definition in computer science. The everyday concept of \"unwrapping\" is not detailed enough to resolve questions about the precise meaning of the term as it is used in Rust.\r\n\r\nExisting methods:\r\n\r\n| | methods |\r\n| - | - |\r\n| `Result` | `unwrap`, `unwrap_or`, `unwrap_or_else`, `unwrap_or_default`, `unwrap_err` |\r\n| `Option` | `unwrap`, `unwrap_or`, `unwrap_or_else`, `unwrap_or_default`, `unwrap_none` (unstable) |\r\n| `Rc` | `try_unwrap` |\r\n| `Arc` | `try_unwrap` |\r\n\r\nBased on this existing usage, I propose a definition:\r\n\r\n>An \"unwrap\" method in Rust extracts an underlying value from one or more containers, consumes the container(s), and returns an owned value.\r\n>\r\n>`Result::unwrap()` and `Option::unwrap()` (and their variants) unwrap *two* containers in one step: The abstract `Result` or `Option` itself, *and* the concrete `Ok` or `Some` tuple variant inside. You might think of `unwrap` as being shorthand for \"unwrap_ok\" and \"unwrap_some\", though these methods do not exist.\r\n>\r\n> `Result::unwrap_err()` and `Option::unwrap_none()` (nightly only) express that the `Err` or `None` variants are expected instead, and that those containers are the ones that should be unwrapped.\r\n\r\nOutstanding questions: Where is the most appropriate place to put a definition of \"unwrap\"? Is The Book canonical?\r\n\r\nPrevious discussion in:\r\n[#62633 Tracking issue for Option::expect_none(msg) and unwrap_none()](https://github.com/rust-lang/rust/issues/62633)\r\n[#73077 Stabilize Option::expect_none(msg) and Option::unwrap_none()](https://github.com/rust-lang/rust/pull/73077)\r\n[#77326 Stabilize `Option::unwrap_none` and `Option::expect_none`](https://github.com/rust-lang/rust/pull/77326)\r\n[#68849 Don't use the word 'unwrap' to describe core 'unwrap' functions](https://github.com/rust-lang/rust/pull/68849)\r\n[#68918 Don't use the word \"unwrap\" to describe \"unwrap\" methods](https://github.com/rust-lang/rust/pull/68918)\r\n[#23713 Make Option.unwrap documentation more precise](https://github.com/rust-lang/rust/issues/23713)\r\n[#19149 Rename unwrap functions to into_inner](https://github.com/rust-lang/rust/pull/19149)\r\n[#430 RFC: Finalizing more naming conventions](https://github.com/rust-lang/rfcs/pull/430)\r\netc...\r\n", "closed_by": {"login": "trevyn", "id": 230691, "node_id": "MDQ6VXNlcjIzMDY5MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/230691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trevyn", "html_url": "https://github.com/trevyn", "followers_url": "https://api.github.com/users/trevyn/followers", "following_url": "https://api.github.com/users/trevyn/following{/other_user}", "gists_url": "https://api.github.com/users/trevyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/trevyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trevyn/subscriptions", "organizations_url": "https://api.github.com/users/trevyn/orgs", "repos_url": "https://api.github.com/users/trevyn/repos", "events_url": "https://api.github.com/users/trevyn/events{/privacy}", "received_events_url": "https://api.github.com/users/trevyn/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82383/timeline", "performed_via_github_app": null, "state_reason": "completed"}