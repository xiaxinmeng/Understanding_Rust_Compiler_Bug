{"url": "https://api.github.com/repos/rust-lang/rust/issues/17010", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/17010/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/17010/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/17010/events", "html_url": "https://github.com/rust-lang/rust/issues/17010", "id": 42016332, "node_id": "MDU6SXNzdWU0MjAxNjMzMg==", "number": 17010, "title": "Range is odd when used with floating point types", "user": {"login": "Veedrac", "id": 2867413, "node_id": "MDQ6VXNlcjI4Njc0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2867413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veedrac", "html_url": "https://github.com/Veedrac", "followers_url": "https://api.github.com/users/Veedrac/followers", "following_url": "https://api.github.com/users/Veedrac/following{/other_user}", "gists_url": "https://api.github.com/users/Veedrac/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veedrac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veedrac/subscriptions", "organizations_url": "https://api.github.com/users/Veedrac/orgs", "repos_url": "https://api.github.com/users/Veedrac/repos", "events_url": "https://api.github.com/users/Veedrac/events{/privacy}", "received_events_url": "https://api.github.com/users/Veedrac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 28, "created_at": "2014-09-05T05:47:49Z", "updated_at": "2015-01-23T04:37:02Z", "closed_at": "2015-01-23T04:37:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For one,\n\n```\nfn main() {\n    // The .take is needed to make this terminate\n    let mut bad_range = range(0f32, 1e8).take(1000_000_000);\n\n    let (min, max) = bad_range.size_hint();\n    let max = max.unwrap();\n\n    println!(\n        \"min: {:e} \u2264 length: {:e} \u2264 max: {:e}\",\n        min               .to_f64().unwrap(),\n        bad_range.count() .to_f64().unwrap(),\n        max               .to_f64().unwrap()\n    );\n}\n```\n\noutputs `min: 1e8 \u2264 length: 1e9 \u2264 max: 1e8`.\n\nThere's no real decision about what to do when rounding errors means `r.next() == r.next()`, such as with:\n\n```\nfn main() {\n    let mut bad_range = range(1e8f32, 1e8+8.0);\n    println!(\"{}\", bad_range.next() == bad_range.next());\n}\n```\n\nwhich currently results in an infinite iterator.\n\nPersonally I don't see a big problem with it, but unless floating ranges are banned it should at least avoid breaking `size_hint`.\n\n_Edit:_\n\nFurther, rounding currently means that the size hints can be wrong. Both the upper bound:\n\n```\nfn main() {\n    println!(\"{}\", range(0f32, 1.5f32).count()); // 2\n    println!(\"{}\", range(0f32, 1.5f32).size_hint()); // (1, Some(1))\n}\n```\n\nand the lower bound:\n\n```\nfn main() {\n    println!(\"{}\", range(4194303.8f32, 4194305f32).count()); // 1\n    println!(\"{}\", range(4194303.8f32, 4194305f32).size_hint()); // (2, Some(2))\n}\n```\n", "closed_by": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/17010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/17010/timeline", "performed_via_github_app": null, "state_reason": "completed"}