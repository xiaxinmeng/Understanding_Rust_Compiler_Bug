{"url": "https://api.github.com/repos/rust-lang/rust/issues/91419", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91419/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91419/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91419/events", "html_url": "https://github.com/rust-lang/rust/issues/91419", "id": 1068317700, "node_id": "I_kwDOAAsO6M4_rTwE", "number": 91419, "title": "bug reports output that was created after command cargo clippy --fix --allow-dirty", "user": {"login": "bobi6666", "id": 55102532, "node_id": "MDQ6VXNlcjU1MTAyNTMy", "avatar_url": "https://avatars.githubusercontent.com/u/55102532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobi6666", "html_url": "https://github.com/bobi6666", "followers_url": "https://api.github.com/users/bobi6666/followers", "following_url": "https://api.github.com/users/bobi6666/following{/other_user}", "gists_url": "https://api.github.com/users/bobi6666/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobi6666/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobi6666/subscriptions", "organizations_url": "https://api.github.com/users/bobi6666/orgs", "repos_url": "https://api.github.com/users/bobi6666/repos", "events_url": "https://api.github.com/users/bobi6666/events{/privacy}", "received_events_url": "https://api.github.com/users/bobi6666/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-12-01T11:57:28Z", "updated_at": "2022-06-21T02:47:09Z", "closed_at": "2022-06-21T02:47:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\n<code>\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\n<rustc output>\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\n\r\n```\r\n<proposed output>\r\n```\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n\r\n```\r\n> warning: this looks like you are trying to use `.. -= ..`, but you really are doing `.. = (- ..)`\r\n   --> src\\lib.rs:269:8\r\n    |\r\n269 | *result=-1;\r\n    |        ^^\r\n    |\r\n    = note: `#[warn(clippy::suspicious_assignment_formatting)]` on by default\r\n    = note: to remove this lint, use either `-=` or `= -`\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_assignment_formatting\r\n\r\nwarning: this looks like you are trying to use `.. -= ..`, but you really are doing `.. = (- ..)`\r\n   --> src\\lib.rs:279:27\r\n    |\r\n279 | if MESSAGES.is_empty() {ID=-1;}\r\n    |                           ^^\r\n    |\r\n    = note: to remove this lint, use either `-=` or `= -`\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_assignment_formatting\r\n\r\nwarning: 6 bindings with single-character names in scope\r\n   --> src\\lib.rs:290:5\r\n    |\r\n290 | let a=creationtime as u64;\r\n    |     ^\r\n291 | let b=lastaccesstime as u64;\r\n    |     ^\r\n292 | let c=lastwritetime as u64;\r\n    |     ^\r\n293 | let d:(u32,u32)=(a as u32,(a>>32) as u32);\r\n    |     ^\r\n294 | let e:(u32,u32)=(b as u32,(b>>32) as u32);\r\n    |     ^\r\n295 | let f:(u32,u32)=(c as u32,(c>>32) as u32);\r\n    |     ^\r\n    |\r\n    = note: `#[warn(clippy::many_single_char_names)]` on by default\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#many_single_char_names\r\n\r\nerror[E0308]: mismatched types\r\n  --> src\\mods\\utils.rs:35:58\r\n   |\r\n35 | pub unsafe fn get_process_memory_usage_info(flag: u8) -> u32{\r\n   |               -----------------------------              ^^^ expected `u32`, found `()`\r\n   |               |\r\n   |               implicitly returns `()` as its body has no tail or `return` expression\r\n...\r\n51 | _ => 0};\r\n   |        - help: consider removing this semicolon\r\n\r\nerror: aborting due to previous error; 3 warnings emitted\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nOriginal diagnostics will follow.\r\n\r\nwarning: unused imports: `Shake128`, `Shake256`\r\n --> src\\mods\\cryptography.rs:5:52\r\n  |\r\n5 | use sha3::{Sha3_224, Sha3_256, Sha3_384, Sha3_512, Shake128, Shake256, Keccak224, Keccak256, Keccak384, Keccak512};\r\n  |                                                    ^^^^^^^^  ^^^^^^^^\r\n  |\r\n  = note: `#[warn(unused_imports)]` on by default\r\n\r\nwarning: unused import: `winapi::shared::windef::HWND`\r\n --> src\\mods\\utils.rs:1:5\r\n  |\r\n1 | use winapi::shared::windef::HWND;\r\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: this looks like you are trying to use `.. -= ..`, but you really are doing `.. = (- ..)`\r\n   --> src\\lib.rs:269:8\r\n    |\r\n269 | *result=-1;\r\n    |        ^^\r\n    |\r\n    = note: `#[warn(clippy::suspicious_assignment_formatting)]` on by default\r\n    = note: to remove this lint, use either `-=` or `= -`\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_assignment_formatting\r\n\r\nwarning: this looks like you are trying to use `.. -= ..`, but you really are doing `.. = (- ..)`\r\n   --> src\\lib.rs:279:27\r\n    |\r\n279 | if MESSAGES.is_empty() {ID=-1;}\r\n    |                           ^^\r\n    |\r\n    = note: to remove this lint, use either `-=` or `= -`\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_assignment_formatting\r\n\r\nwarning: 6 bindings with single-character names in scope\r\n   --> src\\lib.rs:290:5\r\n    |\r\n290 | let a=creationtime as u64;\r\n    |     ^\r\n291 | let b=lastaccesstime as u64;\r\n    |     ^\r\n292 | let c=lastwritetime as u64;\r\n    |     ^\r\n293 | let d:(u32,u32)=(a as u32,(a>>32) as u32);\r\n    |     ^\r\n294 | let e:(u32,u32)=(b as u32,(b>>32) as u32);\r\n    |     ^\r\n295 | let f:(u32,u32)=(c as u32,(c>>32) as u32);\r\n    |     ^\r\n    |\r\n    = note: `#[warn(clippy::many_single_char_names)]` on by default\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#many_single_char_names\r\n\r\nwarning: unneeded `return` statement\r\n  --> src\\mods\\utils.rs:42:6\r\n   |\r\n42 | 0 => return memory_info_struct.PageFaultCount as u32,\r\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `memory_info_struct.PageFaultCount as u32`\r\n   |\r\n   = note: `#[warn(clippy::needless_return)]` on by default\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\r\n\r\nwarning: unneeded `return` statement\r\n  --> src\\mods\\utils.rs:43:6\r\n   |\r\n43 | 1 => return memory_info_struct.PeakWorkingSetSize as u32,\r\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `memory_info_struct.PeakWorkingSetSize as u32`\r\n   |\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\r\n\r\nwarning: unneeded `return` statement\r\n  --> src\\mods\\utils.rs:44:6\r\n   |\r\n44 | 2 => return memory_info_struct.WorkingSetSize as u32,\r\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `memory_info_struct.WorkingSetSize as u32`\r\n   |\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\r\n\r\nwarning: unneeded `return` statement\r\n  --> src\\mods\\utils.rs:45:6\r\n   |\r\n45 | 3 => return memory_info_struct.QuotaPeakPagedPoolUsage as u32,\r\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `memory_info_struct.QuotaPeakPagedPoolUsage as u32`\r\n   |\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\r\n\r\nwarning: unneeded `return` statement\r\n  --> src\\mods\\utils.rs:46:6\r\n   |\r\n46 | 4 => return memory_info_struct.QuotaPagedPoolUsage as u32,\r\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `memory_info_struct.QuotaPagedPoolUsage as u32`\r\n   |\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\r\n\r\nwarning: unneeded `return` statement\r\n  --> src\\mods\\utils.rs:47:6\r\n   |\r\n47 | 5 => return memory_info_struct.QuotaPeakNonPagedPoolUsage as u32,\r\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `memory_info_struct.QuotaPeakNonPagedPoolUsage as u32`\r\n   |\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\r\n\r\nwarning: unneeded `return` statement\r\n  --> src\\mods\\utils.rs:48:6\r\n   |\r\n48 | 6 => return memory_info_struct.QuotaNonPagedPoolUsage as u32,\r\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `memory_info_struct.QuotaNonPagedPoolUsage as u32`\r\n   |\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\r\n\r\nwarning: unneeded `return` statement\r\n  --> src\\mods\\utils.rs:49:6\r\n   |\r\n49 | 7 => return memory_info_struct.PagefileUsage as u32,\r\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `memory_info_struct.PagefileUsage as u32`\r\n   |\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\r\n\r\nwarning: unneeded `return` statement\r\n  --> src\\mods\\utils.rs:50:6\r\n   |\r\n50 | 8 => return memory_info_struct.PeakPagefileUsage as u32,\r\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `memory_info_struct.PeakPagefileUsage as u32`\r\n   |\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\r\n\r\nwarning: unneeded `return` statement\r\n  --> src\\mods\\utils.rs:51:6\r\n   |\r\n51 | _ => return 0};\r\n   |      ^^^^^^^^ help: remove `return`: `0`\r\n   |\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n  --> src\\lib.rs:57:1\r\n   |\r\n57 | / pub unsafe extern \"C\" fn get_file_size(filenameptr: *const c_char)-> f64{\r\n58 | | if SW == 0 {return 0.0};\r\n59 | | let filehandle=fileapi::CreateFileA(filenameptr, 0, 0x00000001|0x00000002,null_mut(), 3, 0x80, null_mut());\r\n60 | | if filehandle==handleapi::INVALID_HANDLE_VALUE {return 0.0}\r\n...  |\r\n63 | | result\r\n64 | | }\r\n   | |_^\r\n   |\r\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n  --> src\\lib.rs:67:1\r\n   |\r\n67 | / pub unsafe extern \"C\" fn unlock_nw_engine(codeptr: *mut c_char) -> u8 {\r\n68 | | let code: &CStr = CStr::from_ptr(codeptr);\r\n69 | | if code.to_str().unwrap() == \"6245.2387.1500.xc25\" {\r\n70 | | SW = 1;\r\n...  |\r\n74 | | }\r\n75 | | }\r\n   | |_^\r\n   |\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n  --> src\\lib.rs:78:1\r\n   |\r\n78 | / pub unsafe extern \"C\" fn generate_file_hash(filenameptr: *mut c_char, flag: u8, result_ptr:*mut i32) {\r\n79 | | if SW==0 {*result_ptr=0x0; return;}\r\n80 | | let filehandle=fileapi::CreateFileA(filenameptr, 0x80000000, 0x00000001,null_mut(), 3, 0x80, null_mut());\r\n81 | | if filehandle==handleapi::INVALID_HANDLE_VALUE {*result_ptr=0x0; return;}\r\n...  |\r\n85 | | *result_ptr=CString::new(cryptography::create_hash(&readbuffer, flag)).unwrap().into_raw() as i32;\r\n86 | | }\r\n   | |_^\r\n   |\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n  --> src\\lib.rs:89:1\r\n   |\r\n89 | / pub unsafe extern \"C\" fn generate_string_hash(hashptr: *mut c_char, flag: u8, result_ptr:*mut i32) {\r\n90 | | if SW == 0 {return;}\r\n91 | | let chash: &CStr = CStr::from_ptr(hashptr);\r\n92 | | *result_ptr=CString::new(cryptography::create_hash(chash.to_bytes(), flag)).unwrap().into_raw() as i32;\r\n93 | | }\r\n   | |_^\r\n   |\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n  --> src\\lib.rs:98:46\r\n   |\r\n98 | let cfilename: &CStr =unsafe {CStr::from_ptr(filenameptr)};\r\n   |                                              ^^^^^^^^^^^\r\n   |\r\n   = note: `#[warn(clippy::not_unsafe_ptr_arg_deref)]` on by default\r\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:116:46\r\n    |\r\n116 | let cfilename: &CStr =unsafe {CStr::from_ptr(filenameptr)};\r\n    |                                              ^^^^^^^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n   --> src\\lib.rs:140:1\r\n    |\r\n140 | / pub unsafe extern \"C\" fn read_file(filenameptr: *const c_char, loadedbytesptr: *mut i32, filelenptr: *mut i32) {\r\n141 | | if SW==0 {\r\n142 | | *loadedbytesptr=0x0; return;}\r\n143 | | let filename=Arc::new(&*filenameptr);\r\n...   |\r\n159 | | threadhandle.join().unwrap();\r\n160 | | }\r\n    | |_^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:165:46\r\n    |\r\n165 | let cfilename: &CStr =unsafe {CStr::from_ptr(filenameptr)};\r\n    |                                              ^^^^^^^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n   --> src\\lib.rs:170:1\r\n    |\r\n170 | / pub unsafe extern \"C\" fn free_string(data: *mut c_char) {\r\n171 | | if SW==0 {return;}\r\n172 | | if!data.is_null() {CString::from_raw(data);}\r\n173 | | }\r\n    | |_^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n   --> src\\lib.rs:176:1\r\n    |\r\n176 | / pub unsafe extern \"C\" fn get_key_state(vk:i32,result:*mut i16) {\r\n177 | | if SW==0 {return;}\r\n178 | | *result=winuser::GetKeyState(vk);\r\n179 | | }\r\n    | |_^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n   --> src\\lib.rs:182:1\r\n    |\r\n182 | / pub unsafe extern \"C\" fn get_current_directory(ptr:*mut i32) {\r\n183 | | if SW==0 {*ptr=0x0; return;}\r\n184 | | let bytes:Vec<u8>=encode(current_dir().unwrap().to_str().unwrap());\r\n185 | | *ptr=CString::from_vec_unchecked(bytes).into_raw() as i32;\r\n186 | | }\r\n    | |_^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n   --> src\\lib.rs:189:1\r\n    |\r\n189 | / pub unsafe extern \"C\" fn pick_folder_dialog(default_path_ptr:*mut c_char,idptr:*mut i32) {\r\n190 | | if SW==0 {return;}\r\n191 | | ID+=1; *idptr=ID;\r\n192 | | let default_path_cstr:&CStr=CStr::from_ptr(default_path_ptr);\r\n...   |\r\n200 | | });\r\n201 | | }\r\n    | |_^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:206:17\r\n    |\r\n206 | unsafe {ID+=1; *idptr=ID;}\r\n    |                 ^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:207:51\r\n    |\r\n207 | let filter_list_cstr:&CStr=unsafe {CStr::from_ptr(filter_list_ptr)};\r\n    |                                                   ^^^^^^^^^^^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:209:52\r\n    |\r\n209 | let default_path_cstr:&CStr=unsafe {CStr::from_ptr(default_path_ptr)};\r\n    |                                                    ^^^^^^^^^^^^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:224:17\r\n    |\r\n224 | unsafe {ID+=1; *idptr=ID;}\r\n    |                 ^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:225:51\r\n    |\r\n225 | let filter_list_cstr:&CStr=unsafe {CStr::from_ptr(filter_list_ptr)};\r\n    |                                                   ^^^^^^^^^^^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:227:52\r\n    |\r\n227 | let default_path_cstr:&CStr=unsafe {CStr::from_ptr(default_path_ptr)};\r\n    |                                                    ^^^^^^^^^^^^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:242:17\r\n    |\r\n242 | unsafe {ID+=1; *idptr=ID;}\r\n    |                 ^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:243:51\r\n    |\r\n243 | let filter_list_cstr:&CStr=unsafe {CStr::from_ptr(filter_list_ptr)};\r\n    |                                                   ^^^^^^^^^^^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:245:52\r\n    |\r\n245 | let default_path_cstr:&CStr=unsafe {CStr::from_ptr(default_path_ptr)};\r\n    |                                                    ^^^^^^^^^^^^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:247:49\r\n    |\r\n247 | let separator_cstr:&CStr=unsafe {CStr::from_ptr(separator_ptr)};\r\n    |                                                 ^^^^^^^^^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:264:21\r\n    |\r\n264 | if i.1.is_empty() {*result=0; return;}\r\n    |                     ^^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:265:35\r\n    |\r\n265 | if i.1.contains(\"Dialog Error\") {*result=1; return;}\r\n    |                                   ^^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:266:8\r\n    |\r\n266 | else {*result=2; return;}\r\n    |        ^^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:269:2\r\n    |\r\n269 | *result=-1;\r\n    |  ^^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: all if blocks contain the same code at the end\r\n   --> src\\lib.rs:266:18\r\n    |\r\n266 | else {*result=2; return;}\r\n    |                  ^^^^^^^^\r\n    |\r\n    = note: `#[warn(clippy::branches_sharing_code)]` on by default\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#branches_sharing_code\r\nhelp: consider moving the end statements out like this\r\n    |\r\n266 ~ else {*result=2; }\r\n267 + return;\r\n    |\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:275:43\r\n    |\r\n275 | unsafe {if SW==0 || MESSAGES.is_empty() {*result=0x0; return;}\r\n    |                                           ^^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:278:2\r\n    |\r\n278 | *result=CString::from_vec_unchecked(encode(&MESSAGES.remove(i).1)).into_raw() as i32;\r\n    |  ^^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:283:2\r\n    |\r\n283 | *result=0x0;\r\n    |  ^^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: the loop variable `i` is used to index `MESSAGES`\r\n   --> src\\lib.rs:276:10\r\n    |\r\n276 | for i in 0..MESSAGES.len() {\r\n    |          ^^^^^^^^^^^^^^^^^\r\n    |\r\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\r\nhelp: consider using an iterator\r\n    |\r\n276 | for (i, <item>) in MESSAGES.iter().enumerate() {\r\n    |     ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n   --> src\\lib.rs:288:1\r\n    |\r\n288 | / pub unsafe extern \"C\" fn set_file_time(filenameptr:*const c_char, creationtime:f64, lastaccesstime:f64, lastwritetime:f64)->i32 {\r\n289 | | if SW==0 {return 0;}\r\n290 | | let a=creationtime as u64;\r\n291 | | let b=lastaccesstime as u64;\r\n...   |\r\n304 | | result\r\n305 | | }\r\n    | |_^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: this public function might dereference a raw pointer but is not marked `unsafe`\r\n   --> src\\lib.rs:311:47\r\n    |\r\n311 | let filehandle = unsafe {fileapi::CreateFileA(filenameptr, 0, 0x00000001, null_mut(), 3, 0x80, null_mut())};\r\n    |                                               ^^^^^^^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n   --> src\\lib.rs:326:1\r\n    |\r\n326 | / pub unsafe extern \"C\" fn path_exists(path:*const c_char, final_result: *mut i32) {\r\n327 | | if SW==0 {return;}\r\n328 | | match fileapi::GetFileAttributesA(path){\r\n329 | | fileapi::INVALID_FILE_ATTRIBUTES=>*final_result=0 ,\r\n330 | | _ => *final_result=1}\r\n331 | | }\r\n    | |_^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n   --> src\\lib.rs:334:1\r\n    |\r\n334 | / pub unsafe extern \"C\" fn delete_file_path(filenameptr: *const c_char) -> i32{\r\n335 | | if SW==0 {return 0;}\r\n336 | | fileapi::DeleteFileA(filenameptr)\r\n337 | | }\r\n    | |_^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n   --> src\\lib.rs:340:1\r\n    |\r\n340 | / pub unsafe extern \"C\" fn remove_empty_folder_path(filenameptr: *const c_char) ->i32{\r\n341 | | if SW==0 {return 0;}\r\n342 | | fileapi::RemoveDirectoryA(filenameptr)\r\n343 | | }\r\n    | |_^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n   --> src\\lib.rs:346:1\r\n    |\r\n346 | / pub unsafe extern \"C\" fn create_folder(filenameptr: *const c_char) ->i32{\r\n347 | | if SW==0 {return 0;}\r\n348 | | fileapi::CreateDirectoryA(filenameptr,null_mut())\r\n349 | | }\r\n    | |_^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n   --> src\\lib.rs:352:1\r\n    |\r\n352 | / pub unsafe extern \"C\" fn move_single_file(existing_file_name_ptr:*const c_char, new_file_name_ptr:*const c_char, flags:u32) ->i32{\r\n353 | | if SW==0 {return 0;}\r\n354 | | winbase::MoveFileExA(existing_file_name_ptr,new_file_name_ptr,flags)\r\n355 | | }\r\n    | |_^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n   --> src\\lib.rs:358:1\r\n    |\r\n358 | / pub unsafe extern \"C\" fn copy_single_file(existing_file_name_ptr:*const c_char, new_file_name_ptr:*const c_char, flag:i32) ->i32{\r\n359 | | if SW==0 {return 0;}\r\n360 | | winbase::CopyFileA(existing_file_name_ptr,new_file_name_ptr,flag)\r\n361 | | }\r\n    | |_^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n   --> src\\lib.rs:364:1\r\n    |\r\n364 | / pub unsafe extern \"C\" fn path_match_spec(file:*const c_char,spec:*const c_char)->i32 {\r\n365 | | if SW==0 {return 0;}\r\n366 | | PathMatchSpecA(file,spec)\r\n367 | | }\r\n    | |_^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n   --> src\\lib.rs:370:1\r\n    |\r\n370 | / pub unsafe extern \"C\" fn string_trim(original_string_ptr:*mut c_char, string_to_trim_ptr:*const c_char, result_ptr:*mut i32) {\r\n371 | | if SW==0 {return;}\r\n372 | | StrTrimA(original_string_ptr, string_to_trim_ptr);\r\n373 | | let buffer=std::mem::ManuallyDrop::new(CStr::from_ptr(original_string_ptr).to_bytes().to_vec());\r\n374 | | *result_ptr=buffer.as_ptr() as i32;\r\n375 | | }\r\n    | |_^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n   --> src\\lib.rs:378:1\r\n    |\r\n378 | / pub unsafe extern \"C\" fn wild_match_string(input:*const c_char, expression:*const c_char, case_sensitive:i32,result:*mut i32) {\r\n379 | | if SW==0 {return;}\r\n380 | | *result=SymMatchString(input,expression,case_sensitive)\r\n381 | | }\r\n    | |_^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n   --> src\\lib.rs:384:1\r\n    |\r\n384 | / pub unsafe extern \"C\" fn get_env(c_val: *const c_char, result_ptr:*mut i32) {\r\n385 | | if SW==0 {*result_ptr=0x0; return;}\r\n386 | | let val: &CStr = CStr::from_ptr(c_val);\r\n387 | | *result_ptr=CString::new(env::get_env(&decode(val.to_bytes()))).unwrap().into_raw() as i32;\r\n388 | | }\r\n    | |_^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: unsafe function's docs miss `# Safety` section\r\n   --> src\\lib.rs:391:1\r\n    |\r\n391 | / pub unsafe extern \"C\" fn get_process_memory_usage_info(flag: u8) -> u32{\r\n392 | | if SW == 0 { return 0};\r\n393 | | return utils::get_process_memory_usage_info(flag);\r\n394 | | }\r\n    | |_^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\r\n\r\nwarning: unneeded `return` statement\r\n   --> src\\lib.rs:393:1\r\n    |\r\n393 | return utils::get_process_memory_usage_info(flag);\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `utils::get_process_memory_usage_info(flag)`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\r\n\r\nwarning: `nwengine` (lib test) generated 60 warnings\r\nwarning: failed to automatically apply fixes suggested by rustc to crate `nwengine`\r\n\r\nafter fixes were automatically applied the compiler reported errors within these files:\r\n\r\n  * src\\lib.rs\r\n  * src\\mods\\utils.rs\r\n\r\nThis likely indicates a bug in either rustc or cargo itself,\r\nand we would appreciate a bug report! You're likely to see\r\na number of compiler warnings after this message which cargo\r\nattempted to fix but failed. If you could open an issue at\r\nhttps://github.com/rust-lang/rust/issues\r\nquoting the full output of this command we'd be very appreciative!\r\nNote that you may be able to make some more progress in the near-term\r\nfixing code with the `--broken-code` flag\r\n\r\nThe following errors were reported:\r\nwarning: this looks like you are trying to use `.. -= ..`, but you really are doing `.. = (- ..)`\r\n   --> src\\lib.rs:269:8\r\n    |\r\n269 | *result=-1;\r\n    |        ^^\r\n    |\r\n    = note: `#[warn(clippy::suspicious_assignment_formatting)]` on by default\r\n    = note: to remove this lint, use either `-=` or `= -`\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_assignment_formatting\r\n\r\nwarning: this looks like you are trying to use `.. -= ..`, but you really are doing `.. = (- ..)`\r\n   --> src\\lib.rs:279:27\r\n    |\r\n279 | if MESSAGES.is_empty() {ID=-1;}\r\n    |                           ^^\r\n    |\r\n    = note: to remove this lint, use either `-=` or `= -`\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_assignment_formatting\r\n\r\nwarning: 6 bindings with single-character names in scope\r\n   --> src\\lib.rs:290:5\r\n    |\r\n290 | let a=creationtime as u64;\r\n    |     ^\r\n291 | let b=lastaccesstime as u64;\r\n    |     ^\r\n292 | let c=lastwritetime as u64;\r\n    |     ^\r\n293 | let d:(u32,u32)=(a as u32,(a>>32) as u32);\r\n    |     ^\r\n294 | let e:(u32,u32)=(b as u32,(b>>32) as u32);\r\n    |     ^\r\n295 | let f:(u32,u32)=(c as u32,(c>>32) as u32);\r\n    |     ^\r\n    |\r\n    = note: `#[warn(clippy::many_single_char_names)]` on by default\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#many_single_char_names\r\n\r\nerror[E0308]: mismatched types\r\n  --> src\\mods\\utils.rs:35:58\r\n   |\r\n35 | pub unsafe fn get_process_memory_usage_info(flag: u8) -> u32{\r\n   |               -----------------------------              ^^^ expected `u32`, found `()`\r\n   |               |\r\n   |               implicitly returns `()` as its body has no tail or `return` expression\r\n...\r\n51 | _ => 0};\r\n   |        - help: consider removing this semicolon\r\n\r\nerror: aborting due to previous error; 3 warnings emitted\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nOriginal diagnostics will follow.\r\n\r\nwarning: `nwengine` (lib) generated 60 warnings (60 duplicates)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 10.53s\r\n```", "closed_by": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91419/timeline", "performed_via_github_app": null, "state_reason": "completed"}