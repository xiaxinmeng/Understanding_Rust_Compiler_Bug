{"url": "https://api.github.com/repos/rust-lang/rust/issues/66269", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66269/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66269/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66269/events", "html_url": "https://github.com/rust-lang/rust/issues/66269", "id": 520595425, "node_id": "MDU6SXNzdWU1MjA1OTU0MjU=", "number": 66269, "title": "These types are very hard to read", "user": {"login": "ofzo", "id": 18000037, "node_id": "MDQ6VXNlcjE4MDAwMDM3", "avatar_url": "https://avatars.githubusercontent.com/u/18000037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ofzo", "html_url": "https://github.com/ofzo", "followers_url": "https://api.github.com/users/ofzo/followers", "following_url": "https://api.github.com/users/ofzo/following{/other_user}", "gists_url": "https://api.github.com/users/ofzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ofzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ofzo/subscriptions", "organizations_url": "https://api.github.com/users/ofzo/orgs", "repos_url": "https://api.github.com/users/ofzo/repos", "events_url": "https://api.github.com/users/ofzo/events{/privacy}", "received_events_url": "https://api.github.com/users/ofzo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-10T12:37:26Z", "updated_at": "2020-06-12T16:26:37Z", "closed_at": "2019-11-11T15:28:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "These type are very hard to read~\r\n\ud83d\ude2a\ud83d\ude2a\r\n```log\r\n\r\n`std::sync::MutexGuard<'_, std::boxed::Box<std::collections::HashMap<u32, std::sync::Arc<std::boxed::Box<futures::stream::SplitSink<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>>>>>>` cannot be sent between threads safely\r\n`std::sync::MutexGuard<'_, std::boxed::Box<std::collections::HashMap<u32, std::sync::Arc<std::boxed::Box<futures::stream::SplitSink<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>>>>>>` cannot be sent between threads safely\r\nhelp: the trait `std::marker::Send` is not implemented for `std::sync::MutexGuard<'_, std::boxed::Box<std::collections::HashMap<u32, std::sync::Arc<std::boxed::Box<futures::stream::SplitSink<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>>>>>>`\r\nnote: required because of the requirements on the impl of `std::marker::Send` for `&mut std::sync::MutexGuard<'_, std::boxed::Box<std::collections::HashMap<u32, std::sync::Arc<std::boxed::Box<futures::stream::SplitSink<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>>>>>>`\r\nnote: required because it appears within the type `[closure@src/main.rs:115:31: 142:22 p:&mut std::sync::MutexGuard<'_, std::boxed::Box<std::collections::HashMap<u32, std::sync::Arc<std::boxed::Box<futures::stream::SplitSink<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>>>>>>]`\r\nnote: required because it appears within the type `futures::future::chain::Chain<std::boxed::Box<dyn futures::Future<Error = websocket::WebSocketError, Item = (tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>, hyper::header::Headers)> + std::marker::Send>, futures::AndThen<futures::stream::Forward<futures::stream::FilterMap<futures::stream::TakeWhile<futures::stream::SplitStream<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>, [closure@src/main.rs:122:41: 122:62], std::result::Result<bool, websocket::WebSocketError>>, [closure@src/main.rs:123:41: 130:30]>, std::boxed::Box<futures::stream::SplitSink<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>>>, futures::sink::Send<std::boxed::Box<futures::stream::SplitSink<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>>>, [closure@src/main.rs:141:39: 141:87]>, [closure@src/main.rs:115:31: 142:22 p:&mut std::sync::MutexGuard<'_, std::boxed::Box<std::collections::HashMap<u32, std::sync::Arc<std::boxed::Box<futures::stream::SplitSink<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>>>>>>]>`\r\nnote: required because it appears within the type `futures::AndThen<std::boxed::Box<dyn futures::Future<Error = websocket::WebSocketError, Item = (tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>, hyper::header::Headers)> + std::marker::Send>, futures::AndThen<futures::stream::Forward<futures::stream::FilterMap<futures::stream::TakeWhile<futures::stream::SplitStream<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>, [closure@src/main.rs:122:41: 122:62], std::result::Result<bool, websocket::WebSocketError>>, [closure@src/main.rs:123:41: 130:30]>, std::boxed::Box<futures::stream::SplitSink<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>>>, futures::sink::Send<std::boxed::Box<futures::stream::SplitSink<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>>>, [closure@src/main.rs:141:39: 141:87]>, [closure@src/main.rs:115:31: 142:22 p:&mut std::sync::MutexGuard<'_, std::boxed::Box<std::collections::HashMap<u32, std::sync::Arc<std::boxed::Box<futures::stream::SplitSink<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>>>>>>]>`\r\nnote: required because it appears within the type `futures::MapErr<futures::AndThen<std::boxed::Box<dyn futures::Future<Error = websocket::WebSocketError, Item = (tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>, hyper::header::Headers)> + std::marker::Send>, futures::AndThen<futures::stream::Forward<futures::stream::FilterMap<futures::stream::TakeWhile<futures::stream::SplitStream<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>, [closure@src/main.rs:122:41: 122:62], std::result::Result<bool, websocket::WebSocketError>>, [closure@src/main.rs:123:41: 130:30]>, std::boxed::Box<futures::stream::SplitSink<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>>>, futures::sink::Send<std::boxed::Box<futures::stream::SplitSink<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>>>, [closure@src/main.rs:141:39: 141:87]>, [closure@src/main.rs:115:31: 142:22 p:&mut std::sync::MutexGuard<'_, std::boxed::Box<std::collections::HashMap<u32, std::sync::Arc<std::boxed::Box<futures::stream::SplitSink<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>>>>>>]>, [closure@src/main.rs:145:31: 145:57]>`\r\nnote: required because it appears within the type `futures::Map<futures::MapErr<futures::AndThen<std::boxed::Box<dyn futures::Future<Error = websocket::WebSocketError, Item = (tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>, hyper::header::Headers)> + std::marker::Send>, futures::AndThen<futures::stream::Forward<futures::stream::FilterMap<futures::stream::TakeWhile<futures::stream::SplitStream<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>, [closure@src/main.rs:122:41: 122:62], std::result::Result<bool, websocket::WebSocketError>>, [closure@src/main.rs:123:41: 130:30]>, std::boxed::Box<futures::stream::SplitSink<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>>>, futures::sink::Send<std::boxed::Box<futures::stream::SplitSink<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>>>, [closure@src/main.rs:141:39: 141:87]>, [closure@src/main.rs:115:31: 142:22 p:&mut std::sync::MutexGuard<'_, std::boxed::Box<std::collections::HashMap<u32, std::sync::Arc<std::boxed::Box<futures::stream::SplitSink<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>>>>>>]>, [closure@src/main.rs:145:31: 145:57]>, [closure@src/main.rs:146:30: 146:63]>`rustc(E0277)\r\nmain.rs(144, 26): `std::sync::MutexGuard<'_, std::boxed::Box<std::collections::HashMap<u32, std::sync::Arc<std::boxed::Box<futures::stream::SplitSink<tokio::codec::Framed<tokio::net::TcpStream, websocket::async::MessageCodec<websocket::OwnedMessage>>>>>>>>` cannot be sent between threads safely\r\n\r\n```", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66269/reactions", "total_count": 2, "+1": 0, "-1": 1, "laugh": 0, "hooray": 0, "confused": 1, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66269/timeline", "performed_via_github_app": null, "state_reason": "completed"}