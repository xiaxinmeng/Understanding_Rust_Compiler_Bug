{"url": "https://api.github.com/repos/rust-lang/rust/issues/103566", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103566/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103566/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103566/events", "html_url": "https://github.com/rust-lang/rust/issues/103566", "id": 1423692080, "node_id": "I_kwDOAAsO6M5U29Ew", "number": 103566, "title": "Use include_bytes with optional way", "user": {"login": "cavivie", "id": 103884097, "node_id": "U_kgDOBjElQQ", "avatar_url": "https://avatars.githubusercontent.com/u/103884097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cavivie", "html_url": "https://github.com/cavivie", "followers_url": "https://api.github.com/users/cavivie/followers", "following_url": "https://api.github.com/users/cavivie/following{/other_user}", "gists_url": "https://api.github.com/users/cavivie/gists{/gist_id}", "starred_url": "https://api.github.com/users/cavivie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cavivie/subscriptions", "organizations_url": "https://api.github.com/users/cavivie/orgs", "repos_url": "https://api.github.com/users/cavivie/repos", "events_url": "https://api.github.com/users/cavivie/events{/privacy}", "received_events_url": "https://api.github.com/users/cavivie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-10-26T09:11:22Z", "updated_at": "2022-10-31T05:31:29Z", "closed_at": "2022-10-27T15:52:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using `include_bytes` to do compile time embedding bytes data from a file, it works fine when the file exists, but when the file doesn't exist it will prompt a compiler error instead of a warning. In my scenario, the file does not necessarily exist, but if it exists, the content of the file needs to be compiled with the program. If it does not exist, there will be additional logic processing instead of default values. So I'm going to look for a macro like `include_bytes` in rust that returns an enumeration of `Option<&'static [u8]>`, at which point I can tell if the file content exists. Not sure if the rust compiler supports this way of working now, or is there any way to do it?\r\n\r\nHere is my code sample:\r\n```rust\r\nstatic PRIVACY_SOP_BIN: Option<&'static [u8]> = include_bytes!(\"./data/privacy.sop\");\r\n\r\nfn handle() {\r\n    ...\r\n    if let Some(bin) = PRIVACY_SOP_BIN {\r\n        // do something for bin\r\n    }\r\n    ...\r\n}\r\n```", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103566/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}