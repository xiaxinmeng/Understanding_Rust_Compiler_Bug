{"url": "https://api.github.com/repos/rust-lang/rust/issues/74706", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74706/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74706/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74706/events", "html_url": "https://github.com/rust-lang/rust/issues/74706", "id": 664965478, "node_id": "MDU6SXNzdWU2NjQ5NjU0Nzg=", "number": 74706, "title": "Suggest reborrowing mutable reference when move error ocurrs", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-24T07:10:41Z", "updated_at": "2020-07-24T12:04:30Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The following code:\r\n\r\n```rust\r\nstruct Foo;\r\nstruct Wrapper<T>(T);\r\n\r\nfn use_val<T>(_: &mut T) {}\r\n\r\nimpl Foo {\r\n    fn call_it(&mut self) {\r\n        use_val(&mut Wrapper(self));\r\n        self;\r\n    }\r\n}\r\n```\r\n\r\nproduces the following error:\r\n\r\n```\r\nerror[E0382]: use of moved value: `self`\r\n --> src/lib.rs:9:9\r\n  |\r\n7 |     fn call_it(&mut self) {\r\n  |                --------- move occurs because `self` has type `&mut Foo`, which does not implement the `Copy` trait\r\n8 |         use_val(&mut Wrapper(self));\r\n  |                              ---- value moved here\r\n9 |         self;\r\n  |         ^^^^ value used here after move\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nWhen `self` is passed directly to `use_val` (e.g. `use_val(self`), a reborrow will automatically be inserted, allowing the code to compile. However, the fact that `use_val` takes an `&mut T` means that the compiler won't adjust the inferred type in any way (in this case, `&mut Wrapper<&mut Foo>`), leading to the move error.\r\n\r\nThe solution is to add an explicit reborrow (`&mut Wrapper(&mut *self)`), however, this wasn't obvious to me. It would be useful if the compiler could suggest inserting a reborrow in this situation.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74706/timeline", "performed_via_github_app": null, "state_reason": null}