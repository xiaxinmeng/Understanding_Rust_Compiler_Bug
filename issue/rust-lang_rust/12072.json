{"url": "https://api.github.com/repos/rust-lang/rust/issues/12072", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/12072/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/12072/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/12072/events", "html_url": "https://github.com/rust-lang/rust/issues/12072", "id": 27082477, "node_id": "MDU6SXNzdWUyNzA4MjQ3Nw==", "number": 12072, "title": "RFC: Give anonymous lifetimes names based on their parameter", "user": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2014-02-06T20:45:56Z", "updated_at": "2014-09-03T21:24:21Z", "closed_at": "2014-09-03T21:24:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When a function has parameters that are of type `&T`, they are given an anonymous lifetime. I propose that they should be given a lifetime named the same as the parameter, except in such cases where this shadows an already-declared lifetime.\n\nThis allows for less typing in common cases. For example,\n\n```\nfn foo<'a>(a: &'a [u8]) -> &'a [u8];\n```\n\ncan be simplified to\n\n```\nfn foo(a: &[u8]) -> &'a [u8];\n```\n\nI also propose that lifetimes be allowed to use keywords as lifetime names again, so that `'self` is valid, as this allows\n\n```\nfn foo(&self) -> &'self uint;\n```\n\nMy only concern with this proposal is potential confusion if a defaulted lifetime name would have shadowed a declared name (and therefore the lifetime remains anonymous). I think this can be clarified with an appropriate note on the error. If I have something like\n\n```\nimpl<'a> Foo<'a> {\n    fn foo(&self, a: &[u8]) -> &'a [u8];\n}\n```\n\nand I get a lifetime error, the compile could put a note telling me that the parameter `a` has an anonymous lifetime because the lifetime `'a` was already in-scope. This note would only show up when a lifetime error occurs relating to a declared lifetime that is blocking a defaulted lifetime name.\n", "closed_by": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/12072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/12072/timeline", "performed_via_github_app": null, "state_reason": "completed"}