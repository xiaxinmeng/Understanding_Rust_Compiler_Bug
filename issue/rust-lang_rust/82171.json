{"url": "https://api.github.com/repos/rust-lang/rust/issues/82171", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82171/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82171/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82171/events", "html_url": "https://github.com/rust-lang/rust/issues/82171", "id": 808972814, "node_id": "MDU6SXNzdWU4MDg5NzI4MTQ=", "number": 82171, "title": "Unclear compiler error when `impl Trait` return value captures non-'static argument", "user": {"login": "ramosbugs", "id": 8505766, "node_id": "MDQ6VXNlcjg1MDU3NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/8505766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ramosbugs", "html_url": "https://github.com/ramosbugs", "followers_url": "https://api.github.com/users/ramosbugs/followers", "following_url": "https://api.github.com/users/ramosbugs/following{/other_user}", "gists_url": "https://api.github.com/users/ramosbugs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ramosbugs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ramosbugs/subscriptions", "organizations_url": "https://api.github.com/users/ramosbugs/orgs", "repos_url": "https://api.github.com/users/ramosbugs/repos", "events_url": "https://api.github.com/users/ramosbugs/events{/privacy}", "received_events_url": "https://api.github.com/users/ramosbugs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}, {"id": 2752666610, "node_id": "MDU6TGFiZWwyNzUyNjY2NjEw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-fixed-by-type_alias_impl_trait", "name": "F-fixed-by-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "The issue can be fixed with type_alias_impl_trait"}], "state": "open", "locked": false, "assignee": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2021-02-16T04:27:10Z", "updated_at": "2023-03-05T11:47:01Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "(cc @estebank)\r\n\r\nI tried this code (the explicit `'static` lifetime is unnecessary but emphasizes the implicit `'static` requirement of `impl Trait`):\r\n\r\n```rust\r\nfn foo<T>(a: T) -> impl Iterator<Item = String> + 'static\r\nwhere\r\n    T: std::fmt::Display\r\n{\r\n    std::iter::once(a.to_string())\r\n}\r\n\r\nfn bar(a: &str) -> impl Iterator<Item = String> + 'static {\r\n    foo(a)\r\n}\r\n```\r\n\r\nSee [playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=2434854bb55fd556e785d9e14cf9ffd2).\r\n\r\nI expected to see this happen:\r\n\r\nSuccessful compilation or a clear error message suggesting that `impl Trait` can't be used in this way due to the non-`'static` lifetime of `foo`'s argument `a`.\r\n\r\nInstead, this happened:\r\n\r\n```\r\nerror[E0759]: `a` has an anonymous lifetime `'_` but it needs to satisfy a `'static` lifetime requirement\r\n --> src/lib.rs:9:9\r\n  |\r\n8 | fn bar(a: &str) -> impl Iterator<Item = String> + 'static {\r\n  |           ---- this data with an anonymous lifetime `'_`...\r\n9 |     foo(a)\r\n  |         ^ ...is captured here...\r\n  |\r\nnote: ...and is required to live as long as `'static` here\r\n --> src/lib.rs:8:20\r\n  |\r\n8 | fn bar(a: &str) -> impl Iterator<Item = String> + 'static {\r\n  |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nhelp: consider changing the `impl Trait`'s explicit `'static` bound to the lifetime of argument `a`\r\n  |\r\n8 | fn bar(a: &str) -> impl Iterator<Item = String> + '_ {\r\n  |                                                   ^^\r\nhelp: alternatively, add an explicit `'static` bound to this reference\r\n  |\r\n8 | fn bar(a: &'static str) -> impl Iterator<Item = String> + 'static {\r\n  |           ^^^^^^^^^^^^\r\n```\r\n\r\n`foo`'s return value isn't dependent on `a`'s lifetime since `to_string` converts it to an owned `String`. Returning `Box<dyn Iterator<Item = String>>` instead of using `impl Trait` fixes the error.\r\n\r\nNeither of the compiler's suggestions are the \"right\" fix here, since I'd like the return value to have a `'static` lifetime but don't want to require `a` to have one.\r\n\r\nI think the ideal fix (to the error message) would be something along the lines of:\r\n* a short explanation of why `impl Trait` doesn't allow the return value not to depend on the lifetime of `a` (maybe with a tracking issue if this limitation is being addressed)\r\n* an additional suggestion to use `Box<dyn Trait>` and/or a concrete type\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0 (cb75ad5db 2021-02-10)\r\nbinary: rustc\r\ncommit-hash: cb75ad5db02783e8b0222fee363c5f63f7e2cf5b\r\ncommit-date: 2021-02-10\r\nhost: x86_64-apple-darwin\r\nrelease: 1.50.0\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82171/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82171/timeline", "performed_via_github_app": null, "state_reason": null}