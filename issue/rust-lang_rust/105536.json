{"url": "https://api.github.com/repos/rust-lang/rust/issues/105536", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105536/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105536/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105536/events", "html_url": "https://github.com/rust-lang/rust/issues/105536", "id": 1488733352, "node_id": "I_kwDOAAsO6M5YvESo", "number": 105536, "title": "`slice::from_raw_parts` returns a different address in const context for u8", "user": {"login": "mxk", "id": 7256995, "node_id": "MDQ6VXNlcjcyNTY5OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/7256995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mxk", "html_url": "https://github.com/mxk", "followers_url": "https://api.github.com/users/mxk/followers", "following_url": "https://api.github.com/users/mxk/following{/other_user}", "gists_url": "https://api.github.com/users/mxk/gists{/gist_id}", "starred_url": "https://api.github.com/users/mxk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mxk/subscriptions", "organizations_url": "https://api.github.com/users/mxk/orgs", "repos_url": "https://api.github.com/users/mxk/repos", "events_url": "https://api.github.com/users/mxk/events{/privacy}", "received_events_url": "https://api.github.com/users/mxk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 2238194189, "node_id": "MDU6TGFiZWwyMjM4MTk0MTg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-slice", "name": "A-slice", "color": "f7e101", "default": false, "description": "Area: [T]"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-12-10T17:38:18Z", "updated_at": "2022-12-11T08:51:36Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Possibly as a result of some u8-specific [optimizations](https://github.com/rust-lang/rust/blob/1.65.0/compiler/rustc_const_eval/src/const_eval/eval_queries.rs#L118-L136), a const `&[u8]` returned by `std::slice::from_raw_parts` has a different address than all other uses of the same expression. [Forum discussion](https://users.rust-lang.org/t/slice-from-raw-parts-returns-a-different-address-in-const-context/85692?u=mxk).\r\n\r\nI tried this code:\r\n\r\n[Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=7f77ed62e9fcbe43fbb396f36a12cf27)\r\n\r\n```rust\r\nuse std::ptr::NonNull;\r\nuse std::slice::from_raw_parts;\r\n\r\nconst PTR_U8: *const u8 = NonNull::dangling().as_ptr();\r\nconst CONST_U8_REF: &[u8] = unsafe { from_raw_parts(PTR_U8, 0) };\r\nconst CONST_U8_PTR: *const u8 = unsafe { from_raw_parts(PTR_U8, 0).as_ptr() };\r\nstatic STATIC_U8_REF: &[u8] = unsafe { from_raw_parts(PTR_U8, 0) };\r\n\r\nconst PTR_U16: *const u16 = NonNull::dangling().as_ptr();\r\nconst CONST_U16_REF: &[u16] = unsafe { from_raw_parts(PTR_U16, 0) };\r\n\r\nconst fn const_u8_fn() -> &'static [u8] {\r\n    unsafe { from_raw_parts(PTR_U8, 0) }\r\n}\r\n\r\nfn main() {\r\n    let ptr_u8 = unsafe { from_raw_parts(PTR_U8, 0) }.as_ptr();\r\n    let ptr_u16 = unsafe { from_raw_parts(PTR_U16, 0) }.as_ptr();\r\n\r\n    assert_eq!(ptr_u8, PTR_U8); // OK\r\n    assert_eq!(ptr_u8, CONST_U8_PTR); // OK\r\n    assert_eq!(ptr_u8, const_u8_fn().as_ptr()); // OK\r\n    assert_eq!(ptr_u8, STATIC_U8_REF.as_ptr()); // OK\r\n    assert_eq!(ptr_u16, CONST_U16_REF.as_ptr()); // OK\r\n    assert_eq!(ptr_u8, CONST_U8_REF.as_ptr()); // ERROR\r\n}\r\n```\r\n\r\nI expected to see this happen: All assertions should pass.\r\n\r\nInstead, this happened:\r\n\r\n```\r\nthread 'main' panicked at 'assertion failed: `(left == right)`\r\n  left: `0x1`,\r\n right: `0x55f434eaa038`', src/main.rs:25:5\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.65.0 (897e37553 2022-11-02)\r\nbinary: rustc\r\ncommit-hash: 897e37553bba8b42751c67658967889d11ecd120\r\ncommit-date: 2022-11-02\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.65.0\r\nLLVM version: 15.0.0\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nthread 'main' panicked at 'assertion failed: `(left == right)`\r\n  left: `0x1`,\r\n right: `0x55c4dc25b038`', src/main.rs:25:5\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:584:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/core/src/panicking.rs:142:14\r\n   2: core::panicking::assert_failed_inner\r\n   3: core::panicking::assert_failed\r\n             at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/core/src/panicking.rs:181:5\r\n   4: playground::main\r\n             at ./[src/main.rs:25](https://play.rust-lang.org/#):5\r\n   5: core::ops::function::FnOnce::call_once\r\n             at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/core/src/ops/function.rs:248:5\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105536/timeline", "performed_via_github_app": null, "state_reason": null}