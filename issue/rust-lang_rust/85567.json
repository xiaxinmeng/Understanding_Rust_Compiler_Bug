{"url": "https://api.github.com/repos/rust-lang/rust/issues/85567", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85567/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85567/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85567/events", "html_url": "https://github.com/rust-lang/rust/issues/85567", "id": 898441149, "node_id": "MDU6SXNzdWU4OTg0NDExNDk=", "number": 85567, "title": "Misleading diagnostic when type inference for `Box<dyn FnOnce()>` fails", "user": {"login": "lukas-code", "id": 26522220, "node_id": "MDQ6VXNlcjI2NTIyMjIw", "avatar_url": "https://avatars.githubusercontent.com/u/26522220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukas-code", "html_url": "https://github.com/lukas-code", "followers_url": "https://api.github.com/users/lukas-code/followers", "following_url": "https://api.github.com/users/lukas-code/following{/other_user}", "gists_url": "https://api.github.com/users/lukas-code/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukas-code/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukas-code/subscriptions", "organizations_url": "https://api.github.com/users/lukas-code/orgs", "repos_url": "https://api.github.com/users/lukas-code/repos", "events_url": "https://api.github.com/users/lukas-code/events{/privacy}", "received_events_url": "https://api.github.com/users/lukas-code/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-05-21T20:17:17Z", "updated_at": "2021-05-21T20:17:17Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code: [(playground link)](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=2bfa7da9b7dd4223f15f246d6c57ccf4)\r\n\r\n```rust\r\nuse std::marker::PhantomData;\r\n\r\nstruct Receiver<T> {\r\n    _phantom: PhantomData<T>,\r\n}\r\n\r\nimpl<T> Receiver<T> {\r\n    fn new() -> Self {\r\n        Self {\r\n            _phantom: PhantomData,\r\n        }\r\n    }\r\n\r\n    fn get(&self) -> T {\r\n        unimplemented!()\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let receiver: Receiver<Box<_>> = Receiver::new();\r\n    let function = receiver.get();\r\n    function();\r\n    let _: Receiver<Box<dyn FnOnce()>> = receiver;\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0277]: expected a `Fn<()>` closure, found `dyn FnOnce()`\r\n  --> src/main.rs:22:5\r\n   |\r\n22 |     function();\r\n   |     ^^^^^^^^^^ expected an `Fn<()>` closure, found `dyn FnOnce()`\r\n   |\r\n   = help: the trait `Fn<()>` is not implemented for `dyn FnOnce()`\r\n   = note: wrap the `dyn FnOnce()` in a closure with no arguments: `|| { /* code */ }`\r\n   = note: required because of the requirements on the impl of `Fn<()>` for `Box<dyn FnOnce()>`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0282]: type annotations needed for `Receiver<Box<_>>`\r\n  --> src/main.rs:20:19\r\n   |\r\n20 |     let receiver: Receiver<Box<_>> = Receiver::new();\r\n   |         --------  ^^^^^^^^^^^^^^^^ cannot infer type\r\n   |         |\r\n   |         consider giving `receiver` the explicit type `Receiver<Box<_>>`, with the type parameters specified\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0282`.\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\nRemoving the last line in `main` or removing the type annotation of `receiver` will give this output.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85567/timeline", "performed_via_github_app": null, "state_reason": null}