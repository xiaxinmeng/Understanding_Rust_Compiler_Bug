{"url": "https://api.github.com/repos/rust-lang/rust/issues/43801", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43801/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43801/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43801/events", "html_url": "https://github.com/rust-lang/rust/issues/43801", "id": 249576669, "node_id": "MDU6SXNzdWUyNDk1NzY2Njk=", "number": 43801, "title": "`x.py doc` cannot work when a junction point / symbolic link cannot be created.", "user": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}, {"id": 593503757, "node_id": "MDU6TGFiZWw1OTM1MDM3NTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-infra", "name": "T-infra", "color": "bfd4f2", "default": false, "description": "Relevant to the infrastructure team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-11T09:05:12Z", "updated_at": "2022-06-27T04:58:34Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "... for instance, in a VirtualBox shared folder, which are mapped as network drive, does not support junction point on Windows, which causes `Incorrect function. (os error 1)` always.\r\n\r\nSymbolic links (junction points) are used because:\r\n\r\n> Here what we're doing is creating a *symlink* (directory junction on\r\n> Windows) to the final output location. This is not done as an\r\n> optimization but rather for correctness. We've got three trees of\r\n> documentation, one for std, one for test, and one for rustc. It's then\r\n> our job to merge them all together.\r\n> \r\n> Unfortunately rustbuild doesn't know nearly as well how to merge doc\r\n> trees as rustdoc does itself, so instead of actually having three\r\n> separate trees we just have rustdoc output to the same location across\r\n> all of them.\r\n> \r\n> This way rustdoc generates output directly into the output, and rustdoc\r\n> will also directly handle merging.\r\n\r\nThere should be other way to achieve the same effect? For example forcing `rustdoc` to output to `stage$N/$TARGET/doc` (bootstrap already wrapped `rustdoc` so it should be fine).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43801/timeline", "performed_via_github_app": null, "state_reason": null}