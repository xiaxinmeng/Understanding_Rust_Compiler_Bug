{"url": "https://api.github.com/repos/rust-lang/rust/issues/41252", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41252/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41252/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41252/events", "html_url": "https://github.com/rust-lang/rust/issues/41252", "id": 221332166, "node_id": "MDU6SXNzdWUyMjEzMzIxNjY=", "number": 41252, "title": "GDB hardcodes startswith(producer, \"clang \") to cope with LLVM debug line info in prologues.", "user": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203130, "node_id": "MDU6TGFiZWwyMDMxMzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-debuginfo", "name": "A-debuginfo", "color": "f7e101", "default": false, "description": "Area: Debugging information in compiled programs (DWARF, PDB, etc.)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-12T17:17:47Z", "updated_at": "2023-04-05T17:45:51Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Only observed on x86_32, see https://github.com/rust-lang/rust/pull/40367#issuecomment-293623287 and [relevant code in GDB source](https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;a=blob;f=gdb/i386-tdep.c;hb=8f10c9323357ad190c0383f2fc9d394316447905#l1856).\r\n\r\nLLVM appears to generate the .loc` for the first LLVM IR instruction in a function *just before* the last instruction of the prologue, resulting in GDB refusing to break on that location (by file and line number).\r\n\r\nNot sure if this is solvable in GDB - perhaps by using the location information from the prologue after the prologue? Or maybe the intention is to actually never do that? It's really not clear from the GDB source.\r\n\r\nBefore #40367, we used to have a branch from the LLVM IR entry block to the MIR start block, which triggered the problem, but not in an user-visible way. Subsequent instructions were and still are unaffected.\r\n\r\nAs a workaround, I changed `producer` from `rustc version _` to `clang LLVM (rustc version _)`.\r\n\r\ncc @michaelwoerister @Manishearth", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41252/reactions", "total_count": 3, "+1": 0, "-1": 0, "laugh": 3, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41252/timeline", "performed_via_github_app": null, "state_reason": null}