{"url": "https://api.github.com/repos/rust-lang/rust/issues/39125", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39125/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39125/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39125/events", "html_url": "https://github.com/rust-lang/rust/issues/39125", "id": 201254230, "node_id": "MDU6SXNzdWUyMDEyNTQyMzA=", "number": 39125, "title": "Borrow, AsRef, others suboptimal for enums / specific structs", "user": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-17T11:37:39Z", "updated_at": "2020-03-28T18:12:36Z", "closed_at": "2017-05-19T17:01:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider something like the following two enums\r\n````Rust\r\nenum Foo {\r\n  Bar(i32),\r\n  Baz(String),\r\n}\r\n\r\nenum FooBorrowed<'a> {\r\n  Bar(&'a i32),\r\n  Baz(&'a str),\r\n}\r\n````\r\n\r\nIn theory one would like to be able to implement Deref, AsRef, Borrow, IntoOwned, etc for this pair of enums (or a similar pair of structs) and e.g. also use it in a Cow. However that's not possible as Deref, AsRef, Borrow explicitly return a reference from their functions. If it was instead a \"normal\" type, one could implement it for the above pair and still cover the existing implementations that return references.\r\n\r\nIs there any chance to extend this by new traits, or is there another solution?", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39125/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39125/timeline", "performed_via_github_app": null, "state_reason": "completed"}