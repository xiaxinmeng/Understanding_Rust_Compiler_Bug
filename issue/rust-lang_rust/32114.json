{"url": "https://api.github.com/repos/rust-lang/rust/issues/32114", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/32114/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/32114/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/32114/events", "html_url": "https://github.com/rust-lang/rust/issues/32114", "id": 139183285, "node_id": "MDU6SXNzdWUxMzkxODMyODU=", "number": 32114, "title": "mpsc::send returns error once, then success", "user": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-08T05:09:47Z", "updated_at": "2016-10-06T04:25:40Z", "closed_at": "2016-10-06T04:25:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you close the rx side of a channel pair before sending to it, then the first send will fail with a `SendError` as expected, but a second send will return `Ok(())`.\n\n``` rust\nuse std::sync::mpsc::{channel, SendError};\n\n#[test]\nfn doublesend() {\n    let (tx, _) = channel();\n\n    assert_eq!(tx.send(123), Ok(()));\n    assert_eq!(tx.send(123), Err(SendError(123)));\n    assert_eq!(tx.send(123), Err(SendError(123)));\n}\n```\n\nFails with:\n\n> thread 'doublesend' panicked at 'assertion failed: `(left == right)` (left: `Err(\"SendError(..)\")`, right: `Ok(())`)', <anon>:7\n\nHowever, if something is successfully sent before the receiver is dropped (even if it never receives the value), then it works as expected:\n\n``` rust\nuse std::sync::mpsc::{channel, SendError};\nuse std::mem;\n\n#[test]\nfn doublesend() {\n    let (tx, rx) = channel();\n\n    assert_eq!(tx.send(123), Ok(()));\n    mem::drop(rx);\n    assert_eq!(tx.send(123), Err(SendError(123)));\n    assert_eq!(tx.send(123), Err(SendError(123)));\n}\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/32114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/32114/timeline", "performed_via_github_app": null, "state_reason": "completed"}