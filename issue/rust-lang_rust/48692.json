{"url": "https://api.github.com/repos/rust-lang/rust/issues/48692", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48692/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48692/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48692/events", "html_url": "https://github.com/rust-lang/rust/issues/48692", "id": 301975906, "node_id": "MDU6SXNzdWUzMDE5NzU5MDY=", "number": 48692, "title": "diagnostics: \"expected one of ...\": check if they actually would fix the build", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-03T07:13:46Z", "updated_at": "2020-04-20T20:26:43Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Just an idea I had while reading https://internals.rust-lang.org/t/compiler-diagnostics-improvement-wishlist/6886/\r\n\r\nLet's say I have broken code like this\r\n````rust\r\npub fn main() {\r\n    let msg: String = String::from(\"hello world\") // missing \";\"\r\n    println!(\"{}\", msg);\r\n}\r\n````\r\nThe error message will be\r\n````\r\nerror: expected one of `.`, `;`, `?`, or an operator, found `println`\r\n --> src/main.rs:3:5\r\n  |\r\n2 |     let msg: String = String::from(\"hello world\") // missing ;\r\n  |                                                  - expected one of `.`, `;`, `?`, or an operator here\r\n3 |     println!(\"{}\", msg);\r\n  |     ^^^^^^^ unexpected token\r\n````\r\n\r\nAs we can see, the compiler already suggests several characters.\r\nI wonder if it made sense if the compiler could basically try all of them out on the suggested position (so \r\n```` let msg: String = String::from(\"hello world\").````\r\n```` let msg: String = String::from(\"hello world\");````\r\n```` let msg: String = String::from(\"hello world\")?````\r\n), notice that \";\" actually resolves the build error and then especially promote filling in a \";\".\r\n\r\nIn case of ````....String::from(\"hello world\")?````, I actuall get\r\n````\r\nerror: expected one of `.`, `;`, `?`, or an operator, found `}`\r\n --> src/main.rs:3:1\r\n  |\r\n2 |     let msg: String = String::from(\"hello world\")? // missing ;\r\n  |                                                   - expected one of `.`, `;`, `?`, or an operator here\r\n3 | }\r\n  | ^ unexpected token\r\n````\r\nwhich looks a bit silly since the \"expected\" operator is actually there.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48692/timeline", "performed_via_github_app": null, "state_reason": null}