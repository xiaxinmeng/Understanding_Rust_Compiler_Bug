{"url": "https://api.github.com/repos/rust-lang/rust/issues/49772", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49772/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49772/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49772/events", "html_url": "https://github.com/rust-lang/rust/issues/49772", "id": 312265341, "node_id": "MDU6SXNzdWUzMTIyNjUzNDE=", "number": 49772, "title": "Allow mod statement to reference generated rust modules", "user": {"login": "swiftcoder", "id": 4706210, "node_id": "MDQ6VXNlcjQ3MDYyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/4706210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swiftcoder", "html_url": "https://github.com/swiftcoder", "followers_url": "https://api.github.com/users/swiftcoder/followers", "following_url": "https://api.github.com/users/swiftcoder/following{/other_user}", "gists_url": "https://api.github.com/users/swiftcoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/swiftcoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swiftcoder/subscriptions", "organizations_url": "https://api.github.com/users/swiftcoder/orgs", "repos_url": "https://api.github.com/users/swiftcoder/repos", "events_url": "https://api.github.com/users/swiftcoder/events{/privacy}", "received_events_url": "https://api.github.com/users/swiftcoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-08T02:45:57Z", "updated_at": "2018-05-29T15:18:58Z", "closed_at": "2018-05-29T15:18:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Summary: Given a `build.rs` file that generates `src/foo.rs` (in the out directory), I should be able to declare `pub mod foo` from `src/main.rs` (not in the the out directory).\r\n\r\nToday I can simulate this by using \r\n```\r\npub mod foo {\r\n    include!(concat!(env!(\"OUT_DIR\"), \"/src/foo.rs\"));\r\n}\r\n```\r\nin `main.rs`, but this seems both non-intuitive, and seems to break intellisense for module `foo` in several rust-enabled IDEs.\r\n\r\nI'm not sure whether this is an issue of `rustc` lacking support for collapsing multiple directory structures into one, or an issue of `cargo` not setting up the compiler inputs appropriately.\r\n\r\n(for additional context, generated files are a constant presence at least in network protocols and serialisation, as popular tools like protobuf and cap'n proto rely on generated files to provide language-specific protocol implementations)", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49772/timeline", "performed_via_github_app": null, "state_reason": "completed"}