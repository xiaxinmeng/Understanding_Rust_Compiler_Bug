{"url": "https://api.github.com/repos/rust-lang/rust/issues/74779", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74779/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74779/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74779/events", "html_url": "https://github.com/rust-lang/rust/issues/74779", "id": 665796435, "node_id": "MDU6SXNzdWU2NjU3OTY0MzU=", "number": 74779, "title": "Backtraces shouldn't show stack frames generated by the implementation of async-await", "user": {"login": "Michael-F-Bryan", "id": 17380079, "node_id": "MDQ6VXNlcjE3MzgwMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/17380079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Michael-F-Bryan", "html_url": "https://github.com/Michael-F-Bryan", "followers_url": "https://api.github.com/users/Michael-F-Bryan/followers", "following_url": "https://api.github.com/users/Michael-F-Bryan/following{/other_user}", "gists_url": "https://api.github.com/users/Michael-F-Bryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Michael-F-Bryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Michael-F-Bryan/subscriptions", "organizations_url": "https://api.github.com/users/Michael-F-Bryan/orgs", "repos_url": "https://api.github.com/users/Michael-F-Bryan/repos", "events_url": "https://api.github.com/users/Michael-F-Bryan/events{/privacy}", "received_events_url": "https://api.github.com/users/Michael-F-Bryan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36953, "node_id": "MDU6TGFiZWwzNjk1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-runtime", "name": "A-runtime", "color": "f7e101", "default": false, "description": "Area: std's runtime and \"pre-main\" init for handling backtraces, unwinds, stack overflows"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-07-26T14:52:32Z", "updated_at": "2022-12-09T01:37:51Z", "closed_at": "2022-12-09T01:37:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\n\r\nTo reduce unnecessary noise while debugging, calls to the `poll()` method automatically generated by async-await's syntactic sugar should be hidden when generating a backtrace with `RUST_BACKTRACE=1`.\r\n\r\n## Actual Behaviour\r\n\r\nAs an example, this is a backtrace generated from a bot I've been playing around with:\r\n\r\n<details>\r\n<summary>\r\nBacktrace with 49 stack frames, of which 12 are calls to <code>core::future::from_generator::GenFuture&lt;T&gt;::poll()`</code>.\r\n</summary>\r\n\r\n```\r\nError: webdriver returned error: Dismissed user prompt dialog: undefined\r\n\r\nStack backtrace:\r\n   0: anyhow::error::<impl core::convert::From<E> for anyhow::Error>::from\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.32/src/backtrace.rs:26\r\n   1: bot::client::Client::goto_direct::{{closure}}\r\n             at ./src/client.rs:66\r\n   2: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\r\n             at /home/michael/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:78\r\n   3: bot::client::Client::goto::{{closure}}\r\n             at ./src/client.rs:83\r\n   4: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\r\n             at /home/michael/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:78\r\n   5: bot::trading::send_trades::{{closure}}::{{closure}}\r\n             at ./src/trading.rs:33\r\n   6: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\r\n             at /home/michael/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:78\r\n   7: <tracing_futures::Instrumented<T> as core::future::future::Future>::poll\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs:258\r\n   8: bot::trading::send_trades::{{closure}}\r\n             at ./src/trading.rs:28\r\n   9: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\r\n             at /home/michael/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:78\r\n  10: bot::schedule::execute_action::{{closure}}\r\n             at ./src/schedule.rs:98\r\n  11: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\r\n             at /home/michael/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:78\r\n  12: bot::schedule::Scheduler::step::{{closure}}::{{closure}}::{{closure}}\r\n             at ./src/schedule.rs:55\r\n  13: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\r\n             at /home/michael/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:78\r\n  14: bot::schedule::Scheduler::step::{{closure}}::{{closure}}\r\n             at ./src/schedule.rs:42\r\n  15: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\r\n             at /home/michael/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:78\r\n  16: <tracing_futures::Instrumented<T> as core::future::future::Future>::poll\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs:258\r\n  17: bot::schedule::Scheduler::step::{{closure}}\r\n             at ./src/schedule.rs:42\r\n  18: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\r\n             at /home/michael/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:78\r\n  19: trading_bot::run::{{closure}}::{{closure}}::{{closure}}\r\n             at src/bin/trading-bot.rs:38\r\n  20: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\r\n             at /home/michael/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:78\r\n  21: bot::utils::run_with_geckodriver::{{closure}}\r\n             at ./src/utils.rs:32\r\n  22: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\r\n             at /home/michael/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:78\r\n  23: trading_bot::run::{{closure}}\r\n             at src/bin/trading-bot.rs:31\r\n  24: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\r\n             at /home/michael/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:78\r\n  25: <core::pin::Pin<P> as core::future::future::Future>::poll\r\n             at /home/michael/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/future.rs:119\r\n  26: trading_bot::main::{{closure}}::{{closure}}\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/select.rs:390\r\n  27: <tokio::future::poll_fn::PollFn<F> as core::future::future::Future>::poll\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs:36\r\n  28: trading_bot::main::{{closure}}\r\n             at src/bin/trading-bot.rs:20\r\n  29: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\r\n             at /home/michael/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:78\r\n  30: tokio::runtime::basic_scheduler::BasicScheduler<P>::block_on::{{closure}}::{{closure}}\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs:131\r\n  31: tokio::coop::with_budget::{{closure}}\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs:127\r\n  32: std::thread::local::LocalKey<T>::try_with\r\n             at /home/michael/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263\r\n  33: std::thread::local::LocalKey<T>::with\r\n             at /home/michael/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239\r\n  34: tokio::coop::with_budget\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs:120\r\n      tokio::coop::budget\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs:96\r\n      tokio::runtime::basic_scheduler::BasicScheduler<P>::block_on::{{closure}}\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs:131\r\n  35: tokio::runtime::basic_scheduler::enter::{{closure}}\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs:213\r\n  36: tokio::macros::scoped_tls::ScopedKey<T>::set\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs:63\r\n  37: tokio::runtime::basic_scheduler::enter\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs:213\r\n  38: tokio::runtime::basic_scheduler::BasicScheduler<P>::block_on\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs:123\r\n  39: tokio::runtime::Runtime::block_on::{{closure}}\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs:444\r\n  40: tokio::runtime::context::enter\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/context.rs:72\r\n  41: tokio::runtime::handle::Handle::enter\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs:76\r\n  42: tokio::runtime::Runtime::block_on\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs:441\r\n  43: trading_bot::main\r\n             at src/bin/trading-bot.rs:11\r\n  44: std::rt::lang_start::{{closure}}\r\n             at /home/michael/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:67\r\n  45: std::rt::lang_start_internal::{{closure}}\r\n             at src/libstd/rt.rs:52\r\n      std::panicking::try::do_call\r\n             at src/libstd/panicking.rs:348\r\n      std::panicking::try\r\n             at src/libstd/panicking.rs:325\r\n      std::panic::catch_unwind\r\n             at src/libstd/panic.rs:394\r\n      std::rt::lang_start_internal\r\n             at src/libstd/rt.rs:51\r\n  46: std::rt::lang_start\r\n             at /home/michael/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:67\r\n  47: main\r\n  48: __libc_start_main\r\n  49: _start\r\nRUST_BACKTRACE=full cargo run --bin trading-bot  46.96s user 1.97s system 1% cpu 1:14:13.20 total\r\n```\r\n</details>\r\n\r\nIgnoring the initial `tokio` setup code (frame 25 and later), every second frame in the backtrace contains the exact same text:\r\n\r\n```\r\n  20: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll\r\n             at /home/michael/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:78\r\n```\r\n\r\n## Expected Behaviour\r\n\r\nFrames containing `core::future::from_generator::GenFuture<T>::poll()` should be ignored because they are not relevant (and indeed, not even accessible) to the developer while debugging.\r\n\r\nCompare the previous backtrace a version that removes the `GenFuture::poll()` stack frames:\r\n\r\n```\r\nStack backtrace:\r\n   0: anyhow::error::<impl core::convert::From<E> for anyhow::Error>::from\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.32/src/backtrace.rs:26\r\n   1: bot::client::Client::goto_direct::{{closure}}\r\n             at ./src/client.rs:66\r\n   3: bot::client::Client::goto::{{closure}}\r\n             at ./src/client.rs:83\r\n   5: bot::trading::send_trades::{{closure}}::{{closure}}\r\n             at ./src/trading.rs:33\r\n   7: <tracing_futures::Instrumented<T> as core::future::future::Future>::poll\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs:258\r\n   8: bot::trading::send_trades::{{closure}}\r\n             at ./src/trading.rs:28\r\n  10: bot::schedule::execute_action::{{closure}}\r\n             at ./src/schedule.rs:98\r\n  12: bot::schedule::Scheduler::step::{{closure}}::{{closure}}::{{closure}}\r\n             at ./src/schedule.rs:55\r\n  14: bot::schedule::Scheduler::step::{{closure}}::{{closure}}\r\n             at ./src/schedule.rs:42\r\n  16: <tracing_futures::Instrumented<T> as core::future::future::Future>::poll\r\n             at /home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs:258\r\n  17: bot::schedule::Scheduler::step::{{closure}}\r\n             at ./src/schedule.rs:42\r\n  19: trading_bot::run::{{closure}}::{{closure}}::{{closure}}\r\n             at src/bin/trading-bot.rs:38\r\n  21: bot::utils::run_with_geckodriver::{{closure}}\r\n             at ./src/utils.rs:32\r\n  23: trading_bot::run::{{closure}}\r\n             at src/bin/trading-bot.rs:31\r\n\r\n(tokio and std frames elided)\r\n```\r\n\r\nBecause the `GenFuture` adapter is unique to async-await it should be relatively safe to add it to the list of functions ignored when printing a backtrace.\r\n\r\n## Prior Art\r\n\r\nAs mentioned in https://github.com/rust-lang/rust/issues/68336#issuecomment-575916019, trying to simplify backtraces is something that's had a lot of work in the past:\r\n\r\n> I would say this is a duplicate of #58554. There is a long history of filtering irrelevant frames, see #38165 (implemented filtering), #25621, #60852 removed the (broken) filtering when switching to the backtrace crate.\r\n\r\nThis might overlap with #68336 in that a rustc-internal attribute could be used when generating a backtrace to know what frames can be skipped. That issue mentions `#[track_caller]`, but I'd probably create a `#[rustc_backtrace_skip]` attribute just for this.", "closed_by": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74779/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74779/timeline", "performed_via_github_app": null, "state_reason": "completed"}