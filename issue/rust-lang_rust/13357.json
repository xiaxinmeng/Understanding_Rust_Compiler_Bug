{"url": "https://api.github.com/repos/rust-lang/rust/issues/13357", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/13357/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/13357/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/13357/events", "html_url": "https://github.com/rust-lang/rust/issues/13357", "id": 30935162, "node_id": "MDU6SXNzdWUzMDkzNTE2Mg==", "number": 13357, "title": "sync::one::Once should be able to \"ignore\" a run", "user": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-04-06T11:04:51Z", "updated_at": "2014-04-11T08:30:17Z", "closed_at": "2014-04-07T08:04:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`sync::one::Once` is often used for one-time initialisation (e.g. of C libraries), but non-trivial initialisations take arguments and can fail, and in the failure case, one might wish to retry with different arguments.\n\nE.g.\n\n``` rust\n#[link(name=\"my_lib\")];\nextern {\n     // negative return value indicates failure\n     fn my_lib_init(x: u32) -> i32;\n}\nfn start_up(x: u32) -> i32 {\n    static mut GUARD: Once = /* ... */;\n    let mut ret = -1;\n    GUARD.doit(|| {\n        ret = my_lib_init(x);\n    });\n    ret\n}\n\nfn main() {\n    // lets try with 0\n    if start_up(0) >= 0 { main_app() }\n\n    // that failed, maybe 1 will work\n    else if start_up(1) >= 0 { main_app() }\n\n    else { println!(\"failed to initialise\") }\n}\n```\n\nUnfortunately, that code is incorrect, because the second `start_up` call will never call `my_lib_init`: the first one consumed the guard.\n\nOne solution would be `doit` having signature `fn doit(...) -> bool;` with `false` indicating the code path \"failed\" and the `Once` should be allowed to rerun (i.e. no clean-up or anything). i.e. the current behaviour is when `doit` returns `true`.\n\n(One could also add a new method `try` and make `doit(f)` just sugar for `try(|| { f(); true })`.)\n", "closed_by": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/13357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/13357/timeline", "performed_via_github_app": null, "state_reason": "completed"}