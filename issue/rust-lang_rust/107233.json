{"url": "https://api.github.com/repos/rust-lang/rust/issues/107233", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107233/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107233/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107233/events", "html_url": "https://github.com/rust-lang/rust/issues/107233", "id": 1553520823, "node_id": "I_kwDOAAsO6M5cmNi3", "number": 107233, "title": "Bad diagnostics for erroneous use of array syntax around range in for", "user": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-01-23T17:58:05Z", "updated_at": "2023-01-23T17:58:59Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\nfn main() {\r\n    for a in [0..4] {\r\n        println!(\"{a}\");\r\n        for b in a..4 {\r\n            println!(\"{a} {b}\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Current output\r\n\r\n```Shell\r\nfn main() {\r\n    for a in [0..4] {\r\n        println!(\"{a}\");\r\n        for b in a..4 {\r\n            println!(\"{a} {b}\");\r\n        }\r\n    }\r\n}\r\n\u28ff\r\nStandard Error\r\n\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0277]: `std::ops::Range<{integer}>` doesn't implement `std::fmt::Display`\r\n --> src/main.rs:4:20\r\n  |\r\n4 |         println!(\"{a}\");\r\n  |                    ^ `std::ops::Range<{integer}>` cannot be formatted with the default formatter\r\n  |\r\n  = help: the trait `std::fmt::Display` is not implemented for `std::ops::Range<{integer}>`\r\n  = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead\r\n  = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:5:21\r\n  |\r\n5 |         for b in a..4 {\r\n  |                     ^ expected struct `std::ops::Range`, found integer\r\n  |\r\n  = note: expected struct `std::ops::Range<{integer}>`\r\n               found type `{integer}`\r\n\r\nerror[E0277]: the trait bound `std::ops::Range<{integer}>: Step` is not satisfied\r\n --> src/main.rs:5:18\r\n  |\r\n5 |         for b in a..4 {\r\n  |                  ^^^^ the trait `Step` is not implemented for `std::ops::Range<{integer}>`\r\n  |\r\n  = help: the following other types implement trait `Step`:\r\n            char\r\n            i128\r\n            i16\r\n            i32\r\n            i64\r\n            i8\r\n            isize\r\n            u128\r\n          and 5 others\r\n  = note: required for `std::ops::Range<std::ops::Range<{integer}>>` to implement `Iterator`\r\n  = note: required for `std::ops::Range<std::ops::Range<{integer}>>` to implement `IntoIterator`\r\n\r\nerror[E0277]: `std::ops::Range<{integer}>` doesn't implement `std::fmt::Display`\r\n --> src/main.rs:6:24\r\n  |\r\n6 |             println!(\"{a} {b}\");\r\n  |                        ^ `std::ops::Range<{integer}>` cannot be formatted with the default formatter\r\n  |\r\n  = help: the trait `std::fmt::Display` is not implemented for `std::ops::Range<{integer}>`\r\n  = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead\r\n  = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror[E0277]: `std::ops::Range<{integer}>` doesn't implement `std::fmt::Display`\r\n --> src/main.rs:6:28\r\n  |\r\n6 |             println!(\"{a} {b}\");\r\n  |                            ^ `std::ops::Range<{integer}>` cannot be formatted with the default formatter\r\n  |\r\n  = help: the trait `std::fmt::Display` is not implemented for `std::ops::Range<{integer}>`\r\n  = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead\r\n  = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nSome errors have detailed explanations: E0277, E0308.\r\nFor more information about an error, try `rustc --explain E0277`.\r\nerror: could not compile `playground` due to 5 previous errors\r\n\r\nStandard Output\r\n```\r\n\r\n\r\n### Desired output\r\n\r\nIdeally, the compiler would spot this situation and add some help output suggesting removing the `[ ]`.\r\n\r\n### Rationale and extra context\r\n\r\nIn many languages `[a..b]` is how one spells a range iteration.  In Rust the `[ ]` are superfluous, and result in a one-element array, which when iterated over binds the loop variable to the range.\r\n\r\n### Other cases\r\n\r\nI think the trigger for the suggestion should be something like \"type error involving a `Range` object which resulted from iterating over a single-element array.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107233/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 1, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107233/timeline", "performed_via_github_app": null, "state_reason": null}