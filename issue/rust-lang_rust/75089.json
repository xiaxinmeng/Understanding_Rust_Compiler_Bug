{"url": "https://api.github.com/repos/rust-lang/rust/issues/75089", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/75089/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/75089/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/75089/events", "html_url": "https://github.com/rust-lang/rust/issues/75089", "id": 671848319, "node_id": "MDU6SXNzdWU2NzE4NDgzMTk=", "number": 75089, "title": "staticlib for wasm32 targets have missing dependencies", "user": {"login": "osa1", "id": 448274, "node_id": "MDQ6VXNlcjQ0ODI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/448274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osa1", "html_url": "https://github.com/osa1", "followers_url": "https://api.github.com/users/osa1/followers", "following_url": "https://api.github.com/users/osa1/following{/other_user}", "gists_url": "https://api.github.com/users/osa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/osa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osa1/subscriptions", "organizations_url": "https://api.github.com/users/osa1/orgs", "repos_url": "https://api.github.com/users/osa1/repos", "events_url": "https://api.github.com/users/osa1/events{/privacy}", "received_events_url": "https://api.github.com/users/osa1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-03T07:04:19Z", "updated_at": "2020-08-03T15:14:31Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n~ $ rustc --version --verbose\r\nrustc 1.46.0-nightly (346aec9b0 2020-07-11)\r\nbinary: rustc\r\ncommit-hash: 346aec9b02f3c74f3fce97fd6bda24709d220e49\r\ncommit-date: 2020-07-11\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.46.0-nightly\r\nLLVM version: 10.0\r\n\r\n~ $ cargo --version --verbose\r\ncargo 1.46.0-nightly (4f74d9b2a 2020-07-08)\r\nrelease: 1.46.0\r\ncommit-hash: 4f74d9b2a771c58b7ef4906b2668afd075bc8081\r\ncommit-date: 2020-07-08\r\n\r\n~ $ xargo --version --verbose\r\nxargo 0.3.22\r\n+ \"cargo\" \"--version\" \"--verbose\"\r\ncargo 1.46.0-nightly (4f74d9b2a 2020-07-08)\r\nrelease: 1.46.0\r\ncommit-hash: 4f74d9b2a771c58b7ef4906b2668afd075bc8081\r\ncommit-date: 2020-07-08\r\n```\r\n\r\n(I asked this on Zulip 4 days ago but got no answers, and I think this is a bug somewhere in the toolchain, so posting here with more details)\r\n\r\nA \"staticlib\" should include all dependencies of the Rust crate and should be linkable with libraries and executables generated by other languages. However it seems like this currently does not hold.\r\n\r\nHere's an [example][1]. To run, make sure you have xargo, llvm-10, and [wabt][2] installed (xargo is needed because core and std for wasm32 are not built with PIC relocation model and can't be used for creating shared libraries) and run `./build.sh`. It'll generate a `libfinal.wat` file. If you open it in your editor you'll see this line:\r\n\r\n```\r\n(import \"GOT.func\" \"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h9ba9fea9cadf7bd5E\" (global (;3;) (mut i32)))\r\n```\r\n\r\nThis is a Rust dependency that is not included in the final library and imported. Because we're using \"staticlib\" crate type this should not happen: all dependencies should be in the library already and there shouldn't be any imports.\r\n\r\nI should also note that I can do the same (compile Rust crate to staticlib, link it with C code to a shared library) for x86_64 target.\r\n\r\nI tried to understand where does this import come from. If I unpack the generated `.a` file and generate `.wat` for the `.o` files I see that the function is defined in a file called `core-b5d07d1a52bf60be.core.au5sshbb-cgu.4.rcgu.o`. I guess the \"core\" here means it's defined in \"core\" rather than in my code. Then there's another file called `rs_nostd_core_lib_1-4e8f00c808934bbd.rs_nostd_core_lib_1.dk7ycmpp-cgu.2.rcgu.o.wat`, which I think is generated for my code, which imports this function both from \"env\" (correct) and from \"func.GOT\" (incorrect). The relevant lines from the file:\r\n\r\n```wat\r\n(module\r\n  ...\r\n  (import \"env\" \"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h9ba9fea9cadf7bd5E\" (func (;4;) (type 1)))\r\n  ...\r\n  (import \"GOT.func\" \"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h9ba9fea9cadf7bd5E\" (global (;2;) (mut i32)))\r\n  ...)\r\n```\r\n\r\nThis is the same function imported twice, from different modules. I think the bug is in the `GOT.func` line.\r\n\r\nI'd be happy to help debugging or debug it myself if anyone gives me pointers on where to start.\r\n\r\n[1]: https://github.com/osa1/wasm_test/tree/master/rs_nostd_core_lib_2\r\n[2]: https://github.com/WebAssembly/wabt\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/75089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/75089/timeline", "performed_via_github_app": null, "state_reason": null}