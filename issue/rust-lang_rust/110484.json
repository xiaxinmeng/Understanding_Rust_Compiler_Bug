{"url": "https://api.github.com/repos/rust-lang/rust/issues/110484", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110484/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110484/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110484/events", "html_url": "https://github.com/rust-lang/rust/issues/110484", "id": 1672429958, "node_id": "I_kwDOAAsO6M5jr0GG", "number": 110484, "title": "ICE when using macro, curly brackets, and multi-byte character", "user": {"login": "mamekoro", "id": 86554319, "node_id": "MDQ6VXNlcjg2NTU0MzE5", "avatar_url": "https://avatars.githubusercontent.com/u/86554319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mamekoro", "html_url": "https://github.com/mamekoro", "followers_url": "https://api.github.com/users/mamekoro/followers", "following_url": "https://api.github.com/users/mamekoro/following{/other_user}", "gists_url": "https://api.github.com/users/mamekoro/gists{/gist_id}", "starred_url": "https://api.github.com/users/mamekoro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mamekoro/subscriptions", "organizations_url": "https://api.github.com/users/mamekoro/orgs", "repos_url": "https://api.github.com/users/mamekoro/repos", "events_url": "https://api.github.com/users/mamekoro/events{/privacy}", "received_events_url": "https://api.github.com/users/mamekoro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-04-18T06:21:38Z", "updated_at": "2023-04-18T07:34:18Z", "closed_at": "2023-04-18T07:34:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\nWhen I mistakenly used  `{` and `}` instead of `{{` and `}}` in the [`indoc::printdoc!`](https://docs.rs/indoc/latest/indoc/macro.printdoc.html) macro, an ICE occurred. \r\n\r\nThe `\u3042` character in the following code is a Japanese character (Unicode codepoint `U+3042`).\r\n\r\nIf the `\u3042` character immediately before `{aaa}` is replaced with an alphabet (e.g. `\u3042x{aaa}`), this ICE will be a normal compilation error [1]. If it is replaced with another multi-byte character (CJK character, emoji, etc.), this ICE still occurs.\r\n\r\nWhen I used `println!` instead of `indoc::printdoc!`, a normal compilation error [2] occurred.\r\n\r\n<details><summary>[1] normal compilation error</summary>\r\n<p>\r\n\r\n```\r\nerror[E0425]: cannot find value `aaa` in this scope\r\n --> src/main.rs:3:5\r\n  |\r\n3 |         \u3042x{aaa}\r\n  |     ^^^ not found in this scope\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n<details><summary>[2] normal compilation error</summary>\r\n<p>\r\n\r\n```\r\nerror[E0425]: cannot find value `aaa` in this scope\r\n --> src/main.rs:2:18\r\n  |\r\n2 |     println!(\"\u3042\u3042{aaa}\");\r\n  |                    ^^^ not found in this scope\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n### Code\r\n\r\n```Rust\r\nfn main() {\r\n    indoc::printdoc! {\"\r\n        \u3042\u3042{aaa}\r\n    \"}\r\n}\r\n```\r\n\r\n### Cargo.toml\r\n\r\n```toml\r\n[package]\r\nname = \"test_rustc\"\r\nversion = \"0.1.0\"\r\nedition = \"2021\"\r\n\r\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\r\n\r\n[dependencies]\r\nindoc = \"2.0.1\"\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.68.2 (9eb3afe9e 2023-03-27)\r\nbinary: rustc\r\ncommit-hash: 9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0\r\ncommit-date: 2023-03-27\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.68.2\r\nLLVM version: 15.0.6\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: bpos.to_u32() >= mbc.pos.to_u32() + mbc.bytes as u32', compiler/rustc_span/src/lib.rs:1717:17\r\nstack backtrace:\r\n   0:     0x7f957f36659a - std::backtrace_rs::backtrace::libunwind::trace::ha271a8a7e1f3d4ef\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7f957f36659a - std::backtrace_rs::backtrace::trace_unsynchronized::h85739da0352c791a\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f957f36659a - std::sys_common::backtrace::_print_fmt::hbc6ebcfb2910b329\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/std/src/sys_common/backtrace.rs:65:5\r\n   3:     0x7f957f36659a - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::he1c117e52d53614f\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/std/src/sys_common/backtrace.rs:44:22\r\n   4:     0x7f957f3c839e - core::fmt::write::h25eb51b9526b8e0c\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/fmt/mod.rs:1213:17\r\n   5:     0x7f957f356be5 - std::io::Write::write_fmt::ha9edec5fb1621933\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/std/src/io/mod.rs:1682:15\r\n   6:     0x7f957f366365 - std::sys_common::backtrace::_print::hf8657cd429fc3452\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/std/src/sys_common/backtrace.rs:47:5\r\n   7:     0x7f957f366365 - std::sys_common::backtrace::print::h41b9b18ed86f86bd\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/std/src/sys_common/backtrace.rs:34:9\r\n   8:     0x7f957f36912f - std::panicking::default_hook::{{closure}}::h22a91871f4454152\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/std/src/panicking.rs:267:22\r\n   9:     0x7f957f368e6b - std::panicking::default_hook::h21ddc36de0cd4ae7\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/std/src/panicking.rs:286:9\r\n  10:     0x7f95826b9324 - rustc_driver[70f63b52fde826b7]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n  11:     0x7f957f36996a - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::h6f7e3c94ecc52e2f\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/alloc/src/boxed.rs:2002:9\r\n  12:     0x7f957f36996a - std::panicking::rust_panic_with_hook::h5059419d6d59b3d0\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/std/src/panicking.rs:692:13\r\n  13:     0x7f957f3696a2 - std::panicking::begin_panic_handler::{{closure}}::h0f383c291cd78343\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/std/src/panicking.rs:577:13\r\n  14:     0x7f957f366a4c - std::sys_common::backtrace::__rust_end_short_backtrace::h70ab22f2ad318cdd\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/std/src/sys_common/backtrace.rs:137:18\r\n  15:     0x7f957f3693f2 - rust_begin_unwind\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/std/src/panicking.rs:575:5\r\n  16:     0x7f957f3c4d43 - core::panicking::panic_fmt::hd1d46bcde3c61d72\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/panicking.rs:64:14\r\n  17:     0x7f957f3c4ddd - core::panicking::panic::h056c466ab4571cf2\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/panicking.rs:114:5\r\n  18:     0x7f9580fc9f8b - <rustc_span[7c23fb27ec020b97]::source_map::SourceMap>::lookup_char_pos\r\n  19:     0x7f9581c9973c - <rustc_errors[53e74ce803854a4d]::emitter::EmitterWriter>::get_multispan_max_line_num\r\n  20:     0x7f9581c931ec - <rustc_errors[53e74ce803854a4d]::emitter::EmitterWriter as rustc_errors[53e74ce803854a4d]::emitter::Emitter>::emit_diagnostic\r\n  21:     0x7f9581c915d1 - <rustc_errors[53e74ce803854a4d]::json::Diagnostic>::from_errors_diagnostic\r\n  22:     0x7f9581c90efc - <rustc_errors[53e74ce803854a4d]::json::JsonEmitter as rustc_errors[53e74ce803854a4d]::emitter::Emitter>::emit_diagnostic\r\n  23:     0x7f9581dff068 - <rustc_errors[53e74ce803854a4d]::HandlerInner>::emit_diagnostic::{closure#2}\r\n  24:     0x7f958103d838 - <rustc_errors[53e74ce803854a4d]::HandlerInner>::emit_diagnostic\r\n  25:     0x7f95814b29d1 - <rustc_errors[53e74ce803854a4d]::Handler>::emit_diagnostic\r\n  26:     0x7f958145978d - <rustc_errors[53e74ce803854a4d]::ErrorGuaranteed as rustc_errors[53e74ce803854a4d]::diagnostic_builder::EmissionGuarantee>::diagnostic_builder_emit_producing_guarantee\r\n  27:     0x7f95819111eb - <rustc_resolve[279f1aea39d534f0]::Resolver>::report_errors\r\n  28:     0x7f95818a6b1c - <rustc_session[cd7c78827427c6d6]::session::Session>::time::<(), <rustc_resolve[279f1aea39d534f0]::Resolver>::resolve_crate::{closure#0}>\r\n  29:     0x7f95818a4d61 - rustc_interface[698bad460dbd68d3]::passes::configure_and_expand\r\n  30:     0x7f95818a4276 - <rustc_interface[698bad460dbd68d3]::queries::Queries>::expansion\r\n  31:     0x7f958189eec9 - <rustc_interface[698bad460dbd68d3]::queries::Queries>::global_ctxt\r\n  32:     0x7f95818979cd - rustc_span[7c23fb27ec020b97]::with_source_map::<core[1d432356d8e1e9f1]::result::Result<(), rustc_errors[53e74ce803854a4d]::ErrorGuaranteed>, rustc_interface[698bad460dbd68d3]::interface::run_compiler<core[1d432356d8e1e9f1]::result::Result<(), rustc_errors[53e74ce803854a4d]::ErrorGuaranteed>, rustc_driver[70f63b52fde826b7]::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\r\n  33:     0x7f95818902d4 - <scoped_tls[1044df3f3db9be03]::ScopedKey<rustc_span[7c23fb27ec020b97]::SessionGlobals>>::set::<rustc_interface[698bad460dbd68d3]::interface::run_compiler<core[1d432356d8e1e9f1]::result::Result<(), rustc_errors[53e74ce803854a4d]::ErrorGuaranteed>, rustc_driver[70f63b52fde826b7]::run_compiler::{closure#1}>::{closure#0}, core[1d432356d8e1e9f1]::result::Result<(), rustc_errors[53e74ce803854a4d]::ErrorGuaranteed>>\r\n  34:     0x7f958188f9d2 - std[f8b79e573431a86c]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[698bad460dbd68d3]::util::run_in_thread_pool_with_globals<rustc_interface[698bad460dbd68d3]::interface::run_compiler<core[1d432356d8e1e9f1]::result::Result<(), rustc_errors[53e74ce803854a4d]::ErrorGuaranteed>, rustc_driver[70f63b52fde826b7]::run_compiler::{closure#1}>::{closure#0}, core[1d432356d8e1e9f1]::result::Result<(), rustc_errors[53e74ce803854a4d]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[1d432356d8e1e9f1]::result::Result<(), rustc_errors[53e74ce803854a4d]::ErrorGuaranteed>>\r\n  35:     0x7f958188f77a - <<std[f8b79e573431a86c]::thread::Builder>::spawn_unchecked_<rustc_interface[698bad460dbd68d3]::util::run_in_thread_pool_with_globals<rustc_interface[698bad460dbd68d3]::interface::run_compiler<core[1d432356d8e1e9f1]::result::Result<(), rustc_errors[53e74ce803854a4d]::ErrorGuaranteed>, rustc_driver[70f63b52fde826b7]::run_compiler::{closure#1}>::{closure#0}, core[1d432356d8e1e9f1]::result::Result<(), rustc_errors[53e74ce803854a4d]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[1d432356d8e1e9f1]::result::Result<(), rustc_errors[53e74ce803854a4d]::ErrorGuaranteed>>::{closure#1} as core[1d432356d8e1e9f1]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  36:     0x7f957f373823 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h3205ec2d7fc232c5\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/alloc/src/boxed.rs:1988:9\r\n  37:     0x7f957f373823 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h3bb5daec8177f56b\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/alloc/src/boxed.rs:1988:9\r\n  38:     0x7f957f373823 - std::sys::unix::thread::Thread::new::thread_start::had7b8061e306bb5c\r\n                               at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/std/src/sys/unix/thread.rs:108:17\r\n  39:     0x7f957f094b43 - start_thread\r\n                               at ./nptl/./nptl/pthread_create.c:442:8\r\n  40:     0x7f957f126a00 - clone3\r\n                               at ./misc/../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\r\n  41:                0x0 - <unknown>\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.68.2 (9eb3afe9e 2023-03-27) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED]\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: could not compile `test_rustc`\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: bpos.to_u32() >= mbc.pos.to_u32() + mbc.bytes as u32', compiler/rustc_span/src/lib.rs:1717:17\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/std/src/panicking.rs:575:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/panicking.rs:64:14\r\n   2: core::panicking::panic\r\n             at /rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/panicking.rs:114:5\r\n   3: <rustc_span::source_map::SourceMap>::lookup_char_pos\r\n   4: <rustc_errors::emitter::EmitterWriter>::get_multispan_max_line_num\r\n   5: <rustc_errors::emitter::EmitterWriter as rustc_errors::emitter::Emitter>::emit_diagnostic\r\n   6: <rustc_errors::json::Diagnostic>::from_errors_diagnostic\r\n   7: <rustc_errors::json::JsonEmitter as rustc_errors::emitter::Emitter>::emit_diagnostic\r\n   8: <rustc_errors::HandlerInner>::emit_diagnostic::{closure#2}\r\n   9: <rustc_errors::HandlerInner>::emit_diagnostic\r\n  10: <rustc_errors::Handler>::emit_diagnostic\r\n  11: <rustc_errors::ErrorGuaranteed as rustc_errors::diagnostic_builder::EmissionGuarantee>::diagnostic_builder_emit_producing_guarantee\r\n  12: <rustc_resolve::Resolver>::report_errors\r\n  13: <rustc_session::session::Session>::time::<(), <rustc_resolve::Resolver>::resolve_crate::{closure#0}>\r\n  14: rustc_interface::passes::configure_and_expand\r\n  15: <rustc_interface::queries::Queries>::expansion\r\n  16: <rustc_interface::queries::Queries>::global_ctxt\r\n  17: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\r\n  18: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.68.2 (9eb3afe9e 2023-03-27) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED]\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: could not compile `test_rustc`\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "mamekoro", "id": 86554319, "node_id": "MDQ6VXNlcjg2NTU0MzE5", "avatar_url": "https://avatars.githubusercontent.com/u/86554319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mamekoro", "html_url": "https://github.com/mamekoro", "followers_url": "https://api.github.com/users/mamekoro/followers", "following_url": "https://api.github.com/users/mamekoro/following{/other_user}", "gists_url": "https://api.github.com/users/mamekoro/gists{/gist_id}", "starred_url": "https://api.github.com/users/mamekoro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mamekoro/subscriptions", "organizations_url": "https://api.github.com/users/mamekoro/orgs", "repos_url": "https://api.github.com/users/mamekoro/repos", "events_url": "https://api.github.com/users/mamekoro/events{/privacy}", "received_events_url": "https://api.github.com/users/mamekoro/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110484/timeline", "performed_via_github_app": null, "state_reason": "completed"}