{"url": "https://api.github.com/repos/rust-lang/rust/issues/94654", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94654/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94654/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94654/events", "html_url": "https://github.com/rust-lang/rust/issues/94654", "id": 1160469436, "node_id": "I_kwDOAAsO6M5FK1u8", "number": 94654, "title": "ICE with --alt rustc: WorkerLocal can only be used on the thread pool it was created on", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234876, "node_id": "MDU6TGFiZWwyMzQ4NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-hard", "name": "E-hard", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Hard / a lot"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 891133401, "node_id": "MDU6TGFiZWw4OTExMzM0MDE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parallel-queries", "name": "A-parallel-queries", "color": "f7e101", "default": false, "description": "Area: Parallel query execution"}, {"id": 1576178387, "node_id": "MDU6TGFiZWwxNTc2MTc4Mzg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-compiler-parallel", "name": "WG-compiler-parallel", "color": "c2e0c6", "default": false, "description": "Working group working on parallelizing the compiler"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-03-05T23:28:47Z", "updated_at": "2022-07-03T05:39:45Z", "closed_at": "2022-07-03T05:39:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\ncode from glacier /fixed/72554.rs\r\n```Rust\r\nuse std::collections::BTreeSet;\r\n\r\n#[derive(Hash)]\r\npub enum ElemDerived {\r\n    A(ElemDerived)\r\n}\r\n\r\npub enum Elem {\r\n    Derived(ElemDerived)\r\n}\r\n\r\npub struct Set(BTreeSet<Elem>);\r\n\r\nimpl Set {\r\n    pub fn into_iter(self) -> impl Iterator<Item = Elem> {\r\n        self.0.into_iter()\r\n    }\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n\r\n\r\nNOTE this is the alt master rustc, installed via `rustup-toolchain-install-master -f -n master  -c rustc-dev llvm-tools rust-src clippy rust-analyzer --alt`\r\n```\r\nrustc 1.61.0-nightly (c274e4969 2022-03-05)\r\nbinary: rustc\r\ncommit-hash: c274e4969f058b1c644243181ece9f829efa7594\r\ncommit-date: 2022-03-05\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.61.0-nightly\r\nLLVM version: 14.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread '<unnamed>' panicked at 'WorkerLocal can only be used on the thread pool it was created on', /cargo/registry/src/github.com-1ecc6299db9ec823/rustc-rayon-core-0.3.2/src/worker_local.rs:49:17\r\nstack backtrace:\r\n   0:     0x7f846729dd2c - std::backtrace_rs::backtrace::libunwind::trace::hd9d6c66ed2138bb0\r\n                               at /rustc/c274e4969f058b1c644243181ece9f829efa7594/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7f846729dd2c - std::backtrace_rs::backtrace::trace_unsynchronized::ha4edb04af5a111d2\r\n                               at /rustc/c274e4969f058b1c644243181ece9f829efa7594/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f846729dd2c - std::sys_common::backtrace::_print_fmt::h34bfe6ef54352a7f\r\n                               at /rustc/c274e4969f058b1c644243181ece9f829efa7594/library/std/src/sys_common/backtrace.rs:66:5\r\n   3:     0x7f846729dd2c - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h91638cd7890644b7\r\n                               at /rustc/c274e4969f058b1c644243181ece9f829efa7594/library/std/src/sys_common/backtrace.rs:45:22\r\n   4:     0x7f84672f7bec - core::fmt::write::h407f77bceaf22b75\r\n                               at /rustc/c274e4969f058b1c644243181ece9f829efa7594/library/core/src/fmt/mod.rs:1190:17\r\n   5:     0x7f846728e801 - std::io::Write::write_fmt::h85de75cd3cb86034\r\n                               at /rustc/c274e4969f058b1c644243181ece9f829efa7594/library/std/src/io/mod.rs:1655:15\r\n   6:     0x7f84672a0c65 - std::sys_common::backtrace::_print::h9303e0f315439c4b\r\n                               at /rustc/c274e4969f058b1c644243181ece9f829efa7594/library/std/src/sys_common/backtrace.rs:48:5\r\n   7:     0x7f84672a0c65 - std::sys_common::backtrace::print::h278cbd6c00b20bf7\r\n                               at /rustc/c274e4969f058b1c644243181ece9f829efa7594/library/std/src/sys_common/backtrace.rs:35:9\r\n   8:     0x7f84672a0c65 - std::panicking::default_hook::{{closure}}::h66dc8e0c0481f9ac\r\n                               at /rustc/c274e4969f058b1c644243181ece9f829efa7594/library/std/src/panicking.rs:295:22\r\n   9:     0x7f84672a0908 - std::panicking::default_hook::h3732f22170eb6fcb\r\n                               at /rustc/c274e4969f058b1c644243181ece9f829efa7594/library/std/src/panicking.rs:314:9\r\n  10:     0x7f8467ae7b71 - rustc_driver[a243c3d9738e9cda]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n  11:     0x7f84672a1501 - std::panicking::rust_panic_with_hook::hfa6a9afb1a6b2eff\r\n                               at /rustc/c274e4969f058b1c644243181ece9f829efa7594/library/std/src/panicking.rs:702:17\r\n  12:     0x7f846855da2b - std[54a224735ab911a]::panicking::begin_panic::<&str>::{closure#0}\r\n  13:     0x7f8468548204 - std[54a224735ab911a]::sys_common::backtrace::__rust_end_short_backtrace::<std[54a224735ab911a]::panicking::begin_panic<&str>::{closure#0}, !>\r\n  14:     0x7f84683d2fe9 - std[54a224735ab911a]::panicking::begin_panic::<&str>\r\n  15:     0x7f84694a43d0 - rustc_query_system[1506d2c0f1ca8e4e]::query::plumbing::get_query::<rustc_query_impl[5f52c835d70aa024]::queries::generics_of, rustc_query_impl[5f52c835d70aa024]::plumbing::QueryCtxt>\r\n  16:     0x7f846a3372db - <rustc_middle[101c9dc362f50b21]::ty::print::pretty::FmtPrinter as rustc_middle[101c9dc362f50b21]::ty::print::Printer>::default_print_def_path\r\n  17:     0x7f846a3352a5 - <rustc_middle[101c9dc362f50b21]::ty::print::pretty::FmtPrinter as rustc_middle[101c9dc362f50b21]::ty::print::Printer>::print_def_path\r\n  18:     0x7f8468ab7c85 - <rustc_middle[101c9dc362f50b21]::ty::TraitPredicate as rustc_middle[101c9dc362f50b21]::ty::print::Print<rustc_middle[101c9dc362f50b21]::ty::print::pretty::FmtPrinter>>::print\r\n  19:     0x7f8468ab813c - <rustc_middle[101c9dc362f50b21]::ty::PredicateKind as rustc_middle[101c9dc362f50b21]::ty::print::Print<rustc_middle[101c9dc362f50b21]::ty::print::pretty::FmtPrinter>>::print\r\n  20:     0x7f8468b85b4e - <rustc_middle[101c9dc362f50b21]::ty::print::pretty::FmtPrinter as rustc_middle[101c9dc362f50b21]::ty::print::pretty::PrettyPrinter>::in_binder::<rustc_middle[101c9dc362f50b21]::ty::PredicateKind>\r\n  21:     0x7f8468ab88fd - <rustc_middle[101c9dc362f50b21]::ty::Predicate as core[f66f8263def5172a]::fmt::Display>::fmt\r\n  22:     0x7f84672f7bec - core::fmt::write::h407f77bceaf22b75\r\n                               at /rustc/c274e4969f058b1c644243181ece9f829efa7594/library/core/src/fmt/mod.rs:1190:17\r\n  23:     0x7f84672ebf59 - core::fmt::Write::write_fmt::h757a55550f02d0fd\r\n                               at /rustc/c274e4969f058b1c644243181ece9f829efa7594/library/core/src/fmt/mod.rs:186:9\r\n  24:     0x7f84672ebf59 - alloc::fmt::format::h05c7c4652fba5c0f\r\n                               at /rustc/c274e4969f058b1c644243181ece9f829efa7594/library/alloc/src/fmt.rs:597:5\r\n  25:     0x7f846847e6ae - <rustc_query_impl[5f52c835d70aa024]::queries::evaluate_obligation as rustc_query_system[1506d2c0f1ca8e4e]::query::config::QueryDescription<rustc_query_impl[5f52c835d70aa024]::plumbing::QueryCtxt>>::describe\r\n  26:     0x7f84685a53ba - rustc_query_impl[5f52c835d70aa024]::make_query::evaluate_obligation\r\n  27:     0x7f84683405f6 - <rustc_query_system[1506d2c0f1ca8e4e]::query::plumbing::QueryState<rustc_middle[101c9dc362f50b21]::infer::canonical::Canonical<rustc_middle[101c9dc362f50b21]::ty::ParamEnvAnd<rustc_middle[101c9dc362f50b21]::ty::Predicate>>>>::try_collect_active_jobs::<rustc_query_impl[5f52c835d70aa024]::plumbing::QueryCtxt>\r\n  28:     0x7f84683f5a78 - <rustc_query_impl[5f52c835d70aa024]::Queries>::try_collect_active_jobs\r\n  29:     0x7f84683d33a3 - rustc_query_system[1506d2c0f1ca8e4e]::query::job::deadlock::<rustc_query_impl[5f52c835d70aa024]::plumbing::QueryCtxt>\r\n  30:     0x7f8467b81f76 - <scoped_tls[a76d38c46f15ed9e]::ScopedKey<rustc_span[1b916fa4cb305af0]::SessionGlobals>>::set::<rustc_interface[ee304f5e577cf6b9]::util::handle_deadlock::{closure#1}::{closure#0}::{closure#0}, ()>\r\n  31:     0x7f8467bcded6 - rustc_rayon_core[dda15808133c3082]::tlv::with::<rustc_middle[101c9dc362f50b21]::ty::context::tls::enter_context<rustc_interface[ee304f5e577cf6b9]::util::handle_deadlock::{closure#1}::{closure#0}, ()>::{closure#0}, ()>\r\n  32:     0x7f8467b8401d - std[54a224735ab911a]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[ee304f5e577cf6b9]::util::handle_deadlock::{closure#1}, ()>\r\n  33:     0x7f8467b7bc5a - std[54a224735ab911a]::panicking::try::<(), core[f66f8263def5172a]::panic::unwind_safe::AssertUnwindSafe<<std[54a224735ab911a]::thread::Builder>::spawn_unchecked_<rustc_interface[ee304f5e577cf6b9]::util::handle_deadlock::{closure#1}, ()>::{closure#1}::{closure#0}>>\r\n  34:     0x7f8467b77dec - <<std[54a224735ab911a]::thread::Builder>::spawn_unchecked_<rustc_interface[ee304f5e577cf6b9]::util::handle_deadlock::{closure#1}, ()>::{closure#1} as core[f66f8263def5172a]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  35:     0x7f84672ab8c3 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hb7ce1f9a74daab59\r\n                               at /rustc/c274e4969f058b1c644243181ece9f829efa7594/library/alloc/src/boxed.rs:1854:9\r\n  36:     0x7f84672ab8c3 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hc28d1f774d95b80d\r\n                               at /rustc/c274e4969f058b1c644243181ece9f829efa7594/library/alloc/src/boxed.rs:1854:9\r\n  37:     0x7f84672ab8c3 - std::sys::unix::thread::Thread::new::thread_start::h7c8916b17d3c6d45\r\n                               at /rustc/c274e4969f058b1c644243181ece9f829efa7594/library/std/src/sys/unix/thread.rs:108:17\r\n  38:     0x7f84670835c2 - start_thread\r\n  39:     0x7f8467108584 - __clone\r\n  40:                0x0 - <unknown>\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.61.0-nightly (c274e4969 2022-03-05) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\nend of query stack\r\ndeadlock handler panicked, aborting process\r\n[1]    859470 IOT instruction (core dumped)  ~/.rustup/toolchains/master/bin/rustc ./72554.rs\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94654/timeline", "performed_via_github_app": null, "state_reason": "completed"}