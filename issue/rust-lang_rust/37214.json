{"url": "https://api.github.com/repos/rust-lang/rust/issues/37214", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/37214/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/37214/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/37214/events", "html_url": "https://github.com/rust-lang/rust/issues/37214", "id": 183265104, "node_id": "MDU6SXNzdWUxODMyNjUxMDQ=", "number": 37214, "title": "Make std::io::Take<R> an instance of std::io::Seek when R:std::io::Seek", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 657353545, "node_id": "MDU6TGFiZWw2NTczNTM1NDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-accepted", "name": "C-feature-accepted", "color": "f5f1fd", "default": false, "description": "Category: A feature request that has been accepted pending implementation."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-16T12:43:02Z", "updated_at": "2017-11-18T07:16:32Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "This would be particularly useful for reading file formats containing other formats.\nExamples include:\n- OpenType font files, where CFF is an embedded format.\n- GRIB (format used by weather forecast organisms), containing grayscale JPEG to describe values.\n\n(and probably many others)\nIn such cases, it would also be cool to have a \"drain\" method on std::io::Take, that would move the read cursor at the end of the Take.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/37214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/37214/timeline", "performed_via_github_app": null, "state_reason": null}