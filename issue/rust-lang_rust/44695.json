{"url": "https://api.github.com/repos/rust-lang/rust/issues/44695", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44695/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44695/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44695/events", "html_url": "https://github.com/rust-lang/rust/issues/44695", "id": 258761380, "node_id": "MDU6SXNzdWUyNTg3NjEzODA=", "number": 44695, "title": "Ergonomics: &String does not implement PartialEq<str>", "user": {"login": "djc", "id": 158471, "node_id": "MDQ6VXNlcjE1ODQ3MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/158471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djc", "html_url": "https://github.com/djc", "followers_url": "https://api.github.com/users/djc/followers", "following_url": "https://api.github.com/users/djc/following{/other_user}", "gists_url": "https://api.github.com/users/djc/gists{/gist_id}", "starred_url": "https://api.github.com/users/djc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djc/subscriptions", "organizations_url": "https://api.github.com/users/djc/orgs", "repos_url": "https://api.github.com/users/djc/repos", "events_url": "https://api.github.com/users/djc/events{/privacy}", "received_events_url": "https://api.github.com/users/djc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-19T09:51:20Z", "updated_at": "2021-10-18T09:35:03Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Start with this:\r\n\r\n```rust\r\nfn cmp_prefix() -> bool {\r\n    let owned = \"foo\".to_owned();\r\n    let string_ref = &owned;\r\n    let partial = \"foobar\";\r\n    string_ref == partial[..3]\r\n}\r\n```\r\n\r\nIt doesn't compile: \"the trait bound `&String: PartialEq<str>` is not satisfied\".\r\n\r\nLet's [Google this](https://www.google.nl/search?q=rust+compare+String+with+str), first hit is [StackOverflow](https://stackoverflow.com/questions/25383488/how-to-match-a-string-against-string-literals-in-rust), first/accepted answer talks about `.as_ref()`, try that. `string_ref.as_ref() == &partial[..3]` results in \"the trait bound `&_: PartialEq<str>` is not satisfied\" [oh, how I hate these underscores in errors].\r\n\r\nAt this point I try adding `*` to the LHS or `&` to the RHS. The latter results in \"type annotations required: cannot resolve `String: AsRef<_>`\" [huh?].\r\n\r\nHere's actually everything I tried (from my actual code instead of simple example):\r\n\r\n```rust\r\nmeta_subj == db_subj[..998]\r\n&meta_subj == &db_subj[..998]\r\nmeta_subj.as_ref() == &db_subj[..998] // I think this was before Googling, even\r\nmeta_subj.as_ref() == db_subj[..998]\r\nmeta_subj.as_ref::<&str>() == &db_subj[..998] // WTF is this thing with not resolving String: AsRef?\r\n&meta_subj.as_ref() == db_subj[..998]\r\n*meta_subj.as_ref() == db_subj[..998]\r\n```\r\n\r\nAt this point I'm pretty much out of ideas other than brute-forcing with some `to_string()`. I don't really consider myself a beginner at this point, having successfully written a few thousand lines of code over the past 15 months, so here's where I have some empathy for those saying Rust's learning curve is just too steep.\r\n\r\nI went and read some more on SO and found this, which actually seems to work `(meta_subj as &str) == &db_subj[..998]`. The reason I would not have come up with this is that generally the compiler seems to be able to coerce `&T where T: String` to `&str`, so I find it hard to come up with a reason it cannot do so in this case.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44695/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44695/timeline", "performed_via_github_app": null, "state_reason": null}