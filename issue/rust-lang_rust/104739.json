{"url": "https://api.github.com/repos/rust-lang/rust/issues/104739", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104739/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104739/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104739/events", "html_url": "https://github.com/rust-lang/rust/issues/104739", "id": 1460549405, "node_id": "I_kwDOAAsO6M5XDjcd", "number": 104739, "title": "Better help message for \"Mismatched types\" [E0308] when the issue is function implicitly returning `()`", "user": {"login": "zackw", "id": 325899, "node_id": "MDQ6VXNlcjMyNTg5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/325899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackw", "html_url": "https://github.com/zackw", "followers_url": "https://api.github.com/users/zackw/followers", "following_url": "https://api.github.com/users/zackw/following{/other_user}", "gists_url": "https://api.github.com/users/zackw/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackw/subscriptions", "organizations_url": "https://api.github.com/users/zackw/orgs", "repos_url": "https://api.github.com/users/zackw/repos", "events_url": "https://api.github.com/users/zackw/events{/privacy}", "received_events_url": "https://api.github.com/users/zackw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-22T21:04:51Z", "updated_at": "2022-11-22T21:38:02Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While working through [rustlings](https://github.com/rust-lang/rustlings) I noticed a place where the error Rust prints is unclear unless you already know more or less what the problem is.\r\n\r\nGiven the following code: [[playground](https://play.rust-lang.org/?version=stable&mode=release&edition=2021&gist=63f7359f8201cb656f63f74c7f01db39)] [this is a cut-down version of [rustlings/exercises/functions/functions5.rs](https://github.com/rust-lang/rustlings/blob/main/exercises/functions/functions5.rs); the point of the exercise is to familiarize people with the error that I'm about to suggest improvements to]\r\n\r\n```rust\r\npub fn square (n: i32) -> i32 {\r\n    n * n;\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:1:27\r\n  |\r\n1 | pub fn square (n: i32) -> i32 {\r\n  |        ------             ^^^ expected `i32`, found `()`\r\n  |        |\r\n  |        implicitly returns `()` as its body has no tail or `return` expression\r\n2 |     n * n;\r\n  |          - help: remove this semicolon\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\n```\r\n\r\nThe problem with this is, if you're _completely_ new to the language you may have no idea what `()` means in this context, you may be unfamiliar with the difference between an \"expression\" and a \"statement\", and you may not know what a \"tail\" is or why, in Rust, putting a semicolon after (what appears to be) the last expression in a block makes it _not be_ the last expression in that block.  \"expected `i32`, found `()`\" with a pointer to the token `i32` confuses things further.\r\n\r\nThe `--explain` output for E0308 is all about _why it doesn't work to have mismatched types_, which is fine for more typical cases where you'd get E0308 (e.g. `\"string\" + 23`) but in _this_ case what the programmer is probably wondering is _why there would be a type mismatch in the first place_ in this code.\r\n\r\nThe error message for\r\n\r\n```rust\r\npub fn returns_val() -> i32 {\r\n    return;\r\n}\r\n```\r\n\r\nis much clearer and I would like to suggest that this case of E0308 be reworked along those lines: something like\r\n\r\n```\r\nerror[E????]: empty tail expression in a function whose return type is not `()`\r\n --> src/lib.rs:2:10\r\n1 | pub fn square (n: i32) -> i32 {\r\n  |                           --- expected `i32` because of this return type\r\n2 |     n * n;\r\n  |          | ^ this empty expression makes `square` implicitly return `()`\r\n  |          - help: remove this semicolon\r\n```\r\n\r\nNote: If the function is completely empty you get almost the same confusing error as the original example:\r\n\r\n```rust\r\npub fn returns_val () -> i32 {}\r\n```\r\n\r\nproduces\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:1:26\r\n  |\r\n1 | pub fn returns_val () -> i32 {}\r\n  |        -----------       ^^^ expected `i32`, found `()`\r\n  |        |\r\n  |        implicitly returns `()` as its body has no tail or `return` expression\r\n```\r\n\r\nHere I suggest\r\n\r\n```\r\nerror[E????]: empty body in a function whose return type is not `()`\r\n --> src/lib.rs:1:26\r\n  |\r\n1 | pub fn returns_val () -> i32 {}\r\n  |                          |   ^^ empty function body\r\n  |                          --- expected `i32` because of this return type\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104739/timeline", "performed_via_github_app": null, "state_reason": null}