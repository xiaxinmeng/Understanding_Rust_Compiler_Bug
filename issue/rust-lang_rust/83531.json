{"url": "https://api.github.com/repos/rust-lang/rust/issues/83531", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83531/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83531/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83531/events", "html_url": "https://github.com/rust-lang/rust/issues/83531", "id": 842303034, "node_id": "MDU6SXNzdWU4NDIzMDMwMzQ=", "number": 83531, "title": "ICE: compiler/rustc_mir/src/interpret/eval_context.rs:188:17: The type checker should prevent reading from a never-written local", "user": {"login": "chengniansun", "id": 4554271, "node_id": "MDQ6VXNlcjQ1NTQyNzE=", "avatar_url": "https://avatars.githubusercontent.com/u/4554271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chengniansun", "html_url": "https://github.com/chengniansun", "followers_url": "https://api.github.com/users/chengniansun/followers", "following_url": "https://api.github.com/users/chengniansun/following{/other_user}", "gists_url": "https://api.github.com/users/chengniansun/gists{/gist_id}", "starred_url": "https://api.github.com/users/chengniansun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chengniansun/subscriptions", "organizations_url": "https://api.github.com/users/chengniansun/orgs", "repos_url": "https://api.github.com/users/chengniansun/repos", "events_url": "https://api.github.com/users/chengniansun/events{/privacy}", "received_events_url": "https://api.github.com/users/chengniansun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-03-26T21:19:29Z", "updated_at": "2021-05-15T12:46:37Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "\r\n<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nunion Foo {\r\n    a: isize,\r\n    b: &VTable,\r\n}\r\nenum Bar {\r\n    Boo = [Foo { b: () }.a][3],\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.53.0-nightly (52e3dffa5 2021-03-25)\r\nbinary: rustc\r\ncommit-hash: 52e3dffa50cfffdcfa145c0cc0ba48b49abc0c07\r\ncommit-date: 2021-03-25\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.53.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0412]: cannot find type `VTable` in this scope\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:3:9\r\n  |\r\n3 |     b: &VTable,\r\n  |         ^^^^^^ not found in this scope\r\n\r\nerror[E0601]: `main` function not found in crate `perses_node_priority_with_dfs_delta_reduced_mutant`\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:1:1\r\n  |\r\n1 | / union Foo {\r\n2 | |     a: isize,\r\n3 | |     b: &VTable,\r\n4 | | }\r\n5 | | enum Bar {\r\n6 | |     Boo = [Foo { b: () }.a][3],\r\n7 | | }\r\n  | |_^ consider adding a `main` function to `perses_node_priority_with_dfs_delta_reduced_mutant.rs`\r\n\r\nerror[E0106]: missing lifetime specifier\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:3:8\r\n  |\r\n3 |     b: &VTable,\r\n  |        ^ expected named lifetime parameter\r\n  |\r\nhelp: consider introducing a named lifetime parameter\r\n  |\r\n1 | union Foo<'a> {\r\n2 |     a: isize,\r\n3 |     b: &'a VTable,\r\n  |\r\n\r\nerror[E0658]: unions with non-`Copy` fields other than `ManuallyDrop<T>` are unstable\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:3:5\r\n  |\r\n3 |     b: &VTable,\r\n  |     ^^^^^^^^^^\r\n  |\r\n  = note: see issue #55149 <https://github.com/rust-lang/rust/issues/55149> for more information\r\n  = help: add `#![feature(untagged_unions)]` to the crate attributes to enable\r\n\r\nerror: internal compiler error: compiler/rustc_mir/src/interpret/eval_context.rs:188:17: The type checker should prevent reading from a never-written local\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/52e3dffa50cfffdcfa145c0cc0ba48b49abc0c07/library/std/src/panic.rs:59:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (52e3dffa5 2021-03-25) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [eval_to_allocation_raw] const-evaluating + checking `Bar::Boo::{constant#0}`\r\n#1 [eval_to_const_value_raw] simplifying constant for the type system `Bar::Boo::{constant#0}`\r\nend of query stack\r\nerror: aborting due to 5 previous errors\r\n\r\nSome errors have detailed explanations: E0106, E0412, E0601, E0658.\r\nFor more information about an error, try `rustc --explain E0106`.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror[E0412]: cannot find type `VTable` in this scope\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:3:9\r\n  |\r\n3 |     b: &VTable,\r\n  |         ^^^^^^ not found in this scope\r\n\r\nerror[E0601]: `main` function not found in crate `perses_node_priority_with_dfs_delta_reduced_mutant`\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:1:1\r\n  |\r\n1 | / union Foo {\r\n2 | |     a: isize,\r\n3 | |     b: &VTable,\r\n4 | | }\r\n5 | | enum Bar {\r\n6 | |     Boo = [Foo { b: () }.a][3],\r\n7 | | }\r\n  | |_^ consider adding a `main` function to `perses_node_priority_with_dfs_delta_reduced_mutant.rs`\r\n\r\nerror[E0106]: missing lifetime specifier\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:3:8\r\n  |\r\n3 |     b: &VTable,\r\n  |        ^ expected named lifetime parameter\r\n  |\r\nhelp: consider introducing a named lifetime parameter\r\n  |\r\n1 | union Foo<'a> {\r\n2 |     a: isize,\r\n3 |     b: &'a VTable,\r\n  |\r\n\r\nerror[E0658]: unions with non-`Copy` fields other than `ManuallyDrop<T>` are unstable\r\n --> perses_node_priority_with_dfs_delta_reduced_mutant.rs:3:5\r\n  |\r\n3 |     b: &VTable,\r\n  |     ^^^^^^^^^^\r\n  |\r\n  = note: see issue #55149 <https://github.com/rust-lang/rust/issues/55149> for more information\r\n  = help: add `#![feature(untagged_unions)]` to the crate attributes to enable\r\n\r\nerror: internal compiler error: compiler/rustc_mir/src/interpret/eval_context.rs:188:17: The type checker should prevent reading from a never-written local\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/52e3dffa50cfffdcfa145c0cc0ba48b49abc0c07/library/std/src/panic.rs:59:5\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: std::panic::panic_any\r\n   2: rustc_errors::HandlerInner::bug\r\n   3: rustc_errors::Handler::bug\r\n   4: rustc_middle::ty::context::tls::with_opt\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::access_local\r\n   8: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_operand\r\n   9: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_rvalue_into_place\r\n  10: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::run\r\n  11: rustc_mir::const_eval::eval_queries::eval_to_allocation_raw_provider\r\n  12: rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::eval_to_allocation_raw>::compute\r\n  13: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  14: rustc_data_structures::stack::ensure_sufficient_stack\r\n  15: rustc_query_system::query::plumbing::force_query_with_job\r\n  16: rustc_query_system::query::plumbing::get_query_impl\r\n  17: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::eval_to_allocation_raw\r\n  18: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  19: rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::eval_to_const_value_raw>::compute\r\n  20: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  21: rustc_data_structures::stack::ensure_sufficient_stack\r\n  22: rustc_query_system::query::plumbing::force_query_with_job\r\n  23: rustc_query_system::query::plumbing::get_query_impl\r\n  24: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::eval_to_const_value_raw\r\n  25: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  26: rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::eval_to_const_value_raw>::compute\r\n  27: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  28: rustc_data_structures::stack::ensure_sufficient_stack\r\n  29: rustc_query_system::query::plumbing::force_query_with_job\r\n  30: rustc_query_system::query::plumbing::get_query_impl\r\n  31: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::eval_to_const_value_raw\r\n  32: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_global_id\r\n  33: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_poly\r\n  34: rustc_typeck::collect::convert_item\r\n  35: <rustc_typeck::collect::CollectItemTypesVisitor as rustc_hir::intravisit::Visitor>::visit_item\r\n  36: rustc_middle::hir::map::Map::visit_item_likes_in_module\r\n  37: rustc_typeck::collect::collect_mod_item_types\r\n  38: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  39: rustc_query_system::query::plumbing::force_query_with_job\r\n  40: rustc_query_system::query::plumbing::get_query_impl\r\n  41: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::collect_mod_item_types\r\n  42: rustc_session::session::Session::track_errors\r\n  43: rustc_typeck::check_crate\r\n  44: rustc_interface::passes::analysis\r\n  45: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  46: rustc_data_structures::stack::ensure_sufficient_stack\r\n  47: rustc_query_system::query::plumbing::force_query_with_job\r\n  48: rustc_query_system::query::plumbing::get_query_impl\r\n  49: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  50: rustc_interface::passes::QueryContext::enter\r\n  51: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  52: rustc_span::with_source_map\r\n  53: rustc_interface::interface::create_compiler_and_run\r\n  54: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (52e3dffa5 2021-03-25) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [eval_to_allocation_raw] const-evaluating + checking `Bar::Boo::{constant#0}`\r\n#1 [eval_to_const_value_raw] simplifying constant for the type system `Bar::Boo::{constant#0}`\r\n#2 [eval_to_const_value_raw] simplifying constant for the type system `Bar::Boo::{constant#0}`\r\n#3 [collect_mod_item_types] collecting item types in top-level module\r\n#4 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to 5 previous errors\r\n\r\nSome errors have detailed explanations: E0106, E0412, E0601, E0658.\r\nFor more information about an error, try `rustc --explain E0106`.\r\n```\r\n\r\n</p>\r\n</details>", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83531/timeline", "performed_via_github_app": null, "state_reason": null}