{"url": "https://api.github.com/repos/rust-lang/rust/issues/41750", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41750/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41750/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41750/events", "html_url": "https://github.com/rust-lang/rust/issues/41750", "id": 226336927, "node_id": "MDU6SXNzdWUyMjYzMzY5Mjc=", "number": 41750, "title": "ERROR_ON_UNDEFINED_SYMBOLS=1 always passed for emcc effectively prevents any dynamic linking", "user": {"login": "NikVolf", "id": 3186518, "node_id": "MDQ6VXNlcjMxODY1MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3186518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NikVolf", "html_url": "https://github.com/NikVolf", "followers_url": "https://api.github.com/users/NikVolf/followers", "following_url": "https://api.github.com/users/NikVolf/following{/other_user}", "gists_url": "https://api.github.com/users/NikVolf/gists{/gist_id}", "starred_url": "https://api.github.com/users/NikVolf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NikVolf/subscriptions", "organizations_url": "https://api.github.com/users/NikVolf/orgs", "repos_url": "https://api.github.com/users/NikVolf/repos", "events_url": "https://api.github.com/users/NikVolf/events{/privacy}", "received_events_url": "https://api.github.com/users/NikVolf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 474645165, "node_id": "MDU6TGFiZWw0NzQ2NDUxNjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-wasm", "name": "O-wasm", "color": "6e6ec0", "default": false, "description": "Target: WASM (WebAssembly), http://webassembly.org/"}, {"id": 509440702, "node_id": "MDU6TGFiZWw1MDk0NDA3MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-asmjs", "name": "O-asmjs", "color": "6e6ec0", "default": false, "description": "Target: asm.js - http://asmjs.org/"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-05-04T16:25:29Z", "updated_at": "2022-06-15T15:11:27Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "the following rust code is failing to compile using wasm32-unknown-emscripten target\r\n\r\n```rust\r\nextern {\r\n  #[link(name=\"env\")]\r\n  fn log_event(id: *const u8);\r\n}\r\n\r\nfn main() {\r\n    unsafe { log_event(::std::ptr::null()); }\r\n}\r\n```\r\n\r\nwith\r\n```\r\n  error: unresolved symbol: log_event\r\n```\r\n\r\ncorrect me if I'm wrong, I might be terrible wrong with this, but `#[link]` without `kind=static` implies dynamic linking, and the above code should not fail to compile?\r\n\r\nAs for emscripten itself, it has no problem compiling C code like this:\r\n```c\r\nextern void log_event(void* ptr);\r\n\r\nint main() {\r\n    log_event(0);\r\n}\r\n```\r\n\r\nwith `emcc <source above.c> -O3 -s WASM=1 -s SIDE_MODULE=1 -o result.wasm`\r\nproducing nice import entry in the result.wasm\r\n\r\n```\r\n  (import \"env\" \"_log_event\" (func (;0;) (type 0)))\r\n```\r\n\r\nSo, the question is, is there is any option to have dynamic symbols in the resulting wasm? Or at least override this linker `ERROR_ON_UNDEFINED_SYMBOLS` argument at some point?\r\n\r\nsource link would be:\r\nhttps://github.com/rust-lang/rust/blob/ec27aa97b921957711b96e578c7c197ff28553ac/src/librustc_back/target/wasm32_unknown_emscripten.rs#L21", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41750/timeline", "performed_via_github_app": null, "state_reason": null}