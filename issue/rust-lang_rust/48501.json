{"url": "https://api.github.com/repos/rust-lang/rust/issues/48501", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48501/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48501/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48501/events", "html_url": "https://github.com/rust-lang/rust/issues/48501", "id": 299938610, "node_id": "MDU6SXNzdWUyOTk5Mzg2MTA=", "number": 48501, "title": "Operators in patterns have incorrect priorities", "user": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235777, "node_id": "MDU6TGFiZWwyMzU3Nzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-grammar", "name": "A-grammar", "color": "f7e101", "default": false, "description": "Area: The grammar of Rust"}, {"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1731100994, "node_id": "MDU6TGFiZWwxNzMxMTAwOTk0", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-half_open_range_patterns", "name": "F-half_open_range_patterns", "color": "f9c0cc", "default": false, "description": "`#![feature(half_open_range_patterns)]`"}, {"id": 1731101920, "node_id": "MDU6TGFiZWwxNzMxMTAxOTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-exclusive_range_pattern", "name": "F-exclusive_range_pattern", "color": "f9c0cc", "default": false, "description": "`#![feature(exclusive_range_pattern)]`"}, {"id": 1976249039, "node_id": "MDU6TGFiZWwxOTc2MjQ5MDM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-patterns", "name": "A-patterns", "color": "f7e101", "default": false, "description": "Relating to patterns and pattern matching"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-02-24T12:47:07Z", "updated_at": "2021-07-30T13:11:01Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "(Or at least unnatural priorities.)\r\n\r\nBinary range operators have higher priority than unary operators like `&` or `box`.\r\n\r\n```rust\r\n#![feature(exclusive_range_pattern)]\r\n\r\nfn main() {\r\n    // Interpreted as (&0) .. (10), ERROR mismatched types\r\n    let x = &0 .. 10;\r\n\r\n    match &0 {\r\n        &0 .. 10 => {} // OK?!\r\n        _ => {}\r\n    }\r\n}\r\n```\r\n\r\nWe can change the priorities for all the unstable kinds of ranges and come up with some deprecation story for stable `BEGIN ... END`.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":null}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48501/timeline", "performed_via_github_app": null, "state_reason": null}