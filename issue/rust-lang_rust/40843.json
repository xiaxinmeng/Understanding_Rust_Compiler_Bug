{"url": "https://api.github.com/repos/rust-lang/rust/issues/40843", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40843/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40843/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40843/events", "html_url": "https://github.com/rust-lang/rust/issues/40843", "id": 217084543, "node_id": "MDU6SXNzdWUyMTcwODQ1NDM=", "number": 40843, "title": "Add switch \"--std=some-rust-version\" to guarantee compatibility", "user": {"login": "ibotty", "id": 296430, "node_id": "MDQ6VXNlcjI5NjQzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/296430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibotty", "html_url": "https://github.com/ibotty", "followers_url": "https://api.github.com/users/ibotty/followers", "following_url": "https://api.github.com/users/ibotty/following{/other_user}", "gists_url": "https://api.github.com/users/ibotty/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibotty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibotty/subscriptions", "organizations_url": "https://api.github.com/users/ibotty/orgs", "repos_url": "https://api.github.com/users/ibotty/repos", "events_url": "https://api.github.com/users/ibotty/events{/privacy}", "received_events_url": "https://api.github.com/users/ibotty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-26T20:03:27Z", "updated_at": "2017-03-26T22:05:10Z", "closed_at": "2017-03-26T22:01:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "AFAIK, there has not been a breaking change after rust 1.0, and none is planned. And I know you are taking backward compatibility very serious. So that issue is only about external confidence in that guarantee.\r\n\r\nI expect that there will be a time when a breaking change has to be done (working with Haskell has taught me that much). Now if the compiler could guarantee that it will have a switch to guarantee \"at least\"-behavior (i.e. might accept later additions to the language, but not language changes), there will be a huge boost in confidence in rust's backward compatibility story.\r\n\r\nSo if you compile with rust 1.16 today any new compiler should support that code with that switch. It would be great to codify an \"We only guarantee 20 years of rust backwards compatibility\" to be able to remove code at one point though.\r\n\r\nNB: A [random reddit comment complaining about backwards compatibility guarantees](https://np.reddit.com/r/cpp/comments/61mbgy/things_i_love_about_rust_while_being_a_c/dffpk4i/) inspired that issue.", "closed_by": {"login": "retep998", "id": 666308, "node_id": "MDQ6VXNlcjY2NjMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/666308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retep998", "html_url": "https://github.com/retep998", "followers_url": "https://api.github.com/users/retep998/followers", "following_url": "https://api.github.com/users/retep998/following{/other_user}", "gists_url": "https://api.github.com/users/retep998/gists{/gist_id}", "starred_url": "https://api.github.com/users/retep998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retep998/subscriptions", "organizations_url": "https://api.github.com/users/retep998/orgs", "repos_url": "https://api.github.com/users/retep998/repos", "events_url": "https://api.github.com/users/retep998/events{/privacy}", "received_events_url": "https://api.github.com/users/retep998/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40843/timeline", "performed_via_github_app": null, "state_reason": "completed"}