{"url": "https://api.github.com/repos/rust-lang/rust/issues/74767", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74767/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74767/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74767/events", "html_url": "https://github.com/rust-lang/rust/issues/74767", "id": 665704356, "node_id": "MDU6SXNzdWU2NjU3MDQzNTY=", "number": 74767, "title": "ICE while attempting to build docs for `gba` crate", "user": {"login": "Lokathor", "id": 5456384, "node_id": "MDQ6VXNlcjU0NTYzODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5456384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lokathor", "html_url": "https://github.com/Lokathor", "followers_url": "https://api.github.com/users/Lokathor/followers", "following_url": "https://api.github.com/users/Lokathor/following{/other_user}", "gists_url": "https://api.github.com/users/Lokathor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lokathor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lokathor/subscriptions", "organizations_url": "https://api.github.com/users/Lokathor/orgs", "repos_url": "https://api.github.com/users/Lokathor/repos", "events_url": "https://api.github.com/users/Lokathor/events{/privacy}", "received_events_url": "https://api.github.com/users/Lokathor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 55301954, "node_id": "MDU6TGFiZWw1NTMwMTk1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-Arm", "name": "O-Arm", "color": "6e6ec0", "default": false, "description": "Target: 32-bit Arm processors (armv6, armv7, thumb...), including 64-bit Arm in AArch32 state"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 632453790, "node_id": "MDU6TGFiZWw2MzI0NTM3OTA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-target-specs", "name": "A-target-specs", "color": "f7e101", "default": false, "description": "Area: compile-target specifications"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-26T04:09:07Z", "updated_at": "2020-07-30T02:05:50Z", "closed_at": "2020-07-30T02:05:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello.\r\n\r\nIt's the first nightly with `rustfmt` since the [thumbv4t](https://github.com/rust-lang/rust/pull/74419) PR merged, so I was able to update my nightly, so I figured I'd give a quick test of the `gba` crate and see if I could start updating it to using the new target. Hit some ICE.\r\n\r\nFor whatever reason, rustc is extremely unhappy with the non-default LLVM data layout.\r\n\r\n### Code\r\nThe code I tried to build is a repo:\r\n```\r\ngit clone git@github.com:rust-console/gba.git\r\ncd gba\r\ncargo doc --open --target thumbv4t-none-eabi -Z build-std=core\r\n```\r\n\r\nHowever, since rustc was upset with the LLVM data layout, I presume that the target description itself is broken, and any code at all would always fail to build.\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\npi@raspberrypi:~/gba $ rustc --version --verbose\r\nrustc 1.47.0-nightly (d6953df14 2020-07-25)\r\nbinary: rustc\r\ncommit-hash: d6953df14657f5932270ad2b33bccafe6f39fad4\r\ncommit-date: 2020-07-25\r\nhost: armv7-unknown-linux-gnueabihf\r\nrelease: 1.47.0-nightly\r\nLLVM version: 10.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: src/librustc_codegen_llvm/context.rs:159:13: data-layout for builtin `thumbv4t-none-eabi` target, `e-S64-p:32:32-i64:64-m:e-n32`, differs from LLVM default, `e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64`\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:915:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.47.0-nightly (d6953df14 2020-07-25) running on armv7-unknown-linux-gnueabihf\r\n\r\nnote: compiler flags: -Z force-unstable-if-unmarked -C embed-bitcode=no -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: build failed\r\n```\r\n\r\nNote that no part of the target's data layout string (`e-S64-p:32:32-i64:64-m:e-n32`) actually _contradicts_ the data layout string that rustc claims to be expecting (`e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64`), the target data layout string is simply not specifying every category, which is [legal under LLVM's rules](https://llvm.org/docs/LangRef.html#data-layout), but perhaps not legal under rustc's rules I guess.\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n(it looks like there's three things in here since i was trying to do a docs build, but i'll include the whole output)\r\n```\r\npi@raspberrypi:~/gba $ RUST_BACKTRACE=1 cargo doc --open --target thumbv4t-none-eabi -Z build-std=core\r\n   Compiling core v0.0.0 (/home/pi/.rustup/toolchains/nightly-armv7-unknown-linux-gnueabihf/lib/rustlib/src/rust/src/libcore)\r\n   Compiling rustc-std-workspace-core v1.99.0 (/home/pi/.rustup/toolchains/nightly-armv7-unknown-linux-gnueabihf/lib/rustlib/src/rust/src/tools/rustc-std-workspace-core)\r\nerror: internal compiler error: src/librustc_codegen_llvm/context.rs:159:13: data-layout for builtin `thumbv4t-none-eabi` target, `e-S64-p:32:32-i64:64-m:e-n32`, differs from LLVM default, `e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64`\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:915:9\r\nstack backtrace:\r\n   Compiling compiler_builtins v0.1.32\r\nerror: internal compiler error: src/librustc_codegen_llvm/context.rs:159:13: data-layout for builtin `thumbv4t-none-eabi` target, `e-S64-p:32:32-i64:64-m:e-n32`, differs from LLVM default, `e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64`\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:915:9\r\nstack backtrace:\r\nerror: internal compiler error: src/librustc_codegen_llvm/context.rs:159:13: data-layout for builtin `thumbv4t-none-eabi` target, `e-S64-p:32:32-i64:64-m:e-n32`, differs from LLVM default, `e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64`\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:915:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1117\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1508\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:217\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:530\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc_middle::ty::context::tls::with_opt\r\n  18: rustc_middle::util::bug::opt_span_bug_fmt\r\n  19: rustc_middle::util::bug::bug_fmt\r\n  20: rustc_codegen_llvm::context::create_module\r\n  21: rustc_codegen_llvm::base::compile_codegen_unit::module_codegen\r\n  22: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  23: rustc_codegen_llvm::base::compile_codegen_unit\r\n   4: core::fmt::write\r\n  24: rustc_codegen_ssa::base::codegen_crate\r\n  25: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  26: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  27: rustc_interface::passes::start_codegen\r\n  28: rustc_middle::ty::context::tls::enter_global\r\n  29: rustc_interface::queries::Queries::ongoing_codegen\r\n  30: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  31: rustc_span::with_source_map\r\n  32: rustc_interface::interface::create_compiler_and_run\r\n  33: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1117\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1508\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:217\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:530\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc_middle::ty::context::tls::with_opt\r\n  18: rustc_middle::util::bug::opt_span_bug_fmt\r\n  19: rustc_middle::util::bug::bug_fmt\r\n  20: rustc_codegen_llvm::context::create_module\r\n  21: rustc_codegen_llvm::base::compile_codegen_unit::module_codegen\r\n  22: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  23: rustc_codegen_llvm::base::compile_codegen_unit\r\n  24: rustc_codegen_ssa::base::codegen_crate\r\n  25: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  26: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  27: rustc_interface::passes::start_codegen\r\n  28: rustc_middle::ty::context::tls::enter_global\r\n  29: rustc_interface::queries::Queries::ongoing_codegen\r\n  30: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  31: rustc_span::with_source_map\r\n  32: rustc_interface::interface::create_compiler_and_run\r\n  33: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.47.0-nightly (d6953df14 2020-07-25) running on armv7-unknown-linux-gnueabihf\r\n\r\nnote: compiler flags: -Z force-unstable-if-unmarked -C embed-bitcode=no -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n             at src/libcore/fmt/mod.rs:1117\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1508\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:217\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:530\r\nnote: rustc 1.47.0-nightly (d6953df14 2020-07-25) running on armv7-unknown-linux-gnueabihf\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc_middle::ty::context::tls::with_opt\r\n  18: rustc_middle::util::bug::opt_span_bug_fmt\r\nnote: compiler flags: -Z force-unstable-if-unmarked -C embed-bitcode=no -C debuginfo=2 --crate-type lib\r\n  19: rustc_middle::util::bug::bug_fmt\r\n  20: rustc_codegen_llvm::context::create_module\r\n  21: rustc_codegen_llvm::base::compile_codegen_unit::module_codegen\r\n  22: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n\r\n  23: rustc_codegen_llvm::base::compile_codegen_unit\r\n  24: rustc_codegen_ssa::base::codegen_crate\r\n  25: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\nnote: some of the compiler flags provided by cargo are hidden\r\n  26: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  27: rustc_interface::passes::start_codegen\r\n  28: rustc_middle::ty::context::tls::enter_global\r\n  29: rustc_interface::queries::Queries::ongoing_codegen\r\n\r\n  30: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  31: rustc_span::with_source_map\r\n  32: rustc_interface::interface::create_compiler_and_run\r\nquery stack during panic:\r\n  33: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.47.0-nightly (d6953df14 2020-07-25) running on armv7-unknown-linux-gnueabihf\r\n\r\nnote: compiler flags: -Z force-unstable-if-unmarked -C embed-bitcode=no -C debuginfo=2 --crate-type lib\r\n\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\nend of query stack\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: could not compile `rustc-std-workspace-core`.\r\n\r\nTo learn more, run the command again with --verbose.\r\nwarning: build failed, waiting for other jobs to finish...\r\nerror: aborting due to previous error\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: build failed\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74767/timeline", "performed_via_github_app": null, "state_reason": "completed"}