{"url": "https://api.github.com/repos/rust-lang/rust/issues/4231", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/4231/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/4231/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/4231/events", "html_url": "https://github.com/rust-lang/rust/issues/4231", "id": 9424632, "node_id": "MDU6SXNzdWU5NDI0NjMy", "number": 4231, "title": "Implement a proper 'numerical tower' in core or std", "user": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2012-12-20T05:56:03Z", "updated_at": "2015-12-16T20:19:32Z", "closed_at": "2014-04-01T11:51:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm not sure how feasible this currently is. We would have to think in terms of compile-time, zero-cost abstractions. On #rust:\n\n```\nerickt: once we get default methods we can make proper mathematical groups, semigroups, rings, and etc\n```\n\nRelevant articles on Wikipedia:\n- [Numerical Tower](http://en.wikipedia.org/wiki/Numerical_tower)\n- [Group](http://en.wikipedia.org/wiki/Group_%28mathematics%29)\n- [Ring](http://en.wikipedia.org/wiki/Ring_%28mathematics%29)\n\nOther things to consider in the same vein are units of measure, range types and mod types. Perhaps these could be implemented via traits and default methods.\n- [Units of measure (F#)](http://msdn.microsoft.com/en-us/library/dd233243.aspx)\n- [F Sharp Programming/Units of Measure](http://en.wikibooks.org/wiki/F_Sharp_Programming/Units_of_Measure)\n- [Physical Units \u2013 HaskellWiki](http://www.haskell.org/haskellwiki/Physical_units)\n- [Data types in Ada](http://en.wikipedia.org/wiki/Ada_%28programming_language%29#Data_types)\n", "closed_by": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/4231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/4231/timeline", "performed_via_github_app": null, "state_reason": "completed"}