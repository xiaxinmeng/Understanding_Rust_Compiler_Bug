{"url": "https://api.github.com/repos/rust-lang/rust/issues/83189", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83189/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83189/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83189/events", "html_url": "https://github.com/rust-lang/rust/issues/83189", "id": 832566544, "node_id": "MDU6SXNzdWU4MzI1NjY1NDQ=", "number": 83189, "title": "Returning unsized objects allowed in `Fn` traits but fails to compile when called", "user": {"login": "hniksic", "id": 1078190, "node_id": "MDQ6VXNlcjEwNzgxOTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1078190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hniksic", "html_url": "https://github.com/hniksic", "followers_url": "https://api.github.com/users/hniksic/followers", "following_url": "https://api.github.com/users/hniksic/following{/other_user}", "gists_url": "https://api.github.com/users/hniksic/gists{/gist_id}", "starred_url": "https://api.github.com/users/hniksic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hniksic/subscriptions", "organizations_url": "https://api.github.com/users/hniksic/orgs", "repos_url": "https://api.github.com/users/hniksic/repos", "events_url": "https://api.github.com/users/hniksic/events{/privacy}", "received_events_url": "https://api.github.com/users/hniksic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-03-16T08:56:42Z", "updated_at": "2021-03-17T21:54:51Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As documented in [the book](https://doc.rust-lang.org/book/ch19-05-advanced-functions-and-closures.html#returning-closures), a function cannot return an unsized object. So this function definition doesn't compile, as expected:\r\n\r\n```rust\r\n// #1 - error: \"the return type of a function must have a statically known size\"\r\nfn returns_unsized() -> [u8] {\r\n    todo!()\r\n}\r\n```\r\n\r\nHowever, it is apparently possible for an `Fn` trait to return an unsized object. This compiles:\r\n\r\n```rust\r\n// #2 - compiles\r\ntype ReturnsUnsized = Box<dyn Fn() -> [u8]>;\r\nfn bla(x: ReturnsUnsized) {\r\n    todo!()\r\n}\r\n```\r\n\r\nWhen you actually try to _use_ the type, compilation fails (which is expected), but with an error message saying \"call expression requires function\" without pointing out the underlying issue:\r\n\r\n```rust\r\n// #3 - error: \"call expression requires function\"\r\ntype ReturnsUnsized = Box<dyn Fn() -> [u8]>;\r\nfn bla(x: ReturnsUnsized) {\r\n    x();\r\n}\r\n```\r\n```\r\nerror[E0618]: expected function, found `Box<(dyn Fn() -> [u8] + 'static)>`\r\n --> src/lib.rs:4:5\r\n  |\r\n3 | fn bla(x: ReturnsUnsized) {\r\n  |        - `Box<(dyn Fn() -> [u8] + 'static)>` defined here\r\n4 |     x();\r\n  |     ^--\r\n  |     |\r\n  |     call expression requires function\r\n```\r\n\r\nChanging the `Fn` trait to box the returned unsized object results in successful compilation (as expected):\r\n\r\n```rust\r\n// #4 - compiles\r\ntype ReturnsBoxedUnsized = Box<dyn Fn() -> Box<[u8]>>;\r\nfn bla(x: ReturnsBoxedUnsized) {\r\n    x();\r\n}\r\n```\r\n\r\nI would expect `#2` to fail to compile with a similar error like `#1`. (Or at  least to emit a warning in case an error would break compatibility in the current edition.)\r\n\r\nMore importantly, I'd expect the compiler diagnostics in `#3` (and in `#2`, should it fail to compile) to mention the underlying problem, which is returning an unsized object.\r\n\r\nThis issue was encountered by a [StackOverflow user](https://stackoverflow.com/questions/66646847/boxed-function-factory-higher-order-function-in-rust-results-in-call-expressi/66647090) who tried to declare a dynamic higher-order function as `Box<dyn Fn(f32, f32, f32, f32) -> (dyn Fn(f32) -> f32)>` (note unboxed return type) and call it. Boxing the inner closure fixed the issue, but the error message was unhelpful in diagnosing the problem.\r\n\r\nReproducible in the [playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=3743e2b7226c0b88d54365a0b35d5ea9) with stable, beta, and nightly compilers.\r\n\r\n### Meta\r\n\r\n`rustc --version`:\r\n```\r\nrustc 1.50.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83189/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83189/timeline", "performed_via_github_app": null, "state_reason": null}