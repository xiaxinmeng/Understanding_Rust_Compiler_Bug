{"url": "https://api.github.com/repos/rust-lang/rust/issues/89806", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89806/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89806/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89806/events", "html_url": "https://github.com/rust-lang/rust/issues/89806", "id": 1023611487, "node_id": "I_kwDOAAsO6M49AxJf", "number": 89806, "title": "Overly verbose diagnostic when calling .as_ref() on type not implementing AsRef", "user": {"login": "8051Enthusiast", "id": 54916925, "node_id": "MDQ6VXNlcjU0OTE2OTI1", "avatar_url": "https://avatars.githubusercontent.com/u/54916925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/8051Enthusiast", "html_url": "https://github.com/8051Enthusiast", "followers_url": "https://api.github.com/users/8051Enthusiast/followers", "following_url": "https://api.github.com/users/8051Enthusiast/following{/other_user}", "gists_url": "https://api.github.com/users/8051Enthusiast/gists{/gist_id}", "starred_url": "https://api.github.com/users/8051Enthusiast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/8051Enthusiast/subscriptions", "organizations_url": "https://api.github.com/users/8051Enthusiast/orgs", "repos_url": "https://api.github.com/users/8051Enthusiast/repos", "events_url": "https://api.github.com/users/8051Enthusiast/events{/privacy}", "received_events_url": "https://api.github.com/users/8051Enthusiast/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}, {"id": 1659943986, "node_id": "MDU6TGFiZWwxNjU5OTQzOTg2", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-verbose", "name": "D-verbose", "color": "c9f7a3", "default": false, "description": "Too much output caused by a single piece of incorrect code"}], "state": "closed", "locked": false, "assignee": {"login": "yuvaldolev", "id": 26309875, "node_id": "MDQ6VXNlcjI2MzA5ODc1", "avatar_url": "https://avatars.githubusercontent.com/u/26309875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuvaldolev", "html_url": "https://github.com/yuvaldolev", "followers_url": "https://api.github.com/users/yuvaldolev/followers", "following_url": "https://api.github.com/users/yuvaldolev/following{/other_user}", "gists_url": "https://api.github.com/users/yuvaldolev/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuvaldolev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuvaldolev/subscriptions", "organizations_url": "https://api.github.com/users/yuvaldolev/orgs", "repos_url": "https://api.github.com/users/yuvaldolev/repos", "events_url": "https://api.github.com/users/yuvaldolev/events{/privacy}", "received_events_url": "https://api.github.com/users/yuvaldolev/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yuvaldolev", "id": 26309875, "node_id": "MDQ6VXNlcjI2MzA5ODc1", "avatar_url": "https://avatars.githubusercontent.com/u/26309875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuvaldolev", "html_url": "https://github.com/yuvaldolev", "followers_url": "https://api.github.com/users/yuvaldolev/followers", "following_url": "https://api.github.com/users/yuvaldolev/following{/other_user}", "gists_url": "https://api.github.com/users/yuvaldolev/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuvaldolev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuvaldolev/subscriptions", "organizations_url": "https://api.github.com/users/yuvaldolev/orgs", "repos_url": "https://api.github.com/users/yuvaldolev/repos", "events_url": "https://api.github.com/users/yuvaldolev/events{/privacy}", "received_events_url": "https://api.github.com/users/yuvaldolev/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2021-10-12T09:57:19Z", "updated_at": "2021-12-16T04:52:40Z", "closed_at": "2021-12-16T04:52:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following code seems to lead to overly long diagnostics: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&code=fn%20main()%20%7B%0A%20%20%20%200u8.as_ref()%0A%7D\r\n\r\n```rust\r\nfn main() {\r\n    0u8.as_ref()\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0599]: no method named `as_ref` found for type `u8` in the current scope\r\n   --> b.rs:2:9\r\n    |\r\n2   |     0u8.as_ref()\r\n    |         ^^^^^^ method not found in `u8`\r\n    |\r\n   ::: ~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:159:8\r\n    |\r\n159 |     fn as_ref(&self) -> &T;\r\n    |        ------\r\n    |        |\r\n    |        the method is available for `Box<u8>` here\r\n    |        the method is available for `Arc<u8>` here\r\n    |        the method is available for `Rc<u8>` here\r\n    |        the method is available for `Box<&mut u8>` here\r\n    |        the method is available for `Arc<&mut u8>` here\r\n    |        the method is available for `Rc<&mut u8>` here\r\n    |        the method is available for `Box<&u8>` here\r\n    |        the method is available for `Arc<&u8>` here\r\n    |        the method is available for `Rc<&u8>` here\r\n    |\r\n   ::: ~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/pin.rs:584:12\r\n    |\r\n584 |     pub fn as_ref(&self) -> Pin<&P::Target> {\r\n    |            ------\r\n    |            |\r\n    |            the method is available for `Pin<&mut u8>` here\r\n    |            the method is available for `Pin<&u8>` here\r\n    |\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n2   |     Box::new(0u8).as_ref()\r\n    |     ^^^^^^^^^   ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n2   |     Arc::new(0u8).as_ref()\r\n    |     ^^^^^^^^^   ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n2   |     Rc::new(0u8).as_ref()\r\n    |     ^^^^^^^^   ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n2   |     Box::new(&mut 0u8).as_ref()\r\n    |     ^^^^^^^^^^^^^    ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n2   |     Pin::new(&mut 0u8).as_ref()\r\n    |     ^^^^^^^^^^^^^    ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n2   |     Arc::new(&mut 0u8).as_ref()\r\n    |     ^^^^^^^^^^^^^    ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n2   |     Rc::new(&mut 0u8).as_ref()\r\n    |     ^^^^^^^^^^^^    ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n2   |     Box::new(&0u8).as_ref()\r\n    |     ^^^^^^^^^^   ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n2   |     Pin::new(&0u8).as_ref()\r\n    |     ^^^^^^^^^^   ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n2   |     Arc::new(&0u8).as_ref()\r\n    |     ^^^^^^^^^^   ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n2   |     Rc::new(&0u8).as_ref()\r\n    |     ^^^^^^^^^   ^\r\n\r\n```\r\n\r\nNote that this happens not just with 0u8 but with most types not implementing AsRef as far as I can see.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"yuvaldolev\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89806/timeline", "performed_via_github_app": null, "state_reason": "completed"}