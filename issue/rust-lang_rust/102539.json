{"url": "https://api.github.com/repos/rust-lang/rust/issues/102539", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102539/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102539/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102539/events", "html_url": "https://github.com/rust-lang/rust/issues/102539", "id": 1393342085, "node_id": "I_kwDOAAsO6M5TDLaF", "number": 102539, "title": "#[inline] on generic functions", "user": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-10-01T10:14:09Z", "updated_at": "2023-03-23T12:36:19Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Common Rust wisdom says that `#[inline]` does not need to be placed on small generic functions. This is because generic functions will get monomorphized in each crate anyway, so the attribute is not necessary for cross-crate inlining.\r\n\r\nHowever, we also know that in practice placing `#[inline]` on generic functions does help optimization, even for tiny functions where the additional `inlinehint` this gives to LLVM really shouldn't be relevant. What gives? I believe there are two complications:\r\n\r\nThe main problem is that `#[inline]` forces an instantiation of the function *in each CGU*, while generic functions are normally only instantiated *once per crate*. This means that a definition of generic functions is available to crate-local LTO, but not to the pre-link optimization pipeline. Especially for trivial generic functions, this may significantly hamper pre-link optimization, and post-link optimization may not be able to recover from this.\r\n\r\nThe second complication occurs when optimizing for size. In this case, we currently enable `-Z share-generics` by default, which means that generic functions only get monomorphized once and are exported for downstream crates. This means that the function definition is not available even to crate-local LTO. It only becomes available during full cross-crate LTO.\r\n\r\nThe second point is something we can fix: We probably should not be enabling `-Z share-generics` by default in any optimized builds, including size-optimized builds.\r\n\r\nThe first one is trickier, as instantiating monomorphizations in each CGU by default is likely not desirable. Possibly we should just stop considering whether a function is generic or not when it comes to `#[inline]` placement.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102539/reactions", "total_count": 8, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 8, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102539/timeline", "performed_via_github_app": null, "state_reason": null}