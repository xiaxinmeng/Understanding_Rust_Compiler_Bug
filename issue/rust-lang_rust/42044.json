{"url": "https://api.github.com/repos/rust-lang/rust/issues/42044", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42044/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42044/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42044/events", "html_url": "https://github.com/rust-lang/rust/issues/42044", "id": 229118223, "node_id": "MDU6SXNzdWUyMjkxMTgyMjM=", "number": 42044, "title": "add thiscall calling convention", "user": {"login": "froydnj", "id": 151096, "node_id": "MDQ6VXNlcjE1MTA5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/151096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froydnj", "html_url": "https://github.com/froydnj", "followers_url": "https://api.github.com/users/froydnj/followers", "following_url": "https://api.github.com/users/froydnj/following{/other_user}", "gists_url": "https://api.github.com/users/froydnj/gists{/gist_id}", "starred_url": "https://api.github.com/users/froydnj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froydnj/subscriptions", "organizations_url": "https://api.github.com/users/froydnj/orgs", "repos_url": "https://api.github.com/users/froydnj/repos", "events_url": "https://api.github.com/users/froydnj/events{/privacy}", "received_events_url": "https://api.github.com/users/froydnj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-16T17:57:21Z", "updated_at": "2017-05-26T10:18:00Z", "closed_at": "2017-05-26T10:18:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Trying to get servo/rust-bindgen working with win32 today, I ran into servo/rust-bindgen#541, where the `__thiscall` calling convention wasn't supported in bindgen.  (My use of bindgen doesn't actually generate calls to `__thiscall` functions, but the function representations need to support `__thiscall` AFAICT.)  Tracing back through the stack, it's not supported in `syntex_syntax`, and adding that support is AFAICT tricky until it's supported by rustc in some way.\r\n\r\nAdding `__thiscall` was already proposed in #37 and/or #5853, but tangled up in much grander plans about FFI interfaces; this bug is more narrowly scoped to just adding support for the calling convention.  People can then experiment with it via bindgen and nightly Rust.  In this way, I think it's essentially like the existing support for `vectorcall`.\r\n\r\nI think it's straightforward to do the work and am happy to sign up for doing it, but I'd like to know if there are strenuous objections to doing so.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42044/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42044/timeline", "performed_via_github_app": null, "state_reason": "completed"}