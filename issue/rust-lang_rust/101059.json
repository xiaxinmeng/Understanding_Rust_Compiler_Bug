{"url": "https://api.github.com/repos/rust-lang/rust/issues/101059", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/101059/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/101059/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/101059/events", "html_url": "https://github.com/rust-lang/rust/issues/101059", "id": 1352704992, "node_id": "I_kwDOAAsO6M5QoKPg", "number": 101059, "title": "Re-export information is lost [rustdoc's json output]", "user": {"login": "LukeMathWalker", "id": 20745048, "node_id": "MDQ6VXNlcjIwNzQ1MDQ4", "avatar_url": "https://avatars.githubusercontent.com/u/20745048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukeMathWalker", "html_url": "https://github.com/LukeMathWalker", "followers_url": "https://api.github.com/users/LukeMathWalker/followers", "following_url": "https://api.github.com/users/LukeMathWalker/following{/other_user}", "gists_url": "https://api.github.com/users/LukeMathWalker/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukeMathWalker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukeMathWalker/subscriptions", "organizations_url": "https://api.github.com/users/LukeMathWalker/orgs", "repos_url": "https://api.github.com/users/LukeMathWalker/repos", "events_url": "https://api.github.com/users/LukeMathWalker/events{/privacy}", "received_events_url": "https://api.github.com/users/LukeMathWalker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2682491374, "node_id": "MDU6TGFiZWwyNjgyNDkxMzc0", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-rustdoc-json", "name": "A-rustdoc-json", "color": "f7e101", "default": false, "description": "Area: Rustdoc JSON backend"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-08-26T20:28:17Z", "updated_at": "2022-08-29T15:19:14Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\r\nI have been playing around with rustdoc's JSON output for the past few weeks and I have now stumbled on a road block that I can't easily sort out on my own.\r\n\r\n## The problem\r\n\r\nI have a function signature that looks like this:\r\n```rust\r\npub fn extract_path(\r\n    _inner: pavex_runtime::http::Request<pavex_runtime::hyper::body::Body>,\r\n) -> PathBuf {\r\n    todo!()\r\n}\r\n```\r\n\r\nwhere `pavex_runtime` is a third-party dependency that does nothing more than a public re-export:\r\n```rust\r\n//! pavex_runtime/src/lib.rs\r\npub use hyper;\r\npub use http;\r\n```\r\n\r\nIf I look at that function in the JSON output for the relevant crate, I see this item (stripping out irrelevant fields):\r\n```json\r\n{\r\n      \"id\": \"0:18:1598\",\r\n      \"crate_id\": 0,\r\n      \"name\": \"extract_path\",\r\n      \"kind\": \"function\",\r\n      \"inner\": {\r\n        \"decl\": {\r\n          \"inputs\": [\r\n            [\r\n              \"_inner\",\r\n              {\r\n                \"kind\": \"resolved_path\",\r\n                \"inner\": {\r\n                  \"name\": \"pavex_runtime::http::Request\",\r\n                  \"id\": \"31:1361:1602\",\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          ],\r\n      }\r\n```\r\n\r\nThe name in `inner` hints at the fact that we depend on `http::Request` through a re-export via `pavex_runtime`. \r\nIf I follow the `id`, I instead go directly to the canonical item definition in `http`:\r\n```json\r\n    \"31:1361:1602\": {\r\n      \"crate_id\": 31,\r\n      \"path\": [\r\n        \"http\",\r\n        \"request\",\r\n        \"Request\"\r\n      ],\r\n      \"kind\": \"struct\"\r\n    },\r\n```\r\n\r\n`name` seems to be the only place where `rustdoc` exposes the information that the dependency from my crate to `http` flows through a re-export in `pavex_runtime`.\r\nFurther experiments seem to suggest that `name` is set to whatever is used as the type name alias in the function definition.\r\nE.g. by rewriting the definition as \r\n\r\n```rust\r\nuse pavex_runtime::http::Request;\r\n\r\npub fn extract_path(\r\n    _inner: Request<pavex_runtime::hyper::body::Body>,\r\n) -> PathBuf {\r\n    todo!()\r\n}\r\n```\r\n\r\nthe name now shows up as `Request`. \r\nThis would imply that there is no way to reliably detect that `extract_path` (and the crate where it is defined) depend on `http` through a re-export in `pavex_runtime`.\r\n\r\n## What I expect to see\r\n\r\nI'd expect the `extract_path` function item to refer, in its parameter list, to some kind of re-export item kind that is associated with `pavex_runtime` instead of going directly to `http`.  \r\nE.g. an item of [kind \"import\"](https://rust-lang.github.io/rfcs/2963-rustdoc-json.html#kind--import).\r\n\r\nThis would allow consumers of the JSON representation to navigate up to the source type (`http::Request`) while retaining the information that the current crate does not depend on it directly (via `pavex_runtime`).\r\n\r\n## Other relevant information\r\n\r\nLatest nightly, format version `18`.\r\n\r\n_[Related `zulip`'s discussion with @GuillaumeGomez](https://rust-lang.zulipchat.com/#narrow/stream/266220-rustdoc/topic/Are.20re-exports.20supposed.20to.20be.20transparent.3F/near/295487632)_", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/101059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/101059/timeline", "performed_via_github_app": null, "state_reason": null}