{"url": "https://api.github.com/repos/rust-lang/rust/issues/52482", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52482/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52482/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52482/events", "html_url": "https://github.com/rust-lang/rust/issues/52482", "id": 342318091, "node_id": "MDU6SXNzdWUzNDIzMTgwOTE=", "number": 52482, "title": "Refactor away the `TypeckTables::cast_kinds` field", "user": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-07-18T13:00:51Z", "updated_at": "2019-03-09T21:24:48Z", "closed_at": "2019-03-09T21:24:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Motivation\r\n\r\nThis field has a lot of code going into creating it, while its use sites barely care at all about all the nice data it contains. They could just as well compute the data they need themselves. Computing the data is cheap, so there's no point in computing this ahead of time.\r\n\r\n# Instructions\r\n\r\n## 1. Eliminate uses\r\n\r\nThe field is used in two places:\r\n\r\n1. HIR -> MIR conversion https://github.com/rust-lang/rust/blob/50702b28383c15907c29e8f70256cdd439800834/src/librustc_mir/hair/cx/expr.rs#L590\r\n2. rvalue promotion https://github.com/rust-lang/rust/blob/50702b28383c15907c29e8f70256cdd439800834/src/librustc_passes/rvalue_promotion.rs#L371\r\n\r\nThe 1. use can be fixed by just checking whether the type of `source` is the same type as `expr_ty`. This means all `foo as Bar` casts get ignored if `foo` is already of type `Bar`. Which is exactly what that code is trying to do.\r\n\r\nThe 2. use actually wants to know the cast kind, but there's no need to get that from the `cast_kinds` field. Instead one would again obtain the type of the expression being cast and the type being cast to, and then do exactly what MIR based borrowck does when going through the same code (Use `CastTy` to figure out the details): https://github.com/rust-lang/rust/blob/38168a77d7174baf59334f8c196d6ae4136b928a/src/librustc_mir/transform/qualify_consts.rs#L719-L725\r\n\r\n## 2. Eliminate the field and all the code feeding into it\r\n\r\nThis part is easy now. Remove the field, and the compiler will guide you to all the places it's used. All you have to do is remove code until the compiler is happy.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52482/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52482/timeline", "performed_via_github_app": null, "state_reason": "completed"}