{"url": "https://api.github.com/repos/rust-lang/rust/issues/39", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39/events", "html_url": "https://github.com/rust-lang/rust/issues/39", "id": 228827, "node_id": "MDU6SXNzdWUyMjg4Mjc=", "number": 39, "title": "implement detached-send", "user": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2010-06-22T22:38:32Z", "updated_at": "2014-04-11T20:49:56Z", "closed_at": "2011-01-27T00:50:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The send operators currently always deep-copy when they hit thread boundaries.\nThey should handle a mode in which a singly-referenced value can be sent\nwithout deep-copying. This could take the form of a 'detached(x)' predicate\nwith a 'detach x' statement, that must hold before sending; or could simply be\npart of the operator definition (that it detaches any memory before sending,\nalong with dropping the sent slot).\n\nNote that there may be multiply-references leaves within a value that require\ndetachment themselves, so detachment is a recursive predicate / operation.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39/timeline", "performed_via_github_app": null, "state_reason": "completed"}