{"url": "https://api.github.com/repos/rust-lang/rust/issues/106368", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/106368/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/106368/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/106368/events", "html_url": "https://github.com/rust-lang/rust/issues/106368", "id": 1516344578, "node_id": "I_kwDOAAsO6M5aYZUC", "number": 106368, "title": "`vec::IntoIter<[T]>::next` generates unnecessary null checking", "user": {"login": "AnsonYeung", "id": 28508329, "node_id": "MDQ6VXNlcjI4NTA4MzI5", "avatar_url": "https://avatars.githubusercontent.com/u/28508329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnsonYeung", "html_url": "https://github.com/AnsonYeung", "followers_url": "https://api.github.com/users/AnsonYeung/followers", "following_url": "https://api.github.com/users/AnsonYeung/following{/other_user}", "gists_url": "https://api.github.com/users/AnsonYeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnsonYeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnsonYeung/subscriptions", "organizations_url": "https://api.github.com/users/AnsonYeung/orgs", "repos_url": "https://api.github.com/users/AnsonYeung/repos", "events_url": "https://api.github.com/users/AnsonYeung/events{/privacy}", "received_events_url": "https://api.github.com/users/AnsonYeung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-01-02T12:24:19Z", "updated_at": "2023-01-02T13:20:00Z", "closed_at": "2023-01-02T13:20:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "For the following code, it seems the compiler was unable to optimize away the loop for the first 2 functions.\r\n```rs\r\npub fn vec(foo: Vec<&[i32]>) -> usize {\r\n    into_iter_last(foo.into_iter())\r\n}\r\n\r\npub fn vec2(foo: Vec<&[i32]>) -> usize {\r\n    into_iter_last(foo.into_iter().map(|s| *&s))\r\n}\r\n\r\npub fn vec3(foo: Vec<&[i32]>) -> usize {\r\n    into_iter_last(foo.iter().map(|s| *s))\r\n}\r\n\r\npub fn slice(foo: &[&[i32]]) -> usize {\r\n    into_iter_last(foo.into_iter().map(|s| *s))\r\n}\r\n\r\npub fn into_iter_last<'a>(mut foo: impl Iterator<Item = &'a [i32]>) -> usize {\r\n    let mut res = 0;\r\n    while let Some(slice) = foo.next() {\r\n        res = slice.len();\r\n    }\r\n    res\r\n}\r\n```\r\n\r\nThis seems to be only happening for Vec and not slice. Seems like the compiler forgets that slice ptr cannot be null and unable to optimize away the loop.\r\n\r\nhttps://rust.godbolt.org/z/7EvqWE7vv\r\n```asm\r\nexample::vec:\r\n        push    rbx\r\n        mov     rax, rdi\r\n        mov     rsi, qword ptr [rdi]\r\n        mov     rdi, qword ptr [rdi + 8]\r\n        mov     rax, qword ptr [rax + 16]\r\n        test    rax, rax\r\n        je      .LBB0_6\r\n        cmp     qword ptr [rdi], 0\r\n        je      .LBB0_6\r\n        shl     rax, 4\r\n        mov     edx, 16\r\n.LBB0_3:\r\n        mov     rcx, rdx\r\n        cmp     rax, rdx\r\n        je      .LBB0_5\r\n        lea     rdx, [rcx + 16]\r\n        cmp     qword ptr [rdi + rcx], 0  ; unnecessary null check\r\n        jne     .LBB0_3\r\n.LBB0_5:\r\n        mov     rbx, qword ptr [rdi + rcx - 8]\r\n        test    rsi, rsi\r\n        jne     .LBB0_7\r\n        jmp     .LBB0_8\r\n.LBB0_6:\r\n        xor     ebx, ebx\r\n        test    rsi, rsi\r\n        je      .LBB0_8\r\n.LBB0_7:\r\n        shl     rsi, 4\r\n        mov     edx, 8\r\n        call    qword ptr [rip + __rust_dealloc@GOTPCREL]\r\n.LBB0_8:\r\n        mov     rax, rbx\r\n        pop     rbx\r\n        ret\r\n\r\nexample::vec2:\r\n        push    rbx\r\n        mov     rax, rdi\r\n        mov     rsi, qword ptr [rdi]\r\n        mov     rdi, qword ptr [rdi + 8]\r\n        mov     rax, qword ptr [rax + 16]\r\n        test    rax, rax\r\n        je      .LBB1_6\r\n        cmp     qword ptr [rdi], 0  ; unnecessary null check\r\n        je      .LBB1_6\r\n        shl     rax, 4\r\n        mov     edx, 16\r\n.LBB1_3:\r\n        mov     rcx, rdx\r\n        cmp     rax, rdx\r\n        je      .LBB1_5\r\n        lea     rdx, [rcx + 16]\r\n        cmp     qword ptr [rdi + rcx], 0\r\n        jne     .LBB1_3\r\n.LBB1_5:\r\n        mov     rbx, qword ptr [rdi + rcx - 8]\r\n        test    rsi, rsi\r\n        jne     .LBB1_7\r\n        jmp     .LBB1_8\r\n.LBB1_6:\r\n        xor     ebx, ebx\r\n        test    rsi, rsi\r\n        je      .LBB1_8\r\n.LBB1_7:\r\n        shl     rsi, 4\r\n        mov     edx, 8\r\n        call    qword ptr [rip + __rust_dealloc@GOTPCREL]\r\n.LBB1_8:\r\n        mov     rax, rbx\r\n        pop     rbx\r\n        ret\r\n\r\nexample::vec3:\r\n        push    rbx\r\n        mov     rax, rdi\r\n        mov     rdi, qword ptr [rdi + 8]\r\n        mov     rcx, qword ptr [rax + 16]\r\n        test    rcx, rcx\r\n        je      .LBB2_1\r\n        shl     rcx, 4\r\n        mov     rbx, qword ptr [rcx + rdi - 8]\r\n        mov     rsi, qword ptr [rax]\r\n        test    rsi, rsi\r\n        je      .LBB2_5\r\n.LBB2_4:\r\n        shl     rsi, 4\r\n        mov     edx, 8\r\n        call    qword ptr [rip + __rust_dealloc@GOTPCREL]\r\n.LBB2_5:\r\n        mov     rax, rbx\r\n        pop     rbx\r\n        ret\r\n.LBB2_1:\r\n        xor     ebx, ebx\r\n        mov     rsi, qword ptr [rax]\r\n        test    rsi, rsi\r\n        jne     .LBB2_4\r\n        jmp     .LBB2_5\r\n\r\nexample::slice:\r\n        test    rsi, rsi\r\n        je      .LBB3_1\r\n        shl     rsi, 4\r\n        mov     rax, qword ptr [rsi + rdi - 8]\r\n        ret\r\n.LBB3_1:\r\n        xor     eax, eax\r\n        ret\r\n```", "closed_by": {"login": "AnsonYeung", "id": 28508329, "node_id": "MDQ6VXNlcjI4NTA4MzI5", "avatar_url": "https://avatars.githubusercontent.com/u/28508329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnsonYeung", "html_url": "https://github.com/AnsonYeung", "followers_url": "https://api.github.com/users/AnsonYeung/followers", "following_url": "https://api.github.com/users/AnsonYeung/following{/other_user}", "gists_url": "https://api.github.com/users/AnsonYeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnsonYeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnsonYeung/subscriptions", "organizations_url": "https://api.github.com/users/AnsonYeung/orgs", "repos_url": "https://api.github.com/users/AnsonYeung/repos", "events_url": "https://api.github.com/users/AnsonYeung/events{/privacy}", "received_events_url": "https://api.github.com/users/AnsonYeung/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/106368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/106368/timeline", "performed_via_github_app": null, "state_reason": "completed"}