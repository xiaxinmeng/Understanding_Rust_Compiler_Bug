{"url": "https://api.github.com/repos/rust-lang/rust/issues/105404", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105404/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105404/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105404/events", "html_url": "https://github.com/rust-lang/rust/issues/105404", "id": 1480573493, "node_id": "I_kwDOAAsO6M5YP8I1", "number": 105404, "title": "rustdoc: ice: unable to fulfill trait", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-12-07T00:42:49Z", "updated_at": "2022-12-11T09:01:34Z", "closed_at": "2022-12-11T09:01:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nstruct Foo<'a, 'b, T> {\r\n    field1: dyn Bar<'a, 'b, >\r\n}\r\n\r\ntrait Bar<'x, 's, U>\r\n    where U: 'x,\r\n    Self:'x,\r\n    Self:'s\r\n{}\r\n\r\nfn main() {}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.67.0-nightly (e1d819583 2022-12-05)\r\nbinary: rustc\r\ncommit-hash: e1d819583f0bf13b016b119c1c2c43e6d3979450\r\ncommit-date: 2022-12-05\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.67.0-nightly\r\nLLVM version: 15.0.4\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\r\n --> 3c7a22d440d7586a3e549c35827ad5805e535744.rs:2:17\r\n  |\r\n2 |     field1: dyn Bar<'a, 'b, >\r\n  |                 ^^^ expected 1 generic argument\r\n  |\r\nnote: trait defined here, with 1 generic parameter: `U`\r\n --> 3c7a22d440d7586a3e549c35827ad5805e535744.rs:5:7\r\n  |\r\n5 | trait Bar<'x, 's, U>\r\n  |       ^^^         -\r\nhelp: add missing generic argument\r\n  |\r\n2 |     field1: dyn Bar<'a, 'b, U, >\r\n  |                           +++\r\n\r\nerror[E0227]: ambiguous lifetime bound, explicit lifetime bound required\r\n --> 3c7a22d440d7586a3e549c35827ad5805e535744.rs:2:13\r\n  |\r\n2 |     field1: dyn Bar<'a, 'b, >\r\n  |             ^^^^^^^^^^^^^^^^^\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Unable to fulfill trait DefId(2:2645 ~ core[20f2]::marker::Send) for 'Foo<'a, 'b, T>': [FulfillmentError(Obligation(predicate=Binder(TraitPredicate(<(dyn Bar<'a, 'b, [type error]> + 'b) as std::marker::Send>, polarity:Positive), []), depth=1),Ambiguity)]', /rustc/e1d819583f0bf13b016b119c1c2c43e6d3979450/compiler/rustc_trait_selection/src/traits/auto_trait.rs:186:13\r\nstack backtrace:\r\n   0:     0x7f3c191662da - std::backtrace_rs::backtrace::libunwind::trace::h6fe28ad196a3e4ed\r\n                               at /rustc/e1d819583f0bf13b016b119c1c2c43e6d3979450/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7f3c191662da - std::backtrace_rs::backtrace::trace_unsynchronized::hdad13e56b75cb767\r\n                               at /rustc/e1d819583f0bf13b016b119c1c2c43e6d3979450/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f3c191662da - std::sys_common::backtrace::_print_fmt::h72698cd49f57f169\r\n                               at /rustc/e1d819583f0bf13b016b119c1c2c43e6d3979450/library/std/src/sys_common/backtrace.rs:65:5\r\n   3:     0x7f3c191662da - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::he1fafb2965ae8597\r\n                               at /rustc/e1d819583f0bf13b016b119c1c2c43e6d3979450/library/std/src/sys_common/backtrace.rs:44:22\r\n   4:     0x7f3c191c8ece - core::fmt::write::hd89239c1da17525f\r\n                               at /rustc/e1d819583f0bf13b016b119c1c2c43e6d3979450/library/core/src/fmt/mod.rs:1208:17\r\n   5:     0x7f3c19156795 - std::io::Write::write_fmt::hab2ba8c4cc7c81ad\r\n                               at /rustc/e1d819583f0bf13b016b119c1c2c43e6d3979450/library/std/src/io/mod.rs:1682:15\r\n   6:     0x7f3c191660a5 - std::sys_common::backtrace::_print::h06824445c27eddc7\r\n                               at /rustc/e1d819583f0bf13b016b119c1c2c43e6d3979450/library/std/src/sys_common/backtrace.rs:47:5\r\n   7:     0x7f3c191660a5 - std::sys_common::backtrace::print::h26084488db770bf5\r\n                               at /rustc/e1d819583f0bf13b016b119c1c2c43e6d3979450/library/std/src/sys_common/backtrace.rs:34:9\r\n   8:     0x7f3c19168def - std::panicking::default_hook::{{closure}}::h28bd5d5e965e5d01\r\n                               at /rustc/e1d819583f0bf13b016b119c1c2c43e6d3979450/library/std/src/panicking.rs:267:22\r\n   9:     0x7f3c19168b2b - std::panicking::default_hook::h0619f06d194d8c45\r\n                               at /rustc/e1d819583f0bf13b016b119c1c2c43e6d3979450/library/std/src/panicking.rs:286:9\r\n  10:     0x7f3c1916960c - std::panicking::rust_panic_with_hook::h3e553e07d5fd01e7\r\n                               at /rustc/e1d819583f0bf13b016b119c1c2c43e6d3979450/library/std/src/panicking.rs:688:13\r\n  11:     0x7f3c191693a9 - std::panicking::begin_panic_handler::{{closure}}::ha64b2b2abb6ffa74\r\n                               at /rustc/e1d819583f0bf13b016b119c1c2c43e6d3979450/library/std/src/panicking.rs:579:13\r\n  12:     0x7f3c1916678c - std::sys_common::backtrace::__rust_end_short_backtrace::h0ed3e558b8469848\r\n                               at /rustc/e1d819583f0bf13b016b119c1c2c43e6d3979450/library/std/src/sys_common/backtrace.rs:137:18\r\n  13:     0x7f3c191690b2 - rust_begin_unwind\r\n                               at /rustc/e1d819583f0bf13b016b119c1c2c43e6d3979450/library/std/src/panicking.rs:575:5\r\n  14:     0x7f3c191c58b3 - core::panicking::panic_fmt::h0000e7abdb8aa8da\r\n                               at /rustc/e1d819583f0bf13b016b119c1c2c43e6d3979450/library/core/src/panicking.rs:64:14\r\n  15:     0x561e7e25c7a4 - <rustc_trait_selection[15c87c01405d530d]::traits::auto_trait::AutoTraitFinder>::find_auto_trait_generics::<rustdoc[4d62e6a838d5304]::clean::types::Generics, <rustdoc[4d62e6a838d5304]::clean::auto_trait::AutoTraitFinder>::generate_for_trait::{closure#0}>\r\n  16:     0x561e7dfec2c3 - <rustdoc[4d62e6a838d5304]::clean::auto_trait::AutoTraitFinder>::generate_for_trait\r\n  17:     0x561e7e0a23e7 - <alloc[9916749a77d582e4]::vec::Vec<rustdoc[4d62e6a838d5304]::clean::types::Item> as alloc[9916749a77d582e4]::vec::spec_from_iter::SpecFromIter<rustdoc[4d62e6a838d5304]::clean::types::Item, core[20f247eb21f65857]::iter::adapters::filter_map::FilterMap<alloc[9916749a77d582e4]::vec::into_iter::IntoIter<rustc_span[fcb1f4a96315ac3a]::def_id::DefId>, <rustdoc[4d62e6a838d5304]::clean::auto_trait::AutoTraitFinder>::get_auto_trait_impls::{closure#0}>>>::from_iter\r\n  18:     0x561e7dfecf9e - <rustdoc[4d62e6a838d5304]::clean::auto_trait::AutoTraitFinder>::get_auto_trait_impls\r\n  19:     0x561e7e133c25 - rustdoc[4d62e6a838d5304]::clean::utils::get_auto_trait_and_blanket_impls\r\n  20:     0x561e7e213462 - <rustdoc[4d62e6a838d5304]::passes::collect_trait_impls::SyntheticImplCollector as rustdoc[4d62e6a838d5304]::visit::DocVisitor>::visit_item\r\n  21:     0x561e7e2135aa - <rustdoc[4d62e6a838d5304]::passes::collect_trait_impls::SyntheticImplCollector as rustdoc[4d62e6a838d5304]::visit::DocVisitor>::visit_item\r\n  22:     0x561e7e210777 - rustdoc[4d62e6a838d5304]::passes::collect_trait_impls::collect_trait_impls\r\n  23:     0x561e7e1e78ae - <rustc_session[b65adb5ed222d526]::session::Session>::time::<rustdoc[4d62e6a838d5304]::clean::types::Crate, rustdoc[4d62e6a838d5304]::core::run_global_ctxt::{closure#7}>\r\n  24:     0x561e7e17a650 - rustdoc[4d62e6a838d5304]::core::run_global_ctxt\r\n  25:     0x561e7e1e7b7c - <rustc_session[b65adb5ed222d526]::session::Session>::time::<(rustdoc[4d62e6a838d5304]::clean::types::Crate, rustdoc[4d62e6a838d5304]::config::RenderOptions, rustdoc[4d62e6a838d5304]::formats::cache::Cache), rustdoc[4d62e6a838d5304]::main_args::{closure#1}::{closure#0}::{closure#1}::{closure#0}>\r\n  26:     0x561e7e25a26f - <rustc_interface[2984e52930de60b0]::passes::QueryContext>::enter::<rustdoc[4d62e6a838d5304]::main_args::{closure#1}::{closure#0}::{closure#1}, core[20f247eb21f65857]::result::Result<(), rustc_errors[c36b833622a99705]::ErrorGuaranteed>>\r\n  27:     0x561e7e0e9baa - <rustc_interface[2984e52930de60b0]::interface::Compiler>::enter::<rustdoc[4d62e6a838d5304]::main_args::{closure#1}::{closure#0}, core[20f247eb21f65857]::result::Result<(), rustc_errors[c36b833622a99705]::ErrorGuaranteed>>\r\n  28:     0x561e7e146e55 - rustc_span[fcb1f4a96315ac3a]::with_source_map::<core[20f247eb21f65857]::result::Result<(), rustc_errors[c36b833622a99705]::ErrorGuaranteed>, rustc_interface[2984e52930de60b0]::interface::run_compiler<core[20f247eb21f65857]::result::Result<(), rustc_errors[c36b833622a99705]::ErrorGuaranteed>, rustdoc[4d62e6a838d5304]::main_args::{closure#1}>::{closure#0}::{closure#0}>\r\n  29:     0x561e7dfc77e5 - <scoped_tls[8cc3120407342670]::ScopedKey<rustc_span[fcb1f4a96315ac3a]::SessionGlobals>>::set::<rustc_interface[2984e52930de60b0]::interface::run_compiler<core[20f247eb21f65857]::result::Result<(), rustc_errors[c36b833622a99705]::ErrorGuaranteed>, rustdoc[4d62e6a838d5304]::main_args::{closure#1}>::{closure#0}, core[20f247eb21f65857]::result::Result<(), rustc_errors[c36b833622a99705]::ErrorGuaranteed>>\r\n  30:     0x561e7e1bce90 - std[84bdfa5f30581670]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[2984e52930de60b0]::util::run_in_thread_pool_with_globals<rustc_interface[2984e52930de60b0]::interface::run_compiler<core[20f247eb21f65857]::result::Result<(), rustc_errors[c36b833622a99705]::ErrorGuaranteed>, rustdoc[4d62e6a838d5304]::main_args::{closure#1}>::{closure#0}, core[20f247eb21f65857]::result::Result<(), rustc_errors[c36b833622a99705]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[20f247eb21f65857]::result::Result<(), rustc_errors[c36b833622a99705]::ErrorGuaranteed>>\r\n  31:     0x561e7e2b24bd - <<std[84bdfa5f30581670]::thread::Builder>::spawn_unchecked_<rustc_interface[2984e52930de60b0]::util::run_in_thread_pool_with_globals<rustc_interface[2984e52930de60b0]::interface::run_compiler<core[20f247eb21f65857]::result::Result<(), rustc_errors[c36b833622a99705]::ErrorGuaranteed>, rustdoc[4d62e6a838d5304]::main_args::{closure#1}>::{closure#0}, core[20f247eb21f65857]::result::Result<(), rustc_errors[c36b833622a99705]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[20f247eb21f65857]::result::Result<(), rustc_errors[c36b833622a99705]::ErrorGuaranteed>>::{closure#1} as core[20f247eb21f65857]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  32:     0x7f3c19173343 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hf16302793057de5b\r\n                               at /rustc/e1d819583f0bf13b016b119c1c2c43e6d3979450/library/alloc/src/boxed.rs:2000:9\r\n  33:     0x7f3c19173343 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h98a6e7c9c7148daa\r\n                               at /rustc/e1d819583f0bf13b016b119c1c2c43e6d3979450/library/alloc/src/boxed.rs:2000:9\r\n  34:     0x7f3c19173343 - std::sys::unix::thread::Thread::new::thread_start::h40d01ba5e8c2eb10\r\n                               at /rustc/e1d819583f0bf13b016b119c1c2c43e6d3979450/library/std/src/sys/unix/thread.rs:108:17\r\n  35:     0x7f3c18ec28fd - <unknown>\r\n  36:     0x7f3c18f44a60 - <unknown>\r\n  37:                0x0 - <unknown>\r\nerror: aborting due to 2 previous errors\r\n\r\nSome errors have detailed explanations: E0107, E0227.\r\nFor more information about an error, try `rustc --explain E0107`.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105404/timeline", "performed_via_github_app": null, "state_reason": "completed"}