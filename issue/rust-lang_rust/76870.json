{"url": "https://api.github.com/repos/rust-lang/rust/issues/76870", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/76870/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/76870/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/76870/events", "html_url": "https://github.com/rust-lang/rust/issues/76870", "id": 704278992, "node_id": "MDU6SXNzdWU3MDQyNzg5OTI=", "number": 76870, "title": "Unhelpful error message \"cannot satisfy `<associated_type> == _`\"", "user": {"login": "Pagten", "id": 1167521, "node_id": "MDQ6VXNlcjExNjc1MjE=", "avatar_url": "https://avatars.githubusercontent.com/u/1167521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pagten", "html_url": "https://github.com/Pagten", "followers_url": "https://api.github.com/users/Pagten/followers", "following_url": "https://api.github.com/users/Pagten/following{/other_user}", "gists_url": "https://api.github.com/users/Pagten/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pagten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pagten/subscriptions", "organizations_url": "https://api.github.com/users/Pagten/orgs", "repos_url": "https://api.github.com/users/Pagten/repos", "events_url": "https://api.github.com/users/Pagten/events{/privacy}", "received_events_url": "https://api.github.com/users/Pagten/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-09-18T10:43:12Z", "updated_at": "2020-09-18T10:46:55Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nmod general {\r\n    // Shorthand for getting the OperationState type of an Operation with a given Session type\r\n    pub type StateOf<'s, A, Sess> = <A as HasOperationState<'s, Sess>>::State;\r\n\r\n    // Shorthand for getting the Session type of an Operation\r\n    pub type SessionOf<A> = <<A as Operation>::SessionLookup as SessionLookup>::Session;\r\n\r\n    pub trait SessionLookup {\r\n        type Session;\r\n    }\r\n\r\n    pub trait Operation: for<'s> HasOperationState<'s, SessionOf<Self>> {\r\n        type SessionLookup: SessionLookup + 'static;\r\n    }\r\n\r\n    pub trait OperationState<'s, Sess> {\r\n        fn session(&self) -> &Sess;\r\n    }\r\n\r\n    pub trait HasOperationState<'s, Sess> {\r\n        type State: OperationState<'s, Sess>;\r\n    }\r\n\r\n    pub struct PhantomOperation<T: Operation>(pub ::std::marker::PhantomData<T>);\r\n}\r\n\r\nmod specific {\r\n    use crate::general::*;\r\n\r\n    pub struct MySession {}\r\n\r\n    pub struct MySessionLookup {}\r\n\r\n    impl SessionLookup for MySessionLookup {\r\n        type Session = MySession;\r\n    }\r\n\r\n    pub trait MyOperationState {}\r\n\r\n    pub trait MyExtensionTrait {}\r\n\r\n    // This gives a compilation error:\r\n    //\r\n    // type annotations needed: cannot satisfy `<A as general::HasOperationState<'s, extension::MySession>>::State == _`\r\n    impl<'s, A> MyExtensionTrait for PhantomOperation<A>\r\n        where A: Operation<SessionLookup = MySessionLookup> + HasOperationState<'s, MySession>,\r\n              StateOf<'s, A, SessionOf<A>>: MyOperationState,\r\n    {\r\n\r\n    }\r\n}\r\n```\r\nRust [playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=3b0c4951bd2033441d16993764f1ecfd) link.\r\n\r\nIt fails to compile on both the stable channel as well as the most recent nightly (`1.48.0-nightly (2020-09-17 f3c923a13a458c35ee26)`) with this error message:\r\n```\r\ntype annotations needed: cannot satisfy `<A as general::HasOperationState<'s, extension::MySession>>::State == _`\r\n```\r\n\r\nI'm not sure if this code should compile without errors, but I certainly think the compiler should give a more helpful error message. The statement `<A as general::HasOperationState<'s, extension::MySession>>::State == _` seems trivial to satisfy, so it is unclear what the compiler is having trouble with.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/76870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/76870/timeline", "performed_via_github_app": null, "state_reason": null}