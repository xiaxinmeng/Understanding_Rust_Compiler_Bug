{"url": "https://api.github.com/repos/rust-lang/rust/issues/66195", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66195/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66195/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66195/events", "html_url": "https://github.com/rust-lang/rust/issues/66195", "id": 519434253, "node_id": "MDU6SXNzdWU1MTk0MzQyNTM=", "number": 66195, "title": "Can't use DoubleEndedIterator for inclusive ranges ", "user": {"login": "kacejot", "id": 20083419, "node_id": "MDQ6VXNlcjIwMDgzNDE5", "avatar_url": "https://avatars.githubusercontent.com/u/20083419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kacejot", "html_url": "https://github.com/kacejot", "followers_url": "https://api.github.com/users/kacejot/followers", "following_url": "https://api.github.com/users/kacejot/following{/other_user}", "gists_url": "https://api.github.com/users/kacejot/gists{/gist_id}", "starred_url": "https://api.github.com/users/kacejot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kacejot/subscriptions", "organizations_url": "https://api.github.com/users/kacejot/orgs", "repos_url": "https://api.github.com/users/kacejot/repos", "events_url": "https://api.github.com/users/kacejot/events{/privacy}", "received_events_url": "https://api.github.com/users/kacejot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 889209675, "node_id": "MDU6TGFiZWw4ODkyMDk2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-iterators", "name": "A-iterators", "color": "f7e101", "default": false, "description": "Area: Iterators"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-07T18:22:01Z", "updated_at": "2023-04-24T13:23:53Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Code:\r\n```rust\r\nfn main() {\r\n    let size = 10;\r\n    let h = size / 2;\r\n    let _iter = (-h..=h).step_by(size as usize).rev();\r\n}\r\n```\r\n\r\nError:\r\n```\r\nerror[E0277]: the trait bound `std::ops::RangeInclusive<i32>: std::iter::ExactSizeIterator` is not satisfied\r\n --> src/main.rs:4:48\r\n  |\r\n4 |     let iter = (-h..=h).step_by(size as usize).rev();\r\n  |                                                ^^^ the trait `std::iter::ExactSizeIterator` is not implemented for `std::ops::RangeInclusive<i32>`\r\n  |\r\n  = help: the following implementations were found:\r\n            <std::ops::RangeInclusive<i16> as std::iter::ExactSizeIterator>\r\n            <std::ops::RangeInclusive<i8> as std::iter::ExactSizeIterator>\r\n            <std::ops::RangeInclusive<u16> as std::iter::ExactSizeIterator>\r\n            <std::ops::RangeInclusive<u8> as std::iter::ExactSizeIterator>\r\n  = note: required because of the requirements on the impl of `std::iter::DoubleEndedIterator` for `std::iter::StepBy<std::ops::RangeInclusive<i32>>`\r\n```\r\n\r\nI think Rust is not getting safer without ExactSizeIterator implementation for RangeInclusive. The behavior like the one above is not obvious for average Rust coder. Moreover, the workaround exists:\r\n```rust\r\nfn main() {\r\n    let size = 10;\r\n    let h = size / 2;\r\n    let _iter = (-h..h+1).step_by(size as usize).rev();\r\n}\r\n```\r\n\r\nrelated: #36386", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66195/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66195/timeline", "performed_via_github_app": null, "state_reason": null}