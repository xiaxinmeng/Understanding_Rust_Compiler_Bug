{"url": "https://api.github.com/repos/rust-lang/rust/issues/22850", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/22850/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/22850/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/22850/events", "html_url": "https://github.com/rust-lang/rust/issues/22850", "id": 59157352, "node_id": "MDU6SXNzdWU1OTE1NzM1Mg==", "number": 22850, "title": "Bad codegen with const used on the left of `@` pattern", "user": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 100522, "node_id": "MDU6TGFiZWwxMDA1MjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-crash", "name": "I-crash", "color": "e10c02", "default": false, "description": "Issue: The compiler crashes (SIGSEGV, SIGABRT, etc). Use I-ICE instead when the compiler panics."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-26T22:46:52Z", "updated_at": "2015-02-27T16:44:32Z", "closed_at": "2015-02-27T16:44:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Possibly the treatment as a match vs. a binding is inconsistent between typeck and trans.  The unused variable lint is also peculiar.\n\n``` rust\nmacro_rules! foo {\n    ($n:expr) => {\n        match $n {\n            zzzz @ _ => zzzz + 1,       \n            _ => 0,\n        }\n    }\n} \n\nfn main() {\n    const zzzz: i32 = 3; \n    assert_eq!(foo!(3), 4);\n}\n```\n\n```\n$ rustc --version\nrustc 1.0.0-dev (4db0b3246 2015-02-25) (built 2015-02-26)\n\n$ rustc -C debuginfo=2 foo.rs   # only happens w/o opt\nfoo.rs:4:13: 4:21 warning: unused variable: `zzzz`, #[warn(unused_variables)] on by default\nfoo.rs:4             zzzz @ _ => zzzz + 1,\n                     ^~~~~~~~\nfoo.rs:1:1: 8:2 note: in expansion of foo!\nfoo.rs:12:16: 12:24 note: expansion site\n<std macros>:1:1: 9:39 note: in expansion of assert_eq!\nfoo.rs:12:5: 12:28 note: expansion site\nfoo.rs:11:5: 11:25 warning: constant `zzzz` should have an upper case name such as `ZZZZ`, #[warn(non_upper_case_globals)] on by default\nfoo.rs:11     const zzzz: i32 = 3;\n              ^~~~~~~~~~~~~~~~~~~~\nfoo.rs:4:13: 4:21 warning: constant in pattern `zzzz` should have an upper case name such as `ZZZZ`, #[warn(non_upper_case_globals)] on by default\nfoo.rs:4             zzzz @ _ => zzzz + 1,\n                     ^~~~~~~~\nfoo.rs:1:1: 8:2 note: in expansion of foo!\nfoo.rs:12:16: 12:24 note: expansion site\n<std macros>:1:1: 9:39 note: in expansion of assert_eq!\nfoo.rs:12:5: 12:28 note: expansion site\n\n$ gdb ./foo\n(gdb) run\nStarting program: /tmp/foo \n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x0000555555559146 in foo::main () at foo.rs:10\n10      fn main() {\n```\n\nIR:\n\n``` llvm\n; ModuleID = 'foo.0.rs'\ntarget datalayout = \"e-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-unknown-linux-gnu\"\n\n%str_slice = type { i8*, i64 }\n%\"2.core::fmt::Formatter\" = type { i32, i32, i8, %\"2.core::option::Option<usize>\", %\"2.core::option::Option<usize>\", { i8*, void (i8*)** }, %\"2.core::slice::Iter<core::fmt::ArgumentV1>\", { %\"2.core::fmt::ArgumentV1\"*, i64 } }\n%\"2.core::option::Option<usize>\" = type { i64, [0 x i64], [1 x i64] }\n%\"2.core::slice::Iter<core::fmt::ArgumentV1>\" = type { %\"2.core::fmt::ArgumentV1\"*, %\"2.core::fmt::ArgumentV1\"*, %\"2.core::marker::PhantomData<&'static core::fmt::ArgumentV1>\" }\n%\"2.core::fmt::ArgumentV1\" = type { %\"2.core::fmt::Void\"*, i8 (%\"2.core::fmt::Void\"*, %\"2.core::fmt::Formatter\"*)* }\n%\"2.core::fmt::Void\" = type {}\n%\"2.core::marker::PhantomData<&'static core::fmt::ArgumentV1>\" = type {}\n%\"2.core::fmt::Arguments\" = type { { %str_slice*, i64 }, %\"2.core::option::Option<&'static [core::fmt::rt::v1::Argument]>\", { %\"2.core::fmt::ArgumentV1\"*, i64 } }\n%\"2.core::option::Option<&'static [core::fmt::rt::v1::Argument]>\" = type { { %\"2.core::fmt::rt::v1::Argument\"*, i64 } }\n%\"2.core::fmt::rt::v1::Argument\" = type { %\"2.core::fmt::rt::v1::Position\", %\"2.core::fmt::rt::v1::FormatSpec\" }\n%\"2.core::fmt::rt::v1::Position\" = type { i64, [0 x i64], [1 x i64] }\n%\"2.core::fmt::rt::v1::FormatSpec\" = type { i32, i8, i32, %\"2.core::fmt::rt::v1::Count\", %\"2.core::fmt::rt::v1::Count\" }\n%\"2.core::fmt::rt::v1::Count\" = type { i64, [0 x i64], [1 x i64] }\n\n@const19 = internal unnamed_addr constant i32 3\n@const22 = internal unnamed_addr constant i32 4\n@const26 = internal unnamed_addr constant i32 0\n@const27 = internal unnamed_addr constant i32* @const22\n@const133 = internal unnamed_addr constant { { i8*, i8* } } zeroinitializer\n@str1146 = internal constant [63 x i8] c\"assertion failed: `(left == right) && (right == left)` (left: `\"\n@str1147 = internal constant [11 x i8] c\"`, right: `\"\n@str1148 = internal constant [2 x i8] c\"`)\"\n@ref68 = internal unnamed_addr constant [3 x %str_slice] [%str_slice { i8* getelementptr inbounds ([63 x i8]* @str1146, i32 0, i32 0), i64 63 }, %str_slice { i8* getelementptr inbounds ([11 x i8]* @str1147, i32 0, i32 0), i64 11 }, %str_slice { i8* getelementptr inbounds ([2 x i8]* @str1148, i32 0, i32 0), i64 2 }]\n@_ZN4main15__STATIC_FMTSTR20h0eec925d33596e3a9aaE = internal constant { %str_slice*, i64 } { %str_slice* getelementptr inbounds ([3 x %str_slice]* @ref68, i32 0, i32 0), i64 3 }\n@const90 = internal unnamed_addr constant i8 (i32*, %\"2.core::fmt::Formatter\"*)* @_ZN3fmt3num14i32.fmt..Debug3fmt20h82571085d6d53e2c8uBE\n@str1159 = internal constant [6 x i8] c\"foo.rs\"\n@_ZN4main10_FILE_LINE20ha7672bc1aa8c4e82KbaE = internal constant { %str_slice, i64 } { %str_slice { i8* getelementptr inbounds ([6 x i8]* @str1159, i32 0, i32 0), i64 6 }, i64 12 }\n\n; Function Attrs: uwtable\ndefine internal void @_ZN4main20hd61647c88ae5d91beaaE() unnamed_addr #0 {\nentry-block:\n  %0 = alloca { i32*, i32* }\n  %1 = alloca i32\n  %match = alloca i32\n  %__llmatch = alloca i32*\n  %zzzz = alloca i32\n  %addr_of = alloca i32\n  %__llmatch3 = alloca i32**\n  %left_val = alloca i32*\n  %__llmatch4 = alloca i32**\n  %right_val = alloca i32*\n  %2 = alloca %\"2.core::fmt::Arguments\"\n  %3 = alloca { %str_slice*, i64 }\n  %4 = alloca [2 x %\"2.core::fmt::ArgumentV1\"]\n  %5 = alloca { i32*, i32* }\n  %__llmatch7 = alloca i32**\n  %__arg0 = alloca i32*\n  %__llmatch8 = alloca i32**\n  %__arg1 = alloca i32*\n  %auto_deref = alloca [2 x %\"2.core::fmt::ArgumentV1\"]*\n  %__fat_ptr = alloca { %\"2.core::fmt::ArgumentV1\"*, i64 }\n  %__fat_ptr10 = alloca { %\"2.core::fmt::ArgumentV1\"*, i64 }\n  %6 = alloca { %str_slice, i64 }*\n  %7 = getelementptr inbounds { i32*, i32* }* %0, i32 0, i32 0\n  store i32 3, i32* %match\n  %8 = load i32* %match\n  switch i32 %8, label %match_else [\n    i32 3, label %match_case\n  ]\n\ncase_body:                                        ; preds = %match_case\n  %9 = load i32** %__llmatch\n  %10 = load i32* %9\n  store i32 %10, i32* %zzzz\n  store i32 4, i32* %1\n  br label %join\n\ncase_body1:                                       ; preds = %match_else\n  store i32 0, i32* %1\n  br label %join\n\nmatch_else:                                       ; preds = %entry-block\n  br label %case_body1\n\nmatch_case:                                       ; preds = %entry-block\n  br label %case_body\n\njoin:                                             ; preds = %case_body1, %case_body\n  %11 = load i32* %1\n  store i32 %11, i32* %addr_of\n  store i32* %addr_of, i32** %7\n  %12 = getelementptr inbounds { i32*, i32* }* %0, i32 0, i32 1\n  store i32* @const22, i32** %12\n  %13 = getelementptr inbounds { i32*, i32* }* %0, i32 0, i32 0\n  %14 = getelementptr inbounds { i32*, i32* }* %0, i32 0, i32 1\n  store i32** %13, i32*** %__llmatch3\n  store i32** %14, i32*** %__llmatch4\n  br label %case_body2\n\ncase_body2:                                       ; preds = %join\n  %15 = load i32*** %__llmatch3\n  %16 = load i32** %15, !nonnull !0\n  store i32* %16, i32** %left_val\n  %17 = load i32*** %__llmatch4\n  %18 = load i32** %17, !nonnull !0\n  store i32* %18, i32** %right_val\n  %19 = load i32** %left_val, !nonnull !0\n  %20 = load i32** %right_val, !nonnull !0\n  %21 = load i32* %19\n  %22 = load i32* %20\n  %23 = icmp eq i32 %21, %22\n  br i1 %23, label %before_rhs, label %join5\n\njoin5:                                            ; preds = %before_rhs, %case_body2\n  %24 = phi i1 [ %23, %case_body2 ], [ %30, %before_rhs ]\n  %25 = xor i1 %24, true\n  br i1 %25, label %then-block-51-, label %next-block\n\nbefore_rhs:                                       ; preds = %case_body2\n  %26 = load i32** %right_val, !nonnull !0\n  %27 = load i32** %left_val, !nonnull !0\n  %28 = load i32* %26\n  %29 = load i32* %27\n  %30 = icmp eq i32 %28, %29\n  br label %join5\n\nthen-block-51-:                                   ; preds = %join5\n  %31 = bitcast { %str_slice*, i64 }* %3 to i8*\n  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* bitcast ({ %str_slice*, i64 }* @_ZN4main15__STATIC_FMTSTR20h0eec925d33596e3a9aaE to i8*), i64 16, i32 8, i1 false)\n  %32 = getelementptr inbounds { i32*, i32* }* %5, i32 0, i32 0\n  %33 = load i32** %left_val, !nonnull !0\n  store i32* %33, i32** %32\n  %34 = getelementptr inbounds { i32*, i32* }* %5, i32 0, i32 1\n  %35 = load i32** %right_val, !nonnull !0\n  store i32* %35, i32** %34\n  %36 = getelementptr inbounds { i32*, i32* }* %5, i32 0, i32 0\n  %37 = getelementptr inbounds { i32*, i32* }* %5, i32 0, i32 1\n  store i32** %36, i32*** %__llmatch7\n  store i32** %37, i32*** %__llmatch8\n  br label %case_body6\n\ncase_body6:                                       ; preds = %then-block-51-\n  %38 = load i32*** %__llmatch8\n  %39 = load i32** %38, !nonnull !0\n  store i32* %39, i32** %__arg1\n  %40 = load i32*** %__llmatch7\n  %41 = load i32** %40, !nonnull !0\n  store i32* %41, i32** %__arg0\n  %42 = getelementptr inbounds [2 x %\"2.core::fmt::ArgumentV1\"]* %4, i32 0, i32 0\n  %43 = getelementptr inbounds %\"2.core::fmt::ArgumentV1\"* %42, i32 0\n  %44 = load i32** %__arg0, !nonnull !0\n  call void @\"_ZN3fmt24ArgumentV1$LT$$u27$a$GT$3new21h11701018729727839244E\"(%\"2.core::fmt::ArgumentV1\"* noalias nocapture sret dereferenceable(16) %43, i32* noalias readonly dereferenceable(4) %44, i8 (i32*, %\"2.core::fmt::Formatter\"*)* @_ZN3fmt3num14i32.fmt..Debug3fmt20h82571085d6d53e2c8uBE)\n  %45 = getelementptr inbounds %\"2.core::fmt::ArgumentV1\"* %42, i32 1\n  %46 = load i32** %__arg1, !nonnull !0\n  call void @\"_ZN3fmt24ArgumentV1$LT$$u27$a$GT$3new21h11701018729727839244E\"(%\"2.core::fmt::ArgumentV1\"* noalias nocapture sret dereferenceable(16) %45, i32* noalias readonly dereferenceable(4) %46, i8 (i32*, %\"2.core::fmt::Formatter\"*)* @_ZN3fmt3num14i32.fmt..Debug3fmt20h82571085d6d53e2c8uBE)\n  br label %join9\n\njoin9:                                            ; preds = %case_body6\n  store [2 x %\"2.core::fmt::ArgumentV1\"]* %4, [2 x %\"2.core::fmt::ArgumentV1\"]** %auto_deref\n  %47 = load [2 x %\"2.core::fmt::ArgumentV1\"]** %auto_deref, !nonnull !0\n  %48 = bitcast [2 x %\"2.core::fmt::ArgumentV1\"]* %47 to %\"2.core::fmt::ArgumentV1\"*\n  %49 = getelementptr inbounds { %\"2.core::fmt::ArgumentV1\"*, i64 }* %__fat_ptr, i32 0, i32 0\n  store %\"2.core::fmt::ArgumentV1\"* %48, %\"2.core::fmt::ArgumentV1\"** %49\n  %50 = getelementptr inbounds { %\"2.core::fmt::ArgumentV1\"*, i64 }* %__fat_ptr, i32 0, i32 1\n  store i64 2, i64* %50\n  %51 = bitcast { %\"2.core::fmt::ArgumentV1\"*, i64 }* %__fat_ptr to i8*\n  %52 = bitcast { %\"2.core::fmt::ArgumentV1\"*, i64 }* %__fat_ptr10 to i8*\n  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %51, i64 16, i32 8, i1 false)\n  call void @\"_ZN3fmt23Arguments$LT$$u27$a$GT$6new_v120hddb70f9412632ed662BE\"(%\"2.core::fmt::Arguments\"* noalias nocapture sret dereferenceable(48) %2, { %str_slice*, i64 }* noalias nocapture dereferenceable(16) %3, { %\"2.core::fmt::ArgumentV1\"*, i64 }* noalias nocapture dereferenceable(16) %__fat_ptr10)\n  store { %str_slice, i64 }* @_ZN4main10_FILE_LINE20ha7672bc1aa8c4e82KbaE, { %str_slice, i64 }** %6\n  %53 = load { %str_slice, i64 }** %6, !nonnull !0\n  call void @_ZN2rt6unwind16begin_unwind_fmt20hbda8d92395aa47d1LOIE(%\"2.core::fmt::Arguments\"* noalias nocapture dereferenceable(48) %2, { %str_slice, i64 }* noalias readonly dereferenceable(24) %53)\n  unreachable\n\nnext-block:                                       ; preds = %join5\n  br label %join11\n\njoin11:                                           ; preds = %next-block\n  ret void\n}\n\ndefine i64 @main(i64, i8**) unnamed_addr #1 {\ntop:\n  %2 = call i64 @_ZN2rt10lang_start20h7a2fc813423057b2l4IE(i8* bitcast (void ()* @_ZN4main20hd61647c88ae5d91beaaE to i8*), i64 %0, i8** %1)\n  ret i64 %2\n}\n\ndeclare i64 @_ZN2rt10lang_start20h7a2fc813423057b2l4IE(i8*, i64, i8**) unnamed_addr #1\n\n; Function Attrs: cold noinline noreturn\ndeclare void @_ZN2rt6unwind16begin_unwind_fmt20hbda8d92395aa47d1LOIE(%\"2.core::fmt::Arguments\"* noalias nocapture dereferenceable(48), { %str_slice, i64 }* noalias readonly dereferenceable(24)) unnamed_addr #2\n\n; Function Attrs: inlinehint uwtable\ndefine internal void @\"_ZN3fmt23Arguments$LT$$u27$a$GT$6new_v120hddb70f9412632ed662BE\"(%\"2.core::fmt::Arguments\"* noalias nocapture sret dereferenceable(48), { %str_slice*, i64 }* noalias nocapture dereferenceable(16), { %\"2.core::fmt::ArgumentV1\"*, i64 }* noalias nocapture dereferenceable(16)) unnamed_addr #3 {\nentry-block:\n  %3 = getelementptr inbounds %\"2.core::fmt::Arguments\"* %0, i32 0, i32 0\n  %4 = bitcast { %str_slice*, i64 }* %1 to i8*\n  %5 = bitcast { %str_slice*, i64 }* %3 to i8*\n  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %4, i64 16, i32 8, i1 false)\n  %6 = getelementptr inbounds %\"2.core::fmt::Arguments\"* %0, i32 0, i32 1\n  %7 = bitcast %\"2.core::option::Option<&'static [core::fmt::rt::v1::Argument]>\"* %6 to { { i8*, i8* } }*\n  %8 = bitcast { { i8*, i8* } }* %7 to i8*\n  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* bitcast ({ { i8*, i8* } }* @const133 to i8*), i64 16, i32 8, i1 false)\n  %9 = getelementptr inbounds %\"2.core::fmt::Arguments\"* %0, i32 0, i32 2\n  %10 = bitcast { %\"2.core::fmt::ArgumentV1\"*, i64 }* %2 to i8*\n  %11 = bitcast { %\"2.core::fmt::ArgumentV1\"*, i64 }* %9 to i8*\n  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %10, i64 16, i32 8, i1 false)\n  ret void\n}\n\n; Function Attrs: nounwind\ndeclare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) unnamed_addr #4\n\n; Function Attrs: uwtable\ndefine internal void @\"_ZN3fmt24ArgumentV1$LT$$u27$a$GT$3new21h11701018729727839244E\"(%\"2.core::fmt::ArgumentV1\"* noalias nocapture sret dereferenceable(16), i32* noalias readonly dereferenceable(4), i8 (i32*, %\"2.core::fmt::Formatter\"*)*) unnamed_addr #0 {\nentry-block:\n  %x = alloca i32*\n  %f = alloca i8 (i32*, %\"2.core::fmt::Formatter\"*)*\n  store i32* %1, i32** %x\n  store i8 (i32*, %\"2.core::fmt::Formatter\"*)* %2, i8 (i32*, %\"2.core::fmt::Formatter\"*)** %f\n  %3 = getelementptr inbounds %\"2.core::fmt::ArgumentV1\"* %0, i32 0, i32 1\n  %4 = load i8 (i32*, %\"2.core::fmt::Formatter\"*)** %f\n  %5 = bitcast i8 (i32*, %\"2.core::fmt::Formatter\"*)* %4 to i8 (%\"2.core::fmt::Void\"*, %\"2.core::fmt::Formatter\"*)*\n  store i8 (%\"2.core::fmt::Void\"*, %\"2.core::fmt::Formatter\"*)* %5, i8 (%\"2.core::fmt::Void\"*, %\"2.core::fmt::Formatter\"*)** %3\n  %6 = getelementptr inbounds %\"2.core::fmt::ArgumentV1\"* %0, i32 0, i32 0\n  %7 = load i32** %x, !nonnull !0\n  %8 = bitcast i32* %7 to %\"2.core::fmt::Void\"*\n  store %\"2.core::fmt::Void\"* %8, %\"2.core::fmt::Void\"** %6\n  ret void\n}\n\ndeclare i8 @_ZN3fmt3num14i32.fmt..Debug3fmt20h82571085d6d53e2c8uBE(i32* noalias readonly dereferenceable(4), %\"2.core::fmt::Formatter\"* noalias dereferenceable(96)) unnamed_addr #1\n\nattributes #0 = { uwtable \"split-stack\" }\nattributes #1 = { \"split-stack\" }\nattributes #2 = { cold noinline noreturn \"split-stack\" }\nattributes #3 = { inlinehint uwtable \"split-stack\" }\nattributes #4 = { nounwind \"split-stack\" }\n\n!0 = !{}\n```\n", "closed_by": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/22850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/22850/timeline", "performed_via_github_app": null, "state_reason": "completed"}