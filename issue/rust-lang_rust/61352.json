{"url": "https://api.github.com/repos/rust-lang/rust/issues/61352", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61352/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61352/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61352/events", "html_url": "https://github.com/rust-lang/rust/issues/61352", "id": 450320042, "node_id": "MDU6SXNzdWU0NTAzMjAwNDI=", "number": 61352, "title": "Missed space optimization in enums with `rustc_layout_scalar_valid_range_X` attributes", "user": {"login": "jfrimmel", "id": 31166235, "node_id": "MDQ6VXNlcjMxMTY2MjM1", "avatar_url": "https://avatars.githubusercontent.com/u/31166235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfrimmel", "html_url": "https://github.com/jfrimmel", "followers_url": "https://api.github.com/users/jfrimmel/followers", "following_url": "https://api.github.com/users/jfrimmel/following{/other_user}", "gists_url": "https://api.github.com/users/jfrimmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfrimmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfrimmel/subscriptions", "organizations_url": "https://api.github.com/users/jfrimmel/orgs", "repos_url": "https://api.github.com/users/jfrimmel/repos", "events_url": "https://api.github.com/users/jfrimmel/events{/privacy}", "received_events_url": "https://api.github.com/users/jfrimmel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1049491442, "node_id": "MDU6TGFiZWwxMDQ5NDkxNDQy", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-heavy", "name": "I-heavy", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to binary size of generated code."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-30T13:54:54Z", "updated_at": "2020-03-29T16:05:49Z", "closed_at": "2020-03-29T16:05:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since the introduction of the `NonZero`-types, it is possible to store information about the used enum variant without requiring extra space, e.g.:\r\n```rust\r\nuse core::{mem::size_of, num::NonZeroUsize};\r\n\r\nsize_of::<Option<NonZeroUsize>>() == size_of::<usize>()\r\n```\r\nAs far as i understand it, this is achieved by telling the compiler, that the lowest bit is always unused. This bit then can be used to differentiate between the Some() and None case. This works great today.\r\n\r\nThe point of this particular issue is the following: if you have a (custom) enum with two variants and both of them store such a type, the optimization described above has no effect.\r\nThis means, that the following code ([godbolt link](https://godbolt.org/z/IH23tp)) has a size of 8:\r\n```rust\r\nuse core::{mem::size_of, num::NonZeroU32};\r\nenum S {\r\n    A(NonZeroU32),\r\n    B(NonZeroU32),\r\n}\r\nsize_of::<S>() == 8 // could be 4\r\n```\r\n\r\nI think it should be possible, especially since the \"payloads\" inside the enum variants are of the same type, that _rustc_ uses the lowest bit to select between `A` and `B`, whereas the rest of the bits are used to store the `NonZeroU32`. This would save 4 bytes.\r\n\r\nIs that something, that can be achieved in some way? Of course, you can build such a type yourself, but you loose the ability to pattern-match, etc. which would come handy.", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61352/timeline", "performed_via_github_app": null, "state_reason": "completed"}