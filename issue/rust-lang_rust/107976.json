{"url": "https://api.github.com/repos/rust-lang/rust/issues/107976", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107976/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107976/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107976/events", "html_url": "https://github.com/rust-lang/rust/issues/107976", "id": 1581531683, "node_id": "I_kwDOAAsO6M5eREIj", "number": 107976, "title": "E0507 suggestion for borrowing mistake inside of a macro suggests a syntax error", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-02-13T02:23:40Z", "updated_at": "2023-02-24T12:37:09Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\n\r\nhere's a minimal case -- a bit nonsensical but pulled out of a larger example\r\n\r\n\r\n#### Cargo.toml\r\n\r\n```toml\r\n[package]\r\nname = \"wat\"\r\nversion = \"0.1.0\"\r\nedition = \"2021\"\r\n\r\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\r\n\r\n[dependencies]\r\nwat-derive = { path = \"wat-derive\" }\r\n```\r\n\r\n\r\n#### src/main.rs\r\n\r\n```rust\r\nuse wat_derive::Example;\r\n\r\ntrait Example {\r\n    fn f(&self);\r\n}\r\n\r\n#[derive(Example)]\r\nstruct S {\r\n    x: Option<String>\r\n}\r\n\r\nfn main() {\r\n    let s = S { x: None };\r\n    s.f();\r\n}\r\n```\r\n\r\n#### wat-derive/Cargo.toml\r\n\r\n```toml\r\n[package]\r\nname = \"wat-derive\"\r\nversion = \"0.1.0\"\r\nedition = \"2021\"\r\n\r\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\r\n\r\n[dependencies]\r\nquote = \"1.0.23\"\r\nsyn = \"1.0.107\"\r\n\r\n[lib]\r\nproc-macro = true\r\n```\r\n\r\n\r\n#### wat-derive/src/lib.rs\r\n\r\n```rust\r\n#[proc_macro_derive(Example)]\r\npub fn m(_input: proc_macro::TokenStream) -> proc_macro::TokenStream {\r\n    quote::quote! {\r\n        impl Example for S {\r\n            fn f(&self) {\r\n                // borrowing mistake here\r\n                if let Some(v) = self.x {\r\n                    dbg!(v);\r\n                }\r\n            }\r\n        }\r\n    }.into()\r\n}\r\n```\r\n\r\n\r\n### Current output\r\n\r\n```Shell\r\n$ cargo build\r\n   Compiling wat v0.1.0 (/home/asottile/workspace/pre-commit-rs/y/wat)\r\nerror[E0507]: cannot move out of `self.x` as enum variant `Some` which is behind a shared reference\r\n --> src/main.rs:7:10\r\n  |\r\n7 | #[derive(Example)]\r\n  |          ^^^^^^^\r\n  |          |\r\n  |          data moved here\r\n  |          move occurs because `v` has type `String`, which does not implement the `Copy` trait\r\n  |\r\n  = note: this error originates in the derive macro `Example` (in Nightly builds, run with -Z macro-backtrace for more info)\r\nhelp: consider borrowing here\r\n  |\r\n7 | #[derive(&Example)]\r\n  |          +\r\n\r\nFor more information about this error, try `rustc --explain E0507`.\r\nerror: could not compile `wat` due to previous error\r\n```\r\n\r\n\r\n### Desired output\r\n\r\nanything else tbh -- I don't really know the correct thing to do here -- it would be nice if it pointed at the borrow error inside the macro-generated code, but I don't think `rustc` currently displays the generated code anywhere\r\n\r\n\r\n### Rationale and extra context\r\n\r\n_No response_\r\n\r\n### Other cases\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\n_No response_", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107976/timeline", "performed_via_github_app": null, "state_reason": null}