{"url": "https://api.github.com/repos/rust-lang/rust/issues/70482", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70482/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70482/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70482/events", "html_url": "https://github.com/rust-lang/rust/issues/70482", "id": 589417584, "node_id": "MDU6SXNzdWU1ODk0MTc1ODQ=", "number": 70482, "title": "Unhelpful 'possible better candidate' message on enum struct/tuple variant mismatch", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-27T21:17:24Z", "updated_at": "2020-06-11T17:32:09Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nThe following code\r\n\r\n```rust\r\nenum Foo {\r\n    StructVariant {\r\n        field: bool\r\n    }\r\n}\r\n\r\nenum OtherEnum {\r\n    StructVariant(u8)\r\n}\r\n\r\nfn main(val: Foo) {\r\n    match val {\r\n        Foo::StructVariant(field) => {\r\n            \r\n        }\r\n    }\r\n}\r\n```\r\n\r\ngives the following error message:\r\n\r\n```\r\nrror[E0532]: expected tuple struct or tuple variant, found struct variant `Foo::StructVariant`\r\n  --> src/lib.rs:13:9\r\n   |\r\n2  | /     StructVariant {\r\n3  | |         field: bool\r\n4  | |     }\r\n   | |_____- `Foo::StructVariant` defined here\r\n...\r\n13 |           Foo::StructVariant(field) => {\r\n   |           ^^^^^^^^^^^^^^^^^^ did you mean `Foo::StructVariant { /* fields */ }`?\r\n   |\r\nhelp: possible better candidate is found in another module, you can import it into scope\r\n   |\r\n1  | use crate::OtherEnum::StructVariant;\r\n   |\r\n```\r\nThe 'help' message is not actually very helpful here. We're matching on an instance of `Foo`, so it would never make sense to change a pattern to a variant of a completely different enum.\r\n\r\nThis error message is emitted before type-checking, so it might be difficult to check if the pattern would have been correct if not for the paren/brace mismatch. \r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.44.0-nightly (38114ff16 2020-03-21)\r\nbinary: rustc\r\ncommit-hash: 38114ff16e7856f98b2b4be7ab4cd29b38bed59a\r\ncommit-date: 2020-03-21\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.44.0-nightly\r\nLLVM version: 9.0\r\n\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70482/timeline", "performed_via_github_app": null, "state_reason": null}