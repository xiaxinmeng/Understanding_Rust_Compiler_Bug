{"url": "https://api.github.com/repos/rust-lang/rust/issues/110111", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110111/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110111/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110111/events", "html_url": "https://github.com/rust-lang/rust/issues/110111", "id": 1659942772, "node_id": "I_kwDOAAsO6M5i8Ld0", "number": 110111, "title": "Issues with intra-doc links to core/std derive macros", "user": {"login": "mvanbem", "id": 18731052, "node_id": "MDQ6VXNlcjE4NzMxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/18731052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mvanbem", "html_url": "https://github.com/mvanbem", "followers_url": "https://api.github.com/users/mvanbem/followers", "following_url": "https://api.github.com/users/mvanbem/following{/other_user}", "gists_url": "https://api.github.com/users/mvanbem/gists{/gist_id}", "starred_url": "https://api.github.com/users/mvanbem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mvanbem/subscriptions", "organizations_url": "https://api.github.com/users/mvanbem/orgs", "repos_url": "https://api.github.com/users/mvanbem/repos", "events_url": "https://api.github.com/users/mvanbem/events{/privacy}", "received_events_url": "https://api.github.com/users/mvanbem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1118567289, "node_id": "MDU6TGFiZWwxMTE4NTY3Mjg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-intra-doc-links", "name": "A-intra-doc-links", "color": "f7e101", "default": false, "description": "Area: Intra-doc links, the ability to link to items in docs by name"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "closed", "locked": false, "assignee": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2023-04-09T17:15:33Z", "updated_at": "2023-05-27T15:12:23Z", "closed_at": "2023-05-27T15:12:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to refer to the core `Clone` derive macro (rather than the core `Clone` trait) in a rustdoc intra-doc link, but was not able to find a way that works. Along the way I found broken generated links and a broken error message.\n\n# Environment\n\nI am using a `rust-toolchain.toml` with `toolchain.channel` set to `\"nightly-2023-04-07\"`. Rustdoc identifies itself as:\n\n```\n$ rustdoc --version --verbose\nrustdoc 1.70.0-nightly (28a29282f 2023-04-06)\nbinary: rustdoc\ncommit-hash: unknown\ncommit-date: unknown\nhost: x86_64-unknown-linux-gnu\nrelease: 1.70.0-nightly\nLLVM version: 16.0.2\n```\n\nI happen to be working on a `no_std` crate, so all of my generated links will point to the `core` variants of these items.\n\n# Correct behavior\n\nFirst, what works:\n\n```rust\n/// [`Clone`]\n```\n\nGenerated link: https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\n\nThis links to the `Clone` trait and does not issue an ambiguity warning, apparently due to an intentional disambiguation rule that serves the common case: https://github.com/rust-lang/rust/issues/82478#issuecomment-785122047. Great! I have benefited from this tens if not hundreds of times. But I'm on the unusual path and want to link to the derive macro.\n\n# Incomplete documentation\n\nI did a search and found the [Namespaces and Disambiguators section of the rustdoc book](https://doc.rust-lang.org/rustdoc/write-documentation/linking-to-items-by-name.html#namespaces-and-disambiguators). It says, \"Paths in Rust have three namespaces: type, value, and macro.\" This implies to me that `type@`, `value@`, and `macro@` would be the only valid disambiguators. But then the only examples use `struct@` and `fn@`.\n\nI also found [RFC 1946](https://rust-lang.github.io/rfcs/1946-intra-rustdoc-links.html#path-ambiguities), which provides a more exhaustive (though potentially outdated) list of disambiguators.\n\nThe book says there's a macro namespace and the RFC mentions the `macro@` disambiguator, so I tried that one. I also found that a `derive@` disambiguator is accepted and has the same effect, though neither doc mentions it. It would be nice if there was an exhaustive list of these disambiguators and their behaviors.\n\n# Broken links\n\nI tried using the `macro@` and `derive@` disambiguators in my doc links:\n\n```rust\n/// [`macro@Clone`]\n/// [`derive@Clone`]\n```\n\nGenerated links:\n\n* https://doc.rust-lang.org/nightly/core/clone/derive.Clone.html\n* https://doc.rust-lang.org/nightly/core/clone/derive.Clone.html\n\nThose are 404s! And rustdoc does not issue any warnings or errors. Navigating the official docs, this is the link I want:\n\nhttps://doc.rust-lang.org/nightly/core/clone/macro.Clone.html\n\nSo the official docs and and rustdoc disagree on how to refer to this item.\n\n# Third-party derive macros work\n\nDoes this happen with user-defined derive macros? I was surprised to see I was unable to link to the `derive_more::Add` or `clap::Parser` derive macros (no idea why and `#[doc(hidden)]`, respectively). But here's `serde` 1.0.151 with the `derive` feature enabled:\n\n```rust\n/// [`serde::Serialize`]\n/// [`macro@serde::Serialize`]\n/// [`derive@serde::Serialize`]\n```\n\nGenerated links:\n\n* https://docs.rs/serde/1.0.151/serde/ser/trait.Serialize.html\n* https://docs.rs/serde_derive/1.0.151/serde_derive/derive.Serialize.html\n* https://docs.rs/serde_derive/1.0.151/serde_derive/derive.Serialize.html\n\nThose links all work!\n\nSo I'm led to believe the std/core docs are doing something unusual with the naming of their derive macro pages.\n\n# Sliced error message\n\nFor fun, I tried specifying an incorrect disambiguator:\n\n```rust\n/// For bug report: [`struct@Clone`]\n```\n\n```text\nwarning: incompatible link kind for `Clone`\n   --> my_crate/src/lib.rs:175:23\n    |\n175 | /// For bug report: [`struct@Clone`]\n    |                       ^^^^^^^^^^^^ this link resolved to a trait, which is not a struct\n    |\n    = note: `#[warn(rustdoc::broken_intra_doc_links)]` on by default\nhelp: to link to the trait, prefix with `trait@`\n    |\n175 | /// For bug report: [`trait@lone`]\n    |                       ~~~~~~\n```\n\nThe suggestion replaced `struct` with `trait`, which is reasonable, but it removed the `C` from `Clone` in the process.\n\nThe error message seems to do the right thing if I omit the backticks:\n\n```text\nwarning: incompatible link kind for `Clone`\n   --> my_crate/src/lib.rs:175:19\n    |\n175 | /// Bug attempt: [struct@Clone]\n    |                   ^^^^^^^^^^^^ this link resolved to a trait, which is not a struct\n    |\n    = note: `#[warn(rustdoc::broken_intra_doc_links)]` on by default\nhelp: to link to the trait, prefix with `trait@`\n    |\n175 | /// Bug attempt: [trait@Clone]\n    |                   ~~~~~~\n```\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"fmease\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110111/timeline", "performed_via_github_app": null, "state_reason": "completed"}