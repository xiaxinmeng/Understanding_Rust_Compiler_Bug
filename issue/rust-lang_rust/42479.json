{"url": "https://api.github.com/repos/rust-lang/rust/issues/42479", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42479/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42479/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42479/events", "html_url": "https://github.com/rust-lang/rust/issues/42479", "id": 233905009, "node_id": "MDU6SXNzdWUyMzM5MDUwMDk=", "number": 42479, "title": "ICE for impl Trait with missing lifetime", "user": {"login": "wagnerf42", "id": 10221747, "node_id": "MDQ6VXNlcjEwMjIxNzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/10221747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wagnerf42", "html_url": "https://github.com/wagnerf42", "followers_url": "https://api.github.com/users/wagnerf42/followers", "following_url": "https://api.github.com/users/wagnerf42/following{/other_user}", "gists_url": "https://api.github.com/users/wagnerf42/gists{/gist_id}", "starred_url": "https://api.github.com/users/wagnerf42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wagnerf42/subscriptions", "organizations_url": "https://api.github.com/users/wagnerf42/orgs", "repos_url": "https://api.github.com/users/wagnerf42/repos", "events_url": "https://api.github.com/users/wagnerf42/events{/privacy}", "received_events_url": "https://api.github.com/users/wagnerf42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-06T14:10:46Z", "updated_at": "2017-12-27T22:39:11Z", "closed_at": "2017-12-27T22:39:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, the compiler (nightly) panics on this code:\r\n```rust\r\n#![feature(conservative_impl_trait)]\r\nuse std::iter::once;\r\n\r\nstruct Foo {\r\n    x: i32,\r\n}\r\n\r\nimpl Foo {\r\n    fn inside(&self) -> impl Iterator<Item = &i32> {\r\n        once(&self.x)\r\n    }\r\n}\r\n\r\nfn main() {\r\n    println!(\"hi\");\r\n}\r\n```\r\nI know this code is not ok. in fact once the lifetime is added, the compiler does not panic anymore.\r\n\r\nhere is the log:\r\n```\r\n/tmp \u276f\u276f\u276f rustc --version\r\nrustc 1.19.0-nightly (e0cc22b4b 2017-05-31)\r\n/tmp \u276f\u276f\u276f rustc test.rs\r\nerror: internal compiler error: /checkout/src/librustc_typeck/check/mod.rs:582: escaping regions in predicate Obligatio\r\nn(predicate=Binder(ProjectionPredicate(ProjectionTy { trait_ref: <_ as std::iter::Iterator>, item_name: Item(92) }, &i3\r\n2)),depth=0)\r\n --> test.rs:9:25\r\n  |\r\n9 |     fn inside(&self) -> impl Iterator<Item = &i32> {\r\n  |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: run with `RUST_BACKTRACE=1` for a backtrace\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /checkout/src/librustc_errors/lib.rs:421\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace\r\n             at /checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:60\r\n             at /checkout/src/libstd/panicking.rs:355\r\n   3: std::panicking::default_hook\r\n             at /checkout/src/libstd/panicking.rs:365\r\n   4: std::panicking::rust_panic_with_hook\r\n             at /checkout/src/libstd/panicking.rs:549\r\n   5: std::panicking::begin_panic\r\n   6: rustc_errors::Handler::span_bug\r\n   7: rustc::session::opt_span_bug_fmt::{{closure}}\r\n   8: rustc::session::span_bug_fmt\r\n   9: rustc_typeck::check::Inherited::register_predicate\r\n  10: <rustc::ty::fold::BottomUpFolder<'a, 'gcx, 'tcx, F> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  11: rustc_typeck::check::check_fn\r\n  12: rustc_typeck::check::typeck_tables_of::{{closure}}\r\n  13: rustc_typeck::check::typeck_tables_of\r\n  14: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::try_get\r\n  15: rustc::ty::maps::TyCtxtAt::typeck_tables_of\r\n  16: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_tables_of\r\n  17: rustc_typeck::check::typeck_item_bodies\r\n  18: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_item_bodies<'tcx>>::try_get\r\n  19: rustc::ty::maps::TyCtxtAt::typeck_item_bodies\r\n  20: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_item_bodies\r\n  21: rustc_typeck::check_crate\r\n  22: rustc_driver::driver::phase_3_run_analysis_passes::{{closure}}\r\n  23: rustc_driver::driver::phase_3_run_analysis_passes\r\n  24: rustc_driver::driver::compile_input\r\n  25: rustc_driver::run_compiler\r\n\r\n```\r\n\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42479/timeline", "performed_via_github_app": null, "state_reason": "completed"}