{"url": "https://api.github.com/repos/rust-lang/rust/issues/109360", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/109360/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/109360/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/109360/events", "html_url": "https://github.com/rust-lang/rust/issues/109360", "id": 1631115794, "node_id": "I_kwDOAAsO6M5hONoS", "number": 109360, "title": "[AVR] Invalid asm code \"ldd rn, X+N\" compiles and produces corrupted binary", "user": {"login": "Slickis", "id": 117525466, "node_id": "U_kgDOBwFL2g", "avatar_url": "https://avatars.githubusercontent.com/u/117525466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Slickis", "html_url": "https://github.com/Slickis", "followers_url": "https://api.github.com/users/Slickis/followers", "following_url": "https://api.github.com/users/Slickis/following{/other_user}", "gists_url": "https://api.github.com/users/Slickis/gists{/gist_id}", "starred_url": "https://api.github.com/users/Slickis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Slickis/subscriptions", "organizations_url": "https://api.github.com/users/Slickis/orgs", "repos_url": "https://api.github.com/users/Slickis/repos", "events_url": "https://api.github.com/users/Slickis/events{/privacy}", "received_events_url": "https://api.github.com/users/Slickis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 91598611, "node_id": "MDU6TGFiZWw5MTU5ODYxMQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inline-assembly", "name": "A-inline-assembly", "color": "f7e101", "default": false, "description": "Area: inline asm!(..)"}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1884641928, "node_id": "MDU6TGFiZWwxODg0NjQxOTI4", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-AVR", "name": "O-AVR", "color": "6e6ec0", "default": false, "description": "Target: AVR processors (ATtiny, ATmega, etc.)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-03-19T21:01:22Z", "updated_at": "2023-04-09T03:04:18Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nAVR assembler instruction `ldd` is defined only for registers `Y` and `Z`, but not for `X`.\r\n`asm!()` macro accepts it.\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#[no_mangle]\r\nextern \"C\" fn main() {\r\n    unsafe {\r\n        ::core::arch::asm!(\"\r\n                ldd   {tmp}, X+0\r\n                ldd   {tmp}, X+1\r\n            \",\r\n            tmp = out(reg) _,\r\n            in(\"X\") &0xAABB_u16,\r\n        );\r\n    }\r\n}\r\n```\r\n\r\nI expected to see this happen: compilation error.\r\n\r\nInstead, this happened: rustc produces a binary with a corrupted code.\r\n\r\n```\r\n000000a6 <main>:\r\n  a6:    a0 e0           ldi    r26, 0x00    ; 0\r\n  a8:    b1 e0           ldi    r27, 0x01    ; 1\r\n  aa:    88 81           ld     r24, Y\r\n  ac:    89 81           ldd    r24, Y+1     ; 0x01\r\n  ae:    08 95           ret\r\n```\r\nPointer (0x0100) to a value is loaded into register `X` (`r26:r27`) following by reads from `*Y`.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.70.0-nightly (22f247c6f 2023-03-13)\r\nbinary: rustc\r\ncommit-hash: 22f247c6f3ed388cb702d01c2ff27da658a8b353\r\ncommit-date: 2023-03-13\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.70.0-nightly\r\nLLVM version: 15.0.7\r\n```\r\n\r\n### Steps to reproduce:\r\nrepo: https://github.com/Slickis/rustc-ldd-x\r\n\r\n```\r\ngit clone https://github.com/Slickis/rustc-ldd-x\r\ncd rustc-ldd-x\r\nmake lss\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/109360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/109360/timeline", "performed_via_github_app": null, "state_reason": null}