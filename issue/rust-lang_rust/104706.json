{"url": "https://api.github.com/repos/rust-lang/rust/issues/104706", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104706/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104706/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104706/events", "html_url": "https://github.com/rust-lang/rust/issues/104706", "id": 1459357916, "node_id": "I_kwDOAAsO6M5W_Ajc", "number": 104706, "title": "Account for incorrect attempts to declare \"hexadecimal float literals\" in E0308", "user": {"login": "gasrios", "id": 19175748, "node_id": "MDQ6VXNlcjE5MTc1NzQ4", "avatar_url": "https://avatars.githubusercontent.com/u/19175748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gasrios", "html_url": "https://github.com/gasrios", "followers_url": "https://api.github.com/users/gasrios/followers", "following_url": "https://api.github.com/users/gasrios/following{/other_user}", "gists_url": "https://api.github.com/users/gasrios/gists{/gist_id}", "starred_url": "https://api.github.com/users/gasrios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gasrios/subscriptions", "organizations_url": "https://api.github.com/users/gasrios/orgs", "repos_url": "https://api.github.com/users/gasrios/repos", "events_url": "https://api.github.com/users/gasrios/events{/privacy}", "received_events_url": "https://api.github.com/users/gasrios/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-11-22T08:14:06Z", "updated_at": "2022-12-28T00:07:40Z", "closed_at": "2022-12-28T00:07:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "If someone tries to write a [hexadecimal float literal](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=53604a5a1e34595985ec81e70efe67b9):\r\n\r\n```rust\r\nfn main() {\r\n    let _f:f32 = 0xAAf32;\r\n}\r\n```\r\nThey will get the following output:\r\n\r\n```\r\nCompiling playground v0.0.1 (/playground)\r\nerror[[E0308]](https://doc.rust-lang.org/stable/error-index.html#E0308): mismatched types\r\n --> src/main.rs:2:18\r\n  |\r\n2 |     let _f:f32 = 0xAAf32;\r\n  |            ---   ^^^^^^^ expected `f32`, found integer\r\n  |            |\r\n  |            expected due to this\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\nExecuting `rustc --explain E0308` will give you:\r\n\r\n```\r\nExpected type did not match the received type.\r\n\r\nErroneous code examples:\r\n\r\nfn plus_one(x: i32) -> i32 {\r\n    x + 1\r\n}\r\n\r\nplus_one(\"Not a number\");\r\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\r\n\r\nif \"Not a bool\" {\r\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\r\n}\r\n\r\nlet x: f32 = \"Not a float\";\r\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\r\n//     |\r\n//     expected due to this\r\n\r\nThis error occurs when an expression was used in a place where the compiler\r\nexpected an expression of a different type. It can occur in several cases, the\r\nmost common being when calling a function and passing an argument which has a\r\ndifferent type than the matching type in the function declaration.\r\n```\r\n\r\nThis is different from the much simpler \"binary float literal is not supported\" message one gets, when trying to use a literal like `0b11f32`.\r\n\r\nThe problem is finding a \"f32\" at the end of a hexadecimal literal will be interpreted as part of the number, not a reference to float. If the user misses that, they will not get any help from either of the messages above.\r\n\r\nPossible solution: the output of `rustc --explain E0308` could include the following explanation at the end:\r\n```\r\nAlso, Rust does not support hexadecimal float literals and cannot differentiate\r\nthem from hexadecimal integer literals; for example, `0xAAf32` is understood as\r\n`700210 as i32`. Float literals should be written as `170_f32` or `0xAA as f32`.\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104706/reactions", "total_count": 3, "+1": 0, "-1": 0, "laugh": 2, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104706/timeline", "performed_via_github_app": null, "state_reason": "completed"}