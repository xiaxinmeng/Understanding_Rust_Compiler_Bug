{"url": "https://api.github.com/repos/rust-lang/rust/issues/55850", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55850/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55850/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55850/events", "html_url": "https://github.com/rust-lang/rust/issues/55850", "id": 379433988, "node_id": "MDU6SXNzdWUzNzk0MzM5ODg=", "number": 55850, "title": "ICE with generators and NLL", "user": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 679846574, "node_id": "MDU6TGFiZWw2Nzk4NDY1NzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-generators", "name": "A-generators", "color": "f7e101", "default": false, "description": "Area: Generators"}, {"id": 867466592, "node_id": "MDU6TGFiZWw4Njc0NjY1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-sound", "name": "NLL-sound", "color": "f799ea", "default": false, "description": "Working towards the \"invalid code does not compile\" goal"}], "state": "closed", "locked": false, "assignee": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-11-10T16:02:56Z", "updated_at": "2018-12-07T20:04:22Z", "closed_at": "2018-12-07T20:04:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following ICE's on nightly 2018:\r\n\r\n```Rust\r\n#![feature(generators, generator_trait)]\r\n\r\nuse std::ops::Generator;\r\nuse std::ops::GeneratorState::Yielded;\r\n\r\npub struct GenIter<G>(G);\r\n\r\nimpl <G> Iterator for GenIter<G>\r\nwhere\r\n    G: Generator,\r\n{\r\n    type Item = G::Yield;\r\n    \r\n    fn next(&mut self) -> Option<Self::Item> {\r\n        unsafe {\r\n            match self.0.resume() {\r\n                Yielded(y) => Some(y),\r\n                _ => None\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfn bug<'a>() -> impl Iterator<Item = &'a str> {\r\n    GenIter(move || {\r\n        let mut s = String::new();\r\n        yield &s[..]\r\n    })\r\n}\r\n\r\nfn main() {\r\n    bug();\r\n}\r\n```\r\n\r\nThis is an NLL issue, on 2015 nightly *without* NLL turned on, the compiler complains that `s` does not live long enough. *with* NLL turned on in 2015, I get the same ICE.\r\n\r\n<details>\r\n<summary>Backtrace:</summary>\r\n\r\n```\r\nerror: internal compiler error: librustc_mir/borrow_check/nll/region_infer/error_reporting/region_name.rs:181: can't make a name for free region '_#2r\r\n  --> src/main.rs:25:13\r\n   |\r\n25 |       GenIter(move || {\r\n   |  _____________^\r\n26 | |         let mut s = String::new();\r\n27 | |         yield &s[..]\r\n28 | |     })\r\n   | |_____^\r\n\r\nthread 'main' panicked at 'Box<Any>', librustc_errors/lib.rs:538:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/sys_common/backtrace.rs:59\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:480\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::span_bug\r\n   8: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::util::bug::opt_span_bug_fmt\r\n  13: rustc::util::bug::span_bug_fmt\r\n  14: rustc_mir::borrow_check::nll::region_infer::error_reporting::region_name::<impl rustc_mir::borrow_check::nll::region_infer::RegionInferenceContext<'tcx>>::give_region_a_name\r\n  15: rustc_mir::borrow_check::nll::region_infer::error_reporting::<impl rustc_mir::borrow_check::nll::region_infer::RegionInferenceContext<'tcx>>::free_region_constraint_info\r\n  16: rustc_mir::borrow_check::nll::explain_borrow::<impl rustc_mir::borrow_check::MirBorrowckCtxt<'cx, 'gcx, 'tcx>>::explain_why_borrow_contains_point\r\n  17: rustc_mir::borrow_check::error_reporting::<impl rustc_mir::borrow_check::MirBorrowckCtxt<'cx, 'gcx, 'tcx>>::report_borrowed_value_does_not_live_long_enough\r\n  18: rustc_mir::borrow_check::path_utils::each_borrow_involving_path\r\n  19: rustc_mir::borrow_check::MirBorrowckCtxt::access_place\r\n  20: <rustc_mir::borrow_check::MirBorrowckCtxt<'cx, 'gcx, 'tcx> as rustc_mir::dataflow::DataflowResultsConsumer<'cx, 'tcx>>::visit_terminator_entry\r\n  21: rustc_mir::borrow_check::do_mir_borrowck\r\n  22: rustc::ty::context::tls::with_related_context\r\n  23: rustc::infer::InferCtxtBuilder::enter\r\n  24: rustc_mir::borrow_check::mir_borrowck\r\n  25: rustc::ty::query::__query_compute::mir_borrowck\r\n  26: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::mir_borrowck<'tcx>>::compute\r\n  27: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  28: rustc::ty::context::tls::with_related_context\r\n  29: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  30: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  31: rustc::ty::query::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::mir_borrowck\r\n  32: rustc_mir::borrow_check::nll::type_check::TypeChecker::check_stmt\r\n  33: rustc_mir::borrow_check::nll::type_check::TypeChecker::typeck_mir\r\n  34: rustc_mir::borrow_check::nll::type_check::type_check\r\n  35: rustc_mir::borrow_check::do_mir_borrowck\r\n  36: rustc::ty::context::tls::with_related_context\r\n  37: rustc::infer::InferCtxtBuilder::enter\r\n  38: rustc_mir::borrow_check::mir_borrowck\r\n  39: rustc::ty::query::__query_compute::mir_borrowck\r\n  40: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::mir_borrowck<'tcx>>::compute\r\n  41: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  42: rustc::ty::context::tls::with_related_context\r\n  43: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  44: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  45: rustc::ty::query::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::mir_borrowck\r\n  46: rustc::ty::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::par_body_owners\r\n  47: rustc::util::common::time\r\n  48: rustc::ty::context::tls::enter_context\r\n  49: <std::thread::local::LocalKey<T>>::with\r\n  50: rustc::ty::context::TyCtxt::create_and_enter\r\n  51: rustc_driver::driver::compile_input\r\n  52: rustc_driver::run_compiler_with_pool\r\n  53: <scoped_tls::ScopedKey<T>>::set\r\n  54: rustc_driver::run_compiler\r\n  55: syntax::with_globals\r\n  56: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  57: rustc_driver::run\r\n  58: rustc_driver::main\r\n  59: std::rt::lang_start::{{closure}}\r\n  60: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  61: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  62: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:398\r\n             at libstd/rt.rs:58\r\n  63: main\r\n  64: __libc_start_main\r\n  65: <unknown>\r\nquery stack during panic:\r\n#0 [mir_borrowck] processing `bug::{{closure}}`\r\n#1 [mir_borrowck] processing `bug`\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.32.0-nightly (36a50c29f 2018-11-09) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C opt-level=3 -C codegen-units=1 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n</details>", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55850/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55850/timeline", "performed_via_github_app": null, "state_reason": "completed"}