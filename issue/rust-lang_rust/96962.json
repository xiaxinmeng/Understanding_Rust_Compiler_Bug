{"url": "https://api.github.com/repos/rust-lang/rust/issues/96962", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96962/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96962/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96962/events", "html_url": "https://github.com/rust-lang/rust/issues/96962", "id": 1233457355, "node_id": "I_kwDOAAsO6M5JhRDL", "number": 96962, "title": "Async GraphQL DataLoader Causes Compiler Panic During CodeGen", "user": {"login": "cadillion", "id": 4454203, "node_id": "MDQ6VXNlcjQ0NTQyMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4454203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cadillion", "html_url": "https://github.com/cadillion", "followers_url": "https://api.github.com/users/cadillion/followers", "following_url": "https://api.github.com/users/cadillion/following{/other_user}", "gists_url": "https://api.github.com/users/cadillion/gists{/gist_id}", "starred_url": "https://api.github.com/users/cadillion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cadillion/subscriptions", "organizations_url": "https://api.github.com/users/cadillion/orgs", "repos_url": "https://api.github.com/users/cadillion/repos", "events_url": "https://api.github.com/users/cadillion/events{/privacy}", "received_events_url": "https://api.github.com/users/cadillion/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-05-12T05:19:05Z", "updated_at": "2023-02-26T12:18:11Z", "closed_at": "2023-02-26T12:18:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\nHunted down and commented out the offending code and got the app to recompile. After uncommenting again it then worked fine. Can't reproduce since.\r\n```Rust\r\nuse std::collections::HashMap;\r\nuse std::sync::Arc;\r\n\r\nuse actix_web::{guard, rt::spawn, web, App, HttpRequest, HttpResponse, HttpServer};\r\nuse anyhow::Result;\r\nuse async_graphql::dataloader::{DataLoader, Loader};\r\nuse async_graphql::http::{playground_source, GraphQLPlaygroundConfig};\r\nuse async_graphql::{\r\n    ComplexObject, Context, EmptyMutation, EmptySubscription, Error, InputValueError,\r\n    InputValueResult, MergedObject, Object, Scalar, ScalarType, Schema, SimpleObject, Value,\r\n};\r\nuse async_graphql_actix_web::{GraphQLRequest, GraphQLResponse};\r\nuse chrono::{DateTime, Utc};\r\nuse paste::paste;\r\nuse lazy_static::lazy_static;\r\nuse sqlx::pool::Pool;\r\nuse sqlx::postgres::{PgPoolOptions, Postgres as Pg};\r\nuse uuid::Uuid;\r\n\r\npub type AppSchema = Schema<Query, EmptyMutation, EmptySubscription>;\r\n\r\ntrait Optional<T> {\r\n    fn unwrap_or(self, default: T) -> T;\r\n}\r\n\r\n// Convenience trait to enable arbitrary swapping of Option<Uuid> and Uuid\r\nimpl Optional<Uuid> for Uuid {\r\n    fn unwrap_or(self, _: Uuid) -> Uuid {\r\n        self\r\n    }\r\n}\r\n\r\nlazy_static! {\r\n    static ref DATABASE_URL: String =\r\n        std::env::var(\"DATABASE_URL\").expect(\"Can't read Postgres database address\");\r\n}\r\n\r\npub struct Postgres {\r\n    pub pool: Pool<Pg>,\r\n}\r\n\r\nimpl Postgres {\r\n    pub async fn new() -> Result<Self> {\r\n        let pool = PgPoolOptions::new()\r\n            .max_connections(5)\r\n            .connect(DATABASE_URL.as_str())\r\n            .await?;\r\n\r\n        Ok(Self { pool })\r\n    }\r\n}\r\n\r\npub struct Repository {\r\n    pub pg_port: Postgres,\r\n}\r\n\r\nimpl Repository {\r\n    pub async fn new() -> anyhow::Result<Repository, Error> {\r\n        let pg_port = Self::pg_connect().await?;\r\n\r\n        Ok(Repository { pg_port })\r\n    }\r\n\r\n    async fn pg_connect() -> anyhow::Result<Postgres, Error> {\r\n        let connection = Postgres::new().await?;\r\n        Ok(connection)\r\n    }\r\n}\r\n\r\n#[derive(sqlx::FromRow, SimpleObject, Debug, Clone)]\r\n#[graphql(complex)]\r\npub struct Suitability {\r\n    pub uuid: Uuid,\r\n    pub user_id: Uuid,\r\n    pub answer_id: Uuid,\r\n    created_at: DateTime<Utc>,\r\n    updated_at: DateTime<Utc>,\r\n}\r\n\r\n#[derive(sqlx::FromRow, SimpleObject, Debug, Clone)]\r\n#[graphql(complex)]\r\npub struct SuitabilityAnswer {\r\n    pub uuid: Uuid,\r\n    pub question_id: Uuid,\r\n    answer_order: i32,\r\n    answer: String,\r\n    pub is_valid: bool,\r\n    created_at: DateTime<Utc>,\r\n    updated_at: DateTime<Utc>,\r\n}\r\n\r\n#[derive(sqlx::FromRow, SimpleObject, Debug, Clone)]\r\n#[graphql(complex)]\r\npub struct SuitabilityQuestion {\r\n    pub uuid: Uuid,\r\n    question_order: i32,\r\n    question: String,\r\n    tooltip: Option<String>,\r\n    pub is_valid: bool,\r\n    created_at: DateTime<Utc>,\r\n    updated_at: DateTime<Utc>,\r\n}\r\n\r\n#[derive(sqlx::FromRow, Clone, Debug, SimpleObject)]\r\n#[graphql(complex)]\r\npub struct User {\r\n    pub uuid: Uuid,\r\n    username: String,\r\n    email: CiText,\r\n    password: String,\r\n    created_at: DateTime<Utc>,\r\n    updated_at: DateTime<Utc>,\r\n}\r\n\r\n#[derive(sqlx::Type, Clone, Debug)]\r\n#[sqlx(type_name = \"citext\")]\r\npub struct CiText(String);\r\n\r\n#[Scalar]\r\nimpl ScalarType for CiText {\r\n    fn parse(value: Value) -> InputValueResult<Self> {\r\n        match value {\r\n            Value::String(s) => Ok(CiText(s)),\r\n            _ => Err(InputValueError::expected_type(value)),\r\n        }\r\n    }\r\n\r\n    fn is_valid(value: &Value) -> bool {\r\n        matches!(value, Value::String(_))\r\n    }\r\n\r\n    fn to_value(&self) -> Value {\r\n        let CiText(ref s) = self;\r\n        Value::String(s.clone())\r\n    }\r\n}\r\n\r\nmacro_rules! impl_data_loaders {\r\n    ($($schema:ty[$($entity:ty[$($search:ident),*][$($child:ty[$fkey:ident, $pkey:ident, $fun:ident]),*]),+]),+) => {\r\n        paste! {\r\n            impl Postgres {\r\n                $($(\r\n                    #[doc = \"Returns a list of all rows in the \" [< $entity:snake:lower:plural >] \" table.\"]\r\n                    pub async fn [< $entity:snake:lower:plural >](&self, limit: Option<usize>, offset: Option<usize>, order_by: Option<Vec<String>> ) -> Result<Vec<$entity>> {\r\n                        let list = sqlx::query_as::<_, $entity>(\r\n                                &format!(\r\n                                    concat!(\r\n                                        \"SELECT * FROM \",\r\n                                        stringify!([< $schema:snake:lower >].[< $entity:snake:lower:plural >]),\r\n                                        \" ORDER BY {} LIMIT {} OFFSET {}\"\r\n                                    ),\r\n                                    order_by\r\n                                        .unwrap_or(vec![\"created_at\".to_string()])\r\n                                        .iter()\r\n                                        .fold(String::new(), |acc, string| match acc.is_empty() {\r\n                                            true => format!(\"\\\"{}\\\" ASC\", string),\r\n                                            _ => format!(\"{}, \\\"{}\\\" ASC\", acc, string),\r\n                                        }),\r\n                                    match limit {\r\n                                        Some(i) => i.to_string(),\r\n                                        None => \"NULL\".to_string(),\r\n                                    },\r\n                                    offset.unwrap_or(0),\r\n                                )\r\n                            )\r\n                            .fetch_all(&self.pool)\r\n                            .await?;\r\n\r\n                        Ok(list)\r\n                    }\r\n\r\n                    $(\r\n                        #[doc = \"Returns a list of all rows in the \" [< $entity:snake:lower:plural >] \" table for a set of IDs\"]\r\n                        pub async fn [< $entity:snake:lower:plural _by_ $search:snake:lower:plural >](&self, ids: Vec<String>) -> Result<Vec<$entity>> {\r\n                            let sql = format!(\r\n                                \"SELECT * FROM {} WHERE {} IN ('{}')\",\r\n                                stringify!([< $schema:snake:lower >].[< $entity:snake:lower:plural >]),\r\n                                stringify!($search),\r\n                                ids.join(\"','\"),\r\n                            );\r\n\r\n                            let list = sqlx::query_as::<_, $entity>(&sql)\r\n                                .fetch_all(&self.pool)\r\n                                .await?;\r\n\r\n                            Ok(list)\r\n                        }\r\n                    )*\r\n                )+)+\r\n            }\r\n\r\n            $($(\r\n                #[derive(Default)]\r\n                pub struct [< $entity:camel Query >];\r\n\r\n                #[Object]\r\n                impl [< $entity:camel Query >] {\r\n                    async fn [< $entity:snake:lower:plural >](&self, ctx: &Context<'_>, limit: Option<usize>, offset: Option<usize>, order_by: Option<Vec<String>>) -> Result<Vec<$entity>, Error> {\r\n                        let config = ctx.data::<Arc<Repository>>()?;\r\n                        let v = config.pg_port.[< $entity:snake:lower:plural >](limit, offset, order_by).await?;\r\n                        Ok(v)\r\n                    }\r\n                }\r\n\r\n                #[ComplexObject]\r\n                impl $entity {\r\n                    $(\r\n                        async fn [< $fun >](&self, ctx: &Context<'_>) -> async_graphql::Result<Vec<$child>> {\r\n                            let data_loader = ctx\r\n                                .data::<DataLoader<[< $entity:camel $child:camel $fkey:camel $pkey:camel Loader >]>>()?;\r\n\r\n                            let _id = self\r\n                                .$fkey\r\n                                .unwrap_or(Uuid::nil())\r\n                                .to_string()\r\n                                .parse::<Uuid>()?;\r\n\r\n                            let v = data_loader.load_one(_id).await?;\r\n\r\n                            match v {\r\n                                Some(vec) => Ok(vec),\r\n                                None => Ok(Vec::<$child>::new()),\r\n                            }\r\n                        }\r\n                    )*\r\n                }\r\n\r\n                $(\r\n                    pub struct [< $entity:camel $child:camel $fkey:camel $pkey:camel Loader >] {\r\n                        pub connection: Arc<Repository>,\r\n                    }\r\n\r\n                    #[async_trait::async_trait]\r\n                    impl Loader<Uuid> for [< $entity:camel $child:camel $fkey:camel $pkey:camel Loader >] {\r\n                        type Value = Vec<$child>;\r\n                        type Error = Error;\r\n\r\n                        async fn load(\r\n                            &self,\r\n                            keys: &[Uuid],\r\n                        ) -> Result<HashMap<Uuid, Self::Value>, Self::Error> {\r\n                            let keys_as_strings: Vec<String> = keys\r\n                                .iter()\r\n                                .map(|k| k.to_string())\r\n                                .collect();\r\n\r\n                            let vec = self\r\n                                .connection\r\n                                .pg_port\r\n                                .[< $child:snake:lower:plural _by_ $pkey s >](keys_as_strings)\r\n                                .await?;\r\n\r\n                            let mut m = HashMap::<Uuid, Vec<$child>>::new();\r\n\r\n                            for v in vec {\r\n                                let option_id = v\r\n                                    .$pkey\r\n                                    .unwrap_or(Uuid::nil());\r\n\r\n                                m.entry(option_id)\r\n                                    .or_insert_with(Vec::new)\r\n                                    .push(v);\r\n                            }\r\n\r\n                            Ok(m)\r\n                        }\r\n                    }\r\n                )*\r\n            )+)+\r\n\r\n            #[derive(MergedObject, Default)]\r\n            pub struct Query(\r\n                $($(\r\n                    [< $entity:camel Query >],\r\n                )+)+\r\n            );\r\n\r\n            // Spawn processes to load data concurrently from reference-counted shared connection\r\n            pub fn create_schema_with_context(connection: Repository) -> AppSchema {\r\n                let pool = Arc::new(connection);\r\n\r\n                $($($(\r\n                    let [< $entity:snake:lower _ $child:snake:lower _ $fkey:snake:lower _ $pkey:snake:lower _loader >] = DataLoader::new(\r\n                        [< $entity:camel $child:camel $fkey:camel $pkey:camel Loader >] {\r\n                            connection: Arc::clone(&pool),\r\n                        },\r\n                        spawn,\r\n                    )\r\n                    .max_batch_size(250);\r\n                )*)+)+\r\n\r\n                Schema::build(Query::default(), EmptyMutation, EmptySubscription)\r\n                    // .limit_depth(3).limit_complexity(15) // limits are commented out, because otherwise introspection query won't work\r\n                    .data(pool)\r\n                    $($($(.data([< $entity:snake:lower _ $child:snake:lower _ $fkey:snake:lower _ $pkey:snake:lower _loader >]))*)+)+\r\n                    .finish()\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nimpl_data_loaders! {\r\n    Public[\r\n        Suitability[uuid, user_id, answer_id][\r\n            SuitabilityAnswer[answer_id, uuid, suitability_answer],\r\n            User[user_id, uuid, user]\r\n        ],\r\n        SuitabilityAnswer[uuid, question_id, is_valid][\r\n            Suitability[uuid, answer_id, suitability],\r\n            //*******************************************\r\n            // The next line is the line it choked on\r\n            //*******************************************\r\n            SuitabilityQuestion[question_id, uuid, suitability_question]\r\n        ],\r\n        SuitabilityQuestion[uuid, is_valid][\r\n            SuitabilityAnswer[uuid, question_id, suitability_answers]\r\n        ]\r\n    ],\r\n    Private[\r\n        User[uuid, email, username][\r\n            Suitability[uuid, user_id, suitability]\r\n        ]\r\n    ]\r\n}\r\n\r\npub struct Config {\r\n    pub addr: std::net::SocketAddr,\r\n    pub state_data: web::Data<AppState>,\r\n}\r\n\r\npub struct AppState {\r\n    pub schema: AppSchema,\r\n}\r\n\r\nimpl Config {\r\n    pub async fn new() -> anyhow::Result<Config> {\r\n        let port: u16 = std::env::var(\"PORT\")\r\n            .ok()\r\n            .and_then(|p| p.parse().ok())\r\n            .unwrap_or(3003);\r\n        let addr = std::net::SocketAddr::from(([0, 0, 0, 0], port));\r\n\r\n        // Create app state data to be available in all web transactions\r\n        let state = create_app_state().await?;\r\n        let state_data = web::Data::new(state);\r\n\r\n        let config = Config { addr, state_data };\r\n        Ok(config)\r\n    }\r\n}\r\n\r\npub async fn create_app_state() -> anyhow::Result<AppState> {\r\n    let app_state = AppState {\r\n        schema: create_schema_with_context(\r\n            Repository::new()\r\n                .await\r\n                .expect(\"Could not connect to postgres\"),\r\n        ),\r\n    };\r\n    Ok(app_state)\r\n}\r\n\r\nasync fn index(req: GraphQLRequest, state: web::Data<AppState>) -> GraphQLResponse {\r\n    let response = state.schema.execute(req.into_inner()).await;\r\n\r\n    response.into()\r\n}\r\n\r\nasync fn index_playground() -> HttpResponse {\r\n    HttpResponse::Ok()\r\n        .content_type(\"text/html; charset=utf-8\")\r\n        .body(playground_source(\r\n            GraphQLPlaygroundConfig::new(\"/\").subscription_endpoint(\"/\"),\r\n        ))\r\n}\r\n\r\npub fn configure_service(cfg: &mut web::ServiceConfig) {\r\n    cfg.service(\r\n        web::resource(\"/\")\r\n            .route(web::post().to(index))\r\n            .route(web::get().to(index_playground)),\r\n    );\r\n}\r\n\r\n#[actix_web::main]\r\nasync fn main() -> anyhow::Result<()> {\r\n    // used only in local environment. stage + prod environments get all their secrets via process env vars\r\n    dotenv::from_filename(\".env.local\").ok();\r\n\r\n    #[cfg(debug)]\r\n    env_logger::init();\r\n\r\n    let Config { addr, state_data } = Config::new().await?;\r\n\r\n    HttpServer::new(move || {\r\n        App::new()\r\n            .configure(configure_service)\r\n            .app_data(state_data.clone())\r\n    })\r\n    .bind(addr)?\r\n    .run()\r\n    .await?;\r\n\r\n    Ok(())\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.58.1 (db9d1b20b 2022-01-20)\r\nbinary: rustc\r\ncommit-hash: db9d1b20bba1968c1ec1fc49616d4742c1725b4b\r\ncommit-date: 2022-01-20\r\nhost: aarch64-unknown-linux-gnu\r\nrelease: 1.58.1\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n  thread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/compiler/rustc_hir/src/definitions.rs:452:14\r\n  \r\n  error: internal compiler error: unexpected panic\r\n  \r\n  note: the compiler unexpectedly panicked. this is a bug.\r\n  \r\n  note: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.58.1 (db9d1b20b 2022-01-20) running on aarch64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [evaluate_obligation] evaluating trait selection obligation `for<'r, 's, 't0> {core::future::ResumeTy, &'r async_graphql::dataloader::DataLoader<adapters::graphql_queries::SuitabilityAnswerSuitabilityQuestionQuestionIdUuidLoader>, uuid::Uuid, &'s uuid::Uuid, core::iter::sources::once::Once<uuid::Uuid>, impl core::future::future::Future<Output = core::result::Result<std::collections::hash::map::HashMap<uuid::Uuid, <adapters::graphql_queries::SuitabilityAnswerSuitabilityQuestionQuestionIdUuidLoader as async_graphql::dataloader::Loader<uuid::Uuid>>::Value>, <adapters::graphql_queries::SuitabilityAnswerSuitabilityQuestionQuestionIdUuidLoader as async_graphql::dataloader::Loader<uuid::Uuid>>::Error>>, ()}: core::marker::Send`\r\n#1 [codegen_fulfill_obligation] checking if `core::ops::unsize::CoerceUnsized` fulfills its obligations\r\n#2 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\n#3 [exported_symbols] exported_symbols\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0:     0xffff7d87ded4 - std::backtrace_rs::backtrace::libunwind::trace::h93b3238ee24363ff\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0xffff7d87ded4 - std::backtrace_rs::backtrace::trace_unsynchronized::hd0b91c595765251c\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0xffff7d87ded4 - std::sys_common::backtrace::_print_fmt::h30044c15f37f55e5\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0xffff7d87ded4 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h3e879cfd83c3e738\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0xffff7d8d4e30 - core::fmt::write::h0d0a553933f27920\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/fmt/mod.rs:1149:17\r\n   5:     0xffff7d86efe8 - std::io::Write::write_fmt::h6441aebd0d25cafa\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/io/mod.rs:1697:15\r\n   6:     0xffff7d880b88 - std::sys_common::backtrace::_print::h59c3f7ca96dcfa56\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0xffff7d880b88 - std::sys_common::backtrace::print::he3a1a4c8e3f2b5c5\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0xffff7d880b88 - std::panicking::default_hook::{{closure}}::h0e439cefcb09f19c\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:211:50\r\n   9:     0xffff7d880744 - std::panicking::default_hook::h0d25e18a244e112d\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:228:9\r\n  10:     0xffff7e48b738 - rustc_driver[890932e65b1c519a]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n  11:     0xffff310f1e7c - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::ha028e4f2893b14cf\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/alloc/src/boxed.rs:1708:9\r\n  12:     0xffff310f2ebc - proc_macro::bridge::client::<impl proc_macro::bridge::Bridge>::enter::{{closure}}::{{closure}}::h25167e759e3e5643\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/proc_macro/src/bridge/client.rs:320:21\r\n  13:     0xffff7d88138c - std::panicking::rust_panic_with_hook::he2d8fa5b78d61952\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:610:17\r\n  14:     0xffff7d880e5c - std::panicking::begin_panic_handler::{{closure}}::h17be8acecdbc2a5f\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:500:13\r\n  15:     0xffff7d87e38c - std::sys_common::backtrace::__rust_end_short_backtrace::h8cecb3628cc0cdc8\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:139:18\r\n  16:     0xffff7d880df0 - rust_begin_unwind\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:498:5\r\n  17:     0xffff7d84c808 - core::panicking::panic_fmt::hffea458b8dc29080\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/panicking.rs:107:14\r\n  18:     0xffff7d84c78c - core::panicking::panic::h976e19ce9e8078a5\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/panicking.rs:48:5\r\n  19:     0xffff8292f358 - <rustc_middle[71ee4195a1895a6]::ty::context::TyCtxt>::def_path_hash_to_def_id\r\n  20:     0xffff82a007ac - <rustc_query_system[97bb7d7acedca530]::dep_graph::dep_node::DepNode<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind> as rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepNodeExt>::extract_def_id\r\n  21:     0xffff81d6a8b4 - rustc_query_impl[970b09f12593889e]::query_callbacks::type_of::force_from_dep_node\r\n  22:     0xffff82918ec4 - <rustc_middle[71ee4195a1895a6]::ty::context::TyCtxt as rustc_query_system[97bb7d7acedca530]::dep_graph::DepContext>::try_force_from_dep_node\r\n  23:     0xffff81db4910 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  24:     0xffff81db48e0 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  25:     0xffff81db48e0 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  26:     0xffff81db48e0 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  27:     0xffff81db48e0 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  28:     0xffff81db48e0 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  29:     0xffff81db48e0 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  30:     0xffff81db48e0 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  31:     0xffff81db48e0 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  32:     0xffff81db48e0 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  33:     0xffff81db48e0 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  34:     0xffff81db48e0 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  35:     0xffff81db48e0 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  36:     0xffff81db48e0 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  37:     0xffff81db48e0 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  38:     0xffff81db48e0 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  39:     0xffff81db48e0 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  40:     0xffff81db48e0 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  41:     0xffff81db48e0 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  42:     0xffff81db48e0 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  43:     0xffff81d830ec - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  44:     0xffff81b75cd0 - rustc_query_system[97bb7d7acedca530]::query::plumbing::try_load_from_disk_and_cache_in_memory::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt, rustc_middle[71ee4195a1895a6]::infer::canonical::Canonical<rustc_middle[71ee4195a1895a6]::ty::ParamEnvAnd<rustc_middle[71ee4195a1895a6]::ty::Predicate>>, core[6386174f90089796]::result::Result<rustc_middle[71ee4195a1895a6]::traits::select::EvaluationResult, rustc_middle[71ee4195a1895a6]::traits::select::OverflowError>>\r\n  45:     0xffff81ba5d50 - rustc_query_system[97bb7d7acedca530]::query::plumbing::get_query::<rustc_query_impl[970b09f12593889e]::queries::evaluate_obligation, rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  46:     0xffff81caf404 - <rustc_query_impl[970b09f12593889e]::Queries as rustc_middle[71ee4195a1895a6]::ty::query::QueryEngine>::evaluate_obligation\r\n  47:     0xffff82643b40 - <rustc_infer[83afd82b4c0b1e7f]::infer::InferCtxt as rustc_trait_selection[6dbd9f408411fdb6]::traits::query::evaluate_obligation::InferCtxtExt>::evaluate_obligation\r\n  48:     0xffff82643c80 - <rustc_infer[83afd82b4c0b1e7f]::infer::InferCtxt as rustc_trait_selection[6dbd9f408411fdb6]::traits::query::evaluate_obligation::InferCtxtExt>::evaluate_obligation_no_overflow\r\n  49:     0xffff826722c4 - <rustc_trait_selection[6dbd9f408411fdb6]::traits::fulfill::FulfillProcessor>::process_trait_obligation\r\n  50:     0xffff8266b408 - <rustc_trait_selection[6dbd9f408411fdb6]::traits::fulfill::FulfillProcessor>::progress_changed_obligations\r\n  51:     0xffff826d4d20 - <rustc_data_structures[b6f3ed531bba89d7]::obligation_forest::ObligationForest<rustc_trait_selection[6dbd9f408411fdb6]::traits::fulfill::PendingPredicateObligation>>::process_obligations::<rustc_trait_selection[6dbd9f408411fdb6]::traits::fulfill::FulfillProcessor, rustc_data_structures[b6f3ed531bba89d7]::obligation_forest::Outcome<rustc_trait_selection[6dbd9f408411fdb6]::traits::fulfill::PendingPredicateObligation, rustc_infer[83afd82b4c0b1e7f]::traits::FulfillmentErrorCode>>\r\n  52:     0xffff8266a360 - <rustc_trait_selection[6dbd9f408411fdb6]::traits::fulfill::FulfillmentContext>::select\r\n  53:     0xffff8266a820 - <rustc_trait_selection[6dbd9f408411fdb6]::traits::fulfill::FulfillmentContext as rustc_infer[83afd82b4c0b1e7f]::traits::engine::TraitEngine>::select_where_possible\r\n  54:     0xffff8266a56c - <rustc_trait_selection[6dbd9f408411fdb6]::traits::fulfill::FulfillmentContext as rustc_infer[83afd82b4c0b1e7f]::traits::engine::TraitEngine>::select_all_or_error\r\n  55:     0xffff827037f8 - rustc_trait_selection[6dbd9f408411fdb6]::traits::codegen::drain_fulfillment_cx_or_panic::<rustc_middle[71ee4195a1895a6]::traits::ImplSource<()>>\r\n  56:     0xffff82617edc - <rustc_infer[83afd82b4c0b1e7f]::infer::InferCtxtBuilder>::enter::<core[6386174f90089796]::result::Result<rustc_middle[71ee4195a1895a6]::traits::ImplSource<()>, rustc_errors[30a485659b0a31e8]::ErrorReported>, rustc_trait_selection[6dbd9f408411fdb6]::traits::codegen::codegen_fulfill_obligation::{closure#0}>\r\n  57:     0xffff82703788 - rustc_trait_selection[6dbd9f408411fdb6]::traits::codegen::codegen_fulfill_obligation\r\n  58:     0xffff81de14e8 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle[71ee4195a1895a6]::ty::context::TyCtxt, (rustc_middle[71ee4195a1895a6]::ty::ParamEnv, rustc_middle[71ee4195a1895a6]::ty::sty::Binder<rustc_middle[71ee4195a1895a6]::ty::sty::TraitRef>), core[6386174f90089796]::result::Result<rustc_middle[71ee4195a1895a6]::traits::ImplSource<()>, rustc_errors[30a485659b0a31e8]::ErrorReported>>\r\n  59:     0xffff81c85898 - rustc_data_structures[b6f3ed531bba89d7]::stack::ensure_sufficient_stack::<(core[6386174f90089796]::result::Result<rustc_middle[71ee4195a1895a6]::traits::ImplSource<()>, rustc_errors[30a485659b0a31e8]::ErrorReported>, rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepNodeIndex), rustc_query_system[97bb7d7acedca530]::query::plumbing::execute_job<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt, (rustc_middle[71ee4195a1895a6]::ty::ParamEnv, rustc_middle[71ee4195a1895a6]::ty::sty::Binder<rustc_middle[71ee4195a1895a6]::ty::sty::TraitRef>), core[6386174f90089796]::result::Result<rustc_middle[71ee4195a1895a6]::traits::ImplSource<()>, rustc_errors[30a485659b0a31e8]::ErrorReported>>::{closure#3}>\r\n  60:     0xffff81bbd518 - rustc_query_system[97bb7d7acedca530]::query::plumbing::get_query::<rustc_query_impl[970b09f12593889e]::queries::codegen_fulfill_obligation, rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n  61:     0xffff81caec54 - <rustc_query_impl[970b09f12593889e]::Queries as rustc_middle[71ee4195a1895a6]::ty::query::QueryEngine>::codegen_fulfill_obligation\r\n  62:     0xffff80d5221c - rustc_monomorphize[a7b190e3b8fd0f39]::custom_coerce_unsize_info\r\n  63:     0xffff80d675c0 - <rustc_monomorphize[a7b190e3b8fd0f39]::collector::MirNeighborCollector as rustc_middle[71ee4195a1895a6]::mir::visit::Visitor>::visit_rvalue\r\n  64:     0xffff80d6a7a8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_neighbours\r\n  65:     0xffff80d65900 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  66:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  67:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  68:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  69:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  70:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  71:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  72:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  73:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  74:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  75:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  76:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  77:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  78:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  79:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  80:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  81:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  82:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  83:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  84:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  85:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  86:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  87:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  88:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  89:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  90:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  91:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  92:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  93:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  94:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  95:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  96:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  97:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  98:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n  99:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 100:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 101:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 102:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 103:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 104:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 105:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 106:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 107:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 108:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 109:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 110:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 111:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 112:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 113:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 114:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 115:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 116:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 117:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 118:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 119:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 120:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 121:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 122:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 123:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 124:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 125:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 126:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 127:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 128:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 129:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 130:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 131:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 132:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 133:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 134:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 135:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 136:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 137:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 138:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 139:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 140:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 141:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 142:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 143:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 144:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 145:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 146:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 147:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 148:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 149:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 150:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 151:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 152:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 153:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 154:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 155:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 156:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 157:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 158:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 159:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 160:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 161:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 162:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 163:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 164:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 165:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 166:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 167:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 168:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 169:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 170:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 171:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 172:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 173:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 174:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 175:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 176:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 177:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 178:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 179:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 180:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 181:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 182:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 183:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 184:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 185:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 186:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 187:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 188:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 189:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 190:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 191:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 192:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 193:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 194:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 195:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 196:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 197:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 198:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 199:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 200:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 201:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 202:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 203:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 204:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 205:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 206:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 207:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 208:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 209:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 210:     0xffff80d65ad8 - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_items_rec\r\n 211:     0xffff80d4d4d4 - <rustc_session[c622b9604f4a47a1]::session::Session>::time::<(), rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_crate_mono_items::{closure#1}>\r\n 212:     0xffff80d646fc - rustc_monomorphize[a7b190e3b8fd0f39]::collector::collect_crate_mono_items\r\n 213:     0xffff80d62240 - rustc_monomorphize[a7b190e3b8fd0f39]::partitioning::collect_and_partition_mono_items\r\n 214:     0xffff81defc18 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle[71ee4195a1895a6]::ty::context::TyCtxt, (), (&std[b1afcd615c2059b7]::collections::hash::set::HashSet<rustc_span[7d79f7a404643ea]::def_id::DefId, core[6386174f90089796]::hash::BuildHasherDefault<rustc_hash[ad37f17d1c62eeb1]::FxHasher>>, &[rustc_middle[71ee4195a1895a6]::mir::mono::CodegenUnit])>\r\n 215:     0xffff81c94514 - rustc_data_structures[b6f3ed531bba89d7]::stack::ensure_sufficient_stack::<((&std[b1afcd615c2059b7]::collections::hash::set::HashSet<rustc_span[7d79f7a404643ea]::def_id::DefId, core[6386174f90089796]::hash::BuildHasherDefault<rustc_hash[ad37f17d1c62eeb1]::FxHasher>>, &[rustc_middle[71ee4195a1895a6]::mir::mono::CodegenUnit]), rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepNodeIndex), rustc_query_system[97bb7d7acedca530]::query::plumbing::execute_job<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt, (), (&std[b1afcd615c2059b7]::collections::hash::set::HashSet<rustc_span[7d79f7a404643ea]::def_id::DefId, core[6386174f90089796]::hash::BuildHasherDefault<rustc_hash[ad37f17d1c62eeb1]::FxHasher>>, &[rustc_middle[71ee4195a1895a6]::mir::mono::CodegenUnit])>::{closure#3}>\r\n 216:     0xffff81b5da4c - rustc_query_system[97bb7d7acedca530]::query::plumbing::try_execute_query::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt, rustc_query_system[97bb7d7acedca530]::query::caches::DefaultCache<(), (&std[b1afcd615c2059b7]::collections::hash::set::HashSet<rustc_span[7d79f7a404643ea]::def_id::DefId, core[6386174f90089796]::hash::BuildHasherDefault<rustc_hash[ad37f17d1c62eeb1]::FxHasher>>, &[rustc_middle[71ee4195a1895a6]::mir::mono::CodegenUnit])>>\r\n 217:     0xffff81afc804 - rustc_query_system[97bb7d7acedca530]::query::plumbing::force_query::<rustc_query_impl[970b09f12593889e]::queries::collect_and_partition_mono_items, rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n 218:     0xffff81d77124 - rustc_query_impl[970b09f12593889e]::query_callbacks::collect_and_partition_mono_items::force_from_dep_node\r\n 219:     0xffff82918ec4 - <rustc_middle[71ee4195a1895a6]::ty::context::TyCtxt as rustc_query_system[97bb7d7acedca530]::dep_graph::DepContext>::try_force_from_dep_node\r\n 220:     0xffff81db4910 - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n 221:     0xffff81d830ec - <rustc_query_system[97bb7d7acedca530]::dep_graph::graph::DepGraph<rustc_middle[71ee4195a1895a6]::dep_graph::dep_node::DepKind>>::try_mark_green::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n 222:     0xffff81b84c44 - rustc_query_system[97bb7d7acedca530]::query::plumbing::try_load_from_disk_and_cache_in_memory::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt, rustc_span[7d79f7a404643ea]::def_id::CrateNum, &[(rustc_middle[71ee4195a1895a6]::middle::exported_symbols::ExportedSymbol, rustc_middle[71ee4195a1895a6]::middle::exported_symbols::SymbolExportLevel)]>\r\n 223:     0xffff81b51284 - rustc_query_system[97bb7d7acedca530]::query::plumbing::try_execute_query::<rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt, rustc_query_system[97bb7d7acedca530]::query::caches::DefaultCache<rustc_span[7d79f7a404643ea]::def_id::CrateNum, &[(rustc_middle[71ee4195a1895a6]::middle::exported_symbols::ExportedSymbol, rustc_middle[71ee4195a1895a6]::middle::exported_symbols::SymbolExportLevel)]>>\r\n 224:     0xffff81b9d728 - rustc_query_system[97bb7d7acedca530]::query::plumbing::get_query::<rustc_query_impl[970b09f12593889e]::queries::exported_symbols, rustc_query_impl[970b09f12593889e]::plumbing::QueryCtxt>\r\n 225:     0xffff82153c0c - <rustc_metadata[72613a923d6bd920]::rmeta::encoder::EncodeContext>::encode_crate_root\r\n 226:     0xffff821605a8 - rustc_metadata[72613a923d6bd920]::rmeta::encoder::encode_metadata_impl\r\n 227:     0xffff821e6648 - rustc_data_structures[b6f3ed531bba89d7]::sync::join::<rustc_metadata[72613a923d6bd920]::rmeta::encoder::encode_metadata::{closure#0}, rustc_metadata[72613a923d6bd920]::rmeta::encoder::encode_metadata::{closure#1}, rustc_metadata[72613a923d6bd920]::rmeta::encoder::EncodedMetadata, ()>\r\n 228:     0xffff8215fec8 - rustc_metadata[72613a923d6bd920]::rmeta::encoder::encode_metadata\r\n 229:     0xffff7e5c0bac - <rustc_interface[8c36daa1df4fa2ae]::queries::Queries>::ongoing_codegen\r\n 230:     0xffff7e4a7984 - <rustc_interface[8c36daa1df4fa2ae]::interface::Compiler>::enter::<rustc_driver[890932e65b1c519a]::run_compiler::{closure#1}::{closure#2}, core[6386174f90089796]::result::Result<core[6386174f90089796]::option::Option<rustc_interface[8c36daa1df4fa2ae]::queries::Linker>, rustc_errors[30a485659b0a31e8]::ErrorReported>>\r\n 231:     0xffff7e495534 - rustc_span[7d79f7a404643ea]::with_source_map::<core[6386174f90089796]::result::Result<(), rustc_errors[30a485659b0a31e8]::ErrorReported>, rustc_interface[8c36daa1df4fa2ae]::interface::create_compiler_and_run<core[6386174f90089796]::result::Result<(), rustc_errors[30a485659b0a31e8]::ErrorReported>, rustc_driver[890932e65b1c519a]::run_compiler::{closure#1}>::{closure#1}>\r\n 232:     0xffff7e4a880c - <scoped_tls[51779844e3f85be9]::ScopedKey<rustc_span[7d79f7a404643ea]::SessionGlobals>>::set::<rustc_interface[8c36daa1df4fa2ae]::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface[8c36daa1df4fa2ae]::interface::run_compiler<core[6386174f90089796]::result::Result<(), rustc_errors[30a485659b0a31e8]::ErrorReported>, rustc_driver[890932e65b1c519a]::run_compiler::{closure#1}>::{closure#0}, core[6386174f90089796]::result::Result<(), rustc_errors[30a485659b0a31e8]::ErrorReported>>::{closure#0}::{closure#0}, core[6386174f90089796]::result::Result<(), rustc_errors[30a485659b0a31e8]::ErrorReported>>\r\n 233:     0xffff7e4a3fbc - std[b1afcd615c2059b7]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[8c36daa1df4fa2ae]::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface[8c36daa1df4fa2ae]::interface::run_compiler<core[6386174f90089796]::result::Result<(), rustc_errors[30a485659b0a31e8]::ErrorReported>, rustc_driver[890932e65b1c519a]::run_compiler::{closure#1}>::{closure#0}, core[6386174f90089796]::result::Result<(), rustc_errors[30a485659b0a31e8]::ErrorReported>>::{closure#0}, core[6386174f90089796]::result::Result<(), rustc_errors[30a485659b0a31e8]::ErrorReported>>\r\n 234:     0xffff7e4fd1b8 - <<std[b1afcd615c2059b7]::thread::Builder>::spawn_unchecked<rustc_interface[8c36daa1df4fa2ae]::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface[8c36daa1df4fa2ae]::interface::run_compiler<core[6386174f90089796]::result::Result<(), rustc_errors[30a485659b0a31e8]::ErrorReported>, rustc_driver[890932e65b1c519a]::run_compiler::{closure#1}>::{closure#0}, core[6386174f90089796]::result::Result<(), rustc_errors[30a485659b0a31e8]::ErrorReported>>::{closure#0}, core[6386174f90089796]::result::Result<(), rustc_errors[30a485659b0a31e8]::ErrorReported>>::{closure#1} as core[6386174f90089796]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n 235:     0xffff7d88b8fc - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::had3362d7c7063258\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/alloc/src/boxed.rs:1694:9\r\n 236:     0xffff7d88b8fc - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h48cd5ee8bcf6ba5b\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/alloc/src/boxed.rs:1694:9\r\n 237:     0xffff7d88b8fc - std::sys::unix::thread::Thread::new::thread_start::hf7c96020d8134f70\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys/unix/thread.rs:106:17\r\n 238:     0xffff7d625628 - start_thread\r\n 239:     0xffff7d74801c - <unknown>\r\n 240:                0x0 - <unknown>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96962/timeline", "performed_via_github_app": null, "state_reason": "completed"}