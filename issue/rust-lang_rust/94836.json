{"url": "https://api.github.com/repos/rust-lang/rust/issues/94836", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94836/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94836/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94836/events", "html_url": "https://github.com/rust-lang/rust/issues/94836", "id": 1166042022, "node_id": "I_kwDOAAsO6M5FgGOm", "number": 94836, "title": "Calling trait function declared with both explicit generics and impl Trait gives confusing errors", "user": {"login": "lopopolo", "id": 860434, "node_id": "MDQ6VXNlcjg2MDQzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/860434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lopopolo", "html_url": "https://github.com/lopopolo", "followers_url": "https://api.github.com/users/lopopolo/followers", "following_url": "https://api.github.com/users/lopopolo/following{/other_user}", "gists_url": "https://api.github.com/users/lopopolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lopopolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lopopolo/subscriptions", "organizations_url": "https://api.github.com/users/lopopolo/orgs", "repos_url": "https://api.github.com/users/lopopolo/repos", "events_url": "https://api.github.com/users/lopopolo/events{/privacy}", "received_events_url": "https://api.github.com/users/lopopolo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-03-11T06:11:00Z", "updated_at": "2022-10-12T14:26:15Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\nI had a trait that was originally defined like this:\r\n\r\n```rust\r\npub trait LoadSources {\r\n    fn def_file_for_type<P, T>(&mut self, path: P) -> Result<(), Box<dyn Error>>\r\n    where\r\n        P: AsRef<Path>,\r\n        T: File;\r\n}\r\n```\r\n\r\n`T` is a type parameter that is used to pass a function pointer into implementations of this trait.\r\n\r\nUsers of this API call it like this:\r\n\r\n```rust\r\ninterp.def_file_for_type::<_, SecureRandomFile>(\"securerandom.rb\")?;\r\n```\r\n\r\nI was trying to remove the `P` type parameter to allow for a bit nicer of a turbofish without the anonymous placeholder so I redefined the trait to look like:\r\n\r\n```rust\r\npub trait LoadSources {\r\n    fn def_file_for_type<T>(&mut self, path: impl AsRef<Path>) -> Result<(), Box<dyn Error>>\r\n    where\r\n        T: File;\r\n}\r\n```\r\n\r\nI attempted to compile this before refactoring callers.\r\n\r\nFull program below.\r\nPlayground link: https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=49b4d1c31975f80c7cc2f3c1f8a06933\r\n\r\n```rust\r\nuse std::error::Error;\r\nuse std::path::Path;\r\n\r\npub trait File {}\r\n\r\npub trait LoadSources {\r\n    fn def_file_for_type<T>(&mut self, path: impl AsRef<Path>) -> Result<(), Box<dyn Error>>\r\n    where\r\n        T: File;\r\n}\r\n\r\nstruct Interp {}\r\n\r\nimpl LoadSources for Interp {\r\n    fn def_file_for_type<T>(&mut self, path: impl AsRef<Path>) -> Result<(), Box<dyn Error>>\r\n    where\r\n        T: File\r\n    {\r\n        todo!()\r\n    }\r\n}\r\n\r\npub struct SecureRandomFile {}\r\n\r\nimpl File for SecureRandomFile {}\r\n\r\npub fn main() {\r\n    let mut interp = Interp {};\r\n    interp.def_file_for_type::<_, SecureRandomFile>(\"securerandom.rb\").unwrap();\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0632]: cannot provide explicit generic arguments when `impl Trait` is used in argument position\r\n  --> src/main.rs:29:32\r\n   |\r\n29 |     interp.def_file_for_type::<_, SecureRandomFile>(\"securerandom.rb\").unwrap();\r\n   |                                ^  ^^^^^^^^^^^^^^^^ explicit generic argument not allowed\r\n   |                                |\r\n   |                                explicit generic argument not allowed\r\n   |\r\n   = note: see issue #83701 <https://github.com/rust-lang/rust/issues/83701> for more information\r\n\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:29:53\r\n   |\r\n29 |     interp.def_file_for_type::<_, SecureRandomFile>(\"securerandom.rb\").unwrap();\r\n   |                                                     ^^^^^^^^^^^^^^^^^ expected struct `SecureRandomFile`, found `&str`\r\n\r\nerror[E0277]: the trait bound `SecureRandomFile: AsRef<Path>` is not satisfied\r\n  --> src/main.rs:29:53\r\n   |\r\n29 |     interp.def_file_for_type::<_, SecureRandomFile>(\"securerandom.rb\").unwrap();\r\n   |            -----------------                        ^^^^^^^^^^^^^^^^^ the trait `AsRef<Path>` is not implemented for `SecureRandomFile`\r\n   |            |\r\n   |            required by a bound introduced by this call\r\n   |\r\nnote: required by a bound in `LoadSources::def_file_for_type`\r\n  --> src/main.rs:7:51\r\n   |\r\n7  |     fn def_file_for_type<T>(&mut self, path: impl AsRef<Path>) -> Result<(), Box<dyn Error>>\r\n   |                                                   ^^^^^^^^^^^ required by this bound in `LoadSources::def_file_for_type`\r\n\r\nSome errors have detailed explanations: E0277, E0308, E0632.\r\nFor more information about an error, try `rustc --explain E0277`.\r\nerror: could not compile `playground` due to 3 previous errors\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\n\r\nThere are two errors here:\r\n\r\n- Can't use explicit type argument when impl trait is used. This one is present but comes first and cargo ouput puts it out of the scrollback in my terminal.\r\n- I'm using two named generic types when the function only has 1. This does not appear in the error output. Instead I get a lot of confusing things around type mismatches. I can't figure out what rustc is trying to tell me.\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94836/timeline", "performed_via_github_app": null, "state_reason": null}