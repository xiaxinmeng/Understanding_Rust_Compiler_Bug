{"url": "https://api.github.com/repos/rust-lang/rust/issues/111272", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111272/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111272/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111272/events", "html_url": "https://github.com/rust-lang/rust/issues/111272", "id": 1698327090, "node_id": "I_kwDOAAsO6M5lOmoy", "number": 111272, "title": "Stack overflow not caught in Drop for TLS data", "user": {"login": "ridiculousfish", "id": 920838, "node_id": "MDQ6VXNlcjkyMDgzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/920838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ridiculousfish", "html_url": "https://github.com/ridiculousfish", "followers_url": "https://api.github.com/users/ridiculousfish/followers", "following_url": "https://api.github.com/users/ridiculousfish/following{/other_user}", "gists_url": "https://api.github.com/users/ridiculousfish/gists{/gist_id}", "starred_url": "https://api.github.com/users/ridiculousfish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ridiculousfish/subscriptions", "organizations_url": "https://api.github.com/users/ridiculousfish/orgs", "repos_url": "https://api.github.com/users/ridiculousfish/repos", "events_url": "https://api.github.com/users/ridiculousfish/events{/privacy}", "received_events_url": "https://api.github.com/users/ridiculousfish/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36953, "node_id": "MDU6TGFiZWwzNjk1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-runtime", "name": "A-runtime", "color": "f7e101", "default": false, "description": "Area: std's runtime and \"pre-main\" init for handling backtraces, unwinds, stack overflows"}, {"id": 632886930, "node_id": "MDU6TGFiZWw2MzI4ODY5MzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-thread-locals", "name": "A-thread-locals", "color": "f7e101", "default": false, "description": "Area: Thread local storage (TLS)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 3812065331, "node_id": "LA_kwDOAAsO6M7jN4Az", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-thread", "name": "A-thread", "color": "f7e101", "default": false, "description": "Area: std::thread"}, {"id": 4191284090, "node_id": "LA_kwDOAAsO6M750et6", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-stack-probe", "name": "A-stack-probe", "color": "f7e101", "default": false, "description": "Area: stack probing and guard pages"}], "state": "open", "locked": false, "assignee": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2023-05-06T00:19:27Z", "updated_at": "2023-05-17T19:53:27Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Rust attempts to catch stack overflow by installing a guard page at the end of the valid stack range. This guard page is stored in TLS and is torn down when a thread exits (including the main thread).\r\n\r\nHowever other thread local data may run `drop` after this guard page is torn down. Stack overflows occurring in these `drop` implementations are not detected by Rust. (It may be backstopped by the OS, but this is system dependent.)\r\n\r\nTo reproduce:\r\n\r\n```rust\r\nuse std::thread_local;\r\nstruct First;\r\nstruct Second;\r\n\r\nimpl Drop for First {\r\n    fn drop(&mut self) {\r\n        // First is materialized in TLS in main().\r\n        // Second is materialized in First's dtor, thereby registering a\r\n        // dtor for Second.\r\n        // This dtor is guaranteed to run after the Thread data (including\r\n        // its guard page) has been unmapped.\r\n        SECOND.with(|_s| {} );\r\n    }\r\n}\r\n\r\nimpl Drop for Second {\r\n    fn drop(&mut self) {\r\n        // Trigger a stack overflow.\r\n        recurse(0);\r\n    }\r\n}\r\n\r\nthread_local! {\r\n    static FIRST: First = First;\r\n}\r\n\r\nthread_local! {\r\n    static SECOND: Second = Second;\r\n}\r\n\r\n// Triggers a stack overflow.\r\nfn recurse(count: usize) {\r\n    if count < usize::MAX {\r\n        recurse(count + 1);\r\n    }\r\n    println!(\"{} bottles of beer on the wall\", count);\r\n}\r\n\r\nfn main() {\r\n    FIRST.with(|_f| {});\r\n}\r\n```\r\n\r\nThis causes a `SIGILL` on macOS and a `SIGSEGV` on Linux. In both cases I confirmed that Rust's stack overflow signal handler is not run.\r\n\r\nReproduced on rust stable and master branch.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111272/timeline", "performed_via_github_app": null, "state_reason": null}