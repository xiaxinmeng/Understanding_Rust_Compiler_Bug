{"url": "https://api.github.com/repos/rust-lang/rust/issues/93237", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93237/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93237/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93237/events", "html_url": "https://github.com/rust-lang/rust/issues/93237", "id": 1111892815, "node_id": "I_kwDOAAsO6M5CRiNP", "number": 93237, "title": "Segfault when returning deep function compositions", "user": {"login": "fredlahde", "id": 17102377, "node_id": "MDQ6VXNlcjE3MTAyMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/17102377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fredlahde", "html_url": "https://github.com/fredlahde", "followers_url": "https://api.github.com/users/fredlahde/followers", "following_url": "https://api.github.com/users/fredlahde/following{/other_user}", "gists_url": "https://api.github.com/users/fredlahde/gists{/gist_id}", "starred_url": "https://api.github.com/users/fredlahde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fredlahde/subscriptions", "organizations_url": "https://api.github.com/users/fredlahde/orgs", "repos_url": "https://api.github.com/users/fredlahde/repos", "events_url": "https://api.github.com/users/fredlahde/events{/privacy}", "received_events_url": "https://api.github.com/users/fredlahde/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 100522, "node_id": "MDU6TGFiZWwxMDA1MjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-crash", "name": "I-crash", "color": "e10c02", "default": false, "description": "Issue: The compiler crashes (SIGSEGV, SIGABRT, etc). Use I-ICE instead when the compiler panics."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-01-23T14:53:36Z", "updated_at": "2022-01-26T17:07:40Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "This issue is tightly bound to [this PR (93082)](https://github.com/rust-lang/rust/pull/93082), which aims to add the ability to return  `impl Fn() -> impl Trait` from a function.\r\n\r\nI played around with it, and got the idea to test out if there is a limit to how deep we can nest those functions (since the PR also enables `impl Fn() -> impl Fn() -> impl Trait`). It quickly noticed a segfault from `rustc` and was able to determine the exact depth that causes the crash.\r\n\r\n### Code\r\nFor generating test files quickly, I wrote a small code generator:\r\n\r\n```Rust\r\nconst FILE_NAME: &str = \"test.rs\";\r\n\r\nuse std::io::Write;\r\nuse std::env;\r\n\r\nfn main() {\r\n    let args: Vec<String> = env::args().collect();\r\n    let n_depth: usize = args[1].parse().unwrap();\r\n    let mut fd = std::fs::OpenOptions::new()\r\n        .create(true)\r\n        .truncate(true)\r\n        .write(true)\r\n        .open(FILE_NAME)\r\n        .unwrap();\r\n    fd.write(b\"use std::fmt::Debug;\\n\").unwrap();\r\n    fd.write(b\"fn foo()\").unwrap();\r\n    (0..n_depth).for_each(|_| {\r\n        let _w = fd.write(b\"-> impl Fn() \").unwrap();\r\n    });\r\n    fd.write(b\"-> impl Debug {\\n\").unwrap();\r\n    (0..n_depth).for_each(|_| {\r\n        let _w = fd.write(b\"|| \").unwrap();\r\n    });\r\n    fd.write(br#\"\"hi\"\"#).unwrap();\r\n    fd.write(b\"}\\n\").unwrap();\r\n\r\n    fd.write(br#\"\r\n        fn main() {\r\n            let x = foo()\"#).unwrap();\r\n    (0..n_depth).for_each(|_| {\r\n        let _w = fd.write(b\"()\").unwrap();\r\n    });\r\n    fd.write(br#\";\r\n        println!(\"{:?}\", x);\r\n        }\"#).unwrap();\r\n}\r\n\r\n```\r\nOnce compiled, one can call it like this: `./gen <depth>`. The `depth` argument controls the count of `-> impl Fn()` that is emitted. The following listing is an example with `depth` set to 5:\r\n\r\n```rust\r\nuse std::fmt::Debug;\r\nfn foo()-> impl Fn() -> impl Fn() -> impl Fn() -> impl Fn() -> impl Fn() -> impl Debug {\r\n|| || || || || \"hi\"}\r\n\r\n        fn main() {\r\n            let x = foo()()()()()();\r\n        println!(\"{:?}\", x);\r\n        }\r\n```\r\n\r\nIf one then tries to compile this [with the rustc from the PR](https://github.com/WaffleLapkin/rust/tree/impl_trait_in_impl_fn) at commit [3ed486b37477dde94c87539](https://github.com/WaffleLapkin/rust/commit/3ed486b37477dde94c87539182008fd2be0a09b5), the test program compiles successfully.\r\n\r\nHowever, when I set `depth` to 560, I get a segfault.\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.60.0-dev\r\nbinary: rustc\r\ncommit-hash: unknown\r\ncommit-date: unknown\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.60.0-dev\r\nLLVM version: 13.0.0\r\n\r\n```\r\n\r\n### Error output\r\n\r\nI got a backtrace from `gdb`:\r\n```\r\n#0  0x00007ffff5a28670 in core::iter::adapters::process_results::<core::iter::adapters::map::Map<core::iter::adapters::enumerate::Enumerate<core::iter::adapters::zip::Zip<core::iter::adapters::copied::Copied<core::slice::iter::Iter<rustc_middle::ty::subst::GenericArg>>, core::iter::adapters::copied::Copied<core::slice::iter::Iter<rustc_middle::ty::subst::GenericArg>>>>, rustc_middle::ty::relate::relate_substs<rustc_infer::infer::nll_relate::TypeRelating<rustc_borrowck::type_check::relate_tys::NllTypeRelatingDelegate>>::{closure#0}>, rustc_middle::ty::subst::GenericArg, rustc_middle::ty::error::TypeError, <core::result::Result<smallvec::SmallVec<[rustc_middle::ty::subst::GenericArg; 8]>, rustc_middle::ty::error::TypeError> as core::iter::traits::collect::FromIterator<core::result::Result<rustc_middle::ty::subst::GenericArg, rustc_middle::ty::error::TypeError>>>::from_iter<core::iter::adapters::map::Map<core::iter::adapters::enumerate::Enumerate<core::iter::adapters::zip::Zip<core::iter::adapters::copied::Copied<core::slice::iter::Iter<rustc_middle::ty::subst::GenericArg>>, core::iter::adapters::copied::Copied<core::slice::iter::Iter<rustc_middle::ty::subst::GenericArg>>>>, rustc_middle::ty::relate::relate_substs<rustc_infer::infer::nll_relate::TypeRelating<rustc_borrowck::type_check::relate_tys::NllTypeRelatingDelegate>>::{closure#0}>>::{closure#0}, smallvec::SmallVec<[rustc_middle::ty::subst::GenericArg; 8]>> ()\r\n   from /mnt/work/home/fredlahde/research/rust-impl-fn-depth-test/rust-fork/build/x86_64-unknown-linux-gnu/stage1/bin/../lib/librustc_driver-135a9886b846246a.so\r\n#1  0x00007ffff5ab8cb0 in <core::result::Result<rustc_middle::ty::subst::GenericArg, rustc_middle::ty::error::TypeError> as rustc_middle::ty::context::InternIteratorElement<rustc_middle::ty::subst::GenericArg, &rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg>>>::intern_with::<core::iter::adapters::map::Map<core::iter::adapters::enumerate::Enumerate<core::iter::adapters::zip::Zip<core::iter::adapters::copied::Copied<core::slice::iter::Iter<rustc_middle::ty::subst::GenericArg>>, core::iter::adapters::copied::Copied<core::slice::iter::Iter<rustc_middle::ty::subst::GenericArg>>>>, rustc_middle::ty::relate::relate_substs<rustc_infer::infer::nll_relate::TypeRelating<rustc_borrowck::type_check::relate_tys::NllTypeRelatingDelegate>>::{closure#0}>, <rustc_middle::ty::context::TyCtxt>::mk_substs<core::iter::adapters::map::Map<core::iter::adapters::enumerate::Enumerate<core::iter::adapters::zip::Zip<core::iter::adapters::copied::Copied<core::slice::iter::Iter<rustc_middle::ty::subst::GenericArg>>, core::iter::adapters::copied::Copied<core::slice::iter::Iter<rustc_middle::ty::subst::GenericArg>>>>, rustc_middle::ty::relate::relate_substs<rustc_infer::infer::nll_relate::TypeRelating<rustc_borrowck::type_check::relate_tys::NllTypeRelatingDelegate>>::{closure#0}>>::{closure#0}> ()\r\n   from /mnt/work/home/fredlahde/research/rust-impl-fn-depth-test/rust-fork/build/x86_64-unknown-linux-gnu/stage1/bin/../lib/librustc_driver-135a9886b846246a.so\r\n#2  0x00007ffff598b20d in <rustc_middle::ty::context::TyCtxt>::mk_substs::<core::iter::adapters::map::Map<core::iter::adapters::enumerate::Enumerate<core::iter::adapters::zip::Zip<core::iter::adapters::copied::Copied<core::slice::iter::Iter<rustc_middle::ty::subst::GenericArg>>, core::iter::adapters::copied::Copied<core::slice::iter::Iter<rustc_middle::ty::subst::GenericArg>>>>, rustc_middle::ty::relate::relate_substs<rustc_infer::infer::nll_relate::TypeRelating<rustc_borrowck::type_check::relate_tys::NllTypeRelatingDelegate>>::{closure#0}>> ()\r\n   from /mnt/work/home/fredlahde/research/rust-impl-fn-depth-test/rust-fork/build/x86_64-unknown-linux-gnu/stage1/bin/../lib/librustc_driver-135a9886b846246a.so\r\n#3  0x00007ffff5af7b0a in rustc_middle::ty::relate::relate_substs::<rustc_infer::infer::nll_relate::TypeRelating<rustc_borrowck::type_check::relate_tys::NllTypeRelatingDelegate>> ()\r\n   from /mnt/work/home/fredlahde/research/rust-impl-fn-depth-test/rust-fork/build/x86_64-unknown-linux-gnu/stage1/bin/../lib/librustc_driver-135a9886b846246a.so\r\n#4  0x00007ffff5ae1780 in <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_middle::ty::relate::Relate>::relate::<rustc_infer::infer::nll_relate::TypeRelating<rustc_borrowck::type_check::relate_tys::NllTypeRelatingDelegate>> ()\r\n   from /mnt/work/home/fredlahde/research/rust-impl-fn-depth-test/rust-fork/build/x86_64-unknown-linux-gnu/stage1/bin/../lib/librustc_driver-135a9886b846246a.so\r\n#5  0x00007ffff5af8f11 in rustc_middle::ty::relate::super_relate_tys::<rustc_infer::infer::nll_relate::TypeRelating<rustc_borrowck::type_check::relate_tys::NllTypeRelatingDelegate>> ()\r\n   from /mnt/work/home/fredlahde/research/rust-impl-fn-depth-test/rust-fork/build/x86_64-unknown-linux-gnu/stage1/bin/../lib/librustc_driver-135a9886b846246a.so\r\n#6  0x00007ffff59cb2e6 in <rustc_infer::infer::InferCtxt>::super_combine_tys::<rustc_infer::infer::nll_relate::TypeRelating<rustc_borrowck::type_check::relate_tys::NllTypeRelatingDelegate>> ()\r\n   from /mnt/work/home/fredlahde/research/rust-impl-fn-depth-test/rust-fork/build/x86_64-unknown-linux-gnu/stage1/bin/../lib/librustc_driver-135a9886b846246a.so\r\n#7  0x00007ffff5a99bd7 in <rustc_infer::infer::nll_relate::TypeRelating<rustc_borrowck::type_check::relate_tys::NllTypeRelatingDelegate> as rustc_middle::ty::relate::TypeRelation>::relate::<&rustc_middle::ty::TyS> ()\r\n   from /mnt/work/home/fredlahde/research/rust-impl-fn-depth-test/rust-fork/build/x86_64-unknown-linux-gnu/stage1/bin/../lib/librustc_driver-135a9886b846246a.so\r\n#8  0x00007ffff5b011c3 in <&mut <rustc_middle::ty::sty::FnSig as rustc_middle::ty::relate::Relate>::relate<rustc_infer::infer::nll_relate::TypeRelating<rustc_borrowck::type_check::relate_tys::NllTypeRelatingDelegate>>::{closure#1} as core::ops::function::FnOnce<(((&rustc_middle::ty::TyS, &rustc_middle::ty::TyS), bool),)>>::call_once ()\r\n   from /mnt/work/home/fredlahde/research/rust-impl-fn-depth-test/rust-fork/build/x86_64-unknown-linux-gnu/stage1/bin/../lib/librustc_driver-135a9886b846246a.so\r\n#9  0x00007ffff5abe042 in <core::iter::adapters::map::Map<core::iter::adapters::enumerate::Enumerate<core::iter::adapters::map::Map<core::iter::adapters::chain::Chain<core::iter::adapters::map::Map<core::iter::adapters::zip::Zip<core::slice::iter::Iter<&rustc_middle::ty::TyS>, core::slice::iter::Iter<&rustc_middle::ty::TyS>>, <rustc_middle::ty::sty::FnSig as rustc_middle::ty::relate::Relate>::relate<rustc_infer::infer::nll_relate::TypeRelating<rustc_borrowck::type_check::relate_tys::NllTypeRelatingDelegate>>::{closure#0}>, core::iter::sources::once::Once<((&rustc_middle::ty::TyS, &rustc_middle::ty::TyS), bool)>>, <rustc_middle::ty::sty::FnSig as rustc_middle::ty::relate::Relate>::relate<rustc_infer::infer::nll_relate::TypeRelating<rustc_borrowck::type_check::relate_tys::NllTypeRelatingDelegate>>::{closure#1}>>, <rustc_middle::ty::sty::FnSig as rustc_middle::ty::relate::Relate>::relate<rustc_infer::infer::nll_relate::TypeRelating<rustc_borrowck::type_check::relate_tys::NllTypeRelatingDelegate>>::{closure#2}> as core::iter::traits::iterator::Iterator>::next ()\r\n   from /mnt/work/home/fredlahde/research/rust-impl-fn-depth-test/rust-fork/build/x86_64-unknown-linux-gnu/stage1/bin/../lib/librustc_driver-135a9886b846246a.so\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nI am not entirely sure, if this is important enough for having it's own issue, since it's so tightly bound to the [PR](https://github.com/rust-lang/rust/pull/93082). Feel free to close / move accordingly.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93237/timeline", "performed_via_github_app": null, "state_reason": null}