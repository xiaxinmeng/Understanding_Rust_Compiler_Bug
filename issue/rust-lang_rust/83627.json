{"url": "https://api.github.com/repos/rust-lang/rust/issues/83627", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83627/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83627/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83627/events", "html_url": "https://github.com/rust-lang/rust/issues/83627", "id": 842909553, "node_id": "MDU6SXNzdWU4NDI5MDk1NTM=", "number": 83627, "title": "Failure to infer closure argument type under some circumstances", "user": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-03-29T02:24:14Z", "updated_at": "2021-04-07T02:27:21Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\ntrait Foo<P> {\r\n    fn foo(&self, p: P);\r\n}\r\n\r\nimpl<F: FnMut(&u8) -> bool> Foo<F> for [u8] {\r\n    fn foo(&self, _f: F) {}\r\n}\r\n\r\nimpl Foo<u8> for [u8] {\r\n    fn foo(&self, _c: u8) {}\r\n}\r\n\r\nfn main() {\r\n    b\"abc\".foo(|b| match b { b' ' => true, _ => false});\r\n}\r\n```\r\n\r\nThis fails to compile with:\r\n```\r\nerror[E0631]: type mismatch in closure arguments\r\n  --> src/main.rs:14:12\r\n   |\r\n14 |     b\"abc\".foo(|b| match b { b' ' => true, _ => false});\r\n   |            ^^^ ----------- found signature of `fn(u8) -> _`\r\n   |            |\r\n   |            expected signature of `for<'r> fn(&'r u8) -> _`\r\n   |\r\n   = note: required because of the requirements on the impl of `Foo<[closure@src/main.rs:14:16: 14:55]>` for `[u8]`\r\n```\r\n\r\nThis builds fine if you remove the `impl Foo<u8> for [u8]`.\r\nIt also builds fine with an explicit type for the closure argument: ` b\"abc\".foo(|b: &u8| match b { b' ' => true, _ => false});`\r\n\r\nThe error changes when using `b\"abc\".foo(|b| *b == b' ');`, to:\r\n```\r\nerror[E0282]: type annotations needed\r\n  --> src/main.rs:14:17\r\n   |\r\n14 |     b\"abc\".foo(|b| *b == b' ');\r\n   |                 ^ consider giving this closure parameter a type\r\n   |\r\n   = note: type must be known at this point\r\n```\r\n\r\nAgain, in that case, it builds fine without the `impl Foo<u8> for [u8]`.\r\n\r\nYou can get yet another error message with `b\"abc\".foo(|&b| b == b' ');`:\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:14:12\r\n   |\r\n14 |     b\"abc\".foo(|&b| b == b' ');\r\n   |            ^^^ one type is more general than the other\r\n   |\r\n   = note: expected type `for<'r> FnMut<(&'r u8,)>`\r\n              found type `FnMut<(&u8,)>`\r\nnote: this closure does not fulfill the lifetime requirements\r\n  --> src/main.rs:14:16\r\n   |\r\n14 |     b\"abc\".foo(|&b| b == b' ');\r\n   |                ^^^^^^^^^^^^^^\r\n```\r\n\r\nAnd yet again, it builds fine without the `impl Foo<u8> for [u8]`.\r\n\r\nThis is all reproducible with the current stable and nightly on the rust playground.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83627/timeline", "performed_via_github_app": null, "state_reason": null}