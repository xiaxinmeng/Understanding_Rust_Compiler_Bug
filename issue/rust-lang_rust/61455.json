{"url": "https://api.github.com/repos/rust-lang/rust/issues/61455", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61455/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61455/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61455/events", "html_url": "https://github.com/rust-lang/rust/issues/61455", "id": 451178069, "node_id": "MDU6SXNzdWU0NTExNzgwNjk=", "number": 61455, "title": "transmute const generic parameter", "user": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-02T10:46:26Z", "updated_at": "2019-12-28T13:12:49Z", "closed_at": "2019-12-28T13:12:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I know you should never ever ever do this, yet it causes an ICE.\r\nAlso note I *didn't* turn on the `#![feature(const_transmute)]` feature\r\n\r\n```Rust\r\n#![feature(const_generics)]\r\n\r\nuse std::mem::transmute;\r\n\r\nstruct Bug<const N: fn(usize)>;\r\n\r\nfn main() {\r\n    let x = Bug::<{\r\n        unsafe { transmute(|x: u8| {}) }\r\n        \r\n    }>;\r\n}\r\n```\r\n\r\n<details>\r\n<summary>Backtrace:</summary>\r\n\r\n```\r\n\r\nStandard Error\r\n\r\n   Compiling playground v0.0.1 (/playground)\r\nwarning: the feature `const_generics` is incomplete and may cause the compiler to crash\r\n --> src/main.rs:1:12\r\n  |\r\n1 | #![feature(const_generics)]\r\n  |            ^^^^^^^^^^^^^^\r\n\r\nerror[E0658]: The use of std::mem::transmute() is gated in constants\r\n --> src/main.rs:9:18\r\n  |\r\n9 |         unsafe { transmute(|x: u8| {}) }\r\n  |                  ^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: for more information, see https://github.com/rust-lang/rust/issues/53605\r\n  = help: add #![feature(const_transmute)] to the crate attributes to enable\r\n\r\nthread 'rustc' panicked at 'Size mismatch when transmuting!\r\nsrc: OpTy {\r\n    op: Immediate(\r\n        Scalar(\r\n            <ZST>,\r\n        ),\r\n    ),\r\n    layout: TyLayout {\r\n        ty: [closure@src/main.rs:9:28: 9:38],\r\n        details: LayoutDetails {\r\n            variants: Single {\r\n                index: 0,\r\n            },\r\n            fields: Arbitrary {\r\n                offsets: [],\r\n                memory_index: [],\r\n            },\r\n            abi: Aggregate {\r\n                sized: true,\r\n            },\r\n            align: AbiAndPrefAlign {\r\n                abi: Align {\r\n                    pow2: 0,\r\n                },\r\n                pref: Align {\r\n                    pow2: 3,\r\n                },\r\n            },\r\n            size: Size {\r\n                raw: 0,\r\n            },\r\n        },\r\n    },\r\n}\r\ndest: PlaceTy {\r\n    place: Ptr(\r\n        MemPlace {\r\n            ptr: AllocId(0).0x0,\r\n            align: Align {\r\n                pow2: 3,\r\n            },\r\n            meta: None,\r\n        },\r\n    ),\r\n    layout: TyLayout {\r\n        ty: fn(usize),\r\n        details: LayoutDetails {\r\n            variants: Single {\r\n                index: 0,\r\n            },\r\n            fields: Union(\r\n                0,\r\n            ),\r\n            abi: Scalar(\r\n                Scalar {\r\n                    value: Pointer,\r\n                    valid_range: 1..=18446744073709551615,\r\n                },\r\n            ),\r\n            align: AbiAndPrefAlign {\r\n                abi: Align {\r\n                    pow2: 3,\r\n                },\r\n                pref: Align {\r\n                    pow2: 3,\r\n                },\r\n            },\r\n            size: Size {\r\n                raw: 8,\r\n            },\r\n        },\r\n    },\r\n}', src/librustc_mir/interpret/place.rs:865:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.25/src/backtrace/libunwind.rs:97\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.25/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:47\r\n   3: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:36\r\n   4: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:197\r\n   5: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:211\r\n   6: rustc::util::common::panic_hook\r\n   7: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:478\r\n   8: std::panicking::continue_panic_fmt\r\n             at src/libstd/panicking.rs:381\r\n   9: std::panicking::begin_panic_fmt\r\n             at src/libstd/panicking.rs:336\r\n  10: rustc_mir::interpret::place::<impl rustc_mir::interpret::eval_context::InterpretCx<M>>::copy_op_transmute\r\n  11: rustc_mir::interpret::intrinsics::<impl rustc_mir::interpret::eval_context::InterpretCx<M>>::emulate_intrinsic\r\n  12: <rustc_mir::const_eval::CompileTimeInterpreter as rustc_mir::interpret::machine::Machine>::call_intrinsic\r\n  13: rustc_mir::interpret::terminator::<impl rustc_mir::interpret::eval_context::InterpretCx<M>>::eval_fn_call\r\n  14: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpretCx<M>>::run\r\n  15: rustc_mir::const_eval::eval_body_using_ecx\r\n  16: rustc_mir::const_eval::const_eval_raw_provider\r\n  17: rustc::ty::query::__query_compute::const_eval_raw\r\n  18: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval_raw>::compute\r\n  19: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  20: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  21: rustc_mir::const_eval::const_eval_provider\r\n  22: rustc::ty::query::__query_compute::const_eval\r\n  23: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval>::compute\r\n  24: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  25: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  26: <rustc::traits::project::AssocTypeNormalizer as rustc::ty::fold::TypeFolder>::fold_const\r\n  27: <smallvec::SmallVec<A> as core::iter::traits::collect::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  28: rustc::ty::fold::TypeFoldable::fold_with\r\n  29: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable for &rustc::ty::TyS>::super_fold_with\r\n  30: <rustc::traits::project::AssocTypeNormalizer as rustc::ty::fold::TypeFolder>::fold_ty\r\n  31: rustc::traits::project::normalize\r\n  32: rustc_typeck::check::FnCtxt::instantiate_value_path\r\n  33: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  34: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_needs\r\n  35: rustc_typeck::check::FnCtxt::check_decl_initializer\r\n  36: rustc_typeck::check::FnCtxt::check_decl_local\r\n  37: rustc_typeck::check::FnCtxt::check_stmt\r\n  38: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  39: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  40: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_needs\r\n  41: rustc_typeck::check::FnCtxt::check_return_expr\r\n  42: rustc_typeck::check::check_fn\r\n  43: rustc::ty::context::GlobalCtxt::enter_local\r\n  44: rustc_typeck::check::typeck_tables_of\r\n  45: rustc::ty::query::__query_compute::typeck_tables_of\r\n  46: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_tables_of>::compute\r\n  47: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  48: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  49: rustc::ty::<impl rustc::ty::context::TyCtxt>::par_body_owners\r\n  50: rustc_typeck::check::typeck_item_bodies\r\n  51: rustc::ty::query::__query_compute::typeck_item_bodies\r\n  52: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_item_bodies>::compute\r\n  53: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  54: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  55: rustc::util::common::time\r\n  56: rustc_typeck::check_crate\r\n  57: rustc_interface::passes::analysis\r\n  58: rustc::ty::query::__query_compute::analysis\r\n  59: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  60: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  61: rustc::ty::context::tls::enter_global\r\n  62: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  63: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  64: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  65: std::thread::local::LocalKey<T>::with\r\n  66: scoped_tls::ScopedKey<T>::set\r\n  67: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nquery stack during panic:\r\n#0 [const_eval_raw] const-evaluating `main::{{constant}}#0`\r\n#1 [const_eval] const-evaluating + checking `main::{{constant}}#0`\r\n#2 [typeck_tables_of] processing `main`\r\n#3 [typeck_item_bodies] type-checking all item bodies\r\n#4 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0658`.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.37.0-nightly (03ee55bb1 2019-06-01) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\n</details>", "closed_by": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61455/timeline", "performed_via_github_app": null, "state_reason": "completed"}