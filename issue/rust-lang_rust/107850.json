{"url": "https://api.github.com/repos/rust-lang/rust/issues/107850", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107850/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107850/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107850/events", "html_url": "https://github.com/rust-lang/rust/issues/107850", "id": 1578267449, "node_id": "I_kwDOAAsO6M5eEnM5", "number": 107850, "title": "Recursion limit reached when evaluating trait bounds for trait impl on reference type.", "user": {"login": "Zistack", "id": 2387336, "node_id": "MDQ6VXNlcjIzODczMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/2387336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zistack", "html_url": "https://github.com/Zistack", "followers_url": "https://api.github.com/users/Zistack/followers", "following_url": "https://api.github.com/users/Zistack/following{/other_user}", "gists_url": "https://api.github.com/users/Zistack/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zistack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zistack/subscriptions", "organizations_url": "https://api.github.com/users/Zistack/orgs", "repos_url": "https://api.github.com/users/Zistack/repos", "events_url": "https://api.github.com/users/Zistack/events{/privacy}", "received_events_url": "https://api.github.com/users/Zistack/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-02-09T17:04:31Z", "updated_at": "2023-02-09T21:22:49Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::ops::Mul;\r\n\r\ntrait Muls <Rhs>:\r\n\tMul <Rhs, Output = <Self as Muls <Rhs>>::Output>\r\n\t+ for <'a> Mul <&'a Rhs, Output = <Self as Muls <Rhs>>::Output>\r\n{\r\n\ttype Output;\r\n}\r\n\r\nimpl <T, R, O> Muls <R> for T\r\nwhere\r\n\tT: Mul <R, Output = O>,\r\n\tT: for <'a> Mul <&'a R, Output = O>\r\n{\r\n\ttype Output = O;\r\n}\r\n\r\ntrait ScalarMulCore\r\n{\r\n\ttype Scalar;\r\n\r\n\tfn scalar_mul (&self, rhs: &Self::Scalar) -> Self;\r\n\r\n\tfn scalar_mul_in_place (&mut self, rhs: &Self::Scalar);\r\n}\r\n\r\nstruct Wrap <T> {x: T}\r\n\r\nimpl <T> ScalarMulCore for Wrap <T>\r\nwhere\r\n\tT: Muls <T, Output = T>,\r\n\tfor <'a> &'a T: Muls <T, Output = T>\r\n{\r\n\ttype Scalar = T;\r\n\r\n\tfn scalar_mul (&self, rhs: &Self::Scalar) -> Self\r\n\t{\r\n\t\tSelf {x: (&self . x) * rhs}\r\n\t}\r\n\r\n\tfn scalar_mul_in_place (&mut self, rhs: &Self::Scalar)\r\n\t{\r\n\t\tself . x = (&self . x) * rhs;\r\n\t}\r\n}\r\n\r\nimpl <T> Mul <<Wrap <T> as ScalarMulCore>::Scalar> for Wrap <T>\r\nwhere Wrap <T>: ScalarMulCore\r\n{\r\n\ttype Output = Wrap <T>;\r\n\r\n\tfn mul (mut self, rhs: <Wrap <T> as ScalarMulCore>::Scalar) -> Self::Output\r\n\t{\r\n\t\tself . x = (&self . x) * rhs;\r\n\t\tself\r\n\t}\r\n}\r\n\r\nimpl <T> Mul <<Wrap <T> as ScalarMulCore>::Scalar> for &Wrap <T>\r\nwhere Wrap <T>: ScalarMulCore\r\n{\r\n\ttype Output = Wrap <T>;\r\n\r\n\tfn mul (self, rhs: <Wrap <T> as ScalarMulCore>::Scalar) -> Self::Output\r\n\t{\r\n\t\tWrap::<T> {x: (&self . x) * rhs}\r\n\t}\r\n}\r\n\r\nfn main ()\r\n{\r\n}\r\n```\r\n\r\nI expected to see this happen: The code compiles.\r\n\r\nInstead, this happened: The code does not compile.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.69.0-nightly (ef934d9b6 2023-02-08)\r\nbinary: rustc\r\ncommit-hash: ef934d9b632b8ac00276558824664c104b92b5f0\r\ncommit-date: 2023-02-08\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.69.0-nightly\r\nLLVM version: 15.0.7\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n   Compiling mwe v0.1.0 (/home/zistack/Projects/mwe)\r\nerror[E0275]: overflow evaluating the requirement `for<'a> &'a Simd<_, _>: Mul<Simd<_, _>>`\r\n  --> src/main.rs:47:56\r\n   |\r\n47 | impl <T> Mul <<Wrap <T> as ScalarMulCore>::Scalar> for Wrap <T>\r\n   |                                                        ^^^^^^^^\r\n   |\r\n   = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`mwe`)\r\nnote: required for `&'a Simd<_, _>` to implement `for<'a> Muls<Simd<_, _>>`\r\n  --> src/main.rs:10:16\r\n   |\r\n10 | impl <T, R, O> Muls <R> for T\r\n   |                ^^^^^^^^     ^\r\n11 | where\r\n12 |     T: Mul <R, Output = O>,\r\n   |                ---------- unsatisfied trait bound introduced here\r\nnote: required for `Wrap<Simd<_, _>>` to implement `ScalarMulCore`\r\n  --> src/main.rs:29:10\r\n   |\r\n29 | impl <T> ScalarMulCore for Wrap <T>\r\n   |          ^^^^^^^^^^^^^     ^^^^^^^^\r\n...\r\n32 |     for <'a> &'a T: Muls <T, Output = T>\r\n   |                              ---------- unsatisfied trait bound introduced here\r\n   = note: 62 redundant requirements hidden\r\n   = note: required for `Wrap<_>` to implement `ScalarMulCore`\r\n\r\nFor more information about this error, try `rustc --explain E0275`.\r\nerror: could not compile `mwe` due to previous error\r\n```\r\n\r\n</p>\r\n</details>\r\nCommenting out the second implementation of `Mul` lets the code compile.  So does manually inlining the `ScalarMulCore` trait definition into the `Mul` implementations.  These facts, along with the fact that `rustc` is complaining about a type which I never asked for (and which should work anyways) make me think that this is a compiler bug.  I would appreciate confirmation on this from a rust expert, though.\r\n\r\nThere is a chance that this issue is related to #107837, as the nature of the failure looks very similar to me.  Other versions of this that I've tried buried the `Muls` traits in another layer of traits (`MulsToSelf`, `MulsToOther`), which changes the error message to something complaining about `Wrap <Wrap <T>>` and such.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107850/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107850/timeline", "performed_via_github_app": null, "state_reason": null}