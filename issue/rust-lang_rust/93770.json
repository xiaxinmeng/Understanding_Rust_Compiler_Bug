{"url": "https://api.github.com/repos/rust-lang/rust/issues/93770", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93770/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93770/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93770/events", "html_url": "https://github.com/rust-lang/rust/issues/93770", "id": 1127098960, "node_id": "I_kwDOAAsO6M5DLipQ", "number": 93770, "title": "Nested mutex guards with dropping and re-assigning confuse the borrow checker", "user": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-02-08T10:59:23Z", "updated_at": "2023-05-11T13:57:10Z", "closed_at": "2023-05-11T13:57:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried this (minimalized) code:\r\n\r\n```rust\r\nuse std::sync::Mutex;\r\n\r\nstruct A {\r\n    b: Mutex<B>,\r\n}\r\n\r\nstruct B {\r\n    c: Mutex<C>,\r\n}\r\n\r\nstruct C {\r\n    x: i32,\r\n}\r\n\r\nfn main() {\r\n    let a = A {\r\n        b: Mutex::new(B {\r\n            c: Mutex::new(C { x: 1 }),\r\n        }),\r\n    };\r\n\r\n    let mut b = a.b.lock().unwrap();\r\n    let mut c = b.c.lock().unwrap();\r\n\r\n    drop(c);\r\n    drop(b);\r\n\r\n    b = a.b.lock().unwrap();\r\n    c = b.c.lock().unwrap();\r\n\r\n    println!(\"{}\", c.x);\r\n}\r\n```\r\n\r\nI expected to see this happen: code compiles fine\r\n\r\nInstead, this happened:\r\n\r\n```\r\nerror[E0505]: cannot move out of `b` because it is borrowed\r\n  --> src/main.rs:26:10\r\n   |\r\n23 |     let mut c = b.c.lock().unwrap();\r\n   |                 - borrow of `b` occurs here\r\n...\r\n26 |     drop(b);\r\n   |          ^ move out of `b` occurs here\r\n...\r\n29 |     c = b.c.lock().unwrap();\r\n   |     - borrow might be used here, when `c` is dropped and runs the `Drop` code for type `MutexGuard`\r\n\r\nerror[E0506]: cannot assign to `b` because it is borrowed\r\n   --> src/main.rs:28:5\r\n    |\r\n23  |     let mut c = b.c.lock().unwrap();\r\n    |                 - borrow of `b` occurs here\r\n...\r\n28  |     b = a.b.lock().unwrap();\r\n    |     ^ assignment to borrowed `b` occurs here\r\n29  |     c = b.c.lock().unwrap();\r\n    |     - borrow might be used here, when `c` is dropped and runs the `Drop` code for type `MutexGuard`\r\n    |\r\n    = note: borrow occurs due to deref coercion to `B`\r\nnote: deref defined here\r\n   --> /home/slomo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sync/mutex.rs:470:5\r\n    |\r\n470 |     type Target = T;\r\n    |     ^^^^^^^^^^^^^^^^\r\n```\r\n\r\nRemoving the usage of `c` in the very end (the `println!`) makes the code compile as expected, but that's of course not useful:\r\n```diff\r\n--- a/src/main.rs\r\n+++ b/src/main.rs\r\n@@ -28,5 +28,5 @@ fn main() {\r\n     b = a.b.lock().unwrap();\r\n     c = b.c.lock().unwrap();\r\n \r\n-    println!(\"{}\", c.x);\r\n+    //println!(\"{}\", c.x);\r\n }\r\n```\r\n\r\nSimilarly not dropping `b` and reassigning it later also compiles fine (i.e. the dropping/reassigning of `c` can stay around):\r\n\r\n```diff\r\n--- a/src/main.rs\r\n+++ b/src/main.rs\r\n@@ -23,9 +23,9 @@ fn main() {\r\n     let mut c = b.c.lock().unwrap();\r\n \r\n     drop(c);\r\n-    drop(b);\r\n+    //drop(b);\r\n \r\n-    b = a.b.lock().unwrap();\r\n+    //b = a.b.lock().unwrap();\r\n     c = b.c.lock().unwrap();\r\n \r\n     println!(\"{}\", c.x);\r\n```\r\n\r\nThe borrow of `b` should've been released by the `drop(c)` but that's apparently not the case for some reason.\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.58.1 (db9d1b20b 2022-01-20)\r\nbinary: rustc\r\ncommit-hash: db9d1b20bba1968c1ec1fc49616d4742c1725b4b\r\ncommit-date: 2022-01-20\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.58.1\r\nLLVM version: 13.0.0\r\n```", "closed_by": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93770/timeline", "performed_via_github_app": null, "state_reason": "completed"}