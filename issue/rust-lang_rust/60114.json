{"url": "https://api.github.com/repos/rust-lang/rust/issues/60114", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/60114/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/60114/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/60114/events", "html_url": "https://github.com/rust-lang/rust/issues/60114", "id": 435218643, "node_id": "MDU6SXNzdWU0MzUyMTg2NDM=", "number": 60114, "title": "Weird unreleased memory issue when reading from a file", "user": {"login": "MoSal", "id": 5631214, "node_id": "MDQ6VXNlcjU2MzEyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5631214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MoSal", "html_url": "https://github.com/MoSal", "followers_url": "https://api.github.com/users/MoSal/followers", "following_url": "https://api.github.com/users/MoSal/following{/other_user}", "gists_url": "https://api.github.com/users/MoSal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MoSal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MoSal/subscriptions", "organizations_url": "https://api.github.com/users/MoSal/orgs", "repos_url": "https://api.github.com/users/MoSal/repos", "events_url": "https://api.github.com/users/MoSal/events{/privacy}", "received_events_url": "https://api.github.com/users/MoSal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-04-19T15:42:17Z", "updated_at": "2019-06-21T14:47:57Z", "closed_at": "2019-06-21T14:47:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Test files\r\n\r\n```\r\ndd if=/dev/urandom of=/tmp/31M bs=1M count=31\r\ndd if=/dev/urandom of=/tmp/32M bs=1M count=32\r\n\r\n```\r\n\r\n# Compiler\r\n```\r\nrustc 1.36.0-nightly (5d20ff4d2 2019-04-18)\r\ncargo 1.36.0-nightly (b6581d383 2019-04-16)\r\n```\r\n\r\n# Code\r\n\r\n## `bad.rs`\r\n``` rust\r\nuse std::error::Error;\r\nuse std::thread;\r\nuse std::time::Duration;\r\n\r\nuse std::fs::File;\r\nuse std::io::Read;\r\n\r\nfn from_file(file_path: &str) -> Result<Vec<u8>, Box<dyn Error>> {\r\n    let mut f = File::open(file_path)?;\r\n    // Emitating fs::read()\r\n    let size = f.metadata().map(|m| m.len() as usize + 1).unwrap_or(0);\r\n    let mut bytes = Vec::with_capacity(size);\r\n    f.read_to_end(&mut bytes)?;\r\n    Ok(bytes)\r\n}\r\n\r\nfn main() {\r\n    let file_path = std::env::args().nth(1).expect(\"No file path arg passed\");\r\n    for i in 1..=8 {\r\n        // Running process should be occupying almost the same small amount of memory here, no?\r\n        eprintln!(\"sleeping {}\", i);\r\n        thread::sleep(Duration::new(3, 0));\r\n        eprintln!(\"resuming\");\r\n        let _bytes = from_file(&file_path).unwrap();\r\n    }\r\n}\r\n```\r\n\r\n## `good.rs` (only difference is lack of extra allocated byte)\r\n``` rust\r\nuse std::error::Error;\r\nuse std::thread;\r\nuse std::time::Duration;\r\n\r\nuse std::fs::File;\r\nuse std::io::Read;\r\n\r\nfn from_file(file_path: &str) -> Result<Vec<u8>, Box<dyn Error>> {\r\n    let mut f = File::open(file_path)?;\r\n    // Emitating fs::read(), but without the +1 extra byte in buffer\r\n    let size = f.metadata().map(|m| m.len() as usize).unwrap_or(0);\r\n    let mut bytes = Vec::with_capacity(size);\r\n    f.read_to_end(&mut bytes)?;\r\n    Ok(bytes)\r\n}\r\n\r\nfn main() {\r\n    let file_path = std::env::args().nth(1).expect(\"No file path arg passed\");\r\n    for i in 1..=8 {\r\n        // Running process should be occupying almost the same small amount of memory here, no?\r\n        eprintln!(\"sleeping {}\", i);\r\n        thread::sleep(Duration::new(3, 0));\r\n        eprintln!(\"resuming\");\r\n        let _bytes = from_file(&file_path).unwrap();\r\n    }\r\n}\r\n```\r\n\r\n# Building\r\n\r\n```\r\ncargo build\r\nRUSTFLAGS=\"-Z sanitizer=leak\" cargo build --target x86_64-unknown-linux-gnu\r\n```\r\n\r\n# Testing\r\n\r\n## Bug\r\n\r\n```\r\n./target/debug/bad /tmp/31M\r\n```\r\n\r\n## No Bug\r\n\r\n```\r\n./target/debug/bad /tmp/32M\r\n./target/debug/good /tmp/31M\r\n./target/x86_64-unknown-linux-gnu/debug/bad /tmp/31M\r\n```\r\n\r\n# What's Wrong\r\n\r\nWatch memory usage not going down after \"sleeping 3\".", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/60114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/60114/timeline", "performed_via_github_app": null, "state_reason": "completed"}