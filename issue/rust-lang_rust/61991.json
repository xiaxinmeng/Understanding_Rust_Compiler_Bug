{"url": "https://api.github.com/repos/rust-lang/rust/issues/61991", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61991/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61991/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61991/events", "html_url": "https://github.com/rust-lang/rust/issues/61991", "id": 458640597, "node_id": "MDU6SXNzdWU0NTg2NDA1OTc=", "number": 61991, "title": "Can't infer type after collecting an iterator of futures", "user": {"login": "ibaryshnikov", "id": 9951788, "node_id": "MDQ6VXNlcjk5NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/9951788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibaryshnikov", "html_url": "https://github.com/ibaryshnikov", "followers_url": "https://api.github.com/users/ibaryshnikov/followers", "following_url": "https://api.github.com/users/ibaryshnikov/following{/other_user}", "gists_url": "https://api.github.com/users/ibaryshnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibaryshnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibaryshnikov/subscriptions", "organizations_url": "https://api.github.com/users/ibaryshnikov/orgs", "repos_url": "https://api.github.com/users/ibaryshnikov/repos", "events_url": "https://api.github.com/users/ibaryshnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/ibaryshnikov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-20T12:53:37Z", "updated_at": "2019-06-24T18:26:30Z", "closed_at": "2019-06-24T18:26:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "This code fails to compile:\r\n```rust\r\n#![feature(async_await)]\r\n\r\nuse futures::future::join_all;\r\n\r\nasync fn do_work(n: u32) -> u32 {\r\n    n + 1\r\n}\r\n\r\n#[runtime::main]\r\nasync fn main() {\r\n    let data = vec![1, 2, 3];\r\n    let futures_to_wait = data\r\n        .iter()\r\n        .map(|value: &u32| do_work(*value))\r\n        .collect();\r\n    let results = join_all(futures_to_wait).await;\r\n    println!(\"all work is done, results are {:?}\", results);\r\n}\r\n\r\n```\r\nError message:\r\n```\r\nerror[E0698]: type inside `async` object must be known in this context\r\n  --> src/main.rs:16:19\r\n   |\r\n16 |     let results = join_all(futures_to_wait).await;\r\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type\r\n   |\r\nnote: the type is part of the `async` object because of this `await`\r\n  --> src/main.rs:16:19\r\n   |\r\n16 |     let results = join_all(futures_to_wait).await;\r\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0698`.\r\n```\r\n\r\nMore details:\r\n```\r\nrustc --version\r\nrustc 1.37.0-nightly (2fe7b3383 2019-06-19)\r\n```\r\n\r\n```toml\r\nedition = \"2018\"\r\n\r\n[dependencies]\r\nruntime = \"0.3.0-alpha.5\"\r\nfutures-preview = \"0.3.0-alpha.16\"\r\n```\r\n\r\nAnnotating variable type fixes the error: `let futures_to_wait: Vec<_> = ...`\r\n\r\n@Nemo157 kindly created a playground example with similar error (though a bit different, mentioning generators instead of async objects: `type inside generator must be known in this context`)\r\nhttps://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=deaf09047f91d098705bcf90f894fd72", "closed_by": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61991/timeline", "performed_via_github_app": null, "state_reason": "completed"}