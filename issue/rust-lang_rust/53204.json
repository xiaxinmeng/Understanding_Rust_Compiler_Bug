{"url": "https://api.github.com/repos/rust-lang/rust/issues/53204", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53204/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53204/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53204/events", "html_url": "https://github.com/rust-lang/rust/issues/53204", "id": 348879980, "node_id": "MDU6SXNzdWUzNDg4Nzk5ODA=", "number": 53204, "title": "LLVM5: Failed to strip malformed debug info", "user": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-08T20:28:55Z", "updated_at": "2018-08-14T19:39:03Z", "closed_at": "2018-08-14T19:39:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In Rust 1.28, building the full compiler with full debuginfo (as we do in Fedora) sees debuginfo errors with external LLVM5 (Fedora 27 and EPEL7).  Fedora 28+ with LLVM6 looks fine.\r\n\r\nFor example, from the logs in [this failed build](https://koji.fedoraproject.org/koji/taskinfo?taskID=28928380):\r\n\r\n```text\r\nBuilding stage1 std artifacts (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\r\n...\r\nfragment covers entire variable\r\n  tail call void @llvm.dbg.value(metadata i64* %2, i64 0, metadata !5287, metadata !401), !dbg !5300\r\n!5287 = !DILocalVariable(name: \"global_s\", scope: !5288, file: !99, line: 1, type: !5196, align: 8)\r\n!401 = !DIExpression(DW_OP_LLVM_fragment, 0, 64)\r\nfragment is larger than or outside of variable\r\n  tail call void @llvm.dbg.value(metadata i64* %3, i64 0, metadata !5287, metadata !404), !dbg !5300\r\n!5287 = !DILocalVariable(name: \"global_s\", scope: !5288, file: !99, line: 1, type: !5196, align: 8)\r\n!404 = !DIExpression(DW_OP_LLVM_fragment, 64, 64)\r\nfragment covers entire variable\r\n  tail call void @llvm.dbg.value(metadata i64* %2, i64 0, metadata !5868, metadata !401), !dbg !5879\r\n!5868 = !DILocalVariable(name: \"global_s\", scope: !5869, file: !99, line: 1, type: !5778, align: 8)\r\n!401 = !DIExpression(DW_OP_LLVM_fragment, 0, 64)\r\nfragment is larger than or outside of variable\r\n  tail call void @llvm.dbg.value(metadata i64* %3, i64 0, metadata !5868, metadata !404), !dbg !5879\r\n!5868 = !DILocalVariable(name: \"global_s\", scope: !5869, file: !99, line: 1, type: !5778, align: 8)\r\n!404 = !DIExpression(DW_OP_LLVM_fragment, 64, 64)\r\nfragment is larger than or outside of variable\r\n  call void @llvm.dbg.value(metadata { {}*, {}* }* %35, i64 0, metadata !8646, metadata !1442), !dbg !8637\r\n!8646 = !DILocalVariable(name: \"format\", scope: !8638, file: !307, line: 1, type: !411, align: 1)\r\n!1442 = !DIExpression(DW_OP_LLVM_fragment, 0, 64)\r\nfragment is larger than or outside of variable\r\n  call void @llvm.dbg.value(metadata i64* %37, i64 0, metadata !8646, metadata !1445), !dbg !8637\r\n!8646 = !DILocalVariable(name: \"format\", scope: !8638, file: !307, line: 1, type: !411, align: 1)\r\n!1445 = !DIExpression(DW_OP_LLVM_fragment, 64, 64)\r\nfragment is larger than or outside of variable\r\n  call void @llvm.dbg.value(metadata i8** %40, i64 0, metadata !8646, metadata !8667), !dbg !8637\r\n!8646 = !DILocalVariable(name: \"format\", scope: !8638, file: !307, line: 1, type: !411, align: 1)\r\n!8667 = !DIExpression(DW_OP_LLVM_fragment, 128, 64)\r\nfragment is larger than or outside of variable\r\n  call void @llvm.dbg.value(metadata i8* %42, i64 0, metadata !8646, metadata !8668), !dbg !8637\r\n!8646 = !DILocalVariable(name: \"format\", scope: !8638, file: !307, line: 1, type: !411, align: 1)\r\n!8668 = !DIExpression(DW_OP_LLVM_fragment, 192, 64)\r\nfragment covers entire variable\r\n  tail call void @llvm.dbg.value(metadata i64* %2, i64 0, metadata !5527, metadata !389), !dbg !5540\r\n!5527 = !DILocalVariable(name: \"global_s\", scope: !5528, file: !87, line: 1, type: !5426, align: 8)\r\n!389 = !DIExpression(DW_OP_LLVM_fragment, 0, 64)\r\nfragment is larger than or outside of variable\r\n  tail call void @llvm.dbg.value(metadata i64* %3, i64 0, metadata !5527, metadata !392), !dbg !5540\r\n!5527 = !DILocalVariable(name: \"global_s\", scope: !5528, file: !87, line: 1, type: !5426, align: 8)\r\n!392 = !DIExpression(DW_OP_LLVM_fragment, 64, 64)\r\nfragment covers entire variable\r\n  tail call void @llvm.dbg.value(metadata i64* %2, i64 0, metadata !6274, metadata !389), !dbg !6285\r\n!6274 = !DILocalVariable(name: \"global_s\", scope: !6275, file: !87, line: 1, type: !6182, align: 8)\r\n!389 = !DIExpression(DW_OP_LLVM_fragment, 0, 64)\r\nfragment is larger than or outside of variable\r\n  tail call void @llvm.dbg.value(metadata i64* %3, i64 0, metadata !6274, metadata !392), !dbg !6285\r\n!6274 = !DILocalVariable(name: \"global_s\", scope: !6275, file: !87, line: 1, type: !6182, align: 8)\r\n!392 = !DIExpression(DW_OP_LLVM_fragment, 64, 64)\r\nwarning: ignoring invalid debug info in std5-25124471f09f727a26c64c3844c8702a.rs\r\nDICompileUnit not listed in llvm.dbg.cu\r\n!98 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !99, producer: \"clang LLVM (rustc version 1.28.0)\", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !100, globals: !201)\r\nwarning: ignoring invalid debug info in std5-25124471f09f727a26c64c3844c8702a.rs\r\nLLVM ERROR: Failed to strip malformed debug info\r\nerror: Could not compile `std`.\r\n```\r\n\r\nI believe this is the effect of #50949, per @eddyb:\r\n> (The second commit passes tests locally but might not on older LLVM versions)\r\n\r\nI reverted that commit da579ef locally, and it looks like this has fixed it.  Maybe we can keep that hack in place *just* for LLVM5? (skipping it on LLVM6+)", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53204/timeline", "performed_via_github_app": null, "state_reason": "completed"}