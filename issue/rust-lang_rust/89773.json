{"url": "https://api.github.com/repos/rust-lang/rust/issues/89773", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89773/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89773/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89773/events", "html_url": "https://github.com/rust-lang/rust/issues/89773", "id": 1022872854, "node_id": "I_kwDOAAsO6M48980W", "number": 89773, "title": "Confusing/unhelpful errors trying to map over a tree structure", "user": {"login": "nelhage", "id": 16725, "node_id": "MDQ6VXNlcjE2NzI1", "avatar_url": "https://avatars.githubusercontent.com/u/16725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nelhage", "html_url": "https://github.com/nelhage", "followers_url": "https://api.github.com/users/nelhage/followers", "following_url": "https://api.github.com/users/nelhage/following{/other_user}", "gists_url": "https://api.github.com/users/nelhage/gists{/gist_id}", "starred_url": "https://api.github.com/users/nelhage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nelhage/subscriptions", "organizations_url": "https://api.github.com/users/nelhage/orgs", "repos_url": "https://api.github.com/users/nelhage/repos", "events_url": "https://api.github.com/users/nelhage/events{/privacy}", "received_events_url": "https://api.github.com/users/nelhage/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-10-11T15:51:49Z", "updated_at": "2021-12-23T03:19:47Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "(Filing at [request of @estebank on Twitter](https://twitter.com/ekuber/status/1447509333185548290); I ran into these three years ago, but I just did a run through the playground and nothing relevant has changed).\r\n\r\nI wrote up an experience report a few year ago of trying to map a function over a binary tree in Rust, coming to Rust with experience in a bunch of languages, including C++. I made a bunch of \"rookie mistakes\", but at basically every step the compiler was unhelpful, often suggesting actively incorrect fixes.\r\n\r\nThe full saga is here: \r\n\r\nhttps://nelhagedebugsshit.tumblr.com/post/173312515628/experience-report-trying-to-map-over-over-a\r\n\r\nThis might be multiple issues, but I don't have a sense of which of these are or aren't tractable to improve.\r\n\r\nI'll highlight two that seem tractable to me as an outsider; I'm happy to split these into separate issues on request.\r\n\r\n## Dropped `&mut` in \"did you mean\" for incorrect function signature:\r\n\r\nGiven the following code: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=eeef2edaef89405092831df76448110d\r\n\r\n```rust\r\nfn map_tree<F>(tree: &Rc<Tree>, &mut f: F) -> Rc<Tree>\r\nwhere\r\n    F: FnMut(Rc<Tree>) -> Rc<Tree>,\r\n{\r\n    match &**tree {\r\n        &Tree::Leaf(_) => f(Rc::clone(tree)),\r\n        &Tree::Node(ref l, ref r) => Rc::new(Tree::Node(map_tree(&l, f), map_tree(&r, f))),\r\n    }\r\n}\r\n```\r\n\r\n(Note that the author has written `&mut f: F`, but means `f: &mut F` -- an easy mistake IMO)\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:9:33\r\n  |\r\n9 | fn map_tree<F>(tree: &Rc<Tree>, &mut f: F) -> Rc<Tree>\r\n  |             -                   ^^^^^^---\r\n  |             |                   |       |\r\n  |             |                   |       expected due to this\r\n  |             |                   expected type parameter `F`, found `&mut _`\r\n  |             |                   help: did you mean `f`: `&F`\r\n  |             this type parameter\r\n  |\r\n  = note: expected type parameter `F`\r\n          found mutable reference `&mut _`\r\n```\r\n\r\nThe suggestion has dropped the `&mut` entirely; If the compiler had been able to suggest `f: &mut F`, that would have been correct and much more helpful to me.\r\n\r\n## Confusing error when failing to borrow a closure:\r\n\r\nGiven this Rust code: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=cbff4c84eb58a289b9e9c75234d22d58\r\n```rust\r\nfn map_tree<F>(tree: &Rc<Tree>, f: &mut F) -> Rc<Tree>\r\nwhere\r\n    F: FnMut(Rc<Tree>) -> Rc<Tree>,\r\n{ \u2026 }\r\n\r\npub fn main() {\r\n    let tree = Rc::new(Tree::Node(Rc::new(Tree::Leaf(0)), Rc::new(Tree::Leaf(1))));\r\n    let mut sum = 0;\r\n    map_tree(&tree, |node| {\r\n        match *node {\r\n            Tree::Leaf(i) => sum = sum + i,\r\n            _ => unreachable!(),\r\n        }\r\n        node\r\n    });\r\n    print!(\"sum={}\", sum);\r\n}\r\n```\r\n\r\nThe compiler currently prints:\r\n\r\n```\r\nerror[E0282]: type annotations needed\r\n  --> src/main.rs:22:22\r\n   |\r\n22 |     map_tree(&tree, |node| {\r\n   |                      ^^^^ consider giving this closure parameter a type\r\n   |\r\n   = note: type must be known at this point\r\n```\r\n\r\nThe correct fix here, as far as I can tell, is *not* to add a type, but simply to mutably borrow the closure: \r\n\r\n```rust\r\n    map_tree(&tree, &mut |node| {\r\n    \u2026\r\n    }\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89773/timeline", "performed_via_github_app": null, "state_reason": null}