{"url": "https://api.github.com/repos/rust-lang/rust/issues/96194", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96194/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96194/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96194/events", "html_url": "https://github.com/rust-lang/rust/issues/96194", "id": 1207536881, "node_id": "I_kwDOAAsO6M5H-Yzx", "number": 96194, "title": "nested RPIT and HRTB: unclear semantics and future incompatibility", "user": {"login": "aliemjay", "id": 28497461, "node_id": "MDQ6VXNlcjI4NDk3NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/28497461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aliemjay", "html_url": "https://github.com/aliemjay", "followers_url": "https://api.github.com/users/aliemjay/followers", "following_url": "https://api.github.com/users/aliemjay/following{/other_user}", "gists_url": "https://api.github.com/users/aliemjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/aliemjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aliemjay/subscriptions", "organizations_url": "https://api.github.com/users/aliemjay/orgs", "repos_url": "https://api.github.com/users/aliemjay/repos", "events_url": "https://api.github.com/users/aliemjay/events{/privacy}", "received_events_url": "https://api.github.com/users/aliemjay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2022-04-18T23:01:19Z", "updated_at": "2022-11-11T15:20:15Z", "closed_at": "2022-11-11T15:20:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "([Original post in internals forum](https://internals.rust-lang.org/t/semantics-of-nested-impl-trait-hrtbs/16492))\r\n\r\nGiven the following code (stable sin 1.30!):\r\n```rust\r\nfn f() -> impl for<'a> Tr<'a, Assoc = impl Copy> {}\r\n```\r\nIt is undocumented whether the inner existential type, `impl Copy`, is allowed to access `'a` or not. In other words, it is equivalent to which of the following?\r\n```rust\r\ntype Assoc = impl Copy;\r\nfn f() -> impl for<'a> Tr<'a, Assoc = Assoc> {}\r\n```\r\nor, \r\n```rust\r\ntype Assoc<'a> = impl Copy;\r\nfn f() -> impl for<'a> Tr<'a, Assoc = Assoc<'a>> {}\r\n```\r\n\r\n## On stable\r\n\r\nThe behavior in current stable is consistent with the first  as shown by:\r\n\r\n- If `Assoc` uses the lifetime `'a`, the compiler complains about `Implementation is not general enough` as expected.\r\n-  The following test on the return type passes\r\n\r\n```rust\r\nfn assert_unique_assoc<Assoc>(_: impl for<'a> Tr<'a, Assoc = Assoc>) {}\r\nfn main() { assert_unique_assoc(f()); }\r\n```\r\nIt looks like this was unintentionally stabilized and changing that now would break the above test (unless we leak the fact that `impl Copy` captures `'a` ??).\r\n\r\n## On beta\r\n\r\n#94081 makes #88236 pass but that seems to be inconsistent with the behavior in stable:\r\n\r\n- If `Assoc` uses `'a`, it gives ICE, see #95647.\r\n- Using the above test on the return type fails, which is quite surprising since removing the lifetime from `impl Copy + 'a` makes the test pass. [playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=f913122ccd585c1b8e5a363a1641e5f4). And I believe adding a lifetime bound shouldn't change the semantics in this regard.\r\n- It would be a backward compatibility risk if we ever want to reject the code in the future.\r\n\r\n## Meta\r\n\r\nstable version: `1.60.0`\r\nbeta version: `1.61.0-beta.3 2022-04-17 2431a974c2dcf82ba513)`\r\n\r\n@rustbot label +T-Lang +A-impl-Trait", "closed_by": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96194/timeline", "performed_via_github_app": null, "state_reason": "completed"}