{"url": "https://api.github.com/repos/rust-lang/rust/issues/62640", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62640/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62640/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62640/events", "html_url": "https://github.com/rust-lang/rust/issues/62640", "id": 467639184, "node_id": "MDU6SXNzdWU0Njc2MzkxODQ=", "number": 62640, "title": "Type inference of lambda arguments interferes with borrow checking", "user": {"login": "sigfriedmcwild", "id": 30221514, "node_id": "MDQ6VXNlcjMwMjIxNTE0", "avatar_url": "https://avatars.githubusercontent.com/u/30221514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sigfriedmcwild", "html_url": "https://github.com/sigfriedmcwild", "followers_url": "https://api.github.com/users/sigfriedmcwild/followers", "following_url": "https://api.github.com/users/sigfriedmcwild/following{/other_user}", "gists_url": "https://api.github.com/users/sigfriedmcwild/gists{/gist_id}", "starred_url": "https://api.github.com/users/sigfriedmcwild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sigfriedmcwild/subscriptions", "organizations_url": "https://api.github.com/users/sigfriedmcwild/orgs", "repos_url": "https://api.github.com/users/sigfriedmcwild/repos", "events_url": "https://api.github.com/users/sigfriedmcwild/events{/privacy}", "received_events_url": "https://api.github.com/users/sigfriedmcwild/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-12T23:46:44Z", "updated_at": "2023-01-26T12:27:59Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "It looks like type inference of arguments to a lambda function somehow interferes with borrow checking.\r\n\r\nI tried this code: ([playground link](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=6b018776f5b9055e27776a0072530c0b))\r\n\r\n```rust\r\nstruct Bar {}\r\n\r\nstruct Foo {\r\n    a: Bar,\r\n}\r\n\r\nimpl Foo {\r\n    fn one(&self) -> Option<&Bar> {\r\n        return Some(&self.a);\r\n    }\r\n\r\n    fn two(&mut self) -> Option<Bar> {\r\n        return Some(Bar {});\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let mut f = Foo { a: Bar {} };\r\n\r\n    let test = |_t| {};\r\n\r\n    match f.one() {\r\n        Some(a) => test(a),\r\n        None => {}\r\n    }\r\n\r\n    match f.two() {\r\n        Some(ref b) => test(b),\r\n        None => {}\r\n    }\r\n}\r\n```\r\n\r\n## I expected to see this happen:\r\nA successful build\r\n\r\n## Instead, this happened:\r\nCompilation failed with this error:\r\n```\r\nerror[E0502]: cannot borrow `f` as mutable because it is also borrowed as immutable\r\n  --> src/lib.rs:27:11\r\n   |\r\n22 |     match f.one() {\r\n   |           - immutable borrow occurs here\r\n...\r\n27 |     match f.two() {\r\n   |           ^^^^^^^ mutable borrow occurs here\r\n28 |         Some(ref b) => test(b),\r\n   |                        ---- immutable borrow later used here\r\n```\r\n\r\nNote that changing line 20 to\r\n```rust\r\nlet test = |_t: &Bar| {};\r\n```\r\nresults in a successful compilation ([playground link](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=9a4f487d98be2a891d86236c8551c6a1))\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.36.0 (a53f9df32 2019-07-03)\r\nbinary: rustc\r\ncommit-hash: a53f9df32fbb0b5f4382caaad8f1a46f36ea887c\r\ncommit-date: 2019-07-03\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.36.0\r\nLLVM version: 8.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62640/timeline", "performed_via_github_app": null, "state_reason": null}