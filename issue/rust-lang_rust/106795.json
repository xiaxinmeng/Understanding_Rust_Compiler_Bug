{"url": "https://api.github.com/repos/rust-lang/rust/issues/106795", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/106795/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/106795/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/106795/events", "html_url": "https://github.com/rust-lang/rust/issues/106795", "id": 1531761619, "node_id": "I_kwDOAAsO6M5bTNPT", "number": 106795, "title": "Building core::sync::atomic for BPF target fails", "user": {"login": "vadorovsky", "id": 34685103, "node_id": "MDQ6VXNlcjM0Njg1MTAz", "avatar_url": "https://avatars.githubusercontent.com/u/34685103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadorovsky", "html_url": "https://github.com/vadorovsky", "followers_url": "https://api.github.com/users/vadorovsky/followers", "following_url": "https://api.github.com/users/vadorovsky/following{/other_user}", "gists_url": "https://api.github.com/users/vadorovsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadorovsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadorovsky/subscriptions", "organizations_url": "https://api.github.com/users/vadorovsky/orgs", "repos_url": "https://api.github.com/users/vadorovsky/repos", "events_url": "https://api.github.com/users/vadorovsky/events{/privacy}", "received_events_url": "https://api.github.com/users/vadorovsky/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-01-13T06:13:28Z", "updated_at": "2023-01-27T09:01:06Z", "closed_at": "2023-01-27T09:01:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nStarting from the following commit and PR, which enabled CAS for BPF target and got included in nightly:\r\n\r\nhttps://github.com/rust-lang/rust/pull/105708\r\nhttps://github.com/rust-lang/rust/commit/11331b1030fba551df4c7fc2babd44496040030f\r\n\r\n\r\nbuilding the rustc library with the following config:\r\n\r\n```\r\n[build]\r\ntarget = [\"x86_64-unknown-linux-gnu\", \"bpfel-unknown-none\"]\r\n```\r\n\r\nfails with:\r\n\r\nhttps://gist.github.com/vadorovsky/c9a3892a85ea4425082d91a729ffcfb2\r\n\r\nA similar failure can be observed when building an eBPF program based on https://github.com/aya-rs/aya:\r\n\r\nhttps://gist.github.com/vadorovsky/7aaf1bbbb78ab0c0371fe65d90105007\r\n\r\nThat error occurs, because all these macros and functions which \"can't be found\", are annotated with `#[cfg(target_has_atomic = \"8\")]` or `#[cfg(target_has_atomic_load_store = \"8\")]`.\r\n\r\nExample:\r\n\r\nhttps://github.com/rust-lang/rust/blob/bfffe406fbcabb37b95779f2d252c4a277191e0d/library/core/src/sync/atomic.rs#L3014-L3016\r\n\r\nThose annotations prevent those macros and functions to be built for BPF, because we enable only 64-bit atomics for BPF:\r\n\r\nhttps://github.com/rust-lang/rust/blob/bfffe406fbcabb37b95779f2d252c4a277191e0d/compiler/rustc_target/src/spec/bpf_base.rs#L25-L26\r\n\r\nA quick fix to make the build fix successful is changing annotations to:\r\n\r\n```rust\r\n#[cfg(any(\r\n    target_has_atomic = \"8\",\r\n    target_has_atomic = \"16\",\r\n    target_has_atomic = \"32\",\r\n    target_has_atomic = \"64\",\r\n    target_has_atomic = \"128\",\r\n    target_has_atomic = \"ptr\"\r\n))]\r\n```\r\n\r\nI made this change on my local branch:\r\n\r\nhttps://github.com/vadorovsky/rust/commit/041978bde712998308203c02715f046e31bd2f47\r\n\r\nIt fixes the core library build, however, it doesn't make the most of atomic operations actually working. I made a test Aya-based project where I tried to use all atomic operations on `AtomicU64`:\r\n\r\nhttps://github.com/vadorovsky/aya-examples/tree/main/atomic\r\nhttps://github.com/vadorovsky/aya-examples/blob/main/atomic/atomic-ebpf/src/main.rs\r\n\r\nBut pretty much every atomic operation except `store`, `swap` and assigning to mutable raw pointer triggers various bpf-linker / LLVM errors like this one (when using `fetch_add`):\r\n\r\n```\r\n     Running `rustc --crate-name atomic --edition=2021 src/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --diagnostic-width=274 --crate-type bin --emit=dep-info,link -C opt-level=3 -C panic=abort -C lto -C codegen-units=1 -C metadata=0df4b88cd767cdfe -C extra-filename=-0df4b88cd767cdfe --out-dir /home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps --target bpfel-unknown-none -L dependency=/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps -L dependency=/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/debug/deps --extern atomic_common=/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps/libatomic_common-9766a80d5f618b6a.rlib --extern aya_bpf=/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps/libaya_bpf-6a252bb26304b8e6.rlib --extern aya_log_ebpf=/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps/libaya_log_ebpf-5apf/../target/bpfel-unknown-none/debug/deps/libcore-88a9f41520fe0405.rlib' -Z unstable-options`\r\nerror: linking with `bpf-linker` failed: signal: 6 (SIGABRT) (core dumped)\r\n  |\r\n  = note: LC_ALL=\"C\" PATH=\"/home/vadorovsky/repos/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/bin:/home/vadorovsky/.npm-global/bin:/home/vadorovsky/solana/bin:/home/vadorovsky/.local/share/solana/install/active_release/bin:/home/vadorovsky/.local/llvm/bin:/home/vadorovsky/go/bin:/home/vadorovsky/.cargo/bin:/home/vadorovsky/miniconda3/bin:/home/vadorovsky/miniconda3/condabin:/home/vadorovsky/.cargo/bin:/home/vadorovsky/.local/bin:/home/vadorovsky/bin:/usr/local/bin:/usr/bin:/usr/bin\" VSLANG=\"1033\" \"bpf-linker\" \"--export-symbols\" \"/tmp/rustcOxihKW/symbols\" \"/tmp/rustcOxihKW/symbols.o\" \"/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps/atomic-0df4b88cd767cdfe.atomic.9f2f50cf-cgu.0.rcgu.o\" \"-L\" \"/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps\" \"-L\" \"/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/debug/deps\" \"-L\" \"/home/vadorovsky/repos/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/bpfel-unknown-none/lib\" \"--cpu\" \"generic\" \"--cpu-features\" \"\" \"-L\" \"/home/vadorovsky/repos/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/bpfel-unknown-none/lib\" \"-o\" \"/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps/atomic-0df4b88cd767cdfe\" \"-O3\" \"--debug\"\r\n  = note: 06:08:59 [ERROR] fatal error: \"Cannot select: t88: i64,ch = AtomicLoad<(dereferenceable load monotonic (s64) from %ir.7)> t1211, FrameIndex:i64<5>\\n  t87: i64 = FrameIndex<5>\\nIn function: atomic\"\r\n          PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.\r\n          Stack dump:\r\n          0.    Running pass 'Function Pass Manager' on module 'atomic-0df4b88cd767cdfe'.\r\n          1.    Running pass 'BPF DAG->DAG Pattern Instruction Selection' on function '@atomic'\r\n          06:08:59 [ INFO] command line: \"bpf-linker --export-symbols /tmp/rustcOxihKW/symbols /tmp/rustcOxihKW/symbols.o /home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps/atomic-0df4b88cd767cdfe.atomic.9f2f50cf-cgu.0.rcgu.o -L /home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps -L /home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/debug/deps -L /home/vadorovsky/repos/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/bpfel-unknown-none/lib --cpu generic --cpu-features  -L /home/vadorovsky/repos/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/bpfel-unknown-none/lib -o /home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps/atomic-0df4b88cd767cdfe -O3 --debug\"\r\n          06:08:59 [ INFO] LLVM command line: [\"bpf-linker\", \"--bpf-expand-memcpy-in-order\"]\r\n          06:08:59 [ INFO] linking file \"/tmp/rustcOxihKW/symbols.o\" type elf\r\n          06:08:59 [ WARN] ignoring file \"/tmp/rustcOxihKW/symbols.o\": no embedded bitcode\r\n          06:08:59 [ INFO] linking file \"/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps/atomic-0df4b88cd767cdfe.atomic.9f2f50cf-cgu.0.rcgu.o\" type bitcode\r\n          06:08:59 [ INFO] emitting LLVMObjectFile to \"/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps/atomic-0df4b88cd767cdfe\"\r\n```\r\n\r\nOr this one (when using `compare_exchange`):\r\n\r\n```\r\n     Running `rustc --crate-name atomic --edition=2021 src/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --diagnostic-width=274 --crate-type bin --emit=dep-info,link -C opt-level=3 -C panic=abort -C lto -C codegen-units=1 -C metadata=0df4b88cd767cdfe -C extra-filename=-0df4b88cd767cdfe --out-dir /home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps --target bpfel-unknown-none -L dependency=/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps -L dependency=/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/debug/deps --extern atomic_common=/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps/libatomic_common-9766a80d5f618b6a.rlib --extern aya_bpf=/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps/libaya_bpf-6a252bb26304b8e6.rlib --extern aya_log_ebpf=/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps/libaya_log_ebpf-5apf/../target/bpfel-unknown-none/debug/deps/libcore-88a9f41520fe0405.rlib' -Z unstable-options`\r\nerror: linking with `bpf-linker` failed: signal: 6 (SIGABRT) (core dumped)\r\n  |\r\n  = note: LC_ALL=\"C\" PATH=\"/home/vadorovsky/repos/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/bin:/home/vadorovsky/.npm-global/bin:/home/vadorovsky/solana/bin:/home/vadorovsky/.local/share/solana/install/active_release/bin:/home/vadorovsky/.local/llvm/bin:/home/vadorovsky/go/bin:/home/vadorovsky/.cargo/bin:/home/vadorovsky/miniconda3/bin:/home/vadorovsky/miniconda3/condabin:/home/vadorovsky/.cargo/bin:/home/vadorovsky/.local/bin:/home/vadorovsky/bin:/usr/local/bin:/usr/bin:/usr/bin\" VSLANG=\"1033\" \"bpf-linker\" \"--export-symbols\" \"/tmp/rustcAlOvk2/symbols\" \"/tmp/rustcAlOvk2/symbols.o\" \"/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps/atomic-0df4b88cd767cdfe.atomic.9f2f50cf-cgu.0.rcgu.o\" \"-L\" \"/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps\" \"-L\" \"/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/debug/deps\" \"-L\" \"/home/vadorovsky/repos/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/bpfel-unknown-none/lib\" \"--cpu\" \"generic\" \"--cpu-features\" \"\" \"-L\" \"/home/vadorovsky/repos/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/bpfel-unknown-none/lib\" \"-o\" \"/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps/atomic-0df4b88cd767cdfe\" \"-O3\" \"--debug\"\r\n  = note: 06:10:02 [ERROR] fatal error: \"Cannot select: t88: i64,ch = AtomicLoad<(dereferenceable load monotonic (s64) from %ir.7)> t1211, FrameIndex:i64<5>\\n  t87: i64 = FrameIndex<5>\\nIn function: atomic\"\r\n          PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.\r\n          Stack dump:\r\n          0.    Running pass 'Function Pass Manager' on module 'atomic-0df4b88cd767cdfe'.\r\n          1.    Running pass 'BPF DAG->DAG Pattern Instruction Selection' on function '@atomic'\r\n          06:10:02 [ INFO] command line: \"bpf-linker --export-symbols /tmp/rustcAlOvk2/symbols /tmp/rustcAlOvk2/symbols.o /home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps/atomic-0df4b88cd767cdfe.atomic.9f2f50cf-cgu.0.rcgu.o -L /home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps -L /home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/debug/deps -L /home/vadorovsky/repos/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/bpfel-unknown-none/lib --cpu generic --cpu-features  -L /home/vadorovsky/repos/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/bpfel-unknown-none/lib -o /home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps/atomic-0df4b88cd767cdfe -O3 --debug\"\r\n          06:10:02 [ INFO] LLVM command line: [\"bpf-linker\", \"--bpf-expand-memcpy-in-order\"]\r\n          06:10:02 [ INFO] linking file \"/tmp/rustcAlOvk2/symbols.o\" type elf\r\n          06:10:02 [ WARN] ignoring file \"/tmp/rustcAlOvk2/symbols.o\": no embedded bitcode\r\n          06:10:02 [ INFO] linking file \"/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps/atomic-0df4b88cd767cdfe.atomic.9f2f50cf-cgu.0.rcgu.o\" type bitcode\r\n          06:10:02 [ INFO] emitting LLVMObjectFile to \"/home/vadorovsky/repos/aya-examples/atomic/atomic-ebpf/../target/bpfel-unknown-none/debug/deps/atomic-0df4b88cd767cdfe\"\r\n```\r\n\r\nI didn't investigate the bpf-linker / LLVM failures deeper yet. It might be related to the fact that BPF target is calling intrinsics manually and was written only with clang in mind. But again, I need more time to investigate.\r\n\r\nBut at this point I'm quite confident that we should just revert https://github.com/rust-lang/rust/pull/105708 and reconsider such change after we make sure it actually works and all the mentioned issues are fixed.\r\n\r\n/cc @tomerze @alessandrod", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/106795/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/106795/timeline", "performed_via_github_app": null, "state_reason": "completed"}