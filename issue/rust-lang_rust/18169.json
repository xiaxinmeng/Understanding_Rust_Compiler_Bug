{"url": "https://api.github.com/repos/rust-lang/rust/issues/18169", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/18169/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/18169/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/18169/events", "html_url": "https://github.com/rust-lang/rust/issues/18169", "id": 46218995, "node_id": "MDU6SXNzdWU0NjIxODk5NQ==", "number": 18169, "title": "Guide: Enums chapter contains unexplained match keyword", "user": {"login": "lgrahl", "id": 1793755, "node_id": "MDQ6VXNlcjE3OTM3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1793755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgrahl", "html_url": "https://github.com/lgrahl", "followers_url": "https://api.github.com/users/lgrahl/followers", "following_url": "https://api.github.com/users/lgrahl/following{/other_user}", "gists_url": "https://api.github.com/users/lgrahl/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgrahl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgrahl/subscriptions", "organizations_url": "https://api.github.com/users/lgrahl/orgs", "repos_url": "https://api.github.com/users/lgrahl/repos", "events_url": "https://api.github.com/users/lgrahl/events{/privacy}", "received_events_url": "https://api.github.com/users/lgrahl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-10-19T21:58:32Z", "updated_at": "2014-11-05T17:42:01Z", "closed_at": "2014-11-04T18:41:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "See: https://github.com/rust-lang/rust/blob/master/src/doc/guide.md#enums\n\nThe `match` keyword hasn't been introduced until that point but it's used in the code example which is confusing.\n\nI believe an if/else solution would be more explanatory, especially because the reader probably wants to see how to unpack the `Value` variant of `enum OptionalInt`. The same enum could then be used with the `match` keyword in the beginning of the next chapter (`Match`).\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/18169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/18169/timeline", "performed_via_github_app": null, "state_reason": "completed"}