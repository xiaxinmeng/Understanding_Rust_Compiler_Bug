{"url": "https://api.github.com/repos/rust-lang/rust/issues/72542", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72542/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72542/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72542/events", "html_url": "https://github.com/rust-lang/rust/issues/72542", "id": 623907372, "node_id": "MDU6SXNzdWU2MjM5MDczNzI=", "number": 72542, "title": "ICE: type parameter `T/#0` (T/0) out of range when substituting (root type=Some(for<'r, 's> fn(&'r T, &'s T))) substs=[]", "user": {"login": "xarvic", "id": 62311633, "node_id": "MDQ6VXNlcjYyMzExNjMz", "avatar_url": "https://avatars.githubusercontent.com/u/62311633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xarvic", "html_url": "https://github.com/xarvic", "followers_url": "https://api.github.com/users/xarvic/followers", "following_url": "https://api.github.com/users/xarvic/following{/other_user}", "gists_url": "https://api.github.com/users/xarvic/gists{/gist_id}", "starred_url": "https://api.github.com/users/xarvic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xarvic/subscriptions", "organizations_url": "https://api.github.com/users/xarvic/orgs", "repos_url": "https://api.github.com/users/xarvic/repos", "events_url": "https://api.github.com/users/xarvic/events{/privacy}", "received_events_url": "https://api.github.com/users/xarvic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-24T17:23:09Z", "updated_at": "2020-05-24T17:25:39Z", "closed_at": "2020-05-24T17:25:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(const_generics)]\r\n#![feature(const_compare_raw_pointers)]\r\n\r\n\r\nstruct A<T, const f: fn(&T, &T)> {\r\n    _t: T,\r\n}\r\n\r\nimpl<T, const f: fn(&T, &T)> A<T, f> {\r\n    fn new(_t: T) -> Self{\r\n        Self{_t}\r\n    }\r\n}\r\n```\r\n\r\n### Meta\r\n\r\nThe Bug appears on the nightly channel\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.42.0 (b8cedc004 2020-03-09)\r\nbinary: rustc\r\ncommit-hash: b8cedc00407a4c56a3bda1ed605c6fc166655447\r\ncommit-date: 2020-03-09\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.42.0\r\nLLVM version: 9.0\r\n\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: src/librustc/ty/subst.rs:565: type parameter `T/#0` (T/0) out of range when substituting (root type=Some(for<'r, 's> fn(&'r T, &'s T))) substs=[]\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nCompiling sorted_collections v0.1.0 (/home/christoph/Workspaces/Rust/sorted_collections)\r\n     Running `rustc --crate-name sorted_collections --edition=2018 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C debuginfo=2 -C metadata=0139a7a01410b323 -C extra-filename=-0139a7a01410b323 --out-dir /home/christoph/Workspaces/Rust/sorted_collections/target/debug/deps -C incremental=/home/christoph/Workspaces/Rust/sorted_collections/target/debug/incremental -L dependency=/home/christoph/Workspaces/Rust/sorted_collections/target/debug/deps`\r\nwarning: the feature `const_generics` is incomplete and may cause the compiler to crash\r\n --> src/lib.rs:1:12\r\n  |\r\n1 | #![feature(const_generics)]\r\n  |            ^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n\r\nerror: internal compiler error: src/librustc/ty/subst.rs:565: type parameter `T/#0` (T/0) out of range when substituting (root type=Some(for<'r, 's> fn(&'r T, &'s T))) substs=[]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', <::std::macros::panic macros>:2:4\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:77\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1052\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1426\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:476\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::span_bug\r\n  14: rustc_errors::Handler::span_bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_opt\r\n  18: rustc::util::bug::opt_span_bug_fmt\r\n  19: rustc::util::bug::span_bug_fmt\r\n  20: <rustc::ty::subst::SubstFolder as rustc::ty::fold::TypeFolder>::fold_ty\r\n  21: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable for &rustc::ty::TyS>::super_fold_with\r\n  22: <rustc::ty::subst::SubstFolder as rustc::ty::fold::TypeFolder>::fold_ty\r\n  23: rustc::ty::structural_impls::fold_list\r\n  24: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable for &rustc::ty::TyS>::super_fold_with\r\n  25: <rustc::ty::subst::SubstFolder as rustc::ty::fold::TypeFolder>::fold_ty\r\n  26: rustc_typeck::check::FnCtxt::instantiate_value_path\r\n  27: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  28: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  29: rustc::ty::context::tls::with_context::{{closure}}\r\n  30: rustc_typeck::check::typeck_tables_of\r\n  31: rustc::ty::query::__query_compute::typeck_tables_of\r\n  32: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_tables_of>::compute\r\n  33: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  34: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  35: rustc::ty::<impl rustc::ty::context::TyCtxt>::par_body_owners\r\n  36: rustc_typeck::check::typeck_item_bodies\r\n  37: rustc::ty::query::__query_compute::typeck_item_bodies\r\n  38: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  39: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  40: rustc_typeck::check_crate\r\n  41: rustc_interface::passes::analysis\r\n  42: rustc::ty::query::__query_compute::analysis\r\n  43: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  44: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  45: rustc::ty::context::tls::enter_global\r\n  46: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  47: scoped_tls::ScopedKey<T>::set\r\n  48: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.42.0-nightly (698fcd38f 2020-01-26) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck_tables_of] processing `A::<T, f>::{{constant}}#0`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `sorted_collections`.\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --crate-name sorted_collections --edition=2018 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C debuginfo=2 -C metadata=0139a7a01410b323 -C extra-filename=-0139a7a01410b323 --out-dir /home/christoph/Workspaces/Rust/sorted_collections/target/debug/deps -C incremental=/home/christoph/Workspaces/Rust/sorted_collections/target/debug/incremental -L dependency=/home/christoph/Workspaces/Rust/sorted_collections/target/debug/deps` (exit code: 101)\r\n\r\nProcess finished with exit code 101\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72542/timeline", "performed_via_github_app": null, "state_reason": "completed"}