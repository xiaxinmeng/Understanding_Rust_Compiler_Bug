{"url": "https://api.github.com/repos/rust-lang/rust/issues/84173", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84173/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84173/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84173/events", "html_url": "https://github.com/rust-lang/rust/issues/84173", "id": 857307267, "node_id": "MDU6SXNzdWU4NTczMDcyNjc=", "number": 84173, "title": "[ER] Two ideas for stdlib sorting", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-04-13T20:44:07Z", "updated_at": "2023-03-30T20:19:33Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "1) The first idea is to integrate in the stdlib sort a radix sort. It's mean to be used only in basic cases where it can generate or use standard Radixable trait for an algorithm like this one. The current stdlib algorithm is to be used as fall-back. The radix sorting could be quite useful because it covers many basic sorting cases:\r\nhttps://crates.io/crates/voracious_radix_sort\r\n\r\n2) Code like this generates about 740 asm instructions with about seven slice bound tests:\r\n```rust\r\npub fn foo(p: &mut [u32]) {\r\n    p.sort();\r\n}\r\n```\r\nWhile this generates about 1300 lines of asm with about 16 bound tests/bound asserts:\r\n```rust\r\npub fn foo(p: &mut [u32]) {\r\n    p.sort_unstable();\r\n}\r\n```\r\nPerhaps rearranging things a little inside the sorting there are ways to reduce that number of bound tests a bit (without introducing new unsafe code).\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84173/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84173/timeline", "performed_via_github_app": null, "state_reason": null}