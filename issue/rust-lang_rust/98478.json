{"url": "https://api.github.com/repos/rust-lang/rust/issues/98478", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98478/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98478/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98478/events", "html_url": "https://github.com/rust-lang/rust/issues/98478", "id": 1284415222, "node_id": "I_kwDOAAsO6M5Mjp72", "number": 98478, "title": "`default impl SuperTrait for impl SubTrait` => trait requirement evaluation overflow", "user": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472579062, "node_id": "MDU6TGFiZWwxNDcyNTc5MDYy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-specialization", "name": "F-specialization", "color": "f9c0cc", "default": false, "description": "`#![feature(specialization)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-06-25T02:40:03Z", "updated_at": "2022-06-25T02:40:32Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\n### I tried this code:\r\n\r\n```rust\r\n#![feature(specialization)]\r\n\r\ntrait Spam {}\r\ntrait SpamMore: Spam {}\r\n\r\ndefault impl<T> Spam for T where T: SpamMore {}\r\n\r\nstruct A;\r\nimpl SpamMore for A {}\r\n```\r\n\r\n#### I expected to see this happen:\r\n\r\nAn error such as\r\n\r\n```\r\nerror[[E0277]](https://doc.rust-lang.org/nightly/error-index.html#E0277): the trait bound `A: Spam` is not satisfied\r\n --> src/lib.rs:9:6\r\n  |\r\n9 | impl SpamMore for A {}\r\n  |      ^^^^^^^^ the trait `Spam` is not implemented for `A`\r\n  |\r\nnote: required by a bound in `SpamMore`\r\n --> src/lib.rs:4:17\r\n  |\r\n4 | trait SpamMore: Spam {}\r\n  |                 ^^^^ required by this bound in `SpamMore`\r\n```\r\n\r\nperhaps with a hint that a `default impl` applies, but does not actually fulfill the trait requirement.\r\n\r\n#### Instead, this happened:\r\n\r\nTrait requirement evaluation overflowed.\r\n\r\n```\r\nerror[[E0275]](https://doc.rust-lang.org/nightly/error-index.html#E0275): overflow evaluating the requirement `A: Spam`\r\n --> src/lib.rs:9:6\r\n  |\r\n9 | impl SpamMore for A {}\r\n  |      ^^^^^^^^\r\n  |\r\nnote: required by a bound in `SpamMore`\r\n --> src/lib.rs:4:17\r\n  |\r\n4 | trait SpamMore: Spam {}\r\n  |                 ^^^^ required by this bound in `SpamMore`\r\n```\r\n\r\nIt seems that the compiler sees the obligation `A: SpamMore -> A: Spam`, then incorrectly considers the obligation `A: Spam -> A: SpamMore` to apply the `default impl`... even though a) this is the root bound we're trying to solve for (), and more importantly b) the implication `A: SpamMore -> A: Spam` doesn't even apply, since `default impl` doesn't satisfy the trait without a concrete `impl`.\r\n\r\nAn equivalent pattern using `min_specialization` (a `default fn` and not `default impl`) compiles cleanly:\r\n\r\n```\r\n#![feature(min_specialization)]\r\n\r\ntrait Spam {\r\n    fn f();\r\n}\r\ntrait SpamMore: Spam {}\r\n\r\nimpl<T> Spam for T where T: SpamMore {\r\n    default fn f() {}\r\n}\r\n\r\nstruct A;\r\nimpl SpamMore for A {}\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\nplayground 1.63.0-nightly (2022-06-23 43347397f7c5ca9a670a)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98478/timeline", "performed_via_github_app": null, "state_reason": null}