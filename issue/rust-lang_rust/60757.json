{"url": "https://api.github.com/repos/rust-lang/rust/issues/60757", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/60757/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/60757/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/60757/events", "html_url": "https://github.com/rust-lang/rust/issues/60757", "id": 443107527, "node_id": "MDU6SXNzdWU0NDMxMDc1Mjc=", "number": 60757, "title": "improper_ctypes should not suggest reprs that lead to errors", "user": {"login": "hanna-kruppe", "id": 2311707, "node_id": "MDQ6VXNlcjIzMTE3MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2311707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanna-kruppe", "html_url": "https://github.com/hanna-kruppe", "followers_url": "https://api.github.com/users/hanna-kruppe/followers", "following_url": "https://api.github.com/users/hanna-kruppe/following{/other_user}", "gists_url": "https://api.github.com/users/hanna-kruppe/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanna-kruppe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanna-kruppe/subscriptions", "organizations_url": "https://api.github.com/users/hanna-kruppe/orgs", "repos_url": "https://api.github.com/users/hanna-kruppe/repos", "events_url": "https://api.github.com/users/hanna-kruppe/events{/privacy}", "received_events_url": "https://api.github.com/users/hanna-kruppe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-12T13:56:08Z", "updated_at": "2019-05-12T14:04:24Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently when the lint finds a repr(Rust) struct, enum, or union that is not FFI-safe, it generally suggests some repr attributes that could be applied to a struct/enum/union that would make it FFI-safe, which is nice. However, it bases these suggestions only on the kind of data type, without checking whether the attribute could actually be applied to the specific type.\r\n\r\nFor example, when compiling this code:\r\n\r\n```rust\r\nstruct Rgb(u8, u8, u8);\r\n\r\nextern \"C\" {\r\n    fn get_color(name: *const u8) -> Rgb;\r\n}\r\n```\r\n\r\nThe compiler suggests `repr(transparent)` alongside `repr(C)`, but applying this suggestion will cause an error because the struct has multiple non-ZST fields.\r\n\r\nArguably the compiler should first check whether the suggestion \"makes sense\", and not suggest `repr(transparent)` in cases such as this one. Although it probably *should* continue to suggesting `repr(C)` even if that would then lead to another improper_ctypes about a *field* of the affected type (the user might want to repeatedly apply those suggestions to mark all necessary types as `repr(C)`).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/60757/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/60757/timeline", "performed_via_github_app": null, "state_reason": null}