{"url": "https://api.github.com/repos/rust-lang/rust/issues/112007", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112007/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112007/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112007/events", "html_url": "https://github.com/rust-lang/rust/issues/112007", "id": 1728212005, "node_id": "I_kwDOAAsO6M5nAmwl", "number": 112007, "title": "rustc shows expanded `writeln!` macro in code suggestion", "user": {"login": "HayleyDeckers", "id": 5599209, "node_id": "MDQ6VXNlcjU1OTkyMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5599209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HayleyDeckers", "html_url": "https://github.com/HayleyDeckers", "followers_url": "https://api.github.com/users/HayleyDeckers/followers", "following_url": "https://api.github.com/users/HayleyDeckers/following{/other_user}", "gists_url": "https://api.github.com/users/HayleyDeckers/gists{/gist_id}", "starred_url": "https://api.github.com/users/HayleyDeckers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HayleyDeckers/subscriptions", "organizations_url": "https://api.github.com/users/HayleyDeckers/orgs", "repos_url": "https://api.github.com/users/HayleyDeckers/repos", "events_url": "https://api.github.com/users/HayleyDeckers/events{/privacy}", "received_events_url": "https://api.github.com/users/HayleyDeckers/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-05-26T20:32:07Z", "updated_at": "2023-05-28T15:39:37Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\nfn bug_report<W: std::fmt::Write>(w: &mut W) -> std::fmt::Result {\r\n    if true {\r\n        writeln!(w, \"`;?` here ->\")?;\r\n    } else {\r\n        writeln!(w, \"but not here\")\r\n    }\r\n    //intended code was `if [...] { writeln!(...) } else {writeln!(...)}?;`\r\n    Ok(())\r\n}\r\n```\r\n\r\n\r\n### Current output\r\n\r\n```Shell\r\nerror[E0308]: mismatched types\r\n --> bug_report\\src\\lib.rs:5:9\r\n  |\r\n2 | /     if true {\r\n3 | |         writeln!(w, \"`;?` here ->\")?;\r\n4 | |     } else {\r\n5 | |         writeln!(w, \"but not here\")\r\n  | |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found `Result<(), Error>`\r\n6 | |     }\r\n  | |_____- expected this to be `()`\r\n  |\r\n  = note: expected unit type `()`\r\n                  found enum `Result<(), std::fmt::Error>`\r\n  = note: this error originates in the macro `writeln` (in Nightly builds, run with -Z macro-backtrace for more info)\r\nhelp: consider using a semicolon here\r\n  |\r\n6 |     };\r\n  |      +\r\nhelp: you might have meant to return this value\r\n --> C:\\Users\\hayle\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs:557:9\r\n  |\r\n55|         return $dst.write_fmt($crate::format_args_nl!($($arg)*));\r\n  |         ++++++                                                  +\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: could not compile `bug_report` (lib) due to previous error\r\n```\r\n\r\n\r\n### Desired output\r\n\r\n```Shell\r\nerror[E0308]: mismatched types\r\n --> bug_report\\src\\lib.rs:5:9\r\n  |\r\n2 | /     if true {\r\n3 | |         writeln!(w, \"`;?` here ->\")?;\r\n4 | |     } else {\r\n5 | |         writeln!(w, \"but not here\")\r\n  | |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found `Result<(), Error>`\r\n6 | |     }\r\n  | |_____- expected this to be `()`\r\n  |\r\n  = note: expected unit type `()`\r\n                  found enum `Result<(), std::fmt::Error>`\r\n  = note: this error originates in the macro `writeln` (in Nightly builds, run with -Z macro-backtrace for more info)\r\nhelp: consider using a semicolon here\r\n  |\r\n6 |     };\r\n  |      +\r\nhelp: you might have meant to return this value\r\n --> bug_report\\src\\lib.rs:5:9\r\n  |\r\n55|         return writeln!(w, \"but not here\");\r\n  |         ++++++                            +\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: could not compile `bug_report` (lib) due to previous error\r\n```\r\n\r\n\r\n### Rationale and extra context\r\n\r\nIt might be better still if it suggest adding `?;` in the second branch, same as in the first. Or even a single `?;`  for the whole if-else, but whatever it suggests it probably shouldn't output the macro internals.\r\n\r\n### Other cases\r\n\r\n\r\nIf you leave off the `Ok(())` at the end, it will warn you of the extra `;?` in the first branch, as expected, instead.\r\n\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112007/timeline", "performed_via_github_app": null, "state_reason": null}