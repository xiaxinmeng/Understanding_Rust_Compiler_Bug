{"url": "https://api.github.com/repos/rust-lang/rust/issues/22450", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/22450/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/22450/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/22450/events", "html_url": "https://github.com/rust-lang/rust/issues/22450", "id": 57954535, "node_id": "MDU6SXNzdWU1Nzk1NDUzNQ==", "number": 22450, "title": "pretty printer fails to include necessary parens around some block expressions", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108435, "node_id": "MDU6TGFiZWwxMDg0MzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-pretty", "name": "A-pretty", "color": "f7e101", "default": false, "description": "Area: Pretty printing."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-02-17T17:27:58Z", "updated_at": "2020-04-18T16:36:03Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The pretty printer fails to include necessary parens around some block expressions\n\nIn particular, consider this code (stored in `/tmp/demo5.rs`):\n\n``` rust\n#![allow(unused_parens)]\n\nmacro_rules! add1_block {\n    ($e:expr) => {\n        { let val = 1; $e + val }\n    }\n}\n\nmacro_rules! add1_paren_block {\n    ($e:expr) => {\n        ({ let val = 1; $e + val })\n    }\n}\n\nfn main() {\n    let w = add1_block!(2);\n    let x = { add1_block!(3) as u64 };\n    let y = add1_paren_block!(4);\n    let z = { add1_paren_block!(5) as u64 };\n\n    println!(\"w: {} x: {} y: {} z: {}\", w, x, y, z);\n}\n```\n\nThe above code compiles and runs, and you can even run it through the non-expanding pretty printer and compile _that_ and run it:\n\n```\n% ./x86_64-apple-darwin/stage1/bin/rustc  /tmp/demo5.rs && ./demo5\nw: 3 x: 4 y: 5 z: 6\n% rustc -Z unstable-options --pretty=normal /tmp/demo5.rs -o /tmp/demo5_normal.rs && rustc /tmp/demo5_normal.rs && ./demo5_normal \nw: 3 x: 4 y: 5 z: 6\n%  \n```\n\nHowever, if you apply `--pretty=expanded`, then the generated source fails to compile:\n\n```\n% rustc -Z unstable-options --pretty=expanded /tmp/demo5.rs -o /tmp/demo5_expanded.rs && rustc /tmp/demo5_expanded.rs && ./demo5_expanded\n/tmp/demo5_expanded.rs:12:40: 12:42 error: expected identifier, found keyword `as`\n/tmp/demo5_expanded.rs:12     let x = { { let val = 1; 3 + val } as u64 };\n                                                                 ^~\n/tmp/demo5_expanded.rs:12:43: 12:46 error: expected one of `!`, `.`, `::`, `;`, `{`, `}`, or an operator, found `u64`\n/tmp/demo5_expanded.rs:12     let x = { { let val = 1; 3 + val } as u64 };\n                                                                    ^~~\n% \n```\n\nThe reason for this is that the use of `add1_block` within a cast as the last expression of a block is interpreted as a statement, rather than part of an expression.  So you need to wrap it in parentheses (the way that `add1_paren_block` does) if you want the generated output source to be robust enough to be recompiled.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/22450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/22450/timeline", "performed_via_github_app": null, "state_reason": null}