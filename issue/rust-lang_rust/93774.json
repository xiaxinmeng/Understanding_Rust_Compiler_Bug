{"url": "https://api.github.com/repos/rust-lang/rust/issues/93774", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93774/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93774/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93774/events", "html_url": "https://github.com/rust-lang/rust/issues/93774", "id": 1127263622, "node_id": "I_kwDOAAsO6M5DMK2G", "number": 93774, "title": "Compiler (effectively) hangs, regression from overflow error", "user": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 3116384996, "node_id": "MDU6TGFiZWwzMTE2Mzg0OTk2", "url": "https://api.github.com/repos/rust-lang/rust/labels/perf-regression", "name": "perf-regression", "color": "e4008a", "default": false, "description": "Performance regressions"}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-02-08T13:32:18Z", "updated_at": "2022-11-11T15:29:51Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "```rs\r\npub enum Either<L, R> {\r\n    Left(L),\r\n    Right(R),\r\n}\r\n\r\npub trait HasItem<'a, _Constraint = &'a Self> {\r\n    type Item;\r\n}\r\n\r\npub type Item<'a, Self_> = <Self_ as HasItem<'a>>::Item;\r\n\r\npub trait LendingIterator: for<'a> HasItem<'a> {\r\n    fn next(&mut self) -> Option<Item<'_, Self>>;\r\n}\r\n\r\nimpl<'a, A: 'a, B: 'a> HasItem<'a> for Either<A, B>\r\nwhere A: LendingIterator, B: LendingIterator,\r\n for<'b> B: HasItem<'b, Item = Item<'b, Self>>\r\n{\r\n    type Item = Item<'a, Self>;\r\n}\r\n\r\nimpl<A, B> LendingIterator for Either<A, B>\r\nwhere A: LendingIterator, B: LendingIterator,\r\n for<'b> B: HasItem<'b, Item = Item<'b, Self>>\r\n{\r\n    fn next(&mut self) -> Option<Item<'_, Self>> {\r\n        match self {\r\n            Either::Left(iter) => iter.next(),\r\n            Either::Right(iter) => iter.next(),\r\n        }\r\n    }\r\n}\r\n```\r\nhangs since `1.56`\r\nerror [on `1.55`](https://godbolt.org/z/Er3v1xrPd)\r\n```\r\nerror[E0275]: overflow evaluating the requirement `for<'b> <B as HasItem<'b>>::Item == <Either<A, B> as HasItem<'b>>::Item`\r\n  --> <source>:16:24\r\n   |\r\n6  | pub trait HasItem<'a, _Constraint = &'a Self> {\r\n   | --------------------------------------------- required by this bound in `HasItem`\r\n...\r\n16 | impl<'a, A: 'a, B: 'a> HasItem<'a> for Either<A, B>\r\n   |                        ^^^^^^^^^^^\r\n   |\r\nnote: required because of the requirements on the impl of `HasItem<'a>` for `Either<A, B>`\r\n  --> <source>:16:24\r\n   |\r\n16 | impl<'a, A: 'a, B: 'a> HasItem<'a> for Either<A, B>\r\n   |                        ^^^^^^^^^^^     ^^^^^^^^^^^^\r\n\r\nerror[E0275]: overflow evaluating the requirement `for<'b> <B as HasItem<'b>>::Item == <Either<A, B> as HasItem<'b>>::Item`\r\n  --> <source>:23:12\r\n   |\r\n12 | pub trait LendingIterator: for<'a> HasItem<'a> {\r\n   |                            ------------------- required by this bound in `LendingIterator`\r\n...\r\n23 | impl<A, B> LendingIterator for Either<A, B>\r\n   |            ^^^^^^^^^^^^^^^\r\n   |\r\nnote: required because of the requirements on the impl of `for<'a> HasItem<'a>` for `Either<A, B>`\r\n  --> <source>:16:24\r\n   |\r\n16 | impl<'a, A: 'a, B: 'a> HasItem<'a> for Either<A, B>\r\n   |                        ^^^^^^^^^^^     ^^^^^^^^^^^^\r\n\r\nerror[E0275]: overflow evaluating the requirement `for<'b> <B as HasItem<'b>>::Item == <Either<A, B> as HasItem<'b>>::Item`\r\n  --> <source>:20:5\r\n   |\r\n20 |     type Item = Item<'a, Self>;\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\nnote: required because of the requirements on the impl of `HasItem<'a>` for `Either<A, B>`\r\n  --> <source>:16:24\r\n   |\r\n16 | impl<'a, A: 'a, B: 'a> HasItem<'a> for Either<A, B>\r\n   |                        ^^^^^^^^^^^     ^^^^^^^^^^^^\r\n\r\nerror[E0275]: overflow evaluating the requirement `for<'b> <B as HasItem<'b>>::Item == <Either<A, B> as HasItem<'b>>::Item`\r\n  --> <source>:27:8\r\n   |\r\n27 |     fn next(&mut self) -> Option<Item<'_, Self>> {\r\n   |        ^^^^\r\n   |\r\nnote: required because of the requirements on the impl of `HasItem<'_>` for `Either<A, B>`\r\n  --> <source>:16:24\r\n   |\r\n16 | impl<'a, A: 'a, B: 'a> HasItem<'a> for Either<A, B>\r\n   |                        ^^^^^^^^^^^     ^^^^^^^^^^^^\r\n\r\nerror: aborting due to 4 previous errors\r\n```\r\n\r\n@rustbot label I-hang, regression-from-stable-to-stable, A-traits, A-lifetimes, E-needs-bisection, T-compiler\r\n\r\n<hr>\r\n\r\n_Edit:_\r\n\r\n\u201cHangs\u201d means \u201cruns for a wile on 100% CPU until I cancel it\u201d. Who knows if it would ever terminate\u2026 actually, maybe I should test smaller recursion limits.\r\n\r\nNote that this code example is _not expected_ to compile successfully. [Here\u2019s a version that works / with the mistakes fixed](https://godbolt.org/z/cehTbs9cz). (The fixed version also works on some older Rust versions, including `1.55` and older.)\r\n\r\n\r\n<hr>\r\n\r\n_Edit2:_ Using smaller limits (like\u2026 around `#![recursion_limit = \"14\"]` it starts getting unbearably slow) reveals that this is apparently more like exponential-time slowdown rather than \u201cactual\u201d hanging.\r\n\r\n@rustbot label -I-hang, +I-compiletime, +perf-regression", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93774/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93774/timeline", "performed_via_github_app": null, "state_reason": null}