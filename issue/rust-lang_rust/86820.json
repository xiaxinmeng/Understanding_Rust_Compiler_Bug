{"url": "https://api.github.com/repos/rust-lang/rust/issues/86820", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86820/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86820/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86820/events", "html_url": "https://github.com/rust-lang/rust/issues/86820", "id": 936052362, "node_id": "MDU6SXNzdWU5MzYwNTIzNjI=", "number": 86820, "title": "int.rs:230:13: expected int of size 8, but got size 1", "user": {"login": "alan-signal", "id": 48254818, "node_id": "MDQ6VXNlcjQ4MjU0ODE4", "avatar_url": "https://avatars.githubusercontent.com/u/48254818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alan-signal", "html_url": "https://github.com/alan-signal", "followers_url": "https://api.github.com/users/alan-signal/followers", "following_url": "https://api.github.com/users/alan-signal/following{/other_user}", "gists_url": "https://api.github.com/users/alan-signal/gists{/gist_id}", "starred_url": "https://api.github.com/users/alan-signal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alan-signal/subscriptions", "organizations_url": "https://api.github.com/users/alan-signal/orgs", "repos_url": "https://api.github.com/users/alan-signal/repos", "events_url": "https://api.github.com/users/alan-signal/events{/privacy}", "received_events_url": "https://api.github.com/users/alan-signal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-07-02T20:32:19Z", "updated_at": "2021-07-18T10:42:21Z", "closed_at": "2021-07-18T10:42:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nuse std::ops::BitAnd;\r\n\r\n#[cfg(test)]\r\nmod tests {\r\n    use super::*;\r\n\r\n    #[test]\r\n    fn is_set() {\r\n        assert!(0xffu8.bit::<0>());\r\n    }\r\n}\r\n\r\ntrait Bits {\r\n    fn bit<const I: u8>(self) -> bool;\r\n}\r\n\r\nimpl<T> Bits for T where\r\n    T: Copy + BitAnd<T, Output=T> + From<u8> + Eq\r\n{\r\n    fn bit<const I: usize>(self) -> bool {\r\n        let i = 1 << I;\r\n        let mask = T::from(i);\r\n        mask & self == mask\r\n    }\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.52.1 (9bc8c42bb 2021-05-09)\r\nbinary: rustc\r\ncommit-hash: 9bc8c42bb2f19e745a63f3445f1ac248fb015e53\r\ncommit-date: 2021-05-09\r\nhost: x86_64-apple-darwin\r\nrelease: 1.52.1\r\nLLVM version: 12.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: /rustc/9bc8c42bb2f19e745a63f3445f1ac248fb015e53/compiler/rustc_middle/src/ty/consts/int.rs:230:13: expected int of size 8, but got size 1\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/9bc8c42bb2f19e745a63f3445f1ac248fb015e53/library/std/src/panic.rs:59:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n$ RUST_BACKTRACE=1 cargo test\r\n```\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/9bc8c42bb2f19e745a63f3445f1ac248fb015e53/library/std/src/panic.rs:59:5\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: std::panic::panic_any\r\n   2: rustc_errors::HandlerInner::bug\r\n   3: rustc_errors::Handler::bug\r\n   4: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n   5: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n   6: rustc_middle::ty::context::tls::with_opt\r\n   7: rustc_middle::util::bug::opt_span_bug_fmt\r\n   8: rustc_middle::util::bug::bug_fmt\r\n   9: rustc_middle::ty::consts::int::ScalarInt::assert_bits::{{closure}}\r\n  10: rustc_codegen_llvm::common::<impl rustc_codegen_ssa::traits::consts::ConstMethods for rustc_codegen_llvm::context::CodegenCx>::scalar_to_backend\r\n  11: rustc_codegen_ssa::mir::operand::OperandRef<V>::from_const\r\n  12: rustc_codegen_ssa::mir::operand::<impl rustc_codegen_ssa::mir::FunctionCx<Bx>>::codegen_operand\r\n  13: rustc_codegen_ssa::mir::rvalue::<impl rustc_codegen_ssa::mir::FunctionCx<Bx>>::codegen_rvalue_operand\r\n  14: rustc_codegen_ssa::mir::codegen_mir\r\n  15: rustc_codegen_ssa::base::codegen_instance\r\n  16: <rustc_middle::mir::mono::MonoItem as rustc_codegen_ssa::mono_item::MonoItemExt>::define\r\n  17: rustc_codegen_llvm::base::compile_codegen_unit::module_codegen\r\n  18: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  19: rustc_codegen_llvm::base::compile_codegen_unit\r\n  20: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  21: rustc_interface::passes::QueryContext::enter\r\n  22: rustc_interface::queries::Queries::ongoing_codegen\r\n  23: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  24: rustc_span::with_source_map\r\n  25: rustc_interface::interface::create_compiler_and_run\r\n  26: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86820/timeline", "performed_via_github_app": null, "state_reason": "completed"}