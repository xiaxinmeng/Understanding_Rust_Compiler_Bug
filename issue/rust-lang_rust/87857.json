{"url": "https://api.github.com/repos/rust-lang/rust/issues/87857", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87857/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87857/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87857/events", "html_url": "https://github.com/rust-lang/rust/issues/87857", "id": 963345200, "node_id": "MDU6SXNzdWU5NjMzNDUyMDA=", "number": 87857, "title": "Nightly (2021): trait bound error for missing use", "user": {"login": "taqtiqa-mark", "id": 1468258, "node_id": "MDQ6VXNlcjE0NjgyNTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1468258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taqtiqa-mark", "html_url": "https://github.com/taqtiqa-mark", "followers_url": "https://api.github.com/users/taqtiqa-mark/followers", "following_url": "https://api.github.com/users/taqtiqa-mark/following{/other_user}", "gists_url": "https://api.github.com/users/taqtiqa-mark/gists{/gist_id}", "starred_url": "https://api.github.com/users/taqtiqa-mark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taqtiqa-mark/subscriptions", "organizations_url": "https://api.github.com/users/taqtiqa-mark/orgs", "repos_url": "https://api.github.com/users/taqtiqa-mark/repos", "events_url": "https://api.github.com/users/taqtiqa-mark/events{/privacy}", "received_events_url": "https://api.github.com/users/taqtiqa-mark/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-08-08T03:24:08Z", "updated_at": "2021-08-08T12:36:17Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\nUsing this rust version:\r\n\r\n```bash\r\n$ cargo --version\r\ncargo 1.56.0-nightly (cc17afbb0 2021-08-02)\r\n```\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\nuse lazy_static::lazy_static;\r\nuse rand::distributions::{Distribution, Uniform};\r\nuse signal_hook::consts::signal::*;\r\nuse signal_hook_tokio::Signals;\r\nuse std::io::Error;\r\nuse std::time::Duration;\r\nuse tokio::time::{sleep, Instant};\r\n\r\nlazy_static! {\r\n    static ref START_TIME: Instant = Instant::now();\r\n}\r\n\r\nasync fn handle_signals(signals: Signals) {\r\n    let mut signals = signals.fuse();\r\n    while let Some(signal) = signals.next().await {\r\n        match signal {\r\n            SIGTERM | SIGINT | SIGQUIT => {\r\n                // Lets get out of here...\r\n                std::process::exit(1);\r\n            }\r\n            _ => unreachable!(),\r\n        }\r\n    }\r\n}\r\n\r\n#[tokio::main]\r\nasync fn main() -> Result<(), Error> {\r\n    let signals = Signals::new(&[SIGHUP, SIGTERM, SIGINT, SIGQUIT])?;\r\n    let handle = signals.handle();\r\n    let signals_task = tokio::spawn(handle_signals(signals));\r\n\r\n    let page = get_page(42).await;\r\n    println!(\"Page #42: {:?}\", page);\r\n\r\n    // Terminate the signal stream.\r\n    handle.close();\r\n    signals_task.await?;\r\n    Ok(())\r\n}\r\n\r\nasync fn get_page(i: usize) -> Vec<usize> {\r\n    let millis = Uniform::from(5_000..6_000).sample(&mut rand::thread_rng());\r\n    println!(\r\n        \"[{}] # get_page({}) will complete in {} ms on {:?}\",\r\n        START_TIME.elapsed().as_millis(),\r\n        i,\r\n        millis,\r\n        std::thread::current().id()\r\n    );\r\n\r\n    sleep(Duration::from_millis(millis)).await;\r\n    println!(\r\n        \"[{}] # get_page({}) completed\",\r\n        START_TIME.elapsed().as_millis(),\r\n        i\r\n    );\r\n\r\n    (10 * i..10 * (i + 1)).collect()\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0599]: the method `fuse` exists for struct `signal_hook_tokio::SignalsInfo`, but its trait bounds were not satisfied\r\n  --> regatta/examples/01-pages-hello-ok-int-c.rs:15:31\r\n   |\r\n15 |     let mut signals = signals.fuse();\r\n   |                               ^^^^ method cannot be called on `signal_hook_tokio::SignalsInfo` due to unsatisfied trait bounds\r\n   |\r\n  ...\r\n   |\r\n92 | pub struct SignalsInfo<E: Exfiltrator = SignalOnly>(OwningSignalIterator<UnixStream, E>);\r\n   | ----------------------------------------------------------------------------------------- doesn't satisfy `signal_hook_tokio::SignalsInfo: Iterator`\r\n   |\r\n   = note: the following trait bounds were not satisfied:\r\n           `signal_hook_tokio::SignalsInfo: Iterator`\r\n           which is required by `&mut signal_hook_tokio::SignalsInfo: Iterator`\r\n\r\nFor more information about this error, try `rustc --explain E0599`.\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\n~~Ideally the output should be as shown in [this comment](https://github.com/rust-lang/rust/issues/36513#issuecomment-590658684) in issue #36513  (via PR #69255)and [this comment (Feb 2020)](https://github.com/rust-lang/rust/issues/40375#issuecomment-542337409) in issue #40375 (which seems to have changed back to uninformative [per this comment (Jun 2020)](https://github.com/rust-lang/rust/issues/40375#issuecomment-644328820))~~\r\nActually the output we should see is the same as in the [comment below](https://github.com/rust-lang/rust/issues/87857#issuecomment-894745313) (a subtle variation of this code) where helpful and correct messages are produced:\r\n\r\n```\r\n   ...\r\n   = help: items from traits can only be used if the trait is in scope\r\n   = note: the following trait is implemented but not in scope; perhaps add a `use` for it:\r\n           `use futures::StreamExt;`\r\n```\r\n\r\nTo fix, add `use futures::stream::{StreamExt};`\r\n\r\nThis issue has tripped, at least two (new) [users](https://github.com/vorner/signal-hook/issues/96).\r\nA question to Discord #beginners about the likely root cause of this error wasn't responded to so its a subtle issue.  \r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87857/timeline", "performed_via_github_app": null, "state_reason": null}