{"url": "https://api.github.com/repos/rust-lang/rust/issues/103200", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103200/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103200/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103200/events", "html_url": "https://github.com/rust-lang/rust/issues/103200", "id": 1413444322, "node_id": "I_kwDOAAsO6M5UP3Li", "number": 103200, "title": "Unhelpful diagnostic when parsing fails because of wrong metavariable kind", "user": {"login": "PoignardAzur", "id": 8573618, "node_id": "MDQ6VXNlcjg1NzM2MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/8573618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PoignardAzur", "html_url": "https://github.com/PoignardAzur", "followers_url": "https://api.github.com/users/PoignardAzur/followers", "following_url": "https://api.github.com/users/PoignardAzur/following{/other_user}", "gists_url": "https://api.github.com/users/PoignardAzur/gists{/gist_id}", "starred_url": "https://api.github.com/users/PoignardAzur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PoignardAzur/subscriptions", "organizations_url": "https://api.github.com/users/PoignardAzur/orgs", "repos_url": "https://api.github.com/users/PoignardAzur/repos", "events_url": "https://api.github.com/users/PoignardAzur/events{/privacy}", "received_events_url": "https://api.github.com/users/PoignardAzur/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-10-18T15:37:12Z", "updated_at": "2022-10-19T10:03:29Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given this code ([playground link](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=77020b9373e7a8a0820e4ab45577f69f)):\r\n\r\n```rust\r\nmacro_rules! declare_struct {\r\n    ($StructName:ty) => {\r\n        struct $StructName;\r\n    }\r\n}\r\n\r\ndeclare_struct!(Foobar);\r\n```\r\n\r\nThe compiler outputs:\r\n\r\n```txt\r\nerror: expected identifier, found `Foobar`\r\n --> src/lib.rs:4:16\r\n  |\r\n4 |         struct $StructName;\r\n  |                ^^^^^^^^^^^ expected identifier\r\n...\r\n8 | declare_struct!(Foobar);\r\n  | ----------------------- in this macro invocation\r\n```\r\n\r\nThe basic shape of the error is unhelpful. \"expected identifier, found \\[\\[\\[some identifier]]]\" doesn't tell me what's wrong.\r\n\r\nThe actual error is that I declared my metavariable with the wrong kind `StructName:ty`, which I guess doesn't fit in the parser when instantiated. If I declare `StructName:ident` instead, the code compiles.\r\n\r\nAssuming this is the desired behavior, the compiler should at least add a note like:\r\n\r\n```txt\r\n3 |    ($StructName:ty) => {\r\n  |                 ^^ $StructName metavariable is declared as 'ty'\r\n```\r\n\r\nProbably the error should be something like\r\n\r\n```txt\r\nerror: expected identifier, found metavariable `$StructName` of kind `ty`\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103200/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103200/timeline", "performed_via_github_app": null, "state_reason": null}