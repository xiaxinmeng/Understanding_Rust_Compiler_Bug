{"url": "https://api.github.com/repos/rust-lang/rust/issues/47229", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47229/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47229/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47229/events", "html_url": "https://github.com/rust-lang/rust/issues/47229", "id": 286471530, "node_id": "MDU6SXNzdWUyODY0NzE1MzA=", "number": 47229, "title": "File read_at, non-mutable platform independent version", "user": {"login": "PSeitz", "id": 1109503, "node_id": "MDQ6VXNlcjExMDk1MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/1109503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PSeitz", "html_url": "https://github.com/PSeitz", "followers_url": "https://api.github.com/users/PSeitz/followers", "following_url": "https://api.github.com/users/PSeitz/following{/other_user}", "gists_url": "https://api.github.com/users/PSeitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/PSeitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PSeitz/subscriptions", "organizations_url": "https://api.github.com/users/PSeitz/orgs", "repos_url": "https://api.github.com/users/PSeitz/repos", "events_url": "https://api.github.com/users/PSeitz/events{/privacy}", "received_events_url": "https://api.github.com/users/PSeitz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-01-06T09:09:16Z", "updated_at": "2018-01-06T18:19:21Z", "closed_at": "2018-01-06T18:19:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have multiple threads reading from a `std::fs::File` handle. The existing Read Trait for File is not so nice in this case because of the mutability`&mut File`. I created the non-mutable platform independent version from the plattform specific counterparts like below.\r\nIt would be nice to have this in the standard library.\r\n\r\n```rust\r\n\r\n#[cfg(any(windows))]\r\nfn load_exact_bytes_at(buffer: &mut Vec<u8>, file: &File, offset: u64) {\r\n    use std::os::windows::fs::FileExt;\r\n    let mut data_read = 0;\r\n    while data_read < buffer.len() {\r\n        data_read += file.seek_read(buffer, offset).unwrap();\r\n    }\r\n}\r\n\r\n#[cfg(any(unix))]\r\nfn load_exact_bytes_at(buffer: &mut Vec<u8>, file: &File, offset: u64) {\r\n    use std::os::unix::fs::FileExt;\r\n    let mut data_read = 0;\r\n    while data_read < buffer.len() {\r\n        data_read += file.read_at(buffer, offset).unwrap();\r\n    }\r\n}\r\n```", "closed_by": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47229/timeline", "performed_via_github_app": null, "state_reason": "completed"}