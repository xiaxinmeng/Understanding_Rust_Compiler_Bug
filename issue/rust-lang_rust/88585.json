{"url": "https://api.github.com/repos/rust-lang/rust/issues/88585", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88585/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88585/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88585/events", "html_url": "https://github.com/rust-lang/rust/issues/88585", "id": 986408698, "node_id": "MDU6SXNzdWU5ODY0MDg2OTg=", "number": 88585, "title": "deadlock: Command::spawn is trying to dlsym after fork, but linker mutex is locked", "user": {"login": "hacker-volodya", "id": 3119142, "node_id": "MDQ6VXNlcjMxMTkxNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3119142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hacker-volodya", "html_url": "https://github.com/hacker-volodya", "followers_url": "https://api.github.com/users/hacker-volodya/followers", "following_url": "https://api.github.com/users/hacker-volodya/following{/other_user}", "gists_url": "https://api.github.com/users/hacker-volodya/gists{/gist_id}", "starred_url": "https://api.github.com/users/hacker-volodya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hacker-volodya/subscriptions", "organizations_url": "https://api.github.com/users/hacker-volodya/orgs", "repos_url": "https://api.github.com/users/hacker-volodya/repos", "events_url": "https://api.github.com/users/hacker-volodya/events{/privacy}", "received_events_url": "https://api.github.com/users/hacker-volodya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-09-02T09:00:35Z", "updated_at": "2021-10-06T01:32:19Z", "closed_at": "2021-10-06T01:32:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a problem with `Command::spawn` on Android. When another thread interacts with system linker, `Command::spawn` causes a deadlock in the child process between `fork` and `exec`. It happens because under the hood Android linker uses global mutex `g_dl_mutex` ([link to android source](https://android.googlesource.com/platform/bionic/+/563e60e32adf7f427af03075a6fb800e723025f1/linker/dlfcn.cpp#97)) and not doing `pthread_atfork()` to unlock it in child processes.\r\n\r\nWhat exactly happens:\r\n\r\n1. [Command::spawn](https://github.com/rust-lang/rust/blob/cc9bb1522e357a4a11e7b0bfbbb7eddbd880a44f/library/std/src/sys/unix/process/process_unix.rs#L37) is called.\r\n2. `Command::spawn` actually invokes `do_fork`, then `do_exec` is invoked in the child process.\r\n3. There is a comment in [do_exec](https://github.com/rust-lang/rust/blob/cc9bb1522e357a4a11e7b0bfbbb7eddbd880a44f/library/std/src/sys/unix/process/process_unix.rs#L246-L275), which says that a deadlock may occur, so no allocations must appear in `do_exec`.\r\n4. Well, at this point we know that any code between `fork` and `exec` must not lock mutexes from the parent process, because it may be \"forever locked\" bacause of `fork`.\r\n5. `do_exec` calls `sys::signal`. Fine.\r\n6. Seems interesting that [sys::signal](https://github.com/rust-lang/rust/blob/cc9bb1522e357a4a11e7b0bfbbb7eddbd880a44f/library/std/src/sys/unix/android.rs#L76) is linking actual `signal` function from libc using [dlsym](https://github.com/rust-lang/rust/blob/cc9bb1522e357a4a11e7b0bfbbb7eddbd880a44f/library/std/src/sys/unix/weak.rs#L101).\r\n7. At this point linker is [trying to lock](https://android.googlesource.com/platform/bionic/+/563e60e32adf7f427af03075a6fb800e723025f1/linker/dlfcn.cpp#159) parent mutex [g_dl_mutex](https://android.googlesource.com/platform/bionic/+/563e60e32adf7f427af03075a6fb800e723025f1/linker/dlfcn.cpp#97), which may be in \"forever locked\" state, so the child process hangs.\r\n\r\n`main.rs`:\r\n```rust\r\n#![no_main]\r\n\r\n#[link(name = \"dl\")]\r\nextern {\r\n    fn dlsym(handle: i32, symbol: i32);\r\n}\r\n\r\n/// Implementing here raw main function, because Rust initializers calls `signal` and caches its address, \r\n/// preventing deadlock. In real life Rust not always compiles to standalone executables, so this case\r\n/// is also applicable to shared libraries. \r\n#[no_mangle]\r\npub extern \"C\" fn main(_argc: isize, _argv: *const *const u8) -> isize {\r\n    let t = std::thread::spawn(|| {\r\n        println!(\"Locking g_dl_mutex...\");\r\n        for _ in 0..10000000 {\r\n            unsafe { dlsym(0, 0); }\r\n        }\r\n        println!(\"dlsym'ing done\");\r\n    });\r\n    std::thread::sleep(std::time::Duration::from_secs(1));\r\n    println!(\"Spawning ps...\");\r\n    let _child = std::process::Command::new(\"ps\").spawn().unwrap();\r\n    println!(\"ps spawned!\");\r\n    t.join().unwrap();\r\n    println!(\"Done\");\r\n    0\r\n}\r\n```\r\n\r\nHow to build and run (can run on real device or emulator, to run on emulator replace `aarch64` with `x86_64`):\r\n```bash\r\ncargo build --release --target aarch64-linux-android\r\nadb push .\\target\\aarch64-linux-android\\release\\linker-deadlock /data/local/tmp/\r\nadb shell chmod +x /data/local/tmp/linker-deadlock\r\nadb shell /data/local/tmp/linker-deadlock\r\n```\r\n\r\nbe sure to specify Android NDK toolchain binaries in `~/.cargo/config.toml`:\r\n```toml\r\n[target.aarch64-linux-android]\r\nar = \"C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\Android\\\\Sdk\\\\ndk\\\\20.0.5594570\\\\toolchains\\\\llvm\\\\prebuilt\\\\windows-x86_64\\\\bin\\\\llvm-ar.exe\"\r\nlinker = \"C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\Android\\\\Sdk\\\\ndk\\\\20.0.5594570\\\\toolchains\\\\llvm\\\\prebuilt\\\\windows-x86_64\\\\bin\\\\aarch64-linux-android23-clang.cmd\"\r\n\r\n[target.x86_64-linux-android]\r\nar = \"C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\Android\\\\Sdk\\\\ndk\\\\20.0.5594570\\\\toolchains\\\\llvm\\\\prebuilt\\\\windows-x86_64\\\\bin\\\\llvm-ar.exe\"\r\nlinker = \"C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\Android\\\\Sdk\\\\ndk\\\\20.0.5594570\\\\toolchains\\\\llvm\\\\prebuilt\\\\windows-x86_64\\\\bin\\\\x86_64-linux-android23-clang.cmd\"\r\n```\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.54.0 (a178d0322 2021-07-26)\r\nbinary: rustc\r\ncommit-hash: a178d0322ce20e33eac124758e837cbd80a6f633\r\ncommit-date: 2021-07-26\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.54.0\r\nLLVM version: 12.0.1\r\n```\r\n\r\n```\r\nrustc 1.56.0-nightly (50171c310 2021-09-01)\r\nbinary: rustc\r\ncommit-hash: 50171c310cd15e1b2d3723766ce64e2e4d6696fc\r\ncommit-date: 2021-09-01\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.56.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88585/timeline", "performed_via_github_app": null, "state_reason": "completed"}