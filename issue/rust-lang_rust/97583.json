{"url": "https://api.github.com/repos/rust-lang/rust/issues/97583", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/97583/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/97583/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/97583/events", "html_url": "https://github.com/rust-lang/rust/issues/97583", "id": 1253896100, "node_id": "I_kwDOAAsO6M5KvO-k", "number": 97583, "title": "ambiguous assoc types result in incorrect suggestion", "user": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-05-31T13:46:43Z", "updated_at": "2022-06-02T17:20:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```rust\r\ntrait Super<T> {\r\n    type Assoc;\r\n}\r\ntrait Trait: Super<u32> + Super<i32> {}\r\n\r\nfn foo<T: Trait<Assoc = u32>>() {}\r\n```\r\n```\r\nerror[[E0222]](https://doc.rust-lang.org/stable/error-index.html#E0222): ambiguous associated type `Assoc` in bounds of `Trait`\r\n --> src/lib.rs:6:17\r\n  |\r\n2 |     type Assoc;\r\n  |     -----------\r\n  |     |\r\n  |     ambiguous `Assoc` from `Super<i32>`\r\n  |     ambiguous `Assoc` from `Super<u32>`\r\n...\r\n6 | fn foo<T: Trait<Assoc = u32>>() {}\r\n  |                 ^^^^^^^^^^^ ambiguous associated type `Assoc`\r\n  |\r\n  = help: consider introducing a new type parameter `T` and adding `where` constraints:\r\n              where\r\n                  T: Trait,\r\n                  T: Super<i32>::Assoc = u32,\r\n                  T: Super<u32>::Assoc = u32\r\n```\r\nand\r\n```rust\r\ntrait Super<T> {\r\n    type Assoc;\r\n}\r\ntrait Trait: Super<u32> + Super<i32> {}\r\n\r\nfn main() {\r\n    let _: dyn Trait<Assoc = u32>;\r\n}\r\n```\r\n```\r\nerror[[E0222]](https://doc.rust-lang.org/stable/error-index.html#E0222): ambiguous associated type `Assoc` in bounds of `Trait`\r\n --> src/main.rs:7:22\r\n  |\r\n2 |     type Assoc;\r\n  |     -----------\r\n  |     |\r\n  |     ambiguous `Assoc` from `Super<i32>`\r\n  |     ambiguous `Assoc` from `Super<u32>`\r\n...\r\n7 |     let _: dyn Trait<Assoc = u32>;\r\n  |                      ^^^^^^^^^^^ ambiguous associated type `Assoc`\r\n  |\r\n  = help: consider introducing a new type parameter `T` and adding `where` constraints:\r\n              where\r\n                  T: Trait,\r\n                  T: Super<i32>::Assoc = u32,\r\n                  T: Super<u32>::Assoc = u32\r\n\r\nerror[[E0191]](https://doc.rust-lang.org/stable/error-index.html#E0191): the value of the associated type `Assoc` (from trait `Super`) must be specified\r\n --> src/main.rs:7:16\r\n  |\r\n2 |     type Assoc;\r\n  |     ----------- `Assoc` defined here\r\n...\r\n7 |     let _: dyn Trait<Assoc = u32>;\r\n  |                ^^^^^^^^^^^^^^^^^^ help: specify the associated type: `Trait<Assoc = u32, Assoc = Type>`\r\n```\r\n\r\nTrying to write `T: Super<i32>::Assoc = u32` results in a syntax error.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/97583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/97583/timeline", "performed_via_github_app": null, "state_reason": null}