{"url": "https://api.github.com/repos/rust-lang/rust/issues/97515", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/97515/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/97515/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/97515/events", "html_url": "https://github.com/rust-lang/rust/issues/97515", "id": 1251840409, "node_id": "I_kwDOAAsO6M5KnZGZ", "number": 97515, "title": "Generic associated types break lifetime checks", "user": {"login": "101arrowz", "id": 29579245, "node_id": "MDQ6VXNlcjI5NTc5MjQ1", "avatar_url": "https://avatars.githubusercontent.com/u/29579245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/101arrowz", "html_url": "https://github.com/101arrowz", "followers_url": "https://api.github.com/users/101arrowz/followers", "following_url": "https://api.github.com/users/101arrowz/following{/other_user}", "gists_url": "https://api.github.com/users/101arrowz/gists{/gist_id}", "starred_url": "https://api.github.com/users/101arrowz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/101arrowz/subscriptions", "organizations_url": "https://api.github.com/users/101arrowz/orgs", "repos_url": "https://api.github.com/users/101arrowz/repos", "events_url": "https://api.github.com/users/101arrowz/events{/privacy}", "received_events_url": "https://api.github.com/users/101arrowz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-05-29T09:43:44Z", "updated_at": "2022-06-17T17:43:52Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nHere's some code with generic associated types and `impl Trait`:\r\n```rust\r\n#![feature(generic_associated_types)]\r\nuse std::future::{Future, ready, Ready};\r\n\r\npub trait Example {\r\n    type Value<'a>: Future<Output = &'a str> where Self: 'a;\r\n    fn example(&mut self) -> Self::Value<'_>;\r\n}\r\n\r\npub struct ExImpl<'a>(&'a str);\r\n\r\nimpl Example for ExImpl<'_> {\r\n    type Value<'a> = Ready<&'a str> where Self: 'a;\r\n    fn example(&mut self) -> Self::Value<'_> {\r\n        ready(self.0)\r\n    }\r\n}\r\n\r\nasync fn callee(mut ex: impl Example) {\r\n    // Note that if you don't use a separate function, no errors appear\r\n    dbg!(ex.example().await);\r\n}\r\n\r\n#[tokio::main]\r\nasync fn main() {\r\n    tokio::spawn(async move {\r\n        let ex = ExImpl(\"hello\");\r\n        callee(ex).await;\r\n    });\r\n}\r\n```\r\n[Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=4ed2c005596454b3692e6fc224f4d443)\r\n\r\nExpected: `ex.example().await = \"hello\"`\r\n\r\nCurrent behavior:\r\n```\r\nCompiling playground v0.0.1 (/playground)\r\nerror[[E0477]]: the type `ExImpl<'_>` does not fulfill the required lifetime\r\n  --> src/main.rs:24:5\r\n   |\r\n24 |     tokio::spawn(async move {\r\n   |     ^^^^^^^^^^^^\r\n\r\nFor more information about this error, try `rustc --explain E0477`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\nClearly `ExImpl(\"hello\")` has a static lifetime and yet borrowck still complains that the lifetime isn't static. Interestingly, if we inline the contents of `callee` (i.e. never write `impl Example`) there are no issues.\r\n\r\nThis is also a diagnostic issue: not only is the error in the wrong place, it doesn't provide any suggestions to fix and doesn't point out what lifetime `ex` actually needs.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.63.0-nightly (ebbcbfc23 2022-05-27)\r\nbinary: rustc\r\ncommit-hash: ebbcbfc236ced21d5e6a92269edb704692ff26b8\r\ncommit-date: 2022-05-27\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.63.0-nightly\r\nLLVM version: 14.0.4\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/97515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/97515/timeline", "performed_via_github_app": null, "state_reason": null}