{"url": "https://api.github.com/repos/rust-lang/rust/issues/26239", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/26239/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/26239/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/26239/events", "html_url": "https://github.com/rust-lang/rust/issues/26239", "id": 87649197, "node_id": "MDU6SXNzdWU4NzY0OTE5Nw==", "number": 26239, "title": "Range::step_by(0) loops forever", "user": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-12T08:04:56Z", "updated_at": "2015-06-12T16:52:43Z", "closed_at": "2015-06-12T16:52:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I believe that the step_by(_) method of ranges should `panic!` if the argument is zero. Currently it loops forever, which is a footgun. At the very least, iterating over such a StepBy should `panic!` on debug builds. However, I think the earlier the error appears, the better.\n\nNote that this may require us to specialize `step_by` to types whose `Add` implementation have a known [identity element](http://en.wikipedia.org/wiki/Identity_element) \u2013 at the moment that would mean bounding by the `num::Zero` trait, which is unstable, also it would probably reduce the usefulness of ranges to numeric types. However, special casing numeric ranges could solve this.\n\nI have also filed an [issue](https://github.com/Manishearth/rust-clippy/issues/95) at rust-clippy to create a lint for cases where it can be statically detected. Still, that lint cannot detect cases where the argument is calculated at runtime.\n\nThe documentation of `.step_by(_)` should at least warn of the possibility of looping forever or panic once it is implemented.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/26239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/26239/timeline", "performed_via_github_app": null, "state_reason": "completed"}