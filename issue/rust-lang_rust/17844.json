{"url": "https://api.github.com/repos/rust-lang/rust/issues/17844", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/17844/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/17844/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/17844/events", "html_url": "https://github.com/rust-lang/rust/issues/17844", "id": 45107741, "node_id": "MDU6SXNzdWU0NTEwNzc0MQ==", "number": 17844, "title": "Vec::clone and String::clone are very slow", "user": {"login": "rusty-nail2", "id": 9051135, "node_id": "MDQ6VXNlcjkwNTExMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/9051135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rusty-nail2", "html_url": "https://github.com/rusty-nail2", "followers_url": "https://api.github.com/users/rusty-nail2/followers", "following_url": "https://api.github.com/users/rusty-nail2/following{/other_user}", "gists_url": "https://api.github.com/users/rusty-nail2/gists{/gist_id}", "starred_url": "https://api.github.com/users/rusty-nail2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rusty-nail2/subscriptions", "organizations_url": "https://api.github.com/users/rusty-nail2/orgs", "repos_url": "https://api.github.com/users/rusty-nail2/repos", "events_url": "https://api.github.com/users/rusty-nail2/events{/privacy}", "received_events_url": "https://api.github.com/users/rusty-nail2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 166999014, "node_id": "MDU6TGFiZWwxNjY5OTkwMTQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-collections", "name": "A-collections", "color": "f7e101", "default": false, "description": "Area: std::collections."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-10-07T13:36:54Z", "updated_at": "2016-09-12T08:33:49Z", "closed_at": "2016-09-12T08:33:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Platform: Windows, rust nightly.\n\nThe optimizations made to fix https://github.com/rust-lang/rust/issues/13472 appear to have been undone by https://github.com/rust-lang/rust/pull/15471 and https://github.com/rust-lang/rust/commit/3316b1eb7c3eb520896af489dd45c4d17190d0a8\n\nIn 32-bit mode, `rustc -O --test test.rs && ./test --bench` gives:\n\n```\nrunning 7 tests\ntest clone_str                  ... bench:   1540862 ns/iter (+/- 25433)\ntest clone_vec_from_fn          ... bench:    745343 ns/iter (+/- 7535)\ntest clone_vec_from_incremental ... bench:   1088468 ns/iter (+/- 5358)\ntest fast_clone_vec             ... bench:    310484 ns/iter (+/- 3212)\ntest memory_copy                ... bench:    102162 ns/iter (+/- 1220)\ntest naive_clone_vec            ... bench:    745599 ns/iter (+/- 8111)\n```\n\nWith ~~`-C target-cpu=x86-64`~~ SSE enabled (`-C target-feature=+sse2`), things look better but `String::clone` still stands out:\n\n```\nrunning 7 tests\ntest clone_str                  ... bench:   1661609 ns/iter (+/- 60586)\ntest clone_vec_from_fn          ... bench:    359253 ns/iter (+/- 202820)\ntest clone_vec_from_incremental ... bench:    357418 ns/iter (+/- 3406)\ntest fast_clone_vec             ... bench:    309973 ns/iter (+/- 9762)\ntest memory_copy                ... bench:    102129 ns/iter (+/- 1317)\ntest naive_clone_vec            ... bench:    753919 ns/iter (+/- 8473)\n```\n\nPerformance seems very dependent on minor details: `clone_vec_from_incremental` is much slower than `clone_vec_from_fn` in ~~32 bit~~ non-SSE mode.\n\nBenchmark program:\n\n``` rust\nextern crate test;\nextern crate core;\n\nuse test::{Bencher, black_box};\nuse core::ptr;\n\nstatic SIZE: uint = 1024*1024;\n\n#[bench]\nfn clone_str(bh: &mut Bencher) {\n    let mut x = String::with_capacity(SIZE);\n    for _ in range(0, SIZE) {\n        x.push('x');\n    }\n    bh.iter(|| black_box(x.clone()));\n}\n\n#[bench]\nfn clone_vec_from_incremental(bh: &mut Bencher) {\n    let mut x: Vec<u8> = Vec::with_capacity(SIZE);\n    for _ in range(0, SIZE) {\n        x.push(0x78);\n    }\n    bh.iter(|| black_box(x.clone()));\n}\n\n#[bench]\nfn clone_vec_from_fn(bh: &mut Bencher) {\n    let x: Vec<u8> = Vec::from_fn(SIZE, |_| 0x78);\n    bh.iter(|| black_box(x.clone()));\n}\n\n#[bench]\nfn naive_clone_vec(bh: &mut Bencher) {\n    let x: Vec<u8> = Vec::from_fn(SIZE, |_| 0x78);\n    bh.iter(|| {\n        black_box(Vec::from_fn(SIZE, |i| x[i]));\n    });\n}\n\n#[bench]\nfn fast_clone_vec(bh: &mut Bencher) {\n    let x: Vec<u8> = Vec::from_fn(SIZE, |_| 0x78);\n    bh.iter(|| {\n        let mut copy = Vec::<u8>::with_capacity(SIZE);\n        unsafe {\n            ptr::copy_memory(copy.as_mut_ptr(), x.as_ptr(), x.len());\n            copy.set_len(SIZE);\n        }\n        black_box(copy)\n    });\n}\n\n#[bench]\nfn memory_copy(bh: &mut Bencher) {\n    let x: Vec<u8> = Vec::from_fn(SIZE, |_| 0x78);\n    let mut y: Vec<u8> = Vec::from_fn(SIZE, |_| 0);\n    bh.iter(|| {\n        unsafe {\n            ptr::copy_memory(y.as_mut_ptr(), x.as_ptr(), x.len());\n        }\n    })\n}\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/17844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/17844/timeline", "performed_via_github_app": null, "state_reason": "completed"}