{"url": "https://api.github.com/repos/rust-lang/rust/issues/88623", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88623/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88623/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88623/events", "html_url": "https://github.com/rust-lang/rust/issues/88623", "id": 987986942, "node_id": "MDU6SXNzdWU5ODc5ODY5NDI=", "number": 88623, "title": "\ud83c\udf89 Rust 2021 celebration and thanks", "user": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2947369052, "node_id": "MDU6TGFiZWwyOTQ3MzY5MDUy", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-edition-2021", "name": "A-edition-2021", "color": "f7e101", "default": false, "description": "Area: The 2021 edition"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2021-09-03T17:49:30Z", "updated_at": "2021-12-20T12:32:28Z", "closed_at": "2021-12-20T12:32:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": " ![](https://github.githubassets.com/images/icons/emoji/unicode/1f389.png) <img src=\"https://media.discordapp.net/attachments/765979591025229864/870587422763778048/crocodile.png?width=681&height=682\" width=\"64\" />\r\n \r\n**The beta version of Rust 1.56 is about to branch off, which includes a *stable `rustc --edition=2021`*!**\r\n\r\nThis means that, other than backports, all new development goes into 1.57, and the first version with a stable Rust 2021 is very likely going to be Rust 1.56 which will ship in a bit more than six weeks from now, on october 21st!\r\n\r\nWhile the work isn't done, as more bugs will be found and many improvements will be made in future versions, this is a huge milestone and a big achievement for the entire Rust team!\r\n\r\n![](https://github.githubassets.com/images/icons/emoji/unicode/1f386.png)\r\n\r\n**Thanks everyone!**\r\n\r\nI'd especially like to thank:\r\n\r\nFor [array.into_iter()](https://github.com/rust-lang/rust/issues/84513): @LukasKalbertodt for [implementing array::IntoIter](https://github.com/rust-lang/rust/issues/65798) and the [`array_into_iter` lint and migration](https://github.com/rust-lang/rust/issues/66145), @nikomatsakis for working out the [idea on how to make this happen over an edition](https://github.com/rust-lang/rust/issues/84133), @cuviper for [implementing edition-dependent .into_iter() syntax](https://github.com/rust-lang/rust/pull/84147), @est31 for [updating relevant documentation](https://github.com/rust-lang/rust/pull/84590), @mominul for [updating the standard library code and examples](https://github.com/rust-lang/rust/pull/85930). @carols10cents for [updating the Rust Book](https://github.com/rust-lang/book/pull/2797). And the @rust-lang/lang, @rust-lang/compiler and @rust-lang/project-const-generics teams for making const generics happen, which made `array::IntoIter` a possibility in the first place.\r\n\r\nFor the new cargo resolver: the @rust-lang/cargo team in general, and specifically @ehuss for [implementing all of this](https://github.com/rust-lang/cargo/pull/7820), for [the automatic resolver-related changes reporting](https://github.com/rust-lang/cargo/pull/9268), and @ehuss and @weihanglo for [improvements](https://github.com/rust-lang/cargo/pull/9827) [to the](https://github.com/rust-lang/cargo/pull/9803) [backwards-compatibility](https://github.com/rust-lang/cargo/pull/9649) [notices](https://github.com/rust-lang/cargo/pull/9602).\r\n\r\nFor the [reserved prefixes](https://github.com/rust-lang/rust/issues/84978): @bstrie for [the RFC](https://github.com/rust-lang/rfcs/pull/3101), and @joshtriplett, @nikomatsakis, the rest of @rust-lang/lang team, @programmerjake, and @ehuss, for valuable feedback on it. @Julian-Wollersberger for [implementing the original k# idea](https://github.com/rust-lang/rust/pull/84037), and @lrh2000 for [implementing the final feature](https://github.com/rust-lang/rust/pull/85359) after [much detailed discussion](https://github.com/rust-lang/rust/issues/84978) with @petrochenkov, @steffahn and @nikomatsakis. And @joshtriplett for [expanding the documentation](https://github.com/rust-lang/edition-guide/pull/249) of this change.\r\n\r\nFor the disjoint closure captures: @samsartor for [the original RFC](https://github.com/rust-lang/rfcs/pull/2229). @oli-obk, @nikomatsakis, @eddyb, @Centril, @RalfJung, and the @rust-lang/lang team for discussing it. The @rust-lang/wg-rfc-2229 working group, and in particular @arora-aman for [implementing the capture analysis](https://github.com/rust-lang/rust/pull/78801), and [improving the feature](https://github.com/rust-lang/rust/pull/80092) [again and again](https://github.com/rust-lang/rust/pull/82007), [implementing the migration lint](https://github.com/rust-lang/rust/pull/80629) and [improving it](https://github.com/rust-lang/rust/pull/81912/files), and a [huge amount of other related work](https://github.com/rust-lang/project-rfc-2229/issues?page=2&q=is%3Aissue+is%3Aclosed), and [making this happen as part of the edition](https://github.com/rust-lang/rust/pull/86536). @roxelo for [making](https://github.com/rust-lang/rust/pull/88039) [lots](https://github.com/rust-lang/rust/pull/87996) [of](https://github.com/rust-lang/rust/pull/87161) [migration](https://github.com/rust-lang/rust/pull/84730) [improvements](https://github.com/rust-lang/rust/pull/86965) [and](https://github.com/rust-lang/rust/pull/86869) [other fixes](https://github.com/rust-lang/rust/pull/86726). And @null-sleep and @ChrisPardy for [several](https://github.com/rust-lang/rust/pull/81062) [very](https://github.com/rust-lang/rust/pull/84358) [important](https://github.com/rust-lang/rust/pull/84152) [improvements](https://github.com/rust-lang/rust/pull/81291). @pnkfelix for [reporting](https://github.com/rust-lang/rust/issues/85561) and [fixing bugs](https://github.com/rust-lang/rust/pull/85564). And @nikomatsakis for a huge amount of reviews and guidance.\r\n\r\nFor [or-patterns](https://github.com/rust-lang/rust/issues/54883): @Centril for the [or-patterns RFC](https://github.com/rust-lang/rfcs/pull/2535), @mark-i-m for [implementing the](https://github.com/rust-lang/rust/pull/80100) [edition specific changes](https://github.com/rust-lang/rust/pull/80459), @hi-rustin for [implementing the migration lint](https://github.com/rust-lang/rust/pull/83468) and @nikomatsakis for [writing the initial mentoring instructions for that](https://github.com/rust-lang/rust/issues/83318#issuecomment-803278439), and the @rust-lang/lang team, @digama0 and @mark-i-m for [succesfully bikeshedding the name for `:pat_param`](https://github.com/rust-lang/rust/pull/83386). @Aaron1011 for [fixing an important bug when using `:pat` cross-crate and cross-edition](https://github.com/rust-lang/rust/pull/85709), and @leonardo-m for [discovering it](https://github.com/rust-lang/rust/issues/84429).\r\n\r\nFor the [new prelude](https://github.com/rust-lang/rust/issues/85684): @djc for [the RFC](https://github.com/rust-lang/rfcs/pull/3114), and the @rust-lang/libs-api team for the discussion. @nikomatsakis for [writing down the intial instructions for the migration lint](https://github.com/rust-lang/rust/issues/84594#issuecomment-847288288), and @jam1garner for [implementing the migration lint](https://github.com/rust-lang/rust/pull/85707) including [tons of unexpected](https://github.com/rust-lang/rust/pull/85707#issuecomment-849706348) [edge cases](https://github.com/rust-lang/rust/pull/86657). And @rylev for [fixing yet another edge case](https://github.com/rust-lang/rust/pull/87557/files).\r\n\r\nFor the [upgraded lints](https://github.com/rust-lang/rust/issues/80165): @rylev for [driving this effort](https://github.com/rust-lang/rust/issues/80165#issuecomment-777414972) and [implementing it](https://github.com/rust-lang/rust/pull/83213), and the @rust-lang/lang team, @Manishearth, @jyn514, @camelid, @Aloso, @nemo157, @RalfJung, @petrochenkov, @zackmdavis, @taiki-e, and @jhpratt for the discussions behind this.\r\n\r\nFor the [panic formatting strings](https://github.com/rust-lang/rust/issues/80162): @davidhewitt for the [implicit formatting arguments rfc](https://github.com/rust-lang/rfcs/pull/2795), @alexcrichton for [raising the panic issue](https://github.com/rust-lang/rfcs/pull/2795#issuecomment-549394631), @camelid for [fixing hygiene in the core panicking macros](https://github.com/rust-lang/rust/pull/78343) and [related clippy changes](https://github.com/rust-lang/rust-clippy/pull/6310), and @petrochenkov for all the [macro](https://github.com/rust-lang/rust/pull/80851)-[related](https://github.com/rust-lang/rust/pull/80855) reviews and @estebank for all the [diagnostics](https://github.com/rust-lang/rust/pull/78088)-[related](https://github.com/rust-lang/rust/pull/81645) reviews. And apologies to @rust-lang/wg-const-eval for [making it harder to stabilize const_panic](https://github.com/rust-lang/rust/issues/85194#issuecomment-852345377) because of these changes. ^^'\r\n\r\n@rylev for [cleaning up the lint names](https://github.com/rust-lang/rust/pull/86717) and @petrochenkov for reminding us to [follow the lint name convention](https://github.com/rust-lang/rust/pull/78088#issuecomment-766176989).\r\n\r\n@ehuss for [taking](https://github.com/rust-lang/edition-guide/pull/255) [care](https://github.com/rust-lang/edition-guide/pull/266) of the edition guide. And @rylev, @roxelo, @joshtriplett and @ehuss for [making](https://github.com/rust-lang/edition-guide/pull/246) [significant](https://github.com/rust-lang/edition-guide/pull/249) [additions](https://github.com/rust-lang/edition-guide/pull/251) [to](https://github.com/rust-lang/edition-guide/pull/252) [the](https://github.com/rust-lang/edition-guide/pull/253) [edition](https://github.com/rust-lang/edition-guide/pull/259) [guide](https://github.com/rust-lang/edition-guide/pull/258).\r\n\r\n@ehuss for handling [the crater run](https://github.com/rust-lang/rust/pull/87190) after [making a custom cargo version to make that possible](https://github.com/rust-lang/rust/issues/85895#issuecomment-881732680), and for [processing all the crater results](https://github.com/rust-lang/rust/pull/87190#issuecomment-905250803) and [filing](https://github.com/rust-lang/rust/issues/88471) [detailed](https://github.com/rust-lang/rust/issues/88470) [issues](https://github.com/rust-lang/rust/issues/88475) [for](https://github.com/rust-lang/rust/issues/88442) [all](https://github.com/rust-lang/rust/issues/88431) [bugs](https://github.com/rust-lang/rust/issues/88429) [found](https://github.com/rust-lang/rust/issues/88440).\r\n\r\n@jonas-schievink for [adding](https://github.com/rust-analyzer/rust-analyzer/pull/9097) [the features](https://github.com/rust-analyzer/rust-analyzer/pull/8304) [to rust-analyzer](https://github.com/rust-analyzer/rust-analyzer/issues/9056).\r\n\r\n@pietroalbini for [fixing rustfix](https://github.com/rust-lang/rustfix/pull/155) to handle multi-part suggestions.\r\n\r\n@ehuss for [all](https://github.com/rust-lang/cargo/pull/9800) [necessary](https://github.com/rust-lang/cargo/pull/9588) [improvements](https://github.com/rust-lang/cargo/pull/9567) to `cargo fix --edition`. @rylev for [implementing `--force-warn`](https://github.com/rust-lang/rust/pull/85788) and [improving](https://github.com/rust-lang/rust/pull/88134) it, @cjgillot for [making that a lint level](https://github.com/rust-lang/rust/pull/86009) and @inquisitivecrystal for [stabilizing and documenting that](https://github.com/rust-lang/rust/pull/87472).\r\n\r\n@HTG-YT for [switching the 'stable' boolean to `true`](https://github.com/rust-lang/rust/pull/88100)\r\n\r\nThe @rust-lang/compiler team and @rust-lang/compiler-contributors for a ton of reviews, and especially @estebank for an enormous amount of reviews on new lints and their improvements.\r\n\r\n@rylev for [handling the lint grouping](https://github.com/rust-lang/rust/pull/86689) and [improving the diagnostic messages](https://github.com/rust-lang/rust/pull/86330).\r\n\r\n@nikomatsakis for [co-leading the edition working group with me](https://www.rust-lang.org/governance/teams/core#project-edition-2021), and all his work on planning, detailed note taking, organisation, and pushing things forward. @rylev for being part of this group and all the discussion and planning. @ehuss for tons of useful feedback and making sure nothing gets forgotten. And @Mark-Simulacrum for advice and useful input on planning and the release decision.\r\n\r\nDaphne Matsakis and @nikomatsakis for [making a song about the edition](https://www.youtube.com/watch?v=q0aNduqb2Ro).\r\n\r\nEveryone who provided input and worked on the proposed features that did not make it for this edition.\r\n\r\nThe entire Rust team for everything you're all doing and making this a wonderful project to work on.\r\n\r\nAnd finally, the entire Rust community for input, testing the edition, using Rust, and your patience and excitement that keeps motivating us.\r\n\r\nThanks everyone. \ud83d\udc9b \r\n\r\n---\r\n\r\n(Please DM me on Zulip with everything and everyone I've forgotten, so I can add it. ^^)", "closed_by": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88623/reactions", "total_count": 1759, "+1": 446, "-1": 9, "laugh": 33, "hooray": 566, "confused": 0, "heart": 466, "rocket": 239, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88623/timeline", "performed_via_github_app": null, "state_reason": "completed"}