{"url": "https://api.github.com/repos/rust-lang/rust/issues/110749", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110749/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110749/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110749/events", "html_url": "https://github.com/rust-lang/rust/issues/110749", "id": 1680337164, "node_id": "I_kwDOAAsO6M5kJ-kM", "number": 110749, "title": "`-Cinstrument-coverage` produces invalid coverage mapping for the test harness's entry point", "user": {"login": "Zalathar", "id": 20290842, "node_id": "MDQ6VXNlcjIwMjkwODQy", "avatar_url": "https://avatars.githubusercontent.com/u/20290842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zalathar", "html_url": "https://github.com/Zalathar", "followers_url": "https://api.github.com/users/Zalathar/followers", "following_url": "https://api.github.com/users/Zalathar/following{/other_user}", "gists_url": "https://api.github.com/users/Zalathar/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zalathar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zalathar/subscriptions", "organizations_url": "https://api.github.com/users/Zalathar/orgs", "repos_url": "https://api.github.com/users/Zalathar/repos", "events_url": "https://api.github.com/users/Zalathar/events{/privacy}", "received_events_url": "https://api.github.com/users/Zalathar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2483744621, "node_id": "MDU6TGFiZWwyNDgzNzQ0NjIx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-code-coverage", "name": "A-code-coverage", "color": "f7e101", "default": false, "description": "Area: Source-based code coverage (-Cinstrument-coverage)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2023-04-24T02:20:06Z", "updated_at": "2023-05-02T00:16:33Z", "closed_at": "2023-05-02T00:16:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nTake this simple crate:\r\n\r\n```rust\r\n// THIS LINE SHOULD NOT BE DUPLICATED\r\n\r\nfn main() {}\r\n\r\n#[test]\r\nfn my_test() {}\r\n\r\n```\r\n\r\nIf I try to gather code coverage for `cargo test`, I end up with the first line mysteriously duplicated as a covered region:\r\n\r\n```\r\n$ cargo llvm-cov test --text\r\n   Compiling cov-playground v0.1.0 (/Users/me/Dev/rust/cov-playground)\r\n    Finished test [unoptimized + debuginfo] target(s) in 0.08s\r\n     Running unittests src/main.rs (target/llvm-cov-target/debug/deps/cov_playground-e5b52a4d8622a05a)\r\n\r\nrunning 1 test\r\ntest my_test ... ok\r\n\r\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\r\n\r\n    1|      1|// THIS LINE SHOULD NOT BE DUPLICATED// THIS LINE SHOULD NOT BE DUPLICATED\r\n    2|       |\r\n    3|      0|fn main() {}\r\n    4|       |\r\n    5|      1|#[test]\r\n    6|      1|fn my_test() {}\r\n```\r\n\r\n(I'm using `cargo-llvm-cov` for convenience, but the same thing happens when I use `RUSTC_FLAGS=\"-Cinstrument-coverage\"` and process the coverage data manually with `llvm-profdata` and `llvm-cov`.)\r\n\r\nNote that in the report produced by `llvm-cov`, the first line of the file appears twice. It is marked as having executed once, even though it is a comment.\r\n\r\nInstead, the line should only appear once, and its execution count (if any) should be the execution count of the actual code on that line.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.69.0 (84c898d65 2023-04-16)\r\nbinary: rustc\r\ncommit-hash: 84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc\r\ncommit-date: 2023-04-16\r\nhost: aarch64-apple-darwin\r\nrelease: 1.69.0\r\nLLVM version: 15.0.7\r\n```\r\n\r\n```\r\n$ cargo llvm-cov --version\r\ncargo-llvm-cov 0.5.11\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<!--\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n-->\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110749/timeline", "performed_via_github_app": null, "state_reason": "completed"}