{"url": "https://api.github.com/repos/rust-lang/rust/issues/40363", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40363/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40363/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40363/events", "html_url": "https://github.com/rust-lang/rust/issues/40363", "id": 212787577, "node_id": "MDU6SXNzdWUyMTI3ODc1Nzc=", "number": 40363, "title": "Common well-known traits make \"Trait Implementations\" too verbose", "user": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-03-08T16:38:47Z", "updated_at": "2022-01-18T22:16:13Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I find the \"Trait Implementations\" section of Rustdoc very hard to follow. It has low signal to noise ratio:\r\n\r\n* Very common traits are displayed in full detail. For traits like `Copy`, `Clone`, `Default`, `Display`, `Debug`, `Hash`, etc. I don't need to see all the methods *inline* with their description. Just links to these traits would be enough. Generally I only need to know whether the type implements them or not.\r\n\r\n* Similarly, traits used via operators are also displayed in full detail. `Eq`, `PartialEq`, `Add`, `Sub`, `Ord`, `PartialOrd`, etc. flood the documentation page with documentation *of* the traits, and the specific methods are even less relevant. The long verbose list makes it hard to see *which* traits are supported.\r\n\r\n* If the type implements the same trait multiple times for slightly different types, the whole trait documentation is repeated multiple times. It is useful to know which type combinations are supported, but repeated function descriptions only lower signal to noise ratio. It's worst for [primitive types](https://doc.rust-lang.org/std/primitive.i32.html) where the list appears to be dominated by countless the variants of `Shr` and `Shl`, drowning out all other information.\r\n\r\nThe current layout does work well for less common/more specific traits, e.g. having entire trait documentation inlined is perfect for `*Ext` traits and makes sense in some cases like `impl Read for File`.\r\n\r\nSo I'm suggesting:\r\n\r\n* Implement collapsing widget for trait implementations, which collapses documentation of methods, leaving only `[+] impl Trait for Foo` line.\r\n\r\n* Collapse basic traits by default (`Copy`, `Clone`, `Debug`, `std::ops::*`, etc.). Not all traits in `std` are obvious, so the list of traits to display in a terse form would probably be manually curated.\r\n\r\n* Group implementations of the same trait together, and collapse all implementations except one. For example [`File`](https://doc.rust-lang.org/std/fs/struct.File.html) displays all of `Read` docs twice, in two separate places. It makes the list longer and makes it harder to notice that there are two implementations. It would be clearer to display it as:\r\n\r\n    > `[+] impl Read for File`\r\n    > `[-] impl<'a> Read for &'a File`\r\n    >  ` fn read(&mut self) \u2026`\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40363/reactions", "total_count": 8, "+1": 8, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40363/timeline", "performed_via_github_app": null, "state_reason": null}