{"url": "https://api.github.com/repos/rust-lang/rust/issues/35416", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/35416/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/35416/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/35416/events", "html_url": "https://github.com/rust-lang/rust/issues/35416", "id": 169734563, "node_id": "MDU6SXNzdWUxNjk3MzQ1NjM=", "number": 35416, "title": "Repr Enum Bug", "user": {"login": "chasewalden", "id": 3535921, "node_id": "MDQ6VXNlcjM1MzU5MjE=", "avatar_url": "https://avatars.githubusercontent.com/u/3535921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chasewalden", "html_url": "https://github.com/chasewalden", "followers_url": "https://api.github.com/users/chasewalden/followers", "following_url": "https://api.github.com/users/chasewalden/following{/other_user}", "gists_url": "https://api.github.com/users/chasewalden/gists{/gist_id}", "starred_url": "https://api.github.com/users/chasewalden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chasewalden/subscriptions", "organizations_url": "https://api.github.com/users/chasewalden/orgs", "repos_url": "https://api.github.com/users/chasewalden/repos", "events_url": "https://api.github.com/users/chasewalden/events{/privacy}", "received_events_url": "https://api.github.com/users/chasewalden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-06T07:27:06Z", "updated_at": "2016-08-07T00:13:24Z", "closed_at": "2016-08-07T00:13:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I stumbled across this while I was trying to do some _very, extremely unsafe_ casting between any/all types to i64. I found the `#[repr(<type>)` syntax earlier today and decided to give this a spin. It did not make the compiler happy at all.\n\n```\n#[repr(i64)]\n#[derive(Debug)]\nenum MyEnum<T> {\n    MyVariant(T),\n}\n\n...\n\nprintln!(\"{:?}\", MyEnum::MyVariant(\"Hello World\"));\n```\n\nyields\n\n```\nthread 'rustc' panicked at 'assertion failed: `(left == right)` (left: `ReprInt(src/lib.rs:177:12: 177:15, SignedInt(i64))`, right: `ReprAny`)', ../src/librustc/ty/layout.rs:951\nstack backtrace:\n   1:        0x10919450e - std::sys::backtrace::tracing::imp::write::h29f5fdb9fc0a7395\n   2:        0x1091a35ff - std::panicking::default_hook::_{{closure}}::h2cc84f0378700526\n   3:        0x1091a1b0d - std::panicking::default_hook::hbbe7fa36a995aca0\n   4:        0x1091a21a7 - std::panicking::rust_panic_with_hook::h105c3d42fcd2fb5e\n   5:        0x1091a2064 - std::panicking::begin_panic::hbf62ea4a5ff3f9de\n   6:        0x1091a1f72 - std::panicking::begin_panic_fmt::h20f5943904e5791d\n   7:        0x10598b14b - rustc::ty::layout::Layout::compute_uncached::h52016a57380b87fc\n   8:        0x104b266da - rustc::ty::util::_<impl rustc..ty..TyS<'tcx>>::layout::h6e715527ac894584\n   9:        0x104b2e5bf - rustc::infer::InferCtxtBuilder::enter::hafc62a0131a2dfab\n  10:        0x104c6b65d - rustc_trans::type_of::sizing_type_of::ha156764ed6a49454\n  11:        0x104b7b87b - rustc_trans::abi::FnType::unadjusted::h83ea175ee374368f\n  12:        0x104bfcd4b - rustc_trans::declare::declare_fn::h54ad486bf2f83536\n  13:        0x104c61f87 - rustc_trans::trans_item::TransItem::predefine::habe2be2cf7d59b5d\n  14:        0x104b9cbf2 - rustc_trans::base::trans_crate::h9baf3a0389546061\n  15:        0x1046a050a - rustc_driver::driver::phase_4_translate_to_llvm::h54e99578fb1bb696\n  16:        0x1046dd72c - rustc_driver::driver::compile_input::_{{closure}}::h7236bd0d96fe8ce9\n  17:        0x1046d03ba - rustc_driver::driver::phase_3_run_analysis_passes::_{{closure}}::h7f2cec505064b4bf\n  18:        0x10462c3a5 - rustc::ty::context::TyCtxt::create_and_enter::hab8fd8369376d0f6\n  19:        0x10468bea1 - rustc_driver::driver::compile_input::hb4cc34cf85dc1edf\n  20:        0x1046b2d30 - rustc_driver::run_compiler::h50f95674bd902ab5\n  21:        0x1046030de - std::panicking::try::call::h4577500a5284c6ff\n  22:        0x1091aa47a - __rust_maybe_catch_panic\n  23:        0x10461b5d1 - _<F as alloc..boxed..FnBox<A>>::call_box::h24f3eb0b42327962\n  24:        0x1091a08b5 - std::sys::thread::Thread::new::thread_start::h8f3bd45211e9f5ea\n  25:     0x7fff9a683c12 - _pthread_body\n  26:     0x7fff9a683b8f - _pthread_start\n```\n\nSide note: there are a bunch of C libraries that I have used that have duplicate enum entries\n\ni.e.\n\n```\nenum Something {\n     Thing1 = 1,\n     Thing2 = 2,\n     AnotherThing = 2,\n     // etc.\n}\n```\n\nCurrently, we are not allowed to have duplicate values if we are trying to make an enum for use with the FFI, which in these cases, makes wrapping somewhat difficult. \n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/35416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/35416/timeline", "performed_via_github_app": null, "state_reason": "completed"}