{"url": "https://api.github.com/repos/rust-lang/rust/issues/80810", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80810/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80810/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80810/events", "html_url": "https://github.com/rust-lang/rust/issues/80810", "id": 781972620, "node_id": "MDU6SXNzdWU3ODE5NzI2MjA=", "number": 80810, "title": "Cross-compiling Rust to s390x yields a faulty toolchain", "user": {"login": "Jakob-Naucke", "id": 42409106, "node_id": "MDQ6VXNlcjQyNDA5MTA2", "avatar_url": "https://avatars.githubusercontent.com/u/42409106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jakob-Naucke", "html_url": "https://github.com/Jakob-Naucke", "followers_url": "https://api.github.com/users/Jakob-Naucke/followers", "following_url": "https://api.github.com/users/Jakob-Naucke/following{/other_user}", "gists_url": "https://api.github.com/users/Jakob-Naucke/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jakob-Naucke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jakob-Naucke/subscriptions", "organizations_url": "https://api.github.com/users/Jakob-Naucke/orgs", "repos_url": "https://api.github.com/users/Jakob-Naucke/repos", "events_url": "https://api.github.com/users/Jakob-Naucke/events{/privacy}", "received_events_url": "https://api.github.com/users/Jakob-Naucke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 896260695, "node_id": "MDU6TGFiZWw4OTYyNjA2OTU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-SystemZ", "name": "O-SystemZ", "color": "6e6ec0", "default": false, "description": "Target: SystemZ processors (s390x)"}], "state": "closed", "locked": false, "assignee": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/77", "html_url": "https://github.com/rust-lang/rust/milestone/77", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/77/labels", "id": 6103881, "node_id": "MDk6TWlsZXN0b25lNjEwMzg4MQ==", "number": 77, "title": "1.50.0", "description": "", "creator": {"login": "rustbot", "id": 47979223, "node_id": "MDQ6VXNlcjQ3OTc5MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47979223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustbot", "html_url": "https://github.com/rustbot", "followers_url": "https://api.github.com/users/rustbot/followers", "following_url": "https://api.github.com/users/rustbot/following{/other_user}", "gists_url": "https://api.github.com/users/rustbot/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustbot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustbot/subscriptions", "organizations_url": "https://api.github.com/users/rustbot/orgs", "repos_url": "https://api.github.com/users/rustbot/repos", "events_url": "https://api.github.com/users/rustbot/events{/privacy}", "received_events_url": "https://api.github.com/users/rustbot/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 633, "state": "closed", "created_at": "2020-11-13T11:49:45Z", "updated_at": "2022-08-08T21:30:48Z", "due_on": null, "closed_at": "2021-02-12T00:55:21Z"}, "comments": 33, "created_at": "2021-01-08T09:18:36Z", "updated_at": "2021-03-12T04:55:23Z", "closed_at": "2021-03-12T04:55:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\n\r\nI tried this code **on s390x**:\r\n```rust\r\ntrait T1: {}\r\ntrait T2: {\r\n    type Foo: T1; \r\n}\r\ntrait T3<T>: {\r\n    fn f(&self) -> T::Foo where T: T2; \r\n}\r\nfn main() {}\r\n```\r\n\r\n(originally discovered in and derived to make an MWE from [gimli](https://github.com/gimli-rs/gimli)) with all of the following:\r\n\r\n- rustup toolchains 1.50 (current beta) and 1.51 (current nightly)\r\n- https://static.rust-lang.org/dist/2020-12-30/rust-beta-s390x-unknown-linux-gnu.tar.gz which is used as stage0 when compiling Rust\r\n- Rust cross-compiled from the Git repository on master with `DEPLOY=1 ./src/ci/docker/run.sh dist-s390x-linux` on x86_64 and installed on s390x\r\n\r\nI expected to see this happen: a successful compiler run, as is on x86_64\r\n\r\nInstead, this happened:\r\n```\r\nerror[E0220]: associated type `Foo` not found for `T` \r\n --> demo.rs:6:23\r\n  |\r\n6 |     fn f(&self) -> T::Foo where T: T2; \r\n  |                       ^^^ associated type `Foo` not found\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0220`.\r\n```\r\n\r\nFurthermore, when building Rust with `x.py` on s390x after the switch to the aforementioned 2020-12-30 stage0 (introduced in `fe031180`), an **ICE** is claimed:\r\n\r\n<details><summary>Output</summary>\r\n<p>\r\n\r\n```\r\n$ RUST_BACKTRACE=1 ./x.py build\r\nUpdating only changed submodules\r\nSubmodules updated in 0.02 seconds\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.13s\r\nBuilding stage0 std artifacts (s390x-unknown-linux-gnu -> s390x-unknown-linux-gnu)\r\n   Compiling core v0.0.0 (/home/fedora/rust/library/core)\r\nerror: internal compiler error: compiler/rustc_privacy/src/lib.rs:500:25: item Item { ident: #0, hir_id: HirId { owner: DefId(0:472 ~ core[5990]::num::flt2dec::{misc#0}), local_id: 0 }, attrs: [], kind: Use(Path { span: library/core/src/num/flt2dec/mod.rs:125:9: 125:70 (#0), res: Err, segments: [PathSegment { ident: self#0, hir_id: Some(HirId { owner: DefId(0:472 ~ core[5990]::num::flt2dec::{misc#0}), local_id: 1 }), res: Some(Err), args: None, infer_args: false }, PathSegment { ident: decoder#0, hir_id: Some(HirId { owner: DefId(0:472 ~ core[5990]::num::flt2dec::{misc#0}), local_id: 2 }), res: Some(Def(Mod, DefId(0:478 ~ core[5990]::num::flt2dec::decoder))), args: None, infer_args: false }] }, ListStem), vis: Spanned { node: Inherited, span: library/core/src/num/flt2dec/mod.rs:125:9: 125:9 (#0) }, span: library/core/src/num/flt2dec/mod.rs:125:1: 125:71 (#0) } with DefKind Struct\r\n\r\nthread 'rustc' panicked at 'Box<Any>', compiler/rustc_errors/src/lib.rs:958:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: rustc_errors::HandlerInner::bug\r\n   2: rustc_errors::Handler::bug\r\n   3: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n   4: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n   5: rustc_middle::ty::context::tls::with_opt\r\n   6: rustc_middle::util::bug::opt_span_bug_fmt\r\n   7: rustc_middle::util::bug::bug_fmt\r\n   8: rustc_privacy::EmbargoVisitor::update_macro_reachable_def\r\n   9: rustc_privacy::EmbargoVisitor::update_macro_reachable\r\n  10: rustc_privacy::EmbargoVisitor::update_macro_reachable_def\r\n  11: rustc_privacy::EmbargoVisitor::update_macro_reachable\r\n  12: rustc_privacy::EmbargoVisitor::update_macro_reachable_def\r\n  13: rustc_privacy::EmbargoVisitor::update_macro_reachable\r\n  14: <rustc_privacy::EmbargoVisitor as rustc_hir::intravisit::Visitor>::visit_macro_def\r\n  15: rustc_privacy::privacy_access_levels\r\n  16: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::privacy_access_levels>::compute\r\n  17: rustc_query_system::dep_graph::graph::DepGraph<K>::with_eval_always_task\r\n  18: rustc_data_structures::stack::ensure_sufficient_stack\r\n  19: rustc_query_system::query::plumbing::get_query_impl\r\n  20: rustc_query_system::query::plumbing::ensure_query_impl\r\n  21: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  22: __rust_try.llvm.16454507701973609965\r\n  23: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  24: rustc_interface::passes::analysis\r\n  25: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  26: rustc_query_system::dep_graph::graph::DepGraph<K>::with_eval_always_task\r\n  27: rustc_data_structures::stack::ensure_sufficient_stack\r\n  28: rustc_query_system::query::plumbing::get_query_impl\r\n  29: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  30: rustc_span::with_source_map\r\n  31: rustc_interface::interface::create_compiler_and_run\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-beta.1 (05b602367 2020-12-29) running on s390x-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z macro-backtrace -Z binary-dep-depinfo -Z force-unstable-if-unmarked -C opt-level=3 -C embed-bitcode=no -C debuginfo=0 -C link-args=-Wl,-rpath,$ORIGIN/../lib -C prefer-dynamic --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [privacy_access_levels] privacy access levels\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `core`\r\n\r\nTo learn more, run the command again with --verbose.\r\ncommand did not execute successfully: \"/home/fedora/rust/build/s390x-unknown-linux-gnu/stage0/bin/cargo\" \"build\" \"--target\" \"s390x-unknown-linux-gnu\" \"-Zbinary-dep-depinfo\" \"-j\" \"4\" \"--release\" \"--features\" \"panic-unwind backtrace compiler-builtins-c\" \"--manifest-path\" \"/home/fedora/rust/library/test/Cargo.toml\" \"--message-format\" \"json-render-diagnostics\"\r\nexpected success, got: exit code: 101\r\nfailed to run: /home/fedora/rust/build/bootstrap/debug/bootstrap build\r\nBuild completed unsuccessfully in 0:00:06\r\n```\r\n</p>\r\n</details>\r\n\r\nRust compiled on s390x natively (immediately prior to that introduction) does *not* have this issue.\r\n\r\nSince the Rust dists are built through cross-compilation for Tier 2 architectures, I believe that there is a problem specific to the cross-compilation with an s390x target.\r\n\r\n### Versions it worked on\r\n\r\nIt most recently worked on:\r\n\r\n- rustup toolchain 1.49 (current stable)\r\n- https://static.rust-lang.org/dist/2020-11-18/rust-beta-s390x-unknown-linux-gnu.tar.gz, the previous stage0\r\n- Rust cross-compiled from the Git repository on tag 1.49.0\r\n\r\n### Versions with regression\r\n\r\ne.g.\r\n\r\n```sh\r\n$ rustc --verbose --version\r\nrustc 1.50.0-beta.5 (ff5998292 2021-01-05)\r\nbinary: rustc\r\ncommit-hash: ff59982926d98c8508008f0559f8a055260ac05e\r\ncommit-date: 2021-01-05\r\nhost: s390x-unknown-linux-gnu\r\nrelease: 1.50.0-beta.5\r\n```\r\n\r\n### Backtrace\r\n\r\nno additional info for code example, ICE output had backtrace enabled\r\n\r\n@rustbot modify labels: +regression-from-stable-to-beta -regression-untriaged", "closed_by": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80810/timeline", "performed_via_github_app": null, "state_reason": "completed"}