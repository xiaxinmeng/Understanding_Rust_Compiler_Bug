{"url": "https://api.github.com/repos/rust-lang/rust/issues/57781", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57781/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57781/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57781/events", "html_url": "https://github.com/rust-lang/rust/issues/57781", "id": 401122008, "node_id": "MDU6SXNzdWU0MDExMjIwMDg=", "number": 57781, "title": "ICE Type parameter out of range when substituting", "user": {"login": "zsinskri", "id": 19800705, "node_id": "MDQ6VXNlcjE5ODAwNzA1", "avatar_url": "https://avatars.githubusercontent.com/u/19800705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zsinskri", "html_url": "https://github.com/zsinskri", "followers_url": "https://api.github.com/users/zsinskri/followers", "following_url": "https://api.github.com/users/zsinskri/following{/other_user}", "gists_url": "https://api.github.com/users/zsinskri/gists{/gist_id}", "starred_url": "https://api.github.com/users/zsinskri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zsinskri/subscriptions", "organizations_url": "https://api.github.com/users/zsinskri/orgs", "repos_url": "https://api.github.com/users/zsinskri/repos", "events_url": "https://api.github.com/users/zsinskri/events{/privacy}", "received_events_url": "https://api.github.com/users/zsinskri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-20T17:52:42Z", "updated_at": "2019-03-13T01:29:24Z", "closed_at": "2019-03-13T01:29:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Both nightly and stable ICE on this code:\r\n\r\n```rust\r\nuse once_cell::sync::OnceCell;\r\nuse std::collections::HashMap;\r\n\r\ntype Cache<K, T> = OnceCell<HashMap<K, T>>;\r\n\r\ntrait Provider<K, T> {\r\n    fn new_cache() -> Cache<K, T> {\r\n        OnceCell::INIT\r\n    }\r\n}\r\n\r\nstruct Fib;\r\n\r\nimpl Provider<u32, u32> for Fib {}\r\n\r\nfn main() {\r\n    let _ = Fib::new_cache();\r\n}\r\n\r\n```\r\n\r\nI expected to see this happen: \r\nThis should either compile or throw an Error explaining why it is invalid.\r\n\r\nInstead, this happened:\r\nBoth `cargo build` and `cargo +nightly build` throw an ICE.\r\n\r\n## Meta\r\n\r\ninstalled dependencies:\r\n```toml\r\nonce_cell = \"0.1.7\"\r\n```\r\n\r\n`rustc --version --verbose`:\r\nrustc 1.32.0 (9fda7c223 2019-01-16)\r\nbinary: rustc\r\ncommit-hash: 9fda7c2237db910e41d6a712e9a2139b352e558b\r\ncommit-date: 2019-01-16\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.32.0\r\nLLVM version: 8.0\r\n\r\n`rustc +nightly --version --verbose`:\r\nrustc 1.33.0-nightly (0c0c58528 2019-01-19)\r\nbinary: rustc\r\ncommit-hash: 0c0c585281740aba4c91cbfd385f5e1fbe313d11\r\ncommit-date: 2019-01-19\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.33.0-nightly\r\nLLVM version: 8.0\r\n\r\nBacktrace:\r\n```\r\nerror: internal compiler error: src/librustc/ty/subst.rs:491: Type parameter `K/#1` (K/1) out of range when substituting (root type=Some(std::option::Option<std::collections::HashMap<K, T>>)) substs=[std::collections::HashMap<K, T>]\r\n\r\nthread 'main' panicked at 'Box<Any>', src/librustc_errors/lib.rs:538:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n             at src/libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:495\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::span_bug\r\n   8: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::util::bug::opt_span_bug_fmt\r\n  13: rustc::util::bug::span_bug_fmt\r\n  14: <rustc::ty::subst::SubstFolder<'a, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  15: <smallvec::SmallVec<A> as core::iter::traits::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  16: rustc::ty::fold::TypeFoldable::fold_with\r\n  17: <rustc::ty::subst::SubstFolder<'a, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  18: <smallvec::SmallVec<A> as core::iter::traits::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  19: rustc::ty::fold::TypeFoldable::fold_with\r\n  20: <rustc::ty::subst::SubstFolder<'a, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  21: <smallvec::SmallVec<A> as core::iter::traits::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  22: rustc::ty::fold::TypeFoldable::fold_with\r\n  23: rustc::traits::codegen::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'tcx>>::subst_and_normalize_erasing_regions\r\n  24: <rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::resolve\r\n  25: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::run\r\n  26: rustc_mir::const_eval::eval_body_using_ecx\r\n  27: rustc_mir::const_eval::const_eval_raw_provider\r\n  28: rustc::ty::query::__query_compute::const_eval_raw\r\n  29: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::const_eval_raw<'tcx>>::compute\r\n  30: rustc::ty::context::tls::with_context\r\n  31: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  32: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  33: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  34: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  35: rustc::ty::query::TyCtxtAt::const_eval_raw\r\n  36: <rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::const_eval_raw\r\n  37: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::EvalContext<'a, 'mir, 'tcx, M>>::const_value_to_op\r\n  38: rustc_mir::const_eval::const_to_op\r\n  39: rustc_mir::transform::const_prop::ConstPropagator::eval_constant\r\n  40: <rustc_mir::transform::const_prop::ConstPropagator<'b, 'a, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_statement\r\n  41: <rustc_mir::transform::const_prop::ConstProp as rustc_mir::transform::MirPass>::run_pass\r\n  42: rustc_mir::transform::run_passes::{{closure}}\r\n  43: rustc_mir::transform::run_passes\r\n  44: rustc_mir::transform::optimized_mir\r\n  45: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::optimized_mir<'tcx>>::compute\r\n  46: rustc::ty::context::tls::with_context\r\n  47: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  48: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  49: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  50: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_query\r\n  51: rustc::ty::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::instance_mir\r\n  52: rustc_mir::monomorphize::collector::collect_items_rec\r\n  53: rustc_mir::monomorphize::collector::collect_items_rec\r\n  54: rustc_mir::monomorphize::collector::collect_crate_mono_items::{{closure}}\r\n  55: rustc::util::common::time\r\n  56: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  57: rustc::util::common::time\r\n  58: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  59: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::collect_and_partition_mono_items<'tcx>>::compute\r\n  60: rustc::ty::context::tls::with_context\r\n  61: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  62: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  63: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  64: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  65: rustc_codegen_ssa::base::codegen_crate\r\n  66: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate\r\n  67: rustc::util::common::time\r\n  68: rustc_driver::driver::phase_4_codegen\r\n  69: rustc_driver::driver::compile_input::{{closure}}\r\n  70: rustc::ty::context::tls::enter_context\r\n  71: <std::thread::local::LocalKey<T>>::with\r\n  72: rustc::ty::context::TyCtxt::create_and_enter\r\n  73: rustc_driver::driver::compile_input\r\n  74: rustc_driver::run_compiler_with_pool\r\n  75: <scoped_tls::ScopedKey<T>>::set\r\n  76: rustc_driver::run_compiler\r\n  77: rustc_driver::monitor::{{closure}}\r\n  78: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  79: rustc_driver::run\r\n  80: rustc_driver::main\r\n  81: std::rt::lang_start::{{closure}}\r\n  82: std::panicking::try::do_call\r\n             at src/libstd/rt.rs:59\r\n             at src/libstd/panicking.rs:310\r\n  83: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  84: std::rt::lang_start_internal\r\n             at src/libstd/panicking.rs:289\r\n             at src/libstd/panic.rs:398\r\n             at src/libstd/rt.rs:58\r\n  85: main\r\n  86: __libc_start_main\r\n  87: <unknown>\r\nquery stack during panic:\r\n#0 [const_eval_raw] const-evaluating `<once_cell::imp::OnceCell<T>>::INIT`\r\n --> src/main.rs:8:9\r\n  |\r\n8 |         OnceCell::INIT\r\n  |         ^^^^^^^^^^^^^^\r\n#1 [optimized_mir] processing `Provider::new_cache`\r\n#2 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n```\r\n\r\nNote:\r\nThere are multiple issues with similar titles, sorry if this is a duplicate.\r\nMost other issues I could find seem to only affect nightly, this crashes on stable, too. #57700 panics during `mir_borrowck`, this in `optimized_mir`.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57781/timeline", "performed_via_github_app": null, "state_reason": "completed"}