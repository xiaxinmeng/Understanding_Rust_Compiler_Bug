{"url": "https://api.github.com/repos/rust-lang/rust/issues/73013", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73013/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73013/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73013/events", "html_url": "https://github.com/rust-lang/rust/issues/73013", "id": 631293430, "node_id": "MDU6SXNzdWU2MzEyOTM0MzA=", "number": 73013, "title": "Another semicolon Bug:missing a `semicolon` but rustc told me `call expression requires function`", "user": {"login": "Neutron3529", "id": 26130174, "node_id": "MDQ6VXNlcjI2MTMwMTc0", "avatar_url": "https://avatars.githubusercontent.com/u/26130174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neutron3529", "html_url": "https://github.com/Neutron3529", "followers_url": "https://api.github.com/users/Neutron3529/followers", "following_url": "https://api.github.com/users/Neutron3529/following{/other_user}", "gists_url": "https://api.github.com/users/Neutron3529/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neutron3529/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neutron3529/subscriptions", "organizations_url": "https://api.github.com/users/Neutron3529/orgs", "repos_url": "https://api.github.com/users/Neutron3529/repos", "events_url": "https://api.github.com/users/Neutron3529/events{/privacy}", "received_events_url": "https://api.github.com/users/Neutron3529/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-05T04:00:38Z", "updated_at": "2020-10-24T14:31:24Z", "closed_at": "2020-10-24T14:31:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n//first case, the problem is I am missing a semicolon, but compiler thought `if` returns `fn(i32)->_` but actually we need a `i32`\r\nfn main(){\r\n    let a:i32=if 2<3 {\r\n        4\r\n    } else {\r\n        5\r\n    }//missing a `semicolon` here, but rustc thinks I am doing a function call since I'm using parentheses in the latter column. and then told me `call expression requires function`\r\n    ([6]).iter().for_each(|x|println!(\"{}\",x));\r\n    println!(\"{}\",a)\r\n}\r\n```\r\nthis strange thing might due to the method to decide what if returns.\r\nIf we remove the `let` expression, things are quite different:\r\n```rust\r\n//second case, compiler thought `if` returns `()` but actually we need a fn(i32)->[i32;1]\r\nfn foo1(a:i32)->[i32;1]{[a]}\r\nfn foo2(b:i32)->[i32;1]{[b+1]}\r\nfn main(){\r\n    if 2<3 {\r\n        foo1\r\n    } else {\r\n        foo2\r\n    }(3)//here, I want to sent `3` into either `foo1` or `foo2`, but `rustc` thought the `if` block should return `()` rather than `fn`\r\n    .iter().for_each(|x|println!(\"{}\",x))\r\n}\r\n```\r\nIt seems rust will suppose `if` always returns `()` when there is no `=` before `if`\r\nbut with a `=` such as `let a=if ...`, the `if` will always returns something.\r\nwhich is quite strange.\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.45.0-nightly (56daaf669 2020-06-03)\r\nbinary: rustc\r\ncommit-hash: 56daaf669ebc3d5083db5cded719f780dc31104e\r\ncommit-date: 2020-06-03\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.45.0-nightly\r\nLLVM version: 10.0\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nneutron@Neutron:/me$ RUST_BACKTRACE=1 rustc rust/fuckif.rs \r\nerror[E0618]: expected function, found `{integer}`\r\n --> rust/fuckif.rs:2:11\r\n  |\r\n2 |        let a=if 2<3 {\r\n  |   ___________^\r\n  |  |___________|\r\n  | ||\r\n3 | ||         4\r\n4 | ||     } else {\r\n5 | ||         5\r\n6 | ||     }\r\n  | ||_____^\r\n7 | |      (1+2).iter().for_each(|x|println!(\"{}\",x));\r\n  | |__________- call expression requires function\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0618`.\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "Neutron3529", "id": 26130174, "node_id": "MDQ6VXNlcjI2MTMwMTc0", "avatar_url": "https://avatars.githubusercontent.com/u/26130174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neutron3529", "html_url": "https://github.com/Neutron3529", "followers_url": "https://api.github.com/users/Neutron3529/followers", "following_url": "https://api.github.com/users/Neutron3529/following{/other_user}", "gists_url": "https://api.github.com/users/Neutron3529/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neutron3529/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neutron3529/subscriptions", "organizations_url": "https://api.github.com/users/Neutron3529/orgs", "repos_url": "https://api.github.com/users/Neutron3529/repos", "events_url": "https://api.github.com/users/Neutron3529/events{/privacy}", "received_events_url": "https://api.github.com/users/Neutron3529/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73013/timeline", "performed_via_github_app": null, "state_reason": "completed"}