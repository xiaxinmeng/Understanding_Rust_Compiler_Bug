{"url": "https://api.github.com/repos/rust-lang/rust/issues/67047", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67047/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67047/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67047/events", "html_url": "https://github.com/rust-lang/rust/issues/67047", "id": 533163931, "node_id": "MDU6SXNzdWU1MzMxNjM5MzE=", "number": 67047, "title": "Strange errors / suggestions when using `[T; Self::CONST]` in traits", "user": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1405345617, "node_id": "MDU6TGFiZWwxNDA1MzQ1NjE3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lazy-normalization", "name": "A-lazy-normalization", "color": "f7e101", "default": false, "description": "Area: lazy normalization (tracking issue: #60471)"}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-05T07:00:57Z", "updated_at": "2019-12-05T07:34:22Z", "closed_at": "2019-12-05T07:34:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When using (wrong but intuitve) `[T; Self::CONST]` syntax rustc gives strange errors and suggestions those doesn't help:\r\n\r\n```rust\r\ntrait Trait {\r\n    const CONST: usize;\r\n    \r\n    fn fun() -> [(); Self::CONST];\r\n}\r\n```\r\n```\r\nerror[E0599]: no associated item named `CONST` found for type `Self` in the current scope\r\n --> src/lib.rs:4:28\r\n  |\r\n4 |     fn fun() -> [(); Self::CONST];\r\n  |                            ^^^^^ associated item not found in `Self`\r\n  |\r\n  = help: items from traits can only be used if the type parameter is bounded by the trait\r\nhelp: the following trait defines an item `CONST`, perhaps you need to restrict type parameter `Self` with it:\r\n  |\r\n1 | Self: Trait\r\n  |\r\n```\r\n([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=580ea268d57b6842aae972b369aa78c5))\r\n\r\n```rust\r\ntrait Trait {\r\n    const CONST: usize;\r\n    \r\n    fn fun() -> [(); Self::CONST] where Self: Trait;\r\n}\r\n```\r\n```\r\nerror[E0599]: no associated item named `CONST` found for type `Self` in the current scope\r\n --> src/lib.rs:4:28\r\n  |\r\n4 |     fn fun() -> [(); Self::CONST] where Self: Trait;\r\n  |                            ^^^^^ associated item not found in `Self`\r\n  |\r\n  = help: items from traits can only be used if the type parameter is bounded by the trait\r\nhelp: the following trait defines an item `CONST`, perhaps you need to restrict type parameter `Self` with it:\r\n  |\r\n1 | Self: Trait\r\n  |\r\n```\r\n([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=5367a4cb59202cbf247103b21563ea1d))\r\n\r\n```rust\r\ntrait Trait {\r\n    const CONST: usize;\r\n    \r\n    fn fun() -> [(); <Self as Trait>::CONST];\r\n}\r\n```\r\n```\r\nerror[E0277]: the trait bound `Self: Trait` is not satisfied\r\n --> src/lib.rs:4:22\r\n  |\r\n2 |     const CONST: usize;\r\n  |     ------------------- required by `Trait::CONST`\r\n3 |     \r\n4 |     fn fun() -> [(); <Self as Trait>::CONST];\r\n  |                      ^^^^^^^^^^^^^^^^^^^^^^ the trait `Trait` is not implemented for `Self`\r\n  |\r\n  = help: consider adding a `where Self: Trait` bound\r\n```\r\n([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=e7416009faec89d47df59b01445d6484))\r\n```rust\r\ntrait Trait<T: Sized> {\r\n    const CONST: usize;\r\n    \r\n    fn fun(_: T) -> [(); <Self as Trait<T>>::CONST];\r\n}\r\n```\r\n```\r\nerror[E0277]: the size for values of type `T` cannot be known at compilation time\r\n --> src/lib.rs:4:26\r\n  |\r\n2 |     const CONST: usize;\r\n  |     ------------------- required by `Trait::CONST`\r\n3 |     \r\n4 |     fn fun(_: T) -> [(); <Self as Trait<T>>::CONST];\r\n  |                          ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\r\n  |\r\n  = help: the trait `std::marker::Sized` is not implemented for `T`\r\n  = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\r\n  = help: consider adding a `where T: std::marker::Sized` bound\r\n\r\nerror[E0277]: the trait bound `Self: Trait<T>` is not satisfied\r\n --> src/lib.rs:4:26\r\n  |\r\n2 |     const CONST: usize;\r\n  |     ------------------- required by `Trait::CONST`\r\n3 |     \r\n4 |     fn fun(_: T) -> [(); <Self as Trait<T>>::CONST];\r\n  |                          ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Trait<T>` is not implemented for `Self`\r\n  |\r\n  = help: consider adding a `where Self: Trait<T>` bound\r\n```\r\n([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=c77cd95bbf0497f06c3e993a03bc6975))", "closed_by": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67047/timeline", "performed_via_github_app": null, "state_reason": "completed"}