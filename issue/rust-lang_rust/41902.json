{"url": "https://api.github.com/repos/rust-lang/rust/issues/41902", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41902/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41902/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41902/events", "html_url": "https://github.com/rust-lang/rust/issues/41902", "id": 227854806, "node_id": "MDU6SXNzdWUyMjc4NTQ4MDY=", "number": 41902, "title": "Allow the use of expressions w/ known constants to be evaluated at compile-time", "user": {"login": "insipx", "id": 6452260, "node_id": "MDQ6VXNlcjY0NTIyNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/6452260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/insipx", "html_url": "https://github.com/insipx", "followers_url": "https://api.github.com/users/insipx/followers", "following_url": "https://api.github.com/users/insipx/following{/other_user}", "gists_url": "https://api.github.com/users/insipx/gists{/gist_id}", "starred_url": "https://api.github.com/users/insipx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/insipx/subscriptions", "organizations_url": "https://api.github.com/users/insipx/orgs", "repos_url": "https://api.github.com/users/insipx/repos", "events_url": "https://api.github.com/users/insipx/events{/privacy}", "received_events_url": "https://api.github.com/users/insipx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-11T01:33:37Z", "updated_at": "2017-06-22T20:19:09Z", "closed_at": "2017-06-22T20:19:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I should be able to create an array with some expression that is using already-established values (ie, consts, literals, initialized values, etc) to be evaluated at compile time. I feel this might be a fit for the \"2017 ergonomics\" push, though i may be wrong.\r\n\r\nI tried this code:\r\n```\r\nconst RAM_SIZE: usize = 0xFFFF;\r\nconst REGISTER_COUNT: usize = 128;\r\n\r\nenum GlobalRegisters {\r\n    dir = 0x5d,\r\n}\r\n\r\nfn example() {\r\n    let ram: [u8; RAM_SIZE] = [0u8; RAM_SIZE];\r\n    let regs: [u8; REGISTER_COUNT] = [0u8; REGISTER_COUNT];\r\n    let dir: [u8; (RAM_SIZE - (regs[GlobalRegisters::dir as usize] * 0x100)) as usize] = ram\r\n        [((regs[GlobalRegisters::dir as usize] * 0x100u8) as usize)..(RAM_SIZE)];\r\n}\r\n```\r\n\r\nLink to Rust Playground: https://is.gd/STgFNN\r\n\r\nI expected to see this happen: Compile without issue\r\n\r\nInstead, this happened: non-constant used with constant\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:  1.19.0-nightly (d3abc80b3 2017-05-09)\r\n\r\nBacktrace:\r\n```\r\n   Compiling testRust v0.1.0 (file:///home/insi/Projects/testRust)\r\n     Running `rustc --crate-name testRust src/lib.rs --crate-type lib --emit=dep-info,link -C debuginfo=2 -C metadata=29ecd2c420f54e6b -C extra-filename=-29ecd2c420f54e6b --out-dir /home/insi/Projects/testRust/target/debug/deps -L dependency=/home/insi/Projects/testRust/target/debug/deps`\r\nerror[E0435]: attempt to use a non-constant value in a constant\r\n  --> src/lib.rs:11:32\r\n   |\r\n11 |     let dir: [u8; (RAM_SIZE - (regs[GlobalRegisters::dir as usize] * 0x100)) as usize] = ram\r\n   |                                ^^^^ non-constant used with constant\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: Could not compile `testRust`.\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --crate-name testRust src/lib.rs --crate-type lib --emit=dep-info,link -C debuginfo=2 -C metadata=29ecd2c420f54e6b -C extra-filename=-29ecd2c420f54e6b --out-dir /home/insi/Projects/testRust/target/debug/deps -L dependency=/home/insi/Projects/testRust/target/debug/deps` (exit code: 101)\r\n```", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41902/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 1, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41902/timeline", "performed_via_github_app": null, "state_reason": "completed"}