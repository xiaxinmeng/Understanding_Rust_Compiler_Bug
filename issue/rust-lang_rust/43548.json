{"url": "https://api.github.com/repos/rust-lang/rust/issues/43548", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43548/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43548/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43548/events", "html_url": "https://github.com/rust-lang/rust/issues/43548", "id": 246543979, "node_id": "MDU6SXNzdWUyNDY1NDM5Nzk=", "number": 43548, "title": "OccupiedEntry lacks a map function", "user": {"login": "mpdn", "id": 448023, "node_id": "MDQ6VXNlcjQ0ODAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/448023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpdn", "html_url": "https://github.com/mpdn", "followers_url": "https://api.github.com/users/mpdn/followers", "following_url": "https://api.github.com/users/mpdn/following{/other_user}", "gists_url": "https://api.github.com/users/mpdn/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpdn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpdn/subscriptions", "organizations_url": "https://api.github.com/users/mpdn/orgs", "repos_url": "https://api.github.com/users/mpdn/repos", "events_url": "https://api.github.com/users/mpdn/events{/privacy}", "received_events_url": "https://api.github.com/users/mpdn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-29T20:38:22Z", "updated_at": "2017-07-30T08:47:58Z", "closed_at": "2017-07-30T08:30:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am trying to simplify some of my code and have created a `ExtendFold` trait for key-value containers that functions like `extend`, except that it \"folds\" over values that are already inserted into the collection:\r\n\r\n```\r\npub trait ExtendFold<A> {\r\n    type Value;\r\n\r\n    fn extend_fold<T,F>(&mut self, iter: T, f: F)\r\n        where T: IntoIterator<Item = A>, F: FnMut(Self::Value, Self::Value) -> Self::Value;\r\n}\r\n```\r\n\r\nThe idea is then that you could then use it something like this (here with `collect` instead of `extend`, but you get the idea):\r\n```\r\nlet min_by_key: HashMap<_,_> = iter\r\n    .collect_fold(std::cmp::min);\r\n\r\n// min_by_key now contains the minimum value for each key (nifty huh? :b)\r\n```\r\n\r\nBut the problem is that it seems impossible to implement without either cloning or changing the fold to use a reference instead in the current entry API. If `OccupiedEntry` had a function like `map<F: FnOnce(T) -> T>(&mut self, f: F)`, it would however be quite easy to implement:\r\n\r\n```\r\nimpl<K,V> ExtendFold<(K,V)> for HashMap<K,V> {\r\n    type Fold = V;\r\n\r\n    fn extend_fold<T,F>(&mut self, iter: T, mut f: F)\r\n        where T: IntoIterator<Item = (K,V)>, F: FnMut(V,V) -> V\r\n    {\r\n        for i in iter.into_iter() {\r\n            match self.entry(&i.0) {\r\n                Vacant(entry) => entry.insert(i),\r\n                Occupied(entry) => entry.map(|x| f(x,i.1))\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n`map` might be a bad name, as it is more of an in-place map. Maybe `replace_with` or `insert_with` would be better.", "closed_by": {"login": "mpdn", "id": 448023, "node_id": "MDQ6VXNlcjQ0ODAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/448023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpdn", "html_url": "https://github.com/mpdn", "followers_url": "https://api.github.com/users/mpdn/followers", "following_url": "https://api.github.com/users/mpdn/following{/other_user}", "gists_url": "https://api.github.com/users/mpdn/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpdn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpdn/subscriptions", "organizations_url": "https://api.github.com/users/mpdn/orgs", "repos_url": "https://api.github.com/users/mpdn/repos", "events_url": "https://api.github.com/users/mpdn/events{/privacy}", "received_events_url": "https://api.github.com/users/mpdn/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43548/timeline", "performed_via_github_app": null, "state_reason": "completed"}