{"url": "https://api.github.com/repos/rust-lang/rust/issues/41030", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41030/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41030/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41030/events", "html_url": "https://github.com/rust-lang/rust/issues/41030", "id": 218854030, "node_id": "MDU6SXNzdWUyMTg4NTQwMzA=", "number": 41030, "title": "Confusing Error Message On Not Specifying Trait Bound In Generic Function Signature", "user": {"login": "louy2", "id": 2263580, "node_id": "MDQ6VXNlcjIyNjM1ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/2263580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/louy2", "html_url": "https://github.com/louy2", "followers_url": "https://api.github.com/users/louy2/followers", "following_url": "https://api.github.com/users/louy2/following{/other_user}", "gists_url": "https://api.github.com/users/louy2/gists{/gist_id}", "starred_url": "https://api.github.com/users/louy2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/louy2/subscriptions", "organizations_url": "https://api.github.com/users/louy2/orgs", "repos_url": "https://api.github.com/users/louy2/repos", "events_url": "https://api.github.com/users/louy2/events{/privacy}", "received_events_url": "https://api.github.com/users/louy2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-04-03T07:50:12Z", "updated_at": "2019-07-24T19:50:37Z", "closed_at": "2019-07-24T19:50:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am working through this [Rust-101 tutorial](https://www.ralfj.de/projects/rust-101/part02.html#section-11) and is faced with such a challenge:\r\n\r\n> There is a crucial difference to templates in C++: We actually have to declare which traits we want the type to satisfy. If we left away the Minimum, Rust would have complained that we cannot call min. Just try it! \r\n\r\nSo I tried it. [Rust complained, but in a pretty confusing way](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2015&gist=72d1dc9fa5275a9a8d9e4d7e6cf89897):\r\n\r\n> no method named `min` found for type `T` in the current scope\r\n  note: the method `min` exists but the following trait bounds were not satisfied: `T : std::iter::Iterator`\r\n  help: items from traits can only be used if the trait is implemented and in scope; the following traits define an item `min`, perhaps you need to implement one of them:\r\n  help: candidate #1: `part02::Minimum`\r\n  help: candidate #2: `part07::Minimum`\r\n  help: candidate #3: `std::iter::Iterator`\r\n\r\nThe minimal code that produces the error message is\r\n\r\n```rust\r\n// main.rs\r\npub enum SomethingOrNothing<T>  {\r\n    Something(T),\r\n    Nothing,\r\n}\r\npub use self::SomethingOrNothing::*;\r\n\r\npub trait Minimum : Copy {\r\n    fn min(self, b: Self) -> Self;\r\n}\r\n\r\npub fn vec_min<T/*: Minimum*/>(v: Vec<T>) -> SomethingOrNothing<T> {\r\n    let mut min = Nothing;\r\n    for e in v {\r\n        min = Something(match min {\r\n            Nothing => e,\r\n            // Here, we can now call the `min` function of the trait.\r\n            Something(n) => {\r\n                e.min(n)\r\n            }\r\n        });\r\n    }\r\n    min\r\n}\r\n\r\nimpl Minimum for i32 {\r\n    fn min(self, b: Self) -> Self {\r\n        if self < b { self } else { b }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let v = vec![18,5,7,3,9,27];\r\n    let min = vec_min(v);\r\n}\r\n```\r\n\r\nThe error message tells me that I need to implement a trait. Since I have already implemented it, I would be confused by the error message, and misled by it from the actual reason, failure to declare it in the signature. I think it would be better if the message is changed to\r\n\r\n> no method named `min` found for type `T` in the current scope\r\n  note: the method `min` exists but the following trait bounds were not satisfied: `T : std::iter::Iterator`\r\n  help: items from traits can only be used if the trait is implemented and in scope; the following traits define an item `min`, perhaps you need to ~~implement~~ declare one of them for `T`:\r\n  help: candidate #1: `part02::Minimum`\r\n  help: candidate #2: `part07::Minimum`\r\n  help: candidate #3: `std::iter::Iterator`\r\n\r\nOn the other hand, if I actually drop the block `impl Minimum for i32`, but declare `Minimum` in the signature, the error message is\r\n\r\n> E0277: the trait bound `{integer}: Minimum` is not satisfied\r\n  label: the trait `Minimum` is not implemented for `{integer}`\r\n  note: required by `vec_min`\r\n\r\nwhich is straightforward enough.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41030/timeline", "performed_via_github_app": null, "state_reason": "completed"}