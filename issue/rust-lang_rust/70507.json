{"url": "https://api.github.com/repos/rust-lang/rust/issues/70507", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70507/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70507/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70507/events", "html_url": "https://github.com/rust-lang/rust/issues/70507", "id": 589618651, "node_id": "MDU6SXNzdWU1ODk2MTg2NTE=", "number": 70507, "title": "ICE: Failed to get layout for `[type error]`:", "user": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-03-28T17:13:13Z", "updated_at": "2020-07-16T22:23:13Z", "closed_at": "2020-07-16T22:23:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nI hit this ice when trying implement https://github.com/rust-lang/rust/issues/60735.\r\nThe ice message looks very similar to https://github.com/rust-lang/rust/issues/70291, which has been closed already.\r\n### Code\r\n\r\n```Rust\r\n#![feature(const_generics)]\r\n\r\ntrait ConstChunksExactTrait<T> {\r\n    fn const_chunks_exact<const N: usize>(&self) -> ConstChunksExact<'_, T, {N}>;\r\n}\r\n\r\nimpl <T> ConstChunksExactTrait<T> for [T] {\r\n    fn const_chunks_exact<const N: usize>(&self) -> ConstChunksExact<'_, T, {N}> {\r\n\r\n        assert!(N != 0);\r\n        let rem = self.len() % N;\r\n        let len = self.len() - rem;\r\n        let (fst, snd) = self.split_at(len);\r\n        ConstChunksExact { v: fst, rem: snd }\r\n    }\r\n}\r\n\r\nstruct ConstChunksExact<'a, T: 'a, const N: usize> {\r\n    v: &'a [T],\r\n    rem: &'a [T]\r\n}\r\n\r\nimpl <'a, T, const N: usize> Iterator for ConstChunksExact<'a, T, {N}> {\r\n    type Item = [&'a T; N];\r\n    \r\n    fn next(&mut self) -> Option<Self::Item> {\r\n        if self.v.len() < N {\r\n            None\r\n        } else {\r\n            let (fst, snd) = self.v.split_at(N);\r\n            \r\n            self.v = snd;\r\n            \r\n            let ptr = fst.as_ptr() as *const _;\r\n            Some(unsafe { *ptr})\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let slice = &[1i32, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n    \r\n    for a in slice.const_chunks_exact::<{3usize}>() {\r\n        dbg!(a);\r\n    }\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.44.0-nightly (75208942f 2020-03-27)\r\n```\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: src/librustc_codegen_llvm/context.rs:854: failed to get layout for `[type error]`: the type `[type error]` has an unknown layout\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:880:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1069\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1439\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:218\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:515\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_opt\r\n  18: rustc::util::bug::opt_span_bug_fmt\r\n  19: rustc::util::bug::bug_fmt\r\n  20: <rustc_codegen_llvm::context::CodegenCx as rustc_target::abi::LayoutOf>::spanned_layout_of::{{closure}}\r\n  21: <rustc_codegen_llvm::context::CodegenCx as rustc_target::abi::LayoutOf>::spanned_layout_of\r\n  22: rustc_codegen_ssa::mir::analyze::non_ssa_locals\r\n  23: rustc_codegen_ssa::mir::codegen_mir\r\n  24: <rustc::mir::mono::MonoItem as rustc_codegen_ssa::mono_item::MonoItemExt>::define\r\n  25: rustc_codegen_llvm::base::compile_codegen_unit::module_codegen\r\n  26: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  27: rustc_codegen_llvm::base::compile_codegen_unit\r\n  28: rustc_codegen_ssa::base::codegen_crate\r\n  29: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  30: rustc_interface::passes::start_codegen\r\n  31: rustc::ty::context::tls::enter_global\r\n  32: rustc_interface::queries::Queries::ongoing_codegen\r\n  33: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  34: rustc_ast::attr::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.44.0-nightly (75208942f 2020-03-27) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `playground`.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70507/timeline", "performed_via_github_app": null, "state_reason": "completed"}