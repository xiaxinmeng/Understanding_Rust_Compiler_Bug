{"url": "https://api.github.com/repos/rust-lang/rust/issues/102823", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102823/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102823/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102823/events", "html_url": "https://github.com/rust-lang/rust/issues/102823", "id": 1402140728, "node_id": "I_kwDOAAsO6M5Tkvg4", "number": 102823, "title": "Bad diagnostics when using async fn's and attributes", "user": {"login": "matheus-consoli", "id": 27595790, "node_id": "MDQ6VXNlcjI3NTk1Nzkw", "avatar_url": "https://avatars.githubusercontent.com/u/27595790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matheus-consoli", "html_url": "https://github.com/matheus-consoli", "followers_url": "https://api.github.com/users/matheus-consoli/followers", "following_url": "https://api.github.com/users/matheus-consoli/following{/other_user}", "gists_url": "https://api.github.com/users/matheus-consoli/gists{/gist_id}", "starred_url": "https://api.github.com/users/matheus-consoli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matheus-consoli/subscriptions", "organizations_url": "https://api.github.com/users/matheus-consoli/orgs", "repos_url": "https://api.github.com/users/matheus-consoli/repos", "events_url": "https://api.github.com/users/matheus-consoli/events{/privacy}", "received_events_url": "https://api.github.com/users/matheus-consoli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-10-09T03:56:23Z", "updated_at": "2022-10-11T17:05:53Z", "closed_at": "2022-10-11T17:05:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "[rustexplorer](https://www.rustexplorer.com/b#%2F*%0A%5Bdependencies%5D%0Atracing%20%3D%20%220.1.36%22%0A*%2F%0A%0A%23%5Bderive(Debug)%5D%0Astruct%20Foo%3B%0A%0Aimpl%20Foo%20%7B%0A%20%20%20%20%23%5Btracing%3A%3Ainstrument()%5D%0A%20%20%20%20async%20fn%20missing_implementation(%26self)%20-%3E%20char%20%7B%7D%0A%0A%20%20%20%20%23%5Btracing%3A%3Ainstrument()%5D%0A%20%20%20%20async%20fn%20missing_wrapper(%26self)%20-%3E%20Option%3Cchar%3E%20%7B%0A%20%20%20%20%20%20%20%20'a'%0A%20%20%20%20%7D%0A%0A%20%20%20%20%23%5Btracing%3A%3Ainstrument()%5D%0A%20%20%20%20fn%20missing_implementation_sync(%26self)%20-%3E%20char%20%7B%7D%0A%0A%20%20%20%20%23%5Btracing%3A%3Ainstrument()%5D%0A%20%20%20%20fn%20missing_wrapper_sync(%26self)%20-%3E%20Option%3Cchar%3E%20%7B%0A%20%20%20%20%20%20%20%20'a'%0A%20%20%20%20%7D%0A%7D%0A%0Afn%20main()%20%7B%7D) (rustexplorer is a playground alternative, I'm using it because play.rust-lang.org doesn't exposes `tracing` attributes)\r\n\r\nThis is probably related to some other issues, like #71968, but I decided to open it either way because the diagnostics differ from the async and sync version.\r\n\r\nSimplifying my real case, given some struct:\r\n\r\n```rust\r\n#[derive(Debug)]\r\nstruct Foo;\r\n```\r\n\r\nI've tried implementing some instrumented associated async fn and hit check before finishing the code:\r\n\r\n```rust\r\nimpl Foo {\r\n    #[tracing::instrument()]\r\n    async fn missing_implementation(&self) -> char {}\r\n\r\n    #[tracing::instrument()]\r\n    async fn missing_wrapper(&self) -> Option<char> {\r\n        'a'\r\n    }\r\n}\r\n```\r\n\r\nwhich gave me weird diagnostics, especially the last one:\r\n\r\n```rust\r\n  --> src/main.rs:10:5\r\n   |\r\n10 |     #[tracing::instrument()]\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^ expected `char`, found `()`\r\n\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:13:5\r\n   |\r\n13 |     #[tracing::instrument()]\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `Option`, found `char`\r\n   |\r\n   = note: expected enum `Option<char>`\r\n              found type `char`\r\nhelp: try wrapping the expression in `Some`\r\n   |\r\n13 |     Some(#[tracing::instrument()])\r\n   |     +++++                        +\r\n```\r\n\r\nbut, to my surprise, testing with the sync version:\r\n\r\n```rust\r\nimpl Foo {\r\n    #[tracing::instrument()]\r\n    fn missing_implementation(&self) -> char {}\r\n\r\n    #[tracing::instrument()]\r\n    fn missing_wrapper(&self) -> Option<char> {\r\n        'a'\r\n    }\r\n}\r\n```\r\n\r\noutputs:\r\n\r\n```rust\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:19:51\r\n   |\r\n19 |     fn missing_implementation(&self) -> char {}\r\n   |                                              ^^ expected `char`, found `()`\r\n\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:23:9\r\n   |\r\n22 |     fn missing_wrapper(&self) -> Option<char> {\r\n   |                                  ------------ expected `Option<char>` because of return type\r\n23 |         'a'\r\n   |         ^^^ expected enum `Option`, found `char`\r\n   |\r\n   = note: expected enum `Option<char>`\r\n              found type `char`\r\nhelp: try wrapping the expression in `Some`\r\n   |\r\n23 |         Some('a')\r\n   |         +++++   +\r\n```\r\n\r\n\r\nI expect the async version outputs the same diagnostics as the sync version.", "closed_by": {"login": "matheus-consoli", "id": 27595790, "node_id": "MDQ6VXNlcjI3NTk1Nzkw", "avatar_url": "https://avatars.githubusercontent.com/u/27595790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matheus-consoli", "html_url": "https://github.com/matheus-consoli", "followers_url": "https://api.github.com/users/matheus-consoli/followers", "following_url": "https://api.github.com/users/matheus-consoli/following{/other_user}", "gists_url": "https://api.github.com/users/matheus-consoli/gists{/gist_id}", "starred_url": "https://api.github.com/users/matheus-consoli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matheus-consoli/subscriptions", "organizations_url": "https://api.github.com/users/matheus-consoli/orgs", "repos_url": "https://api.github.com/users/matheus-consoli/repos", "events_url": "https://api.github.com/users/matheus-consoli/events{/privacy}", "received_events_url": "https://api.github.com/users/matheus-consoli/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102823/timeline", "performed_via_github_app": null, "state_reason": "completed"}