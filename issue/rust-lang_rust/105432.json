{"url": "https://api.github.com/repos/rust-lang/rust/issues/105432", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105432/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105432/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105432/events", "html_url": "https://github.com/rust-lang/rust/issues/105432", "id": 1482925890, "node_id": "I_kwDOAAsO6M5YY6dC", "number": 105432, "title": "Panic handlers and order precedence? ", "user": {"login": "JoshLind", "id": 4578587, "node_id": "MDQ6VXNlcjQ1Nzg1ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/4578587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshLind", "html_url": "https://github.com/JoshLind", "followers_url": "https://api.github.com/users/JoshLind/followers", "following_url": "https://api.github.com/users/JoshLind/following{/other_user}", "gists_url": "https://api.github.com/users/JoshLind/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshLind/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshLind/subscriptions", "organizations_url": "https://api.github.com/users/JoshLind/orgs", "repos_url": "https://api.github.com/users/JoshLind/repos", "events_url": "https://api.github.com/users/JoshLind/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshLind/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "albertlarsan68", "id": 74931857, "node_id": "MDQ6VXNlcjc0OTMxODU3", "avatar_url": "https://avatars.githubusercontent.com/u/74931857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertlarsan68", "html_url": "https://github.com/albertlarsan68", "followers_url": "https://api.github.com/users/albertlarsan68/followers", "following_url": "https://api.github.com/users/albertlarsan68/following{/other_user}", "gists_url": "https://api.github.com/users/albertlarsan68/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertlarsan68/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertlarsan68/subscriptions", "organizations_url": "https://api.github.com/users/albertlarsan68/orgs", "repos_url": "https://api.github.com/users/albertlarsan68/repos", "events_url": "https://api.github.com/users/albertlarsan68/events{/privacy}", "received_events_url": "https://api.github.com/users/albertlarsan68/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "albertlarsan68", "id": 74931857, "node_id": "MDQ6VXNlcjc0OTMxODU3", "avatar_url": "https://avatars.githubusercontent.com/u/74931857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertlarsan68", "html_url": "https://github.com/albertlarsan68", "followers_url": "https://api.github.com/users/albertlarsan68/followers", "following_url": "https://api.github.com/users/albertlarsan68/following{/other_user}", "gists_url": "https://api.github.com/users/albertlarsan68/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertlarsan68/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertlarsan68/subscriptions", "organizations_url": "https://api.github.com/users/albertlarsan68/orgs", "repos_url": "https://api.github.com/users/albertlarsan68/repos", "events_url": "https://api.github.com/users/albertlarsan68/events{/privacy}", "received_events_url": "https://api.github.com/users/albertlarsan68/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-12-07T21:47:31Z", "updated_at": "2022-12-29T01:24:24Z", "closed_at": "2022-12-29T01:24:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reading the standard library documentation for `panic`, one might think that `catch_unwind` (https://doc.rust-lang.org/std/panic/fn.catch_unwind.html) would take precedence over any registered panic hook, i.e., if you used both `catch_unwind` and `set_hook` in a program, any unwinding panic thrown in the `catch_unwind` scope should be caught. But, this doesn't appear to be the case. See this simple example: https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=a0167a26203b23f5b50efcd1478b54d7\n\n```\nfn bar() {\n    println!(\"bar() is called!\");\n}\n\nfn foo() {\n    let res = std::panic::catch_unwind(|| {\n        bar();\n        panic!(\"Panicking after calling bar()!\");\n    });\n    \n    println!(\"Unwind closure returned: {:?}\", res);\n}\n\nfn main() {\n    std::panic::set_hook(Box::new(move |_| {\n        println!(\"Panic handler invoked!\");\n        std::process::exit(12);\n    }));\n    \n    foo();\n}\n```\n\nI'd expect `Unwind closure returned: Err(Any { .. })` to be printed, but it doesn't get printed. Instead, the panic handler is invoked.\n\n Can you elaborate if this is the correct behaviour/intent? And if so, why? It seems to me that it would be useful to support both concurrently, i.e., allow the catch to handle the panic, and if it cannot, it could fallback to the registered handler? \n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"albertlarsan68\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105432/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105432/timeline", "performed_via_github_app": null, "state_reason": "completed"}