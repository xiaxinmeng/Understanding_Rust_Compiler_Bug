{"url": "https://api.github.com/repos/rust-lang/rust/issues/29092", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/29092/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/29092/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/29092/events", "html_url": "https://github.com/rust-lang/rust/issues/29092", "id": 111747378, "node_id": "MDU6SXNzdWUxMTE3NDczNzg=", "number": 29092, "title": "Segfault in a compiler-generated Drop impl", "user": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 100522, "node_id": "MDU6TGFiZWwxMDA1MjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-crash", "name": "I-crash", "color": "e10c02", "default": false, "description": "Issue: The compiler crashes (SIGSEGV, SIGABRT, etc). Use I-ICE instead when the compiler panics."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-10-16T02:44:16Z", "updated_at": "2016-01-14T13:38:49Z", "closed_at": "2016-01-14T13:38:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I've tried reducing this code in various ways, and unfortunately the original seems to already be the smallest that fails! Removing variants from `Term` causes it to not exhibit itself, as does removing cases from the outer `match` in `small_eval`. It reproduces on latest nightly _only_ if debuginfo=2, but on older nightlies (@aatch reports a repro on 2015-09-22) or 1.3.0 it repros for debuginfo=1. On all versions, doing optimizations causes the issue to disappear.\n\n``` rust\nuse self::Term::*;\n\n#[derive(Clone)]\npub enum Term {\n    True,\n    False,\n    If(Box<Term>, Box<Term>, Box<Term>),\n    Succ(Box<Term>),\n    Pred(Box<Term>),\n    IsZero(Box<Term>),\n}\n\nfn isnumeric(v: &Term) -> bool {\n    match *v {\n        Pred(ref f) | Succ(ref f) => isnumeric(f),\n        _ => false\n    }\n}\n\n// a small-step evaluator\npub fn small_eval(v: &Term) -> Term {\n    match *v {\n        If(ref con, ref the, ref els) => match **con {\n            True => *the.clone(),\n            False => *els.clone(),\n            _ => If(Box::new(small_eval(con)), the.clone(), els.clone()),\n        },\n        Succ(ref s) => Succ(Box::new(small_eval(s))),\n        Pred(ref s) => match **s {\n            Succ(ref v) if isnumeric(v) => {\n                *v.clone()\n            },\n            _ => Pred(Box::new(small_eval(s))),\n        },\n        IsZero(ref s) => match **s {\n            Succ(ref s) if isnumeric(s) => False,\n            _ => IsZero(Box::new(small_eval(s))),\n        },\n        _ => v.clone()\n    }\n}\n\nfn main() {\n    let t = If(Box::new(True), Box::new(True), Box::new(True));\n    small_eval(&t);\n}\n```\n\nI suspect that an alloca (forced by debuginfo) is getting trampled somewhere.\n\nGDB backtrace (from rustc 1.5.0-nightly (eafe106ef 2015-10-15)):\n\n```\n(gdb) run\nStarting program: /tmp/foo \n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/usr/lib/libthread_db.so.1\".\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x0000555555558b14 in Term::drop.3510::ha59bcdf39bbe7497 ()\n(gdb) where\n#0  0x0000555555558b14 in Term::drop.3510::ha59bcdf39bbe7497 ()\n#1  0x0000555555558af2 in Box$LT$Term$GT$::drop.3508::h48a2557aadc5bcd2 ()\n#2  0x00005555555592c1 in foo::small_eval (v=0x7fffffffdb08) at foo.rs:25\n#3  0x0000555555559a06 in foo::main () at foo.rs:49\n#4  0x000055555555f525 in sys_common::unwind::try::try_fn::h16668888951888304395 ()\n#5  0x000055555555d1b9 in __rust_try ()\n#6  0x000055555555f1c0 in rt::lang_start::ha93496369c7c61cfF5w ()\n#7  0x0000555555559b1a in main ()\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/29092/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/29092/timeline", "performed_via_github_app": null, "state_reason": "completed"}