{"url": "https://api.github.com/repos/rust-lang/rust/issues/82619", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82619/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82619/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82619/events", "html_url": "https://github.com/rust-lang/rust/issues/82619", "id": 818113274, "node_id": "MDU6SXNzdWU4MTgxMTMyNzQ=", "number": 82619, "title": "Confusing mismatched type error message with const_evaluatable_checked", "user": {"login": "roboFiddle", "id": 13172598, "node_id": "MDQ6VXNlcjEzMTcyNTk4", "avatar_url": "https://avatars.githubusercontent.com/u/13172598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roboFiddle", "html_url": "https://github.com/roboFiddle", "followers_url": "https://api.github.com/users/roboFiddle/followers", "following_url": "https://api.github.com/users/roboFiddle/following{/other_user}", "gists_url": "https://api.github.com/users/roboFiddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/roboFiddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roboFiddle/subscriptions", "organizations_url": "https://api.github.com/users/roboFiddle/orgs", "repos_url": "https://api.github.com/users/roboFiddle/repos", "events_url": "https://api.github.com/users/roboFiddle/events{/privacy}", "received_events_url": "https://api.github.com/users/roboFiddle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-02-28T03:50:07Z", "updated_at": "2021-02-28T03:50:07Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I'd be happy to try to fix this, but some pointers on where to start would be greatly appreciated.\r\n\r\nGiven the following code - [playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=962c845e9dbe023df736f78ef7dd6e87):\r\n\r\n```rust\r\n#![allow(incomplete_features)]\r\n#![feature(const_generics)]\r\n#![feature(const_evaluatable_checked)]\r\n\r\nuse std::ops::Add;\r\n\r\nstruct ConstWrapper<const N: usize>;\r\nimpl<const N1: usize, const N2: usize> Add<ConstWrapper<N2>> for ConstWrapper<N1>\r\nwhere ConstWrapper<{N1 + N2}>: Sized\r\n{\r\n   type Output = ConstWrapper<{N1 + N2}>;\r\n   fn add(self, _other: ConstWrapper<N2>) -> Self::Output {\r\n       ConstWrapper\r\n   }\r\n}\r\n\r\nstruct WrapConstWrapper<T>(T);\r\nimpl<T1: Add<T2>, T2> Add<WrapConstWrapper<T2>> for WrapConstWrapper<T1> {\r\n    type Output = WrapConstWrapper<<T1 as Add<T2>>::Output>;\r\n    fn add(self, other: WrapConstWrapper<T2>) -> Self::Output {\r\n        WrapConstWrapper ( self.0 + other.0 )\r\n    }\r\n}\r\n\r\nfn get_0() -> WrapConstWrapper<ConstWrapper<0>> {\r\n    WrapConstWrapper(ConstWrapper)\r\n}\r\n\r\nfn main() {\r\n    let x: WrapConstWrapper<ConstWrapper<1>> = get_0() + get_0();\r\n    let y = get_0() + get_0();\r\n    let z: WrapConstWrapper<ConstWrapper<1>>;\r\n    z = y;\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:30:48\r\n   |\r\n30 |     let x: WrapConstWrapper<ConstWrapper<1>> = get_0() + get_0();\r\n   |                                                ^^^^^^^^^^^^^^^^^ expected `1_usize`, found `0_usize`\r\n   |\r\n   = note: expected type `1_usize`\r\n              found type `0_usize`\r\n\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:33:9\r\n   |\r\n33 |     z = y;\r\n   |         ^ expected `1_usize`, found `0_usize`\r\n   |\r\n   = note: expected struct `WrapConstWrapper<ConstWrapper<1_usize>>`\r\n              found struct `WrapConstWrapper<ConstWrapper<0_usize>>`\r\n```\r\nIdeally, the error messages would be identical. Removing the `{N1 + N2}` calculation allows the compiler to provide the same error message for both bindings (as seen [here](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=ff5b114f8623ec10e1940ee347c6676d)). It appears that the compiler is stopping at the mismatched constant instead of evaluating the entire type of `get_0() + get_0()`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82619/timeline", "performed_via_github_app": null, "state_reason": null}