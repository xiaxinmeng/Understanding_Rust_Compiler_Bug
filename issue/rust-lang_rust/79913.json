{"url": "https://api.github.com/repos/rust-lang/rust/issues/79913", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79913/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79913/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79913/events", "html_url": "https://github.com/rust-lang/rust/issues/79913", "id": 761564547, "node_id": "MDU6SXNzdWU3NjE1NjQ1NDc=", "number": 79913, "title": "thread 'rustc' panicked at 'no entry found for key', src/librustc_mir_build/build/mod.rs:345:9", "user": {"login": "chris-belcher", "id": 8398185, "node_id": "MDQ6VXNlcjgzOTgxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-belcher", "html_url": "https://github.com/chris-belcher", "followers_url": "https://api.github.com/users/chris-belcher/followers", "following_url": "https://api.github.com/users/chris-belcher/following{/other_user}", "gists_url": "https://api.github.com/users/chris-belcher/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions", "organizations_url": "https://api.github.com/users/chris-belcher/orgs", "repos_url": "https://api.github.com/users/chris-belcher/repos", "events_url": "https://api.github.com/users/chris-belcher/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-belcher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-12-10T19:55:28Z", "updated_at": "2021-01-11T02:01:35Z", "closed_at": "2021-01-11T02:01:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nuse std::error::Error;\r\n\r\nuse tokio::net::TcpStream;\r\nuse tokio::prelude::*;\r\nuse tokio::io::BufReader;\r\nuse tokio::sync::mpsc;\r\n\r\nuse serde_json;\r\nuse serde::{Deserialize, Serialize};\r\n\r\n#[derive(Debug, Serialize, Deserialize)]\r\npub struct TakerHello {\r\n    pub protocol_version_min: u32,\r\n    pub protocol_version_max: u32,\r\n}\r\n\r\n#[derive(Debug, Serialize, Deserialize)]\r\n#[serde(tag = \"method\", rename_all = \"lowercase\")]\r\npub enum TakerToMakerMessage {\r\n    TakerHello(TakerHello),\r\n}\r\n\r\n#[derive(Debug, Serialize, Deserialize)]\r\npub struct Offer {\r\n    pub absolute_fee: u32,\r\n    pub amount_relative_fee: f32,\r\n    pub max_size: u64,\r\n    pub min_size: u64,\r\n}\r\n\r\n#[derive(Debug, Serialize, Deserialize)]\r\n#[serde(tag = \"method\", rename_all = \"lowercase\")]\r\npub enum MakerToTakerMessage {\r\n    Offer(Offer),\r\n}\r\n\r\npub struct OfferAddress {\r\n    pub offer: Offer,\r\n    pub socket_address: String, //string for now when its \"localhost:port\"\r\n}\r\n\r\nasync fn sync_offerbook() -> Result<Vec<OfferAddress>, Box<dyn Error>> {\r\n\r\n    let (syncd_offers_writer, mut syncd_offers_reader) =\r\n        mpsc::channel::<Option<OfferAddress>>(100);\r\n\r\n    for host in &[\"localhost:6102\", \"localhost:16102\"] {\r\n        //TODO add timeouts to deal with indefinite hangs\r\n        let mut tx = syncd_offers_writer.clone();\r\n        tokio::spawn(async move {\r\n            let mut socket = match TcpStream::connect(host).await {\r\n                Ok(s) => s,\r\n                Err(_e) => {\r\n                    tx.send(None).await;\r\n                    return;\r\n                }\r\n            };\r\n\r\n            let (socket_reader, mut socket_writer) = socket.split();\r\n            let mut socket_reader = BufReader::new(socket_reader);\r\n\r\n            let mut message_packet = serde_json::to_vec(\r\n                &TakerToMakerMessage::TakerHello(TakerHello {\r\n                    protocol_version_min: 0,\r\n                    protocol_version_max: 0,\r\n                })\r\n            ).unwrap();\r\n            message_packet.push(b'\\n');\r\n            message_packet.append(\r\n                &mut serde_json::to_vec(\r\n                    &TakerToMakerMessage::TakerHello(TakerHello {\r\n                        protocol_version_min: 0,\r\n                        protocol_version_max: 0,\r\n                    })\r\n                ).unwrap()\r\n            );\r\n            message_packet.push(b'\\n');\r\n            //TODO error handling here\r\n            socket_writer.write_all(&message_packet).await.unwrap();\r\n\r\n            let mut line = String::new();\r\n            let n = match socket_reader.read_line(&mut line).await {\r\n                Ok(0) | Err(_e) => {\r\n                    tx.send(None).await;\r\n                    return;\r\n                },\r\n                Ok(n) => n,\r\n            };\r\n\r\n        });\r\n    }\r\n\r\n    Ok(vec![])\r\n}\r\n\r\nfn main() {\r\n    println!(\"hello world\");\r\n}\r\n\r\n```\r\n\r\nCargo.toml\r\n```\r\n[package]\r\nname = \"indium\"\r\nversion = \"0.1.0\"\r\nauthors = [\"chris-belcher <chris-belcher@users.noreply.github.com>\"]\r\nedition = \"2018\"\r\n\r\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\r\n\r\n[dependencies]\r\nserde = { version = \"1.0\", features = [\"derive\"] }\r\nserde_json = \"1.0\"\r\ntokio = { version = \"0.3\", features = [\"full\"] }\r\nfutures = \"0.3\"\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.44.1 (c7087fe00 2020-06-17)\r\nbinary: rustc\r\ncommit-hash: c7087fe00d2ba919df1d813c040a5d47e43b0fe7\r\ncommit-date: 2020-06-17\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.44.1\r\nLLVM version: 9.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n$ cargo check\r\n    Checking indium v0.1.0 (/home/username/coding/project/indium-compiler-crash)\r\nerror[E0408]: variable `_e` is not bound in all patterns\r\n  --> src/main.rs:83:17\r\n   |\r\n83 |                 Ok(0) | Err(_e) => {\r\n   |                 ^^^^^       -- variable not in all patterns\r\n   |                 |\r\n   |                 pattern doesn't bind `_e`\r\n\r\nthread 'rustc' panicked at 'no entry found for key', src/librustc_mir_build/build/mod.rs:345:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.44.1 (c7087fe00 2020-06-17) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0408`.\r\nerror: could not compile `indium`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n$ RUST_BACKTRACE=1 cargo build\r\n   Compiling indium v0.1.0 (/home/username/coding/project/indium-compiler-crash)\r\nerror[E0408]: variable `_e` is not bound in all patterns\r\n  --> src/main.rs:83:17\r\n   |\r\n83 |                 Ok(0) | Err(_e) => {\r\n   |                 ^^^^^       -- variable not in all patterns\r\n   |                 |\r\n   |                 pattern doesn't bind `_e`\r\n\r\nthread 'rustc' panicked at 'no entry found for key', src/librustc_mir_build/build/mod.rs:345:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1069\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1504\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:218\r\n  10: rustc_driver::report_ice\r\n  11: <alloc::boxed::Box<F> as core::ops::function::Fn<A>>::call\r\n             at /rustc/c7087fe00d2ba919df1d813c040a5d47e43b0fe7/src/liballoc/boxed.rs:1022\r\n  12: proc_macro::bridge::client::<impl proc_macro::bridge::Bridge>::enter::{{closure}}::{{closure}}\r\n             at /rustc/c7087fe00d2ba919df1d813c040a5d47e43b0fe7/src/libproc_macro/bridge/client.rs:305\r\n  13: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:515\r\n  14: rust_begin_unwind\r\n             at src/libstd/panicking.rs:419\r\n  15: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:111\r\n  16: core::option::expect_failed\r\n             at src/libcore/option.rs:1260\r\n  17: rustc_mir_build::build::matches::<impl rustc_mir_build::build::Builder>::bind_and_guard_matched_candidate\r\n  18: rustc_mir_build::build::matches::traverse_candidate\r\n  19: rustc_mir_build::build::matches::traverse_candidate\r\n  20: rustc_mir_build::build::matches::<impl rustc_mir_build::build::Builder>::bind_pattern\r\n  21: rustc_mir_build::build::scope::<impl rustc_mir_build::build::Builder>::in_scope\r\n  22: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold\r\n  23: rustc_mir_build::build::expr::into::<impl rustc_mir_build::build::Builder>::into_expr\r\n  24: rustc_mir_build::build::expr::into::<impl rustc_mir_build::build::Builder>::into_expr\r\n  25: rustc_mir_build::build::block::<impl rustc_mir_build::build::Builder>::ast_block_stmts\r\n  26: rustc_mir_build::build::expr::into::<impl rustc_mir_build::build::Builder>::into_expr\r\n  27: rustc_mir_build::build::expr::into::<impl rustc_mir_build::build::Builder>::into_expr\r\n  28: rustc_mir_build::build::expr::into::<impl rustc_mir_build::build::Builder>::into_expr\r\n  29: rustc_mir_build::build::construct_fn\r\n  30: rustc_infer::infer::InferCtxtBuilder::enter\r\n  31: rustc_mir_build::build::mir_built\r\n  32: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::mir_built>::compute\r\n  33: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  34: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  35: rustc_query_system::query::plumbing::get_query\r\n  36: rustc_mir::transform::check_unsafety::unsafety_check_result\r\n  37: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::unsafety_check_result>::compute\r\n  38: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  39: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  40: rustc_query_system::query::plumbing::get_query\r\n  41: <rustc_mir::transform::check_unsafety::UnsafetyChecker as rustc_middle::mir::visit::Visitor>::visit_rvalue\r\n  42: <rustc_mir::transform::check_unsafety::UnsafetyChecker as rustc_middle::mir::visit::Visitor>::visit_statement\r\n  43: rustc_mir::transform::check_unsafety::unsafety_check_result\r\n  44: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::unsafety_check_result>::compute\r\n  45: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  46: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  47: rustc_query_system::query::plumbing::get_query\r\n  48: <rustc_mir::transform::check_unsafety::UnsafetyChecker as rustc_middle::mir::visit::Visitor>::visit_rvalue\r\n  49: <rustc_mir::transform::check_unsafety::UnsafetyChecker as rustc_middle::mir::visit::Visitor>::visit_statement\r\n  50: rustc_mir::transform::check_unsafety::unsafety_check_result\r\n  51: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::unsafety_check_result>::compute\r\n  52: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  53: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  54: rustc_query_system::query::plumbing::get_query\r\n  55: rustc_mir::transform::mir_const\r\n  56: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::mir_const>::compute\r\n  57: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  58: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  59: rustc_query_system::query::plumbing::get_query\r\n  60: rustc_mir::transform::mir_validated\r\n  61: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::mir_validated>::compute\r\n  62: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  63: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  64: rustc_query_system::query::plumbing::get_query\r\n  65: rustc_mir::borrow_check::mir_borrowck\r\n  66: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::mir_borrowck>::compute\r\n  67: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  68: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  69: rustc_query_system::query::plumbing::get_query\r\n  70: rustc_typeck::collect::type_of::type_of\r\n  71: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  72: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  73: rustc_query_system::query::plumbing::get_query\r\n  74: rustc_middle::ty::util::<impl rustc_middle::ty::context::TyCtxt>::try_expand_impl_trait_type::OpaqueTypeExpander::expand_opaque_ty\r\n  75: rustc_middle::ty::util::<impl rustc_middle::ty::context::TyCtxt>::try_expand_impl_trait_type\r\n  76: rustc_typeck::check::check_item_type\r\n  77: rustc_middle::hir::map::Map::visit_item_likes_in_module\r\n  78: rustc_typeck::check::check_mod_item_types\r\n  79: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::check_mod_item_types>::compute\r\n  80: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  81: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  82: rustc_query_system::query::plumbing::get_query\r\n  83: rustc_query_system::query::plumbing::ensure_query\r\n  84: rustc_typeck::check_crate\r\n  85: rustc_interface::passes::analysis\r\n  86: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  87: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  88: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  89: rustc_query_system::query::plumbing::get_query\r\n  90: rustc_middle::ty::context::tls::enter_global\r\n  91: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  92: scoped_tls::ScopedKey<T>::set\r\n  93: rustc_ast::attr::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.44.1 (c7087fe00 2020-06-17) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [mir_built] building MIR for\r\n#1 [unsafety_check_result] unsafety-checking `sync_offerbook::{{closure}}#0::{{closure}}#0`\r\n#2 [unsafety_check_result] unsafety-checking `sync_offerbook::{{closure}}#0`\r\n#3 [unsafety_check_result] unsafety-checking `sync_offerbook`\r\n#4 [mir_const] processing `sync_offerbook`\r\n#5 [mir_validated] processing `sync_offerbook`\r\n#6 [mir_borrowck] borrow-checking `sync_offerbook`\r\n#7 [type_of] processing `sync_offerbook::{{opaque}}#0`\r\n#8 [check_mod_item_types] checking item types in top-level module\r\n#9 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0408`.\r\nerror: could not compile `indium`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nIf I use `Ok(0) | Err(_) => {` instead of `Ok(0) | Err(_e) => {` then the crash doesn't happen", "closed_by": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79913/timeline", "performed_via_github_app": null, "state_reason": "completed"}