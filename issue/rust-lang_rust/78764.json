{"url": "https://api.github.com/repos/rust-lang/rust/issues/78764", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78764/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78764/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78764/events", "html_url": "https://github.com/rust-lang/rust/issues/78764", "id": 736664258, "node_id": "MDU6SXNzdWU3MzY2NjQyNTg=", "number": 78764, "title": "Missing comma in 1-tuple type should suggest adding comma there, not removing comma in value", "user": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1624891239, "node_id": "MDU6TGFiZWwxNjI0ODkxMjM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-incorrect", "name": "D-incorrect", "color": "c9f7a3", "default": false, "description": "A diagnostic that is giving misleading or incorrect information"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-11-05T06:49:47Z", "updated_at": "2023-04-05T17:30:17Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Code:\r\n\r\n```rust\r\nfn main() {\r\n    let x: (i32) = (1,);\r\n}\r\n```\r\n\r\nCurrent Output:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nwarning: unnecessary parentheses around type\r\n --> src/main.rs:2:12\r\n  |\r\n2 |     let x: (i32) = (1,);\r\n  |            ^^^^^ help: remove these parentheses\r\n  |\r\n  = note: `#[warn(unused_parens)]` on by default\r\n\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:2:20\r\n  |\r\n2 |     let x: (i32) = (1,);\r\n  |             ---    ^^^^ expected `i32`, found tuple\r\n  |             |\r\n  |             expected due to this\r\n  |\r\n  = note: expected type `i32`\r\n            found tuple `({integer},)`\r\n\r\nerror: aborting due to previous error; 1 warning emitted\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nSuggested Output:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nwarning: missing comma on type\r\n --> src/main.rs:2:12\r\n  |\r\n2 |     let x: (i32) = (1,);\r\n  |                ^ help: add comma before here\r\n  |\r\n\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:2:20\r\n  |\r\n2 |     let x: (i32) = (1,);\r\n  |             ---    ^^^^ expected `i32`, found tuple\r\n  |             |\r\n  |             expected due to this\r\n  |\r\n  = note: expected type `i32`\r\n            found tuple `({integer},)`\r\n\r\nerror: aborting due to previous error; 1 warning emitted\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78764/timeline", "performed_via_github_app": null, "state_reason": null}