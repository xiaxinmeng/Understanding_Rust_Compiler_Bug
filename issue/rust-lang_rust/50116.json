{"url": "https://api.github.com/repos/rust-lang/rust/issues/50116", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50116/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50116/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50116/events", "html_url": "https://github.com/rust-lang/rust/issues/50116", "id": 316277384, "node_id": "MDU6SXNzdWUzMTYyNzczODQ=", "number": 50116, "title": "PathBuf set_file_name and with_file_name need docs for input abspaths", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 2238437210, "node_id": "MDU6TGFiZWwyMjM4NDM3MjEw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-io", "name": "A-io", "color": "f7e101", "default": false, "description": "Area: std::io, std::fs, std::net and std::path"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-20T13:54:04Z", "updated_at": "2023-01-26T20:46:39Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Looking at:\r\n\r\nhttps://doc.rust-lang.org/std/path/struct.PathBuf.html#method.with_file_name\r\n\r\nand\r\n\r\nhttps://doc.rust-lang.org/std/path/struct.PathBuf.html#method.set_file_name\r\n\r\nI had thought, based on what was written there, that the code would extract the filename alone from the input, dropping the directory prefix.\r\n\r\nBut apparently what will actually happen is that it drops all the content from `self` and just turns it into a copy of the input.\r\n\r\n(And if you give it a relative path with multiple components, then it effectively pushes all of the components onto `self`)\r\n\r\n\r\nI don't actually *mind* the current behavior, and it is easy enough to workaround myself. (Basically, I think `set_file_name` and `with_file_name` are somewhat misleadingly misnamed...) But we should document it it, perhaps with concrete examples.\r\n\r\nHere is an example of what I am getting at ([playpen](https://play.rust-lang.org/?gist=fc97d1c694aa12eb8e3586e0ca2bca31&version=stable)):\r\n\r\n```rust\r\nfn main() {\r\n    use std::path::Path;\r\n\r\n    println!(\"EXAMPLE 1\");\r\n    let path1 = Path::new(\"/dir1/file1.txt\");\r\n    let path2 = Path::new(\"/dir2/file2.txt\");\r\n    println!(\"path1: {}\", path1.display());\r\n    println!(\"path2: {}\", path2.display());\r\n    println!(\"path1.with_file_name(path2): {}\", path1.with_file_name(path2).display());\r\n    println!(\"Felix expected /dir1/file2.txt\");\r\n    \r\n    println!(\"\");\r\n    println!(\"EXAMPLE 2\");\r\n    let path1 = Path::new(\"dir1/file1.txt\");\r\n    let path2 = Path::new(\"dir2/file2.txt\");\r\n    println!(\"path1: {}\", path1.display());\r\n    println!(\"path2: {}\", path2.display());\r\n    println!(\"path1.with_file_name(path2): {}\", path1.with_file_name(path2).display());\r\n    println!(\"Felix expected dir1/file2.txt\");\r\n}\r\n\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50116/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50116/timeline", "performed_via_github_app": null, "state_reason": null}