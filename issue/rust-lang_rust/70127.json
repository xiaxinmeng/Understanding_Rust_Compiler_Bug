{"url": "https://api.github.com/repos/rust-lang/rust/issues/70127", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70127/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70127/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70127/events", "html_url": "https://github.com/rust-lang/rust/issues/70127", "id": 584119098, "node_id": "MDU6SXNzdWU1ODQxMTkwOTg=", "number": 70127, "title": "Misleading error message for closure lifetime mismatch", "user": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-19T02:26:12Z", "updated_at": "2020-03-22T17:34:30Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Here's a fairly minimal reproduction of the code I was working with: ([Rust Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=86a9401a58692c0066ef248a8ceafe62))\r\n\r\n```rust\r\ntype Input<'a> = &'a [u8];\r\n\r\nfn bar<I, O, F>(f: F) -> impl Fn(I) -> O\r\n    where F: Fn(I) -> O,\r\n{\r\n    f\r\n}\r\n\r\n// This version does not work:\r\nfn foo<O, F>(f: F) -> impl Fn(Input) -> O\r\n    where F: Fn(Input) -> O\r\n{\r\n    bar(f)\r\n}\r\n\r\n// This version works:\r\nfn foo2<'a, O, F>(f: F) -> impl Fn(Input<'a>) -> O\r\n    where F: Fn(Input<'a>) -> O\r\n{\r\n    bar(f)\r\n}\r\n```\r\n\r\nThe idea is that we want to define a function `foo` that takes a function and returns a new function by calling `bar`. The function `bar` also takes a function and returns a new function. In this minimal example, `bar` just returns `f`, but you can imagine that in a real application it would do something more interesting. This code resembles what you might see in a parser combinator library.\r\n\r\nThe error message you get with this code is as follows:\r\n\r\n```rust\r\nerror[E0277]: expected a `std::ops::Fn<(&[u8],)>` closure, found `impl std::ops::Fn<(&[u8],)>`\r\n  --> src/lib.rs:10:23\r\n   |\r\n10 | fn foo<O, F>(f: F) -> impl Fn(Input) -> O\r\n   |                       ^^^^^^^^^^^^^^^^^^^ expected an `Fn<(&[u8],)>` closure, found `impl std::ops::Fn<(&[u8],)>`\r\n...\r\n13 |     bar(f)\r\n   |     ------ this returned value is of type `impl std::ops::Fn<(&[u8],)>`\r\n   |\r\n   = help: the trait `for<'r> std::ops::Fn<(&'r [u8],)>` is not implemented for `impl std::ops::Fn<(&[u8],)>`\r\n   = note: the return type of a function must have a statically known size\r\n\r\nerror[E0271]: type mismatch resolving `for<'r> <impl std::ops::Fn<(&[u8],)> as std::ops::FnOnce<(&'r [u8],)>>::Output == O`\r\n  --> src/lib.rs:10:23\r\n   |\r\n10 | fn foo<O, F>(f: F) -> impl Fn(Input) -> O\r\n   |                       ^^^^^^^^^^^^^^^^^^^ expected bound lifetime parameter, found concrete lifetime\r\n   |\r\n   = note: the return type of a function must have a statically known size\r\n\r\nerror: aborting due to 2 previous errors\r\n```\r\n\r\nThere are a couple of misleading things about this message:\r\n\r\n1. The expected and found text looks like it should be compatible, the error isn't clear from this part of the message:\r\n   ```\r\n   expected an `Fn<(&[u8],)>` closure, found `impl std::ops::Fn<(&[u8],)>`\r\n   ```\r\n2. The following can lead you to add `for<'a>` to your trait bound, which will only take you further in the wrong direction (it happened to me today!)\r\n    ```\r\n    the trait `for<'r> std::ops::Fn<(&'r [u8],)>` is not implemented for `impl std::ops::Fn<(&[u8],)>`\r\n    ```\r\n    If you try adding `for<'a>` to the trait bound, you get some further error messages which are even less helpful :(\r\n\r\nThe problem is actually something not even shown in the error message: the lifetime of the reference in the argument type needs to be the same as the lifetime of the reference in the return type. If you do that (as in `foo2` above), the code compiles with no issues. Is there a reliable way for us to detect cases like this so we can improve the error message?\r\n\r\nThanks for all your work. :)\r\n\r\n# Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.42.0 (b8cedc004 2020-03-09)\r\nbinary: rustc\r\ncommit-hash: b8cedc00407a4c56a3bda1ed605c6fc166655447\r\ncommit-date: 2020-03-09\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.42.0\r\nLLVM version: 9.0\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70127/timeline", "performed_via_github_app": null, "state_reason": null}