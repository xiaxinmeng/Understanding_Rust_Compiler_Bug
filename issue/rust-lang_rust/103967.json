{"url": "https://api.github.com/repos/rust-lang/rust/issues/103967", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103967/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103967/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103967/events", "html_url": "https://github.com/rust-lang/rust/issues/103967", "id": 1436145072, "node_id": "I_kwDOAAsO6M5VmdWw", "number": 103967, "title": "impl_trait_in_fn_trait_return breaks with ref params", "user": {"login": "douglas-raillard-arm", "id": 23336875, "node_id": "MDQ6VXNlcjIzMzM2ODc1", "avatar_url": "https://avatars.githubusercontent.com/u/23336875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/douglas-raillard-arm", "html_url": "https://github.com/douglas-raillard-arm", "followers_url": "https://api.github.com/users/douglas-raillard-arm/followers", "following_url": "https://api.github.com/users/douglas-raillard-arm/following{/other_user}", "gists_url": "https://api.github.com/users/douglas-raillard-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/douglas-raillard-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/douglas-raillard-arm/subscriptions", "organizations_url": "https://api.github.com/users/douglas-raillard-arm/orgs", "repos_url": "https://api.github.com/users/douglas-raillard-arm/repos", "events_url": "https://api.github.com/users/douglas-raillard-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/douglas-raillard-arm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 4360021736, "node_id": "LA_kwDOAAsO6M8AAAABA-Cm6A", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-impl_trait_in_fn_trait_return", "name": "F-impl_trait_in_fn_trait_return", "color": "f9c0cc", "default": false, "description": "`#![feature(impl_trait_in_fn_trait_return)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-04T14:17:50Z", "updated_at": "2022-11-04T16:28:22Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I tried the new `impl_trait_in_fn_trait_return` feature tracked at https://github.com/rust-lang/rust/issues/99697\r\n\r\n```rust\r\n#![feature(impl_trait_in_fn_trait_return)]\r\n\r\n// Having the closure take any kind of reference as parameter results in a\r\n// compilation error. Turning \"&()\" into \"()\" fixes it.\r\n\r\nfn allowed_in_ret_type() -> impl Fn(&()) -> impl Into<u32> {\r\n    |_| 0u32\r\n}\r\n\r\n// This compiles just fine:\r\n// fn allowed_in_ret_type() -> impl Fn(()) -> impl Into<u32> {\r\n//     |_| 0u32\r\n// }\r\n```\r\n\r\nI expected to see this happen: \r\n\r\nThe code should compile.\r\n\r\nInstead, this happened:\r\n\r\n```\r\nerror: concrete type differs from previous defining opaque type use\r\n--> src/main.rs:4:9\r\n    |\r\n4 |     |_| 0u32\r\n    |         ^^^^ expected `impl Into<u32>`, got `u32`\r\n    |\r\nnote: previous use here\r\n    --> src/main.rs:4:5\r\n    |\r\n4 |     |_| 0u32\r\n    |     ^^^^^^^^\r\n\r\n    error[E0720]: cannot resolve opaque type\r\n    --> src/main.rs:3:45\r\n    |\r\n3 | fn allowed_in_ret_type() -> impl Fn(&()) -> impl Into<u32> {\r\n    |                                             ^^^^^^^^^^^^^^ recursive opaque type\r\n        4 |     |_| 0u32\r\n        |     -------- returning here with type `[closure@src/main.rs:4:5: 4:8]`\r\n\r\n        For more information about this error, try `rustc --explain E0720`.\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.67.0-nightly (edf018221 2022-11-02)\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103967/timeline", "performed_via_github_app": null, "state_reason": null}