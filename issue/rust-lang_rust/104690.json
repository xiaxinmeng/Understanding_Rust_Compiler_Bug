{"url": "https://api.github.com/repos/rust-lang/rust/issues/104690", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104690/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104690/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104690/events", "html_url": "https://github.com/rust-lang/rust/issues/104690", "id": 1458582009, "node_id": "I_kwDOAAsO6M5W8DH5", "number": 104690, "title": "Error message for closure that requires `|_|` is vague", "user": {"login": "schneems", "id": 59744, "node_id": "MDQ6VXNlcjU5NzQ0", "avatar_url": "https://avatars.githubusercontent.com/u/59744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schneems", "html_url": "https://github.com/schneems", "followers_url": "https://api.github.com/users/schneems/followers", "following_url": "https://api.github.com/users/schneems/following{/other_user}", "gists_url": "https://api.github.com/users/schneems/gists{/gist_id}", "starred_url": "https://api.github.com/users/schneems/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schneems/subscriptions", "organizations_url": "https://api.github.com/users/schneems/orgs", "repos_url": "https://api.github.com/users/schneems/repos", "events_url": "https://api.github.com/users/schneems/events{/privacy}", "received_events_url": "https://api.github.com/users/schneems/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}, {"id": 1659943986, "node_id": "MDU6TGFiZWwxNjU5OTQzOTg2", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-verbose", "name": "D-verbose", "color": "c9f7a3", "default": false, "description": "Too much output caused by a single piece of incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-11-21T21:10:43Z", "updated_at": "2022-11-22T16:37:08Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=2fecf0a7fbaba8101daba7d1a1ec1837\r\n\r\n```rust\r\nfn main() {\r\n    let number = 2;\r\n    Some(true).filter({\r\n        if number % 2 == 0 {\r\n            number == 0\r\n        } else {\r\n            number != 0\r\n        }\r\n    });\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nCompiling playground v0.0.1 (/playground)\r\nerror[[E0277]](https://doc.rust-lang.org/stable/error-index.html#E0277): expected a `FnOnce<(&bool,)>` closure, found `bool`\r\n --> src/main.rs:3:23\r\n  |\r\n3 |        Some(true).filter({\r\n  |   ________________------_^\r\n  |  |                |\r\n  |  |                required by a bound introduced by this call\r\n4 |  |         if number % 2 == 0 {\r\n  |  |_________-\r\n5 | ||             number == 0\r\n6 | ||         } else {\r\n7 | ||             number != 0\r\n8 | ||         }\r\n  | ||_________- this tail expression is of type `_`\r\n9 |  |     });\r\n  |  |_____^ expected an `FnOnce<(&bool,)>` closure, found `bool`\r\n  |\r\n  = help: the trait `for<'r> FnOnce<(&'r bool,)>` is not implemented for `bool`\r\nnote: required by a bound in `Option::<T>::filter`\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: could not compile `playground` due to previous error\r\nStandard Output\r\n```\r\n\r\nShould reference:\r\n\r\n```\r\n|_|\r\n```\r\n\r\nAs this is the correct code that compiles:\r\n\r\n```rust\r\nfn main() {\r\n    let number = 2;\r\n    Some(true).filter(|_| {\r\n        if number % 2 == 0 {\r\n            number == 0\r\n        } else {\r\n            number != 0\r\n        }\r\n    });\r\n}\r\n```\r\n\r\nUsing\r\n\r\n```shell\r\n$ rustc -V\r\nrustc 1.65.0 (897e37553 2022-11-02)\r\n```\r\n\r\nIf it helps, I'm trying to find a way to conditionally read in a file only if it exists. I was experimenting with this format:\r\n\r\n```rust\r\nlet blerg = Some(template.target_path.exists()).filter(|_| {\r\n            contents.trim()\r\n                == std::fs::read_to_string(&template.target_path)\r\n                    .unwrap()\r\n                    .trim()\r\n        });\r\n```\r\n\r\nAlso worth mentioning in the explanation `|_|` does not show up at all:\r\n\r\n```shell\r\n$ rustc --explain E0277 | grep \"_\"\r\nfn some_func<T: Foo>(foo: T) {\r\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\r\nfn some_func<T: Foo>(foo: T) {\r\n    some_func(5i32); // ok!\r\nfn some_func<T>(foo: T) {\r\n    some_func(5i32);\r\nfn some_func<T: fmt::Debug>(foo: T) {\r\n    some_func(5i32);\r\n    // some_func(WithoutDebug);\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104690/timeline", "performed_via_github_app": null, "state_reason": null}