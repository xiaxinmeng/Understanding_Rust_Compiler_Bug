{"url": "https://api.github.com/repos/rust-lang/rust/issues/15298", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/15298/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/15298/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/15298/events", "html_url": "https://github.com/rust-lang/rust/issues/15298", "id": 36880436, "node_id": "MDU6SXNzdWUzNjg4MDQzNg==", "number": 15298, "title": "Type/lifetime inference regression?", "user": {"login": "ebfe", "id": 685065, "node_id": "MDQ6VXNlcjY4NTA2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/685065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebfe", "html_url": "https://github.com/ebfe", "followers_url": "https://api.github.com/users/ebfe/followers", "following_url": "https://api.github.com/users/ebfe/following{/other_user}", "gists_url": "https://api.github.com/users/ebfe/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebfe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebfe/subscriptions", "organizations_url": "https://api.github.com/users/ebfe/orgs", "repos_url": "https://api.github.com/users/ebfe/repos", "events_url": "https://api.github.com/users/ebfe/events{/privacy}", "received_events_url": "https://api.github.com/users/ebfe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-07-01T10:35:28Z", "updated_at": "2014-10-08T13:30:45Z", "closed_at": "2014-10-08T13:30:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following used to work:\n\n``` rust\nuse std::collections::hashmap::HashMap;\n\nfn mkmap() -> HashMap<&str, int> {\n    let mut map = HashMap::new();\n    map.insert(\"foo\", 1);\n    map\n}\n\npub fn main() {\n    println!(\"{}\", mkmap());\n}\n\n```\n\nbut fails to compile with current master due to\n\n```\n/home/mg/t.rs:6:5: 6:8 error: cannot infer an appropriate lifetime due to conflicting requirements\n/home/mg/t.rs:6     map\n                    ^~~\n/home/mg/t.rs:5:5: 5:8 note: first, the lifetime cannot outlive the expression at 5:4...\n/home/mg/t.rs:5     map.insert(\"foo\", 1);\n                    ^~~\n/home/mg/t.rs:5:5: 5:8 note: ...so that automatically reference is valid at the time of borrow\n/home/mg/t.rs:5     map.insert(\"foo\", 1);\n                    ^~~\n/home/mg/t.rs:3:34: 7:2 note: but, the lifetime must be valid for the anonymous lifetime #1 defined on the block at 3:33...\n/home/mg/t.rs:3 fn mkmap() -> HashMap<&str, int> {\n/home/mg/t.rs:4     let mut map = HashMap::new();\n/home/mg/t.rs:5     map.insert(\"foo\", 1);\n/home/mg/t.rs:6     map\n/home/mg/t.rs:7 }\n/home/mg/t.rs:6:5: 6:8 note: ...so that types are compatible (expected `std::collections::hashmap::HashMap<&str,int>` but found `std::collections::hashmap::HashMap<&str,int>`)\n/home/mg/t.rs:6     map\n                    ^~~\nerror: aborting due to previous error\n```\n\nThe error can be avoided by adding type parameters to the HashMap::new() call.\n\n``` rust\nuse std::collections::hashmap::HashMap;\n\nfn mkmap() -> HashMap<&str, int> {\n    let mut map = HashMap::<&str, int>::new();\n    map.insert(\"foo\", 1);\n    map\n}\n\npub fn main() {\n    println!(\"{}\", mkmap());\n}\n\n```\n", "closed_by": {"login": "ebfe", "id": 685065, "node_id": "MDQ6VXNlcjY4NTA2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/685065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebfe", "html_url": "https://github.com/ebfe", "followers_url": "https://api.github.com/users/ebfe/followers", "following_url": "https://api.github.com/users/ebfe/following{/other_user}", "gists_url": "https://api.github.com/users/ebfe/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebfe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebfe/subscriptions", "organizations_url": "https://api.github.com/users/ebfe/orgs", "repos_url": "https://api.github.com/users/ebfe/repos", "events_url": "https://api.github.com/users/ebfe/events{/privacy}", "received_events_url": "https://api.github.com/users/ebfe/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/15298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/15298/timeline", "performed_via_github_app": null, "state_reason": "completed"}