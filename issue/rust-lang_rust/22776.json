{"url": "https://api.github.com/repos/rust-lang/rust/issues/22776", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/22776/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/22776/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/22776/events", "html_url": "https://github.com/rust-lang/rust/issues/22776", "id": 58768670, "node_id": "MDU6SXNzdWU1ODc2ODY3MA==", "number": 22776, "title": "Wrong code generated for Android ARM with optimisations", "user": {"login": "romanb", "id": 177309, "node_id": "MDQ6VXNlcjE3NzMwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/177309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/romanb", "html_url": "https://github.com/romanb", "followers_url": "https://api.github.com/users/romanb/followers", "following_url": "https://api.github.com/users/romanb/following{/other_user}", "gists_url": "https://api.github.com/users/romanb/gists{/gist_id}", "starred_url": "https://api.github.com/users/romanb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/romanb/subscriptions", "organizations_url": "https://api.github.com/users/romanb/orgs", "repos_url": "https://api.github.com/users/romanb/repos", "events_url": "https://api.github.com/users/romanb/events{/privacy}", "received_events_url": "https://api.github.com/users/romanb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-02-24T17:03:54Z", "updated_at": "2016-05-02T12:40:48Z", "closed_at": "2016-05-02T12:40:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "There appears to be a case that looks like optimisations resulting in bad code to be generated for Android ARM. This issue demonstrates the problem in the context where I ran into it, using the [byteorder](https://github.com/BurntSushi/byteorder) library.\n### Test environment\n- Host OS: OSX 10.9.5\n- Android SDK\n- Android NDK (Revision 10d) with standalone toolchain according to the [wiki](https://github.com/rust-lang/rust/wiki/Doc-building-for-android).\n- Android Emulator: ARM (armeabi-v7a), Android 5.0.1 (API level 21)\n- rustc 1.0.0-dev (built 2015-02-23), configured for cross-compilation to the `arm-linux-androideabi` target.\n### Steps to reproduce\n1. Clone [byteorder](https://github.com/BurntSushi/byteorder). Checkout commit `d9259c15a4b18de37d765aebbe5034f282772b84`.\n2. Create main.rs:\n   \n   ```\n   use byteorder::{BigEndian, WriteBytesExt};\n   \n   extern crate byteorder;\n   \n   fn main() {\n       let mut v_16: Vec<u8> = Vec::new();\n       v_16.write_u16::<BigEndian>(64_u16).unwrap();\n       println!(\"u16_be: {:?}\", v_16);\n   \n       let mut v_32: Vec<u8> = Vec::new();\n       v_32.write_u32::<BigEndian>(64_u32).unwrap();\n       println!(\"u32_be: {:?}\", v_32);\n   \n       let mut v_64: Vec<u8> = Vec::new();\n       v_64.write_u64::<BigEndian>(64_u64).unwrap();\n       println!(\"u64_be: {:?}\", v_64);\n   }\n   ```\n3. Build\n   \n   ```\n   mkdir target\n   # Build byteorder\n   rustc -C opt-level=3 --target=arm-linux-androideabi -C linker=arm-linux-androideabi-gcc -C ar=arm-linux-androideabi-ar --crate-type lib --out-dir target/ --emit=dep-info,link /path/to/byteorder/src/lib.rs\n   # Build main.rs\n   rustc -C opt-level=3 --target=arm-linux-androideabi -C linker=arm-linux-androideabi-gcc -C link-args=-pie --crate-type bin -Ltarget --out-dir target/ ./main.rs\n   ```\n4. Run on emulator\n   \n   ```\n   adb push target/main /some/writeable/dir/main\n   adb shell /some/writeable/dir/main\n   ```\n5. Output\n   \n   Expected:\n   \n   ```\n   u16_be: [0, 64]\n   u32_be: [0, 0, 0, 64]\n   u64_be: [0, 0, 0, 0, 0, 0, 0, 64]\n   ```\n   \n   Actual (sample):\n   \n   ```\n   u16_be: [253, 182]\n   u32_be: [57, 0, 0, 0]\n   u64_be: [244, 102, 251, 255, 57, 0, 0, 0]\n   ```\n### Workarounds\n\nThere seem to be two ways to work around the problem:\n1. Apply the following patch to `byteorder`\n   \n   ```\n   diff --git a/src/lib.rs b/src/lib.rs\n   index 009a780..8e6f37d 100644\n   --- a/src/lib.rs\n   +++ b/src/lib.rs\n   @@ -265,8 +265,8 @@ macro_rules! write_num_bytes {\n   \n            assert!($dst.len() >= $size); // critical for memory safety!\n            unsafe {\n   -            let bytes = (&transmute::<_, [u8; $size]>($n.$which())).as_ptr();\n   -            copy_nonoverlapping_memory($dst.as_mut_ptr(), bytes, $size);\n   +            let bytes = transmute::<_, [u8; $size]>($n.$which());\n   +            copy_nonoverlapping_memory($dst.as_mut_ptr(), (&bytes).as_ptr(), $size);\n            }\n        });\n    }\n   ```\n2. Turn off optimizations (`opt-level`).\n### Further Details\n\nThe following is the output for the relevant functions (`write_u16`, `write_u32` and `write_u64`) of compiling `byteorder` using `--emit=llvm-ir` with and without the above patch.\n\nWithout the patch: https://gist.github.com/romanb/2ff2ebb474c87103e631\nWith the patch: https://gist.github.com/romanb/d419ba4882d9c489c494\n", "closed_by": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/22776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/22776/timeline", "performed_via_github_app": null, "state_reason": "completed"}