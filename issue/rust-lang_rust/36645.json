{"url": "https://api.github.com/repos/rust-lang/rust/issues/36645", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/36645/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/36645/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/36645/events", "html_url": "https://github.com/rust-lang/rust/issues/36645", "id": 178530772, "node_id": "MDU6SXNzdWUxNzg1MzA3NzI=", "number": 36645, "title": "Improve documentation and error message for Vec type on erroneous indexing", "user": {"login": "andradei", "id": 2653546, "node_id": "MDQ6VXNlcjI2NTM1NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2653546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andradei", "html_url": "https://github.com/andradei", "followers_url": "https://api.github.com/users/andradei/followers", "following_url": "https://api.github.com/users/andradei/following{/other_user}", "gists_url": "https://api.github.com/users/andradei/gists{/gist_id}", "starred_url": "https://api.github.com/users/andradei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andradei/subscriptions", "organizations_url": "https://api.github.com/users/andradei/orgs", "repos_url": "https://api.github.com/users/andradei/repos", "events_url": "https://api.github.com/users/andradei/events{/privacy}", "received_events_url": "https://api.github.com/users/andradei/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-22T06:16:29Z", "updated_at": "2019-03-06T19:38:49Z", "closed_at": "2019-03-06T19:38:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Note** Similar issue to #31062\n## Documentation problem\n\nThe error for trying to index `Vec` with the wrong type isn't clear. A couple of examples:\n- Example 1\n\n``` rust\nvec![0][0i32]\n```\n\nThe error for this is:\n\n```\nerror: the trait bound `std::vec::Vec<_>: std::ops::Index<i32>` is not satisfied [--explain E0277]\n```\n- Example 2\n\n``` rust\nfn main() {\n    let n = 5u32; // This value could come from a struct member or function call.\n    let vec: Vec<i32> = vec![1, 2, 3, 4, 5];\n\n    for i in 0..n {\n        println!(\"{}\", vec[i])\n    }\n}\n```\n\nThe error:\n\n```\nerror: the trait bound `std::vec::Vec<i32>: std::ops::Index<u32>` is not satisfied [--explain E0277]\n```\n\nThe error hints that `Vec` implements the `Index` trait, but it doesn't say that it implements it for `usize` specifically. Instead, it says that it _doesn't_ implement `Index` for the type you tried to index with.\n\nThis is very confusing for beginners, finding the answer involves a knowledge of:\n- Traits and how they work\n- Rust's type behavior (due to its powerful type system) many times comes from implementing traits\n- Indexing on a type is possible via a trait called `Index`\n- `Vec` implements:\n  - `impl<T> Index<usize> for Vec<T>`\n  - `impl<T> IndexMut<usize> for Vec<T>`\n  - `impl<T> Index<Range<usize>> for Vec<T>`\n  - And a bunch or others, all using `usize` for indexing\n\nWhile it makes the most sense that `usize` is used, it might not be obvious at first (specially for beginners like me). Trying to index with any other numerical primitive (`i8`, `u8`, etc.) will result in the error shown above.\n## Possible solutions\n- Use the same or similar solution to #31062\n- Make the error state that `Vec` implements indexing for `usize` only. Maybe something like:\n\n```\nerror: the trait bound `std::vec::Vec<i32>: std::ops::Index<u32>` is not satisfied.\nstd::vec::Vec<T> implements std:ops:Index<usize>, implements std:ops:Index<Range<usize>>, etc...\n[--explain E0277]\n```\n- Add that info on `rustc --explain E0277`\n- Add this information in the documentation for `Vec`, the use of `usize` is _implied_ in the doc examples and is explicitly stated in the part that shows what traits `Vec` implements - both hard for beginners to find and comprehend\n", "closed_by": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/36645/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/36645/timeline", "performed_via_github_app": null, "state_reason": "completed"}