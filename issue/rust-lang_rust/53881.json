{"url": "https://api.github.com/repos/rust-lang/rust/issues/53881", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53881/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53881/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53881/events", "html_url": "https://github.com/rust-lang/rust/issues/53881", "id": 356186800, "node_id": "MDU6SXNzdWUzNTYxODY4MDA=", "number": 53881, "title": "Compiler panick when linking against static library on windows with static-nobundle", "user": {"login": "Neurrone", "id": 16471962, "node_id": "MDQ6VXNlcjE2NDcxOTYy", "avatar_url": "https://avatars.githubusercontent.com/u/16471962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neurrone", "html_url": "https://github.com/Neurrone", "followers_url": "https://api.github.com/users/Neurrone/followers", "following_url": "https://api.github.com/users/Neurrone/following{/other_user}", "gists_url": "https://api.github.com/users/Neurrone/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neurrone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neurrone/subscriptions", "organizations_url": "https://api.github.com/users/Neurrone/orgs", "repos_url": "https://api.github.com/users/Neurrone/repos", "events_url": "https://api.github.com/users/Neurrone/events{/privacy}", "received_events_url": "https://api.github.com/users/Neurrone/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-09-01T09:12:33Z", "updated_at": "2020-03-19T18:33:46Z", "closed_at": "2020-03-19T18:33:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use bindgen to generate bindings to V8, and link statically against it. I've already built V8 statically, and have the .libs stored in an environment variable, which gets used in the following build script.\r\n\r\n```\r\nextern crate bindgen;\r\nextern crate env_logger;\r\n\r\nuse std::env;\r\nuse std::path;\r\n\r\nfn main() {\r\n    env_logger::init().unwrap();\r\n    let v8_libs_dir = env::var(\"V8_LIBS\").unwrap();\r\n    let libs = [\"inspector\", \"icui18n\", \"icuuc\", \"v8_base\", \"v8_libbase\", \"v8_external_snapshot\", \"v8_libplatform\", \"v8_libsampler\"];\r\n    for l in &libs {\r\n        println!(\"cargo:rustc-link-lib=static-nobundle={}.lib\", l);\r\n    }\r\n    println!(\"cargo:rustc-link-search={}\", v8_libs_dir);\r\n    let bindings = bindgen::Builder::default()\r\n        .header(\"src/wrapper.hpp\")\r\n        .rust_target(bindgen::RustTarget::Nightly)\r\n        .clang_arg(\"--std=c++14\")\r\n        .whitelist_type(\"v8::.*\")\r\n        .whitelist_type(\"rust_v8_impls::.*\")\r\n        .whitelist_function(\"v8::.*\")\r\n        .whitelist_function(\"rust_v8_impls::.*\")\r\n        .whitelist_var(\"v8::.*\")\r\n        .whitelist_var(\"rust_v8_impls::.*\")\r\n        // Because there are some layout problems with these\r\n        .opaque_type(\"std::.*\")\r\n        // For some reason bindgen output is corrupt (syntax errors) for these types\r\n        // .blacklist_type(\"v8::JitCodeEvent__bindgen.*\")\r\n        // .blacklist_type(\".*DisallowJavascriptExecutionScope.*\")\r\n        // .blacklist_type(\".*SuppressMicrotaskExecutionScope.*\")\r\n        // We want to re-structure the modules a bit and hide the \"root\" module\r\n        .raw_line(\"#[doc(hidden)]\")\r\n        .generate_inline_functions(true)\r\n        .enable_cxx_namespaces()\r\n        .derive_debug(true)\r\n        .derive_hash(true)\r\n        .derive_eq(true)\r\n        .derive_partialeq(true)\r\n        .generate()\r\n        .expect(\"unable to generate v8 bindings\");\r\n\r\n    let out_path = path::PathBuf::from(env::var(\"OUT_DIR\").expect(\"OUT_DIR env var not set\"));\r\n\r\n    bindings\r\n        .write_to_file(out_path.join(\"bindings.rs\"))\r\n        .expect(\"unable to write bindings file\");\r\n}\r\n```\r\n\r\nThis is the output of `cargo build --verbose` with a stack trace:\r\n\r\n```sh\r\n   Compiling v8-sys v0.14.7 (file:///D:/documents/dev/v8-sys)\r\n     Running `rustc --crate-name v8_sys src\\lib.rs --crate-type lib --emit=dep-info,link -C debuginfo=2 -C metadata=ac2c9cc072c37ce0 -C extra-filename=-ac2c9cc072c37ce0 --out-dir D:\\documents\\dev\\v8-sys\\target\\debug\\deps -C incremental=D:\\documents\\dev\\v8-sys\\target\\debug\\incremental -L dependency=D:\\documents\\dev\\v8-sys\\target\\debug\\deps -L D:\\documents\\dev\\v8-sys\\v8-bin\\ -l static-nobundle=inspector.lib -l static-nobundle=icui18n.lib -l static-nobundle=icuuc.lib -l static-nobundle=v8_base.lib -l static-nobundle=v8_libbase.lib -l static-nobundle=v8_external_snapshot.lib -l static-nobundle=v8_libplatform.lib -l static-nobundle=v8_libsampler.lib`\r\nthread 'main' panicked at 'called `Option::unwrap()` on a `None` value', libcore\\option.rs:345:21\r\nstack backtrace:\r\n   0: <std::sys::windows::args::Args as core::ops::drop::Drop>::drop\r\n   1: <std::sys::windows::dynamic_lib::DynamicLibrary as core::ops::drop::Drop>::drop\r\n   2: std::panicking::take_hook\r\n   3: std::panicking::take_hook\r\n   4: <rustc::ty::sty::Binder<rustc::ty::ProjectionPredicate<'tcx>> as rustc::ty::ToPredicate<'tcx>>::to_predicate\r\n   5: std::panicking::rust_panic_with_hook\r\n   6: std::panicking::begin_panic_fmt\r\n   7: rust_begin_unwind\r\n   8: core::panicking::panic_fmt\r\n   9: core::panicking::panic\r\n  10: <rustc_metadata::native_libs::Collector<'a, 'tcx> as rustc::hir::itemlikevisit::ItemLikeVisitor<'tcx>>::visit_item\r\n  11: <rustc_metadata::index_builder::IndexBuilder<'a, 'b, 'tcx> as core::ops::deref::DerefMut>::deref_mut\r\n  12: <rustc_metadata::native_libs::Collector<'a, 'tcx> as rustc::hir::itemlikevisit::ItemLikeVisitor<'tcx>>::visit_item\r\n  13: <rustc::ty::query::job::QueryInfo<'tcx> as core::fmt::Debug>::fmt\r\n  14: rustc::ty::context::tls::track_diagnostic\r\n  15: rustc::dep_graph::graph::DepGraph::assert_ignored\r\n  16: <rustc::traits::query::type_op::prove_predicate::ProvePredicate<'tcx> as rustc::traits::query::type_op::QueryTypeOp<'gcx, 'tcx>>::perform_query\r\n  17: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_print_query_stack\r\n  18: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_print_query_stack\r\n  19: <rustc_metadata::encoder::ImplVisitor<'a, 'tcx> as rustc::hir::itemlikevisit::ItemLikeVisitor<'v>>::visit_item\r\n  20: rustc_metadata::cstore_impl::<impl rustc::middle::cstore::CrateStore for rustc_metadata::cstore::CStore>::encode_metadata\r\n  21: rustc::ty::context::TyCtxt::encode_metadata\r\n  22: rustc_codegen_llvm::base::codegen_instance\r\n  23: <unknown>\r\n  24: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate\r\n  25: rustc_driver::target_features::add_configuration\r\n  26: rustc_driver::driver::phase_4_codegen\r\n  27: rustc_driver::profile::dump\r\n  28: <rustc_driver::CompilationFailure as core::fmt::Debug>::fmt\r\n  29: termcolor::ParseColorError::invalid\r\n  30: <rustc_driver::CompilationFailure as core::fmt::Debug>::fmt\r\n  31: rustc_driver::driver::compile_input\r\n  32: rustc_driver::run_compiler\r\n  33: rustc_driver::target_features::add_configuration\r\n  34: rustc_driver::run_compiler\r\n  35: rustc_driver::target_features::add_configuration\r\n  36: <rustc_driver::profile::trace::Query as core::fmt::Debug>::fmt\r\n  37: _rust_maybe_catch_panic\r\n  38: <rustc_driver::derive_registrar::Finder as rustc::hir::itemlikevisit::ItemLikeVisitor<'v>>::visit_trait_item\r\n  39: rustc_driver::main\r\n  40: <unknown>\r\n  41: std::panicking::update_panic_count\r\n  42: _rust_maybe_catch_panic\r\n  43: std::rt::lang_start_internal\r\n  44: <unknown>\r\n  45: <unknown>\r\n  46: BaseThreadInitThunk\r\n  47: RtlUserThreadStart\r\nquery stack during panic:\r\n#0 [native_libraries] looking up the native libraries of a linked crate\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.30.0-nightly (f7202e40f 2018-08-27) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `v8-sys`.\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --crate-name v8_sys src\\lib.rs --crate-type lib --emit=dep-info,link -C debuginfo=2 -C metadata=ac2c9cc072c37ce0 -C extra-filename=-ac2c9cc072c37ce0 --out-dir D:\\documents\\dev\\v8-sys\\target\\debug\\deps -C incremental=D:\\documents\\dev\\v8-sys\\target\\debug\\incremental -L dependency=D:\\documents\\dev\\v8-sys\\target\\debug\\deps -L D:\\documents\\dev\\v8-sys\\v8-bin\\ -l static-nobundle=inspector.lib -l static-nobundle=icui18n.lib -l static-nobundle=icuuc.lib -l static-nobundle=v8_base.lib -l static-nobundle=v8_libbase.lib -l static-nobundle=v8_external_snapshot.lib -l static-nobundle=v8_libplatform.lib -l static-nobundle=v8_libsampler.lib` (exit code: 101)\r\n```\r\n\r\n```sh\r\nrustc 1.30.0-nightly (f7202e40f 2018-08-27)\r\nbinary: rustc\r\ncommit-hash: f7202e40f49d2b29635f095a3270a7214e25ce8b\r\ncommit-date: 2018-08-27\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.30.0-nightly\r\nLLVM version: 7.0\r\n```", "closed_by": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53881/timeline", "performed_via_github_app": null, "state_reason": "completed"}