{"url": "https://api.github.com/repos/rust-lang/rust/issues/83027", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83027/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83027/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83027/events", "html_url": "https://github.com/rust-lang/rust/issues/83027", "id": 829454698, "node_id": "MDU6SXNzdWU4Mjk0NTQ2OTg=", "number": 83027, "title": "major performance regression between Rust 1.50 and beta when using target-cpu=native", "user": {"login": "BurntSushi", "id": 456674, "node_id": "MDQ6VXNlcjQ1NjY3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/456674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BurntSushi", "html_url": "https://github.com/BurntSushi", "followers_url": "https://api.github.com/users/BurntSushi/followers", "following_url": "https://api.github.com/users/BurntSushi/following{/other_user}", "gists_url": "https://api.github.com/users/BurntSushi/gists{/gist_id}", "starred_url": "https://api.github.com/users/BurntSushi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BurntSushi/subscriptions", "organizations_url": "https://api.github.com/users/BurntSushi/orgs", "repos_url": "https://api.github.com/users/BurntSushi/repos", "events_url": "https://api.github.com/users/BurntSushi/events{/privacy}", "received_events_url": "https://api.github.com/users/BurntSushi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252628, "node_id": "MDU6TGFiZWwyNjIyNTI2Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-beta", "name": "regression-from-stable-to-beta", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to beta."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/79", "html_url": "https://github.com/rust-lang/rust/milestone/79", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/79/labels", "id": 6245796, "node_id": "MDk6TWlsZXN0b25lNjI0NTc5Ng==", "number": 79, "title": "1.51.0", "description": null, "creator": {"login": "rustbot", "id": 47979223, "node_id": "MDQ6VXNlcjQ3OTc5MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47979223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustbot", "html_url": "https://github.com/rustbot", "followers_url": "https://api.github.com/users/rustbot/followers", "following_url": "https://api.github.com/users/rustbot/following{/other_user}", "gists_url": "https://api.github.com/users/rustbot/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustbot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustbot/subscriptions", "organizations_url": "https://api.github.com/users/rustbot/orgs", "repos_url": "https://api.github.com/users/rustbot/repos", "events_url": "https://api.github.com/users/rustbot/events{/privacy}", "received_events_url": "https://api.github.com/users/rustbot/received_events", "type": "User", "site_admin": false}, "open_issues": 2, "closed_issues": 722, "state": "closed", "created_at": "2020-12-26T00:11:27Z", "updated_at": "2022-11-23T17:13:02Z", "due_on": null, "closed_at": "2021-03-26T15:17:22Z"}, "comments": 21, "created_at": "2021-03-11T19:25:13Z", "updated_at": "2021-03-18T15:39:57Z", "closed_at": "2021-03-18T15:39:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'll just start with some reproduction steps that I'm hoping someone else will be able to reproduce. This assumes you've compiled ripgrep with Rust 1.50 to a binary named `rg-stable_1.50` and also compiled ripgrep with Rust nightly 2021-03-09 to a binary named `rg-nightly_2021-03-09` (alternatively, compile with the beta release, as I've reproduced the problem there in a subsequent comment):\r\n\r\n```\r\n$ curl -LO 'https://burntsushi.net/stuff/subtitles2016-sample.en.gz'\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100  265M  100  265M    0     0  32.1M      0  0:00:08  0:00:08 --:--:-- 33.4M\r\n\r\n$ gunzip subtitles2016-sample.en.gz\r\n\r\n$ time rg-stable_1.50 -c --no-mmap -a '[a-z]' subtitles2016-sample.en\r\n31813587\r\n\r\nreal    1.601\r\nuser    1.467\r\nsys     0.133\r\nmaxmem  7 MB\r\nfaults  0\r\n\r\n$ time rg-nightly_2021-03-09 -c --no-mmap -a '[a-z]' subtitles2016-sample.en\r\n31813587\r\n\r\nreal    3.973\r\nuser    3.837\r\nsys     0.133\r\nmaxmem  7 MB\r\nfaults  0\r\n```\r\n\r\nHere is the relevant part of the profile I extracted by running the ripgrep compiled with nightly under `perf`:\r\n\r\n![simd-funs-not-inlined](https://user-images.githubusercontent.com/456674/110841618-209e6200-8274-11eb-9ba0-2e853445658b.png)\r\n\r\nThe key difference between Rust nightly and stable is the fact that it looks like [`i8x32::new`](https://github.com/rust-lang/stdarch/blob/0c08a8bc33c91ef3d2b4af81cfd54702e0b49e83/crates/core_arch/src/simd.rs#L14) isn't being inlined. But it's not the only one. There are other functions showing up in the profile, like `core::core_arch::x86::m256iExt::as_i32x8`, that aren't being inlined either. These are trivial cast functions, and them not being inlined is likely a bug. (So an alternative title for this issue might be, \"some trivial functions aren't getting inlined in hot code paths.\" But I figured I'd start with the actual problem I'm seeing in case my analysis is wrong.)\r\n\r\nInitially I assumed that maybe something had changed in stdarch recently related to these code paths, but I don't see anything. So I'm a bit worried that perhaps something else changed that impacted inlining decisions, and this is an indirect effect. Alas, I'm stuck at this point and would love some help getting to the bottom of it.\r\n\r\nIt's possible, perhaps even likely, that this is related to https://github.com/rust-lang/rust/issues/60637. I note that it is [used to justify some `inline(always)` annotations](https://github.com/rust-lang/stdarch/blob/0c08a8bc33c91ef3d2b4af81cfd54702e0b49e83/crates/core_arch/src/simd.rs#L18), but `fn new` is left at just `#[inline]`.\r\n\r\nPerhaps there is a quick fix where we need to go over some of the lower level SIMD routines and make sure they're tagged with `inline(always)`. But really, it seems to me like these functions really should be inlined automatically. I note that this doesn't look like a cross crate problem that might typically be a reason for preventing inlining. In particular, `_mm256_setr_epi8` _is_ being inlined (as one would expect), but the [call to `i8x32` in its implementation is the thing not being inlined](https://github.com/rust-lang/stdarch/blob/0c08a8bc33c91ef3d2b4af81cfd54702e0b49e83/crates/core_arch/src/x86/avx.rs#L2334). So this seems pretty suspicious to me.\r\n\r\nApologies for not narrowing this down more. A good next step might be to find the specific version of nightly that introduced this problem.", "closed_by": {"login": "BurntSushi", "id": 456674, "node_id": "MDQ6VXNlcjQ1NjY3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/456674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BurntSushi", "html_url": "https://github.com/BurntSushi", "followers_url": "https://api.github.com/users/BurntSushi/followers", "following_url": "https://api.github.com/users/BurntSushi/following{/other_user}", "gists_url": "https://api.github.com/users/BurntSushi/gists{/gist_id}", "starred_url": "https://api.github.com/users/BurntSushi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BurntSushi/subscriptions", "organizations_url": "https://api.github.com/users/BurntSushi/orgs", "repos_url": "https://api.github.com/users/BurntSushi/repos", "events_url": "https://api.github.com/users/BurntSushi/events{/privacy}", "received_events_url": "https://api.github.com/users/BurntSushi/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83027/timeline", "performed_via_github_app": null, "state_reason": "completed"}