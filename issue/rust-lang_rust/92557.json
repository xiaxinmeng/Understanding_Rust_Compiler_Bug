{"url": "https://api.github.com/repos/rust-lang/rust/issues/92557", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92557/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92557/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92557/events", "html_url": "https://github.com/rust-lang/rust/issues/92557", "id": 1093585765, "node_id": "I_kwDOAAsO6M5BLstl", "number": 92557, "title": "Miscompilation when using ..Default::default()", "user": {"login": "ISibboI", "id": 2361822, "node_id": "MDQ6VXNlcjIzNjE4MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/2361822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ISibboI", "html_url": "https://github.com/ISibboI", "followers_url": "https://api.github.com/users/ISibboI/followers", "following_url": "https://api.github.com/users/ISibboI/following{/other_user}", "gists_url": "https://api.github.com/users/ISibboI/gists{/gist_id}", "starred_url": "https://api.github.com/users/ISibboI/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ISibboI/subscriptions", "organizations_url": "https://api.github.com/users/ISibboI/orgs", "repos_url": "https://api.github.com/users/ISibboI/repos", "events_url": "https://api.github.com/users/ISibboI/events{/privacy}", "received_events_url": "https://api.github.com/users/ISibboI/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-01-04T17:10:15Z", "updated_at": "2022-01-04T19:26:36Z", "closed_at": "2022-01-04T18:33:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "When initializing a struct using `..Default::default()` instead of writing out the struct, the compiler produces erroneous code.\r\n\r\nThis happens in the integration tests of a project of mine. When constructing the struct without the shorthand (but simply setting the values to their defaults), the integration tests fail in an expected way. If I use the shorthand `..Default::default()`, the integration tests fail to open a TCP connection with an OsError 24, \"too many open files\". This appears to be reproducible, and other applications on my system don't complain about too many open files. So I suspect that the system could open more files, but the application has hit its limit (which it should not, since it should open just one TCP connection). I am running a standard ubuntu installation on a Thinkpad T480s.\r\n\r\nWhen I first discovered the bug I got a stack overflow before any integration test could start. Even after a `cargo clean`.\r\n\r\nI remember getting problems with the `..Default::default()` shorthand even earlier when compiling a WASM library a year ago or so as well. Unfortunately though I do not have that project anymore.\r\n\r\nRelevant code excerpt from [here](https://github.com/ISibboI/vocabulary-learning-application/blob/51f04c3d17339e3d740b5ee4bcdb0288f66d1f48/backend/rvoc-backend/tests/end_to_end.rs#L22) (not minimal example, sorry):\r\n```rust\r\nuse reqwest::blocking::Client;\r\n\r\nstruct ClientWithCookies {\r\n    client: Client,\r\n    cookie: Option<String>,\r\n}\r\n\r\nimpl Default for ClientWithCookies {\r\n    fn default() -> Self {\r\n        Self {\r\n            client: Client::new(),\r\n            // swap the two lines below to enable the error\r\n            // ..Default::default()\r\n            cookie: None,\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThis is the error I am getting on nightly when NOT using `..Default::default()`:\r\n\r\n```\r\n$ cargo +nightly test  --package rvoc-backend --test end_to_end test_signup_and_login\r\n    Finished test [unoptimized + debuginfo] target(s) in 0.11s\r\n     Running tests/end_to_end.rs (target/debug/deps/end_to_end-400bfc8a0b0dc22a)\r\n\r\nrunning 1 test\r\ntest test_signup_and_login ... FAILED\r\n\r\nfailures:\r\n\r\n---- test_signup_and_login stdout ----\r\nStart test_signup_and_login\r\nthread 'test_signup_and_login' panicked at 'called `Result::unwrap()` on an `Err` value: reqwest::Error { kind: Request, url: Url { scheme: \"http\", cannot_be_a_base: false, username: \"\", password: None, host: Some(Domain(\"localhost\")), port: Some(2374), path: \"/api/signup\", query: None, fragment: None }, source: hyper::Error(Connect, ConnectError(\"tcp connect error\", Os { code: 111, kind: ConnectionRefused, message: \"Connection refused\" })) }', tests/end_to_end.rs:60:10\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\n\r\nfailures:\r\n    test_signup_and_login\r\n\r\ntest result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 2 filtered out; finished in 0.01s\r\n\r\nerror: test failed, to rerun pass '-p rvoc-backend --test end_to_end'\r\n```\r\n\r\nAnd here the error when swapping the two lines highlighted above:\r\n\r\n```\r\n$ cargo +nightly test  --package rvoc-backend --test end_to_end test_signup_and_login\r\n    Finished test [unoptimized + debuginfo] target(s) in 0.11s\r\n     Running tests/end_to_end.rs (target/debug/deps/end_to_end-400bfc8a0b0dc22a)\r\n\r\nrunning 1 test\r\ntest test_signup_and_login ... FAILED\r\n\r\nfailures:\r\n\r\n---- test_signup_and_login stdout ----\r\nStart test_signup_and_login\r\nthread 'test_signup_and_login' panicked at 'Client::new(): reqwest::Error { kind: Builder, source: Os { code: 24, kind: Uncategorized, message: \"Too many open files\" } }', /home/sibbo/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.8/src/blocking/client.rs:798:38\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\n\r\nfailures:\r\n    test_signup_and_login\r\n\r\ntest result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 2 filtered out; finished in 3.53s\r\n\r\nerror: test failed, to rerun pass '-p rvoc-backend --test end_to_end'\r\n```\r\n\r\nThe difference between the error messages is obvious, and remember that this happens reproducibly on the same system. I have the repo checked out two times such that I can execute the two variants one after another without needing to wait for compilation. So I am very sure that the \"Too many open files\" is not caused by the system actually running out of file descriptors or so.\r\n\r\nFurther notice the difference in execution time. The correct version takes just 0.01 seconds typically, while the erroneous version takes around 3 seconds. This is also reproducible.\r\n\r\n### How to reproduce\r\n\r\n```bash\r\n# Check out two versions of the code\r\ngit clone --recursive https://github.com/ISibboI/vocabulary-learning-application\r\ncd vocabulary-learning-application\r\ngit checkout 51f04c3d17339e3d740b5ee4bcdb0288f66d1f48\r\ncd ..\r\ncp -r vocabulary-learning-application vocabulary-learning-application-miscompilation\r\n\r\n# Modify the miscompilation version to produce the miscompilation\r\nsed -i 's\\// ..Default::default()\\..Default::default()\\g' vocabulary-learning-application-miscompilation/backend/rvoc-backend/tests/end_to_end.rs\r\nsed -i 's\\cookie: None,\\// cookie: None,\\g' vocabulary-learning-application-miscompilation/backend/rvoc-backend/tests/end_to_end.rs\r\n\r\n# Execute the two variants\r\n# Ok variant\r\ncargo +nightly test --manifest-path vocabulary-learning-application/backend/rvoc-backend/Cargo.toml --package rvoc-backend --test end_to_end test_signup_and_login\r\n# Miscompilation variant\r\ncargo +nightly test --manifest-path vocabulary-learning-application-miscompilation/backend/rvoc-backend/Cargo.toml --package rvoc-backend --test end_to_end test_signup_and_login\r\n```\r\n\r\nYou can then arbitrarily rerun the last two commands, with the expected results.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\nI executed `cargo clean` and the problem persists.\r\n\r\nThe same thing happens on current beta and stable, even when executing `cargo clean` between switching toolchain.\r\n\r\n`rustc +nightly --version --verbose`:\r\n```\r\nrustc 1.59.0-nightly (399ba6bb3 2022-01-03)\r\nbinary: rustc\r\ncommit-hash: 399ba6bb377ce02224b57c4d6e127e160fa76b34\r\ncommit-date: 2022-01-03\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.59.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n`rustc +beta --version --verbose`:\r\n```\r\nrustc 1.58.0-beta.2 (0e07bcb68 2021-12-04)\r\nbinary: rustc\r\ncommit-hash: 0e07bcb68b82b54c0c4ec6fe076e9d75b02109cf\r\ncommit-date: 2021-12-04\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.58.0-beta.2\r\nLLVM version: 13.0.0\r\n```\r\n\r\n`rustc +stable --version --verbose`:\r\n```\r\nrustc 1.57.0 (f1edd0429 2021-11-29)\r\nbinary: rustc\r\ncommit-hash: f1edd0429582dd29cccacaf50fd134b05593bd9c\r\ncommit-date: 2021-11-29\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.57.0\r\nLLVM version: 13.0.0\r\n```\r\n\r\nNo panic, so no backtrace included.", "closed_by": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92557/timeline", "performed_via_github_app": null, "state_reason": "completed"}