{"url": "https://api.github.com/repos/rust-lang/rust/issues/37628", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/37628/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/37628/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/37628/events", "html_url": "https://github.com/rust-lang/rust/issues/37628", "id": 187724086, "node_id": "MDU6SXNzdWUxODc3MjQwODY=", "number": 37628, "title": "Code \"all in one file\" faster than when imported", "user": {"login": "daschl", "id": 29086, "node_id": "MDQ6VXNlcjI5MDg2", "avatar_url": "https://avatars.githubusercontent.com/u/29086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daschl", "html_url": "https://github.com/daschl", "followers_url": "https://api.github.com/users/daschl/followers", "following_url": "https://api.github.com/users/daschl/following{/other_user}", "gists_url": "https://api.github.com/users/daschl/gists{/gist_id}", "starred_url": "https://api.github.com/users/daschl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daschl/subscriptions", "organizations_url": "https://api.github.com/users/daschl/orgs", "repos_url": "https://api.github.com/users/daschl/repos", "events_url": "https://api.github.com/users/daschl/events{/privacy}", "received_events_url": "https://api.github.com/users/daschl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-11-07T14:24:12Z", "updated_at": "2016-11-08T13:16:00Z", "closed_at": "2016-11-08T13:15:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi folks,\r\n\r\nI'm using `rustc 1.14.0-nightly (5665bdf3e 2016-11-02)` and ran into an issue where the exact same code imported from a crate is slower than if I put all the code in one place.\r\n\r\nI've created a repository to checkout and run (I don't want to put all the code in here since its a little more): https://github.com/daschl/optim-repro\r\n\r\nThis code does tokenization of a `&str` based on a character tokenizer. If you run `cargo +nightly bench` in my case the performance is significantly different:\r\n\r\n```\r\ntest bench_allinone ... bench:       3,765 ns/iter (+/- 576)\r\n\r\nvs.\r\n\r\ntest bench_imported ... bench:       6,686 ns/iter (+/- 3,608)\r\n```\r\n\r\nAll I did was copy some of the code for the \"allinone\" directly into the bench module. I suspect that rust (llvm?) is better at optimzing stuff when its in the same file, but I wanted to raise it since maybe there is an opportunity to improve.\r\n\r\nI also found that the performance gets better/worse when I do changes to the `filter: fn(char) -> bool` that is stored in the struct (for example not only giving it the char but rather the more complex tuples in the iterator chain), so maybe this is one of the issues.\r\n\r\n\r\n", "closed_by": {"login": "daschl", "id": 29086, "node_id": "MDQ6VXNlcjI5MDg2", "avatar_url": "https://avatars.githubusercontent.com/u/29086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daschl", "html_url": "https://github.com/daschl", "followers_url": "https://api.github.com/users/daschl/followers", "following_url": "https://api.github.com/users/daschl/following{/other_user}", "gists_url": "https://api.github.com/users/daschl/gists{/gist_id}", "starred_url": "https://api.github.com/users/daschl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daschl/subscriptions", "organizations_url": "https://api.github.com/users/daschl/orgs", "repos_url": "https://api.github.com/users/daschl/repos", "events_url": "https://api.github.com/users/daschl/events{/privacy}", "received_events_url": "https://api.github.com/users/daschl/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/37628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/37628/timeline", "performed_via_github_app": null, "state_reason": "completed"}