{"url": "https://api.github.com/repos/rust-lang/rust/issues/40017", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40017/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40017/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40017/events", "html_url": "https://github.com/rust-lang/rust/issues/40017", "id": 209287474, "node_id": "MDU6SXNzdWUyMDkyODc0NzQ=", "number": 40017, "title": "compiletest should recover messages from json even if primary span is a macro", "user": {"login": "cengiz-io", "id": 123910, "node_id": "MDQ6VXNlcjEyMzkxMA==", "avatar_url": "https://avatars.githubusercontent.com/u/123910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cengiz-io", "html_url": "https://github.com/cengiz-io", "followers_url": "https://api.github.com/users/cengiz-io/followers", "following_url": "https://api.github.com/users/cengiz-io/following{/other_user}", "gists_url": "https://api.github.com/users/cengiz-io/gists{/gist_id}", "starred_url": "https://api.github.com/users/cengiz-io/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cengiz-io/subscriptions", "organizations_url": "https://api.github.com/users/cengiz-io/orgs", "repos_url": "https://api.github.com/users/cengiz-io/repos", "events_url": "https://api.github.com/users/cengiz-io/events{/privacy}", "received_events_url": "https://api.github.com/users/cengiz-io/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 120005, "node_id": "MDU6TGFiZWwxMjAwMDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-testsuite", "name": "A-testsuite", "color": "f7e101", "default": false, "description": "Area: The testsuite used to check the correctness of rustc"}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-21T22:06:29Z", "updated_at": "2017-07-27T18:11:04Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello!\r\n\r\nThis is something that me and @nikomatsakis encountered while trying to write a compile-fail test with a macro as a primary span.\r\n\r\nAssume you have a `compile-fail` test like following:\r\n\r\n```rust\r\nfn main() {\r\n    let x = vec![]; //~ ERROR 0282\r\n}\r\n```\r\n\r\nWhen you run the test, you get an explicit panic\r\n\r\n```\r\nCheck compiletest suite=compile-fail mode=compile-fail (x86_64-apple-darwin -> x86_64-apple-darwin)\r\n\r\nrunning 1 test\r\ntest [compile-fail] compile-fail/issue-99999.rs ... FAILED\r\n\r\nfailures:\r\n\r\n---- [compile-fail] compile-fail/issue-99999.rs stdout ----\r\n\r\nerror: /Users/cengizIO/Code/rust-src/src/test/compile-fail/issue-99999.rs:2: expected error not found: E0282\r\n\r\nerror: 0 unexpected errors found, 1 expected errors not found\r\nstatus: exit code: 101\r\ncommand: /Users/cengizIO/Code/rust-src/build/x86_64-apple-darwin/stage2/bin/rustc /Users/cengizIO/Code/rust-src/src/test/compile-fail/issue-99999.rs -L /Users/cengizIO/Code/rust-src/build/x86_64-apple-darwin/test/compile-fail --target=x86_64-apple-darwin --error-format json -L /Users/cengizIO/Code/rust-src/build/x86_64-apple-darwin/test/compile-fail/issue-99999.stage2-x86_64-apple-darwin.compile-fail.libaux -C prefer-dynamic -o /Users/cengizIO/Code/rust-src/build/x86_64-apple-darwin/test/compile-fail/issue-99999.stage2-x86_64-apple-darwin -Crpath -O -Lnative=/Users/cengizIO/Code/rust-src/build/x86_64-apple-darwin/native/rust-test-helpers\r\nnot found errors (from test file): [\r\n    Error {\r\n        line_num: 2,\r\n        kind: Some(\r\n            Error\r\n        ),\r\n        msg: \"E0282\"\r\n    }\r\n]\r\n\r\nthread '[compile-fail] compile-fail/issue-99999.rs' panicked at 'explicit panic', src/tools/compiletest/src/runtest.rs:1122\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\n\r\n\r\nfailures:\r\n    [compile-fail] compile-fail/issue-99999.rs\r\n\r\ntest result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured\r\n\r\nthread 'main' panicked at 'Some tests failed', src/tools/compiletest/src/main.rs:330\r\n\r\n\r\ncommand did not execute successfully: \"/Users/cengizIO/Code/rust-src/build/x86_64-apple-darwin/stage0-tools/x86_64-apple-darwin/release/compiletest\" \"--compile-lib-path\" \"/Users/cengizIO/Code/rust-src/build/x86_64-apple-darwin/stage2/lib\" \"--run-lib-path\" \"/Users/cengizIO/Code/rust-src/build/x86_64-apple-darwin/stage2/lib/rustlib/x86_64-apple-darwin/lib\" \"--rustc-path\" \"/Users/cengizIO/Code/rust-src/build/x86_64-apple-darwin/stage2/bin/rustc\" \"--rustdoc-path\" \"/Users/cengizIO/Code/rust-src/build/x86_64-apple-darwin/stage2/bin/rustdoc\" \"--src-base\" \"/Users/cengizIO/Code/rust-src/src/test/compile-fail\" \"--build-base\" \"/Users/cengizIO/Code/rust-src/build/x86_64-apple-darwin/test/compile-fail\" \"--stage-id\" \"stage2-x86_64-apple-darwin\" \"--mode\" \"compile-fail\" \"--target\" \"x86_64-apple-darwin\" \"--host\" \"x86_64-apple-darwin\" \"--llvm-filecheck\" \"/Users/cengizIO/Code/rust-src/build/x86_64-apple-darwin/llvm/build/bin/FileCheck\" \"--nodejs\" \"/usr/local/bin/node\" \"--host-rustcflags\" \"-Crpath -O\" \"--target-rustcflags\" \"-Crpath -O -Lnative=/Users/cengizIO/Code/rust-src/build/x86_64-apple-darwin/native/rust-test-helpers\" \"--docck-python\" \"/usr/bin/python2.7\" \"--lldb-python\" \"/usr/bin/python\" \"--lldb-version\" \"lldb-360.1.70\" \"--lldb-python-dir\" \"/Library/Developer/CommandLineTools/Library/PrivateFrameworks/LLDB.framework/Resources/Python\" \"--llvm-version\" \"3.9.1\\n\" \"issue-99999\" \"--cc\" \"\" \"--cxx\" \"\" \"--cflags\" \"\" \"--llvm-components\" \"\" \"--llvm-cxxflags\" \"\" \"--adb-path\" \"adb\" \"--adb-test-dir\" \"/data/tmp\" \"--android-cross-path\" \"\"\r\nexpected success, got: exit code: 101\r\n```\r\n\r\nBut, that `issue-99999.rs` indeed fails to compile with an `E0282`.\r\n\r\n```\r\nerror[E0282]: type annotations needed\r\n --> src/test/compile-fail/issue-99999.rs:2:13\r\n  |\r\n2 |     let x = vec![]; //~ ERROR E0282\r\n  |         -   ^^^^^^ cannot infer type for `T`\r\n  |         |\r\n  |         consider giving `x` a type\r\n  |\r\n  = note: this error originates in a macro outside of the current crate\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nSo there must be something wrong with the way that spans are parsed.\r\n\r\n@nikomatsakis did a temporary fix for this by changing [src/tools/compiletest/src/json.rs](https://github.com/rust-lang/rust/blob/master/src/tools/compiletest/src/json.rs) but implementation was not perfect and we ditched it. \r\n\r\nI'm not sure who to cc with this, but thanks in advance!\r\n\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40017/timeline", "performed_via_github_app": null, "state_reason": null}