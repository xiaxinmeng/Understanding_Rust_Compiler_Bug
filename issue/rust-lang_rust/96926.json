{"url": "https://api.github.com/repos/rust-lang/rust/issues/96926", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96926/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96926/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96926/events", "html_url": "https://github.com/rust-lang/rust/issues/96926", "id": 1231729975, "node_id": "I_kwDOAAsO6M5JarU3", "number": 96926, "title": "Mixing crates using different panic modes may introduce UB if a non-Rust unwind \"escapes\" into panic=abort crate via \"C-unwind\"", "user": {"login": "BatmanAoD", "id": 2313807, "node_id": "MDQ6VXNlcjIzMTM4MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2313807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BatmanAoD", "html_url": "https://github.com/BatmanAoD", "followers_url": "https://api.github.com/users/BatmanAoD/followers", "following_url": "https://api.github.com/users/BatmanAoD/following{/other_user}", "gists_url": "https://api.github.com/users/BatmanAoD/gists{/gist_id}", "starred_url": "https://api.github.com/users/BatmanAoD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BatmanAoD/subscriptions", "organizations_url": "https://api.github.com/users/BatmanAoD/orgs", "repos_url": "https://api.github.com/users/BatmanAoD/repos", "events_url": "https://api.github.com/users/BatmanAoD/events{/privacy}", "received_events_url": "https://api.github.com/users/BatmanAoD/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2022-05-10T21:37:54Z", "updated_at": "2022-07-02T16:34:53Z", "closed_at": "2022-07-02T16:34:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is a case of undefined behavior around unwinding that will not be fixed by the stabilization of the `\"C-unwind\"` ABI.\n\nSuppose there exists a C++ library with this function:\n\n```c++\nvoid cpp_unwind() {\n    throw \"gotcha\";\n}\n```\n\nIf this function is compiled as part of a crate with `panic=unwind`:\n\n```rust\nextern \"C-unwind\" {\n    cpp_unwind()\n}\n\npub fn unwinds() { unsafe { cpp_unwind() } }\n```\n\n...and then called from a crate compiled with `panic=abort`, the behavior is undefined, because the calling function will be compiled with the assumption that unwinding is impossible.\n\nNote:\n\n* If `cpp_unwind` is declared with `extern \"C\"`, the behavior will be well-defined: the runtime will abort even if `panic=unwind` is used.\n* Cargo does not support mixing panic modes like this, so this situation is only possible by invoking `rustc` directly (or via a different build system).\n* The unwind must originate outside of Rust, because only one `panic!()` implementation will be linked in the final binary, so using `panic=abort` will prevent `panic!()` from unwinding the stack in the first place.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"nbdd0121\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96926/timeline", "performed_via_github_app": null, "state_reason": "completed"}