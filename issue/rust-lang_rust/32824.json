{"url": "https://api.github.com/repos/rust-lang/rust/issues/32824", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/32824/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/32824/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/32824/events", "html_url": "https://github.com/rust-lang/rust/issues/32824", "id": 146873173, "node_id": "MDU6SXNzdWUxNDY4NzMxNzM=", "number": 32824, "title": "Accessing an enum's variants via a type alias.", "user": {"login": "mitchmindtree", "id": 4587373, "node_id": "MDQ6VXNlcjQ1ODczNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/4587373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitchmindtree", "html_url": "https://github.com/mitchmindtree", "followers_url": "https://api.github.com/users/mitchmindtree/followers", "following_url": "https://api.github.com/users/mitchmindtree/following{/other_user}", "gists_url": "https://api.github.com/users/mitchmindtree/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitchmindtree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitchmindtree/subscriptions", "organizations_url": "https://api.github.com/users/mitchmindtree/orgs", "repos_url": "https://api.github.com/users/mitchmindtree/repos", "events_url": "https://api.github.com/users/mitchmindtree/events{/privacy}", "received_events_url": "https://api.github.com/users/mitchmindtree/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-08T09:22:48Z", "updated_at": "2016-04-08T11:04:43Z", "closed_at": "2016-04-08T11:04:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently the following is not allowed:\n\n``` rust\nfn main() {\n    #[derive(Debug)]\n    enum Foo { A, B }\n    type Bar = Foo;\n    println!(\"{:?}\", Bar::A);\n}\n```\n\n[_playpen_](http://is.gd/nWIcpv)\n\nThis code produces the following error:\n\n```\nerror: no associated item named `A` found for type `main::Foo` in the current scope\n```\n\nI can understand why this error occurs: variant access such as `Foo::A` occurs via a path, and `type Bar = Foo` simply aliases the _type_, not the path accessor, thus an error is produced when trying to access an enum's variants via an alias.\n\nIn examples like the one above this normally isn't a huge issue as it is possible to `pub use Foo as Bar` instead, which accomplishes the same thing in practise.\n\nHowever, in practise I often come across cases where `pub use` does not suffice. The most pressing use-case I've come across is when `Foo` has a type parameter, and I want to create an alias of `Foo` with the type parameter filled, i.e.\n\n``` rust\n#[derive(Debug)]\npub enum Foo<T> { A(T), B }\npub type Bar = Foo<i32>;\n\npub fn baz() -> Bar {\n    Bar::A(0) // error\n}\n\nfn main() {\n    println!(\"{:?}\", baz());\n}\n```\n\n[_playpen_](http://is.gd/lYPGNA)\n\nHere I want to expose `Bar` from my API as if it were a `Foo<i32>` when it comes to its use as a type as well as variant access. Doing a type alias (as above) allows for using `Bar` in signatures without issues (see the `fn baz` signature) however I cannot access the variants using `Bar`, meaning I would have to _also_ require a user to import `Foo` in case they wish to access variants. Alternatively, if I instead `pub use foo::Foo as Bar` I can now access variants using `Bar` without issue, however the type parameter is no longer filled, meaning the `fn baz` signature no longer works and I'm unable to express through my API that `Bar` should always be `Foo<i32>` and not `Foo<T>`.\n\nIt would be really nice if we could either:\n1. `pub use Foo<i32> as Bar;` or\n2. `pub type Bar = Foo<i32>; // This allows variant access via Bar::A`\n", "closed_by": {"login": "mitchmindtree", "id": 4587373, "node_id": "MDQ6VXNlcjQ1ODczNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/4587373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitchmindtree", "html_url": "https://github.com/mitchmindtree", "followers_url": "https://api.github.com/users/mitchmindtree/followers", "following_url": "https://api.github.com/users/mitchmindtree/following{/other_user}", "gists_url": "https://api.github.com/users/mitchmindtree/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitchmindtree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitchmindtree/subscriptions", "organizations_url": "https://api.github.com/users/mitchmindtree/orgs", "repos_url": "https://api.github.com/users/mitchmindtree/repos", "events_url": "https://api.github.com/users/mitchmindtree/events{/privacy}", "received_events_url": "https://api.github.com/users/mitchmindtree/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/32824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/32824/timeline", "performed_via_github_app": null, "state_reason": "completed"}