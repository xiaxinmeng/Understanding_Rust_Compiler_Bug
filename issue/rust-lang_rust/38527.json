{"url": "https://api.github.com/repos/rust-lang/rust/issues/38527", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/38527/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/38527/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/38527/events", "html_url": "https://github.com/rust-lang/rust/issues/38527", "id": 197065899, "node_id": "MDU6SXNzdWUxOTcwNjU4OTk=", "number": 38527, "title": "feature request: std::os::unix::process::CommandExt.groups()", "user": {"login": "zackw", "id": 325899, "node_id": "MDQ6VXNlcjMyNTg5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/325899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackw", "html_url": "https://github.com/zackw", "followers_url": "https://api.github.com/users/zackw/followers", "following_url": "https://api.github.com/users/zackw/following{/other_user}", "gists_url": "https://api.github.com/users/zackw/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackw/subscriptions", "organizations_url": "https://api.github.com/users/zackw/orgs", "repos_url": "https://api.github.com/users/zackw/repos", "events_url": "https://api.github.com/users/zackw/events{/privacy}", "received_events_url": "https://api.github.com/users/zackw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 657353545, "node_id": "MDU6TGFiZWw2NTczNTM1NDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-accepted", "name": "C-feature-accepted", "color": "f5f1fd", "default": false, "description": "Category: A feature request that has been accepted pending implementation."}], "state": "closed", "locked": false, "assignee": {"login": "rustbot", "id": 47979223, "node_id": "MDQ6VXNlcjQ3OTc5MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47979223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustbot", "html_url": "https://github.com/rustbot", "followers_url": "https://api.github.com/users/rustbot/followers", "following_url": "https://api.github.com/users/rustbot/following{/other_user}", "gists_url": "https://api.github.com/users/rustbot/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustbot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustbot/subscriptions", "organizations_url": "https://api.github.com/users/rustbot/orgs", "repos_url": "https://api.github.com/users/rustbot/repos", "events_url": "https://api.github.com/users/rustbot/events{/privacy}", "received_events_url": "https://api.github.com/users/rustbot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rustbot", "id": 47979223, "node_id": "MDQ6VXNlcjQ3OTc5MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47979223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustbot", "html_url": "https://github.com/rustbot", "followers_url": "https://api.github.com/users/rustbot/followers", "following_url": "https://api.github.com/users/rustbot/following{/other_user}", "gists_url": "https://api.github.com/users/rustbot/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustbot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustbot/subscriptions", "organizations_url": "https://api.github.com/users/rustbot/orgs", "repos_url": "https://api.github.com/users/rustbot/repos", "events_url": "https://api.github.com/users/rustbot/events{/privacy}", "received_events_url": "https://api.github.com/users/rustbot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2016-12-22T00:23:06Z", "updated_at": "2021-01-22T21:48:49Z", "closed_at": "2021-01-22T21:48:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`std::os::unix::process::CommandExt` already offers `.uid()` and `.gid()` methods to control the user identity of the child process (calling [`setuid`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/setuid.html) and [`setgid`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/setgid.html) respectively).\r\n\r\nFor complete control of Unix credentials, there should also be a way to call [`setgroups`](https://linux.die.net/man/2/setgroups) in the child.  (`setgroups` is not in POSIX, but [`getgroups`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/getgroups.html) and the _concept_ of the supplementary group list are; I would expect this not to be a portability concern.)\r\n\r\nThis feature would eliminate a use of `before_exec` and an unsafe block (to call `libc::setgroups`) from the program I'm currently writing, which is a port to Rust of a setuid C program.  For illustration, this function exists in the C version:\r\n\r\n```\r\n/* A process which is setuid - that is, getuid() != 0, geteuid() == 0 -\r\n   behaves differently than one which holds _only_ root credentials.\r\n   We don't want the scripts acting up because of that.  This is done\r\n   only for child processes because one of the differences is that a\r\n   setuid program can be killed by the invoking (real) UID, which we\r\n   do want to allow.  */\r\nstatic void\r\nbecome_only_root(void)\r\n{\r\n  if (geteuid() != 0)\r\n    fatal(\"must be run as root\");\r\n\r\n  /* Discard all supplementary groups. */\r\n  if (setgroups(0, 0))\r\n    fatal_perror(\"setgroups\");\r\n\r\n  /* Set the real GID and UID to zero. This _should_ also set the\r\n     saved GID and UID, divorcing the process completely from its\r\n     original invoking user. */\r\n  if (setgid(0))\r\n    fatal_perror(\"setgid\");\r\n  if (setuid(0))\r\n    fatal_perror(\"setuid\");\r\n}\r\n```\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\nThis issue has been assigned to @slo1 via [this comment](https://github.com/rust-lang/rust/issues/38527#issuecomment-622071112).\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"slo1\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/38527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/38527/timeline", "performed_via_github_app": null, "state_reason": "completed"}