{"url": "https://api.github.com/repos/rust-lang/rust/issues/64984", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64984/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64984/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64984/events", "html_url": "https://github.com/rust-lang/rust/issues/64984", "id": 501323003, "node_id": "MDU6SXNzdWU1MDEzMjMwMDM=", "number": 64984, "title": "Missed optimization: Vec::splice() is not zero-cost", "user": {"login": "Vlad-Shcherbina", "id": 302938, "node_id": "MDQ6VXNlcjMwMjkzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/302938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vlad-Shcherbina", "html_url": "https://github.com/Vlad-Shcherbina", "followers_url": "https://api.github.com/users/Vlad-Shcherbina/followers", "following_url": "https://api.github.com/users/Vlad-Shcherbina/following{/other_user}", "gists_url": "https://api.github.com/users/Vlad-Shcherbina/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vlad-Shcherbina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vlad-Shcherbina/subscriptions", "organizations_url": "https://api.github.com/users/Vlad-Shcherbina/orgs", "repos_url": "https://api.github.com/users/Vlad-Shcherbina/repos", "events_url": "https://api.github.com/users/Vlad-Shcherbina/events{/privacy}", "received_events_url": "https://api.github.com/users/Vlad-Shcherbina/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 166999014, "node_id": "MDU6TGFiZWwxNjY5OTkwMTQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-collections", "name": "A-collections", "color": "f7e101", "default": false, "description": "Area: std::collections."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-02T07:27:23Z", "updated_at": "2022-01-23T20:51:04Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "To reproduce, compile the following two functions with, say, `-C opt-level=3` using, say, `rustc 1.38.0`:\r\n```rust\r\npub fn one(xs: &mut Vec<i32>) {\r\n    xs.clear();\r\n    xs.push(1);\r\n}\r\n\r\npub fn two(xs: &mut Vec<i32>) {\r\n    xs.splice(.., Some(1));\r\n}\r\n```\r\n[Godbolt](https://godbolt.org/z/CHJXuU)\r\n\r\nSince they are obviously equivalent, they should compile to comparable code.\r\nInstead, the `splice` version performs a lot of unnecessary work.\r\n\r\n```asm\r\nexample::one:\r\n        push    rbx\r\n        mov     rbx, rdi\r\n        mov     qword ptr [rdi + 16], 0\r\n        cmp     qword ptr [rdi + 8], 0\r\n        je      .LBB0_2\r\n        mov     rax, qword ptr [rbx]\r\n        mov     dword ptr [rax], 1\r\n        add     qword ptr [rbx + 16], 1\r\n        pop     rbx\r\n        ret\r\n.LBB0_2:\r\n        mov     edi, 4\r\n        mov     esi, 4\r\n        call    qword ptr [rip + __rust_alloc@GOTPCREL]\r\n        test    rax, rax\r\n        je      .LBB0_5\r\n        mov     qword ptr [rbx], rax\r\n        mov     qword ptr [rbx + 8], 1\r\n        mov     dword ptr [rax], 1\r\n        add     qword ptr [rbx + 16], 1\r\n        pop     rbx\r\n        ret\r\n.LBB0_5:\r\n        mov     edi, 4\r\n        mov     esi, 4\r\n        call    qword ptr [rip + alloc::alloc::handle_alloc_error@GOTPCREL]\r\n        ud2\r\n\r\nexample::two:\r\n        push    r15\r\n        push    r14\r\n        push    r13\r\n        push    r12\r\n        push    rbx\r\n        sub     rsp, 48\r\n        mov     r15, rdi\r\n        mov     rax, qword ptr [rdi]\r\n        mov     rcx, qword ptr [rdi + 16]\r\n        mov     qword ptr [rdi + 16], 0\r\n        lea     rbx, [rax + 4*rcx]\r\n        mov     qword ptr [rsp], rcx\r\n        mov     qword ptr [rsp + 8], 0\r\n        mov     qword ptr [rsp + 16], rax\r\n        mov     qword ptr [rsp + 24], rbx\r\n        mov     qword ptr [rsp + 32], rdi\r\n        movabs  rdx, 4294967297\r\n        mov     qword ptr [rsp + 40], rdx\r\n        test    rcx, rcx\r\n        je      .LBB1_1\r\n        mov     rcx, rbx\r\n        sub     rcx, rax\r\n        add     rcx, -4\r\n        and     rcx, -4\r\n        lea     r12, [rcx + rax]\r\n        add     r12, 4\r\n        mov     qword ptr [rsp + 16], r12\r\n        mov     rcx, qword ptr [r15 + 8]\r\n        test    rcx, rcx\r\n        je      .LBB1_5\r\n.LBB1_4:\r\n        xor     ecx, ecx\r\n        mov     rdx, qword ptr [rsp + 40]\r\n        mov     qword ptr [rsp + 40], 0\r\n        cmp     edx, 1\r\n        je      .LBB1_8\r\n        jmp     .LBB1_10\r\n.LBB1_1:\r\n        mov     r12, rax\r\n        mov     rcx, qword ptr [r15 + 8]\r\n        test    rcx, rcx\r\n        jne     .LBB1_4\r\n.LBB1_5:\r\n        add     rcx, rcx\r\n        mov     r13d, 1\r\n        cmovne  r13, rcx\r\n        lea     r14, [4*r13]\r\n        mov     esi, 4\r\n        mov     rdi, r14\r\n        call    qword ptr [rip + __rust_alloc@GOTPCREL]\r\n        test    rax, rax\r\n        je      .LBB1_17\r\n        mov     qword ptr [r15], rax\r\n        mov     qword ptr [r15 + 8], r13\r\n        mov     rcx, qword ptr [r15 + 16]\r\n        mov     rdx, qword ptr [rsp + 40]\r\n        mov     qword ptr [rsp + 40], 0\r\n        cmp     edx, 1\r\n        jne     .LBB1_10\r\n.LBB1_8:\r\n        shr     rdx, 32\r\n        mov     dword ptr [rax + 4*rcx], edx\r\n        add     rcx, 1\r\n        mov     rdx, qword ptr [rsp + 40]\r\n        mov     qword ptr [rsp + 40], 0\r\n        cmp     edx, 1\r\n        je      .LBB1_8\r\n        mov     r12, qword ptr [rsp + 16]\r\n        mov     rbx, qword ptr [rsp + 24]\r\n.LBB1_10:\r\n        mov     qword ptr [r15 + 16], rcx\r\n        cmp     r12, rbx\r\n        je      .LBB1_12\r\n        sub     rbx, r12\r\n        add     rbx, -4\r\n        and     rbx, -4\r\n        lea     rax, [rbx + r12]\r\n        add     rax, 4\r\n        mov     qword ptr [rsp + 16], rax\r\n.LBB1_12:\r\n        mov     r15, qword ptr [rsp + 8]\r\n        test    r15, r15\r\n        je      .LBB1_16\r\n        mov     rax, qword ptr [rsp]\r\n        mov     r14, qword ptr [rsp + 32]\r\n        mov     rbx, qword ptr [r14 + 16]\r\n        cmp     rax, rbx\r\n        je      .LBB1_15\r\n        mov     rcx, qword ptr [r14]\r\n        lea     rsi, [rcx + 4*rax]\r\n        lea     rdi, [rcx + 4*rbx]\r\n        lea     rdx, [4*r15]\r\n        call    qword ptr [rip + memmove@GOTPCREL]\r\n.LBB1_15:\r\n        add     rbx, r15\r\n        mov     qword ptr [r14 + 16], rbx\r\n.LBB1_16:\r\n        add     rsp, 48\r\n        pop     rbx\r\n        pop     r12\r\n        pop     r13\r\n        pop     r14\r\n        pop     r15\r\n        ret\r\n.LBB1_17:\r\n        mov     esi, 4\r\n        mov     rdi, r14\r\n        call    qword ptr [rip + alloc::alloc::handle_alloc_error@GOTPCREL]\r\n        ud2\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64984/timeline", "performed_via_github_app": null, "state_reason": null}