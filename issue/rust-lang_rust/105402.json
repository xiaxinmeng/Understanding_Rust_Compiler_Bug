{"url": "https://api.github.com/repos/rust-lang/rust/issues/105402", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105402/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105402/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105402/events", "html_url": "https://github.com/rust-lang/rust/issues/105402", "id": 1480454422, "node_id": "I_kwDOAAsO6M5YPfEW", "number": 105402, "title": "Suggest borrowing fields in a match pattern when you're updating a struct in a loop", "user": {"login": "alexwlchan", "id": 301220, "node_id": "MDQ6VXNlcjMwMTIyMA==", "avatar_url": "https://avatars.githubusercontent.com/u/301220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexwlchan", "html_url": "https://github.com/alexwlchan", "followers_url": "https://api.github.com/users/alexwlchan/followers", "following_url": "https://api.github.com/users/alexwlchan/following{/other_user}", "gists_url": "https://api.github.com/users/alexwlchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexwlchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexwlchan/subscriptions", "organizations_url": "https://api.github.com/users/alexwlchan/orgs", "repos_url": "https://api.github.com/users/alexwlchan/repos", "events_url": "https://api.github.com/users/alexwlchan/events{/privacy}", "received_events_url": "https://api.github.com/users/alexwlchan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": {"login": "yanchen4791", "id": 91304157, "node_id": "MDQ6VXNlcjkxMzA0MTU3", "avatar_url": "https://avatars.githubusercontent.com/u/91304157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanchen4791", "html_url": "https://github.com/yanchen4791", "followers_url": "https://api.github.com/users/yanchen4791/followers", "following_url": "https://api.github.com/users/yanchen4791/following{/other_user}", "gists_url": "https://api.github.com/users/yanchen4791/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanchen4791/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanchen4791/subscriptions", "organizations_url": "https://api.github.com/users/yanchen4791/orgs", "repos_url": "https://api.github.com/users/yanchen4791/repos", "events_url": "https://api.github.com/users/yanchen4791/events{/privacy}", "received_events_url": "https://api.github.com/users/yanchen4791/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yanchen4791", "id": 91304157, "node_id": "MDQ6VXNlcjkxMzA0MTU3", "avatar_url": "https://avatars.githubusercontent.com/u/91304157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanchen4791", "html_url": "https://github.com/yanchen4791", "followers_url": "https://api.github.com/users/yanchen4791/followers", "following_url": "https://api.github.com/users/yanchen4791/following{/other_user}", "gists_url": "https://api.github.com/users/yanchen4791/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanchen4791/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanchen4791/subscriptions", "organizations_url": "https://api.github.com/users/yanchen4791/orgs", "repos_url": "https://api.github.com/users/yanchen4791/repos", "events_url": "https://api.github.com/users/yanchen4791/events{/privacy}", "received_events_url": "https://api.github.com/users/yanchen4791/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2022-12-06T23:23:03Z", "updated_at": "2022-12-09T07:36:56Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "(Feel free to suggest a better bug report title, I got kinda lost)\n\nGiven the following code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=010d7de8a334afab94a4197fbcf32f57\n\n```rust\npub struct MyStruct {\n    pub x: Option<String>,\n    pub y: Option<String>,\n}\n\nfn main() {\n    for _i in 1..3 {\n        let struct1 = MyStruct {\n            x: Some(String::from(\"blue triangle\")),\n            y: None,\n        };\n\n        let struct2 = MyStruct {\n            y: match struct1.x {\n                Some(x) => Some(x.to_uppercase()),\n                None => None,\n            },\n            ..struct1\n        };\n    }\n}\n```\n\nThe current output is:\n\n```\nerror[[E0382]](https://doc.rust-lang.org/stable/error-index.html#E0382): use of partially moved value: `struct1.x`\n  --> src/main.rs:13:23\n   |\n8  |           let struct1 = MyStruct {\n   |  _______________________-\n9  | |             x: Some(String::from(\"blue triangle\")),\n10 | |             y: None,\n11 | |         };\n   | |_________- this reinitialization might get skipped\n12 |\n13 |           let struct2 = MyStruct {\n   |  _______________________^\n14 | |             y: match struct1.x {\n15 | |                 Some(x) => Some(x.to_uppercase()),\n   | |                      - value partially moved here\n16 | |                 None => None,\n17 | |             },\n18 | |             ..struct1\n19 | |         };\n   | |_________^ value used here after partial move\n   |\n   = note: partial move occurs because value has type `String`, which does not implement the `Copy` trait\n```\n\nIdeally the output should look include:\n\n```\nhelp: borrow this field in the pattern to avoid moving `struct1.x.0`\n   |\n15 |                 Some(ref x) => Some(x.to_uppercase()),\n   |                      +++\n```\n\nRust already knows about this message; if you [remove the outermost loop](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=eefcd9d1345000cf20f3b4d2eff6cb2a) then it gives you the suggestion to add the `ref`. For some reason wrapping the struct/match inside a loop makes it unable to give this suggestion, even though (to my eyes) it still looks appropriate.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"yanchen4791\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105402/timeline", "performed_via_github_app": null, "state_reason": null}