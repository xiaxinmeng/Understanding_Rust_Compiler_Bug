{"url": "https://api.github.com/repos/rust-lang/rust/issues/6923", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/6923/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/6923/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/6923/events", "html_url": "https://github.com/rust-lang/rust/issues/6923", "id": 15095949, "node_id": "MDU6SXNzdWUxNTA5NTk0OQ==", "number": 6923, "title": "IR generation quality litmus test", "user": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-06-04T00:01:32Z", "updated_at": "2013-09-09T02:00:25Z", "closed_at": "2013-09-09T02:00:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This compiles to the same code post-optimization, so I think it's a good example of how we're turning simple code in very complex IR that LLVM then has to cut down.\n\nHere's a simple C++ program:\n\n``` c++\n#include <cstddef>\n#include <utility>\n\n__attribute__((noinline)) void foo(size_t &x, size_t &y) {\n    std::swap(x, y);\n}\n\nint main() {\n    size_t x = 5;\n    size_t y = 10;\n    foo(x, y);\n}\n```\n\nClang generates this IR at -O0:\n\n``` llvm\n; ModuleID = 'foo.cc'\ntarget datalayout = \"e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-unknown-linux-gnu\"\n\ndefine void @_Z3fooRmS_(i64* %x, i64* %y) uwtable noinline {\n  %1 = alloca i64*, align 8\n  %2 = alloca i64*, align 8\n  store i64* %x, i64** %1, align 8\n  store i64* %y, i64** %2, align 8\n  %3 = load i64** %1, align 8\n  %4 = load i64** %2, align 8\n  call void @_ZSt4swapImEvRT_S1_(i64* %3, i64* %4)\n  ret void\n}\n\ndefine linkonce_odr void @_ZSt4swapImEvRT_S1_(i64* %__a, i64* %__b) nounwind uwtable inlinehint {\n  %1 = alloca i64*, align 8\n  %2 = alloca i64*, align 8\n  %__tmp = alloca i64, align 8\n  store i64* %__a, i64** %1, align 8\n  store i64* %__b, i64** %2, align 8\n  %3 = load i64** %1, align 8\n  %4 = load i64* %3, align 8\n  store i64 %4, i64* %__tmp, align 8\n  %5 = load i64** %2, align 8\n  %6 = load i64* %5, align 8\n  %7 = load i64** %1, align 8\n  store i64 %6, i64* %7, align 8\n  %8 = load i64* %__tmp, align 8\n  %9 = load i64** %2, align 8\n  store i64 %8, i64* %9, align 8\n  ret void\n}\n\ndefine i32 @main() uwtable {\n  %x = alloca i64, align 8\n  %y = alloca i64, align 8\n  store i64 5, i64* %x, align 8\n  store i64 10, i64* %y, align 8\n  call void @_Z3fooRmS_(i64* %x, i64* %y)\n  ret i32 0\n}\n```\n\nThe same thing in Rust:\n\n``` rust\nuse std::util;\n\n#[inline(never)]\nfn swap(x: &mut int, y: &mut int) {\n    util::swap(x, y);\n}\n\nfn main() {\n    let mut x = 5;\n    let mut y = 10;\n    swap(&mut x, &mut y);\n}\n```\n\nThe horror we generate:\n\n``` llvm\n; ModuleID = 'foo.rc'\ntarget datalayout = \"e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-unknown-linux-gnu\"\n\n%tydesc = type { i64, i64, void ({}*, %tydesc**, i8*)*, void ({}*, %tydesc**, i8*)*, void ({}*, %tydesc**, i8*)*, void ({}*, %tydesc**, i8*)*, i8*, i8* }\n\n@_rust_crate_map_toplevel = global { i32, i8*, i64, [2 x i64] } { i32 1, i8* bitcast ({} ({ i64, %tydesc*, i8*, i8*, i8 } addrspace(1)*)* @_ZN7cleanup10annihilate17_c17425bfbdabf8296_07preE to i8*), i64 ptrtoint ([1 x { i64, i64 }]* @_rust_mod_map to i64), [2 x i64] [i64 ptrtoint (i64* @_rust_crate_map_std_0.7-pre_c3ca5d77d81b46c1 to i64), i64 0] }\n@_rust_crate_map_std_0.7-pre_c3ca5d77d81b46c1 = external global i64\n@_rust_mod_map = internal global [1 x { i64, i64 }] zeroinitializer\n@rust_abi_version = constant i64 1\n\ndeclare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture, i64, i32, i1) #0\n\ndefine internal {} @_ZN4swap17_a71830ca3ed2d65d3_00E({ i64, %tydesc*, i8*, i8*, i8 } addrspace(1)*, i64*, i64*) #1 {\nstatic_allocas:\n  %3 = alloca {}\n  %4 = alloca i64\n  %5 = alloca i64\n  %6 = alloca {}\n  %7 = alloca i64*\n  %8 = alloca i64*\n  %9 = alloca i64\n  %10 = alloca i64*\n  %11 = alloca i64*\n  %12 = alloca i64\n  %13 = alloca {}\n  %14 = alloca i64*\n  %15 = alloca i64*\n  %16 = alloca i64\n  %17 = alloca i64*\n  %18 = alloca i64*\n  %19 = alloca i64\n  %20 = alloca {}\n  %21 = alloca i64*\n  %22 = alloca i64*\n  %23 = alloca i64\n  %24 = alloca i64*\n  %25 = alloca i64*\n  %26 = alloca i64\n  %27 = alloca {}\n  %28 = alloca i64*\n  %29 = alloca i64*\n  %30 = alloca i64\n  %31 = alloca i64*\n  %32 = alloca i64*\n  %33 = alloca i64*\n  %34 = alloca i64\n  %35 = alloca i64*\n  %36 = alloca i64*\n  %37 = alloca i64\n  %38 = alloca i64*\n  %39 = alloca i64*\n  %40 = alloca i64\n  %41 = alloca i64\n  %42 = alloca {}\n  %43 = alloca i64*\n  %44 = alloca i64*\n  %45 = alloca i64*\n  %46 = alloca i64*\n  br label %48\n\nreturn:                                           ; preds = %179\n  %47 = load {}* %42\n  ret {} %47\n\n; <label>:48                                      ; preds = %static_allocas\n  store i64* %1, i64** %43\n  store i64* %2, i64** %44\n  br label %49\n\n; <label>:49                                      ; preds = %48\n  %50 = load i64** %43\n  store i64* %50, i64** %45\n  %51 = load i64** %45\n  %52 = load i64** %44\n  store i64* %52, i64** %46\n  %53 = load i64** %46\n  %54 = bitcast {}* %27 to i8*\n  call void @llvm.lifetime.start(i64 0, i8* %54)\n  %55 = bitcast i64** %28 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %55)\n  %56 = bitcast i64** %29 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %56)\n  %57 = bitcast i64* %30 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %57)\n  %58 = bitcast i64** %31 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %58)\n  %59 = bitcast i64** %32 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %59)\n  %60 = bitcast i64** %33 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %60)\n  %61 = bitcast i64* %34 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %61)\n  %62 = bitcast i64** %35 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %62)\n  %63 = bitcast i64** %36 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %63)\n  %64 = bitcast i64* %37 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %64)\n  %65 = bitcast i64** %38 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %65)\n  %66 = bitcast i64** %39 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %66)\n  %67 = bitcast i64* %40 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %67)\n  %68 = bitcast i64* %41 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %68)\n  store i64* %51, i64** %28\n  store i64* %53, i64** %29\n  %69 = call i64 @_ZN8unstable10intrinsics11uninit_287516_b650e1ca1ea7f553_00E({ i64, %tydesc*, i8*, i8*, i8 } addrspace(1)* undef)\n  store i64 %69, i64* %30\n  store i64* %30, i64** %31\n  %70 = load i64** %31\n  store i64* %70, i64** %32\n  %71 = load i64** %32\n  %72 = load i64** %28\n  store i64* %72, i64** %33\n  %73 = load i64** %33\n  store i64 1, i64* %34\n  %74 = load i64* %34\n  %75 = bitcast {}* %20 to i8*\n  call void @llvm.lifetime.start(i64 0, i8* %75)\n  %76 = bitcast i64** %21 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %76)\n  %77 = bitcast i64** %22 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %77)\n  %78 = bitcast i64* %23 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %78)\n  %79 = bitcast i64** %24 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %79)\n  %80 = bitcast i64** %25 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %80)\n  %81 = bitcast i64* %26 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %81)\n  store i64* %71, i64** %21\n  store i64* %73, i64** %22\n  store i64 %74, i64* %23\n  %82 = load i64** %21\n  store i64* %82, i64** %24\n  %83 = load i64** %24\n  %84 = load i64** %22\n  store i64* %84, i64** %25\n  %85 = load i64** %25\n  %86 = load i64* %23\n  store i64 %86, i64* %26\n  %87 = load i64* %26\n  %88 = call {} @_ZN8unstable10intrinsics13memcpy64_288117_9dac8e5426d6e7233_00E({ i64, %tydesc*, i8*, i8*, i8 } addrspace(1)* undef, i64* %83, i64* %85, i64 %87)\n  %89 = load {}* %20\n  %90 = bitcast {}* %20 to i8*\n  call void @llvm.lifetime.end(i64 0, i8* %90)\n  %91 = bitcast i64** %21 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %91)\n  %92 = bitcast i64** %22 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %92)\n  %93 = bitcast i64* %23 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %93)\n  %94 = bitcast i64** %24 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %94)\n  %95 = bitcast i64** %25 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %95)\n  %96 = bitcast i64* %26 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %96)\n  %97 = load i64** %28\n  store i64* %97, i64** %35\n  %98 = load i64** %35\n  %99 = load i64** %29\n  store i64* %99, i64** %36\n  %100 = load i64** %36\n  store i64 1, i64* %37\n  %101 = load i64* %37\n  %102 = bitcast {}* %13 to i8*\n  call void @llvm.lifetime.start(i64 0, i8* %102)\n  %103 = bitcast i64** %14 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %103)\n  %104 = bitcast i64** %15 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %104)\n  %105 = bitcast i64* %16 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %105)\n  %106 = bitcast i64** %17 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %106)\n  %107 = bitcast i64** %18 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %107)\n  %108 = bitcast i64* %19 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %108)\n  store i64* %98, i64** %14\n  store i64* %100, i64** %15\n  store i64 %101, i64* %16\n  %109 = load i64** %14\n  store i64* %109, i64** %17\n  %110 = load i64** %17\n  %111 = load i64** %15\n  store i64* %111, i64** %18\n  %112 = load i64** %18\n  %113 = load i64* %16\n  store i64 %113, i64* %19\n  %114 = load i64* %19\n  %115 = call {} @_ZN8unstable10intrinsics13memcpy64_288117_9dac8e5426d6e7233_00E({ i64, %tydesc*, i8*, i8*, i8 } addrspace(1)* undef, i64* %110, i64* %112, i64 %114)\n  %116 = load {}* %13\n  %117 = bitcast {}* %13 to i8*\n  call void @llvm.lifetime.end(i64 0, i8* %117)\n  %118 = bitcast i64** %14 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %118)\n  %119 = bitcast i64** %15 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %119)\n  %120 = bitcast i64* %16 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %120)\n  %121 = bitcast i64** %17 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %121)\n  %122 = bitcast i64** %18 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %122)\n  %123 = bitcast i64* %19 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %123)\n  %124 = load i64** %29\n  store i64* %124, i64** %38\n  %125 = load i64** %38\n  %126 = load i64** %31\n  store i64* %126, i64** %39\n  %127 = load i64** %39\n  store i64 1, i64* %40\n  %128 = load i64* %40\n  %129 = bitcast {}* %6 to i8*\n  call void @llvm.lifetime.start(i64 0, i8* %129)\n  %130 = bitcast i64** %7 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %130)\n  %131 = bitcast i64** %8 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %131)\n  %132 = bitcast i64* %9 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %132)\n  %133 = bitcast i64** %10 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %133)\n  %134 = bitcast i64** %11 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %134)\n  %135 = bitcast i64* %12 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %135)\n  store i64* %125, i64** %7\n  store i64* %127, i64** %8\n  store i64 %128, i64* %9\n  %136 = load i64** %7\n  store i64* %136, i64** %10\n  %137 = load i64** %10\n  %138 = load i64** %8\n  store i64* %138, i64** %11\n  %139 = load i64** %11\n  %140 = load i64* %9\n  store i64 %140, i64* %12\n  %141 = load i64* %12\n  %142 = call {} @_ZN8unstable10intrinsics13memcpy64_288117_9dac8e5426d6e7233_00E({ i64, %tydesc*, i8*, i8*, i8 } addrspace(1)* undef, i64* %137, i64* %139, i64 %141)\n  %143 = load {}* %6\n  %144 = bitcast {}* %6 to i8*\n  call void @llvm.lifetime.end(i64 0, i8* %144)\n  %145 = bitcast i64** %7 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %145)\n  %146 = bitcast i64** %8 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %146)\n  %147 = bitcast i64* %9 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %147)\n  %148 = bitcast i64** %10 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %148)\n  %149 = bitcast i64** %11 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %149)\n  %150 = bitcast i64* %12 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %150)\n  %151 = load i64* %30\n  store i64 %151, i64* %41\n  %152 = load i64* %41\n  %153 = bitcast {}* %3 to i8*\n  call void @llvm.lifetime.start(i64 0, i8* %153)\n  %154 = bitcast i64* %4 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %154)\n  %155 = bitcast i64* %5 to i8*\n  call void @llvm.lifetime.start(i64 8, i8* %155)\n  store i64 %152, i64* %4\n  %156 = load i64* %4\n  store i64 %156, i64* %5\n  %157 = load i64* %5\n  %158 = call {} @_ZN8unstable10intrinsics11forget_288717_9475c65f257b4c1e3_00E({ i64, %tydesc*, i8*, i8*, i8 } addrspace(1)* undef, i64 %157)\n  %159 = load {}* %3\n  %160 = bitcast {}* %3 to i8*\n  call void @llvm.lifetime.end(i64 0, i8* %160)\n  %161 = bitcast i64* %4 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %161)\n  %162 = bitcast i64* %5 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %162)\n  %163 = load {}* %27\n  %164 = bitcast {}* %27 to i8*\n  call void @llvm.lifetime.end(i64 0, i8* %164)\n  %165 = bitcast i64** %28 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %165)\n  %166 = bitcast i64** %29 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %166)\n  %167 = bitcast i64* %30 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %167)\n  %168 = bitcast i64** %31 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %168)\n  %169 = bitcast i64** %32 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %169)\n  %170 = bitcast i64** %33 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %170)\n  %171 = bitcast i64* %34 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %171)\n  %172 = bitcast i64** %35 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %172)\n  %173 = bitcast i64** %36 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %173)\n  %174 = bitcast i64* %37 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %174)\n  %175 = bitcast i64** %38 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %175)\n  %176 = bitcast i64** %39 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %176)\n  %177 = bitcast i64* %40 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %177)\n  %178 = bitcast i64* %41 to i8*\n  call void @llvm.lifetime.end(i64 8, i8* %178)\n  br label %179\n\n; <label>:179                                     ; preds = %49\n  br label %return\n}\n\ndefine internal i64 @_ZN8unstable10intrinsics11uninit_287516_b650e1ca1ea7f553_00E({ i64, %tydesc*, i8*, i8*, i8 } addrspace(1)*) {\nstatic_allocas:\n  %1 = alloca i64\n  br label %3\n\nreturn:                                           ; preds = %3\n  %2 = load i64* %1\n  ret i64 %2\n\n; <label>:3                                       ; preds = %static_allocas\n  br label %return\n}\n\ndefine internal {} @_ZN8unstable10intrinsics13memcpy64_288117_9dac8e5426d6e7233_00E({ i64, %tydesc*, i8*, i8*, i8 } addrspace(1)*, i64*, i64*, i64) {\nstatic_allocas:\n  %4 = alloca {}\n  br label %6\n\nreturn:                                           ; preds = %6\n  %5 = load {}* %4\n  ret {} %5\n\n; <label>:6                                       ; preds = %static_allocas\n  %7 = bitcast i64* %1 to i8*\n  %8 = bitcast i64* %2 to i8*\n  %9 = mul i64 8, %3\n  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 %9, i32 8, i1 false)\n  br label %return\n}\n\ndefine internal {} @_ZN8unstable10intrinsics11forget_288717_9475c65f257b4c1e3_00E({ i64, %tydesc*, i8*, i8*, i8 } addrspace(1)*, i64) {\nstatic_allocas:\n  %2 = alloca {}\n  br label %4\n\nreturn:                                           ; preds = %4\n  %3 = load {}* %2\n  ret {} %3\n\n; <label>:4                                       ; preds = %static_allocas\n  br label %return\n}\n\ndefine internal {} @_ZN4main17_3ab48cd538faebd53_00E({ i64, %tydesc*, i8*, i8*, i8 } addrspace(1)*) #2 {\nstatic_allocas:\n  %1 = alloca {}\n  %2 = alloca i64\n  %3 = alloca i64\n  %4 = alloca i64*\n  %5 = alloca i64*\n  br label %7\n\nreturn:                                           ; preds = %12\n  %6 = load {}* %1\n  ret {} %6\n\n; <label>:7                                       ; preds = %static_allocas\n  store i64 5, i64* %2\n  store i64 10, i64* %3\n  br label %8\n\n; <label>:8                                       ; preds = %7\n  store i64* %2, i64** %4\n  %9 = load i64** %4\n  store i64* %3, i64** %5\n  %10 = load i64** %5\n  %11 = call {} @_ZN4swap17_a71830ca3ed2d65d3_00E({ i64, %tydesc*, i8*, i8*, i8 } addrspace(1)* undef, i64* %9, i64* %10)\n  br label %12\n\n; <label>:12                                      ; preds = %8\n  br label %return\n}\n\ndefine {} @_rust_main({ i64, %tydesc*, i8*, i8*, i8 } addrspace(1)*) {\nstatic_allocas:\n  %1 = alloca {}\n  br label %3\n\nreturn:                                           ; preds = %3\n  %2 = load {}* %1\n  ret {} %2\n\n; <label>:3                                       ; preds = %static_allocas\n  %4 = call {} @_ZN4main17_3ab48cd538faebd53_00E({ i64, %tydesc*, i8*, i8*, i8 } addrspace(1)* %0)\n  store {} %4, {}* %1\n  br label %return\n}\n\ndefine i64 @main(i64, i8**) {\ntop:\n  %2 = call i64 @_ZN8unstable4lang5start17_80798dc0c0e380dc6_07preE({ i64, %tydesc*, i8*, i8*, i8 } addrspace(1)* null, i8* bitcast ({} ({ i64, %tydesc*, i8*, i8*, i8 } addrspace(1)*)* @_rust_main to i8*), i64 %0, i8** %1, i8* bitcast ({ i32, i8*, i64, [2 x i64] }* @_rust_crate_map_toplevel to i8*))\n  ret i64 %2\n}\n\ndeclare i64 @_ZN8unstable4lang5start17_80798dc0c0e380dc6_07preE({ i64, %tydesc*, i8*, i8*, i8 } addrspace(1)*, i8*, i64, i8**, i8*)\n\ndeclare {} @_ZN7cleanup10annihilate17_c17425bfbdabf8296_07preE({ i64, %tydesc*, i8*, i8*, i8 } addrspace(1)*)\n\ndeclare void @llvm.lifetime.start(i64, i8* nocapture) #0\n\ndeclare void @llvm.lifetime.end(i64, i8* nocapture) #0\n\nattributes #0 = { nounwind }\nattributes #1 = { noinline uwtable }\nattributes #2 = { uwtable }\n```\n", "closed_by": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/6923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/6923/timeline", "performed_via_github_app": null, "state_reason": "completed"}