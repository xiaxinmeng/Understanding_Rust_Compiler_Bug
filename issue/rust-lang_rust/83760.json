{"url": "https://api.github.com/repos/rust-lang/rust/issues/83760", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83760/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83760/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83760/events", "html_url": "https://github.com/rust-lang/rust/issues/83760", "id": 848825347, "node_id": "MDU6SXNzdWU4NDg4MjUzNDc=", "number": 83760, "title": "Misleading error message when variable is not re-initialized in loop", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}], "state": "closed", "locked": false, "assignee": {"login": "ptrojahn", "id": 45311997, "node_id": "MDQ6VXNlcjQ1MzExOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/45311997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptrojahn", "html_url": "https://github.com/ptrojahn", "followers_url": "https://api.github.com/users/ptrojahn/followers", "following_url": "https://api.github.com/users/ptrojahn/following{/other_user}", "gists_url": "https://api.github.com/users/ptrojahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptrojahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptrojahn/subscriptions", "organizations_url": "https://api.github.com/users/ptrojahn/orgs", "repos_url": "https://api.github.com/users/ptrojahn/repos", "events_url": "https://api.github.com/users/ptrojahn/events{/privacy}", "received_events_url": "https://api.github.com/users/ptrojahn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ptrojahn", "id": 45311997, "node_id": "MDQ6VXNlcjQ1MzExOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/45311997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptrojahn", "html_url": "https://github.com/ptrojahn", "followers_url": "https://api.github.com/users/ptrojahn/followers", "following_url": "https://api.github.com/users/ptrojahn/following{/other_user}", "gists_url": "https://api.github.com/users/ptrojahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptrojahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptrojahn/subscriptions", "organizations_url": "https://api.github.com/users/ptrojahn/orgs", "repos_url": "https://api.github.com/users/ptrojahn/repos", "events_url": "https://api.github.com/users/ptrojahn/events{/privacy}", "received_events_url": "https://api.github.com/users/ptrojahn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2021-04-01T22:20:53Z", "updated_at": "2021-07-18T04:54:10Z", "closed_at": "2021-07-18T04:54:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following code compiles:\r\n\r\n```rust\r\nstruct Foo;\r\n\r\nfn main() {\r\n    let mut val = Some(Foo);\r\n    while let Some(foo) = val {\r\n        if true {\r\n            val = None;\r\n        } else {\r\n            val = None;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nIf we don't ensure that `val` is re-initialized at the end of the loop:\r\n\r\n```rust\r\nstruct Foo;\r\n\r\nfn main() {\r\n    let mut val = Some(Foo);\r\n    while let Some(foo) = val {\r\n        if true {\r\n            val = None;\r\n        } else {\r\n            \r\n        }\r\n    }\r\n}\r\n```\r\n\r\nwe get the following error:\r\n\r\n```\r\nerror[E0382]: use of moved value\r\n --> src/main.rs:5:20\r\n  |\r\n5 |     while let Some(foo) = val {\r\n  |                    ^^^ value moved here, in previous iteration of loop\r\n  |\r\n  = note: move occurs because value has type `Foo`, which does not implement the `Copy` trait\r\nhelp: borrow this field in the pattern to avoid moving `val.0`\r\n  |\r\n5 |     while let Some(ref foo) = val {\r\n  |                    ^^^\r\n\r\nerror: aborting due to previous error; 1 warning emitted\r\n```\r\n\r\nThis error message seems to imply that the `while let pat = variable { ... }` pattern is invalid. However, the fact that `val` gets re-initialized in one branch of the loop means that the user likely intended to initialize it in *all* branches.\r\n\r\nWe should detect when this kind of case occurs, and explain that `val` might not be initialized at the end of the loop. We could even try to detect where the missing initializations need to be inserted, but that might be very difficult.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"ptrojahn\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83760/timeline", "performed_via_github_app": null, "state_reason": "completed"}