{"url": "https://api.github.com/repos/rust-lang/rust/issues/103911", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103911/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103911/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103911/events", "html_url": "https://github.com/rust-lang/rust/issues/103911", "id": 1434268814, "node_id": "I_kwDOAAsO6M5VfTSO", "number": 103911, "title": "improve the way we deal with ambiguity errors", "user": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 234876, "node_id": "MDU6TGFiZWwyMzQ4NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-hard", "name": "E-hard", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Hard / a lot"}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-11-03T08:16:14Z", "updated_at": "2022-11-07T07:18:51Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "right now we report each ambiguity error separately, sprinkling in a bunch of `self.is_tainted_by_errors()` and friends in there to deduplicate errors.\r\n\r\nThis can often cause us to emit less useful errors because the more relevant error happens later.\r\nIt also restricts us in the suggestions we can emit.\r\n\r\nThis happens in `fn report_fulfillment_errors`: https://github.com/rust-lang/rust/blob/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd/compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs#L453-L457\r\n\r\nI think ideally what we should do is:\r\n- look at all `CodeAmbiguity` errors and merge them by their annotated inference variable[^1].\r\n- if there are multiple obligations ambiguous due to the same inference variable, talk about them as part of the same error message, ignoring \"less important\" obligations.\r\n- further work: with #103252 we will have a list of all maybe applicable impls, so if we have multiple trait obligations we can just try each combination of candidates to e.g. be able to say \"you may have wanted to specify the type `String` here\" in [this example](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=8d0d538f2e7be1ef37456c841d157b3f).\r\n\r\ncc @estebank @jackh726\r\n\r\nOpen to review/help out if somebody wants to experiment with this. I won't be able to spend too much time on this though, so it's probably pretty difficult without prior experience with this code.\r\n\r\n[^1]: This is currently computed ad-hoc in `maybe_report_ambiguity` and should be moved into a separate function.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103911/timeline", "performed_via_github_app": null, "state_reason": null}