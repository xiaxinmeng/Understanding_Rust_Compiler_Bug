{"url": "https://api.github.com/repos/rust-lang/rust/issues/71040", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71040/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71040/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71040/events", "html_url": "https://github.com/rust-lang/rust/issues/71040", "id": 598339833, "node_id": "MDU6SXNzdWU1OTgzMzk4MzM=", "number": 71040, "title": "Typo suggestion doesn't account for types", "user": {"login": "jerryajay", "id": 5939368, "node_id": "MDQ6VXNlcjU5MzkzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/5939368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jerryajay", "html_url": "https://github.com/jerryajay", "followers_url": "https://api.github.com/users/jerryajay/followers", "following_url": "https://api.github.com/users/jerryajay/following{/other_user}", "gists_url": "https://api.github.com/users/jerryajay/gists{/gist_id}", "starred_url": "https://api.github.com/users/jerryajay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jerryajay/subscriptions", "organizations_url": "https://api.github.com/users/jerryajay/orgs", "repos_url": "https://api.github.com/users/jerryajay/repos", "events_url": "https://api.github.com/users/jerryajay/events{/privacy}", "received_events_url": "https://api.github.com/users/jerryajay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-11T19:56:14Z", "updated_at": "2020-04-27T15:56:21Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nWhen using multiple transmitters with a single receiver across multiple thread, the `:help` message is totally bonkers. Refer the `backtrace` lines 10 and 16:\r\n\r\n```rust\r\nuse std::sync::mpsc::channel;\r\nuse std::thread;\r\n\r\nfn main() {\r\n    let (tx1, rx) = channel();\r\n    let tx2 = tx1.clone();\r\n\r\n    thread::spawn(move || {\r\n        for i in 1..10 {\r\n            tx.send(i);\r\n        }\r\n    });\r\n\r\n    thread::spawn(move || {\r\n        for i in 1..10 {\r\n            tx.send(i);\r\n        }\r\n    });\r\n\r\n    for i in 1..10 {\r\n        println!(\"{}\", rx.recv().unwrap());\r\n    }\r\n}\r\n```\r\n\r\nThe auto-fix seems to be too ambitious at the moment by suggesting wrong fixes. Let me know if I need to file a RFC for this. JAVA's auto-fix seems smarter and Rust can definitely borrow some of it's implementation.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.42.0 (b8cedc004 2020-03-09)\r\nbinary: rustc\r\ncommit-hash: b8cedc00407a4c56a3bda1ed605c6fc166655447\r\ncommit-date: 2020-03-09\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.42.0\r\nLLVM version: 9.0\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n Compiling hello_world v0.1.0 (/home/jerry/rust-experiment/hello_world)\r\nerror[E0425]: cannot find value `tx` in this scope\r\n  --> src/main.rs:10:13\r\n   |\r\n10 |             tx.send(i);\r\n   |             ^^ help: a local variable with a similar name exists: `rx`\r\n\r\nerror[E0425]: cannot find value `tx` in this scope\r\n  --> src/main.rs:16:13\r\n   |\r\n16 |             tx.send(i);\r\n   |             ^^ help: a local variable with a similar name exists: `rx`\r\n\r\nerror: aborting due to 2 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0425`.\r\nerror: could not compile `hello_world`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71040/timeline", "performed_via_github_app": null, "state_reason": null}