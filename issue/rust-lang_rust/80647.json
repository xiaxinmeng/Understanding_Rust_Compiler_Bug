{"url": "https://api.github.com/repos/rust-lang/rust/issues/80647", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80647/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80647/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80647/events", "html_url": "https://github.com/rust-lang/rust/issues/80647", "id": 777637366, "node_id": "MDU6SXNzdWU3Nzc2MzczNjY=", "number": 80647, "title": "use PlaceRef abstraction more consistently", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}], "state": "open", "locked": false, "assignee": {"login": "ericmarkmartin", "id": 5509414, "node_id": "MDQ6VXNlcjU1MDk0MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5509414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericmarkmartin", "html_url": "https://github.com/ericmarkmartin", "followers_url": "https://api.github.com/users/ericmarkmartin/followers", "following_url": "https://api.github.com/users/ericmarkmartin/following{/other_user}", "gists_url": "https://api.github.com/users/ericmarkmartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericmarkmartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericmarkmartin/subscriptions", "organizations_url": "https://api.github.com/users/ericmarkmartin/orgs", "repos_url": "https://api.github.com/users/ericmarkmartin/repos", "events_url": "https://api.github.com/users/ericmarkmartin/events{/privacy}", "received_events_url": "https://api.github.com/users/ericmarkmartin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ericmarkmartin", "id": 5509414, "node_id": "MDQ6VXNlcjU1MDk0MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5509414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericmarkmartin", "html_url": "https://github.com/ericmarkmartin", "followers_url": "https://api.github.com/users/ericmarkmartin/followers", "following_url": "https://api.github.com/users/ericmarkmartin/following{/other_user}", "gists_url": "https://api.github.com/users/ericmarkmartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericmarkmartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericmarkmartin/subscriptions", "organizations_url": "https://api.github.com/users/ericmarkmartin/orgs", "repos_url": "https://api.github.com/users/ericmarkmartin/repos", "events_url": "https://api.github.com/users/ericmarkmartin/events{/privacy}", "received_events_url": "https://api.github.com/users/ericmarkmartin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2021-01-03T13:24:11Z", "updated_at": "2023-06-15T02:31:38Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "We have quite a bit of code that needs to work with the `projections` that make up a [`Place`](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/mir/struct.Place.html) or [`PlaceRef`](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/mir/struct.PlaceRef.html). Much of it works with the `projections` array directly, which is rather verbose. We now have better APIs that avoid having to \"break the abstraction\" of `Place`/`PlaceRef`: we have `Place::iter_projections` and `PlaceRef::last_projection`.\n\nIt would be good to clean things up by using these higher-level APIs consistently. To do that, you'll need to find places where the lower-level API is used. One good way to find these places is to grep for `Place::ty_from` -- this helper function is only useful when a `PlaceRef` has been broken apart into its constituents, so it is a sign that some higher-level APIs can be used. In almost all cases, the code will either \"do something with the last projection (if any)\", in which case it should use `PlaceRef::last_projection`, or it will iterate all the projections, in which case it should use `Place::iter_projections` (usually iteration starts with the outermost projection, i.e., you should use `place.iter_projections().rev()`).\n\nYou can see https://github.com/rust-lang/rust/pull/80624 for some examples for the kinds of changes that are needed to perform this cleanup.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"ericmarkmartin\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80647/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80647/timeline", "performed_via_github_app": null, "state_reason": null}