{"url": "https://api.github.com/repos/rust-lang/rust/issues/16159", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16159/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16159/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16159/events", "html_url": "https://github.com/rust-lang/rust/issues/16159", "id": 39259442, "node_id": "MDU6SXNzdWUzOTI1OTQ0Mg==", "number": 16159, "title": "Assist writing/using crates that should not have any code inlined into dependent crates", "user": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-08-01T03:50:56Z", "updated_at": "2015-01-21T19:36:24Z", "closed_at": "2015-01-21T19:36:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "AIUI, a license like the LGPL can be linked into a non-(L)GPL program only if it can be completely substituted for a replacement by the user (i.e. dynamically linked, with no inlined code/constants etc.). This means a LGPL Rust crate can only be used in non-(L)GPL programs if no code is inlined or otherwise codegened from it (e.g. generics).\n\nWe could have lint(s) that makes writing and using such libraries easier by warning/marking items that require codegen in the user crate (e.g. generics) and those that recommend copying data/code from one crate into another (e.g. non-`#[inline(never)]` `static`s, `#[inline]` functions). Note that the latter doesn't _require_ inlining, and so doesn't necessarily have to be included in the first lint.\n\nThis could even include a `#[no_inlining] extern crate some_lgpl_crate;` attribute, that doesn't read crate metadata (making the compiler ignore `#[inline]` attributes and the AST metadata in that crate, and disallowing instantiating generic functions).\n\n``` rust\n#![warn(items_requiring_crosscrate_inlining)]\n#![warn(public_inlinable_items)]\n\nstatic FOO: uint = 10; // warning: statics can be inlined by default, consider adding #[inline(never)]\n\npub fn foo<T>(...) { // warning: generic functions require inlining\n   // ...\n}\n\n#[inline] // warning: inline attribute on public item\npub fn bar(...) {\n    // ...\n}\n```\n\n``` rust\n#[no_inlining]\nextern crate foo;\n\nfn main() {\n    foo::bar::<int>() // error: instantiating generic function from crate `foo`, which is marked no_inlining\n\n    // not inlined, just called as a non-#[inline] function would be\n    foo::some_inlinable_function();\n}\n```\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16159/timeline", "performed_via_github_app": null, "state_reason": "completed"}