{"url": "https://api.github.com/repos/rust-lang/rust/issues/61795", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61795/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61795/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61795/events", "html_url": "https://github.com/rust-lang/rust/issues/61795", "id": 455629164, "node_id": "MDU6SXNzdWU0NTU2MjkxNjQ=", "number": 61795, "title": "Provide a way to generate doc comment content", "user": {"login": "SillyFreak", "id": 1029192, "node_id": "MDQ6VXNlcjEwMjkxOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1029192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SillyFreak", "html_url": "https://github.com/SillyFreak", "followers_url": "https://api.github.com/users/SillyFreak/followers", "following_url": "https://api.github.com/users/SillyFreak/following{/other_user}", "gists_url": "https://api.github.com/users/SillyFreak/gists{/gist_id}", "starred_url": "https://api.github.com/users/SillyFreak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SillyFreak/subscriptions", "organizations_url": "https://api.github.com/users/SillyFreak/orgs", "repos_url": "https://api.github.com/users/SillyFreak/repos", "events_url": "https://api.github.com/users/SillyFreak/events{/privacy}", "received_events_url": "https://api.github.com/users/SillyFreak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-13T09:21:15Z", "updated_at": "2019-06-13T12:11:22Z", "closed_at": "2019-06-13T12:11:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to generate doc comments from a more concise form, and as far as I can tell there is no way to do this. My example is citing an external source: given the reference `\"label\"`, I want to generate\r\n\r\n    /// See [somewhere](https://example.com/document/#somewhere)\r\n\r\nI have tried a few avenues of injecting doc content: `#[doc = my_doc!(\"foo\")]` [doesn't work](https://stackoverflow.com/a/41945753/371191); an attribute macro `#[my_doc(\"foo\")]`, generating a `#[doc = \"foo\"]` attribute, interacts incorrectly with literal doc comments/attributes, and multiple \"macro doc attributes\":\r\n\r\n```\r\n/// a\r\n///\r\n#[my_doc(\"b\")]\r\n///\r\n/// c\r\n///\r\n#[my_doc(\"d\")]\r\n///\r\n/// e\r\n```\r\n\r\nbecomes\r\n\r\n> d b a\r\n> c\r\n> e\r\n\r\nthat is, macro expansion happens first, reversing order, then doc comments/attributes come after; so it seems attribute macros are not really applicable for this. \r\n\r\nI can't judge what would be the implications of various avenues to fix this, but I wanted to put the report out there.", "closed_by": {"login": "SillyFreak", "id": 1029192, "node_id": "MDQ6VXNlcjEwMjkxOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1029192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SillyFreak", "html_url": "https://github.com/SillyFreak", "followers_url": "https://api.github.com/users/SillyFreak/followers", "following_url": "https://api.github.com/users/SillyFreak/following{/other_user}", "gists_url": "https://api.github.com/users/SillyFreak/gists{/gist_id}", "starred_url": "https://api.github.com/users/SillyFreak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SillyFreak/subscriptions", "organizations_url": "https://api.github.com/users/SillyFreak/orgs", "repos_url": "https://api.github.com/users/SillyFreak/repos", "events_url": "https://api.github.com/users/SillyFreak/events{/privacy}", "received_events_url": "https://api.github.com/users/SillyFreak/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61795/timeline", "performed_via_github_app": null, "state_reason": "completed"}