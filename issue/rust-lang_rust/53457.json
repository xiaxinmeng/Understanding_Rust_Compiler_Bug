{"url": "https://api.github.com/repos/rust-lang/rust/issues/53457", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53457/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53457/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53457/events", "html_url": "https://github.com/rust-lang/rust/issues/53457", "id": 351738938, "node_id": "MDU6SXNzdWUzNTE3Mzg5Mzg=", "number": 53457, "title": "non-defining existential type use in defining scope with empty lifetime name", "user": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-08-17T21:07:51Z", "updated_at": "2019-06-04T08:32:50Z", "closed_at": "2019-06-04T08:32:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Really not sure where the error here is coming from, as far as I can tell there should only be a single relevant lifetime, `'a`. The same function written as a free function generic over a `Write` returning `impl Future<...> + 'a` works fine (included in the playground). I'll try and come up with a reduced example in the next couple of days [(playground)](https://play.rust-lang.org/?gist=5bb231c73d550274e62c986c79f9df77&version=nightly&mode=debug&edition=2015)\r\n\r\n```text\r\nerror: non-defining existential type use in defining scope\r\n  --> src/lib.rs:19:5\r\n   |\r\n19 | /     {\r\n20 | |         poll_fn(move |cx| self.reborrow().poll_close(cx))\r\n21 | |     }\r\n   | |_____^ lifetime `` is part of concrete type but not used in parameter list of existential type\r\n```\r\n\r\n```rust\r\n#![feature(arbitrary_self_types, existential_type, pin, futures_api)]\r\n\r\nuse std::future::Future;\r\nuse std::marker::Unpin;\r\nuse std::mem::PinMut;\r\nuse std::task::{self, Poll};\r\n\r\npub trait Write {\r\n    type Error;\r\n\r\n    fn poll_close(self: PinMut<Self>, cx: &mut task::Context) -> Poll<Result<(), Self::Error>>;\r\n}\r\n\r\nexistential type Close<'a, W: Write>: Future<Output = Result<(), W::Error>> + 'a;\r\n\r\ntrait WriteExt: Write {\r\n    fn close<'a>(self: PinMut<'a, Self>) -> Close<'a, Self>\r\n    where\r\n        Self: Sized,\r\n    {\r\n        poll_fn(move |cx| self.reborrow().poll_close(cx))\r\n    }\r\n}\r\n\r\n// ------------\r\n// from futures-util-preview 0.3\r\n\r\npub struct PollFn<F> {\r\n    f: F,\r\n}\r\n\r\nimpl<F> Unpin for PollFn<F> {}\r\n\r\npub fn poll_fn<T, F>(f: F) -> PollFn<F>\r\nwhere\r\n    F: FnMut(&mut task::Context) -> Poll<T>,\r\n{\r\n    PollFn { f }\r\n}\r\n\r\nimpl<T, F> Future for PollFn<F>\r\nwhere\r\n    F: FnMut(&mut task::Context) -> Poll<T>,\r\n{\r\n    type Output = T;\r\n\r\n    fn poll(mut self: PinMut<Self>, cx: &mut task::Context) -> Poll<T> {\r\n        (&mut self.f)(cx)\r\n    }\r\n}\r\n```\r\n\r\n(CC @oli-obk in case you have any hints on where to look)", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53457/timeline", "performed_via_github_app": null, "state_reason": "completed"}