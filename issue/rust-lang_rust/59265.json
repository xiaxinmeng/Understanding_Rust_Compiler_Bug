{"url": "https://api.github.com/repos/rust-lang/rust/issues/59265", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/59265/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/59265/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/59265/events", "html_url": "https://github.com/rust-lang/rust/issues/59265", "id": 422002149, "node_id": "MDU6SXNzdWU0MjIwMDIxNDk=", "number": 59265, "title": "Under certain circumstances, Rust segfaults when using compiler_builtins memset due to stack misalignment", "user": {"login": "alexbuzzbee", "id": 2061796, "node_id": "MDQ6VXNlcjIwNjE3OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/2061796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexbuzzbee", "html_url": "https://github.com/alexbuzzbee", "followers_url": "https://api.github.com/users/alexbuzzbee/followers", "following_url": "https://api.github.com/users/alexbuzzbee/following{/other_user}", "gists_url": "https://api.github.com/users/alexbuzzbee/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexbuzzbee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexbuzzbee/subscriptions", "organizations_url": "https://api.github.com/users/alexbuzzbee/orgs", "repos_url": "https://api.github.com/users/alexbuzzbee/repos", "events_url": "https://api.github.com/users/alexbuzzbee/events{/privacy}", "received_events_url": "https://api.github.com/users/alexbuzzbee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-18T01:31:26Z", "updated_at": "2019-03-18T13:29:26Z", "closed_at": "2019-03-18T11:23:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Rust generates a call to `memset` when zeroing stack objects, as is reasonable. Normally, this would go to `libc`, but in `no_std` programs, it's usually done with `compiler_builtins`. However, because `compiler_builtins`'s `memset` is in the same binary and LLVM \"knows\" what it does, LLVM inlines it and, on x86_64, optimizes it to `movaps` instructions. `movaps` requires 16-byte alignment. Rust does not 16-byte align the stack. As a result, under these circumstances, Rust will segfault if it needs to zero a stack object that by chance isn't 16-byte aligned.\r\n\r\nWhen compiled with `nightly-x86_64-unknown-linux-gnu rustc 1.35.0-nightly (2c8bbf50d 2019-03-16)`, the following program will trigger the bug.\r\n\r\n```rust\r\n#![no_std]\r\n#![no_main]\r\n#![feature(lang_items)]\r\n#![feature(compiler_builtins_lib)] // Forces us to use rustc -O.\r\n\r\nuse core::ptr::write_volatile;\r\n\r\nstruct SomeStruct ([u8; 64]);\r\n\r\n#[no_mangle]\r\nextern \"C\" fn _start() { // This is the interesting bit.\r\n    let mut instance = SomeStruct([0; 64]);\r\n    unsafe {\r\n        write_volatile::<[u8; 64]>(instance.0.as_mut_ptr() as *mut [u8; 64], [0; 64]); // Stop LLVM from optimizing out everything due to -O.\r\n    }\r\n    loop {};\r\n}\r\n\r\n// Standard stubs for no_std.\r\n\r\nuse core::panic::PanicInfo;\r\n\r\n#[panic_handler]\r\nfn rust_panic(info: &PanicInfo) -> ! {\r\n    loop {};\r\n}\r\n\r\n#[lang = \"eh_personality\"]\r\nfn eh_personality() {\r\n    loop {};\r\n}\r\n```\r\n\r\nThe following assembly is produced on x86_64 when compiling with `rustc src/main.rs -O -Z pre-link-arg=-nostartfiles` (the instruction pointer is on the instruction where SIGSEGV occurs):\r\n\r\n```\r\n(gdb) disassemble\r\nDump of assembler code for function _start:\r\n   0x0000555555555000 <+0>:     sub    $0x88,%rsp\r\n   0x0000555555555007 <+7>:     xorps  %xmm0,%xmm0\r\n=> 0x000055555555500a <+10>:    movaps %xmm0,(%rsp)\r\n   0x000055555555500e <+14>:    movaps %xmm0,0x10(%rsp)\r\n   0x0000555555555013 <+19>:    movaps %xmm0,0x20(%rsp)\r\n   0x0000555555555018 <+24>:    movaps %xmm0,0x30(%rsp)\r\n   0x000055555555501d <+29>:    movaps (%rsp),%xmm0\r\n   0x0000555555555021 <+33>:    movaps %xmm0,0x40(%rsp)\r\n   0x0000555555555026 <+38>:    movaps 0x10(%rsp),%xmm0\r\n   0x000055555555502b <+43>:    movaps %xmm0,0x50(%rsp)\r\n   0x0000555555555030 <+48>:    movaps 0x20(%rsp),%xmm0\r\n   0x0000555555555035 <+53>:    movaps %xmm0,0x60(%rsp)\r\n   0x000055555555503a <+58>:    movaps 0x30(%rsp),%xmm0\r\n   0x000055555555503f <+63>:    movaps %xmm0,0x70(%rsp)\r\n   0x0000555555555044 <+68>:    nopw   %cs:0x0(%rax,%rax,1)\r\n   0x000055555555504e <+78>:    xchg   %ax,%ax\r\n   0x0000555555555050 <+80>:    jmp    0x555555555050 <_start+80>\r\nEnd of assembler dump.\r\n```\r\n\r\nPossible fixes include reporting the issue to LLVM and awaiting their fix, somehow convincing LLVM not to make this optimization, aligning the stack if we are going to use `memset`, or somehow avoiding `memset` entirely.", "closed_by": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/59265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/59265/timeline", "performed_via_github_app": null, "state_reason": "completed"}