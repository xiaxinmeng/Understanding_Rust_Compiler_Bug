{"url": "https://api.github.com/repos/rust-lang/rust/issues/48854", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48854/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48854/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48854/events", "html_url": "https://github.com/rust-lang/rust/issues/48854", "id": 303662637, "node_id": "MDU6SXNzdWUzMDM2NjI2Mzc=", "number": 48854, "title": "Stabilize unit tests with non-`()` return type", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 602425123, "node_id": "MDU6TGFiZWw2MDI0MjUxMjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-dev-tools", "name": "T-dev-tools", "color": "bfd4f2", "default": false, "description": "Relevant to the dev-tools subteam, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 923282386, "node_id": "MDU6TGFiZWw5MjMyODIzODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/finished-final-comment-period", "name": "finished-final-comment-period", "color": "f9e189", "default": false, "description": "The final comment period is finished for this PR / Issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 49, "created_at": "2018-03-08T22:54:55Z", "updated_at": "2021-06-30T03:25:04Z", "closed_at": "2018-07-03T01:20:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**CURRENT STATUS:**\r\n\r\nAwaiting someone to write the stabilization PR! [Mentoring instructions here.](https://github.com/rust-lang/rust/issues/48854#issuecomment-391821023)\r\n\r\n---\r\n\r\nThis is a sub-issue of the [larger tracking issue](https://github.com/rust-lang/rust/issues/43301) devoted to the `?` in main RFC. This issue corresponds to stabilizing the use of unit tests whose return type is something other than `()` -- it basically an extension of https://github.com/rust-lang/rust/issues/48453, which was discussing the same thing but for the `main` function.\r\n\r\n### What would be stabilized \r\n\r\nAs before, unit tests that return `()`:\r\n  - Succeed unless they panic\r\n  - Can be annotated with `#[should_panic]`\r\n\r\nHowever, unit tests can now have other return types:\r\n  - The return type must implement the `Termination` trait\r\n    - [Test](https://github.com/rust-lang/rust/blob/81135c9dbc92dc78df747d5096ff07d867ef3b02/src/test/ui/rfc-1937-termination-trait/termination-trait-main-wrong-type.rs) and [expected error](https://github.com/rust-lang/rust/blob/81135c9dbc92dc78df747d5096ff07d867ef3b02/src/test/ui/rfc-1937-termination-trait/termination-trait-main-wrong-type.stderr)\r\n  - The test passes if the return value is considered a \"success\" (e.g., an `Ok` from `Result`)\r\n    - [Test](https://github.com/rust-lang/rust/blob/81135c9dbc92dc78df747d5096ff07d867ef3b02/src/test/ui/rfc-1937-termination-trait/termination-trait-in-test.rs#L21-L30)\r\n  - If the type is not `()`, then `#[should_panic]` is disallowed\r\n    - [Test](https://github.com/rust-lang/rust/blob/81135c9dbc92dc78df747d5096ff07d867ef3b02/src/test/ui/rfc-1937-termination-trait/termination-trait-in-test-should-panic.rs) and [expected error](https://github.com/rust-lang/rust/blob/81135c9dbc92dc78df747d5096ff07d867ef3b02/src/test/ui/rfc-1937-termination-trait/termination-trait-in-test-should-panic.stderr)\r\n\r\n### Unknowns\r\n\r\n- [ ] Question: what's up with `#[should_panic]` and `#[bench]` anyway? ([Example](https://github.com/rust-lang/rust/blob/81135c9dbc92dc78df747d5096ff07d867ef3b02/src/test/ui/rfc-1937-termination-trait/termination-trait-in-test.rs#L32-L37))\r\n- [ ] Can we use this with rustdoc yet?\r\n\r\n<details>\r\n<summary>Older proposal</summary>\r\n\r\n### Possible changes needed before stabilizing\r\n\r\n- [ ] Adjust libtest runner to distinguish `#[should_panic]` from `#[should_error]`, as [suggested by @scottmcm](https://github.com/rust-lang/rust/issues/48854#issuecomment-371660072)?\r\n- [ ] Successful examples of using with rustdoc\r\n\r\n### What would be stabilized \r\n\r\nUnit tests (and `#[bench]` functions) would join the `main` function in being allowed to return any value that implements the `Termination` trait. \r\n\r\nThis commits us to the following (each link is to a test):\r\n\r\n- tests that return `Result` and other `Termination` types. In the case of `Result`:\r\n    - [`Ok` means test passes](https://github.com/rust-lang/rust/blob/c90f68224b069f5bb2a80e30e2737e4bb17c1466/src/test/run-pass/rfc-1937-termination-trait/termination-trait-in-test.rs#L20-L24)\r\n    - [`Err` causes test failure](https://github.com/rust-lang/rust/blob/c90f68224b069f5bb2a80e30e2737e4bb17c1466/src/test/run-pass/rfc-1937-termination-trait/termination-trait-in-test.rs#L26-L31)\r\n    - more generally, success or failure is determined by [invoking `report()`](https://github.com/rust-lang/rust/blob/c90f68224b069f5bb2a80e30e2737e4bb17c1466/src/libtest/lib.rs#L327-L332), although that detail is not being stabilized\r\n- benchmarks work the same way ([Ok](https://github.com/rust-lang/rust/blob/c90f68224b069f5bb2a80e30e2737e4bb17c1466/src/test/run-pass/rfc-1937-termination-trait/termination-trait-in-test.rs#L33-L36), [Err](https://github.com/rust-lang/rust/blob/c90f68224b069f5bb2a80e30e2737e4bb17c1466/src/test/run-pass/rfc-1937-termination-trait/termination-trait-in-test.rs#L38-L43))\r\n    - note that `#[bench]` is still effectively unstable though in general\r\n\r\n### What remains unstable\r\n\r\n- The library details: where the trait is and its methods\r\n  - Which methods the test runner invokes on the trait -- this is unstable as the trait itself is unstable\r\n\r\n</details>", "closed_by": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48854/reactions", "total_count": 5, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 1, "heart": 2, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48854/timeline", "performed_via_github_app": null, "state_reason": "completed"}