{"url": "https://api.github.com/repos/rust-lang/rust/issues/8665", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/8665/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/8665/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/8665/events", "html_url": "https://github.com/rust-lang/rust/issues/8665", "id": 18354916, "node_id": "MDU6SXNzdWUxODM1NDkxNg==", "number": 8665, "title": "Noticeable performance regression since the last LLVM\u00a0update.", "user": {"login": "sebcrozet", "id": 1734958, "node_id": "MDQ6VXNlcjE3MzQ5NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1734958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebcrozet", "html_url": "https://github.com/sebcrozet", "followers_url": "https://api.github.com/users/sebcrozet/followers", "following_url": "https://api.github.com/users/sebcrozet/following{/other_user}", "gists_url": "https://api.github.com/users/sebcrozet/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebcrozet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebcrozet/subscriptions", "organizations_url": "https://api.github.com/users/sebcrozet/orgs", "repos_url": "https://api.github.com/users/sebcrozet/repos", "events_url": "https://api.github.com/users/sebcrozet/events{/privacy}", "received_events_url": "https://api.github.com/users/sebcrozet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-08-21T13:45:32Z", "updated_at": "2013-08-23T22:16:23Z", "closed_at": "2013-08-23T22:16:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I get a huge performance regression since #8328 landed (revision a8c3fe45c6138cd1f4d143fdb0e843ee2d4759b2) on all my projects. Things are 50 to 75% slower. I\u2019m pretty sure #8328 is in cause since when I revert the compiler to the version right before (revision 67c954e365970e4c2cd06f0c50724656d7010f45) performances go back to normal.\n\nFor what it\u2019s worth, the [concerned projects](https://github.com/sebcrozet/nphysics) are 100% generic, and rely a lot on cross-crate inlining. They do a lot of numeric computations and array indexing. Sorry if I am a bit vague but I cannot valgrind my projects because my valgrind started to segfault a few days ago (perhaps since the re-enabling of jemalloc)\u2026\n\nI tried to come up with a small bench exhibiting the problem. It is not _that_ significative, but the following shows some noticeable performances regression already:\n\n``` rust\nextern mod extra;\n\nuse std::hashmap;\nuse extra::test::BenchHarness;\n\n#[bench]\nfn bench_insert_std(bh: &mut BenchHarness) {\n    let mut m = hashmap::HashMap::with_capacity(32);\n\n    do bh.iter {\n        for i in range(0u, 500) {\n            m.insert((i, i), i);\n        }\n    }\n}\n\n#[bench]\nfn bench_insert_find_remove_std(bh: &mut BenchHarness) {\n    let mut m = hashmap::HashMap::with_capacity(32);\n\n    do bh.iter {\n        for i in range(0u, 200) {\n            m.insert((i, i), i);\n        }\n\n        for i in range(0u, 200) {\n            assert!(*m.find(&(i, i)).unwrap() == i)\n        }\n\n        for i in range(100u, 200) {\n            m.remove(&(i, i));\n        }\n\n        for i in range(100u, 200) {\n            assert!(m.find(&(i, i)).is_none())\n        }\n\n        for i in range(0u, 100) {\n            m.insert((i, i), i * 2);\n        }\n\n        for i in range(0u, 100) {\n            assert!(*m.find(&(i, i)).unwrap() == i * 2)\n        }\n\n        for i in range(0u, 100) {\n            m.remove(&(i, i));\n        }\n\n        for i in range(0u, 100) {\n            assert!(m.find(&(i, i)).is_none())\n        }\n    }\n}\n\nfn main() {\n} \n```\n\nCompiled with `--opt-level=3`.\nWith the (new) compiler a8c3fe45c6138cd1f4d143fdb0e843ee2d4759b2, I\u00a0get:\n\n```\ntest bench_insert_find_remove_std ... bench: 89242 ns/iter (+/- 3605)\ntest bench_insert_std ... bench: 46177 ns/iter (+/- 1555)\n```\n\nWith the (old) compiler 67c954e365970e4c2cd06f0c50724656d7010f45, I\u00a0get something more than 10% faster. The asm dump is smaller too:\n\n```\ntest bench_insert_find_remove_std ... bench: 73939 ns/iter (+/- 2872)\ntest bench_insert_std ... bench: 38482 ns/iter (+/- 1005)\n```\n", "closed_by": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/8665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/8665/timeline", "performed_via_github_app": null, "state_reason": "completed"}