{"url": "https://api.github.com/repos/rust-lang/rust/issues/70580", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70580/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70580/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70580/events", "html_url": "https://github.com/rust-lang/rust/issues/70580", "id": 590488049, "node_id": "MDU6SXNzdWU1OTA0ODgwNDk=", "number": 70580, "title": "Mitigate binary size impact of implicit caller location", "user": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1049491442, "node_id": "MDU6TGFiZWwxMDQ5NDkxNDQy", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-heavy", "name": "I-heavy", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to binary size of generated code."}, {"id": 1606844895, "node_id": "MDU6TGFiZWwxNjA2ODQ0ODk1", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-track_caller", "name": "F-track_caller", "color": "f9c0cc", "default": false, "description": "`#![feature(track_caller)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-30T18:09:28Z", "updated_at": "2021-10-23T09:21:44Z", "closed_at": "2021-10-23T09:21:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Once we've [measured the size impact](https://github.com/rust-lang/rust/issues/70579) of [implicit caller location](https://github.com/rust-lang/rust/issues/47809), we need to decide what (if any) knobs to offer users to mitigate that impact.\r\n\r\nThe RFC originally proposed a [`-Zlocation-detail-control`](https://github.com/rust-lang/rfcs/blob/master/text/2091-inline-semantic.md#location-detail-control) flag for rustc which would allow users to control which fields of `Location` were preserved.\r\n\r\nOn the tracking issue [I also proposed](https://github.com/rust-lang/rust/issues/47809#issuecomment-605530430) an all-or-nothing flag like `-Zredact-caller-location` which would either preserve `Location`s or rewrite them all to be the same.\r\n\r\nNote that both of these options are limited to controlling the locations reported by user code -- unless a user recompiles `std` with whatever flag we offer, there will always be \"unredacted\" locations in their binary.\r\n\r\nI'm fond of ideas that would allow us to replace `Location`s with something smaller that can be \"symbolized\" similarly to the way a debugger for an embedded device can identify the source location for a program counter value in a stacktrace. I *think* most options in this direction require help from the linker that isn't available, but I'd love to be wrong.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70580/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70580/timeline", "performed_via_github_app": null, "state_reason": "completed"}