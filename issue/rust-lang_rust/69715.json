{"url": "https://api.github.com/repos/rust-lang/rust/issues/69715", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69715/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69715/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69715/events", "html_url": "https://github.com/rust-lang/rust/issues/69715", "id": 575805206, "node_id": "MDU6SXNzdWU1NzU4MDUyMDY=", "number": 69715, "title": "More precise drop elaboration", "user": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}], "state": "open", "locked": false, "assignee": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-03-04T21:47:01Z", "updated_at": "2020-10-02T19:10:38Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#68943 and #68528 changed drop elaboration to reduce the number of `Drop` terminators emitted for enums. Originally, these PRs were intended only to solve #66753, but they also resulted in [significant perf improvements](https://perf.rust-lang.org/compare.html?start=a8437cf213ac1e950b6f5c691c4d2a29bf949bcd&end=d9051341a1c142542a3f7dab509266606c775382&stat=instructions%3Au) for codegen-ed builds (look only at the \"clean\" runs).\r\n\r\nIt may be possible to find more perf wins by making drop elaboration more precise. Notably, #68528 added a `discriminant_switch_effect` to `MaybeInitializedPlaces` but did not make the equivalent change to `MaybeUninitializedPlaces`. As a result, some frivolous drop terminators remain after drop elaboration (e.g., `bb5` in [this recreation of `Option::unwrap`](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=4e59ddba525666d19fba8d706f2aa822)). This occurs because the move path for the local containing the `Option` is calculated to be \"maybe live\" by drop elaboration, but is determined *not* to be \"maybe dead\" since `MaybeUninitializedLocals` does not mark the move path for the `Option::Some(_)` variant as uninitialized. As a result, elaboration considers the drop of `Option<T>` along the unwind edge as [\"static\" instead of \"open\"](https://github.com/rust-lang/rust/blob/e0e5d82e1677c82d209b214bbfc2cc5705c2336a/src/librustc_mir/transform/elaborate_drops.rs#L191). Only \"open\" drops trigger the new code introduced in #68943 for fieldless enum variants such as `Option::None`. \r\n\r\nOn the other hand, marking more drops of enums as \"open\" ones could *increase* the amount of MIR we need to codegen. If we can't prove that they are frivolous, open drops cause drop flags to be created within a function's MIR, while static drops simply invoke the drop shim. I'm not confident enough in my understanding of drop elaboration to be sure of this, however.\r\n\r\n`MaybeUninitializedLocals` is also used in the borrow-checker, so care should be taken when modifying it. In the worst case, we could use a different version of that analysis for drop elaboration than for borrow-checking. However, using a more precise variant of the analysis during borrow-checking may have positive effects.\r\n\r\n@eddyb also suggested incorporating information about the active enum variant during drop elaboration, similar to what [`NeedsDrop`](https://github.com/rust-lang/rust/blob/e0e5d82e1677c82d209b214bbfc2cc5705c2336a/src/librustc_mir/transform/check_consts/qualifs.rs#L227) does for const-checking. If this were implemented, we could eliminate all drops of an enum that occur after it is assigned a variant that needs no drop glue (e.g. `Option::None`) with no intervening assignment. I'm more skeptical of this approach than the first, since it becomes pretty useless as soon as a pointer exists that could mutate the place (unless we are willing to do a much more complex alias analysis). Perhaps they disagree?\r\n\r\nIn summary, I think we (myself and possibly @rust-lang/wg-mir-opt) should investigate the following ideas, with the first one given higher priority:\r\n- [x] Add a `discriminant_switch_effect` to `MaybeUninitializedPlaces` in the style of #68528.\r\n- [ ] Track assignments of enum variants during drop elaboration.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69715/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69715/timeline", "performed_via_github_app": null, "state_reason": null}