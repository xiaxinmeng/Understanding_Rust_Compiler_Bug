{"url": "https://api.github.com/repos/rust-lang/rust/issues/48160", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48160/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48160/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48160/events", "html_url": "https://github.com/rust-lang/rust/issues/48160", "id": 296360320, "node_id": "MDU6SXNzdWUyOTYzNjAzMjA=", "number": 48160, "title": "parser should recover from seeing `,` when `;` is expected", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-12T12:35:17Z", "updated_at": "2019-10-29T00:35:07Z", "closed_at": "2019-10-29T00:35:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Right now, if `rustc` is parsing a function body and sees a `,` when it expected a `;`, it will give up on parsing the rest of the current function body.\r\n\r\nMeanwhile, later phases of the compiler still run. Which means, for example, if the remainder of that erroneous function body contains the sole references to certain imports, then you get false warnings about those imports being unused.\r\n\r\nHere is a concrete example ([playground](https://play.rust-lang.org/?gist=e22178b3eef8977777022ea98144b439&version=beta)):\r\n\r\n```rust\r\nuse std::iter::Iterator;\r\n\r\nfn main() {\r\n    struct S;\r\n    let _x = 3,\r\n    impl Iterator for S {\r\n        type Item = S;\r\n        fn next(&mut self) -> Option<S> { Some(S) }\r\n    }\r\n}\r\n```\r\n\r\nwhich yields the following diagnostic output on nightly and beta:\r\n\r\n```\r\nerror: expected one of `.`, `;`, `?`, or an operator, found `,`\r\n --> src/main.rs:5:15\r\n  |\r\n5 |     let _x = 3,\r\n  |               ^ expected one of `.`, `;`, `?`, or an operator here\r\n\r\nwarning: unused import: `std::iter::Iterator`\r\n --> src/main.rs:1:5\r\n  |\r\n1 | use std::iter::Iterator;\r\n  |     ^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: #[warn(unused_imports)] on by default\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nThis seems to affect the current nightly and beta, but not stable (I.e., the stable channel just presents the parse error, not the erroneous lint about the supposedly unused import.)", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48160/timeline", "performed_via_github_app": null, "state_reason": "completed"}