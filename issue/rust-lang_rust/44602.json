{"url": "https://api.github.com/repos/rust-lang/rust/issues/44602", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44602/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44602/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44602/events", "html_url": "https://github.com/rust-lang/rust/issues/44602", "id": 258084645, "node_id": "MDU6SXNzdWUyNTgwODQ2NDU=", "number": 44602, "title": "Cast error doesn't suggest boxed traits but maybe it should.", "user": {"login": "quadrupleslap", "id": 6666547, "node_id": "MDQ6VXNlcjY2NjY1NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/6666547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quadrupleslap", "html_url": "https://github.com/quadrupleslap", "followers_url": "https://api.github.com/users/quadrupleslap/followers", "following_url": "https://api.github.com/users/quadrupleslap/following{/other_user}", "gists_url": "https://api.github.com/users/quadrupleslap/gists{/gist_id}", "starred_url": "https://api.github.com/users/quadrupleslap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quadrupleslap/subscriptions", "organizations_url": "https://api.github.com/users/quadrupleslap/orgs", "repos_url": "https://api.github.com/users/quadrupleslap/repos", "events_url": "https://api.github.com/users/quadrupleslap/events{/privacy}", "received_events_url": "https://api.github.com/users/quadrupleslap/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-15T15:47:02Z", "updated_at": "2020-06-11T18:01:51Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I have a function call that's something like:\r\n\r\n```rust\r\ntest(&[&\"nani?\" as &_, &\"=_=\".to_owned() as &_]);\r\n```\r\n\r\nThe first `&_` is interpreted as a no-op cast, and the second is interpreted as a `&String -> &&str`. I did this to try and get a list of boxed traits, but the error message is pretty misleading unless you notice what the compiler's actually inferring, and almost makes it sound like `as` can't be used in this situation at all:\r\n\r\n```\r\nerror[E0605]: non-primitive cast: `&std::string::String` as `&&str`\r\n...\r\n  = note: an `as` expression can only be used to convert between primitive types. Consider using the `From` trait\r\n```\r\n\r\nI don't know how, but it would be nice if it could automagically recommend boxed traits in similar situations.\r\n\r\n[Playground](https://play.rust-lang.org/?gist=03ad4c524bc9474ee351d8a88ff2f495&version=stable)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44602/timeline", "performed_via_github_app": null, "state_reason": null}