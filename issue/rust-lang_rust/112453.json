{"url": "https://api.github.com/repos/rust-lang/rust/issues/112453", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112453/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112453/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112453/events", "html_url": "https://github.com/rust-lang/rust/issues/112453", "id": 1749470817, "node_id": "I_kwDOAAsO6M5oRs5h", "number": 112453, "title": "change `DefiningAnchor::Bind` to a list of opaques", "user": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 419557634, "node_id": "MDU6TGFiZWw0MTk1NTc2MzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-medium", "name": "E-medium", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Medium / intermediate"}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-06-09T09:05:38Z", "updated_at": "2023-06-09T09:05:57Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[`DefiningAnchor::Bind`](https://github.com/rust-lang/rust/blob/9c843d9fa322596c7d525c78fa89731ecf7afbfe/compiler/rustc_middle/src/traits/mod.rs#L1118) is used to indicate which opaque types can be defined in the current scope. This currently uses the `DefId` of the current scope and which is then used in `opaque_type_origin` to check whether a given opaque type is defined by the current item:\r\n\r\nhttps://github.com/rust-lang/rust/blob/9c843d9fa322596c7d525c78fa89731ecf7afbfe/compiler/rustc_infer/src/infer/opaque_types.rs#L378-L398\r\n\r\nTo enable better caching, both directly by having the same anchor for all functions which don't define any opaque types, and indirectly, by allowing us to filter opaque types from the defining scope, we should instead change this to a list of the opaques we're defining: `&'tcx [LocalDefId]`. `opaque_type_origin` can then simply check whether the opaque type is an element of that list. ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112453/timeline", "performed_via_github_app": null, "state_reason": null}