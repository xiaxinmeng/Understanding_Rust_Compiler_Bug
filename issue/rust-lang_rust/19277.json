{"url": "https://api.github.com/repos/rust-lang/rust/issues/19277", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/19277/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/19277/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/19277/events", "html_url": "https://github.com/rust-lang/rust/issues/19277", "id": 49937518, "node_id": "MDU6SXNzdWU0OTkzNzUxOA==", "number": 19277, "title": "Unicode case folding, caseless matching, and iterator methods", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-11-24T20:23:21Z", "updated_at": "2014-12-30T13:17:36Z", "closed_at": "2014-12-30T13:17:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I made https://github.com/SimonSapin/rust-casefold for Servo, the HTML spec requires \u201ccompatibility caseless matching\u201d. Some of it might be interesting to have in libunicode/libcollections. @aturon, @alexcrichton, how much do you think is appropriate to include? I\u2019d like your input before a prepare a PR (and have to deal with Rust bootstrapping).\n\n`zip_all` and `iter_eq` are two generic function (independent of Unicode) that could be default methods of `Iterator`. The former is like `i.zip(j).all(f)`, but also return `false` if the two iterators have a different length. The latter (which uses the former) check that the iterators have the same content. That is, it is equivalent to `i.collect::Vec<_>() == j.collect::Vec<_>()`, but compares elements one by one and does not allocate. (It also stops at the first difference rather than consume both iterators until the end.)\n\nCase folding is fairly straightforward. The data could be generated with `src/etc/unicode.py` and kept in `src/libunicode/tables.rs`, like existing Unicode data.\n\nCaseless matching however is more complex: there are different variants of it. Other than the \u201cdefault\u201d variant, they require NFD and NFKD normalization. libunicode already has `nfd_chars` and `nfkd_chars` methods on `&str`, but here that would require allocating an intermediate `String`. So, in the same spirit as #19042, it might be useful to expose another API for Unicode normalization (all four variants of it, while we\u2019re at it) from a generic `Iterator<char>` rather than just `&str` / `Chars`.\n\nThoughts?\n\nNothing urgent here, but consider this when stabilizing libunicode.\n", "closed_by": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/19277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/19277/timeline", "performed_via_github_app": null, "state_reason": "completed"}