{"url": "https://api.github.com/repos/rust-lang/rust/issues/51604", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51604/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51604/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51604/events", "html_url": "https://github.com/rust-lang/rust/issues/51604", "id": 333022605, "node_id": "MDU6SXNzdWUzMzMwMjI2MDU=", "number": 51604, "title": "HashMap.entry() should allow for lookups by reference", "user": {"login": "mqudsi", "id": 606923, "node_id": "MDQ6VXNlcjYwNjkyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mqudsi", "html_url": "https://github.com/mqudsi", "followers_url": "https://api.github.com/users/mqudsi/followers", "following_url": "https://api.github.com/users/mqudsi/following{/other_user}", "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions", "organizations_url": "https://api.github.com/users/mqudsi/orgs", "repos_url": "https://api.github.com/users/mqudsi/repos", "events_url": "https://api.github.com/users/mqudsi/events{/privacy}", "received_events_url": "https://api.github.com/users/mqudsi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-16T23:35:01Z", "updated_at": "2018-06-17T02:58:44Z", "closed_at": "2018-06-17T02:58:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I don't see why the `HashMap.entry(..)` method\r\n\r\n```rust\r\npub fn entry(&mut self, key: K) -> Entry<K, V>\r\n```\r\n\r\nrequires that the lookup parameter `key` be of type `K` and not some type `Q` where `K: Borrow<Q>`, akin to `HashMap.get(..)`:\r\n\r\n```rust\r\npub fn get<Q: ?Sized>(&self, k: &Q) -> Option<&V> \r\nwhere\r\n    K: Borrow<Q>,\r\n    Q: Hash + Eq, \r\n```\r\n\r\nGiven a `HashMap<String, Foo>`, just as a lookup can be performed with an `&str` parameter, it should be possible to obtain a `HashMap::Entry<K, V>` without requiring a full-blown instance of `K` be passed in to `.entry(...)`.\r\n\r\ni.e. the following code should work:\r\n\r\n```rust\r\nuse std::collections::HashMap;\r\n\r\nfn main() {\r\n    let mut map = HashMap::new();\r\n\r\n    map.insert(\"Foo\".to_owned(), \"Bar\".to_owned());\r\n\r\n    {\r\n        // read-only reference to the result:\r\n        let bar = map.get(\"Foo\");\r\n        assert!(bar.is_some());\r\n    }\r\n\r\n    {\r\n        // why should this not be allowed?\r\n        let bar = map.entry(\"Foo\");\r\n    }\r\n}\r\n```\r\n\r\nWhich currently returns the following:\r\n\r\n```rust\r\nerror[E0308]: mismatched types\r\n  --> ./test.rs:16:29\r\n   |\r\n16 |         let bar = map.entry(\"Foo\");\r\n   |                             ^^^^^\r\n   |                             |\r\n   |                             expected struct `std::string::String`, found reference\r\n   |                             help: try using a conversion method: `\"Foo\".to_string()`\r\n   |\r\n   = note: expected type `std::string::String`\r\n              found type `&'static str`\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\n\r\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51604/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51604/timeline", "performed_via_github_app": null, "state_reason": "completed"}