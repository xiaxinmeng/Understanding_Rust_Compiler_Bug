{"url": "https://api.github.com/repos/rust-lang/rust/issues/11008", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/11008/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/11008/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/11008/events", "html_url": "https://github.com/rust-lang/rust/issues/11008", "id": 24384556, "node_id": "MDU6SXNzdWUyNDM4NDU1Ng==", "number": 11008, "title": "Maybe emit phis directly instead of using alloca", "user": {"login": "o11c", "id": 964689, "node_id": "MDQ6VXNlcjk2NDY4OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/o11c", "html_url": "https://github.com/o11c", "followers_url": "https://api.github.com/users/o11c/followers", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "organizations_url": "https://api.github.com/users/o11c/orgs", "repos_url": "https://api.github.com/users/o11c/repos", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "received_events_url": "https://api.github.com/users/o11c/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2013-12-16T22:27:32Z", "updated_at": "2013-12-20T10:59:09Z", "closed_at": "2013-12-17T00:39:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "It might be better to generate phis instead of emitting allocas and letting LLVM do the work in the (I think) SRoA optimization pass.\n\nAn example of what could be done (in C, without the case of taking the address of the local) is at https://gist.github.com/o11c/7995342\n\nThe general approach is:\nFor each block, create a phi node for each live variable.\nFor each jump to a block, add an alternative on the phi with the value before that jump.\n\nUnlike C++, Rust can afford to do this in the general case because moves are always free. However, it is still complicated by the fact that there may be references to the variable.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/11008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/11008/timeline", "performed_via_github_app": null, "state_reason": "completed"}