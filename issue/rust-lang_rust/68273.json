{"url": "https://api.github.com/repos/rust-lang/rust/issues/68273", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68273/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68273/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68273/events", "html_url": "https://github.com/rust-lang/rust/issues/68273", "id": 550601606, "node_id": "MDU6SXNzdWU1NTA2MDE2MDY=", "number": 68273, "title": "Unexpected 'static lifetime requirement", "user": {"login": "0e4ef622", "id": 8326135, "node_id": "MDQ6VXNlcjgzMjYxMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/8326135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0e4ef622", "html_url": "https://github.com/0e4ef622", "followers_url": "https://api.github.com/users/0e4ef622/followers", "following_url": "https://api.github.com/users/0e4ef622/following{/other_user}", "gists_url": "https://api.github.com/users/0e4ef622/gists{/gist_id}", "starred_url": "https://api.github.com/users/0e4ef622/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0e4ef622/subscriptions", "organizations_url": "https://api.github.com/users/0e4ef622/orgs", "repos_url": "https://api.github.com/users/0e4ef622/repos", "events_url": "https://api.github.com/users/0e4ef622/events{/privacy}", "received_events_url": "https://api.github.com/users/0e4ef622/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-16T06:28:17Z", "updated_at": "2020-05-20T20:56:33Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Attempting to compile\r\n\r\n```rust\r\ntrait Trait<T> { }\r\nimpl<A: Trait<T> + ?Sized, T> Trait<T> for Box<A> { }\r\n\r\nfn foo<T>(s: &Box<dyn Trait<T>>) {\r\n    let _: &(dyn Trait<T> + 'static) = s;\r\n}\r\n```\r\n\r\nyields the following error.\r\n\r\n```\r\nerror[E0310]: the parameter type `T` may not live long enough\r\n --> src/lib.rs:5:40\r\n  |\r\n4 | fn foo<T>(s: &Box<dyn Trait<T>>) {\r\n  |        - help: consider adding an explicit lifetime bound `T: 'static`...\r\n5 |     let _: &(dyn Trait<T> + 'static) = s;\r\n  |                                        ^\r\n  |\r\nnote: ...so that the type `std::boxed::Box<(dyn Trait<T> + 'static)>` will meet its required lifetime bounds\r\n --> src/lib.rs:5:40\r\n  |\r\n5 |     let _: &(dyn Trait<T> + 'static) = s;\r\n  |                                        ^\r\n```\r\n\r\nHowever, changing the line mentioned in the error to `let _: &(dyn Trait<T> + 'static) = &**s;` allows the code to compile.\r\n\r\nThe former attempts to coerce the `Box` itself to a trait object, while the latter simply takes a reference to the trait object within the `Box`, although I fail to understand why the former shouldn't work when the latter does. My guess is that the lifetime of the `Box` is bounded to the lifetime of `T` unnecessarily.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68273/timeline", "performed_via_github_app": null, "state_reason": null}