{"url": "https://api.github.com/repos/rust-lang/rust/issues/10014", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/10014/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/10014/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/10014/events", "html_url": "https://github.com/rust-lang/rust/issues/10014", "id": 21373850, "node_id": "MDU6SXNzdWUyMTM3Mzg1MA==", "number": 10014, "title": "timers should be represented by ports", "user": {"login": "metajack", "id": 28357, "node_id": "MDQ6VXNlcjI4MzU3", "avatar_url": "https://avatars.githubusercontent.com/u/28357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/metajack", "html_url": "https://github.com/metajack", "followers_url": "https://api.github.com/users/metajack/followers", "following_url": "https://api.github.com/users/metajack/following{/other_user}", "gists_url": "https://api.github.com/users/metajack/gists{/gist_id}", "starred_url": "https://api.github.com/users/metajack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/metajack/subscriptions", "organizations_url": "https://api.github.com/users/metajack/orgs", "repos_url": "https://api.github.com/users/metajack/repos", "events_url": "https://api.github.com/users/metajack/events{/privacy}", "received_events_url": "https://api.github.com/users/metajack/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36953, "node_id": "MDU6TGFiZWwzNjk1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-runtime", "name": "A-runtime", "color": "f7e101", "default": false, "description": "Area: std's runtime and \"pre-main\" init for handling backtraces, unwinds, stack overflows"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-10-22T10:41:36Z", "updated_at": "2013-10-28T10:41:21Z", "closed_at": "2013-10-28T10:41:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The timer code currently has a fundamental flaw, which is that it blocks the task in sleep() and can't be awoken or killed. Instead of exposing sleep, timers should be represented by ports which you `recv()` on and get a message when the timer fires. Then things making timers could cancel them. Using select on timer and another port could be used to implement timeout messages, etc.\n\nWe found this in servo, because calling `setTimeout` in JavaScript spawns a task that calls sleep and then sends a message. You can't cancel such a timer and exiting before the timer fires is impossible since you can't force kill the task.\n\ncc: @jdm \n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/10014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/10014/timeline", "performed_via_github_app": null, "state_reason": "completed"}