{"url": "https://api.github.com/repos/rust-lang/rust/issues/82000", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82000/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82000/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82000/events", "html_url": "https://github.com/rust-lang/rust/issues/82000", "id": 806656060, "node_id": "MDU6SXNzdWU4MDY2NTYwNjA=", "number": 82000, "title": "`doc(alias)`: should it be a mapping rather than search terms?", "user": {"login": "ojeda", "id": 1054456, "node_id": "MDQ6VXNlcjEwNTQ0NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1054456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ojeda", "html_url": "https://github.com/ojeda", "followers_url": "https://api.github.com/users/ojeda/followers", "following_url": "https://api.github.com/users/ojeda/following{/other_user}", "gists_url": "https://api.github.com/users/ojeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/ojeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ojeda/subscriptions", "organizations_url": "https://api.github.com/users/ojeda/orgs", "repos_url": "https://api.github.com/users/ojeda/repos", "events_url": "https://api.github.com/users/ojeda/events{/privacy}", "received_events_url": "https://api.github.com/users/ojeda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 1089771154, "node_id": "MDU6TGFiZWwxMDg5NzcxMTU0", "url": "https://api.github.com/repos/rust-lang/rust/labels/needs-rfc", "name": "needs-rfc", "color": "fceb9f", "default": false, "description": "This change is large or controversial enough that it should have an (e-)RFC accepted before doing it"}, {"id": 2380416681, "node_id": "MDU6TGFiZWwyMzgwNDE2Njgx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-doc-alias", "name": "A-doc-alias", "color": "f7e101", "default": false, "description": "Area: #[doc(alias)]"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-02-11T18:57:24Z", "updated_at": "2021-04-23T19:36:44Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "PRs such as https://github.com/rust-lang/rust/pull/81988 and https://github.com/rust-lang/rust/pull/81989 add aliases inspired in terms coming from other languages such as C, Python and Java.\r\n\r\nQuestions were raised about how far are we willing to go: should we really add a mapping of functions/features from other languages to Rust? Where do we stop? i.e. \"how much is too much\".\r\n\r\nIf the changes in those two PRs are agreed to be useful, then I think we should consider making the mapping \"official\" and elevate it to that, rather than just a bunch of related search terms without documentation. In other words, something like:\r\n\r\n```rust\r\n#[doc(alias = \"sprintf\", lang = \"C, C++, POSIX\")]\r\n```\r\n\r\nThis would bring a series of advantages:\r\n\r\n- Documentation: easier to tell where the alias comes from and maintain it. Answers things like: \"why is this alias here?\", \"did it come from C, C++, POSIX, Java, Python...?\".\r\n- Docs could automatically generate a page per language containing an index of terms that are mapped to Rust for newcomers from each language. It could be very useful to read for those coming from another language and getting up to speed quickly.\r\n- Docs could show the aliases in the documentation somehow (probably opt-in).\r\n- Docs could provide the option to *disable* matching terms from other languages. This is useful if aliases keep coming in: if someone is already proficient in Rust, they may only want to match aliases related to Rust, rather than \"external aliases\" coming from other languages. This would make the alias functionality more useful for within-Rust terms, too.\r\n- Search could show a small \"capsule tag\" (e.g. with the \"C\" or \"Python\" text) when looking for a term if it matched due to an alias (unless there is a Rust one exactly).\r\n- Other tools could also use this mapping.\r\n\r\nThe downside, of course, is that there could be a lot of this lines added and clutter the source code if many people start adding terms from many languages. One could argue that if that happens it is because the feature became very popular (and Rust too) -- so \"death by success\". :) One could also argue to move it out of line.\r\n\r\nAnswering this question, whether positively or negatively, also resolves other questions that were raised such as:\r\n- Should there be aliases that match exactly the Rust one? e.g. `HashMap` from Java.\r\n- Should aliases be case-sensitive? i.e. if it is an actual mapping, it would be useful to have both `NULL` (for C) and `null` (for, say, JavaScript).\r\n- Should aliases be added if the search already matches them? e.g. searching for both [`bool`](https://doc.rust-lang.org/stable/std/?search=bool) and [`_Bool`](https://doc.rust-lang.org/stable/std/?search=_Bool) already pulls up `bool`.\r\n\r\nP.S. this may need to be moved to internals or written as an RFC.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82000/timeline", "performed_via_github_app": null, "state_reason": null}