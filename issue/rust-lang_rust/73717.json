{"url": "https://api.github.com/repos/rust-lang/rust/issues/73717", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73717/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73717/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73717/events", "html_url": "https://github.com/rust-lang/rust/issues/73717", "id": 645412517, "node_id": "MDU6SXNzdWU2NDU0MTI1MTc=", "number": 73717, "title": "Compile-time regression with mir-opt-level=2", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-25T09:41:00Z", "updated_at": "2020-10-17T19:39:23Z", "closed_at": "2020-10-17T19:39:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following rustc floating point test case used to work just fine with `-Zmir-opt-level=3`, but now even just calling `rustc -Zmir-opt-level=2` on it diverges:\r\n```rust\r\n#![feature(track_caller, stmt_expr_attributes)]\r\n\r\n// Poor-man's black-box\r\n#[inline(never)]\r\nfn black_box<T>(x: T) -> T { x }\r\n\r\nmacro_rules! test {\r\n    ($val:expr, $src_ty:ident -> $dest_ty:ident, $expected:expr) => (\r\n        // black_box disables constant evaluation to test run-time conversions:\r\n        assert_eq!(black_box::<$src_ty>($val) as $dest_ty, $expected,\r\n                    \"run-time {} -> {}\", stringify!($src_ty), stringify!($dest_ty));\r\n\r\n        {\r\n            const X: $src_ty = $val;\r\n            const Y: $dest_ty = X as $dest_ty;\r\n            assert_eq!(Y, $expected,\r\n                        \"const eval {} -> {}\", stringify!($src_ty), stringify!($dest_ty));\r\n        }\r\n    );\r\n\r\n    ($fval:expr, f* -> $ity:ident, $ival:expr) => (\r\n        test!($fval, f32 -> $ity, $ival);\r\n        test!($fval, f64 -> $ity, $ival);\r\n    )\r\n}\r\n\r\nmacro_rules! common_fptoi_tests {\r\n    ($fty:ident -> $($ity:ident)+) => ({ $(\r\n        test!($fty::NAN, $fty -> $ity, 0);\r\n        test!($fty::INFINITY, $fty -> $ity, $ity::MAX);\r\n        test!($fty::NEG_INFINITY, $fty -> $ity, $ity::MIN);\r\n        // These two tests are not solely float->int tests, in particular the latter relies on\r\n        // `u128::MAX as f32` not being UB. But that's okay, since this file tests int->float\r\n        // as well, the test is just slightly misplaced.\r\n        test!($ity::MIN as $fty, $fty -> $ity, $ity::MIN);\r\n        test!($ity::MAX as $fty, $fty -> $ity, $ity::MAX);\r\n        test!(0., $fty -> $ity, 0);\r\n        test!($fty::MIN_POSITIVE, $fty -> $ity, 0);\r\n        test!(-0.9, $fty -> $ity, 0);\r\n        test!(1., $fty -> $ity, 1);\r\n        test!(42., $fty -> $ity, 42);\r\n    )+ });\r\n\r\n    (f* -> $($ity:ident)+) => ({\r\n        common_fptoi_tests!(f32 -> $($ity)+);\r\n        common_fptoi_tests!(f64 -> $($ity)+);\r\n    })\r\n}\r\n\r\nmacro_rules! fptoui_tests {\r\n    ($fty: ident -> $($ity: ident)+) => ({ $(\r\n        test!(-0., $fty -> $ity, 0);\r\n        test!(-$fty::MIN_POSITIVE, $fty -> $ity, 0);\r\n        test!(-0.99999994, $fty -> $ity, 0);\r\n        test!(-1., $fty -> $ity, 0);\r\n        test!(-100., $fty -> $ity, 0);\r\n        test!(#[allow(overflowing_literals)] -1e50, $fty -> $ity, 0);\r\n        test!(#[allow(overflowing_literals)] -1e130, $fty -> $ity, 0);\r\n    )+ });\r\n\r\n    (f* -> $($ity:ident)+) => ({\r\n        fptoui_tests!(f32 -> $($ity)+);\r\n        fptoui_tests!(f64 -> $($ity)+);\r\n    })\r\n}\r\n\r\nfn main() {\r\n    common_fptoi_tests!(f* -> i8 i16 i32 i64 u8 u16 u32 u64);\r\n    fptoui_tests!(f* -> u8 u16 u32 u64);\r\n    common_fptoi_tests!(f* -> i128 u128);\r\n    fptoui_tests!(f* -> u128);\r\n}\r\n```\r\n\r\nFound through the Miri test suite. Unfortunately we have barely any test coverage on the rustc side for mir-opt-level 2 and higher.\r\n\r\nCc @rust-lang/wg-mir-opt ", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73717/timeline", "performed_via_github_app": null, "state_reason": "completed"}