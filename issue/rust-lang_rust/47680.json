{"url": "https://api.github.com/repos/rust-lang/rust/issues/47680", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47680/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47680/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47680/events", "html_url": "https://github.com/rust-lang/rust/issues/47680", "id": 290884109, "node_id": "MDU6SXNzdWUyOTA4ODQxMDk=", "number": 47680, "title": "The mutable borrow is released when matching on a Option<&mut Self> in a function, but not when the function is inlined", "user": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1146616045, "node_id": "MDU6TGFiZWwxMTQ2NjE2MDQ1", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-polonius", "name": "NLL-polonius", "color": "f799ea", "default": false, "description": "Issues related for using Polonius in the borrow checker"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2018-01-23T15:40:21Z", "updated_at": "2022-01-10T15:15:17Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "```rust\r\n#![feature(nll)]\r\n\r\nstruct Node {\r\n    value: char,\r\n    children: Vec<Node>,\r\n}\r\n\r\nimpl Node {\r\n    fn new(value: char) -> Self {\r\n        Self {\r\n            value,\r\n            children: Vec::new(),\r\n        }\r\n    }\r\n\r\n    fn add_child(&mut self, value: char) -> &mut Self {\r\n        self.children.push(Self::new(value));\r\n        self.children.last_mut().unwrap()\r\n    }\r\n\r\n    fn get_child(&mut self, value: char) -> Option<&mut Self> {\r\n        self.children.iter_mut().find(|n| n.value == value)\r\n    }\r\n\r\n    fn add_word(&mut self, word: String) {\r\n        let mut cursor = self;\r\n        for c in word.chars() {\r\n            // The extracted version of the function works\r\n            // cursor = cursor.get_or_add(c);\r\n\r\n            // But the inlined version of the function does not.\r\n            cursor = match cursor.get_child(c) {\r\n                Some(node) => node,\r\n                None => cursor.add_child(c),\r\n            };\r\n        }\r\n    }\r\n\r\n    fn get_or_add(&mut self, value: char) -> &mut Self {\r\n        match self.get_child(value) {\r\n            Some(node) => node,\r\n            None => self.add_child(value),\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\n```\r\nerror[E0499]: cannot borrow `*cursor` as mutable more than once at a time\r\n  --> src/main.rs:34:25\r\n   |\r\n32 |             cursor = match cursor.get_child(c) {\r\n   |                            ------ first mutable borrow occurs here\r\n33 |                 Some(node) => node,\r\n34 |                 None => cursor.add_child(c),\r\n   |                         ^^^^^^ second mutable borrow occurs here\r\n```\r\n\r\n[Originally from Stack Overflow](https://stackoverflow.com/q/48395307/155423)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47680/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47680/timeline", "performed_via_github_app": null, "state_reason": null}