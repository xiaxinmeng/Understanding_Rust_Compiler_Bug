{"url": "https://api.github.com/repos/rust-lang/rust/issues/65983", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65983/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65983/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65983/events", "html_url": "https://github.com/rust-lang/rust/issues/65983", "id": 514961519, "node_id": "MDU6SXNzdWU1MTQ5NjE1MTk=", "number": 65983, "title": "Support intra-doc links on cross-crate reexports", "user": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 234876, "node_id": "MDU6TGFiZWwyMzQ4NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-hard", "name": "E-hard", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Hard / a lot"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 1118567289, "node_id": "MDU6TGFiZWwxMTE4NTY3Mjg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-intra-doc-links", "name": "A-intra-doc-links", "color": "f7e101", "default": false, "description": "Area: Intra-doc links, the ability to link to items in docs by name"}, {"id": 2311820664, "node_id": "MDU6TGFiZWwyMzExODIwNjY0", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-cross-crate-reexports", "name": "A-cross-crate-reexports", "color": "f7e101", "default": false, "description": "Area: Documentation that has been re-exported from a different crate"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 27, "created_at": "2019-10-30T20:28:38Z", "updated_at": "2020-08-30T15:47:49Z", "closed_at": "2020-07-17T03:30:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Previously: https://github.com/rust-lang/rust/issues/60883, https://github.com/rust-lang/rust/issues/59833\r\n\r\nThis is the last major issue blocking the stabilization of intra doc links (https://github.com/rust-lang/rust/issues/43466)\r\n\r\nCurrently, if you use intra-doc links on some item:\r\n\r\n```rust\r\n// crate \"foo\"\r\n\r\n/// This is not [Baz]\r\npub struct Bar;\r\n\r\npub struct Baz;\r\n```\r\n\r\nthe docs will not turn up on any crate reexporting it\r\n\r\n```rust\r\npub use foo::Bar;\r\n```\r\n\r\nThe docs will have a bare `[Baz]` instead of the appropriate intra-doc link, because we resolve intra-doc links locally. (More examples in https://github.com/rust-lang/rust/issues/60883, https://github.com/rust-lang/rust/issues/59833)\r\n\r\n\r\n\r\n------\r\n\r\nThis is tricky to fix; we throw away module resolution information before packaging up crate metadata, so it's not possible to \"unseal\" a crate and rerun the resolution within it. One solution would be to pre-detect intra doc links and store resolutions in metadata, but this would be expensive since it involves parsing everything as markdown unconditionally.\r\n\r\nA better solution is to save resolution information in the metadata, as some kind of tree keyed to the module.\r\n\r\n@eddyb's [comment](https://github.com/rust-lang/rust/pull/47046#issuecomment-354824520) outlines the correct approach to use here\r\n\r\n> What you actually want to persist cross-crate is the scope information that lets you resolve names in a certain (module) scope, after the fact. It'd also allow not doing all the the resolver hacks.\r\n> \r\n> And there's a very good reason to want it in the compiler, at least same-crate: we could (finally) tell if a type is in scope somewhere so we can actually print `Vec<_>` instead of `std::vec::Vec<_>` etc.\r\n\r\n\r\n\r\n\r\nBasically, instead of throwing away resolver metadata, we should serialize it into some form and store it in the metadata, so that it can be reloaded as necessary.\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65983/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65983/timeline", "performed_via_github_app": null, "state_reason": "completed"}