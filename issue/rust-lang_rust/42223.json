{"url": "https://api.github.com/repos/rust-lang/rust/issues/42223", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42223/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42223/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42223/events", "html_url": "https://github.com/rust-lang/rust/issues/42223", "id": 231413874, "node_id": "MDU6SXNzdWUyMzE0MTM4NzQ=", "number": 42223, "title": "Redundancy in `trace_macro` output", "user": {"login": "jorendorff", "id": 283361, "node_id": "MDQ6VXNlcjI4MzM2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/283361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorendorff", "html_url": "https://github.com/jorendorff", "followers_url": "https://api.github.com/users/jorendorff/followers", "following_url": "https://api.github.com/users/jorendorff/following{/other_user}", "gists_url": "https://api.github.com/users/jorendorff/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorendorff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorendorff/subscriptions", "organizations_url": "https://api.github.com/users/jorendorff/orgs", "repos_url": "https://api.github.com/users/jorendorff/repos", "events_url": "https://api.github.com/users/jorendorff/events{/privacy}", "received_events_url": "https://api.github.com/users/jorendorff/received_events", "type": "User", "site_admin": true}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-25T18:04:20Z", "updated_at": "2017-07-27T22:29:35Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "(filed per https://github.com/rust-lang/rust/pull/42103#issuecomment-303183649 )\r\n\r\n`trace_macro` output now contains both \"before\" and \"after\" text.\r\n\r\nBut often a macro-call expands to another macro-call. In that case, we get redundant lines from `trace_macro`:\r\n\r\n```console\r\n note: trace_macro\r\n   --> trace-macro.rs:14:5\r\n   |\r\n14 |     println!(\"Hello, World!\");\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   |\r\n   = note: expanding `println! { \"Hello, World!\" }`\r\n   = note: to `print ! ( concat ! ( \"Hello, World!\" , \"\\n\" ) )`\r\n   = note: expanding `print! { concat ! ( \"Hello, World!\" , \"\\n\" ) }`\r\n   = note: to `$crate :: io :: _print ( format_args ! ( concat ! ( \"Hello, World!\" , \"\\n\" ) )\r\n           )`\r\n```\r\n\r\nThe second \"`expanding`\" note is basically the same as the previous line. We could eliminate that.\r\n\r\nNote that it's also common for a macro-call to expand to code that merely *contains* another macro-call somewhere, and in that case we probably shouldn't elide anything.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42223/timeline", "performed_via_github_app": null, "state_reason": null}