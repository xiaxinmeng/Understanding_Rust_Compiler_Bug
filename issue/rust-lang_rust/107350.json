{"url": "https://api.github.com/repos/rust-lang/rust/issues/107350", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107350/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107350/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107350/events", "html_url": "https://github.com/rust-lang/rust/issues/107350", "id": 1559422863, "node_id": "I_kwDOAAsO6M5c8ueP", "number": 107350, "title": "Infinite loop in `get_all_import_attributes`", "user": {"login": "Jake-Shadle", "id": 2316028, "node_id": "MDQ6VXNlcjIzMTYwMjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2316028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jake-Shadle", "html_url": "https://github.com/Jake-Shadle", "followers_url": "https://api.github.com/users/Jake-Shadle/followers", "following_url": "https://api.github.com/users/Jake-Shadle/following{/other_user}", "gists_url": "https://api.github.com/users/Jake-Shadle/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jake-Shadle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jake-Shadle/subscriptions", "organizations_url": "https://api.github.com/users/Jake-Shadle/orgs", "repos_url": "https://api.github.com/users/Jake-Shadle/repos", "events_url": "https://api.github.com/users/Jake-Shadle/events{/privacy}", "received_events_url": "https://api.github.com/users/Jake-Shadle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-01-27T09:19:03Z", "updated_at": "2023-01-27T21:20:36Z", "closed_at": "2023-01-27T21:20:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\npub mod oops {\r\n    pub use crate::oops::OhNo;\r\n\r\n    mod inner {\r\n        pub enum OhNo {\r\n            Item = 1,\r\n        }\r\n    }\r\n\r\n    pub use inner::*;\r\n}\r\n```\r\n\r\nI expected to see this happen: `rustdoc` successfully documents our code\r\n\r\nInstead, this happened: `rustdoc` infinitely loops inside [`get_all_import_attributes`](https://github.com/rust-lang/rust/blame/db137ba7d4415ac77e2b7601ef017ff2ca41b335/src/librustdoc/clean/mod.rs#L2106-L2135)\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.67.0 (fc594f156 2023-01-24)\r\nbinary: rustc\r\ncommit-hash: fc594f15669680fa70d255faec3ca3fb507c3405\r\ncommit-date: 2023-01-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.67.0\r\nLLVM version: 15.0.6\r\n```\r\n\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n thread #2, name = 'rustc', stop reason = signal SIGSTOP\r\n    frame #0: 0x00007f1856b981ed librustc_driver-2e8cbd5b30733393.so`<rustc_middle::hir::map::Map>::get_if_local + 461\r\n    frame #1: 0x00005623c1409031 rustdoc`rustdoc::clean::get_all_import_attributes + 145\r\n    frame #2: 0x00005623c13861f5 rustdoc`<rustdoc::core::DocContext>::with_param_env::<alloc::vec::Vec<rustdoc::clean::types::Item>, rustdoc::clean::clean_maybe_renamed_item::{closure#1}> + 3205\r\n    frame #3: 0x00005623c13f5c2c rustdoc`<&mut rustdoc::clean::clean_doc_module::{closure#2} as core::ops::function::FnOnce<(&(&rustc_hir::hir::Item, core::option::Option<rustc_span::symbol::Symbol>, core::option::Option<rustc_hir::hir_id::HirId>),)>>::call_once + 188\r\n    frame #4: 0x00005623c121c154 rustdoc`<alloc::vec::Vec<rustdoc::clean::types::Item> as alloc::vec::spec_extend::SpecExtend<rustdoc::clean::types::Item, core::iter::adapters::flatten::FlatMap<core::slice::iter::Iter<(&rustc_hir::hir::Item, core::option::Option<rustc_span::symbol::Symbol>, core::option::Option<rustc_hir::hir_id::HirId>)>, alloc::vec::Vec<rustdoc::clean::types::Item>, rustdoc::clean::clean_doc_module::{closure#2}>>>::spec_extend + 596\r\n    frame #5: 0x00005623c13fa862 rustdoc`rustdoc::clean::clean_doc_module + 370\r\n    frame #6: 0x00005623c13f548b rustdoc`<&mut rustdoc::clean::clean_doc_module::{closure#1} as core::ops::function::FnMut<(&rustdoc::visit_ast::Module,)>>::call_mut + 267\r\n    frame #7: 0x00005623c121b62e rustdoc`<alloc::vec::Vec<rustdoc::clean::types::Item> as alloc::vec::spec_extend::SpecExtend<rustdoc::clean::types::Item, core::iter::adapters::filter_map::FilterMap<core::slice::iter::Iter<rustdoc::visit_ast::Module>, rustdoc::clean::clean_doc_module::{closure#1}>>>::spec_extend + 94\r\n    frame #8: 0x00005623c13fa813 rustdoc`rustdoc::clean::clean_doc_module + 291\r\n    frame #9: 0x00005623c11359be rustdoc`rustdoc::clean::utils::krate + 2718\r\n    frame #10: 0x00005623c12ecb24 rustdoc`<rustc_session::session::Session>::time::<rustdoc::clean::types::Crate, rustdoc::core::run_global_ctxt::{closure#4}> + 116\r\n    frame #11: 0x00005623c138b7b4 rustdoc`rustdoc::core::run_global_ctxt + 2228\r\n    frame #12: 0x00005623c12eec54 rustdoc`<rustc_interface::passes::QueryContext>::enter::<rustdoc::main_args::{closure#1}::{closure#0}::{closure#1}, core::result::Result<(), rustc_errors::ErrorGuaranteed>> + 468\r\n    frame #13: 0x00005623c115253a rustdoc`<rustc_interface::interface::Compiler>::enter::<rustdoc::main_args::{closure#1}::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>> + 714\r\n    frame #14: 0x00005623c128d20a rustdoc`rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustdoc::main_args::{closure#1}>::{closure#0}::{closure#0}> + 458\r\n    frame #15: 0x00005623c1254615 rustdoc`<scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustdoc::main_args::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>> + 1493\r\n    frame #16: 0x00005623c129e8f0 rustdoc`std::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustdoc::main_args::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>> + 128\r\n    frame #17: 0x00005623c13f18ff rustdoc`<<std::thread::Builder>::spawn_unchecked_<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustdoc::main_args::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>::{closure#1} as core::ops::function::FnOnce<()>>::call_once::{shim:vtable#0} + 207\r\n    frame #18: 0x00007f1855572803 libstd-2a15b3cd0948397b.so`std::sys::unix::thread::Thread::new::thread_start::h1541b4390bbc26ca [inlined] _$LT$alloc..boxed..Box$LT$F$C$A$GT$$u20$as$u20$core..ops..function..FnOnce$LT$Args$GT$$GT$::call_once::ha93239d92e7b610d at boxed.rs:2000:9\r\n    frame #19: 0x00007f18555727fd libstd-2a15b3cd0948397b.so`std::sys::unix::thread::Thread::new::thread_start::h1541b4390bbc26ca [inlined] _$LT$alloc..boxed..Box$LT$F$C$A$GT$$u20$as$u20$core..ops..function..FnOnce$LT$Args$GT$$GT$::call_once::hebda57b0236de612 at boxed.rs:2000:9\r\n    frame #20: 0x00007f18555727f6 libstd-2a15b3cd0948397b.so`std::sys::unix::thread::Thread::new::thread_start::h1541b4390bbc26ca at thread.rs:108:17\r\n    frame #21: 0x00007f185531412d libc.so.6`start_thread + 717\r\n    frame #22: 0x00007f1855395bc0 libc.so.6`__clone3 + 48\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107350/timeline", "performed_via_github_app": null, "state_reason": "completed"}