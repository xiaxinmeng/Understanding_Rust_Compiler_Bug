{"url": "https://api.github.com/repos/rust-lang/rust/issues/56320", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56320/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56320/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56320/events", "html_url": "https://github.com/rust-lang/rust/issues/56320", "id": 385408351, "node_id": "MDU6SXNzdWUzODU0MDgzNTE=", "number": 56320, "title": "Building cargo_metadata fails on Windows", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-28T18:49:37Z", "updated_at": "2018-11-29T18:21:53Z", "closed_at": "2018-11-29T18:21:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We are seeing the following failure only on [our Windows CI](https://ci.appveyor.com/project/solson63299/miri/builds/20624555/job/ssi3idv5qa6nxuoq):\r\n\r\n```\r\n!dbg attachment points at wrong subprogram for function\r\n!6700 = distinct !DISubprogram(name: \"deserialize_string<serde_json::read::StrRead,serde::de::impls::StringVisitor>\", linkageName: \"_ZN119_$LT$$RF$$u27$a$u20$mut$u20$serde_json..de..Deserializer$LT$R$GT$$u20$as$u20$serde..de..Deserializer$LT$$u27$de$GT$$GT$18deserialize_string17hcce605131e43c7c6E\", scope: !242, file: !241, line: 1226, type: !6701, isLocal: true, isDefinition: true, scopeLine: 1226, flags: DIFlagPrototyped, isOptimized: true, unit: !52, templateParams: !6707, retainedNodes: !6704)\r\nvoid (%\"core::result::Result<alloc::string::String, serde_json::error::Error>\"*, %\"serde_json::de::Deserializer<serde_json::read::StrRead>\"*)* @\"_ZN119_$LT$$RF$$u27$a$u20$mut$u20$serde_json..de..Deserializer$LT$R$GT$$u20$as$u20$serde..de..Deserializer$LT$$u27$de$GT$$GT$18deserialize_string17hcce605131e43c7c6E\"\r\n  call void @llvm.dbg.value(metadata [0 x i8]* %55, metadata !6799, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !6806\r\n!6806 = !DILocation(line: 1, scope: !6800)\r\n!6800 = distinct !DISubprogram(name: \"visit_str<serde_json::error::Error>\", linkageName: \"_ZN85_$LT$serde..de..impls..StringVisitor$u20$as$u20$serde..de..Visitor$LT$$u27$de$GT$$GT$9visit_str17h0bec0b0194cb7ea5E\", scope: !1235, file: !1234, line: 322, type: !6801, isLocal: true, isDefinition: true, scopeLine: 322, flags: DIFlagPrototyped, isOptimized: true, unit: !52, templateParams: !6805, retainedNodes: !6803)\r\n!6800 = distinct !DISubprogram(name: \"visit_str<serde_json::error::Error>\", linkageName: \"_ZN85_$LT$serde..de..impls..StringVisitor$u20$as$u20$serde..de..Visitor$LT$$u27$de$GT$$GT$9visit_str17h0bec0b0194cb7ea5E\", scope: !1235, file: !1234, line: 322, type: !6801, isLocal: true, isDefinition: true, scopeLine: 322, flags: DIFlagPrototyped, isOptimized: true, unit: !52, templateParams: !6805, retainedNodes: !6803)\r\n!dbg attachment points at wrong subprogram for function\r\n!10326 = distinct !DISubprogram(name: \"deserialize_struct<serde_json::read::StrRead,cargo_metadata::_IMPL_DESERIALIZE_FOR_Resolve::{{impl}}::deserialize::__Visitor>\", linkageName: \"_ZN119_$LT$$RF$$u27$a$u20$mut$u20$serde_json..de..Deserializer$LT$R$GT$$u20$as$u20$serde..de..Deserializer$LT$$u27$de$GT$$GT$18deserialize_struct17h21b5155ed4594543E\", scope: !242, file: !241, line: 1511, type: !10327, isLocal: true, isDefinition: true, scopeLine: 1511, flags: DIFlagPrototyped, isOptimized: true, unit: !52, templateParams: !10377, retainedNodes: !10346)\r\nvoid (%\"core::result::Result<Resolve, serde_json::error::Error>\"*, %\"serde_json::de::Deserializer<serde_json::read::StrRead>\"*, [0 x i8]*, i64, [0 x { [0 x i8]*, i64 }]*, i64)* @\"_ZN119_$LT$$RF$$u27$a$u20$mut$u20$serde_json..de..Deserializer$LT$R$GT$$u20$as$u20$serde..de..Deserializer$LT$$u27$de$GT$$GT$18deserialize_struct17h21b5155ed4594543E\"\r\n  call void @llvm.dbg.value(metadata { [0 x i8]*, i64 }* undef, metadata !11012, metadata !DIExpression(DW_OP_deref)), !dbg !11020\r\n!11020 = !DILocation(line: 1, scope: !11013)\r\n!11013 = distinct !DISubprogram(name: \"visit_str<serde_json::error::Error>\", linkageName: \"_ZN220_$LT$cargo_metadata.._IMPL_DESERIALIZE_FOR_Resolve..$LT$impl$u20$serde..de..Deserialize$LT$$u27$de$GT$$u20$for$u20$cargo_metadata..Resolve$GT$..deserialize..__FieldVisitor$u20$as$u20$serde..de..Visitor$LT$$u27$de$GT$$GT$9visit_str17hd07c068626818757E\", scope: !10434, file: !53, line: 131, type: !11014, isLocal: true, isDefinition: true, scopeLine: 131, flags: DIFlagPrototyped, isOptimized: true, unit: !52, templateParams: !11018, retainedNodes: !11016)\r\n!11013 = distinct !DISubprogram(name: \"visit_str<serde_json::error::Error>\", linkageName: \"_ZN220_$LT$cargo_metadata.._IMPL_DESERIALIZE_FOR_Resolve..$LT$impl$u20$serde..de..Deserialize$LT$$u27$de$GT$$u20$for$u20$cargo_metadata..Resolve$GT$..deserialize..__FieldVisitor$u20$as$u20$serde..de..Visitor$LT$$u27$de$GT$$GT$9visit_str17hd07c068626818757E\", scope: !10434, file: !53, line: 131, type: !11014, isLocal: true, isDefinition: true, scopeLine: 131, flags: DIFlagPrototyped, isOptimized: true, unit: !52, templateParams: !11018, retainedNodes: !11016)\r\nconflicting debug info for argument\r\n  call void @llvm.dbg.value(metadata { [0 x i8]*, i64 }* undef, metadata !11012, metadata !DIExpression(DW_OP_deref)), !dbg !11020\r\n!10348 = !DILocalVariable(name: \"_name\", arg: 2, scope: !10326, file: !466, line: 1, type: !5)\r\n!11012 = !DILocalVariable(name: \"__value\", arg: 2, scope: !11013, file: !53, line: 1, type: !5)\r\n!dbg attachment points at wrong subprogram for function\r\n!11789 = distinct !DISubprogram(name: \"deserialize_struct<serde_json::read::StrRead,cargo_metadata::_IMPL_DESERIALIZE_FOR_Node::{{impl}}::deserialize::__Visitor>\", linkageName: \"_ZN119_$LT$$RF$$u27$a$u20$mut$u20$serde_json..de..Deserializer$LT$R$GT$$u20$as$u20$serde..de..Deserializer$LT$$u27$de$GT$$GT$18deserialize_struct17h502d33d321991abcE\", scope: !242, file: !241, line: 1511, type: !11790, isLocal: true, isDefinition: true, scopeLine: 1511, flags: DIFlagPrototyped, isOptimized: true, unit: !52, templateParams: !11827, retainedNodes: !11796)\r\nvoid (%\"core::result::Result<Node, serde_json::error::Error>\"*, %\"serde_json::de::Deserializer<serde_json::read::StrRead>\"*, [0 x i8]*, i64, [0 x { [0 x i8]*, i64 }]*, i64)* @\"_ZN119_$LT$$RF$$u27$a$u20$mut$u20$serde_json..de..Deserializer$LT$R$GT$$u20$as$u20$serde..de..Deserializer$LT$$u27$de$GT$$GT$18deserialize_struct17h502d33d321991abcE\"\r\n  call void @llvm.dbg.value(metadata { [0 x i8]*, i64 }* undef, metadata !12257, metadata !DIExpression(DW_OP_deref)), !dbg !12263\r\n!12263 = !DILocation(line: 1, scope: !12258)\r\n!12258 = distinct !DISubprogram(name: \"visit_str<serde_json::error::Error>\", linkageName: \"_ZN214_$LT$cargo_metadata.._IMPL_DESERIALIZE_FOR_Node..$LT$impl$u20$serde..de..Deserialize$LT$$u27$de$GT$$u20$for$u20$cargo_metadata..Node$GT$..deserialize..__FieldVisitor$u20$as$u20$serde..de..Visitor$LT$$u27$de$GT$$GT$9visit_str17hd1ce0cffad1eb3ccE\", scope: !11890, file: !53, line: 141, type: !12259, isLocal: true, isDefinition: true, scopeLine: 141, flags: DIFlagPrototyped, isOptimized: true, unit: !52, templateParams: !11018, retainedNodes: !12261)\r\n!12258 = distinct !DISubprogram(name: \"visit_str<serde_json::error::Error>\", linkageName: \"_ZN214_$LT$cargo_metadata.._IMPL_DESERIALIZE_FOR_Node..$LT$impl$u20$serde..de..Deserialize$LT$$u27$de$GT$$u20$for$u20$cargo_metadata..Node$GT$..deserialize..__FieldVisitor$u20$as$u20$serde..de..Visitor$LT$$u27$de$GT$$GT$9visit_str17hd1ce0cffad1eb3ccE\", scope: !11890, file: !53, line: 141, type: !12259, isLocal: true, isDefinition: true, scopeLine: 141, flags: DIFlagPrototyped, isOptimized: true, unit: !52, templateParams: !11018, retainedNodes: !12261)\r\nconflicting debug info for argument\r\n  call void @llvm.dbg.value(metadata { [0 x i8]*, i64 }* undef, metadata !12257, metadata !DIExpression(DW_OP_deref)), !dbg !12263\r\n!11798 = !DILocalVariable(name: \"_name\", arg: 2, scope: !11789, file: !466, line: 1, type: !5)\r\n!12257 = !DILocalVariable(name: \"__value\", arg: 2, scope: !12258, file: !53, line: 1, type: !5)\r\n!dbg attachment points at wrong subprogram for function\r\n!6692 = distinct !DISubprogram(name: \"deserialize_string<serde_json::read::StrRead,serde::de::impls::StringVisitor>\", linkageName: \"_ZN119_$LT$$RF$$u27$a$u20$mut$u20$serde_json..de..Deserializer$LT$R$GT$$u20$as$u20$serde..de..Deserializer$LT$$u27$de$GT$$GT$18deserialize_string17hcce605131e43c7c6E\", scope: !242, file: !241, line: 1226, type: !6693, isLocal: true, isDefinition: true, scopeLine: 1226, flags: DIFlagPrototyped, isOptimized: true, unit: !52, templateParams: !6699, retainedNodes: !6696)\r\nvoid (%\"core::result::Result<alloc::string::String, serde_json::error::Error>\"*, %\"serde_json::de::Deserializer<serde_json::read::StrRead>\"*)* @\"_ZN119_$LT$$RF$$u27$a$u20$mut$u20$serde_json..de..Deserializer$LT$R$GT$$u20$as$u20$serde..de..Deserializer$LT$$u27$de$GT$$GT$18deserialize_string17hcce605131e43c7c6E\"\r\n  call void @llvm.dbg.value(metadata [0 x i8]* %67, metadata !6791, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !6801\r\n!6801 = !DILocation(line: 1889, scope: !6792, inlinedAt: !6802)\r\n!6840 = distinct !DISubprogram(name: \"visit_str<serde_json::error::Error>\", linkageName: \"_ZN85_$LT$serde..de..impls..StringVisitor$u20$as$u20$serde..de..Visitor$LT$$u27$de$GT$$GT$9visit_str17h0bec0b0194cb7ea5E\", scope: !1235, file: !1234, line: 322, type: !6841, isLocal: true, isDefinition: true, scopeLine: 322, flags: DIFlagPrototyped, isOptimized: true, unit: !52, templateParams: !6846, retainedNodes: !6843)\r\n!6840 = distinct !DISubprogram(name: \"visit_str<serde_json::error::Error>\", linkageName: \"_ZN85_$LT$serde..de..impls..StringVisitor$u20$as$u20$serde..de..Visitor$LT$$u27$de$GT$$GT$9visit_str17h0bec0b0194cb7ea5E\", scope: !1235, file: !1234, line: 322, type: !6841, isLocal: true, isDefinition: true, scopeLine: 322, flags: DIFlagPrototyped, isOptimized: true, unit: !52, templateParams: !6846, retainedNodes: !6843)\r\n!dbg attachment points at wrong subprogram for function\r\n!10318 = distinct !DISubprogram(name: \"deserialize_struct<serde_json::read::StrRead,cargo_metadata::_IMPL_DESERIALIZE_FOR_Resolve::{{impl}}::deserialize::__Visitor>\", linkageName: \"_ZN119_$LT$$RF$$u27$a$u20$mut$u20$serde_json..de..Deserializer$LT$R$GT$$u20$as$u20$serde..de..Deserializer$LT$$u27$de$GT$$GT$18deserialize_struct17h21b5155ed4594543E\", scope: !242, file: !241, line: 1511, type: !10319, isLocal: true, isDefinition: true, scopeLine: 1511, flags: DIFlagPrototyped, isOptimized: true, unit: !52, templateParams: !10369, retainedNodes: !10338)\r\nvoid (%\"core::result::Result<Resolve, serde_json::error::Error>\"*, %\"serde_json::de::Deserializer<serde_json::read::StrRead>\"*, [0 x i8]*, i64, [0 x { [0 x i8]*, i64 }]*, i64)* @\"_ZN119_$LT$$RF$$u27$a$u20$mut$u20$serde_json..de..Deserializer$LT$R$GT$$u20$as$u20$serde..de..Deserializer$LT$$u27$de$GT$$GT$18deserialize_struct17h21b5155ed4594543E\"\r\n  call void @llvm.dbg.value(metadata [0 x i8]* %429, metadata !11032, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)) #14, !dbg !11037\r\n!11037 = !DILocation(line: 1, scope: !11033, inlinedAt: !11038)\r\n!11098 = distinct !DISubprogram(name: \"visit_str<serde_json::error::Error>\", linkageName: \"_ZN220_$LT$cargo_metadata.._IMPL_DESERIALIZE_FOR_Resolve..$LT$impl$u20$serde..de..Deserialize$LT$$u27$de$GT$$u20$for$u20$cargo_metadata..Resolve$GT$..deserialize..__FieldVisitor$u20$as$u20$serde..de..Visitor$LT$$u27$de$GT$$GT$9visit_str17hd07c068626818757E\", scope: !10420, file: !53, line: 131, type: !11099, isLocal: true, isDefinition: true, scopeLine: 131, flags: DIFlagPrototyped, isOptimized: true, unit: !52, templateParams: !11104, retainedNodes: !11101)\r\n!11098 = distinct !DISubprogram(name: \"visit_str<serde_json::error::Error>\", linkageName: \"_ZN220_$LT$cargo_metadata.._IMPL_DESERIALIZE_FOR_Resolve..$LT$impl$u20$serde..de..Deserialize$LT$$u27$de$GT$$u20$for$u20$cargo_metadata..Resolve$GT$..deserialize..__FieldVisitor$u20$as$u20$serde..de..Visitor$LT$$u27$de$GT$$GT$9visit_str17hd07c068626818757E\", scope: !10420, file: !53, line: 131, type: !11099, isLocal: true, isDefinition: true, scopeLine: 131, flags: DIFlagPrototyped, isOptimized: true, unit: !52, templateParams: !11104, retainedNodes: !11101)\r\nconflicting debug info for argument\r\n  call void @llvm.dbg.value(metadata { [0 x i8]*, i64 }* undef, metadata !11103, metadata !DIExpression(DW_OP_deref)), !dbg !11130\r\n!10340 = !DILocalVariable(name: \"_name\", arg: 2, scope: !10318, file: !466, line: 1, type: !5)\r\n!11103 = !DILocalVariable(name: \"__value\", arg: 2, scope: !11098, file: !53, line: 1, type: !5)\r\n!dbg attachment points at wrong subprogram for function\r\n!11778 = distinct !DISubprogram(name: \"deserialize_struct<serde_json::read::StrRead,cargo_metadata::_IMPL_DESERIALIZE_FOR_Node::{{impl}}::deserialize::__Visitor>\", linkageName: \"_ZN119_$LT$$RF$$u27$a$u20$mut$u20$serde_json..de..Deserializer$LT$R$GT$$u20$as$u20$serde..de..Deserializer$LT$$u27$de$GT$$GT$18deserialize_struct17h502d33d321991abcE\", scope: !242, file: !241, line: 1511, type: !11779, isLocal: true, isDefinition: true, scopeLine: 1511, flags: DIFlagPrototyped, isOptimized: true, unit: !52, templateParams: !11816, retainedNodes: !11785)\r\nvoid (%\"core::result::Result<Node, serde_json::error::Error>\"*, %\"serde_json::de::Deserializer<serde_json::read::StrRead>\"*, [0 x i8]*, i64, [0 x { [0 x i8]*, i64 }]*, i64)* @\"_ZN119_$LT$$RF$$u27$a$u20$mut$u20$serde_json..de..Deserializer$LT$R$GT$$u20$as$u20$serde..de..Deserializer$LT$$u27$de$GT$$GT$18deserialize_struct17h502d33d321991abcE\"\r\n  call void @llvm.dbg.value(metadata [0 x i8]* %390, metadata !11032, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)) #14, !dbg !12270\r\n!12270 = !DILocation(line: 1, scope: !11033, inlinedAt: !12271)\r\n!12277 = distinct !DISubprogram(name: \"visit_str<serde_json::error::Error>\", linkageName: \"_ZN214_$LT$cargo_metadata.._IMPL_DESERIALIZE_FOR_Node..$LT$impl$u20$serde..de..Deserialize$LT$$u27$de$GT$$u20$for$u20$cargo_metadata..Node$GT$..deserialize..__FieldVisitor$u20$as$u20$serde..de..Visitor$LT$$u27$de$GT$$GT$9visit_str17hd1ce0cffad1eb3ccE\", scope: !11854, file: !53, line: 141, type: !12278, isLocal: true, isDefinition: true, scopeLine: 141, flags: DIFlagPrototyped, isOptimized: true, unit: !52, templateParams: !11104, retainedNodes: !12280)\r\n!12277 = distinct !DISubprogram(name: \"visit_str<serde_json::error::Error>\", linkageName: \"_ZN214_$LT$cargo_metadata.._IMPL_DESERIALIZE_FOR_Node..$LT$impl$u20$serde..de..Deserialize$LT$$u27$de$GT$$u20$for$u20$cargo_metadata..Node$GT$..deserialize..__FieldVisitor$u20$as$u20$serde..de..Visitor$LT$$u27$de$GT$$GT$9visit_str17hd1ce0cffad1eb3ccE\", scope: !11854, file: !53, line: 141, type: !12278, isLocal: true, isDefinition: true, scopeLine: 141, flags: DIFlagPrototyped, isOptimized: true, unit: !52, templateParams: !11104, retainedNodes: !12280)\r\nconflicting debug info for argument\r\n  call void @llvm.dbg.value(metadata { [0 x i8]*, i64 }* undef, metadata !12282, metadata !DIExpression(DW_OP_deref)), !dbg !12317\r\n!11787 = !DILocalVariable(name: \"_name\", arg: 2, scope: !11778, file: !466, line: 1, type: !5)\r\n!12282 = !DILocalVariable(name: \"__value\", arg: 2, scope: !12277, file: !53, line: 1, type: !5)\r\nLLVM ERROR: Broken module found, compilation aborted!\r\nerror: Could not compile `cargo_metadata`.\r\n```", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56320/timeline", "performed_via_github_app": null, "state_reason": "completed"}