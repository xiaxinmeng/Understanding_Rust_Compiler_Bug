{"url": "https://api.github.com/repos/rust-lang/rust/issues/57550", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57550/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57550/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57550/events", "html_url": "https://github.com/rust-lang/rust/issues/57550", "id": 398589854, "node_id": "MDU6SXNzdWUzOTg1ODk4NTQ=", "number": 57550, "title": "FFI -L linker paths ignored on Linux but work on Mac", "user": {"login": "danielpclark", "id": 319081, "node_id": "MDQ6VXNlcjMxOTA4MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/319081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielpclark", "html_url": "https://github.com/danielpclark", "followers_url": "https://api.github.com/users/danielpclark/followers", "following_url": "https://api.github.com/users/danielpclark/following{/other_user}", "gists_url": "https://api.github.com/users/danielpclark/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielpclark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielpclark/subscriptions", "organizations_url": "https://api.github.com/users/danielpclark/orgs", "repos_url": "https://api.github.com/users/danielpclark/repos", "events_url": "https://api.github.com/users/danielpclark/events{/privacy}", "received_events_url": "https://api.github.com/users/danielpclark/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 123110, "node_id": "MDU6TGFiZWwxMjMxMTA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-linux", "name": "O-linux", "color": "6e6ec0", "default": false, "description": "Operating system: Linux"}, {"id": 123111, "node_id": "MDU6TGFiZWwxMjMxMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-macos", "name": "O-macos", "color": "6e6ec0", "default": false, "description": "Operating system: macOS"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-12T20:38:17Z", "updated_at": "2019-01-13T08:36:14Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I manage the [Rutie](https://github.com/danielpclark/rutie) project which wraps libruby allowing Ruby & Rust to be used together.  It has taken a long time to discover what the weird behavior was here so let me explain what's going on.\r\n\r\nFirst the environment I test against is a system that has Ruby installed within the main operating system.  But that is not the Ruby I'm providing to cargo/rustc as a linker path to use as I'm using RVM (Ruby Version Manager) to dynamically change the shell environment of which Ruby I'm using and they are stored in a sub directory in my users home directory.  The compiled code doesn't change which Ruby it uses when the shell does, the code only uses whichever Ruby is current during the build process.\r\n\r\nOn Linux (Ubuntu & TravisCI/Linux) for the longest time I would find the linker wouldn't work unless I copied the actual `libruby.so` (eg: `libruby.so.2.6`) file into either `target/debug/deps` or `target/release/deps`.  Then everything passes the continuous integration server tests.\r\n\r\nWithout copying or symlinking the libruby file to my local deps directory I would have to switch away from `cargo:rustc-link-lib=ruby` to `cargo:rustc-link-lib=ruby-2.5` and then only one of the three Ruby versions would pass the tests and that's because Rust found the system installed Ruby but ignored all provided paths via `cargo:rustc-link-search=native=/some/path` or `cargo:rustc-link-search=/some/path` or `cargo:rustc-link-search=dependency=/some/path` with either ruby lib name `ruby` or `ruby-2.5`.\r\n\r\nNow putting having the right name of the lib which works aside, which is different for Mac, the Mac OS would accept the paths provided as shown above and correctly use the correct Ruby, of which RVM had installed, over the systems installed Ruby.\r\n\r\nSo since I've discovered that Rust/cargo wasn't acknowledging paths provided by the linker in which the Ruby library resides I have made it so my `build.rs` script always symlinks the correct lib into the current target profile dependency directory.\r\n\r\nSo here's the working setup for:\r\n\r\n### Linux\r\n\r\nSymlink: `libruby.so.2.6 -> $HOME/.rvm/rubies/ruby-2.6.0/lib/libruby.so.2.6*` in `target/$PROFILE/deps`\r\n\r\n```\r\ncargo:rustc-link-search=/home/travis/.rvm/rubies/ruby-2.6.0/lib\r\ncargo:rustc-link-lib=ruby\r\ncargo:rustc-link-lib=dylib=ruby\r\ncargo:rustc-link-lib=m\r\n```\r\n\r\n### Mac\r\n\r\nNo symlink or copy\r\n\r\n```\r\ncargo:rustc-link-search=/Users/travis/.rvm/rubies/ruby-2.6.0/lib\r\ncargo:rustc-link-lib=ruby.2.6\r\ncargo:rustc-link-lib=dylib=ruby.2.6\r\n```\r\n\r\n---\r\n\r\nAnd yes I know `ruby` is listed twice and that it's not necessary.\r\n\r\nThe main point of this issue is a known working build for **Mac OS** does not behave the same way in **Linux** as the libraries in the provided linked paths are not honored.\r\n\r\nIf you would like to replicate the failure simply comment out the symlink code in the `build.rs` file here: https://github.com/danielpclark/rutie/blob/v0.5.3/build.rs#L174-L182\r\n\r\nThis has all been tested with the latest Rust `rustc 1.31.1 (b6c32da9b 2018-12-18)` and I've been struggling with this same issue over the past couple of years both on my computer and in the CI environment.  As I said I only recently understood where the issue comes from.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57550/timeline", "performed_via_github_app": null, "state_reason": null}