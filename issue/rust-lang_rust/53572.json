{"url": "https://api.github.com/repos/rust-lang/rust/issues/53572", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53572/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53572/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53572/events", "html_url": "https://github.com/rust-lang/rust/issues/53572", "id": 352648336, "node_id": "MDU6SXNzdWUzNTI2NDgzMzY=", "number": 53572, "title": "Bad \"Ambiguous Numeric Type\" Recommendation from Compiler in for loop", "user": {"login": "spwitt", "id": 3409780, "node_id": "MDQ6VXNlcjM0MDk3ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/3409780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spwitt", "html_url": "https://github.com/spwitt", "followers_url": "https://api.github.com/users/spwitt/followers", "following_url": "https://api.github.com/users/spwitt/following{/other_user}", "gists_url": "https://api.github.com/users/spwitt/gists{/gist_id}", "starred_url": "https://api.github.com/users/spwitt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spwitt/subscriptions", "organizations_url": "https://api.github.com/users/spwitt/orgs", "repos_url": "https://api.github.com/users/spwitt/repos", "events_url": "https://api.github.com/users/spwitt/events{/privacy}", "received_events_url": "https://api.github.com/users/spwitt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-08-21T17:59:43Z", "updated_at": "2023-04-04T13:35:26Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The `pow` function cannot be called on an ambiguous numeric type. If `pow` is called on the variable of a `for` loop, the compiler's recommended solution to add a concrete numeric type does not compile.\r\n\r\nExample code with ambiguous numeric type:\r\n```rust\r\npub fn check() {\r\n    for i in 0..1000 {\r\n        println!(\"{}\", i.pow(2));\r\n    }\r\n}\r\n```\r\n\r\nGives the error:\r\n```\r\nerror[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\r\n  --> src/lib.rs:22:26\r\n   |\r\n22 |         println!(\"{}\", i.pow(2));\r\n   |                          ^^^\r\nhelp: you must specify a type for this binding, like `i32`\r\n   |\r\n21 |     for i: i32 in 0..1000 {\r\n   |         ^^^^^^\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0689`\r\n```\r\n\r\nImplementing this recommendation by adding type to variable `i` as shown in the compiler recommendation and trying to compile again gives the error:\r\n```\r\nerror: missing `in` in `for` loop\r\n  --> src/lib.rs:21:10\r\n   |\r\n21 |     for i: i32 in 0..1000 {\r\n   |          ^ help: try adding `in` here\r\n\r\nerror: expected expression, found `:`\r\n  --> src/lib.rs:21:10\r\n   |\r\n21 |     for i: i32 in 0..1000 {\r\n   |          ^ expected expression\r\n\r\nerror: aborting due to 2 previous errors\r\n```\r\n\r\n\r\nNot sure if there is a better solution, but adding a cast to the range rather than specifying the type of the variable worked for me:\r\n```rust\r\npub fn check() {\r\n    for i in 0..1000 as i32 {\r\n        println!(\"{}\", i.pow(2));\r\n    }\r\n}\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53572/timeline", "performed_via_github_app": null, "state_reason": null}