{"url": "https://api.github.com/repos/rust-lang/rust/issues/28968", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/28968/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/28968/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/28968/events", "html_url": "https://github.com/rust-lang/rust/issues/28968", "id": 110867325, "node_id": "MDU6SXNzdWUxMTA4NjczMjU=", "number": 28968, "title": "Tracking Issue for Mutex and RWLock unique accessors", "user": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 219670472, "node_id": "MDU6TGFiZWwyMTk2NzA0NzI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/final-comment-period", "name": "final-comment-period", "color": "1e76d9", "default": false, "description": "In the final comment period and will be merged soon unless new substantive objections are raised."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-10-11T16:47:32Z", "updated_at": "2015-12-06T06:49:09Z", "closed_at": "2015-12-06T06:49:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After #29031, this is now the tracking issue for the stabilization of the following features:\n- [ ] mutex_into_inner\n- [ ] mutex_get_mut\n- [ ] rwlock_into_inner\n- [ ] rwlock_get_mut\n## Original report\n\nAs far as I can tell, it's sound to straight-up-unwrap a Mutex if you have it by value. This would enable one to do:\n\n``` rust\nlet data = Mutex::new(vec![])\ncrossbeam::scope(|scope| {\n  for input in inputs {\n    let data = &data;\n    scope.spawn(move || {\n      let output = expensive_computation(input);\n      data.lock().unwrap().push(output);\n    }\n  }\n});\n\nfor expensive in data.into_inner() {\n  non_thread_safe(expensive);\n}\n```\n\nWhich today requires mutexing an `&mut`:\n\n``` rust\nlet mut data = vec![];\n{\n  let data_mutex = Mutex::new(&mut data);\n  crossbeam::scope(|scope| {\n    for input in inputs {\n      let data = &data_mutex;\n      scope.spawn(move || {\n        let output = expensive_computation(input);\n        data.lock().unwrap().push(output);\n      }\n    }\n  });\n}\n\nfor expensive in data.into_inner() {\n  non_thread_safe(expensive);\n}\n```\n\nGiven Arc can be unwrapped, this would also allow the last `Arc<Mutex<T>>` in some concurrent context to be fully unwrapped to a `T`.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/28968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/28968/timeline", "performed_via_github_app": null, "state_reason": "completed"}