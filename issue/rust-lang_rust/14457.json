{"url": "https://api.github.com/repos/rust-lang/rust/issues/14457", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/14457/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/14457/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/14457/events", "html_url": "https://github.com/rust-lang/rust/issues/14457", "id": 34364440, "node_id": "MDU6SXNzdWUzNDM2NDQ0MA==", "number": 14457, "title": "rustuv deadlocks at shutdown when spawning a \"daemon\" subprocess", "user": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-27T11:47:20Z", "updated_at": "2014-05-27T16:13:01Z", "closed_at": "2014-05-27T16:13:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "To work around #14410, I'm using forget() to make a subprocess stay up longer than its (rust) parent. But while that works with libnative, that deadlocks on shutdown with rustuv. It's not even wait()ing on its child, because once the child quits, it's still stuck.\n\n``` rust\nextern crate green;\nextern crate rustuv;\n\nuse std::io::process;\nuse std::io::process::Command;\n\n#[start]\nfn start(argc: int, argv: **u8) -> int {\n    green::start(argc, argv, rustuv::event_loop, main)\n}\n\nfn main() {\n    let process = Command::new(\"sleep\")\n        .arg(\"10\")\n        .stdin(process::Ignored)\n        .stdout(process::Ignored)\n        .stderr(process::Ignored)\n        .detached()\n        .spawn()\n        .ok();\n    unsafe { std::mem::forget(process); }\n}\n```\n\nIf you wait the 10 seconds it takes for sleep to end, the above test program still is stuck.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/14457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/14457/timeline", "performed_via_github_app": null, "state_reason": "completed"}