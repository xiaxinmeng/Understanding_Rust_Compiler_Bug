{"url": "https://api.github.com/repos/rust-lang/rust/issues/108345", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108345/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108345/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108345/events", "html_url": "https://github.com/rust-lang/rust/issues/108345", "id": 1595191348, "node_id": "I_kwDOAAsO6M5fFLA0", "number": 108345, "title": "False positive \"lifetime may not live long enough\" with Cow, ToOwned and Sized", "user": {"login": "EqualMa", "id": 34654503, "node_id": "MDQ6VXNlcjM0NjU0NTAz", "avatar_url": "https://avatars.githubusercontent.com/u/34654503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EqualMa", "html_url": "https://github.com/EqualMa", "followers_url": "https://api.github.com/users/EqualMa/followers", "following_url": "https://api.github.com/users/EqualMa/following{/other_user}", "gists_url": "https://api.github.com/users/EqualMa/gists{/gist_id}", "starred_url": "https://api.github.com/users/EqualMa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EqualMa/subscriptions", "organizations_url": "https://api.github.com/users/EqualMa/orgs", "repos_url": "https://api.github.com/users/EqualMa/repos", "events_url": "https://api.github.com/users/EqualMa/events{/privacy}", "received_events_url": "https://api.github.com/users/EqualMa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-02-22T14:18:55Z", "updated_at": "2023-02-27T23:12:19Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::borrow::Cow;\r\n\r\npub trait Trait {\r\n    fn method(self) -> Cow<'static, str>\r\n    where\r\n        Self: Sized;\r\n}\r\n\r\nimpl Trait for Cow<'_, str> {\r\n    fn method(self) -> Cow<'static, str>\r\n    where\r\n        Self: Sized,\r\n    {\r\n        Cow::<'static, str>::Borrowed(\"\")\r\n    }\r\n}\r\n```\r\n\r\nI expected to see this happen: it compiles.\r\n\r\nInstead, this happened: `lifetime may not live long enough`\r\n\r\nIf I remove the `where Self: Sized` in both trait declaration and implementation, it compiles. However, in real world application, there are other methods in this trait so I have to add `where Self: Sized` to make the trait dyn-safe.\r\n\r\nIf I remove the `where Self: Sized` only in implementation, it compiles. However, If the return type is changed to `Option<Cow<'static, str>>`, the code would warn about `impl method assumes more implied bounds than the corresponding trait method`. I think this might be a bug.\r\n\r\n```rust\r\nuse std::borrow::Cow;\r\n\r\npub trait Trait {\r\n    fn method(self) -> Option<Cow<'static, str>>\r\n    where\r\n        Self: Sized;\r\n}\r\n\r\nimpl Trait for Cow<'_, str> {\r\n    fn method(self) -> Option<Cow<'static, str>> {\r\n        None\r\n    }\r\n}\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.67.1 (d5a82bbd2 2023-02-07)\r\nbinary: rustc\r\ncommit-hash: d5a82bbd26e1ad8b7401f6a718a9c57c96905483\r\ncommit-date: 2023-02-07\r\nhost: aarch64-apple-darwin\r\nrelease: 1.67.1\r\nLLVM version: 15.0.6\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nerror: lifetime may not live long enough\r\n  --> src/main.rs:14:9\r\n   |\r\n10 |     fn method(self) -> Cow<'static, str>\r\n   |               ---- has type `Cow<'1, str>`\r\n...\r\n14 |         Cow::<'static, str>::Borrowed(\"\")\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ proving this value is `Sized` requires that `'1` must outlive `'static`\r\n\r\nerror: could not compile `my-test-2` due to previous error\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108345/timeline", "performed_via_github_app": null, "state_reason": null}