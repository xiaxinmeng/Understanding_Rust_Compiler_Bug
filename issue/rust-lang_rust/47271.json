{"url": "https://api.github.com/repos/rust-lang/rust/issues/47271", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47271/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47271/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47271/events", "html_url": "https://github.com/rust-lang/rust/issues/47271", "id": 286737886, "node_id": "MDU6SXNzdWUyODY3Mzc4ODY=", "number": 47271, "title": "Rust's stdio should not ignore EBADF error on non-windows platforms", "user": {"login": "albel727", "id": 2304990, "node_id": "MDQ6VXNlcjIzMDQ5OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2304990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albel727", "html_url": "https://github.com/albel727", "followers_url": "https://api.github.com/users/albel727/followers", "following_url": "https://api.github.com/users/albel727/following{/other_user}", "gists_url": "https://api.github.com/users/albel727/gists{/gist_id}", "starred_url": "https://api.github.com/users/albel727/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albel727/subscriptions", "organizations_url": "https://api.github.com/users/albel727/orgs", "repos_url": "https://api.github.com/users/albel727/repos", "events_url": "https://api.github.com/users/albel727/events{/privacy}", "received_events_url": "https://api.github.com/users/albel727/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 2238437210, "node_id": "MDU6TGFiZWwyMjM4NDM3MjEw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-io", "name": "A-io", "color": "f7e101", "default": false, "description": "Area: std::io, std::fs, std::net and std::path"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-08T12:59:50Z", "updated_at": "2023-01-26T20:40:54Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I've discovered, that `std::io::stdin/out/err()` streams unconditionally ignore `EBADF`-like IO errors on all platforms. This is done by checking the read/write error in a `handle_ebadf()` function.\r\n\r\nhttps://github.com/rust-lang/rust/blob/1ccb50eaa670f86b69e7a64484a8c97e13169183/src/libstd/io/stdio.rs#L123-L128\r\n\r\nIt appears, that this behavior was first introduced here https://github.com/rust-lang/rust/commit/a7bbd7da4eb98127104fdfd415ad6c746f7e2a12\r\n\r\nThe commit clearly has Windows in mind, where it appears the standard streams may be unavailable. But on Linux, the streams are expected to be always present, so there's no reason to ignore `EBADF` in the first place, as it indicates that something is very wrong.\r\n\r\nNot only that, but due to file descriptor reuse behavior on Unixes, if descriptors 0/1/2 are not open, sometimes the very next calls to `open()` will allocate them. This means, that a program running without properly preallocated 0/1/2 descriptors may start happily `println!()`-ing over its own sqlite database, or send private execution logs across a tcp connection.\r\n\r\nSo, if `std::io::stdout/err()` happens to discover that something yanked the descriptors from under program's feet, the proper response is not to silently ignore `EBADF`, but to **panic()**, before something else unwittingly allocated it with likely disastrous consequences.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47271/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47271/timeline", "performed_via_github_app": null, "state_reason": null}